ARM GAS  /tmp/ccsJYix0.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccsJYix0.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** unsigned int nd_opcode;
  82:src/keys.c    **** 
  83:src/keys.c    **** /*
  84:src/keys.c    ****  *  Return the shift state
  85:src/keys.c    ****  */
  86:src/keys.c    **** enum shifts cur_shift(void) {
ARM GAS  /tmp/ccsJYix0.s 			page 3


  87:src/keys.c    **** 	enum shifts s = shift_down();
  88:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  89:src/keys.c    **** }
  90:src/keys.c    **** 
  91:src/keys.c    **** /*
  92:src/keys.c    ****  *  Set new shift state, return previous state
  93:src/keys.c    ****  */
  94:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  95:src/keys.c    **** 	enum shifts r = cur_shift();
  96:src/keys.c    **** 	State2.shifts = shift;
  97:src/keys.c    **** 	//	State2.alpha_pos = 0;
  98:src/keys.c    **** 	return r;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Clear shift state and return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** enum shifts reset_shift(void) {
 105:src/keys.c    **** 	return set_shift(SHIFT_N);
 106:src/keys.c    **** }
 107:src/keys.c    **** 
 108:src/keys.c    **** /*
 109:src/keys.c    ****  *  Toggle shift state
 110:src/keys.c    ****  */
 111:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 112:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 113:src/keys.c    **** }
 114:src/keys.c    **** 
 115:src/keys.c    **** 
 116:src/keys.c    **** /*
 117:src/keys.c    ****  * Mapping from the key code to a linear index
 118:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 119:src/keys.c    ****  */
 120:src/keys.c    **** #ifdef DM42
 121:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 122:src/keys.c    **** {
 123:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 124:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 125:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 126:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 127:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 128:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 129:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 130:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 131:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 132:src/keys.c    **** 	};
 133:src/keys.c    **** 	return linear_key_map[c];
 134:src/keys.c    **** }
 135:src/keys.c    **** 
 136:src/keys.c    **** static int keycode_to_linear(const keycode c)
 137:src/keys.c    **** {
 138:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 139:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 140:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 141:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 142:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 143:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
ARM GAS  /tmp/ccsJYix0.s 			page 4


 144:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 145:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 146:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 147:src/keys.c    **** 	};
 148:src/keys.c    **** 	return linear_key_map[c];
 149:src/keys.c    **** }
 150:src/keys.c    **** #else
 151:src/keys.c    **** static int keycode_to_linear(const keycode c)
 152:src/keys.c    **** {
 153:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 154:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 155:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 156:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 157:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 158:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 159:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 160:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 161:src/keys.c    **** 	};
 162:src/keys.c    **** 	return linear_key_map[c];
 163:src/keys.c    **** }
 164:src/keys.c    **** #endif
 165:src/keys.c    **** /*
 166:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 167:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 168:src/keys.c    ****  */
 169:src/keys.c    **** int keycode_to_row_column(const int c)
 170:src/keys.c    **** {
 171:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 172:src/keys.c    **** }
 173:src/keys.c    **** 
 174:src/keys.c    **** /*
 175:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 176:src/keys.c    ****  * Used in PUTK and KTYPE.
 177:src/keys.c    ****  */
 178:src/keys.c    **** 
 179:src/keys.c    **** int row_column_to_keycode(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	int row = c / 10 - 1;
 182:src/keys.c    **** 	int col = c % 10 - 1;
 183:src/keys.c    **** 
 184:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 185:src/keys.c    **** 		return -1;
 186:src/keys.c    **** 	return row * 6 + col;
 187:src/keys.c    **** }
 188:src/keys.c    **** 
 189:src/keys.c    **** /*
 190:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 191:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 192:src/keys.c    ****  */
 193:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 194:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 195:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 196:src/keys.c    **** 
 197:src/keys.c    **** #define NO_REG 0x7f
 198:src/keys.c    **** #define NO_SHORT 0x80
 199:src/keys.c    **** #ifdef DM42
 200:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
ARM GAS  /tmp/ccsJYix0.s 			page 5


 201:src/keys.c    **** {
 202:src/keys.c    ****   static const unsigned char map[] = {
 203:src/keys.c    ****     // K00 - K05
 204:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 205:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 206:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 207:src/keys.c    ****     // K10 - K15
 208:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 209:src/keys.c    ****     // K20 - K24
 210:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 211:src/keys.c    ****     // K30 - K34
 212:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 213:src/keys.c    ****     // K40 - K44
 214:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 215:src/keys.c    ****     // K50 - K54
 216:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 217:src/keys.c    ****     // K60 - K64
 218:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 219:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 222:src/keys.c    ****   };
 223:src/keys.c    **** 
 224:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 225:src/keys.c    **** }
 226:src/keys.c    **** #else
 227:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 228:src/keys.c    **** {
 229:src/keys.c    ****   static const unsigned char map[] = {
 230:src/keys.c    **** 		// K00 - K05
 231:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 232:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 233:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 234:src/keys.c    **** 		// K10 - K12
 235:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 236:src/keys.c    **** 		// K20 - K24
 237:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 238:src/keys.c    **** 		// K30 - K34
 239:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 240:src/keys.c    **** 		// K40 - K44
 241:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 242:src/keys.c    **** 		// K50 - K54
 243:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 244:src/keys.c    **** 		// K60 - K63
 245:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 246:src/keys.c    **** 		regY_idx, regZ_idx,
 247:src/keys.c    **** 		// Shifts, etc
 248:src/keys.c    **** 		NO_REG
 249:src/keys.c    **** 	};
 250:src/keys.c    **** 
 251:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 252:src/keys.c    **** }
 253:src/keys.c    **** #endif
 254:src/keys.c    **** /*
 255:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 256:src/keys.c    ****  */
 257:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
ARM GAS  /tmp/ccsJYix0.s 			page 6


 258:src/keys.c    **** {
 259:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 260:src/keys.c    ****   int i, col, max;
 261:src/keys.c    ****   const struct _map {
 262:src/keys.c    ****     unsigned char key, cat[3];
 263:src/keys.c    ****   } *cp;
 264:src/keys.c    **** 
 265:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 266:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 267:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 268:src/keys.c    **** 
 269:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 270:src/keys.c    ****     /*
 271:src/keys.c    ****      *  Normal processing - Not alpha mode
 272:src/keys.c    ****      */
 273:src/keys.c    ****     static const struct _map cmap[] = {
 274:src/keys.c    **** #ifdef DM42
 275:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 276:src/keys.c    **** #else
 277:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 278:src/keys.c    **** #endif
 279:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 280:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 281:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 282:src/keys.c    **** #else
 283:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 284:src/keys.c    **** #endif
 285:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 286:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 287:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 288:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 289:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 290:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 291:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 292:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 293:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 294:src/keys.c    **** #else
 295:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 296:src/keys.c    **** #endif
 297:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 298:src/keys.c    ****     };
 299:src/keys.c    **** 
 300:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 301:src/keys.c    ****       /*
 302:src/keys.c    ****        *  SHOW starts register browser
 303:src/keys.c    ****        */
 304:src/keys.c    ****       return CATALOGUE_REGISTERS;
 305:src/keys.c    ****     }
 306:src/keys.c    **** #if 0
 307:src/keys.c    ****     // conflicts with c# 002 and c# 003
 308:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 309:src/keys.c    ****       /*
 310:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 311:src/keys.c    ****        */
 312:src/keys.c    ****       shift = SHIFT_H;
 313:src/keys.c    ****     }
 314:src/keys.c    **** #endif
ARM GAS  /tmp/ccsJYix0.s 			page 7


 315:src/keys.c    ****     if (shift != SHIFT_H) {
 316:src/keys.c    ****       /*
 317:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 318:src/keys.c    ****        */
 319:src/keys.c    ****       return CATALOGUE_NONE;
 320:src/keys.c    ****     }
 321:src/keys.c    **** 
 322:src/keys.c    ****     /*
 323:src/keys.c    ****      *  Prepare search
 324:src/keys.c    ****      */
 325:src/keys.c    ****     cp = cmap;
 326:src/keys.c    **** #ifndef WINGUI
 327:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 328:src/keys.c    **** #else
 329:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 330:src/keys.c    **** #endif
 331:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 332:src/keys.c    ****   }
 333:src/keys.c    ****   else {
 334:src/keys.c    ****     /*
 335:src/keys.c    ****      *  All the alpha catalogues go here
 336:src/keys.c    ****      */
 337:src/keys.c    **** #ifdef DM42
 338:src/keys.c    ****     static const struct _map amap[] = {
 339:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 340:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 341:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 342:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 343:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 344:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 345:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 346:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 347:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 348:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 349:src/keys.c    ****     };
 350:src/keys.c    **** #else
 351:src/keys.c    ****     static const struct _map amap[] = {
 352:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 353:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 354:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 355:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 356:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 357:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 358:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 359:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 360:src/keys.c    ****     };
 361:src/keys.c    **** #endif
 362:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 363:src/keys.c    **** 
 364:src/keys.c    ****     /*
 365:src/keys.c    ****      *  Prepare search
 366:src/keys.c    ****      */
 367:src/keys.c    ****     cp = amap;
 368:src/keys.c    ****     col = smap[shift];
 369:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 370:src/keys.c    ****   }
 371:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 8


 372:src/keys.c    ****   /*
 373:src/keys.c    ****    *  Search the key in one of the tables
 374:src/keys.c    ****    */
 375:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 376:src/keys.c    ****     if (cp->key == c) {
 377:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 378:src/keys.c    ****       break;
 379:src/keys.c    ****     }
 380:src/keys.c    ****   }
 381:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 382:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 383:src/keys.c    ****     cat = CATALOGUE_NONE;
 384:src/keys.c    ****   }
 385:src/keys.c    ****   return cat;
 386:src/keys.c    **** }
 387:src/keys.c    **** 
 388:src/keys.c    **** #ifdef DM42
 389:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 390:src/keys.c    **** {
 391:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 392:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 393:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 394:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 395:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 396:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 397:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 398:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 399:src/keys.c    **** 
 400:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 401:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 402:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 403:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 404:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 405:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 406:src/keys.c    **** 
 407:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 408:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 409:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 410:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 411:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 412:src/keys.c    **** 
 413:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 414:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 415:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 416:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 417:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 418:src/keys.c    **** 
 419:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 420:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 421:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 422:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 423:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 424:src/keys.c    **** 
 425:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 426:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 427:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 428:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
ARM GAS  /tmp/ccsJYix0.s 			page 9


 429:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 430:src/keys.c    **** 
 431:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 432:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 433:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 434:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 435:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 436:src/keys.c    **** 
 437:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 438:src/keys.c    **** 	};
 439:src/keys.c    **** 	if (State2.alphashift) {
 440:src/keys.c    **** 		if (shift == SHIFT_N)
 441:src/keys.c    **** 			shift = SHIFT_LC_N;
 442:src/keys.c    **** 		else if (shift == SHIFT_G)
 443:src/keys.c    **** 			shift = SHIFT_LC_G;
 444:src/keys.c    **** 	}
 445:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 446:src/keys.c    **** }
 447:src/keys.c    **** #else
 448:src/keys.c    **** /*
 449:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 450:src/keys.c    ****  * the two lower case planes.
 451:src/keys.c    ****  */
 452:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 453:src/keys.c    **** {
 454:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 455:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 456:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 457:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 458:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 459:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 460:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 461:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 462:src/keys.c    **** 
 463:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 464:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 465:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 466:src/keys.c    **** 
 467:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 468:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 469:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 470:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 471:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 472:src/keys.c    **** 
 473:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 474:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 475:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 476:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 477:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 478:src/keys.c    **** 
 479:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 480:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 481:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 482:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 483:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 484:src/keys.c    **** 
 485:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
ARM GAS  /tmp/ccsJYix0.s 			page 10


 486:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 487:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 488:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 489:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 490:src/keys.c    **** 
 491:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 492:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 493:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 494:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 495:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 496:src/keys.c    **** 	};
 497:src/keys.c    **** 	if (State2.alphashift) {
 498:src/keys.c    **** 		if (shift == SHIFT_N)
 499:src/keys.c    **** 			shift = SHIFT_LC_N;
 500:src/keys.c    **** 		else if (shift == SHIFT_G)
 501:src/keys.c    **** 			shift = SHIFT_LC_G;
 502:src/keys.c    **** 	}
 503:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 504:src/keys.c    **** }
 505:src/keys.c    **** #endif
 506:src/keys.c    **** static void init_arg(const enum rarg base) {
 507:src/keys.c    **** 	if (is_bad_cmdline())
 508:src/keys.c    **** 		return;
 509:src/keys.c    **** 	CmdBase = base;
 510:src/keys.c    **** 	State2.ind = 0;
 511:src/keys.c    **** 	State2.digval = 0;
 512:src/keys.c    **** 	State2.numdigit = 0;
 513:src/keys.c    **** 	State2.rarg = 1;
 514:src/keys.c    **** 	State2.dot = 0;
 515:src/keys.c    **** 	State2.local = 0;
 516:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 517:src/keys.c    **** }
 518:src/keys.c    **** 
 519:src/keys.c    **** static void init_cat(enum catalogues cat) {
 520:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 521:src/keys.c    **** 		// Save last catalogue for a later restore
 522:src/keys.c    **** 		State.last_cat = State2.catalogue;
 523:src/keys.c    **** 		CmdLineLength = 0;
 524:src/keys.c    **** 	}
 525:src/keys.c    **** 	process_cmdline();
 526:src/keys.c    **** 
 527:src/keys.c    **** 	State2.labellist = 0;
 528:src/keys.c    **** 	State2.registerlist = 0;
 529:src/keys.c    **** 	State2.status = 0;
 530:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 531:src/keys.c    **** 
 532:src/keys.c    **** 	switch (cat) {
 533:src/keys.c    **** 	case CATALOGUE_LABELS:
 534:src/keys.c    **** 		// Label browser
 535:src/keys.c    **** 		State2.labellist = 1;
 536:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 537:src/keys.c    **** 		break;
 538:src/keys.c    **** 	
 539:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 540:src/keys.c    **** 		// Register browser
 541:src/keys.c    **** 		State2.registerlist = 1;
 542:src/keys.c    **** 		State2.digval = regX_idx;
ARM GAS  /tmp/ccsJYix0.s 			page 11


 543:src/keys.c    **** 		State2.digval2 = 0;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	case CATALOGUE_STATUS:
 547:src/keys.c    **** 		// Flag browser
 548:src/keys.c    **** 		State2.status = 1;
 549:src/keys.c    **** 		break;
 550:src/keys.c    **** 
 551:src/keys.c    **** 	default:
 552:src/keys.c    **** 		// Normal catalogue
 553:src/keys.c    **** 		State2.catalogue = cat;
 554:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 555:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 556:src/keys.c    **** 			// Different catalogue, reset position
 557:src/keys.c    **** 			State.catpos = 0;
 558:src/keys.c    **** 		}
 559:src/keys.c    **** 	}
 560:src/keys.c    **** 	reset_shift();
 561:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 562:src/keys.c    **** 	changed_catalog_state();
 563:src/keys.c    **** #endif
 564:src/keys.c    **** }
 565:src/keys.c    **** 
 566:src/keys.c    **** /*
 567:src/keys.c    ****  *  Reset the internal state to a sane default
 568:src/keys.c    ****  */
 569:src/keys.c    **** void init_state(void) {
 570:src/keys.c    **** #ifndef REALBUILD
 571:src/keys.c    **** 	unsigned int a = State2.flags;
 572:src/keys.c    **** 	unsigned int b = State2.trace;
 573:src/keys.c    **** #else
 574:src/keys.c    **** 	FLAG t = TestFlag;
 575:src/keys.c    **** #endif
 576:src/keys.c    **** 	int v = Voltage;
 577:src/keys.c    **** 	int k = LastKey;
 578:src/keys.c    **** 
 579:src/keys.c    **** 	CmdBase = 0;
 580:src/keys.c    **** 	// Removed: will clear any locals on power off
 581:src/keys.c    **** 	// clrretstk(0);
 582:src/keys.c    **** 
 583:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 584:src/keys.c    **** 	State2.test = TST_NONE;
 585:src/keys.c    **** 	State2.runmode = 1;
 586:src/keys.c    **** 	update_program_bounds(1);
 587:src/keys.c    **** 	set_lift();
 588:src/keys.c    **** 
 589:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 590:src/keys.c    **** 	// but must not be cleared.
 591:src/keys.c    **** 	Voltage = v;
 592:src/keys.c    **** 	LastKey = k;
 593:src/keys.c    **** #ifndef REALBUILD
 594:src/keys.c    **** 	State2.trace = b;
 595:src/keys.c    **** 	State2.flags = a;
 596:src/keys.c    **** #else
 597:src/keys.c    **** 	TestFlag = t;
 598:src/keys.c    **** #endif
 599:src/keys.c    **** 	ShowRegister = regX_idx;
ARM GAS  /tmp/ccsJYix0.s 			page 12


 600:src/keys.c    **** }
 601:src/keys.c    **** 
 602:src/keys.c    **** void soft_init_state(void) {
 603:src/keys.c    **** 	int soft;
 604:src/keys.c    **** 	unsigned int runmode;
 605:src/keys.c    **** 	unsigned int alphas;
 606:src/keys.c    **** 
 607:src/keys.c    **** 	if (CmdLineLength) {
 608:src/keys.c    **** 		CmdLineLength = 0;
 609:src/keys.c    **** 		CmdLineEex = 0;
 610:src/keys.c    **** 		CmdLineDot = 0;
 611:src/keys.c    **** 		return;
 612:src/keys.c    **** 	}
 613:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 614:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 615:src/keys.c    **** 	runmode = State2.runmode;
 616:src/keys.c    **** 	alphas = State2.alphas;
 617:src/keys.c    **** 	init_state();
 618:src/keys.c    **** 	if (soft) {
 619:src/keys.c    **** 		State2.runmode = runmode;
 620:src/keys.c    **** 		State2.alphas = alphas;
 621:src/keys.c    **** 	}
 622:src/keys.c    **** }
 623:src/keys.c    **** 
 624:src/keys.c    **** static int check_confirm(int op) {
 625:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 626:src/keys.c    **** 		const int nilop = argKIND(op);
 627:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 628:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 629:src/keys.c    **** 			return STATE_UNFINISHED;
 630:src/keys.c    **** 		}
 631:src/keys.c    **** #ifndef DM42		
 632:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 633:src/keys.c    **** #endif
 634:src/keys.c    **** #ifdef DM42
 635:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 636:src/keys.c    **** #endif
 637:src/keys.c    **** #ifdef INFRARED
 638:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 639:src/keys.c    **** #endif
 640:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 641:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 642:src/keys.c    **** #endif
 643:src/keys.c    **** 		) {
 644:src/keys.c    **** 			// These commands are not programmable
 645:src/keys.c    **** 			NonProgrammable = 1;
 646:src/keys.c    **** 		}
 647:src/keys.c    **** 	}
 648:src/keys.c    **** 	return op;
 649:src/keys.c    **** }
 650:src/keys.c    **** 
 651:src/keys.c    **** static void set_smode(const enum single_disp d) {
 652:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 653:src/keys.c    **** }
 654:src/keys.c    **** 
 655:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 656:src/keys.c    **** 	const int code = 100 + n;
ARM GAS  /tmp/ccsJYix0.s 			page 13


 657:src/keys.c    **** 	unsigned int pc = state_pc();
 658:src/keys.c    **** 
 659:src/keys.c    **** 	if (State2.runmode) {
 660:src/keys.c    **** 		if (isXROM(pc))
 661:src/keys.c    **** 			pc = 1;
 662:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 663:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 664:src/keys.c    **** 	}
 665:src/keys.c    **** 	return dflt;
 666:src/keys.c    **** }
 667:src/keys.c    **** 
 668:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 669:src/keys.c    ****  * as digits.
 670:src/keys.c    ****  */
 671:src/keys.c    **** static int intltr(int d) {
 672:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 673:src/keys.c    **** }
 674:src/keys.c    **** 
 675:src/keys.c    **** /*
 676:src/keys.c    ****  *  Process a key code in the unshifted mode.
 677:src/keys.c    ****  */
 678:src/keys.c    **** static int process_normal(const keycode c)
 679:src/keys.c    **** {
 680:src/keys.c    **** 	static const unsigned short int op_map[] = {
 681:src/keys.c    **** 		// Row 1
 682:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 683:src/keys.c    **** 		OP_MON  | OP_RECIP,
 684:src/keys.c    **** 		OP_DYA  | OP_POW,
 685:src/keys.c    **** 		OP_MON  | OP_SQRT,
 686:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 687:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 688:src/keys.c    **** 		// Row 2
 689:src/keys.c    **** 		RARG_STO,
 690:src/keys.c    **** 		RARG_RCL,
 691:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 692:src/keys.c    **** 		// Row 3
 693:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 694:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 695:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 696:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 697:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 698:src/keys.c    **** 		// Row 4
 699:src/keys.c    **** 		RARG_XEQ,
 700:src/keys.c    **** 		OP_SPEC | OP_7,
 701:src/keys.c    **** 		OP_SPEC | OP_8,
 702:src/keys.c    **** 		OP_SPEC | OP_9,
 703:src/keys.c    **** 		OP_DYA  | OP_DIV,
 704:src/keys.c    **** 		// Row 5
 705:src/keys.c    **** 		STATE_BST,
 706:src/keys.c    **** 		OP_SPEC | OP_4,
 707:src/keys.c    **** 		OP_SPEC | OP_5,
 708:src/keys.c    **** 		OP_SPEC | OP_6,
 709:src/keys.c    **** 		OP_DYA  | OP_MUL,
 710:src/keys.c    **** 		// Row 6
 711:src/keys.c    **** 		STATE_SST,		// SST
 712:src/keys.c    **** 		OP_SPEC | OP_1,
 713:src/keys.c    **** 		OP_SPEC | OP_2,
ARM GAS  /tmp/ccsJYix0.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_3,
 715:src/keys.c    **** 		OP_DYA  | OP_SUB,
 716:src/keys.c    **** 		// Row 7
 717:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 718:src/keys.c    **** 		OP_SPEC | OP_0,
 719:src/keys.c    **** 		OP_SPEC | OP_DOT,
 720:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 721:src/keys.c    **** 		OP_DYA  | OP_ADD,
 722:src/keys.c    **** #ifdef DM42
 723:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 724:src/keys.c    **** #endif
 725:src/keys.c    **** 	};
 726:src/keys.c    **** 
 727:src/keys.c    **** 	int lc = keycode_to_linear(c);
 728:src/keys.c    **** 	int op = op_map[lc];
 729:src/keys.c    **** 	
 730:src/keys.c    **** 	// The switch handles all the special cases
 731:src/keys.c    **** #ifdef DM42
 732:src/keys.c    **** 	int op_int;
 733:src/keys.c    **** 	if (UState.intm) {
 734:src/keys.c    **** 	  switch (c) {
 735:src/keys.c    **** 	  case K00:
 736:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 737:src/keys.c    **** 	    if (intltr(10)) {
 738:src/keys.c    **** 	      return op;
 739:src/keys.c    **** 	    }
 740:src/keys.c    **** 	    else {
 741:src/keys.c    **** 	      return check_f_key(0, op);
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	  case K01:
 744:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 745:src/keys.c    **** 	    if (intltr(11)) {
 746:src/keys.c    **** 	      return op;
 747:src/keys.c    **** 	    }
 748:src/keys.c    **** 	    else {
 749:src/keys.c    **** 	      return check_f_key(1, op);
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	  case K03:
 752:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 753:src/keys.c    **** 	    if (intltr(12)) {
 754:src/keys.c    **** 	      return op_int;
 755:src/keys.c    **** 	    }
 756:src/keys.c    **** 	    else {
 757:src/keys.c    **** 	      return check_f_key(2, op);
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	  case K30:
 760:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 761:src/keys.c    **** 	    if (intltr(15)) {
 762:src/keys.c    **** 	      return op_int;
 763:src/keys.c    **** 	    }
 764:src/keys.c    **** 	  default:;
 765:src/keys.c    **** 	  }
 766:src/keys.c    **** 	}
 767:src/keys.c    **** #endif  
 768:src/keys.c    **** 
 769:src/keys.c    **** 	switch (c) {
 770:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccsJYix0.s 			page 15


 771:src/keys.c    **** 	case K00:
 772:src/keys.c    **** 		return check_f_key(0, op);
 773:src/keys.c    **** 	case K01:
 774:src/keys.c    **** 		return check_f_key(1, op);
 775:src/keys.c    **** 	case K03:
 776:src/keys.c    **** 		return check_f_key(2, op);
 777:src/keys.c    **** #else
 778:src/keys.c    **** 	case K00:
 779:src/keys.c    **** 	case K01:
 780:src/keys.c    **** 		if (UState.intm)
 781:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 782:src/keys.c    **** 	case K02:
 783:src/keys.c    **** 	case K03:
 784:src/keys.c    **** 		if (intltr(lc + 10)) {
 785:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 786:src/keys.c    **** 			return op;
 787:src/keys.c    **** 		}
 788:src/keys.c    **** 		return check_f_key(lc, op);
 789:src/keys.c    **** #endif		
 790:src/keys.c    **** 	case K_ARROW:
 791:src/keys.c    **** #ifndef DM42
 792:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 793:src/keys.c    **** 		if (intltr(14))
 794:src/keys.c    **** 			return op;
 795:src/keys.c    **** #else
 796:src/keys.c    **** 		if (UState.intm)
 797:src/keys.c    **** 			return op;
 798:src/keys.c    **** #endif
 799:src/keys.c    **** #endif		
 800:src/keys.c    **** 		if (is_bad_cmdline())
 801:src/keys.c    **** 			return STATE_UNFINISHED;
 802:src/keys.c    **** 		process_cmdline_set_lift();
 803:src/keys.c    **** 		State2.arrow = 1;
 804:src/keys.c    **** #ifdef DM42
 805:src/keys.c    **** 		set_menu (9); // arrow menu
 806:src/keys.c    **** 		display_current_menu ();
 807:src/keys.c    **** 		lcd_refresh ();
 808:src/keys.c    **** #else
 809:src/keys.c    **** 		set_shift(SHIFT_G);
 810:src/keys.c    **** #endif
 811:src/keys.c    **** 		break;
 812:src/keys.c    **** 
 813:src/keys.c    **** 	case K_CMPLX:
 814:src/keys.c    **** #ifdef DM42
 815:src/keys.c    **** 	  if (UState.intm)
 816:src/keys.c    **** 	    break; // return nothing
 817:src/keys.c    **** 	  State2.cmplx = 1;
 818:src/keys.c    **** #else
 819:src/keys.c    **** 	  if (UState.intm)
 820:src/keys.c    **** 	    return op;
 821:src/keys.c    **** 	  State2.cmplx = 1;
 822:src/keys.c    **** #endif
 823:src/keys.c    **** 	  break;
 824:src/keys.c    **** 
 825:src/keys.c    **** 	case K24:				// <-
 826:src/keys.c    **** 		if (State2.disp_temp)
 827:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccsJYix0.s 			page 16


 828:src/keys.c    **** 		if (State2.runmode)
 829:src/keys.c    **** 			return op;
 830:src/keys.c    **** 		return STATE_BACKSPACE;
 831:src/keys.c    **** 
 832:src/keys.c    **** 	case K10:				// STO
 833:src/keys.c    **** 	case K11:				// RCL
 834:src/keys.c    **** 	case K30:				// XEQ
 835:src/keys.c    **** 		init_arg((enum rarg)op);
 836:src/keys.c    **** 		break;
 837:src/keys.c    **** 
 838:src/keys.c    **** 	default:
 839:src/keys.c    **** 		return op;			// Keys handled by table
 840:src/keys.c    **** 	}
 841:src/keys.c    **** 	return STATE_UNFINISHED;
 842:src/keys.c    **** }
 843:src/keys.c    **** 
 844:src/keys.c    **** 
 845:src/keys.c    **** /*
 846:src/keys.c    ****  *  Process a key code after f or g shift
 847:src/keys.c    ****  */
 848:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 849:src/keys.c    **** 
 850:src/keys.c    **** #define NO_INT 0xf000
 851:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 852:src/keys.c    **** 		// Row 1
 853:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 854:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 855:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 856:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 857:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 858:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 859:src/keys.c    **** 		// Row 2
 860:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 861:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 862:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 863:src/keys.c    **** 		// Row 3
 864:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 865:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 866:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 867:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 868:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 869:src/keys.c    **** 		// Row 4
 870:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 871:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 872:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 873:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 874:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 875:src/keys.c    **** 		// Row 5
 876:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 877:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 878:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 879:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 880:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 881:src/keys.c    **** 		// Row 6
 882:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 883:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 884:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
ARM GAS  /tmp/ccsJYix0.s 			page 17


 885:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 886:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 887:src/keys.c    **** 		// Row 7
 888:src/keys.c    **** #ifdef INFRARED
 889:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 890:src/keys.c    **** #else
 891:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 892:src/keys.c    **** #endif
 893:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 894:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 895:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 896:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 897:src/keys.c    **** #ifdef DM42
 898:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 899:src/keys.c    **** #endif
 900:src/keys.c    **** 	};
 901:src/keys.c    **** 
 902:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 903:src/keys.c    **** 		STATE_UNFINISHED,
 904:src/keys.c    **** 		STATE_UNFINISHED,
 905:src/keys.c    **** 		OP_DYA  | OP_POW,
 906:src/keys.c    **** 		OP_MON  | OP_SQRT
 907:src/keys.c    **** 	};
 908:src/keys.c    **** 
 909:src/keys.c    **** 	enum shifts shift = reset_shift();
 910:src/keys.c    **** 	int lc = keycode_to_linear(c);
 911:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 912:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 913:src/keys.c    **** 	if (no_int)
 914:src/keys.c    **** 		op &= ~NO_INT;
 915:src/keys.c    **** 
 916:src/keys.c    **** 	switch (c) {
 917:src/keys.c    **** 	case K00:
 918:src/keys.c    **** 	  if (! UState.intm) {
 919:src/keys.c    **** 	    State2.hyp = 1;
 920:src/keys.c    **** 	    State2.dot = op;
 921:src/keys.c    **** 	    // State2.cmplx = 0;
 922:src/keys.c    **** 	    return STATE_UNFINISHED;
 923:src/keys.c    **** 	  }
 924:src/keys.c    **** 	  // fall through
 925:src/keys.c    **** 	case K01:
 926:src/keys.c    **** #ifdef DM42
 927:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 928:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 929:src/keys.c    **** 	  }
 930:src/keys.c    **** 	  break;
 931:src/keys.c    **** #endif
 932:src/keys.c    **** #ifndef DM42
 933:src/keys.c    **** 	case K02:
 934:src/keys.c    **** #endif
 935:src/keys.c    **** 	case K03:
 936:src/keys.c    **** #ifdef DM42
 937:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 938:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 939:src/keys.c    **** 		}
 940:src/keys.c    **** 		break;
 941:src/keys.c    **** #else
ARM GAS  /tmp/ccsJYix0.s 			page 18


 942:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 943:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 944:src/keys.c    **** 		}
 945:src/keys.c    **** 		break;
 946:src/keys.c    **** #endif
 947:src/keys.c    **** 	case K20:				// Alpha
 948:src/keys.c    **** 		if (shift == SHIFT_F) {
 949:src/keys.c    **** 			if (is_bad_cmdline())
 950:src/keys.c    **** 				return STATE_UNFINISHED;
 951:src/keys.c    **** 			process_cmdline_set_lift();
 952:src/keys.c    **** 			State2.alphas = 1;
 953:src/keys.c    **** #ifdef DM42
 954:src/keys.c    **** 			set_menu(16);
 955:src/keys.c    **** 			display_current_menu();
 956:src/keys.c    **** #endif
 957:src/keys.c    **** 		}
 958:src/keys.c    **** 		break;
 959:src/keys.c    **** #ifdef DM42
 960:src/keys.c    **** 	case K31:
 961:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 962:src/keys.c    **** 	    return OP_SPEC | OP_D;
 963:src/keys.c    **** 	  }
 964:src/keys.c    **** 	  break;
 965:src/keys.c    **** 	case K30:
 966:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 967:src/keys.c    **** 	    return OP_SPEC | OP_E;
 968:src/keys.c    **** 	  }
 969:src/keys.c    **** 	  break;
 970:src/keys.c    **** #endif
 971:src/keys.c    **** 	case K51:
 972:src/keys.c    **** 		if (is_bad_cmdline())
 973:src/keys.c    **** 			return STATE_UNFINISHED;
 974:src/keys.c    **** 		process_cmdline_set_lift();
 975:src/keys.c    **** 		State2.test = op;
 976:src/keys.c    **** 		return STATE_UNFINISHED;
 977:src/keys.c    **** 
 978:src/keys.c    **** 	case K50:
 979:src/keys.c    **** #ifndef REALBUILD
 980:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 981:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 982:src/keys.c    **** 			return STATE_UNFINISHED;
 983:src/keys.c    **** 		}
 984:src/keys.c    **** #endif
 985:src/keys.c    **** 	case K52:
 986:src/keys.c    **** 	case K53:
 987:src/keys.c    **** 	case K63:
 988:src/keys.c    **** 	case K64:
 989:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 990:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 991:src/keys.c    **** 				init_arg((enum rarg) op);
 992:src/keys.c    **** 			}
 993:src/keys.c    **** 			return STATE_UNFINISHED;
 994:src/keys.c    **** 		}
 995:src/keys.c    **** 		break;
 996:src/keys.c    **** 
 997:src/keys.c    **** 	default:
 998:src/keys.c    **** 		break;
ARM GAS  /tmp/ccsJYix0.s 			page 19


 999:src/keys.c    **** 	}
1000:src/keys.c    **** 	if (no_int && UState.intm)
1001:src/keys.c    **** 		return STATE_UNFINISHED;
1002:src/keys.c    **** 
1003:src/keys.c    **** 	return check_confirm(op);
1004:src/keys.c    **** #undef NO_INT
1005:src/keys.c    **** }
1006:src/keys.c    **** 
1007:src/keys.c    **** /*
1008:src/keys.c    ****  *  Process a key code after h shift
1009:src/keys.c    ****  */
1010:src/keys.c    **** static int process_h_shifted(const keycode c) {
1011:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1012:src/keys.c    **** #define NO_INT   0x4000
1013:src/keys.c    **** 	static const unsigned short int op_map[] = {
1014:src/keys.c    **** 		// Row 1
1015:src/keys.c    **** 		_RARG   | RARG_STD,
1016:src/keys.c    **** 		_RARG   | RARG_FIX,
1017:src/keys.c    **** 		_RARG   | RARG_SCI,
1018:src/keys.c    **** 		_RARG   | RARG_ENG,
1019:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1020:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1021:src/keys.c    **** 		// Row 2
1022:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1023:src/keys.c    **** 		_RARG   | RARG_VIEW,
1024:src/keys.c    **** 		OP_NIL  | OP_RUP,
1025:src/keys.c    **** 		// Row 3
1026:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1027:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1028:src/keys.c    **** 		OP_MON  | OP_NOT,
1029:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1030:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1031:src/keys.c    **** 		// Row 4
1032:src/keys.c    **** 		_RARG   | RARG_GTO,
1033:src/keys.c    **** 		OP_DYA  | OP_LAND,
1034:src/keys.c    **** 		OP_DYA  | OP_LOR,
1035:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1036:src/keys.c    **** 		OP_DYA  | OP_MOD,
1037:src/keys.c    **** 		// Row 5
1038:src/keys.c    **** 		OP_MON  | OP_FACT,
1039:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1040:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1041:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1042:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1043:src/keys.c    **** 		// Row 6
1044:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1045:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1046:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1047:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1048:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1049:src/keys.c    **** 		// Row 7
1050:src/keys.c    **** 		OP_NIL | OP_OFF,
1051:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1052:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1053:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1054:src/keys.c    **** #else
1055:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
ARM GAS  /tmp/ccsJYix0.s 			page 20


1056:src/keys.c    **** #endif
1057:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1058:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1059:src/keys.c    **** #ifdef DM42
1060:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	};
1063:src/keys.c    **** 
1064:src/keys.c    **** 	int lc = keycode_to_linear(c);
1065:src/keys.c    **** 	int op = op_map[lc];
1066:src/keys.c    **** 	reset_shift();
1067:src/keys.c    **** 
1068:src/keys.c    **** 	// The switch handles all the special cases
1069:src/keys.c    **** 	switch (c) {
1070:src/keys.c    **** 	case K62:
1071:src/keys.c    **** 		if (UState.intm)
1072:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1073:src/keys.c    **** 		else
1074:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1075:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1076:src/keys.c    **** #else
1077:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1078:src/keys.c    **** #endif
1079:src/keys.c    **** 		break;
1080:src/keys.c    **** 
1081:src/keys.c    **** 	case K63:					// Program<->Run mode
1082:src/keys.c    **** 		if (is_bad_cmdline())
1083:src/keys.c    **** 			return STATE_UNFINISHED;
1084:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1085:src/keys.c    **** 		process_cmdline_set_lift();
1086:src/keys.c    **** 		update_program_bounds(1);
1087:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1088:src/keys.c    **** 			set_pc(0);
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 
1091:src/keys.c    **** 	default:
1092:src/keys.c    **** 		break;
1093:src/keys.c    **** 	}
1094:src/keys.c    **** 
1095:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1096:src/keys.c    **** 		if (op & _RARG) {
1097:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1098:src/keys.c    **** 			op = STATE_UNFINISHED;
1099:src/keys.c    **** 		}
1100:src/keys.c    **** 	}
1101:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1102:src/keys.c    **** #undef _RARG
1103:src/keys.c    **** #undef NO_INT
1104:src/keys.c    **** }
1105:src/keys.c    **** 
1106:src/keys.c    **** /*
1107:src/keys.c    ****  *  Process a key code after CPX
1108:src/keys.c    ****  */
1109:src/keys.c    **** static int process_cmplx(const keycode c) {
1110:src/keys.c    **** #define _RARG   0xFF00
1111:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1112:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
ARM GAS  /tmp/ccsJYix0.s 			page 21


1113:src/keys.c    **** 
1114:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1115:src/keys.c    **** 		// Row 1
1116:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1117:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1118:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1119:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1120:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1121:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1122:src/keys.c    **** 		// Row 2
1123:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1124:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1125:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1126:src/keys.c    **** 		// Row 3
1127:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1128:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1129:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1130:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1131:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		// Row 4
1133:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1135:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1136:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1138:src/keys.c    **** 		// Row 5
1139:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1140:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1142:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1143:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1144:src/keys.c    **** 		// Row 6
1145:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1146:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1147:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1148:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1150:src/keys.c    **** 		// Row 7
1151:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1152:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1153:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1154:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1155:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1156:src/keys.c    **** #else
1157:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1158:src/keys.c    **** #endif
1159:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1160:src/keys.c    **** #ifdef DM42
1161:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1162:src/keys.c    **** #endif
1163:src/keys.c    **** 	};
1164:src/keys.c    **** 
1165:src/keys.c    **** 	enum shifts shift = reset_shift();
1166:src/keys.c    **** 	int lc = keycode_to_linear(c);
1167:src/keys.c    **** 	int op = op_map[lc][shift];
1168:src/keys.c    **** 	State2.cmplx = 0;
1169:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 22


1170:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1171:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1172:src/keys.c    **** 		return STATE_UNFINISHED;
1173:src/keys.c    **** 	}
1174:src/keys.c    **** 	if (c == K00) {
1175:src/keys.c    **** 		// HYP
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		State2.hyp = 1;
1178:src/keys.c    **** 		State2.dot = op;
1179:src/keys.c    **** 		State2.cmplx = 1;
1180:src/keys.c    **** 		return STATE_UNFINISHED;
1181:src/keys.c    **** 	}
1182:src/keys.c    **** 
1183:src/keys.c    **** 	if (shift != SHIFT_N) {
1184:src/keys.c    **** 		switch (c) {
1185:src/keys.c    **** 		case K_CMPLX:
1186:src/keys.c    **** 			set_shift(shift);
1187:src/keys.c    **** 			break;
1188:src/keys.c    **** 
1189:src/keys.c    **** 		case K51:
1190:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1191:src/keys.c    **** 				if (is_bad_cmdline())
1192:src/keys.c    **** 					return STATE_UNFINISHED;
1193:src/keys.c    **** 				process_cmdline_set_lift();
1194:src/keys.c    **** 				State2.cmplx = 1;
1195:src/keys.c    **** 				State2.test = op;
1196:src/keys.c    **** 			}
1197:src/keys.c    **** 			return STATE_UNFINISHED;
1198:src/keys.c    **** 
1199:src/keys.c    **** 		case K60:
1200:src/keys.c    **** 			init_state();
1201:src/keys.c    **** 			break;
1202:src/keys.c    **** 
1203:src/keys.c    **** 		default:
1204:src/keys.c    **** 			break;
1205:src/keys.c    **** 		}
1206:src/keys.c    **** 	}
1207:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1208:src/keys.c    **** 	return check_confirm(op);
1209:src/keys.c    **** #else
1210:src/keys.c    **** 	return op;
1211:src/keys.c    **** #endif
1212:src/keys.c    **** 
1213:src/keys.c    **** #undef _RARG
1214:src/keys.c    **** #undef CSWAPXZ
1215:src/keys.c    **** #undef CNUM
1216:src/keys.c    **** }
1217:src/keys.c    **** 
1218:src/keys.c    **** 
1219:src/keys.c    **** 
1220:src/keys.c    **** /*
1221:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1222:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1223:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1224:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1225:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1226:src/keys.c    ****  * the ON key are dealt with by our caller.
ARM GAS  /tmp/ccsJYix0.s 			page 23


1227:src/keys.c    ****  */
1228:src/keys.c    **** static int process_hyp(const keycode c) {
1229:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1230:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1231:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1232:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1233:src/keys.c    **** 	};
1234:src/keys.c    **** 	int cmplx = State2.cmplx;
1235:src/keys.c    **** 	int f = State2.dot;
1236:src/keys.c    **** 
1237:src/keys.c    **** 	State2.hyp = 0;
1238:src/keys.c    **** 	State2.cmplx = 0;
1239:src/keys.c    **** 	State2.dot = 0;
1240:src/keys.c    **** #ifdef DM42
1241:src/keys.c    **** 	reset_shift();
1242:src/keys.c    **** #endif
1243:src/keys.c    **** 	switch ((int)c) {
1244:src/keys.c    **** 
1245:src/keys.c    **** 	case K01:
1246:src/keys.c    **** 	case K02:
1247:src/keys.c    **** 	case K03:
1248:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1249:src/keys.c    **** 
1250:src/keys.c    **** 	case K_CMPLX:
1251:src/keys.c    **** 		cmplx = ! cmplx;
1252:src/keys.c    **** 		goto stay;
1253:src/keys.c    **** 
1254:src/keys.c    **** #ifndef DM42
1255:src/keys.c    **** 	case K_F: 
1256:src/keys.c    **** 	case K_G:
1257:src/keys.c    **** 		f = (c == K_F);
1258:src/keys.c    **** 		// fall through
1259:src/keys.c    **** #else
1260:src/keys.c    **** 	case K_F:
1261:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1262:src/keys.c    **** #endif
1263:src/keys.c    **** 	stay:
1264:src/keys.c    **** 		// process_cmdline_set_lift();
1265:src/keys.c    **** 		State2.hyp = 1;
1266:src/keys.c    **** 		State2.cmplx = cmplx;
1267:src/keys.c    **** 		State2.dot = f;
1268:src/keys.c    **** 		break;
1269:src/keys.c    **** 
1270:src/keys.c    **** 	default:
1271:src/keys.c    **** 		break;
1272:src/keys.c    **** 	}
1273:src/keys.c    **** 	return STATE_UNFINISHED;
1274:src/keys.c    **** }
1275:src/keys.c    **** 
1276:src/keys.c    **** 
1277:src/keys.c    **** /*
1278:src/keys.c    ****  *  Process a key code after ->
1279:src/keys.c    ****  */
1280:src/keys.c    **** static int process_arrow(const keycode c) {
1281:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1282:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1283:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
ARM GAS  /tmp/ccsJYix0.s 			page 24


1284:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1285:src/keys.c    **** 	};
1286:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1287:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1288:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1289:src/keys.c    **** 	};
1290:src/keys.c    **** 	const int shift = reset_shift();
1291:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1292:src/keys.c    **** 
1293:src/keys.c    **** 	State2.arrow = 0;
1294:src/keys.c    **** #ifdef DM42
1295:src/keys.c    **** 	set_last_menu ();
1296:src/keys.c    **** 	display_current_menu ();
1297:src/keys.c    **** #endif
1298:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1299:src/keys.c    **** 	
1300:src/keys.c    **** 	if (c >= K10 && c <= K12)
1301:src/keys.c    **** 		return op_map[c - K10][f];
1302:src/keys.c    **** 
1303:src/keys.c    **** 	if (c == K22 || c == K23)
1304:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1305:src/keys.c    **** 
1306:src/keys.c    **** 	return STATE_UNFINISHED;
1307:src/keys.c    **** }
1308:src/keys.c    **** 
1309:src/keys.c    **** 
1310:src/keys.c    **** /* Process a GTO . sequence
1311:src/keys.c    ****  */
1312:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1312 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1313 2 view .LVU1
1314:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1314 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1312:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1312 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1313 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1314 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1313 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1314 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
ARM GAS  /tmp/ccsJYix0.s 			page 25


1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1313 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1312:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1312 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1315:src/keys.c    **** 
1316:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1316 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1313:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1313 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1314:src/keys.c    **** 
  63              		.loc 1 1314 2 is_stmt 1 view .LVU12
  64              		.loc 1 1316 2 view .LVU13
  65              		.loc 1 1316 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1316 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1316 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1317:src/keys.c    **** 		return val;
1318:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1318 2 is_stmt 1 view .LVU17
  77              		.loc 1 1318 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1318 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1318 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1318 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1318 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1319:src/keys.c    **** 		return val;
1320:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1320 2 is_stmt 1 view .LVU23
  91              		.loc 1 1320 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1321:src/keys.c    **** 	return -1;
  94              		.loc 1 1321 2 is_stmt 1 view .LVU25
1318:src/keys.c    **** 		return val;
  95              		.loc 1 1318 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1321 9 view .LVU27
ARM GAS  /tmp/ccsJYix0.s 			page 26


  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1322:src/keys.c    **** }
 102              		.loc 1 1322 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1322 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 655:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 655 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 656:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 656 2 view .LVU31
 655:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 655 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 659:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 659 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 657:src/keys.c    **** 
 143              		.loc 1 657 2 is_stmt 1 view .LVU34
 659:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 659 2 view .LVU35
 659:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 659 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 655:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 655 47 view .LVU37
ARM GAS  /tmp/ccsJYix0.s 			page 27


 148 0008 0C46     		mov	r4, r1
 659:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 659 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 657:src/keys.c    **** 
 151              		.loc 1 657 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 657:src/keys.c    **** 
 154              		.loc 1 657 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 657:src/keys.c    **** 
 157              		.loc 1 657 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 660:src/keys.c    **** 			pc = 1;
 160              		.loc 1 660 3 is_stmt 1 view .LVU42
 660:src/keys.c    **** 			pc = 1;
 161              		.loc 1 660 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 661:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 661 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 662 3 is_stmt 1 view .LVU45
 656:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 656 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 662 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 662 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 662 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 662 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 665:src/keys.c    **** }
 186              		.loc 1 665 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 666:src/keys.c    **** 
 188              		.loc 1 666 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccsJYix0.s 			page 28


 190              	.LVL17:
 191              	.L16:
 663:src/keys.c    **** 	}
 192              		.loc 1 663 4 is_stmt 1 view .LVU53
 663:src/keys.c    **** 	}
 193              		.loc 1 663 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 666:src/keys.c    **** 
 195              		.loc 1 666 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 666:src/keys.c    **** 
 199              		.loc 1 666 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1323:src/keys.c    **** 
1324:src/keys.c    **** static int gtodot_fkey(int n) {
1325:src/keys.c    **** 	const int code = 100 + n;
1326:src/keys.c    **** 	unsigned int pc = state_pc();
1327:src/keys.c    **** 
1328:src/keys.c    **** 	if(isXROM(pc))
1329:src/keys.c    **** 		pc = 1;
1330:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1331:src/keys.c    **** 	if (pc > 0)
1332:src/keys.c    **** 		return pc;
1333:src/keys.c    **** 	return state_pc();
1334:src/keys.c    **** }
1335:src/keys.c    **** 
1336:src/keys.c    **** static int process_gtodot(const keycode c) {
1337:src/keys.c    **** 	int pc = -1;
1338:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1339:src/keys.c    **** 
1340:src/keys.c    **** 	if (rawpc <= 9) {
1341:src/keys.c    **** 		// Digit 0 - 9
1342:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1343:src/keys.c    **** 	}
1344:src/keys.c    **** #ifdef DM42
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1348:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1349:src/keys.c    **** #endif
ARM GAS  /tmp/ccsJYix0.s 			page 29


1350:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1351:src/keys.c    **** 		// A - D
1352:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1353:src/keys.c    **** 		goto fin;
1354:src/keys.c    **** 	}
1355:src/keys.c    **** 	else if (c == K62) {
1356:src/keys.c    **** 		// .
1357:src/keys.c    **** 		rawpc = ProgSize;
1358:src/keys.c    **** 		goto fin;
1359:src/keys.c    **** 	}
1360:src/keys.c    **** 	else if (c == K20) {
1361:src/keys.c    **** 		// ENTER - short circuit processing
1362:src/keys.c    **** 		pc = State2.digval;
1363:src/keys.c    **** 	}
1364:src/keys.c    **** 	else if (c == K24) {
1365:src/keys.c    **** 		// backspace
1366:src/keys.c    **** 		if (State2.numdigit == 0) {
1367:src/keys.c    **** 			goto fin2;
1368:src/keys.c    **** 		} else {
1369:src/keys.c    **** 			State2.numdigit--;
1370:src/keys.c    **** 			State2.digval /= 10;
1371:src/keys.c    **** 		}
1372:src/keys.c    **** 	}
1373:src/keys.c    **** 	else if (c == K_UP) {
1374:src/keys.c    **** 		// up
1375:src/keys.c    **** 		rawpc = state_pc();
1376:src/keys.c    **** 		if (rawpc == 1)
1377:src/keys.c    **** 			rawpc = 0;
1378:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1379:src/keys.c    **** 		update_program_bounds(1);
1380:src/keys.c    **** 		rawpc = ProgBegin;
1381:src/keys.c    **** 		goto fin;
1382:src/keys.c    **** 	}
1383:src/keys.c    **** 	else if (c == K_DOWN) {
1384:src/keys.c    **** 		// down
1385:src/keys.c    **** 		update_program_bounds(1);
1386:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1387:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1388:src/keys.c    **** 			rawpc = 1;
1389:src/keys.c    **** 		goto fin;
1390:src/keys.c    **** 	}
1391:src/keys.c    **** 	if (pc >= 0) {
1392:src/keys.c    **** 		rawpc = find_user_pc(pc);
1393:src/keys.c    **** fin:		set_pc(rawpc);
1394:src/keys.c    **** fin2:		State2.gtodot = 0;
1395:src/keys.c    **** 		State2.digval = 0;
1396:src/keys.c    **** 		State2.numdigit = 0;
1397:src/keys.c    **** 	}
1398:src/keys.c    **** 	return STATE_UNFINISHED;
1399:src/keys.c    **** }
1400:src/keys.c    **** 
1401:src/keys.c    **** 
1402:src/keys.c    **** /* Process a keystroke in alpha mode
1403:src/keys.c    ****  */
1404:src/keys.c    **** static int process_alpha(const keycode c) {
1405:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1406:src/keys.c    ****         int op = STATE_UNFINISHED;
ARM GAS  /tmp/ccsJYix0.s 			page 30


1407:src/keys.c    **** 	const enum shifts shift = reset_shift();
1408:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1409:src/keys.c    **** 	State2.alpha_pos = 0;
1410:src/keys.c    **** 
1411:src/keys.c    **** 	switch (c) {
1412:src/keys.c    **** 	case K10:	// STO
1413:src/keys.c    **** 		if (shift == SHIFT_F) {
1414:src/keys.c    **** 			init_arg(RARG_ASTO);
1415:src/keys.c    **** 			return STATE_UNFINISHED;
1416:src/keys.c    **** 		}
1417:src/keys.c    **** 		break;
1418:src/keys.c    **** 
1419:src/keys.c    **** 	case K11:	// RCL - maybe view
1420:src/keys.c    **** 		if (shift == SHIFT_F) {
1421:src/keys.c    **** 			init_arg(RARG_ARCL);
1422:src/keys.c    **** 			return STATE_UNFINISHED;
1423:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1424:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1425:src/keys.c    **** 			return STATE_UNFINISHED;
1426:src/keys.c    **** 		}
1427:src/keys.c    **** 		break;
1428:src/keys.c    **** 
1429:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1430:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1431:src/keys.c    **** 			break;
1432:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1433:src/keys.c    **** 			State2.multi = 1;
1434:src/keys.c    **** 			State2.numdigit = 0;
1435:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1436:src/keys.c    **** 			return STATE_UNFINISHED;
1437:src/keys.c    **** 		}
1438:src/keys.c    **** 		State2.alphas = 0;
1439:src/keys.c    **** 		State2.alphashift = 0;
1440:src/keys.c    **** #ifdef DM42
1441:src/keys.c    **** 		set_menu(-1);
1442:src/keys.c    **** 		display_current_menu();
1443:src/keys.c    **** #endif
1444:src/keys.c    **** 		return op;
1445:src/keys.c    **** 
1446:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1447:src/keys.c    **** 		if (shift == SHIFT_N)
1448:src/keys.c    **** 			return STATE_BACKSPACE;
1449:src/keys.c    **** 		if (shift == SHIFT_H)
1450:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1451:src/keys.c    **** 		break;
1452:src/keys.c    **** 
1453:src/keys.c    **** 	case K_UP:
1454:src/keys.c    **** 	  if (shift == SHIFT_N) {
1455:src/keys.c    **** 	    if ( State2.runmode ) {
1456:src/keys.c    **** 	      // Alpha scroll left
1457:src/keys.c    **** #ifdef DM42
1458:src/keys.c    **** 	      /* 
1459:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1460:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1461:src/keys.c    **** 	       */
1462:src/keys.c    **** #ifdef BIGGER_DISPLAY
1463:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
ARM GAS  /tmp/ccsJYix0.s 			page 31


1464:src/keys.c    **** 		alpha_pos += 1;
1465:src/keys.c    **** 	      }
1466:src/keys.c    **** #else
1467:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1468:src/keys.c    **** 		alpha_pos += 1;
1469:src/keys.c    **** 	      }
1470:src/keys.c    **** #endif
1471:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1472:src/keys.c    **** #else
1473:src/keys.c    **** 	      int n = alpha_pos + 1;
1474:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1475:src/keys.c    **** #endif
1476:src/keys.c    **** 	      return STATE_UNFINISHED;
1477:src/keys.c    **** 	    }
1478:src/keys.c    **** 	    return STATE_BST;
1479:src/keys.c    **** 	  }
1480:src/keys.c    **** 	  break;
1481:src/keys.c    **** 
1482:src/keys.c    **** 	case K_DOWN:
1483:src/keys.c    **** 	  if (shift == SHIFT_N) {
1484:src/keys.c    **** 	    if ( State2.runmode ) {
1485:src/keys.c    **** 	      // Alpha scroll right
1486:src/keys.c    **** 	      if (alpha_pos > 0)
1487:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1488:src/keys.c    **** 	      return STATE_UNFINISHED;
1489:src/keys.c    **** 	    }
1490:src/keys.c    **** 	    return STATE_SST;
1491:src/keys.c    **** 	  }
1492:src/keys.c    **** 	  break;
1493:src/keys.c    **** 
1494:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1495:src/keys.c    **** 		if (shift == SHIFT_F)
1496:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1497:src/keys.c    **** 		else if (shift == SHIFT_H)
1498:src/keys.c    **** 			return OP_NIL | OP_OFF;
1499:src/keys.c    **** 		else if (shift == SHIFT_N) {
1500:src/keys.c    **** #ifdef DM42
1501:src/keys.c    **** 		  set_menu(-1);
1502:src/keys.c    **** 		  display_current_menu();
1503:src/keys.c    **** #endif
1504:src/keys.c    **** 		  init_state();
1505:src/keys.c    **** 		}
1506:src/keys.c    **** 		return STATE_UNFINISHED;
1507:src/keys.c    **** 
1508:src/keys.c    **** 	case K63:
1509:src/keys.c    **** 		if (shift == SHIFT_F)
1510:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1511:src/keys.c    **** 		break;
1512:src/keys.c    **** 
1513:src/keys.c    **** 	default:
1514:src/keys.c    **** 		break;
1515:src/keys.c    **** 	}
1516:src/keys.c    **** 
1517:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1518:src/keys.c    **** 	if (ch == 0)
1519:src/keys.c    **** 		return STATE_UNFINISHED;
1520:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
ARM GAS  /tmp/ccsJYix0.s 			page 32


1521:src/keys.c    **** }
1522:src/keys.c    **** 
1523:src/keys.c    **** /*
1524:src/keys.c    ****  *  Code to handle all commands with arguments
1525:src/keys.c    ****  */
1526:src/keys.c    **** static void reset_arg(void) {
1527:src/keys.c    **** 	init_arg((enum rarg) 0);
1528:src/keys.c    **** 	State2.rarg = 0;
1529:src/keys.c    **** }
1530:src/keys.c    **** 
1531:src/keys.c    **** static int arg_eval(unsigned int val) {
1532:src/keys.c    **** 	const unsigned int base = CmdBase;
1533:src/keys.c    **** 	int r = RARG(base, val 
1534:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1535:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1536:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1537:src/keys.c    **** 
1538:src/keys.c    **** 	if (! State2.ind) {
1539:src/keys.c    **** 		/*
1540:src/keys.c    **** 		 *  Central argument checking for some commands
1541:src/keys.c    **** 		 */
1542:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1543:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1544:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1545:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1546:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1547:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1548:src/keys.c    **** 			if ( val == 0 )
1549:src/keys.c    **** 				return STATE_UNFINISHED;
1550:src/keys.c    **** 			r = RARG(base, val);
1551:src/keys.c    **** 		}
1552:src/keys.c    **** #else
1553:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1554:src/keys.c    **** 			// Disallow odd complex register > 98
1555:src/keys.c    **** 			return STATE_UNFINISHED;
1556:src/keys.c    **** #endif
1557:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1558:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1559:src/keys.c    **** 			return STATE_UNFINISHED;
1560:src/keys.c    **** 	}
1561:src/keys.c    **** 	// Build op-code
1562:src/keys.c    **** 	reset_arg();
1563:src/keys.c    **** 	return r;
1564:src/keys.c    **** }
1565:src/keys.c    **** 
1566:src/keys.c    **** static int arg_digit(int n) {
1567:src/keys.c    **** 	int lim;
1568:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1569:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1570:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1571:src/keys.c    **** #else
1572:src/keys.c    **** 	const unsigned int base = CmdBase;
1573:src/keys.c    **** #endif
1574:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1575:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1576:src/keys.c    **** 	
1577:src/keys.c    **** 	if (State2.local) {
ARM GAS  /tmp/ccsJYix0.s 			page 33


1578:src/keys.c    **** 		// Handle local registers and flags
1579:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1580:src/keys.c    **** 		if (State2.runmode) {
1581:src/keys.c    **** 			if (LocalRegs == 0)
1582:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1583:src/keys.c    **** 			if (is_reg) {
1584:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1585:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1586:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1587:src/keys.c    **** 			}
1588:src/keys.c    **** 		}
1589:src/keys.c    **** 	}
1590:src/keys.c    **** 	else if (is_reg)						// normal register
1591:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1592:src/keys.c    **** 	else {
1593:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1594:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1595:src/keys.c    **** 			lim = RARG_IND - 1;
1596:src/keys.c    **** 	}
1597:src/keys.c    **** 	if ((int) val > lim)
1598:src/keys.c    **** 		return STATE_UNFINISHED;
1599:src/keys.c    **** 
1600:src/keys.c    **** 	State2.digval = val;
1601:src/keys.c    **** 	++State2.numdigit;
1602:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1603:src/keys.c    **** 		int result = arg_eval(val);
1604:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1605:src/keys.c    **** 			--State2.numdigit;
1606:src/keys.c    **** 			State2.digval /= 10;
1607:src/keys.c    **** 		}
1608:src/keys.c    **** 		return result;
1609:src/keys.c    **** 	}
1610:src/keys.c    **** 	return STATE_UNFINISHED;
1611:src/keys.c    **** }
1612:src/keys.c    **** 
1613:src/keys.c    **** static int arg_fkey(int n) {
1614:src/keys.c    **** 	const unsigned int b = CmdBase;
1615:src/keys.c    **** 
1616:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1617:src/keys.c    **** 	{
1618:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1619:src/keys.c    **** 			return STATE_UNFINISHED;
1620:src/keys.c    **** 		if (argcmds[b].lim < 100)
1621:src/keys.c    **** 			return STATE_UNFINISHED;
1622:src/keys.c    **** 		return arg_eval(n + 100);
1623:src/keys.c    **** 	}
1624:src/keys.c    **** 	return STATE_UNFINISHED;
1625:src/keys.c    **** }
1626:src/keys.c    **** 
1627:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1628:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1629:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1630:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1631:src/keys.c    **** #else
1632:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1633:src/keys.c    **** #endif
1634:src/keys.c    **** }
ARM GAS  /tmp/ccsJYix0.s 			page 34


1635:src/keys.c    **** 
1636:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1637:src/keys.c    **** 	unsigned int b = CmdBase;
1638:src/keys.c    **** 
1639:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1640:src/keys.c    **** 		CmdBase += n;
1641:src/keys.c    **** 		return 1;
1642:src/keys.c    **** 	}
1643:src/keys.c    **** 	/* And we can turn off the operation too */
1644:src/keys.c    **** 	if (b >= n) {
1645:src/keys.c    **** 		b -= n;
1646:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1647:src/keys.c    **** 			CmdBase = b;
1648:src/keys.c    **** 			return 1;
1649:src/keys.c    **** 		}
1650:src/keys.c    **** 	}
1651:src/keys.c    **** 	return 0;
1652:src/keys.c    **** }
1653:src/keys.c    **** 
1654:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1655:src/keys.c    **** 
1656:src/keys.c    **** 	if (State2.numdigit == 0) {
1657:src/keys.c    **** 		// Only valid at beginning of entry
1658:src/keys.c    **** 		if (State2.dot || State2.local) {
1659:src/keys.c    **** 			// '..' or ENTER '.' = X
1660:src/keys.c    **** 			State2.local = 0;
1661:src/keys.c    **** 			return arg_eval(regX_idx);
1662:src/keys.c    **** 		}
1663:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1664:src/keys.c    **** 			// local register or flag select
1665:src/keys.c    **** 			State2.local = 1;
1666:src/keys.c    **** 		}
1667:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1668:src/keys.c    **** 			// Special GTO . sequence
1669:src/keys.c    **** 			if (! State2.ind) {
1670:src/keys.c    **** 				State2.gtodot = 1;
1671:src/keys.c    **** 				reset_arg();
1672:src/keys.c    **** 			}
1673:src/keys.c    **** 		}
1674:src/keys.c    **** 	}
1675:src/keys.c    **** 	return STATE_UNFINISHED;
1676:src/keys.c    **** }
1677:src/keys.c    **** 
1678:src/keys.c    **** static int process_arg_shuffle(int r) {
1679:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1680:src/keys.c    **** 	if (State2.numdigit < 4)
1681:src/keys.c    **** 		return STATE_UNFINISHED;
1682:src/keys.c    **** 	return arg_eval(State2.digval);
1683:src/keys.c    **** }
1684:src/keys.c    **** 
1685:src/keys.c    **** 
1686:src/keys.c    **** static int process_arg(const keycode c) {
1687:src/keys.c    **** 	unsigned int base = CmdBase;
1688:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1689:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1690:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1691:src/keys.c    **** 	const enum shifts shift = reset_shift();
ARM GAS  /tmp/ccsJYix0.s 			page 35


1692:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1693:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1694:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1695:src/keys.c    **** 
1696:src/keys.c    **** 	n &= ~NO_SHORT;
1697:src/keys.c    **** 	if (base >= NUM_RARG) {
1698:src/keys.c    **** 		reset_arg();
1699:src/keys.c    **** 		return STATE_UNFINISHED;
1700:src/keys.c    **** 	}
1701:src/keys.c    **** #ifdef DM42
1702:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1703:src/keys.c    **** 	  switch (n) {
1704:src/keys.c    **** 	  case regX_idx:
1705:src/keys.c    **** 	    return arg_digit(1);
1706:src/keys.c    **** 	  case regY_idx:
1707:src/keys.c    **** 	    return arg_digit(2);
1708:src/keys.c    **** 	  case regZ_idx:
1709:src/keys.c    **** 	    return arg_digit(3);
1710:src/keys.c    **** 	  case regT_idx:
1711:src/keys.c    **** 	    return arg_digit(4);
1712:src/keys.c    **** 	  case 5:
1713:src/keys.c    **** 	  case 6:
1714:src/keys.c    **** 	  case 7:
1715:src/keys.c    **** 	  case 8:
1716:src/keys.c    **** 	  case 9:
1717:src/keys.c    **** 	  case 0:
1718:src/keys.c    **** 	    return arg_digit(n);
1719:src/keys.c    **** 	  }
1720:src/keys.c    **** 	}
1721:src/keys.c    **** #else
1722:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1723:src/keys.c    **** 		return arg_digit(n);
1724:src/keys.c    **** #endif	
1725:src/keys.c    **** 	if (shorthand)
1726:src/keys.c    **** 		// row column shorthand addressing
1727:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1728:src/keys.c    **** 
1729:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1730:src/keys.c    **** #ifdef DM42
1731:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
1732:src/keys.c    **** 		switch ((int)c) {
1733:src/keys.c    **** 		case K_UP:	// up arrow
1734:src/keys.c    **** 		  if (base == RARG_FIX) {
1735:src/keys.c    **** 		    base = RARG_SIG;
1736:src/keys.c    **** 		    break;
1737:src/keys.c    **** 		  }
1738:src/keys.c    **** 		  if (base == RARG_SIG) {
1739:src/keys.c    **** 		    base = RARG_SIG0;
1740:src/keys.c    **** 		    break;
1741:src/keys.c    **** 		  }
1742:src/keys.c    **** 		  if (base == RARG_SIG0) {
1743:src/keys.c    **** 		    base = RARG_FIX;
1744:src/keys.c    **** 		    break;
1745:src/keys.c    **** 		  }
1746:src/keys.c    **** 		case K_DOWN:	// down arrow
1747:src/keys.c    **** 		case K01:	// B
1748:src/keys.c    **** 		  if (base == RARG_FIX) {
ARM GAS  /tmp/ccsJYix0.s 			page 36


1749:src/keys.c    **** 		    base = RARG_SIG0;
1750:src/keys.c    **** 		    break;
1751:src/keys.c    **** 		  }
1752:src/keys.c    **** 		  if (base == RARG_SIG) {
1753:src/keys.c    **** 		    base = RARG_FIX;
1754:src/keys.c    **** 		    break;
1755:src/keys.c    **** 		  }
1756:src/keys.c    **** 		  if (base == RARG_SIG0) {
1757:src/keys.c    **** 		    base = RARG_SIG;
1758:src/keys.c    **** 		    break;
1759:src/keys.c    **** 		  }
1760:src/keys.c    **** 		}
1761:src/keys.c    **** 	}
1762:src/keys.c    **** 		CmdBase = base;
1763:src/keys.c    **** #else
1764:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1765:src/keys.c    **** 		switch ((int)c) {
1766:src/keys.c    **** 		case K_UP:	// up arrow
1767:src/keys.c    **** 			if (--base < RARG_FIX)
1768:src/keys.c    **** 				base = RARG_SIG0;
1769:src/keys.c    **** 			break;
1770:src/keys.c    **** 
1771:src/keys.c    **** 		case K_DOWN:	// down arrow
1772:src/keys.c    **** 		case K01:	// B
1773:src/keys.c    **** 			if (++base > RARG_SIG0)
1774:src/keys.c    **** 				base = RARG_FIX;
1775:src/keys.c    **** 			break;
1776:src/keys.c    **** 		}
1777:src/keys.c    **** 		CmdBase = base;
1778:src/keys.c    **** 	}
1779:src/keys.c    **** #endif
1780:src/keys.c    **** #endif
1781:src/keys.c    **** 	/*
1782:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1783:src/keys.c    **** 	 *  Handle the rest here.
1784:src/keys.c    **** 	 */
1785:src/keys.c    **** 	switch ((int)c) {
1786:src/keys.c    **** 	case K_F:
1787:src/keys.c    **** 		if (label_addressing)
1788:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1789:src/keys.c    **** 		break;
1790:src/keys.c    **** 
1791:src/keys.c    **** 	case K_ARROW:		// arrow
1792:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1793:src/keys.c    **** 			State2.ind = ! State2.ind;
1794:src/keys.c    **** 			if (! stack_reg)
1795:src/keys.c    **** 				State2.dot = 0;
1796:src/keys.c    **** 		}
1797:src/keys.c    **** 		break;
1798:src/keys.c    **** 
1799:src/keys.c    **** 	case K_CMPLX:
1800:src/keys.c    **** 		if (State2.ind || State2.dot)
1801:src/keys.c    **** 			break;
1802:src/keys.c    **** 		if (base == RARG_STO)
1803:src/keys.c    **** 			CmdBase = RARG_STOM;
1804:src/keys.c    **** 		else if (base == RARG_RCL)
1805:src/keys.c    **** 			CmdBase = RARG_RCLM;
ARM GAS  /tmp/ccsJYix0.s 			page 37


1806:src/keys.c    **** 		break;
1807:src/keys.c    **** #ifdef DM42
1808:src/keys.c    **** 	case K41:       // T
1809:src/keys.c    **** 	  if (State2.shuffle)
1810:src/keys.c    **** 	    return process_arg_shuffle(3);
1811:src/keys.c    **** 	case K51:       // X
1812:src/keys.c    **** 	  if (State2.shuffle)
1813:src/keys.c    **** 	    return process_arg_shuffle(0);
1814:src/keys.c    **** 	case K52:	// Y
1815:src/keys.c    **** 	  if (State2.shuffle)
1816:src/keys.c    **** 	    return process_arg_shuffle(1);
1817:src/keys.c    **** 	case K53:       // Z
1818:src/keys.c    **** 	  if (State2.shuffle)
1819:src/keys.c    **** 	    return process_arg_shuffle(2);
1820:src/keys.c    **** #else
1821:src/keys.c    **** 	case K63:	// Y
1822:src/keys.c    **** 	  if (State2.shuffle)
1823:src/keys.c    **** 	    return process_arg_shuffle(1);
1824:src/keys.c    **** #endif
1825:src/keys.c    **** 	case K00:	// A
1826:src/keys.c    **** 	case K01:	// B
1827:src/keys.c    **** 	case K02:	// C
1828:src/keys.c    **** 	case K03:	// D
1829:src/keys.c    **** #ifdef DM42
1830:src/keys.c    **** 	case K12:	// I (lastY)
1831:src/keys.c    **** 	case K13:	// J
1832:src/keys.c    **** 	case K14:	// K
1833:src/keys.c    **** 	case K15:	// L (lastX)
1834:src/keys.c    **** #else
1835:src/keys.c    **** 	case K12:	// I (lastY)
1836:src/keys.c    **** 	case K21:	// J
1837:src/keys.c    **** 	case K22:	// K
1838:src/keys.c    **** 	case K23:	// L (lastX)
1839:src/keys.c    **** #endif
1840:src/keys.c    **** 	  if (State2.dot || stack_reg)
1841:src/keys.c    **** 			return arg_eval(n);
1842:src/keys.c    **** 		if ( c <= K03 )
1843:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1844:src/keys.c    **** 		break;
1845:src/keys.c    **** #ifdef DM42
1846:src/keys.c    **** 	case K62:	// '.'
1847:src/keys.c    **** 		return process_arg_dot(base);
1848:src/keys.c    **** 
1849:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1850:src/keys.c    **** 	case K64:		// plus
1851:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1852:src/keys.c    **** 			return arg_eval(n);
1853:src/keys.c    **** 		break;
1854:src/keys.c    **** 	case K54:               // minus
1855:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1856:src/keys.c    **** 			reset_arg();
1857:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1858:src/keys.c    **** 		}
1859:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1860:src/keys.c    **** 		break;
1861:src/keys.c    **** 	case K44:		// multiply
1862:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
ARM GAS  /tmp/ccsJYix0.s 			page 38


1863:src/keys.c    **** 			return arg_eval(n);
1864:src/keys.c    **** 		break;
1865:src/keys.c    **** 	case K34:
1866:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1867:src/keys.c    **** 		break;
1868:src/keys.c    **** #else
1869:src/keys.c    **** 	case K62:	// X, '.'
1870:src/keys.c    **** 		if (State2.shuffle)
1871:src/keys.c    **** 			return process_arg_shuffle(0);
1872:src/keys.c    **** 		return process_arg_dot(base);
1873:src/keys.c    **** 
1874:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1875:src/keys.c    **** 	case K64:		// Z register
1876:src/keys.c    **** 		if (State2.shuffle)
1877:src/keys.c    **** 			return process_arg_shuffle(2);
1878:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1879:src/keys.c    **** 			return arg_eval(n);
1880:src/keys.c    **** 		break;
1881:src/keys.c    **** 
1882:src/keys.c    **** 	case K54:
1883:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1884:src/keys.c    **** 			reset_arg();
1885:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1886:src/keys.c    **** 		}
1887:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1888:src/keys.c    **** 		break;
1889:src/keys.c    **** 
1890:src/keys.c    **** 	case K44:		// T register
1891:src/keys.c    **** 		if (State2.shuffle)
1892:src/keys.c    **** 			return process_arg_shuffle(3);
1893:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1894:src/keys.c    **** 			return arg_eval(n);
1895:src/keys.c    **** 		break;
1896:src/keys.c    **** 
1897:src/keys.c    **** 	case K34:
1898:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1899:src/keys.c    **** 		break;
1900:src/keys.c    **** #endif
1901:src/keys.c    **** 	case K_UP:
1902:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1903:src/keys.c    **** 		break;
1904:src/keys.c    **** 
1905:src/keys.c    **** 	case K_DOWN:
1906:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1907:src/keys.c    **** 		break;
1908:src/keys.c    **** 
1909:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1910:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1911:src/keys.c    **** 			if (argcmds[base].label) {
1912:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1913:src/keys.c    **** 				State2.multi = 1;
1914:src/keys.c    **** 				State2.alphashift = 0;
1915:src/keys.c    **** 				State2.rarg = 0;
1916:src/keys.c    **** 			} else if (base == RARG_SCI) {
1917:src/keys.c    **** 				reset_arg();
1918:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1919:src/keys.c    **** 			} else if (base == RARG_ENG) {
ARM GAS  /tmp/ccsJYix0.s 			page 39


1920:src/keys.c    **** 				reset_arg();
1921:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1922:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1923:src/keys.c    **** 				State2.dot = 1;
1924:src/keys.c    **** 		} else if (State2.numdigit > 0)
1925:src/keys.c    **** 			return arg_eval(State2.digval);
1926:src/keys.c    **** 		else if (stack_reg)
1927:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1928:src/keys.c    **** 		break;
1929:src/keys.c    **** 
1930:src/keys.c    **** 	case K24:	// <-
1931:src/keys.c    **** 		if (State2.numdigit == 0) {
1932:src/keys.c    **** 			if (State2.dot)
1933:src/keys.c    **** 				State2.dot = 0;
1934:src/keys.c    **** 			else if (State2.local)
1935:src/keys.c    **** 				State2.local = 0;
1936:src/keys.c    **** 			else if (State2.ind)
1937:src/keys.c    **** 				State2.ind = 0;
1938:src/keys.c    **** 			else
1939:src/keys.c    **** 				goto reset;
1940:src/keys.c    **** 		}
1941:src/keys.c    **** 		else {
1942:src/keys.c    **** 			--State2.numdigit;
1943:src/keys.c    **** 			if (State2.shuffle)
1944:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1945:src/keys.c    **** 			else
1946:src/keys.c    **** 				State2.digval /= 10;
1947:src/keys.c    **** 		}
1948:src/keys.c    **** 		break;
1949:src/keys.c    **** 
1950:src/keys.c    **** 	case K60:
1951:src/keys.c    **** 	reset:
1952:src/keys.c    **** 		reset_arg();
1953:src/keys.c    **** 	default:
1954:src/keys.c    **** 		break;
1955:src/keys.c    **** 	}
1956:src/keys.c    **** 	return STATE_UNFINISHED;
1957:src/keys.c    **** }
1958:src/keys.c    **** 
1959:src/keys.c    **** 
1960:src/keys.c    **** /*
1961:src/keys.c    ****  *  Process arguments to the diverse test commands
1962:src/keys.c    ****  */
1963:src/keys.c    **** static int process_test(const keycode c) {
1964:src/keys.c    **** 	int r = State2.test;
1965:src/keys.c    **** 	int cmpx = State2.cmplx;
1966:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1967:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1968:src/keys.c    **** 
1969:src/keys.c    **** 	State2.test = TST_NONE;
1970:src/keys.c    **** 	State2.cmplx = 0;
1971:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1972:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1973:src/keys.c    **** 		// Lettered register
1974:src/keys.c    **** 		if (cmpx && (n & 1)) {
1975:src/keys.c    **** 			if (n == regI_idx)
1976:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
ARM GAS  /tmp/ccsJYix0.s 			page 40


1977:src/keys.c    **** 			// Disallow odd complex registers > A
1978:src/keys.c    **** 			goto again;
1979:src/keys.c    **** 		}
1980:src/keys.c    **** 		// Return the command with the register completed
1981:src/keys.c    **** 		return RARG(base, n);
1982:src/keys.c    **** 	}
1983:src/keys.c    **** 	else if ( n == 0 ) {
1984:src/keys.c    **** 		// Special 0
1985:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1986:src/keys.c    **** 	}
1987:src/keys.c    **** 	else if ( n == 1 ) {
1988:src/keys.c    **** 		// Special 1
1989:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1990:src/keys.c    **** 	}
1991:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1992:src/keys.c    **** 		// digit 2..9, -> or .
1993:src/keys.c    **** 		init_arg((enum rarg)base);
1994:src/keys.c    **** 		return process_arg(c);
1995:src/keys.c    **** 	}
1996:src/keys.c    **** 
1997:src/keys.c    **** 	switch (c) {
1998:src/keys.c    **** 	case K11:					// tests vs register
1999:src/keys.c    **** 	case K20:
2000:src/keys.c    **** 		init_arg((enum rarg)base);
2001:src/keys.c    **** 		return STATE_UNFINISHED;
2002:src/keys.c    **** 
2003:src/keys.c    **** 	//case K60:
2004:src/keys.c    **** 	case K24:
2005:src/keys.c    **** 		return STATE_UNFINISHED;
2006:src/keys.c    **** 
2007:src/keys.c    **** 	default:
2008:src/keys.c    **** 		break;
2009:src/keys.c    **** 	}
2010:src/keys.c    **** again:
2011:src/keys.c    **** 	State2.test = r;
2012:src/keys.c    **** 	State2.cmplx = cmpx;
2013:src/keys.c    **** 	return STATE_UNFINISHED;
2014:src/keys.c    **** }
2015:src/keys.c    **** 
2016:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2017:src/keys.c    **** /*
2018:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2019:src/keys.c    ****  */
2020:src/keys.c    **** #define USER_CAT_MAX 100
2021:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2022:src/keys.c    **** 
2023:src/keys.c    **** static int build_user_cat(void)
2024:src/keys.c    **** {
2025:src/keys.c    **** 	// find the label 'CAT'
2026:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2027:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2028:src/keys.c    **** 	int len = 0;
2029:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2030:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2031:src/keys.c    **** 		char buf1[16];
2032:src/keys.c    **** 		int i;
2033:src/keys.c    **** 		s_opcode op;
ARM GAS  /tmp/ccsJYix0.s 			page 41


2034:src/keys.c    **** 	next:
2035:src/keys.c    **** 		pc = do_inc(pc, 0);
2036:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2037:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2038:src/keys.c    **** 			break;
2039:src/keys.c    **** 		if (isDBL(op))
2040:src/keys.c    **** 			continue;
2041:src/keys.c    **** 		if (isRARG(op)) {
2042:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2043:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2044:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2045:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2046:src/keys.c    **** 		}
2047:src/keys.c    **** 		catcmd(op, buf1);
2048:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2049:src/keys.c    **** 			// Find a position in the table to insert the new entry
2050:src/keys.c    **** 			char buf2[16];
2051:src/keys.c    **** 			const char *p, *q;
2052:src/keys.c    **** 			int diff = 0;
2053:src/keys.c    **** 			if (op == UserCat[i]) {
2054:src/keys.c    **** 				// duplicate entry - ignore
2055:src/keys.c    **** 				goto next;
2056:src/keys.c    **** 			}
2057:src/keys.c    **** 			p = buf1;
2058:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2059:src/keys.c    **** 				++p;
2060:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2061:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2062:src/keys.c    **** 				++q;
2063:src/keys.c    **** 			diff = 0;
2064:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2065:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2066:src/keys.c    **** 			}
2067:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2068:src/keys.c    **** 				// identical according to sort order, insert after
2069:src/keys.c    **** 				++i;
2070:src/keys.c    **** 				break;
2071:src/keys.c    **** 			}
2072:src/keys.c    **** 			if (diff > 0) {
2073:src/keys.c    **** 				// insert new entry before the one found because this is greater
2074:src/keys.c    **** 				break;
2075:src/keys.c    **** 			}
2076:src/keys.c    **** 		}
2077:src/keys.c    **** 		if (i < len) {
2078:src/keys.c    **** 			// Make room
2079:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2080:src/keys.c    **** 		}
2081:src/keys.c    **** 		UserCat[i] = op;
2082:src/keys.c    **** 		++len;
2083:src/keys.c    **** 	}
2084:src/keys.c    **** 	// return the number of entries
2085:src/keys.c    **** 	return len;
2086:src/keys.c    **** }
2087:src/keys.c    **** #endif
2088:src/keys.c    **** 
2089:src/keys.c    **** /* Return the number of entries in the current catalogue.
2090:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
ARM GAS  /tmp/ccsJYix0.s 			page 42


2091:src/keys.c    ****  * likely be the most space efficient method.
2092:src/keys.c    ****  */
2093:src/keys.c    **** int current_catalogue_max(void) {
2094:src/keys.c    **** 	// A quick table of catalogue sizes
2095:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2096:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2097:src/keys.c    **** 	{
2098:src/keys.c    **** 		0, // NONE
2099:src/keys.c    **** 		SIZE_catalogue,
2100:src/keys.c    **** 		SIZE_cplx_catalogue,
2101:src/keys.c    **** 		SIZE_stats_catalogue,
2102:src/keys.c    **** 		SIZE_prob_catalogue,
2103:src/keys.c    **** 		SIZE_int_catalogue,
2104:src/keys.c    **** 		SIZE_prog_catalogue,
2105:src/keys.c    **** 		SIZE_program_xfcn,
2106:src/keys.c    **** 		SIZE_test_catalogue,
2107:src/keys.c    **** 		SIZE_mode_catalogue,
2108:src/keys.c    **** 		SIZE_alpha_catalogue,
2109:src/keys.c    **** 		SIZE_alpha_symbols,
2110:src/keys.c    **** 		SIZE_alpha_compares,
2111:src/keys.c    **** 		SIZE_alpha_arrows,
2112:src/keys.c    **** 		SIZE_alpha_letters,
2113:src/keys.c    **** 		SIZE_alpha_subscripts,
2114:src/keys.c    **** 		NUM_CONSTS_CAT,
2115:src/keys.c    **** 		NUM_CONSTS_CAT,
2116:src/keys.c    **** 		SIZE_conv_catalogue,
2117:src/keys.c    **** 		SIZE_sums_catalogue,
2118:src/keys.c    **** 		SIZE_matrix_catalogue,
2119:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2120:src/keys.c    **** 		SIZE_internal_catalogue,
2121:src/keys.c    **** #endif
2122:src/keys.c    **** 	};
2123:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2124:src/keys.c    **** 	const int cat = State2.catalogue;
2125:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2126:src/keys.c    **** #else
2127:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2128:src/keys.c    **** #endif
2129:src/keys.c    **** }
2130:src/keys.c    **** 
2131:src/keys.c    **** 
2132:src/keys.c    **** /* Look up the character position in the given byte array and
2133:src/keys.c    ****  * build the alpha op-code for it.
2134:src/keys.c    ****  */
2135:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2136:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2137:src/keys.c    **** }
2138:src/keys.c    **** 
2139:src/keys.c    **** 
2140:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2141:src/keys.c    ****  */
2142:src/keys.c    **** opcode current_catalogue(int n) {
2143:src/keys.c    **** 	// A quick table of catalogue tables
2144:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2145:src/keys.c    **** 	static const void *catalogues[] =
2146:src/keys.c    **** 	{
2147:src/keys.c    **** 		NULL, // NONE
ARM GAS  /tmp/ccsJYix0.s 			page 43


2148:src/keys.c    **** 		catalogue,
2149:src/keys.c    **** 		cplx_catalogue,
2150:src/keys.c    **** 		stats_catalogue,
2151:src/keys.c    **** 		prob_catalogue,
2152:src/keys.c    **** 		int_catalogue,
2153:src/keys.c    **** 		prog_catalogue,
2154:src/keys.c    **** 		program_xfcn,
2155:src/keys.c    **** 		test_catalogue,
2156:src/keys.c    **** 		mode_catalogue,
2157:src/keys.c    **** 		alpha_catalogue,
2158:src/keys.c    **** 		alpha_symbols,
2159:src/keys.c    **** 		alpha_compares,
2160:src/keys.c    **** 		alpha_arrows,
2161:src/keys.c    **** 		alpha_letters,
2162:src/keys.c    **** 		alpha_subscripts,
2163:src/keys.c    **** 		NULL,
2164:src/keys.c    **** 		NULL,
2165:src/keys.c    **** 		NULL, //CONV
2166:src/keys.c    **** 		sums_catalogue,
2167:src/keys.c    **** 		matrix_catalogue,
2168:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2169:src/keys.c    **** 		internal_catalogue,
2170:src/keys.c    **** #endif
2171:src/keys.c    **** 	};
2172:src/keys.c    **** 	const unsigned char *cat;
2173:src/keys.c    **** 	unsigned int c = State2.catalogue;
2174:src/keys.c    **** 	int m, i;
2175:src/keys.c    **** 	unsigned p, q;
2176:src/keys.c    **** 
2177:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2178:src/keys.c    **** 		if (n == OP_ZERO)
2179:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2180:src/keys.c    **** 		return CONST(n);
2181:src/keys.c    **** 	}
2182:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2183:src/keys.c    **** 		if (n == OP_ZERO)
2184:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2185:src/keys.c    **** 		return CONST_CMPLX(n);
2186:src/keys.c    **** 	}
2187:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2188:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2189:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2190:src/keys.c    **** 			// Monadic conversion routine
2191:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2192:src/keys.c    **** 		else
2193:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2194:src/keys.c    **** 	}
2195:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2196:src/keys.c    **** 	if (c == CATALOGUE_USER)
2197:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2198:src/keys.c    **** #endif
2199:src/keys.c    **** 
2200:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2201:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2202:src/keys.c    **** 	else
2203:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2204:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 44


2205:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2206:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2207:src/keys.c    **** 	}
2208:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2209:src/keys.c    **** 		return OP_NIL | OP_NOP;
2210:src/keys.c    **** 
2211:src/keys.c    **** 	/* Unpack the opcode */
2212:src/keys.c    **** 	cat += n + (n >> 2);
2213:src/keys.c    **** 	p = cat[0];
2214:src/keys.c    **** 	q = cat[1];
2215:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2216:src/keys.c    **** 
2217:src/keys.c    **** 	/* Now figure out which opcode it really is */
2218:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2219:src/keys.c    **** 		if (m < opcode_breaks[i])
2220:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2221:src/keys.c    **** 		m -= opcode_breaks[i];
2222:src/keys.c    **** 	}
2223:src/keys.c    **** 	return RARG_BASEOP(m);
2224:src/keys.c    **** }
2225:src/keys.c    **** 
2226:src/keys.c    **** 
2227:src/keys.c    **** /*
2228:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2229:src/keys.c    ****  *  in multi character commands.
2230:src/keys.c    ****  */
2231:src/keys.c    **** static int forbidden_alpha(int pos) {
2232:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2233:src/keys.c    **** }
2234:src/keys.c    **** 
2235:src/keys.c    **** /*
2236:src/keys.c    ****  *  Catalogue navigation
2237:src/keys.c    ****  */
2238:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2239:src/keys.c    ****    int pos = State.catpos;
2240:src/keys.c    ****    int ch;
2241:src/keys.c    ****    const int ctmax = current_catalogue_max();
2242:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2243:src/keys.c    **** 
2244:src/keys.c    ****    if (shift == SHIFT_N) {
2245:src/keys.c    ****      switch (c) {
2246:src/keys.c    **** #ifdef DM42
2247:src/keys.c    ****      case K05:			// XEQ accepts command
2248:src/keys.c    **** #else	  
2249:src/keys.c    ****      case K30:			// XEQ accepts command
2250:src/keys.c    **** #endif						  
2251:src/keys.c    ****      case K20:			// Enter accepts command
2252:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2253:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2254:src/keys.c    **** 
2255:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2256:src/keys.c    **** 
2257:src/keys.c    **** 	 if (isRARG(op)) {
2258:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2259:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2260:src/keys.c    **** 	     return op;
2261:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
ARM GAS  /tmp/ccsJYix0.s 			page 45


2262:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2263:src/keys.c    **** 	   else
2264:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2265:src/keys.c    **** 	 }
2266:src/keys.c    **** 	 else {
2267:src/keys.c    **** 	   return check_confirm(op);
2268:src/keys.c    **** 	 }
2269:src/keys.c    ****        } else
2270:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2271:src/keys.c    ****        return STATE_UNFINISHED;
2272:src/keys.c    **** 
2273:src/keys.c    ****      case K24:			// backspace
2274:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2275:src/keys.c    **** 	 if (--CmdLineLength > 0)
2276:src/keys.c    **** 	   goto search;
2277:src/keys.c    **** 	 pos = 0;
2278:src/keys.c    **** 	 goto set_pos;
2279:src/keys.c    ****        } else
2280:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2281:src/keys.c    ****        return STATE_UNFINISHED;
2282:src/keys.c    **** 
2283:src/keys.c    ****      case K60:
2284:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2285:src/keys.c    ****        return STATE_UNFINISHED;
2286:src/keys.c    **** 
2287:src/keys.c    ****      case K_UP:
2288:src/keys.c    ****        CmdLineLength = 0;
2289:src/keys.c    ****        if (pos == 0)
2290:src/keys.c    **** 	 goto set_max;
2291:src/keys.c    ****        else
2292:src/keys.c    **** 	 --pos;
2293:src/keys.c    ****        goto set_pos;
2294:src/keys.c    **** 
2295:src/keys.c    ****      case K_DOWN:
2296:src/keys.c    ****        CmdLineLength = 0;
2297:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2298:src/keys.c    ****        if (pos >= ctmax)
2299:src/keys.c    **** 	 pos = 0;
2300:src/keys.c    ****        goto set_pos;
2301:src/keys.c    **** 
2302:src/keys.c    ****      default:
2303:src/keys.c    ****        break;
2304:src/keys.c    ****      }
2305:src/keys.c    ****    } else if (shift == SHIFT_F) {
2306:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2307:src/keys.c    ****        /*
2308:src/keys.c    **** 	* f 1/x in conversion catalogue
2309:src/keys.c    **** 	*/
2310:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2311:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2312:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2313:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2314:src/keys.c    **** 	*/
2315:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2316:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2317:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2318:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
ARM GAS  /tmp/ccsJYix0.s 			page 46


2319:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2320:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2321:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2322:src/keys.c    ****        };
2323:src/keys.c    ****        const opcode op = current_catalogue(pos);
2324:src/keys.c    ****        int i;
2325:src/keys.c    **** 
2326:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2327:src/keys.c    ****        if (isRARG(op))
2328:src/keys.c    **** 	 return op ^ 1;
2329:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2330:src/keys.c    **** 	 if (op == conv_mapping[i])
2331:src/keys.c    **** 	   return conv_mapping[i^1];
2332:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2333:src/keys.c    ****      }
2334:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2335:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2336:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2337:src/keys.c    ****        return STATE_UNFINISHED;
2338:src/keys.c    ****      }
2339:src/keys.c    ****    } else if (shift == SHIFT_G) {
2340:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2341:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2342:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2343:src/keys.c    ****      }
2344:src/keys.c    ****    }
2345:src/keys.c    **** 
2346:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2347:src/keys.c    ****     * jump to the appropriate catalogue entry.
2348:src/keys.c    ****     */
2349:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2350:src/keys.c    ****    reset_shift();
2351:src/keys.c    ****    if (ch == '\0')
2352:src/keys.c    ****      return STATE_UNFINISHED;
2353:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2354:src/keys.c    ****      // No multi character search in alpha catalogues
2355:src/keys.c    ****      CmdLineLength = 0;
2356:src/keys.c    ****    }
2357:src/keys.c    ****    if (CmdLineLength < 10)
2358:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2359:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2360:src/keys.c    **** 
2361:src/keys.c    ****  search:
2362:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2363:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2364:src/keys.c    ****      char buf[16];
2365:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2366:src/keys.c    ****      int i;
2367:src/keys.c    **** 
2368:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2369:src/keys.c    ****        cmd++;
2370:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2371:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2372:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2373:src/keys.c    ****        if (c > cl)
2374:src/keys.c    **** 	 goto set_pos;
2375:src/keys.c    ****        else if (c < cl)
ARM GAS  /tmp/ccsJYix0.s 			page 47


2376:src/keys.c    **** 	 break;
2377:src/keys.c    ****      }
2378:src/keys.c    ****      if (Cmdline[i] == '\0')
2379:src/keys.c    ****        goto set_pos;
2380:src/keys.c    ****    }
2381:src/keys.c    ****  set_max:
2382:src/keys.c    ****    pos = ctmax - 1;
2383:src/keys.c    ****  set_pos:
2384:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2385:src/keys.c    ****      --pos;
2386:src/keys.c    ****    State.catpos = pos;
2387:src/keys.c    ****    return STATE_UNFINISHED;
2388:src/keys.c    ****  }
2389:src/keys.c    **** 
2390:src/keys.c    **** #ifndef REALBUILD
2391:src/keys.c    **** int find_pos(const char* text) {
2392:src/keys.c    **** 	int pos;
2393:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2394:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2395:src/keys.c    **** 		char buf[16];
2396:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2397:src/keys.c    **** 		int i;
2398:src/keys.c    **** 
2399:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2400:src/keys.c    **** 			cmd++;
2401:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2402:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2403:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2404:src/keys.c    **** 			if (c > cl)
2405:src/keys.c    **** 				return pos;
2406:src/keys.c    **** 			else if (c < cl)
2407:src/keys.c    **** 				break;
2408:src/keys.c    **** 		}
2409:src/keys.c    **** 		if (text[i] == '\0')
2410:src/keys.c    **** 			return pos;
2411:src/keys.c    **** 	}
2412:src/keys.c    **** 	return pos;
2413:src/keys.c    **** }
2414:src/keys.c    **** 
2415:src/keys.c    **** #endif
2416:src/keys.c    **** 
2417:src/keys.c    **** /* Multi (2) word instruction entry
2418:src/keys.c    ****  */
2419:src/keys.c    **** static void reset_multi(void) {
2420:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2421:src/keys.c    **** 	State2.multi = 0;
2422:src/keys.c    **** 	if (! State2.alphas )
2423:src/keys.c    **** 		State2.alphashift = 0;
2424:src/keys.c    **** }
2425:src/keys.c    **** 
2426:src/keys.c    **** static int process_multi(const keycode c) {
2427:src/keys.c    **** 	enum shifts shift = reset_shift();
2428:src/keys.c    **** 	unsigned int ch = 0;
2429:src/keys.c    **** 	unsigned int opcode;
2430:src/keys.c    **** 
2431:src/keys.c    **** 	if (State2.catalogue) {
2432:src/keys.c    **** 		// Alpha catalogue from within multi character command
ARM GAS  /tmp/ccsJYix0.s 			page 48


2433:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2434:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2435:src/keys.c    **** 			return opcode;
2436:src/keys.c    **** 		ch = (unsigned char) opcode;
2437:src/keys.c    **** 		goto add_char;
2438:src/keys.c    **** 	}
2439:src/keys.c    **** 
2440:src/keys.c    **** 	switch (c) {
2441:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2442:src/keys.c    **** 		if (shift != SHIFT_N)
2443:src/keys.c    **** 				break;
2444:src/keys.c    **** 		reset_multi();
2445:src/keys.c    **** 		if (State2.numdigit == 0)
2446:src/keys.c    **** 			return STATE_UNFINISHED;
2447:src/keys.c    **** 		else if (State2.numdigit == 1)
2448:src/keys.c    **** 			State2.digval2 = 0;
2449:src/keys.c    **** 		goto fin;
2450:src/keys.c    **** 
2451:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2452:src/keys.c    **** 		if (shift != SHIFT_H) {
2453:src/keys.c    **** 			if (State2.numdigit == 0)
2454:src/keys.c    **** 				reset_multi();
2455:src/keys.c    **** 			else
2456:src/keys.c    **** 				State2.numdigit--;
2457:src/keys.c    **** 			return STATE_UNFINISHED;
2458:src/keys.c    **** 		}
2459:src/keys.c    **** 		break;
2460:src/keys.c    **** 
2461:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2462:src/keys.c    **** 		if (shift == SHIFT_F)
2463:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2464:src/keys.c    **** 		else
2465:src/keys.c    **** 			reset_multi();
2466:src/keys.c    **** 		return STATE_UNFINISHED;
2467:src/keys.c    **** 
2468:src/keys.c    **** 	default:
2469:src/keys.c    **** 		break;
2470:src/keys.c    **** 		}
2471:src/keys.c    **** 
2472:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2473:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2474:src/keys.c    **** 	if (ch == 0)
2475:src/keys.c    **** 		return STATE_UNFINISHED;
2476:src/keys.c    **** add_char:
2477:src/keys.c    **** 	if (State2.numdigit == 0) {
2478:src/keys.c    **** 		State2.digval = ch;
2479:src/keys.c    **** 		State2.numdigit = 1;
2480:src/keys.c    **** 		return STATE_UNFINISHED;
2481:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2482:src/keys.c    **** 		State2.digval2 = ch;
2483:src/keys.c    **** 		State2.numdigit = 2;
2484:src/keys.c    **** 		return STATE_UNFINISHED;
2485:src/keys.c    **** 	}
2486:src/keys.c    **** 	reset_multi();
2487:src/keys.c    **** 
2488:src/keys.c    **** fin:
2489:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
ARM GAS  /tmp/ccsJYix0.s 			page 49


2490:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2491:src/keys.c    **** 	return opcode;
2492:src/keys.c    **** }
2493:src/keys.c    **** 
2494:src/keys.c    **** 
2495:src/keys.c    **** /* Handle YES/NO confirmations
2496:src/keys.c    ****  */
2497:src/keys.c    **** static int process_confirm(const keycode c) {
2498:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2499:src/keys.c    **** 	switch (c) {
2500:src/keys.c    **** #ifdef DM42
2501:src/keys.c    **** 	case K52:
2502:src/keys.c    **** #endif
2503:src/keys.c    **** 	case K63:			// Yes
2504:src/keys.c    **** 	  switch (State2.confirm) {
2505:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2506:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2507:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2508:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2509:src/keys.c    **** 	  }
2510:src/keys.c    **** 	case K24:
2511:src/keys.c    **** #ifdef DM42
2512:src/keys.c    **** 	case K22:
2513:src/keys.c    **** #else
2514:src/keys.c    **** 	case K32:
2515:src/keys.c    **** #endif
2516:src/keys.c    **** 	  // No
2517:src/keys.c    **** 	  State2.confirm = 0;
2518:src/keys.c    **** 	  State2.digval = 0;
2519:src/keys.c    **** 	  break;
2520:src/keys.c    **** 	default:			// No state change
2521:src/keys.c    **** 	  break;
2522:src/keys.c    **** 	}
2523:src/keys.c    **** 	return STATE_UNFINISHED;
2524:src/keys.c    **** }
2525:src/keys.c    **** 
2526:src/keys.c    **** 
2527:src/keys.c    **** /*
2528:src/keys.c    ****  *  STATUS
2529:src/keys.c    ****  */
2530:src/keys.c    **** static int process_status(const keycode c) {
2531:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2532:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2533:src/keys.c    **** 
2534:src/keys.c    **** 	if (c == K_UP) {
2535:src/keys.c    **** 		if (--n < -2)
2536:src/keys.c    **** 			n = max;
2537:src/keys.c    **** 	}
2538:src/keys.c    **** 	else if (c == K_DOWN) {
2539:src/keys.c    **** 		if (++n > max)
2540:src/keys.c    **** 			n = -2;
2541:src/keys.c    **** 	}
2542:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2543:src/keys.c    **** 		State2.status = 0;
2544:src/keys.c    **** 		return STATE_UNFINISHED;
2545:src/keys.c    **** 	} 
2546:src/keys.c    **** 	else {
ARM GAS  /tmp/ccsJYix0.s 			page 50


2547:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2548:src/keys.c    **** 		if (nn <= 9)
2549:src/keys.c    **** 			n = nn;
2550:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2551:src/keys.c    **** 			n = n == max ? 10 : max;
2552:src/keys.c    **** 		else if (nn != NO_REG)
2553:src/keys.c    **** 			n = 10; 
2554:src/keys.c    **** 	}
2555:src/keys.c    **** 	State2.status = n + 3;
2556:src/keys.c    **** 
2557:src/keys.c    **** 	return STATE_UNFINISHED;
2558:src/keys.c    **** }
2559:src/keys.c    **** 
2560:src/keys.c    **** 
2561:src/keys.c    **** /*
2562:src/keys.c    ****  *  CAT helper
2563:src/keys.c    ****  */
2564:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2564 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2565:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2565 2 view .LVU58
2564:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2564 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2564:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2564 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2565 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2566:src/keys.c    **** 
2567:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2567 2 is_stmt 1 view .LVU62
 234              		.loc 1 2567 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2567 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2567 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2567 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2568:src/keys.c    **** }
 245              		.loc 1 2568 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2567:src/keys.c    **** }
 249              		.loc 1 2567 33 view .LVU68
ARM GAS  /tmp/ccsJYix0.s 			page 51


 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2568 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2567:src/keys.c    **** }
 256              		.loc 1 2567 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2567:src/keys.c    **** }
 259              		.loc 1 2567 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2568 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2568 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2569:src/keys.c    **** 
2570:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2570 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2570 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2570 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2571:src/keys.c    **** 	do {
 294              		.loc 1 2571 2 is_stmt 1 view .LVU77
2572:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2572 3 view .LVU78
2573:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2573 4 view .LVU79
2570:src/keys.c    **** 	do {
 297              		.loc 1 2570 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2573 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
ARM GAS  /tmp/ccsJYix0.s 			page 52


 301              	.LVL27:
 302              	.L26:
2574:src/keys.c    **** 				pc = do_inc(pc, 0);
2575:src/keys.c    **** 				if (PcWrapped)
2576:src/keys.c    **** 					break;
2577:src/keys.c    **** 			}
2578:src/keys.c    **** 			else
2579:src/keys.c    **** 				inc = 1;
2580:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2580 4 is_stmt 1 view .LVU82
 304              		.loc 1 2580 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2580 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2580 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2580 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2574:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2574 5 is_stmt 1 view .LVU87
2574:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2574 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2575:src/keys.c    **** 					break;
 323              		.loc 1 2575 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2574:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2574 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2575:src/keys.c    **** 					break;
 328              		.loc 1 2575 5 is_stmt 1 view .LVU91
2575:src/keys.c    **** 					break;
 329              		.loc 1 2575 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2581:src/keys.c    **** 				return pc;
2582:src/keys.c    **** 			}
2583:src/keys.c    **** 		}
2584:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2584 3 is_stmt 1 view .LVU93
 333              		.loc 1 2584 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2584 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
ARM GAS  /tmp/ccsJYix0.s 			page 53


2585:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2585 10 is_stmt 1 view .LVU96
 342              		.loc 1 2585 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2585 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2586:src/keys.c    **** 	return pc;
2587:src/keys.c    **** }
 351              		.loc 1 2587 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2587 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 519:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 519 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 520 2 view .LVU102
 519:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 519 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 520 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 520 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 520:src/keys.c    **** 		// Save last catalogue for a later restore
ARM GAS  /tmp/ccsJYix0.s 			page 54


 391              		.loc 1 520 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 520 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 522:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 522 3 is_stmt 1 view .LVU108
 522:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 522 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 523:src/keys.c    **** 	}
 398              		.loc 1 523 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 522:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 522 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 523:src/keys.c    **** 	}
 405              		.loc 1 523 3 is_stmt 1 view .LVU112
 406              	.L41:
 525:src/keys.c    **** 
 407              		.loc 1 525 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 527:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 527 2 view .LVU114
 528:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 528 2 view .LVU115
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 529 2 view .LVU116
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 554 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 529 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 554 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 529 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 530:src/keys.c    **** 
 423              		.loc 1 530 2 is_stmt 1 view .LVU121
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 532 2 view .LVU122
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 553 3 view .LVU123
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 553 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 554 3 is_stmt 1 view .LVU125
ARM GAS  /tmp/ccsJYix0.s 			page 55


 555:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 555 3 view .LVU126
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 560 2 view .LVU127
 431              	.LBB244:
 432              	.LBI244:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 104 13 view .LVU128
 434              	.LBE244:
 105:src/keys.c    **** }
 435              		.loc 1 105 2 view .LVU129
 436              	.LVL37:
 437              	.LBB261:
 438              	.LBB245:
 439              	.LBI245:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 94 20 view .LVU130
 441              	.LBB246:
  95:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 95 2 view .LVU131
 443              	.LBB247:
 444              	.LBI247:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 86 13 view .LVU132
 446              	.LBB248:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 87 2 view .LVU133
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 87 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  88:src/keys.c    **** }
 451              		.loc 1 88 2 is_stmt 1 view .LVU135
 452              	.LBE248:
 453              	.LBE247:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 96 2 view .LVU136
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 96 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 458              		.loc 1 98 2 is_stmt 1 view .LVU138
 459              	.LVL39:
  98:src/keys.c    **** }
 460              		.loc 1 98 2 is_stmt 0 view .LVU139
 461              	.LBE246:
 462              	.LBE245:
 463              	.LBE261:
 564:src/keys.c    **** 
 464              		.loc 1 564 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 525:src/keys.c    **** 
 468              		.loc 1 525 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
ARM GAS  /tmp/ccsJYix0.s 			page 56


 470              	.LVL41:
 527:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 527 2 view .LVU142
 528:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 528 2 view .LVU143
 527:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 527 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 529 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 527:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 527 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 532 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 527:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 527 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 529 2 is_stmt 1 view .LVU149
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 529 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 530:src/keys.c    **** 
 486              		.loc 1 530 2 is_stmt 1 view .LVU151
 530:src/keys.c    **** 
 487              		.loc 1 530 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 532 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 548:src/keys.c    **** 		break;
 493              		.loc 1 548 3 view .LVU154
 548:src/keys.c    **** 		break;
 494              		.loc 1 548 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 549:src/keys.c    **** 
 497              		.loc 1 549 3 is_stmt 1 view .LVU156
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 560 2 view .LVU157
 499              	.LBB262:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 104 13 view .LVU158
 501              	.LBE262:
 105:src/keys.c    **** }
 502              		.loc 1 105 2 view .LVU159
 503              	.LVL42:
 504              	.LBB263:
 505              	.LBB258:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 94 20 view .LVU160
 507              	.LBB255:
ARM GAS  /tmp/ccsJYix0.s 			page 57


  95:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 95 2 view .LVU161
 509              	.LBB252:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 86 13 view .LVU162
 511              	.LBB249:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 87 2 view .LVU163
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 87 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  88:src/keys.c    **** }
 516              		.loc 1 88 2 is_stmt 1 view .LVU165
 517              	.LBE249:
 518              	.LBE252:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 96 2 view .LVU166
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 96 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 523              		.loc 1 98 2 is_stmt 1 view .LVU168
 524              	.LVL44:
  98:src/keys.c    **** }
 525              		.loc 1 98 2 is_stmt 0 view .LVU169
 526              	.LBE255:
 527              	.LBE258:
 528              	.LBE263:
 564:src/keys.c    **** 
 529              		.loc 1 564 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 532 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 535 3 is_stmt 1 view .LVU172
 536:src/keys.c    **** 		break;
 536              		.loc 1 536 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 535 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 536:src/keys.c    **** 		break;
 540              		.loc 1 536 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 535 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 536:src/keys.c    **** 		break;
 545              		.loc 1 536 3 is_stmt 1 view .LVU177
 536:src/keys.c    **** 		break;
 546              		.loc 1 536 19 is_stmt 0 view .LVU178
ARM GAS  /tmp/ccsJYix0.s 			page 58


 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 536:src/keys.c    **** 		break;
 551              		.loc 1 536 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 537:src/keys.c    **** 	
 553              		.loc 1 537 3 is_stmt 1 view .LVU180
 554              	.L45:
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 560 2 view .LVU181
 556              	.LBB264:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 104 13 view .LVU182
 558              	.LBE264:
 105:src/keys.c    **** }
 559              		.loc 1 105 2 view .LVU183
 560              	.LVL46:
 561              	.LBB265:
 562              	.LBB259:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 94 20 view .LVU184
 564              	.LBB256:
  95:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 95 2 view .LVU185
 566              	.LBB253:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 86 13 view .LVU186
 568              	.LBB250:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 87 2 view .LVU187
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 87 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  88:src/keys.c    **** }
 573              		.loc 1 88 2 is_stmt 1 view .LVU189
 574              	.LBE250:
 575              	.LBE253:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 96 2 view .LVU190
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 96 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 580              		.loc 1 98 2 is_stmt 1 view .LVU192
 581              	.LVL48:
  98:src/keys.c    **** }
 582              		.loc 1 98 2 is_stmt 0 view .LVU193
 583              	.LBE256:
 584              	.LBE259:
 585              	.LBE265:
 564:src/keys.c    **** 
 586              		.loc 1 564 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccsJYix0.s 			page 59


 588              	.L42:
 541:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 541 3 is_stmt 1 view .LVU195
 541:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 541 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 543:src/keys.c    **** 		break;
 592              		.loc 1 543 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 541:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 541 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 542:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 542 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 541:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 541 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 542:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 542 3 is_stmt 1 view .LVU201
 542:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 542 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 543:src/keys.c    **** 		break;
 603              		.loc 1 543 3 is_stmt 1 view .LVU203
 544:src/keys.c    **** 
 604              		.loc 1 544 3 view .LVU204
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 560 2 view .LVU205
 606              	.LBB266:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 104 13 view .LVU206
 608              	.LBE266:
 105:src/keys.c    **** }
 609              		.loc 1 105 2 view .LVU207
 610              	.LVL49:
 611              	.LBB267:
 612              	.LBB260:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 94 20 view .LVU208
 614              	.LBB257:
  95:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 95 2 view .LVU209
 616              	.LBB254:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 86 13 view .LVU210
 618              	.LBB251:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 87 2 view .LVU211
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 87 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  88:src/keys.c    **** }
 623              		.loc 1 88 2 is_stmt 1 view .LVU213
 624              	.LBE251:
 625              	.LBE254:
ARM GAS  /tmp/ccsJYix0.s 			page 60


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 96 2 view .LVU214
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 96 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 630              		.loc 1 98 2 is_stmt 1 view .LVU216
 631              	.LVL51:
  98:src/keys.c    **** }
 632              		.loc 1 98 2 is_stmt 0 view .LVU217
 633              	.LBE257:
 634              	.LBE260:
 635              	.LBE267:
 564:src/keys.c    **** 
 636              		.loc 1 564 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 553 3 is_stmt 1 view .LVU219
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 554 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 553 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 554 3 is_stmt 1 view .LVU222
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 554 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 554 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 555:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 555 3 is_stmt 1 view .LVU225
 652              	.L49:
 555:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 555 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 555:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 555 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 555:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 555 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 557:src/keys.c    **** 		}
 662              		.loc 1 557 4 is_stmt 1 view .LVU229
 557:src/keys.c    **** 		}
 663              		.loc 1 557 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
ARM GAS  /tmp/ccsJYix0.s 			page 61


 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 554 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 554 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 554 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 554 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 555:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 555 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB51:
2588:src/keys.c    **** 
2589:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2589 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2589 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2589 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2590:src/keys.c    **** 	do {
ARM GAS  /tmp/ccsJYix0.s 			page 62


 717              		.loc 1 2590 2 is_stmt 1 view .LVU239
2591:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2591 3 view .LVU240
2592:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2592 4 view .LVU241
 720              		.loc 1 2592 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2593:src/keys.c    **** 			if (PcWrapped)
2594:src/keys.c    **** 				break;
2595:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2595 4 is_stmt 1 view .LVU243
2596:src/keys.c    **** 				return pc;
2597:src/keys.c    **** 			}
2598:src/keys.c    **** 		}
2599:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2599 3 view .LVU244
 727              		.loc 1 2599 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2593:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2593 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2599 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2600:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2600 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2592:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2592 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2593:src/keys.c    **** 				break;
 739              		.loc 1 2593 4 is_stmt 1 view .LVU250
2599:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2599 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2600 3 is_stmt 1 view .LVU252
2593:src/keys.c    **** 				break;
 744              		.loc 1 2593 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2595:src/keys.c    **** 				return pc;
 746              		.loc 1 2595 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2595:src/keys.c    **** 				return pc;
 750              		.loc 1 2595 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2601:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2602:src/keys.c    **** 	return pc;
2603:src/keys.c    **** }
 753              		.loc 1 2603 1 view .LVU256
ARM GAS  /tmp/ccsJYix0.s 			page 63


 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2600:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2600 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2601:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2601 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2600:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2600 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2601:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2601 10 is_stmt 1 view .LVU260
2601:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2601 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2601:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2601 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2603 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2603 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE51:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB59:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 624 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB268:
 626:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 626 3 view .LVU266
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
ARM GAS  /tmp/ccsJYix0.s 			page 64


 804              		.loc 1 627 3 view .LVU267
 626:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 626 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 627 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 627 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 635:src/keys.c    **** #endif
 812              		.loc 1 635 7 is_stmt 1 view .LVU271
 635:src/keys.c    **** #endif
 813              		.loc 1 635 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 635:src/keys.c    **** #endif
 815              		.loc 1 635 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 645:src/keys.c    **** 		}
 818              		.loc 1 645 4 is_stmt 1 view .LVU274
 645:src/keys.c    **** 		}
 819              		.loc 1 645 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE268:
 649:src/keys.c    **** 
 825              		.loc 1 649 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB269:
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 628 4 is_stmt 1 view .LVU277
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 628 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 628 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 628 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 629:src/keys.c    **** 		}
 839              		.loc 1 629 4 is_stmt 1 view .LVU281
 629:src/keys.c    **** 		}
 840              		.loc 1 629 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 629:src/keys.c    **** 		}
 843              		.loc 1 629 11 view .LVU283
 844 0026 7047     		bx	lr
ARM GAS  /tmp/ccsJYix0.s 			page 65


 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE269:
 851              		.cfi_endproc
 852              	.LFE59:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB61:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 506 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 509:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 509 2 view .LVU285
 509:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 509 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 514:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 514 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 509:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 509 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 510:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 510 2 is_stmt 1 view .LVU289
 511:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 511 2 view .LVU290
 514:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 514 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 511:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 511 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 514:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 514 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 511:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 511 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 512:src/keys.c    **** 	State2.rarg = 1;
ARM GAS  /tmp/ccsJYix0.s 			page 66


 892              		.loc 1 512 2 is_stmt 1 view .LVU295
 512:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 512 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 513:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 513 2 is_stmt 1 view .LVU297
 514:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 514 2 view .LVU298
 515:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 515 2 view .LVU299
 516:src/keys.c    **** }
 898              		.loc 1 516 2 view .LVU300
 517:src/keys.c    **** 
 899              		.loc 1 517 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE61:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB29:
1526:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1526 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1527:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1527 2 view .LVU303
 923              	.LVL67:
 924              	.LBB270:
 925              	.LBI270:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 506 13 view .LVU304
 927              	.LBB271:
 507:src/keys.c    **** 		return;
 928              		.loc 1 507 2 view .LVU305
 929              	.LBE271:
 930              	.LBE270:
1526:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1526 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB273:
 937              	.LBB272:
 507:src/keys.c    **** 		return;
 938              		.loc 1 507 6 view .LVU307
ARM GAS  /tmp/ccsJYix0.s 			page 67


 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 507:src/keys.c    **** 		return;
 941              		.loc 1 507 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 507:src/keys.c    **** 		return;
 946              		.loc 1 507 5 view .LVU309
 947              	.LBE272:
 948              	.LBE273:
1528:src/keys.c    **** }
 949              		.loc 1 1528 2 is_stmt 1 view .LVU310
1528:src/keys.c    **** }
 950              		.loc 1 1528 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1529:src/keys.c    **** 
 955              		.loc 1 1529 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE29:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB30:
1531:src/keys.c    **** 	const unsigned int base = CmdBase;
 975              		.loc 1 1531 39 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1532:src/keys.c    **** 	int r = RARG(base, val 
 979              		.loc 1 1532 2 view .LVU314
1532:src/keys.c    **** 	int r = RARG(base, val 
 980              		.loc 1 1532 28 is_stmt 0 view .LVU315
 981 0000 1C4B     		ldr	r3, .L106
1531:src/keys.c    **** 	const unsigned int base = CmdBase;
 982              		.loc 1 1531 39 view .LVU316
 983 0002 70B5     		push	{r4, r5, r6, lr}
 984              		.cfi_def_cfa_offset 16
 985              		.cfi_offset 4, -16
 986              		.cfi_offset 5, -12
 987              		.cfi_offset 6, -8
 988              		.cfi_offset 14, -4
ARM GAS  /tmp/ccsJYix0.s 			page 68


1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 989              		.loc 1 1533 10 view .LVU317
 990 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 991 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1532:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1532 21 view .LVU318
 993 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 994              	.LVL71:
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 995              		.loc 1 1533 2 is_stmt 1 view .LVU319
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 996              		.loc 1 1533 10 is_stmt 0 view .LVU320
 997 000a EE07     		lsls	r6, r5, #31
1536:src/keys.c    **** 
 998              		.loc 1 1536 30 view .LVU321
 999 000c 1A4E     		ldr	r6, .L106+4
 1000 000e 3668     		ldr	r6, [r6]
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1533 10 view .LVU322
 1002 0010 01F08003 		and	r3, r1, #128
 1003 0014 0344     		add	r3, r3, r0
1536:src/keys.c    **** 
 1004              		.loc 1 1536 30 view .LVU323
 1005 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1006              		.loc 1 1533 10 view .LVU324
 1007 001a 02F12004 		add	r4, r2, #32
 1008 001e 48BF     		it	mi
 1009 0020 7033     		addmi	r3, r3, #112
 1010 0022 2402     		lsls	r4, r4, #8
 1011 0024 1C43     		orrs	r4, r4, r3
 1012              	.LVL72:
1536:src/keys.c    **** 
 1013              		.loc 1 1536 2 is_stmt 1 view .LVU325
1536:src/keys.c    **** 
 1014              		.loc 1 1536 77 is_stmt 0 view .LVU326
 1015 0026 3307     		lsls	r3, r6, #28
 1016 0028 1DD5     		bpl	.L92
1536:src/keys.c    **** 
 1017              		.loc 1 1536 77 discriminator 2 view .LVU327
 1018 002a 15F0400F 		tst	r5, #64
 1019 002e 0CBF     		ite	eq
 1020 0030 0425     		moveq	r5, #4
 1021 0032 0825     		movne	r5, #8
 1022              	.L87:
 1023              	.LVL73:
1538:src/keys.c    **** 		/*
 1024              		.loc 1 1538 2 is_stmt 1 discriminator 6 view .LVU328
1538:src/keys.c    **** 		/*
 1025              		.loc 1 1538 5 is_stmt 0 discriminator 6 view .LVU329
 1026 0034 0E06     		lsls	r6, r1, #24
 1027 0036 12D4     		bmi	.L88
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1028              		.loc 1 1553 3 is_stmt 1 view .LVU330
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1029              		.loc 1 1553 20 is_stmt 0 view .LVU331
 1030 0038 104B     		ldr	r3, .L106+8
ARM GAS  /tmp/ccsJYix0.s 			page 69


 1031 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1032 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1033              		.loc 1 1553 6 view .LVU332
 1034 0040 D906     		lsls	r1, r3, #27
 1035 0042 09D5     		bpl	.L89
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1036              		.loc 1 1553 27 discriminator 1 view .LVU333
 1037 0044 6228     		cmp	r0, #98
 1038 0046 07D9     		bls	.L89
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1039              		.loc 1 1553 52 discriminator 2 view .LVU334
 1040 0048 C307     		lsls	r3, r0, #31
 1041 004a 02D4     		bmi	.L96
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1042              		.loc 1 1557 3 is_stmt 1 view .LVU335
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1043              		.loc 1 1557 28 is_stmt 0 view .LVU336
 1044 004c 223A     		subs	r2, r2, #34
 1045              	.LVL74:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1046              		.loc 1 1557 6 view .LVU337
 1047 004e 012A     		cmp	r2, #1
 1048 0050 05D8     		bhi	.L88
 1049              	.LVL75:
 1050              	.L96:
1555:src/keys.c    **** #endif
 1051              		.loc 1 1555 11 view .LVU338
 1052 0052 3324     		movs	r4, #51
 1053              	.LVL76:
1564:src/keys.c    **** 
 1054              		.loc 1 1564 1 view .LVU339
 1055 0054 2046     		mov	r0, r4
 1056              	.LVL77:
1564:src/keys.c    **** 
 1057              		.loc 1 1564 1 view .LVU340
 1058 0056 70BD     		pop	{r4, r5, r6, pc}
 1059              	.LVL78:
 1060              	.L89:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1061              		.loc 1 1557 3 is_stmt 1 view .LVU341
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1062              		.loc 1 1557 28 is_stmt 0 view .LVU342
 1063 0058 223A     		subs	r2, r2, #34
 1064              	.LVL79:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1065              		.loc 1 1557 6 view .LVU343
 1066 005a 012A     		cmp	r2, #1
 1067 005c 05D9     		bls	.L105
 1068              	.LVL80:
 1069              	.L88:
1562:src/keys.c    **** 	return r;
 1070              		.loc 1 1562 2 is_stmt 1 view .LVU344
 1071 005e FFF7FEFF 		bl	reset_arg
 1072              	.LVL81:
1563:src/keys.c    **** }
 1073              		.loc 1 1563 2 view .LVU345
ARM GAS  /tmp/ccsJYix0.s 			page 70


1564:src/keys.c    **** 
 1074              		.loc 1 1564 1 is_stmt 0 view .LVU346
 1075 0062 2046     		mov	r0, r4
 1076 0064 70BD     		pop	{r4, r5, r6, pc}
 1077              	.LVL82:
 1078              	.L92:
1536:src/keys.c    **** 
 1079              		.loc 1 1536 77 view .LVU347
 1080 0066 0425     		movs	r5, #4
 1081 0068 E4E7     		b	.L87
 1082              	.LVL83:
 1083              	.L105:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1084              		.loc 1 1557 73 discriminator 1 view .LVU348
 1085 006a C5F16405 		rsb	r5, r5, #100
 1086              	.LVL84:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1087              		.loc 1 1557 52 discriminator 1 view .LVU349
 1088 006e 8542     		cmp	r5, r0
 1089 0070 F5D2     		bcs	.L88
 1090 0072 EEE7     		b	.L96
 1091              	.L107:
 1092              		.align	2
 1093              	.L106:
 1094 0074 00000000 		.word	StateWhileOn
 1095 0078 00000000 		.word	main_ram
 1096 007c 00000000 		.word	argcmds
 1097              		.cfi_endproc
 1098              	.LFE30:
 1100              		.section	.text.process_arg_shuffle,"ax",%progbits
 1101              		.align	1
 1102              		.p2align 2,,3
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv4-sp-d16
 1108              	process_arg_shuffle:
 1109              	.LVL85:
 1110              	.LFB36:
1678:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1111              		.loc 1 1678 39 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1116              		.loc 1 1679 2 view .LVU351
1678:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1117              		.loc 1 1678 39 is_stmt 0 view .LVU352
 1118 0000 10B4     		push	{r4}
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 4, -4
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1121              		.loc 1 1679 31 view .LVU353
 1122 0002 0A4A     		ldr	r2, .L111
 1123 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1679:src/keys.c    **** 	if (State2.numdigit < 4)
ARM GAS  /tmp/ccsJYix0.s 			page 71


 1124              		.loc 1 1679 16 view .LVU354
 1125 0006 1189     		ldrh	r1, [r2, #8]
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1126              		.loc 1 1679 43 view .LVU355
 1127 0008 5C00     		lsls	r4, r3, #1
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1679 21 view .LVU356
 1129 000a A040     		lsls	r0, r0, r4
 1130              	.LVL86:
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1131              		.loc 1 1679 40 view .LVU357
 1132 000c 0133     		adds	r3, r3, #1
 1133 000e DBB2     		uxtb	r3, r3
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1134              		.loc 1 1679 16 view .LVU358
 1135 0010 0844     		add	r0, r0, r1
 1136 0012 80B2     		uxth	r0, r0
1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1137              		.loc 1 1680 5 view .LVU359
 1138 0014 032B     		cmp	r3, #3
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1139              		.loc 1 1679 40 view .LVU360
 1140 0016 D372     		strb	r3, [r2, #11]
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1141              		.loc 1 1679 16 view .LVU361
 1142 0018 1081     		strh	r0, [r2, #8]	@ movhi
1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1143              		.loc 1 1680 2 is_stmt 1 view .LVU362
1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1144              		.loc 1 1680 5 is_stmt 0 view .LVU363
 1145 001a 03D9     		bls	.L109
1682:src/keys.c    **** }
 1146              		.loc 1 1682 2 is_stmt 1 view .LVU364
1683:src/keys.c    **** 
 1147              		.loc 1 1683 1 is_stmt 0 view .LVU365
 1148 001c 5DF8044B 		ldr	r4, [sp], #4
 1149              		.cfi_remember_state
 1150              		.cfi_restore 4
 1151              		.cfi_def_cfa_offset 0
1682:src/keys.c    **** }
 1152              		.loc 1 1682 9 view .LVU366
 1153 0020 FFF7FEBF 		b	arg_eval
 1154              	.LVL87:
 1155              	.L109:
 1156              		.cfi_restore_state
1683:src/keys.c    **** 
 1157              		.loc 1 1683 1 view .LVU367
 1158 0024 3320     		movs	r0, #51
 1159 0026 5DF8044B 		ldr	r4, [sp], #4
 1160              		.cfi_restore 4
 1161              		.cfi_def_cfa_offset 0
 1162 002a 7047     		bx	lr
 1163              	.L112:
 1164              		.align	2
 1165              	.L111:
 1166 002c 00000000 		.word	StateWhileOn
 1167              		.cfi_endproc
ARM GAS  /tmp/ccsJYix0.s 			page 72


 1168              	.LFE36:
 1170              		.section	.text.arg_digit,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	arg_digit:
 1179              	.LVL88:
 1180              	.LFB31:
1566:src/keys.c    **** 	int lim;
 1181              		.loc 1 1566 29 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 8
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
1567:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1185              		.loc 1 1567 2 view .LVU369
1569:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1186              		.loc 1 1569 2 view .LVU370
1566:src/keys.c    **** 	int lim;
 1187              		.loc 1 1566 29 is_stmt 0 view .LVU371
 1188 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1189              		.cfi_def_cfa_offset 20
 1190              		.cfi_offset 4, -20
 1191              		.cfi_offset 5, -16
 1192              		.cfi_offset 6, -12
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
1570:src/keys.c    **** #else
 1195              		.loc 1 1570 29 view .LVU372
 1196 0002 3E4D     		ldr	r5, .L160
1566:src/keys.c    **** 	int lim;
 1197              		.loc 1 1566 29 view .LVU373
 1198 0004 83B0     		sub	sp, sp, #12
 1199              		.cfi_def_cfa_offset 32
1566:src/keys.c    **** 	int lim;
 1200              		.loc 1 1566 29 view .LVU374
 1201 0006 0446     		mov	r4, r0
1569:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1202              		.loc 1 1569 17 view .LVU375
 1203 0008 01A8     		add	r0, sp, #4
 1204              	.LVL89:
1569:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1205              		.loc 1 1569 17 view .LVU376
 1206 000a FFF7FEFF 		bl	get_dispmode_digs
 1207              	.LVL90:
1570:src/keys.c    **** #else
 1208              		.loc 1 1570 29 view .LVU377
 1209 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1210              	.LVL91:
1570:src/keys.c    **** #else
 1211              		.loc 1 1570 2 is_stmt 1 view .LVU378
 1212 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1570:src/keys.c    **** #else
 1213              		.loc 1 1570 130 is_stmt 0 view .LVU379
 1214 0012 11F0400C 		ands	ip, r1, #64
ARM GAS  /tmp/ccsJYix0.s 			page 73


 1215 0016 01D0     		beq	.L116
1570:src/keys.c    **** #else
 1216              		.loc 1 1570 44 discriminator 2 view .LVU380
 1217 0018 502E     		cmp	r6, #80
 1218 001a 64D0     		beq	.L156
 1219              	.LVL92:
 1220              	.L116:
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1221              		.loc 1 1574 2 is_stmt 1 discriminator 8 view .LVU381
1575:src/keys.c    **** 	
 1222              		.loc 1 1575 34 is_stmt 0 discriminator 8 view .LVU382
 1223 001c 384A     		ldr	r2, .L160+4
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1224              		.loc 1 1574 33 discriminator 8 view .LVU383
 1225 001e 2B89     		ldrh	r3, [r5, #8]
1575:src/keys.c    **** 	
 1226              		.loc 1 1575 34 discriminator 8 view .LVU384
 1227 0020 02EB0612 		add	r2, r2, r6, lsl #4
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1228              		.loc 1 1574 41 discriminator 8 view .LVU385
 1229 0024 03EB8303 		add	r3, r3, r3, lsl #2
1575:src/keys.c    **** 	
 1230              		.loc 1 1575 34 discriminator 8 view .LVU386
 1231 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1232              		.loc 1 1574 46 discriminator 8 view .LVU387
 1233 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1234              	.LVL93:
1575:src/keys.c    **** 	
 1235              		.loc 1 1575 2 is_stmt 1 discriminator 8 view .LVU388
1575:src/keys.c    **** 	
 1236              		.loc 1 1575 39 is_stmt 0 discriminator 8 view .LVU389
 1237 002e BB07     		lsls	r3, r7, #30
 1238 0030 32D4     		bmi	.L155
1575:src/keys.c    **** 	
 1239              		.loc 1 1575 39 discriminator 2 view .LVU390
 1240 0032 95F91530 		ldrsb	r3, [r5, #21]
 1241 0036 002B     		cmp	r3, #0
 1242 0038 2EDB     		blt	.L155
 1243              	.LVL94:
1577:src/keys.c    **** 		// Handle local registers and flags
 1244              		.loc 1 1577 2 is_stmt 1 view .LVU391
1577:src/keys.c    **** 		// Handle local registers and flags
 1245              		.loc 1 1577 5 is_stmt 0 view .LVU392
 1246 003a C907     		lsls	r1, r1, #31
 1247 003c 4BD5     		bpl	.L122
1579:src/keys.c    **** 		if (State2.runmode) {
 1248              		.loc 1 1579 3 is_stmt 1 view .LVU393
1579:src/keys.c    **** 		if (State2.runmode) {
 1249              		.loc 1 1579 7 is_stmt 0 view .LVU394
 1250 003e 0F23     		movs	r3, #15
 1251 0040 0193     		str	r3, [sp, #4]
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1252              		.loc 1 1580 3 is_stmt 1 view .LVU395
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1253              		.loc 1 1580 6 is_stmt 0 view .LVU396
 1254 0042 BCF1000F 		cmp	ip, #0
ARM GAS  /tmp/ccsJYix0.s 			page 74


 1255 0046 05D0     		beq	.L125
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1256              		.loc 1 1581 4 is_stmt 1 view .LVU397
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1257              		.loc 1 1581 8 is_stmt 0 view .LVU398
 1258 0048 2E4B     		ldr	r3, .L160+8
 1259 004a 1B68     		ldr	r3, [r3]
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1260              		.loc 1 1581 7 view .LVU399
 1261 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1262 0050 002B     		cmp	r3, #0
 1263 0052 3DD0     		beq	.L127
 1264              	.LVL95:
 1265              	.L125:
1591:src/keys.c    **** 	else {
 1266              		.loc 1 1591 65 view .LVU400
 1267 0054 0F20     		movs	r0, #15
 1268              	.L124:
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1269              		.loc 1 1597 2 is_stmt 1 view .LVU401
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1270              		.loc 1 1597 5 is_stmt 0 view .LVU402
 1271 0056 8442     		cmp	r4, r0
 1272 0058 3ADC     		bgt	.L127
 1273              	.L159:
1600:src/keys.c    **** 	++State2.numdigit;
 1274              		.loc 1 1600 2 is_stmt 1 view .LVU403
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1275              		.loc 1 1601 2 is_stmt 0 view .LVU404
 1276 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1600:src/keys.c    **** 	++State2.numdigit;
 1277              		.loc 1 1600 16 view .LVU405
 1278 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1279              		.loc 1 1601 2 is_stmt 1 view .LVU406
 1280 005e 0137     		adds	r7, r7, #1
1602:src/keys.c    **** 		int result = arg_eval(val);
 1281              		.loc 1 1602 16 is_stmt 0 view .LVU407
 1282 0060 04EB8403 		add	r3, r4, r4, lsl #2
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1601 2 view .LVU408
 1284 0064 FFB2     		uxtb	r7, r7
1602:src/keys.c    **** 		int result = arg_eval(val);
 1285              		.loc 1 1602 5 view .LVU409
 1286 0066 B0EB430F 		cmp	r0, r3, lsl #1
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1287              		.loc 1 1601 2 view .LVU410
 1288 006a EF72     		strb	r7, [r5, #11]
1602:src/keys.c    **** 		int result = arg_eval(val);
 1289              		.loc 1 1602 2 is_stmt 1 view .LVU411
1602:src/keys.c    **** 		int result = arg_eval(val);
 1290              		.loc 1 1602 5 is_stmt 0 view .LVU412
 1291 006c 04DB     		blt	.L133
1602:src/keys.c    **** 		int result = arg_eval(val);
 1292              		.loc 1 1602 49 discriminator 1 view .LVU413
 1293 006e 3046     		mov	r0, r6
 1294 0070 FFF7FEFF 		bl	num_arg_digits
ARM GAS  /tmp/ccsJYix0.s 			page 75


 1295              	.LVL96:
1602:src/keys.c    **** 		int result = arg_eval(val);
 1296              		.loc 1 1602 27 discriminator 1 view .LVU414
 1297 0074 8742     		cmp	r7, r0
 1298 0076 2BDB     		blt	.L127
 1299              	.L133:
 1300              	.LBB274:
1603:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1301              		.loc 1 1603 3 is_stmt 1 view .LVU415
1603:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1302              		.loc 1 1603 16 is_stmt 0 view .LVU416
 1303 0078 2046     		mov	r0, r4
 1304 007a FFF7FEFF 		bl	arg_eval
 1305              	.LVL97:
1604:src/keys.c    **** 			--State2.numdigit;
 1306              		.loc 1 1604 3 is_stmt 1 view .LVU417
1604:src/keys.c    **** 			--State2.numdigit;
 1307              		.loc 1 1604 6 is_stmt 0 view .LVU418
 1308 007e 3328     		cmp	r0, #51
 1309 0080 08D1     		bne	.L113
1605:src/keys.c    **** 			State2.digval /= 10;
 1310              		.loc 1 1605 4 is_stmt 1 view .LVU419
1606:src/keys.c    **** 		}
 1311              		.loc 1 1606 18 is_stmt 0 view .LVU420
 1312 0082 2B89     		ldrh	r3, [r5, #8]
 1313 0084 2049     		ldr	r1, .L160+12
1605:src/keys.c    **** 			State2.digval /= 10;
 1314              		.loc 1 1605 4 view .LVU421
 1315 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1606:src/keys.c    **** 		}
 1316              		.loc 1 1606 18 view .LVU422
 1317 0088 A1FB0313 		umull	r1, r3, r1, r3
 1318 008c DB08     		lsrs	r3, r3, #3
1605:src/keys.c    **** 			State2.digval /= 10;
 1319              		.loc 1 1605 4 view .LVU423
 1320 008e 013A     		subs	r2, r2, #1
1606:src/keys.c    **** 		}
 1321              		.loc 1 1606 18 view .LVU424
 1322 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1605:src/keys.c    **** 			State2.digval /= 10;
 1323              		.loc 1 1605 4 view .LVU425
 1324 0092 EA72     		strb	r2, [r5, #11]
1606:src/keys.c    **** 		}
 1325              		.loc 1 1606 4 is_stmt 1 view .LVU426
 1326              	.L113:
 1327              	.LBE274:
1611:src/keys.c    **** 
 1328              		.loc 1 1611 1 is_stmt 0 view .LVU427
 1329 0094 03B0     		add	sp, sp, #12
 1330              		.cfi_remember_state
 1331              		.cfi_def_cfa_offset 20
 1332              		@ sp needed
 1333 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1334              	.LVL98:
 1335              	.L155:
 1336              		.cfi_restore_state
1577:src/keys.c    **** 		// Handle local registers and flags
ARM GAS  /tmp/ccsJYix0.s 			page 76


 1337              		.loc 1 1577 2 is_stmt 1 view .LVU428
1577:src/keys.c    **** 		// Handle local registers and flags
 1338              		.loc 1 1577 5 is_stmt 0 view .LVU429
 1339 0098 C807     		lsls	r0, r1, #31
 1340 009a 12D5     		bpl	.L157
1579:src/keys.c    **** 		if (State2.runmode) {
 1341              		.loc 1 1579 3 is_stmt 1 view .LVU430
1579:src/keys.c    **** 		if (State2.runmode) {
 1342              		.loc 1 1579 7 is_stmt 0 view .LVU431
 1343 009c 0F23     		movs	r3, #15
 1344 009e 0193     		str	r3, [sp, #4]
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1345              		.loc 1 1580 3 is_stmt 1 view .LVU432
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1346              		.loc 1 1580 6 is_stmt 0 view .LVU433
 1347 00a0 BCF1000F 		cmp	ip, #0
 1348 00a4 D6D0     		beq	.L125
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1349              		.loc 1 1581 4 is_stmt 1 view .LVU434
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1350              		.loc 1 1581 8 is_stmt 0 view .LVU435
 1351 00a6 174B     		ldr	r3, .L160+8
 1352 00a8 1B68     		ldr	r3, [r3]
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1353              		.loc 1 1581 7 view .LVU436
 1354 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1355 00ae 7BB1     		cbz	r3, .L127
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1356              		.loc 1 1584 5 is_stmt 1 view .LVU437
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1357              		.loc 1 1584 11 is_stmt 0 view .LVU438
 1358 00b0 F0B2     		uxtb	r0, r6
 1359 00b2 FFF7FEFF 		bl	local_regs_rarg
 1360              	.LVL99:
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1361              		.loc 1 1584 45 view .LVU439
 1362 00b6 0138     		subs	r0, r0, #1
1585:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1363              		.loc 1 1585 5 is_stmt 1 view .LVU440
1585:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1364              		.loc 1 1585 8 is_stmt 0 view .LVU441
 1365 00b8 0F28     		cmp	r0, #15
 1366 00ba 06DD     		ble	.L154
1586:src/keys.c    **** 			}
 1367              		.loc 1 1586 6 is_stmt 1 view .LVU442
1586:src/keys.c    **** 			}
 1368              		.loc 1 1586 10 is_stmt 0 view .LVU443
 1369 00bc 0F20     		movs	r0, #15
 1370 00be 0190     		str	r0, [sp, #4]
 1371 00c0 C9E7     		b	.L124
 1372              	.L157:
1591:src/keys.c    **** 	else {
 1373              		.loc 1 1591 3 is_stmt 1 view .LVU444
1591:src/keys.c    **** 	else {
 1374              		.loc 1 1591 65 is_stmt 0 view .LVU445
 1375 00c2 BCF1000F 		cmp	ip, #0
 1376 00c6 13D1     		bne	.L158
ARM GAS  /tmp/ccsJYix0.s 			page 77


 1377 00c8 6320     		movs	r0, #99
 1378              	.LVL100:
 1379              	.L154:
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1380              		.loc 1 1597 5 view .LVU446
 1381 00ca 8442     		cmp	r4, r0
1595:src/keys.c    **** 	}
 1382              		.loc 1 1595 8 view .LVU447
 1383 00cc 0190     		str	r0, [sp, #4]
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1384              		.loc 1 1597 2 is_stmt 1 view .LVU448
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1385              		.loc 1 1597 5 is_stmt 0 view .LVU449
 1386 00ce C4DD     		ble	.L159
 1387              	.L127:
1582:src/keys.c    **** 			if (is_reg) {
 1388              		.loc 1 1582 12 view .LVU450
 1389 00d0 3320     		movs	r0, #51
1611:src/keys.c    **** 
 1390              		.loc 1 1611 1 view .LVU451
 1391 00d2 03B0     		add	sp, sp, #12
 1392              		.cfi_remember_state
 1393              		.cfi_def_cfa_offset 20
 1394              		@ sp needed
 1395 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1396              	.LVL101:
 1397              	.L122:
 1398              		.cfi_restore_state
1590:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1399              		.loc 1 1590 7 is_stmt 1 view .LVU452
1593:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1400              		.loc 1 1593 3 view .LVU453
1593:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1401              		.loc 1 1593 9 is_stmt 0 view .LVU454
 1402 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1593:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1403              		.loc 1 1593 7 view .LVU455
 1404 00d8 0190     		str	r0, [sp, #4]
1594:src/keys.c    **** 			lim = RARG_IND - 1;
 1405              		.loc 1 1594 3 is_stmt 1 view .LVU456
1594:src/keys.c    **** 			lim = RARG_IND - 1;
 1406              		.loc 1 1594 6 is_stmt 0 view .LVU457
 1407 00da 7F28     		cmp	r0, #127
 1408 00dc BBDD     		ble	.L124
1594:src/keys.c    **** 			lim = RARG_IND - 1;
 1409              		.loc 1 1594 23 discriminator 1 view .LVU458
 1410 00de FB07     		lsls	r3, r7, #31
 1411 00e0 B9D5     		bpl	.L124
1595:src/keys.c    **** 	}
 1412              		.loc 1 1595 4 is_stmt 1 view .LVU459
1595:src/keys.c    **** 	}
 1413              		.loc 1 1595 8 is_stmt 0 view .LVU460
 1414 00e2 7F20     		movs	r0, #127
 1415 00e4 F1E7     		b	.L154
 1416              	.LVL102:
 1417              	.L156:
1570:src/keys.c    **** #else
ARM GAS  /tmp/ccsJYix0.s 			page 78


 1418              		.loc 1 1570 93 discriminator 4 view .LVU461
 1419 00e6 0438     		subs	r0, r0, #4
 1420              	.LVL103:
1570:src/keys.c    **** #else
 1421              		.loc 1 1570 68 discriminator 4 view .LVU462
 1422 00e8 0128     		cmp	r0, #1
1570:src/keys.c    **** #else
 1423              		.loc 1 1570 130 discriminator 4 view .LVU463
 1424 00ea 98BF     		it	ls
 1425 00ec 8D26     		movls	r6, #141
 1426 00ee 95E7     		b	.L116
 1427              	.LVL104:
 1428              	.L158:
1591:src/keys.c    **** 	else {
 1429              		.loc 1 1591 26 discriminator 1 view .LVU464
 1430 00f0 F0B2     		uxtb	r0, r6
 1431 00f2 FFF7FEFF 		bl	global_regs_rarg
 1432              	.LVL105:
1591:src/keys.c    **** 	else {
 1433              		.loc 1 1591 61 discriminator 1 view .LVU465
 1434 00f6 0138     		subs	r0, r0, #1
 1435 00f8 E7E7     		b	.L154
 1436              	.L161:
 1437 00fa 00BF     		.align	2
 1438              	.L160:
 1439 00fc 00000000 		.word	StateWhileOn
 1440 0100 00000000 		.word	argcmds
 1441 0104 00000000 		.word	main_ram
 1442 0108 CDCCCCCC 		.word	-858993459
 1443              		.cfi_endproc
 1444              	.LFE31:
 1446              		.section	.text.intltr,"ax",%progbits
 1447              		.align	1
 1448              		.p2align 2,,3
 1449              		.syntax unified
 1450              		.thumb
 1451              		.thumb_func
 1452              		.fpu fpv4-sp-d16
 1454              	intltr:
 1455              	.LVL106:
 1456              	.LFB18:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1457              		.loc 1 671 26 is_stmt 1 view -0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 672:src/keys.c    **** }
 1461              		.loc 1 672 2 view .LVU467
 672:src/keys.c    **** }
 1462              		.loc 1 672 10 is_stmt 0 view .LVU468
 1463 0000 0B4B     		ldr	r3, .L171
 1464 0002 1B68     		ldr	r3, [r3]
 1465 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 672:src/keys.c    **** }
 1466              		.loc 1 672 22 view .LVU469
 1467 0008 13F00103 		ands	r3, r3, #1
 1468 000c 05D0     		beq	.L164
ARM GAS  /tmp/ccsJYix0.s 			page 79


 672:src/keys.c    **** }
 1469              		.loc 1 672 26 discriminator 1 view .LVU470
 1470 000e 094B     		ldr	r3, .L171+4
 1471 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 672:src/keys.c    **** }
 1472              		.loc 1 672 22 discriminator 1 view .LVU471
 1473 0012 5B06     		lsls	r3, r3, #25
 1474 0014 03D4     		bmi	.L170
 672:src/keys.c    **** }
 1475              		.loc 1 672 22 view .LVU472
 1476 0016 0120     		movs	r0, #1
 1477              	.LVL107:
 673:src/keys.c    **** 
 1478              		.loc 1 673 1 view .LVU473
 1479 0018 7047     		bx	lr
 1480              	.LVL108:
 1481              	.L164:
 672:src/keys.c    **** }
 1482              		.loc 1 672 22 view .LVU474
 1483 001a 1846     		mov	r0, r3
 1484              	.LVL109:
 672:src/keys.c    **** }
 1485              		.loc 1 672 22 view .LVU475
 1486 001c 7047     		bx	lr
 1487              	.LVL110:
 1488              	.L170:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1489              		.loc 1 671 26 view .LVU476
 1490 001e 10B5     		push	{r4, lr}
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 4, -8
 1493              		.cfi_offset 14, -4
 1494 0020 0446     		mov	r4, r0
 1495              	.LVL111:
 1496              	.LBB277:
 1497              	.LBI277:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1498              		.loc 1 671 12 is_stmt 1 view .LVU477
 1499              	.LBB278:
 672:src/keys.c    **** }
 1500              		.loc 1 672 52 is_stmt 0 view .LVU478
 1501 0022 FFF7FEFF 		bl	int_base
 1502              	.LVL112:
 672:src/keys.c    **** }
 1503              		.loc 1 672 43 view .LVU479
 1504 0026 8442     		cmp	r4, r0
 1505 0028 ACBF     		ite	ge
 1506 002a 0020     		movge	r0, #0
 1507 002c 0120     		movlt	r0, #1
 1508              	.LBE278:
 1509              	.LBE277:
 673:src/keys.c    **** 
 1510              		.loc 1 673 1 view .LVU480
 1511 002e 10BD     		pop	{r4, pc}
 1512              	.LVL113:
 1513              	.L172:
 673:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 80


 1514              		.loc 1 673 1 view .LVU481
 1515              		.align	2
 1516              	.L171:
 1517 0030 00000000 		.word	main_ram
 1518 0034 00000000 		.word	StateWhileOn
 1519              		.cfi_endproc
 1520              	.LFE18:
 1522              		.section	.text.set_window,"ax",%progbits
 1523              		.align	1
 1524              		.p2align 2,,3
 1525              		.syntax unified
 1526              		.thumb
 1527              		.thumb_func
 1528              		.fpu fpv4-sp-d16
 1530              	set_window:
 1531              	.LVL114:
 1532              	.LFB53:
2604:src/keys.c    **** 
2605:src/keys.c    **** 
2606:src/keys.c    **** /*
2607:src/keys.c    ****  *  CAT command
2608:src/keys.c    ****  */
2609:src/keys.c    **** static int process_labellist(const keycode c) {
2610:src/keys.c    **** 	unsigned int pc = State2.digval;
2611:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2612:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2613:src/keys.c    **** 	const int opcode = getprog(pc);
2614:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2615:src/keys.c    **** 	const int direct = State2.runmode;
2616:src/keys.c    **** 	const enum shifts shift = reset_shift();
2617:src/keys.c    **** 	int op = STATE_UNFINISHED;
2618:src/keys.c    **** 
2619:src/keys.c    **** 	if (n < REGION_XROM) {
2620:src/keys.c    **** 		// Digits take you to that segment
2621:src/keys.c    **** 		pc = addrLIB(1, n);
2622:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2623:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2624:src/keys.c    **** 		State2.digval = pc;
2625:src/keys.c    **** 		return STATE_UNFINISHED;
2626:src/keys.c    **** 	}
2627:src/keys.c    **** 
2628:src/keys.c    **** 	switch (c | (shift << 8)) {
2629:src/keys.c    **** 
2630:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2631:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2632:src/keys.c    **** 		goto next;
2633:src/keys.c    **** 
2634:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2635:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2636:src/keys.c    **** 	case K_DOWN:				// Find next label
2637:src/keys.c    **** 	next:
2638:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2639:src/keys.c    **** 		return STATE_UNFINISHED;
2640:src/keys.c    **** 
2641:src/keys.c    **** 	case K_UP:				// Find previous label
2642:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2643:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccsJYix0.s 			page 81


2644:src/keys.c    **** 
2645:src/keys.c    **** 	case K24:				// <- exits
2646:src/keys.c    **** 		break;
2647:src/keys.c    **** 
2648:src/keys.c    **** 	case K20:				// ENTER^
2649:src/keys.c    **** 	set_pc_and_exit:
2650:src/keys.c    **** 		set_pc(pc);			// forced branch
2651:src/keys.c    **** 		break;
2652:src/keys.c    **** 
2653:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2654:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2655:src/keys.c    **** 		goto set_pc_and_exit;
2656:src/keys.c    **** 
2657:src/keys.c    **** 	case K10:				// STO
2658:src/keys.c    **** 	case K11:				// RCL
2659:src/keys.c    **** 	  //#ifndef DM42	
2660:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2661:src/keys.c    **** 	  //#endif
2662:src/keys.c    **** /* #ifdef DM42 */
2663:src/keys.c    **** /* 	        op = OP_NIL; */
2664:src/keys.c    **** /* #endif	     */
2665:src/keys.c    **** 	  goto set_pc_and_exit;
2666:src/keys.c    **** #ifdef DM42
2667:src/keys.c    **** 	case K05:				// XEQ
2668:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2669:src/keys.c    **** 		goto xeq_or_gto;
2670:src/keys.c    **** 
2671:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2672:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2673:src/keys.c    **** 	xeq_or_gto:
2674:src/keys.c    **** 		if (label)
2675:src/keys.c    **** 			break;
2676:src/keys.c    **** 		return STATE_UNFINISHED;
2677:src/keys.c    **** #else
2678:src/keys.c    **** 	case K30:				// XEQ
2679:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2680:src/keys.c    **** 		goto xeq_or_gto;
2681:src/keys.c    **** 
2682:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2683:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2684:src/keys.c    **** 	xeq_or_gto:
2685:src/keys.c    **** 		if (label)
2686:src/keys.c    **** 			break;
2687:src/keys.c    **** 		return STATE_UNFINISHED;
2688:src/keys.c    **** #endif		
2689:src/keys.c    **** 	case K63:				// R/S
2690:src/keys.c    **** 		if (direct && label) {
2691:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2692:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2693:src/keys.c    **** 			break;
2694:src/keys.c    **** 		}
2695:src/keys.c    **** 		return STATE_UNFINISHED;
2696:src/keys.c    **** 
2697:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2698:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2699:src/keys.c    **** 		goto set_pc_and_exit;
2700:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 82


2701:src/keys.c    **** 	default:
2702:src/keys.c    **** 		return STATE_UNFINISHED;
2703:src/keys.c    **** 	}
2704:src/keys.c    **** 	State2.digval = 0;
2705:src/keys.c    **** 	State2.labellist = 0;
2706:src/keys.c    **** 	return check_confirm(op);
2707:src/keys.c    **** }
2708:src/keys.c    **** 
2709:src/keys.c    **** 
2710:src/keys.c    **** static void set_window(int c) {
 1533              		.loc 1 2710 31 is_stmt 1 view -0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
2711:src/keys.c    **** 
2712:src/keys.c    **** 	if (State2.runmode) {
 1537              		.loc 1 2712 2 view .LVU483
2710:src/keys.c    **** 
 1538              		.loc 1 2710 31 is_stmt 0 view .LVU484
 1539 0000 38B5     		push	{r3, r4, r5, lr}
 1540              		.cfi_def_cfa_offset 16
 1541              		.cfi_offset 3, -16
 1542              		.cfi_offset 4, -12
 1543              		.cfi_offset 5, -8
 1544              		.cfi_offset 14, -4
 1545              		.loc 1 2712 6 view .LVU485
 1546 0002 224C     		ldr	r4, .L188
 1547 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1548              		.loc 1 2712 5 view .LVU486
 1549 0006 5A06     		lsls	r2, r3, #25
 1550 0008 00D4     		bmi	.L185
 1551              	.LVL115:
 1552              	.L173:
2713:src/keys.c    **** 		process_cmdline_set_lift();
2714:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2715:src/keys.c    **** 		State2.disp_freeze = 0;
2716:src/keys.c    **** 		display();	
2717:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2718:src/keys.c    **** 			if (UState.intm) {
2719:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2720:src/keys.c    **** 					State2.window--;
2721:src/keys.c    **** 				return;
2722:src/keys.c    **** 			}
2723:src/keys.c    **** 			else 
2724:src/keys.c    **** 				State2.window = is_dblmode();
2725:src/keys.c    **** 		}
2726:src/keys.c    **** 		else {
2727:src/keys.c    **** 			if (UState.intm) {
2728:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2729:src/keys.c    **** 					State2.window++;
2730:src/keys.c    **** 				return;
2731:src/keys.c    **** 			}
2732:src/keys.c    **** 			else
2733:src/keys.c    **** 				State2.window = 0;
2734:src/keys.c    **** 		}
2735:src/keys.c    **** 		set_smode(SDISP_SHOW);
2736:src/keys.c    **** 	}
ARM GAS  /tmp/ccsJYix0.s 			page 83


2737:src/keys.c    **** }
 1553              		.loc 1 2737 1 view .LVU487
 1554 000a 38BD     		pop	{r3, r4, r5, pc}
 1555              	.LVL116:
 1556              	.L185:
2713:src/keys.c    **** 		process_cmdline_set_lift();
 1557              		.loc 1 2713 3 is_stmt 1 view .LVU488
 1558 000c 0546     		mov	r5, r0
 1559 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1560              	.LVL117:
2715:src/keys.c    **** 		display();	
 1561              		.loc 1 2715 3 view .LVU489
2715:src/keys.c    **** 		display();	
 1562              		.loc 1 2715 22 is_stmt 0 view .LVU490
 1563 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1564 0014 6FF30413 		bfc	r3, #4, #1
 1565 0018 E375     		strb	r3, [r4, #23]
2716:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1566              		.loc 1 2716 3 is_stmt 1 view .LVU491
 1567 001a FFF7FEFF 		bl	display
 1568              	.LVL118:
2717:src/keys.c    **** 			if (UState.intm) {
 1569              		.loc 1 2717 3 view .LVU492
2718:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1570              		.loc 1 2718 8 is_stmt 0 view .LVU493
 1571 001e 1C4B     		ldr	r3, .L188+4
 1572 0020 1B68     		ldr	r3, [r3]
2717:src/keys.c    **** 			if (UState.intm) {
 1573              		.loc 1 2717 6 view .LVU494
 1574 0022 2C2D     		cmp	r5, #44
2718:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1575              		.loc 1 2718 8 view .LVU495
 1576 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2717:src/keys.c    **** 			if (UState.intm) {
 1577              		.loc 1 2717 6 view .LVU496
 1578 0028 18D0     		beq	.L186
2727:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1579              		.loc 1 2727 4 is_stmt 1 view .LVU497
2727:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1580              		.loc 1 2727 7 is_stmt 0 view .LVU498
 1581 002a 13F00103 		ands	r3, r3, #1
 1582 002e 09D1     		bne	.L187
2733:src/keys.c    **** 		}
 1583              		.loc 1 2733 5 is_stmt 1 view .LVU499
2733:src/keys.c    **** 		}
 1584              		.loc 1 2733 19 is_stmt 0 view .LVU500
 1585 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1586 0032 63F3C502 		bfi	r2, r3, #3, #3
 1587 0036 2275     		strb	r2, [r4, #20]
 1588              	.L179:
2735:src/keys.c    **** 	}
 1589              		.loc 1 2735 3 is_stmt 1 view .LVU501
 1590              	.LVL119:
 1591              	.LBB285:
 1592              	.LBI285:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1593              		.loc 1 651 13 view .LVU502
ARM GAS  /tmp/ccsJYix0.s 			page 84


 1594              	.LBB286:
 652:src/keys.c    **** }
 1595              		.loc 1 652 2 view .LVU503
 652:src/keys.c    **** }
 1596              		.loc 1 652 15 is_stmt 0 view .LVU504
 1597 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1598 003a 013B     		subs	r3, r3, #1
 1599 003c 18BF     		it	ne
 1600 003e 0123     		movne	r3, #1
 1601 0040 6374     		strb	r3, [r4, #17]
 1602              	.LVL120:
 652:src/keys.c    **** }
 1603              		.loc 1 652 15 view .LVU505
 1604              	.LBE286:
 1605              	.LBE285:
 1606              		.loc 1 2737 1 view .LVU506
 1607 0042 38BD     		pop	{r3, r4, r5, pc}
 1608              	.LVL121:
 1609              	.L187:
2728:src/keys.c    **** 					State2.window++;
 1610              		.loc 1 2728 5 is_stmt 1 view .LVU507
2728:src/keys.c    **** 					State2.window++;
 1611              		.loc 1 2728 22 is_stmt 0 view .LVU508
 1612 0044 134A     		ldr	r2, .L188+8
2728:src/keys.c    **** 					State2.window++;
 1613              		.loc 1 2728 42 view .LVU509
 1614 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2728:src/keys.c    **** 					State2.window++;
 1615              		.loc 1 2728 8 view .LVU510
 1616 0048 1168     		ldr	r1, [r2]
2728:src/keys.c    **** 					State2.window++;
 1617              		.loc 1 2728 42 view .LVU511
 1618 004a C3F3C202 		ubfx	r2, r3, #3, #3
2728:src/keys.c    **** 					State2.window++;
 1619              		.loc 1 2728 8 view .LVU512
 1620 004e 8A42     		cmp	r2, r1
 1621 0050 DBDA     		bge	.L173
2729:src/keys.c    **** 				return;
 1622              		.loc 1 2729 6 is_stmt 1 view .LVU513
2729:src/keys.c    **** 				return;
 1623              		.loc 1 2729 19 is_stmt 0 view .LVU514
 1624 0052 0132     		adds	r2, r2, #1
 1625 0054 62F3C503 		bfi	r3, r2, #3, #3
 1626 0058 2375     		strb	r3, [r4, #20]
 1627              		.loc 1 2737 1 view .LVU515
 1628 005a 38BD     		pop	{r3, r4, r5, pc}
 1629              	.LVL122:
 1630              	.L186:
2718:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1631              		.loc 1 2718 4 is_stmt 1 view .LVU516
2718:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1632              		.loc 1 2718 7 is_stmt 0 view .LVU517
 1633 005c DB07     		lsls	r3, r3, #31
 1634 005e 0ED5     		bpl	.L177
 1635              	.LBB287:
 1636              	.LBI287:
2710:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 85


 1637              		.loc 1 2710 13 is_stmt 1 view .LVU518
 1638              	.LVL123:
 1639              	.LBB288:
2719:src/keys.c    **** 					State2.window--;
 1640              		.loc 1 2719 5 view .LVU519
2719:src/keys.c    **** 					State2.window--;
 1641              		.loc 1 2719 22 is_stmt 0 view .LVU520
 1642 0060 0C4B     		ldr	r3, .L188+8
2719:src/keys.c    **** 					State2.window--;
 1643              		.loc 1 2719 8 view .LVU521
 1644 0062 1B68     		ldr	r3, [r3]
 1645 0064 002B     		cmp	r3, #0
 1646 0066 D0DD     		ble	.L173
2719:src/keys.c    **** 					State2.window--;
 1647              		.loc 1 2719 43 view .LVU522
 1648 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2719:src/keys.c    **** 					State2.window--;
 1649              		.loc 1 2719 26 view .LVU523
 1650 006a 13F0380F 		tst	r3, #56
 1651 006e CCD0     		beq	.L173
2720:src/keys.c    **** 				return;
 1652              		.loc 1 2720 6 is_stmt 1 view .LVU524
2720:src/keys.c    **** 				return;
 1653              		.loc 1 2720 12 is_stmt 0 view .LVU525
 1654 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2720:src/keys.c    **** 				return;
 1655              		.loc 1 2720 19 view .LVU526
 1656 0074 0732     		adds	r2, r2, #7
 1657 0076 62F3C503 		bfi	r3, r2, #3, #3
 1658 007a 2375     		strb	r3, [r4, #20]
 1659              	.LBE288:
 1660              	.LBE287:
 1661              		.loc 1 2737 1 view .LVU527
 1662 007c 38BD     		pop	{r3, r4, r5, pc}
 1663              	.LVL124:
 1664              	.L177:
2724:src/keys.c    **** 		}
 1665              		.loc 1 2724 5 is_stmt 1 view .LVU528
2724:src/keys.c    **** 		}
 1666              		.loc 1 2724 21 is_stmt 0 view .LVU529
 1667 007e FFF7FEFF 		bl	is_dblmode
 1668              	.LVL125:
2724:src/keys.c    **** 		}
 1669              		.loc 1 2724 19 view .LVU530
 1670 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1671 0084 60F3C503 		bfi	r3, r0, #3, #3
 1672 0088 2375     		strb	r3, [r4, #20]
 1673 008a D5E7     		b	.L179
 1674              	.L189:
 1675              		.align	2
 1676              	.L188:
 1677 008c 00000000 		.word	StateWhileOn
 1678 0090 00000000 		.word	main_ram
 1679 0094 00000000 		.word	IntMaxWindow
 1680              		.cfi_endproc
 1681              	.LFE53:
 1683              		.section	.text.arg_storcl,"ax",%progbits
ARM GAS  /tmp/ccsJYix0.s 			page 86


 1684              		.align	1
 1685              		.p2align 2,,3
 1686              		.syntax unified
 1687              		.thumb
 1688              		.thumb_func
 1689              		.fpu fpv4-sp-d16
 1691              	arg_storcl:
 1692              	.LVL126:
 1693              	.LFB34:
1636:src/keys.c    **** 	unsigned int b = CmdBase;
 1694              		.loc 1 1636 56 is_stmt 1 view -0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 0, uses_anonymous_args = 0
 1698              		@ link register save eliminated.
1637:src/keys.c    **** 
 1699              		.loc 1 1637 2 view .LVU532
1637:src/keys.c    **** 
 1700              		.loc 1 1637 19 is_stmt 0 view .LVU533
 1701 0000 0F4A     		ldr	r2, .L222
 1702 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1703              	.LVL127:
1639:src/keys.c    **** 		CmdBase += n;
 1704              		.loc 1 1639 2 is_stmt 1 view .LVU534
 1705              	.LBB297:
 1706              	.LBI297:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1707              		.loc 1 1627 12 view .LVU535
 1708              	.LBB298:
1632:src/keys.c    **** #endif
 1709              		.loc 1 1632 2 view .LVU536
1632:src/keys.c    **** #endif
 1710              		.loc 1 1632 41 is_stmt 0 view .LVU537
 1711 0004 032B     		cmp	r3, #3
 1712 0006 14D0     		beq	.L191
1632:src/keys.c    **** #endif
 1713              		.loc 1 1632 24 view .LVU538
 1714 0008 0A2B     		cmp	r3, #10
 1715 000a 12D0     		beq	.L191
 1716              	.LVL128:
 1717              	.LBB299:
 1718              	.LBI299:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1719              		.loc 1 1627 12 is_stmt 1 view .LVU539
 1720              	.LBB300:
1632:src/keys.c    **** #endif
 1721              		.loc 1 1632 41 is_stmt 0 view .LVU540
 1722 000c 19B1     		cbz	r1, .L192
1632:src/keys.c    **** #endif
 1723              		.loc 1 1632 51 view .LVU541
 1724 000e 152B     		cmp	r3, #21
 1725 0010 0FD0     		beq	.L191
1632:src/keys.c    **** #endif
 1726              		.loc 1 1632 70 view .LVU542
 1727 0012 1A2B     		cmp	r3, #26
 1728 0014 0DD0     		beq	.L191
 1729              	.L192:
ARM GAS  /tmp/ccsJYix0.s 			page 87


 1730              	.LVL129:
1632:src/keys.c    **** #endif
 1731              		.loc 1 1632 70 view .LVU543
 1732              	.LBE300:
 1733              	.LBE299:
 1734              	.LBE298:
 1735              	.LBE297:
1644:src/keys.c    **** 		b -= n;
 1736              		.loc 1 1644 2 is_stmt 1 view .LVU544
1644:src/keys.c    **** 		b -= n;
 1737              		.loc 1 1644 5 is_stmt 0 view .LVU545
 1738 0016 8342     		cmp	r3, r0
 1739 0018 09D3     		bcc	.L197
1645:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1740              		.loc 1 1645 3 is_stmt 1 view .LVU546
1645:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1741              		.loc 1 1645 5 is_stmt 0 view .LVU547
 1742 001a 1B1A     		subs	r3, r3, r0
 1743              	.LVL130:
1646:src/keys.c    **** 			CmdBase = b;
 1744              		.loc 1 1646 3 is_stmt 1 view .LVU548
 1745              	.LBB301:
 1746              	.LBI301:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1747              		.loc 1 1627 12 view .LVU549
 1748              	.LBB302:
1632:src/keys.c    **** #endif
 1749              		.loc 1 1632 2 view .LVU550
1632:src/keys.c    **** #endif
 1750              		.loc 1 1632 41 is_stmt 0 view .LVU551
 1751 001c 032B     		cmp	r3, #3
 1752 001e 0CD0     		beq	.L195
1632:src/keys.c    **** #endif
 1753              		.loc 1 1632 24 view .LVU552
 1754 0020 0A2B     		cmp	r3, #10
 1755 0022 0AD0     		beq	.L195
 1756              	.LVL131:
 1757              	.LBB303:
 1758              	.LBI303:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1759              		.loc 1 1627 12 is_stmt 1 view .LVU553
 1760              	.LBB304:
1632:src/keys.c    **** #endif
 1761              		.loc 1 1632 41 is_stmt 0 view .LVU554
 1762 0024 19B1     		cbz	r1, .L197
1632:src/keys.c    **** #endif
 1763              		.loc 1 1632 51 view .LVU555
 1764 0026 152B     		cmp	r3, #21
 1765 0028 07D0     		beq	.L195
1632:src/keys.c    **** #endif
 1766              		.loc 1 1632 70 view .LVU556
 1767 002a 1A2B     		cmp	r3, #26
 1768 002c 05D0     		beq	.L195
 1769              	.LVL132:
 1770              	.L197:
1632:src/keys.c    **** #endif
 1771              		.loc 1 1632 70 view .LVU557
ARM GAS  /tmp/ccsJYix0.s 			page 88


 1772              	.LBE304:
 1773              	.LBE303:
 1774              	.LBE302:
 1775              	.LBE301:
1651:src/keys.c    **** }
 1776              		.loc 1 1651 9 view .LVU558
 1777 002e 0020     		movs	r0, #0
 1778              	.LVL133:
1652:src/keys.c    **** 
 1779              		.loc 1 1652 1 view .LVU559
 1780 0030 7047     		bx	lr
 1781              	.LVL134:
 1782              	.L191:
1640:src/keys.c    **** 		return 1;
 1783              		.loc 1 1640 3 is_stmt 1 view .LVU560
1640:src/keys.c    **** 		return 1;
 1784              		.loc 1 1640 11 is_stmt 0 view .LVU561
 1785 0032 1844     		add	r0, r0, r3
 1786              	.LVL135:
1640:src/keys.c    **** 		return 1;
 1787              		.loc 1 1640 11 view .LVU562
 1788 0034 D077     		strb	r0, [r2, #31]
1641:src/keys.c    **** 	}
 1789              		.loc 1 1641 3 is_stmt 1 view .LVU563
1641:src/keys.c    **** 	}
 1790              		.loc 1 1641 10 is_stmt 0 view .LVU564
 1791 0036 0120     		movs	r0, #1
 1792 0038 7047     		bx	lr
 1793              	.LVL136:
 1794              	.L195:
1647:src/keys.c    **** 			return 1;
 1795              		.loc 1 1647 4 is_stmt 1 view .LVU565
1647:src/keys.c    **** 			return 1;
 1796              		.loc 1 1647 12 is_stmt 0 view .LVU566
 1797 003a D377     		strb	r3, [r2, #31]
1648:src/keys.c    **** 		}
 1798              		.loc 1 1648 4 is_stmt 1 view .LVU567
1648:src/keys.c    **** 		}
 1799              		.loc 1 1648 11 is_stmt 0 view .LVU568
 1800 003c 0120     		movs	r0, #1
 1801              	.LVL137:
1648:src/keys.c    **** 		}
 1802              		.loc 1 1648 11 view .LVU569
 1803 003e 7047     		bx	lr
 1804              	.L223:
 1805              		.align	2
 1806              	.L222:
 1807 0040 00000000 		.word	StateWhileOn
 1808              		.cfi_endproc
 1809              	.LFE34:
 1811              		.section	.text.process_arg,"ax",%progbits
 1812              		.align	1
 1813              		.p2align 2,,3
 1814              		.syntax unified
 1815              		.thumb
 1816              		.thumb_func
 1817              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccsJYix0.s 			page 89


 1819              	process_arg:
 1820              	.LVL138:
 1821              	.LFB37:
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1822              		.loc 1 1686 41 is_stmt 1 view -0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 8
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1826              		.loc 1 1687 2 view .LVU571
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1827              		.loc 1 1686 41 is_stmt 0 view .LVU572
 1828 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1829              		.cfi_def_cfa_offset 36
 1830              		.cfi_offset 4, -36
 1831              		.cfi_offset 5, -32
 1832              		.cfi_offset 6, -28
 1833              		.cfi_offset 7, -24
 1834              		.cfi_offset 8, -20
 1835              		.cfi_offset 9, -16
 1836              		.cfi_offset 10, -12
 1837              		.cfi_offset 11, -8
 1838              		.cfi_offset 14, -4
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1839              		.loc 1 1687 22 view .LVU573
 1840 0004 C94C     		ldr	r4, .L368
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1841              		.loc 1 1689 31 view .LVU574
 1842 0006 DFF834A3 		ldr	r10, .L368+16
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1843              		.loc 1 1687 22 view .LVU575
 1844 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 1845              	.LBB326:
 1846              	.LBB327:
 1847              	.LBB328:
 1848              	.LBB329:
 133:src/keys.c    **** }
 1849              		.loc 1 133 23 view .LVU576
 1850 000c C84A     		ldr	r2, .L368+4
 1851              	.LBE329:
 1852              	.LBE328:
 224:src/keys.c    **** }
 1853              		.loc 1 224 28 view .LVU577
 1854 000e C94E     		ldr	r6, .L368+8
 1855              	.LBB332:
 1856              	.LBB330:
 133:src/keys.c    **** }
 1857              		.loc 1 133 23 view .LVU578
 1858 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1859              	.LBE330:
 1860              	.LBE332:
 1861              	.LBE327:
 1862              	.LBE326:
1690:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1863              		.loc 1 1690 20 view .LVU579
 1864 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1865              	.LBB336:
ARM GAS  /tmp/ccsJYix0.s 			page 90


 1866              	.LBB334:
 224:src/keys.c    **** }
 1867              		.loc 1 224 28 view .LVU580
 1868 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 1869              	.LBE334:
 1870              	.LBE336:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1871              		.loc 1 1689 31 view .LVU581
 1872 0018 0AEB0511 		add	r1, r10, r5, lsl #4
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1873              		.loc 1 1686 41 view .LVU582
 1874 001c 83B0     		sub	sp, sp, #12
 1875              		.cfi_def_cfa_offset 48
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1876              		.loc 1 1689 31 view .LVU583
 1877 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1878              		.loc 1 1687 15 view .LVU584
 1879 0020 0095     		str	r5, [sp]
 1880              	.LVL139:
1688:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1881              		.loc 1 1688 2 is_stmt 1 view .LVU585
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1882              		.loc 1 1689 40 is_stmt 0 view .LVU586
 1883 0022 4A07     		lsls	r2, r1, #29
 1884 0024 58BF     		it	pl
 1885 0026 94F91580 		ldrsbpl	r8, [r4, #21]
1690:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1886              		.loc 1 1690 20 view .LVU587
 1887 002a 0193     		str	r3, [sp, #4]
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1888              		.loc 1 1689 40 view .LVU588
 1889 002c 54BF     		ite	pl
 1890 002e 4FEAD878 		lsrpl	r8, r8, #31
 1891 0032 4FF00108 		movmi	r8, #1
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1892              		.loc 1 1686 41 view .LVU589
 1893 0036 0746     		mov	r7, r0
 1894              	.LVL140:
 1895              	.LBB337:
 1896              	.LBI326:
 200:src/keys.c    **** {
 1897              		.loc 1 200 14 is_stmt 1 view .LVU590
 1898              	.LBB335:
 202:src/keys.c    ****     // K00 - K05
 1899              		.loc 1 202 3 view .LVU591
 224:src/keys.c    **** }
 1900              		.loc 1 224 3 view .LVU592
 1901              	.LBB333:
 1902              	.LBI328:
 121:src/keys.c    **** {
 1903              		.loc 1 121 12 view .LVU593
 1904              	.LBB331:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1905              		.loc 1 123 2 view .LVU594
 133:src/keys.c    **** }
 1906              		.loc 1 133 2 view .LVU595
ARM GAS  /tmp/ccsJYix0.s 			page 91


 133:src/keys.c    **** }
 1907              		.loc 1 133 2 is_stmt 0 view .LVU596
 1908              	.LBE331:
 1909              	.LBE333:
 224:src/keys.c    **** }
 1910              		.loc 1 224 10 view .LVU597
 1911 0038 4E46     		mov	r6, r9
 1912              	.LVL141:
 224:src/keys.c    **** }
 1913              		.loc 1 224 10 view .LVU598
 1914              	.LBE335:
 1915              	.LBE337:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1916              		.loc 1 1689 2 is_stmt 1 view .LVU599
1690:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1917              		.loc 1 1690 2 view .LVU600
1691:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1918              		.loc 1 1691 2 view .LVU601
 1919              	.LBB338:
 1920              	.LBI338:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 1921              		.loc 1 104 13 view .LVU602
 1922              	.LBE338:
 105:src/keys.c    **** }
 1923              		.loc 1 105 2 view .LVU603
 1924              	.LBB351:
 1925              	.LBB339:
 1926              	.LBI339:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 1927              		.loc 1 94 20 view .LVU604
 1928              	.LBB340:
  95:src/keys.c    **** 	State2.shifts = shift;
 1929              		.loc 1 95 2 view .LVU605
 1930              	.LBB341:
 1931              	.LBI341:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 1932              		.loc 1 86 13 view .LVU606
 1933              	.LBB342:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1934              		.loc 1 87 2 view .LVU607
 1935              	.LBE342:
 1936              	.LBE341:
 1937              	.LBE340:
 1938              	.LBE339:
 1939              	.LBE351:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1940              		.loc 1 1689 31 is_stmt 0 view .LVU608
 1941 003a 4FEA051B 		lsl	fp, r5, #4
 1942              	.LBB352:
 1943              	.LBB348:
 1944              	.LBB345:
 1945              	.LBB344:
 1946              	.LBB343:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1947              		.loc 1 87 18 view .LVU609
 1948 003e FFF7FEFF 		bl	shift_down
 1949              	.LVL142:
ARM GAS  /tmp/ccsJYix0.s 			page 92


  88:src/keys.c    **** }
 1950              		.loc 1 88 2 is_stmt 1 view .LVU610
  88:src/keys.c    **** }
 1951              		.loc 1 88 52 is_stmt 0 view .LVU611
 1952 0042 00B9     		cbnz	r0, .L226
 1953 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1954              	.LVL143:
 1955              	.L226:
  88:src/keys.c    **** }
 1956              		.loc 1 88 52 view .LVU612
 1957              	.LBE343:
 1958              	.LBE344:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1959              		.loc 1 96 2 is_stmt 1 view .LVU613
 1960              	.LBE345:
 1961              	.LBE348:
 1962              	.LBE352:
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1963              		.loc 1 1692 38 is_stmt 0 view .LVU614
 1964 0046 D344     		add	fp, fp, r10
 1965              	.LBB353:
 1966              	.LBB349:
 1967              	.LBB346:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1968              		.loc 1 96 16 view .LVU615
 1969 0048 4FF0000E 		mov	lr, #0
 1970              	.LBE346:
 1971              	.LBE349:
 1972              	.LBE353:
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1973              		.loc 1 1692 38 view .LVU616
 1974 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 1975              	.LBB354:
 1976              	.LBB350:
 1977              	.LBB347:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1978              		.loc 1 96 16 view .LVU617
 1979 0050 84F810E0 		strb	lr, [r4, #16]
  98:src/keys.c    **** }
 1980              		.loc 1 98 2 is_stmt 1 view .LVU618
 1981              	.LVL144:
  98:src/keys.c    **** }
 1982              		.loc 1 98 2 is_stmt 0 view .LVU619
 1983              	.LBE347:
 1984              	.LBE350:
 1985              	.LBE354:
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1986              		.loc 1 1692 2 is_stmt 1 view .LVU620
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1987              		.loc 1 1692 61 is_stmt 0 view .LVU621
 1988 0054 8B06     		lsls	r3, r1, #26
 1989 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 1990 005a 19D5     		bpl	.L227
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1991              		.loc 1 1692 61 discriminator 1 view .LVU622
 1992 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 1993 005e 11F0C00F 		tst	r1, #192
ARM GAS  /tmp/ccsJYix0.s 			page 93


 1994 0062 1FD0     		beq	.L356
 1995              	.LVL145:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 1996              		.loc 1 1696 2 is_stmt 1 view .LVU623
1697:src/keys.c    **** 		reset_arg();
 1997              		.loc 1 1697 5 is_stmt 0 view .LVU624
 1998 0064 8E2D     		cmp	r5, #142
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 1999              		.loc 1 1696 4 view .LVU625
 2000 0066 29F08006 		bic	r6, r9, #128
 2001              	.LVL146:
1697:src/keys.c    **** 		reset_arg();
 2002              		.loc 1 1697 2 is_stmt 1 view .LVU626
1697:src/keys.c    **** 		reset_arg();
 2003              		.loc 1 1697 5 is_stmt 0 view .LVU627
 2004 006a 15D8     		bhi	.L256
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2005              		.loc 1 1692 61 view .LVU628
 2006 006c F446     		mov	ip, lr
 2007              	.L236:
1702:src/keys.c    **** 	  switch (n) {
 2008              		.loc 1 1702 35 discriminator 1 view .LVU629
 2009 006e 6169     		ldr	r1, [r4, #20]
 2010 0070 11F4103F 		tst	r1, #147456
 2011 0074 2ED1     		bne	.L238
1703:src/keys.c    **** 	  case regX_idx:
 2012              		.loc 1 1703 4 is_stmt 1 view .LVU630
 2013 0076 672E     		cmp	r6, #103
 2014 0078 2CD8     		bhi	.L238
1703:src/keys.c    **** 	  case regX_idx:
 2015              		.loc 1 1703 4 is_stmt 0 view .LVU631
 2016 007a 632E     		cmp	r6, #99
 2017 007c 24D9     		bls	.L298
 2018 007e 653E     		subs	r6, r6, #101
 2019              	.LVL147:
1703:src/keys.c    **** 	  case regX_idx:
 2020              		.loc 1 1703 4 view .LVU632
 2021 0080 022E     		cmp	r6, #2
 2022 0082 00F26082 		bhi	.L241
 2023 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 2024              	.L243:
 2025 008a 1101     		.2byte	(.L245-.L243)/2
 2026 008c 0B01     		.2byte	(.L244-.L243)/2
 2027 008e 1301     		.2byte	(.L242-.L243)/2
 2028              	.LVL148:
 2029              		.p2align 1
 2030              	.L227:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2031              		.loc 1 1696 2 is_stmt 1 view .LVU633
1697:src/keys.c    **** 		reset_arg();
 2032              		.loc 1 1697 5 is_stmt 0 view .LVU634
 2033 0090 8E2D     		cmp	r5, #142
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2034              		.loc 1 1696 4 view .LVU635
 2035 0092 29F08006 		bic	r6, r9, #128
 2036              	.LVL149:
1697:src/keys.c    **** 		reset_arg();
ARM GAS  /tmp/ccsJYix0.s 			page 94


 2037              		.loc 1 1697 2 is_stmt 1 view .LVU636
1697:src/keys.c    **** 		reset_arg();
 2038              		.loc 1 1697 5 is_stmt 0 view .LVU637
 2039 0096 EAD9     		bls	.L236
 2040              	.LVL150:
 2041              	.L256:
1952:src/keys.c    **** 	default:
 2042              		.loc 1 1952 3 is_stmt 1 view .LVU638
 2043 0098 FFF7FEFF 		bl	reset_arg
 2044              	.LVL151:
 2045              	.L349:
1956:src/keys.c    **** }
 2046              		.loc 1 1956 9 is_stmt 0 view .LVU639
 2047 009c 3320     		movs	r0, #51
 2048              	.L224:
1957:src/keys.c    **** 
 2049              		.loc 1 1957 1 view .LVU640
 2050 009e 03B0     		add	sp, sp, #12
 2051              		.cfi_remember_state
 2052              		.cfi_def_cfa_offset 36
 2053              		@ sp needed
 2054 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2055              	.LVL152:
 2056              	.L356:
 2057              		.cfi_restore_state
1693:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 2058              		.loc 1 1693 2 is_stmt 1 view .LVU641
1693:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 2059              		.loc 1 1693 35 is_stmt 0 view .LVU642
 2060 00a4 292F     		cmp	r7, #41
 2061 00a6 00F0C080 		beq	.L229
1694:src/keys.c    **** 
 2062              		.loc 1 1694 11 view .LVU643
 2063 00aa 0128     		cmp	r0, #1
 2064 00ac 00F0D180 		beq	.L230
1694:src/keys.c    **** 
 2065              		.loc 1 1694 32 discriminator 3 view .LVU644
 2066 00b0 B9F1090F 		cmp	r9, #9
 2067 00b4 00F2B680 		bhi	.L231
 2068              	.LVL153:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2069              		.loc 1 1696 2 is_stmt 1 view .LVU645
1697:src/keys.c    **** 		reset_arg();
 2070              		.loc 1 1697 2 view .LVU646
1697:src/keys.c    **** 		reset_arg();
 2071              		.loc 1 1697 5 is_stmt 0 view .LVU647
 2072 00b8 8E2D     		cmp	r5, #142
 2073 00ba EDD8     		bhi	.L256
1702:src/keys.c    **** 	  switch (n) {
 2074              		.loc 1 1702 35 view .LVU648
 2075 00bc 6169     		ldr	r1, [r4, #20]
 2076 00be 11F4103F 		tst	r1, #147456
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2077              		.loc 1 1692 61 view .LVU649
 2078 00c2 4FF0010C 		mov	ip, #1
1702:src/keys.c    **** 	  switch (n) {
 2079              		.loc 1 1702 35 view .LVU650
ARM GAS  /tmp/ccsJYix0.s 			page 95


 2080 00c6 05D1     		bne	.L238
 2081              	.L298:
1703:src/keys.c    **** 	  case regX_idx:
 2082              		.loc 1 1703 4 view .LVU651
 2083 00c8 16B1     		cbz	r6, .L240
 2084 00ca 721F     		subs	r2, r6, #5
 2085 00cc 042A     		cmp	r2, #4
 2086 00ce 01D8     		bhi	.L238
 2087              	.L240:
1718:src/keys.c    **** 	  }
 2088              		.loc 1 1718 6 is_stmt 1 view .LVU652
1718:src/keys.c    **** 	  }
 2089              		.loc 1 1718 13 is_stmt 0 view .LVU653
 2090 00d0 3046     		mov	r0, r6
 2091              	.LVL154:
1718:src/keys.c    **** 	  }
 2092              		.loc 1 1718 13 view .LVU654
 2093 00d2 E6E0     		b	.L350
 2094              	.LVL155:
 2095              	.L238:
1725:src/keys.c    **** 		// row column shorthand addressing
 2096              		.loc 1 1725 2 is_stmt 1 view .LVU655
1731:src/keys.c    **** 		switch ((int)c) {
 2097              		.loc 1 1731 2 view .LVU656
1731:src/keys.c    **** 		switch ((int)c) {
 2098              		.loc 1 1731 5 is_stmt 0 view .LVU657
 2099 00d4 4D2D     		cmp	r5, #77
 2100 00d6 00F0B180 		beq	.L357
1731:src/keys.c    **** 		switch ((int)c) {
 2101              		.loc 1 1731 23 discriminator 1 view .LVU658
 2102 00da 05F17302 		add	r2, r5, #115
 2103 00de D2B2     		uxtb	r2, r2
 2104 00e0 012A     		cmp	r2, #1
 2105 00e2 61D9     		bls	.L358
 2106              	.LVL156:
 2107              	.L247:
1762:src/keys.c    **** #else
 2108              		.loc 1 1762 3 is_stmt 1 view .LVU659
1762:src/keys.c    **** #else
 2109              		.loc 1 1762 11 is_stmt 0 view .LVU660
 2110 00e4 E577     		strb	r5, [r4, #31]
1785:src/keys.c    **** 	case K_F:
 2111              		.loc 1 1785 2 is_stmt 1 view .LVU661
 2112 00e6 2D2F     		cmp	r7, #45
 2113 00e8 D8D8     		bhi	.L349
 2114 00ea 01A3     		adr	r3, .L251
 2115 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 2116              		.p2align 2
 2117              	.L251:
 2118 00f0 C1010000 		.word	.L268+1
 2119 00f4 C1010000 		.word	.L268+1
 2120 00f8 C1010000 		.word	.L268+1
 2121 00fc C1010000 		.word	.L268+1
 2122 0100 9D000000 		.word	.L349+1
 2123 0104 9D000000 		.word	.L349+1
 2124 0108 9D000000 		.word	.L349+1
 2125 010c 9D000000 		.word	.L349+1
ARM GAS  /tmp/ccsJYix0.s 			page 96


 2126 0110 C1010000 		.word	.L268+1
 2127 0114 C1010000 		.word	.L268+1
 2128 0118 C1010000 		.word	.L268+1
 2129 011c C1010000 		.word	.L268+1
 2130 0120 45040000 		.word	.L267+1
 2131 0124 9D000000 		.word	.L349+1
 2132 0128 9D000000 		.word	.L349+1
 2133 012c 9D000000 		.word	.L349+1
 2134 0130 C7020000 		.word	.L266+1
 2135 0134 9D000000 		.word	.L349+1
 2136 0138 19020000 		.word	.L265+1
 2137 013c 9D000000 		.word	.L349+1
 2138 0140 9D000000 		.word	.L349+1
 2139 0144 9D000000 		.word	.L349+1
 2140 0148 F3020000 		.word	.L264+1
 2141 014c 9D000000 		.word	.L349+1
 2142 0150 FF020000 		.word	.L263+1
 2143 0154 0B030000 		.word	.L262+1
 2144 0158 9D000000 		.word	.L349+1
 2145 015c 9D000000 		.word	.L349+1
 2146 0160 81020000 		.word	.L261+1
 2147 0164 9D000000 		.word	.L349+1
 2148 0168 9D000000 		.word	.L349+1
 2149 016c 1F030000 		.word	.L260+1
 2150 0170 4D040000 		.word	.L259+1
 2151 0174 41030000 		.word	.L258+1
 2152 0178 4D030000 		.word	.L257+1
 2153 017c 9D000000 		.word	.L349+1
 2154 0180 99000000 		.word	.L256+1
 2155 0184 9D000000 		.word	.L349+1
 2156 0188 67030000 		.word	.L255+1
 2157 018c 9D000000 		.word	.L349+1
 2158 0190 AD030000 		.word	.L254+1
 2159 0194 CD030000 		.word	.L253+1
 2160 0198 9D000000 		.word	.L349+1
 2161 019c 9D000000 		.word	.L349+1
 2162 01a0 ED030000 		.word	.L252+1
 2163 01a4 25040000 		.word	.L250+1
 2164              	.LVL157:
 2165              		.p2align 1
 2166              	.L358:
1732:src/keys.c    **** 		case K_UP:	// up arrow
 2167              		.loc 1 1732 3 view .LVU662
 2168 01a8 122F     		cmp	r7, #18
 2169 01aa 2FD0     		beq	.L294
 2170 01ac 182F     		cmp	r7, #24
 2171 01ae 01D0     		beq	.L295
 2172 01b0 012F     		cmp	r7, #1
 2173 01b2 97D1     		bne	.L247
 2174              	.L295:
1748:src/keys.c    **** 		    base = RARG_SIG0;
 2175              		.loc 1 1748 5 view .LVU663
1752:src/keys.c    **** 		    base = RARG_FIX;
 2176              		.loc 1 1752 5 view .LVU664
1752:src/keys.c    **** 		    base = RARG_FIX;
 2177              		.loc 1 1752 8 is_stmt 0 view .LVU665
 2178 01b4 8D2D     		cmp	r5, #141
ARM GAS  /tmp/ccsJYix0.s 			page 97


 2179 01b6 7DD1     		bne	.L359
 2180 01b8 4D23     		movs	r3, #77
 2181 01ba 0093     		str	r3, [sp]
 2182              	.LVL158:
1753:src/keys.c    **** 		    break;
 2183              		.loc 1 1753 12 view .LVU666
 2184 01bc 1D46     		mov	r5, r3
 2185 01be 91E7     		b	.L247
 2186              	.LVL159:
 2187              	.L268:
1840:src/keys.c    **** 			return arg_eval(n);
 2188              		.loc 1 1840 4 is_stmt 1 view .LVU667
1840:src/keys.c    **** 			return arg_eval(n);
 2189              		.loc 1 1840 8 is_stmt 0 view .LVU668
 2190 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
1840:src/keys.c    **** 			return arg_eval(n);
 2191              		.loc 1 1840 7 view .LVU669
 2192 01c2 5306     		lsls	r3, r2, #25
 2193 01c4 6AD4     		bmi	.L283
1840:src/keys.c    **** 			return arg_eval(n);
 2194              		.loc 1 1840 19 discriminator 1 view .LVU670
 2195 01c6 B8F1000F 		cmp	r8, #0
 2196 01ca 67D1     		bne	.L283
1842:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2197              		.loc 1 1842 3 is_stmt 1 view .LVU671
1842:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2198              		.loc 1 1842 6 is_stmt 0 view .LVU672
 2199 01cc 032F     		cmp	r7, #3
 2200 01ce 3FF665AF 		bhi	.L349
1843:src/keys.c    **** 		break;
 2201              		.loc 1 1843 4 is_stmt 1 view .LVU673
 2202              	.LVL160:
 2203              	.LBB355:
 2204              	.LBI355:
1613:src/keys.c    **** 	const unsigned int b = CmdBase;
 2205              		.loc 1 1613 12 view .LVU674
 2206              	.LBB356:
1614:src/keys.c    **** 
 2207              		.loc 1 1614 2 view .LVU675
1616:src/keys.c    **** 	{
 2208              		.loc 1 1616 2 view .LVU676
1616:src/keys.c    **** 	{
 2209              		.loc 1 1616 16 is_stmt 0 view .LVU677
 2210 01d2 009B     		ldr	r3, [sp]
 2211 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 2212 01d8 1801     		lsls	r0, r3, #4
 2213 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1616:src/keys.c    **** 	{
 2214              		.loc 1 1616 5 view .LVU678
 2215 01dc 8D06     		lsls	r5, r1, #26
 2216 01de 05D4     		bmi	.L274
1616:src/keys.c    **** 	{
 2217              		.loc 1 1616 40 view .LVU679
 2218 01e0 A3F15109 		sub	r9, r3, #81
1616:src/keys.c    **** 	{
 2219              		.loc 1 1616 23 view .LVU680
 2220 01e4 B9F10A0F 		cmp	r9, #10
ARM GAS  /tmp/ccsJYix0.s 			page 98


 2221 01e8 3FF658AF 		bhi	.L349
 2222              	.L274:
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2223              		.loc 1 1618 3 is_stmt 1 view .LVU681
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2224              		.loc 1 1618 6 is_stmt 0 view .LVU682
 2225 01ec 1106     		lsls	r1, r2, #24
 2226 01ee 3FF555AF 		bmi	.L349
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2227              		.loc 1 1618 18 view .LVU683
 2228 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 2229 01f4 002A     		cmp	r2, #0
 2230 01f6 7FF451AF 		bne	.L349
1620:src/keys.c    **** 			return STATE_UNFINISHED;
 2231              		.loc 1 1620 3 is_stmt 1 view .LVU684
1620:src/keys.c    **** 			return STATE_UNFINISHED;
 2232              		.loc 1 1620 17 is_stmt 0 view .LVU685
 2233 01fa 0AEB0003 		add	r3, r10, r0
1620:src/keys.c    **** 			return STATE_UNFINISHED;
 2234              		.loc 1 1620 6 view .LVU686
 2235 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2236 0200 632B     		cmp	r3, #99
 2237 0202 7FF64BAF 		bls	.L349
1622:src/keys.c    **** 	}
 2238              		.loc 1 1622 3 is_stmt 1 view .LVU687
1622:src/keys.c    **** 	}
 2239              		.loc 1 1622 10 is_stmt 0 view .LVU688
 2240 0206 07F16400 		add	r0, r7, #100
 2241 020a 34E0     		b	.L351
 2242              	.LVL161:
 2243              	.L294:
1622:src/keys.c    **** 	}
 2244              		.loc 1 1622 10 view .LVU689
 2245              	.LBE356:
 2246              	.LBE355:
1734:src/keys.c    **** 		    base = RARG_SIG;
 2247              		.loc 1 1734 5 is_stmt 1 view .LVU690
1738:src/keys.c    **** 		    base = RARG_SIG0;
 2248              		.loc 1 1738 5 view .LVU691
1738:src/keys.c    **** 		    base = RARG_SIG0;
 2249              		.loc 1 1738 8 is_stmt 0 view .LVU692
 2250 020c 8D2D     		cmp	r5, #141
 2251 020e 01D0     		beq	.L344
1742:src/keys.c    **** 		    base = RARG_FIX;
 2252              		.loc 1 1742 5 is_stmt 1 view .LVU693
1742:src/keys.c    **** 		    base = RARG_FIX;
 2253              		.loc 1 1742 8 is_stmt 0 view .LVU694
 2254 0210 8E2D     		cmp	r5, #142
 2255 0212 56D0     		beq	.L360
 2256              	.L344:
1762:src/keys.c    **** #else
 2257              		.loc 1 1762 3 is_stmt 1 view .LVU695
1762:src/keys.c    **** #else
 2258              		.loc 1 1762 11 is_stmt 0 view .LVU696
 2259 0214 8E23     		movs	r3, #142
 2260              	.LVL162:
 2261              	.L348:
ARM GAS  /tmp/ccsJYix0.s 			page 99


1762:src/keys.c    **** #else
 2262              		.loc 1 1762 11 view .LVU697
 2263 0216 E377     		strb	r3, [r4, #31]
1785:src/keys.c    **** 	case K_F:
 2264              		.loc 1 1785 2 is_stmt 1 view .LVU698
 2265              	.L265:
1902:src/keys.c    **** 		break;
 2266              		.loc 1 1902 3 view .LVU699
 2267 0218 0021     		movs	r1, #0
 2268 021a 0620     		movs	r0, #6
 2269              	.LVL163:
1902:src/keys.c    **** 		break;
 2270              		.loc 1 1902 3 is_stmt 0 view .LVU700
 2271 021c FFF7FEFF 		bl	arg_storcl
 2272              	.LVL164:
1903:src/keys.c    **** 
 2273              		.loc 1 1903 3 is_stmt 1 view .LVU701
1956:src/keys.c    **** }
 2274              		.loc 1 1956 9 is_stmt 0 view .LVU702
 2275 0220 3320     		movs	r0, #51
1903:src/keys.c    **** 
 2276              		.loc 1 1903 3 view .LVU703
 2277 0222 3CE7     		b	.L224
 2278              	.LVL165:
 2279              	.L231:
1694:src/keys.c    **** 
 2280              		.loc 1 1694 42 discriminator 4 view .LVU704
 2281 0224 19F0800F 		tst	r9, #128
 2282 0228 13D0     		beq	.L230
 2283              	.L229:
 2284              	.LVL166:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2285              		.loc 1 1696 2 is_stmt 1 view .LVU705
1697:src/keys.c    **** 		reset_arg();
 2286              		.loc 1 1697 5 is_stmt 0 view .LVU706
 2287 022a 8E2D     		cmp	r5, #142
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2288              		.loc 1 1696 4 view .LVU707
 2289 022c 29F08006 		bic	r6, r9, #128
 2290              	.LVL167:
1697:src/keys.c    **** 		reset_arg();
 2291              		.loc 1 1697 2 is_stmt 1 view .LVU708
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2292              		.loc 1 1692 61 is_stmt 0 view .LVU709
 2293 0230 98BF     		it	ls
 2294 0232 4FF0010C 		movls	ip, #1
1697:src/keys.c    **** 		reset_arg();
 2295              		.loc 1 1697 5 view .LVU710
 2296 0236 7FF61AAF 		bls	.L236
 2297 023a 2DE7     		b	.L256
 2298              	.L357:
1732:src/keys.c    **** 		case K_UP:	// up arrow
 2299              		.loc 1 1732 3 is_stmt 1 view .LVU711
 2300 023c 122F     		cmp	r7, #18
 2301 023e 00F00B81 		beq	.L306
 2302 0242 182F     		cmp	r7, #24
 2303 0244 02D0     		beq	.L308
ARM GAS  /tmp/ccsJYix0.s 			page 100


 2304 0246 012F     		cmp	r7, #1
 2305 0248 7FF44CAF 		bne	.L247
 2306              	.L308:
 2307 024c 8E25     		movs	r5, #142
 2308              	.LVL168:
1749:src/keys.c    **** 		    break;
 2309              		.loc 1 1749 12 is_stmt 0 view .LVU712
 2310 024e 0095     		str	r5, [sp]
 2311 0250 48E7     		b	.L247
 2312              	.LVL169:
 2313              	.L230:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2314              		.loc 1 1696 2 is_stmt 1 view .LVU713
1697:src/keys.c    **** 		reset_arg();
 2315              		.loc 1 1697 2 view .LVU714
1697:src/keys.c    **** 		reset_arg();
 2316              		.loc 1 1697 5 is_stmt 0 view .LVU715
 2317 0252 8E2D     		cmp	r5, #142
 2318 0254 3FF620AF 		bhi	.L256
1725:src/keys.c    **** 		// row column shorthand addressing
 2319              		.loc 1 1725 2 is_stmt 1 view .LVU716
1727:src/keys.c    **** 
 2320              		.loc 1 1727 3 view .LVU717
 2321              	.LVL170:
 2322              	.LBB357:
 2323              	.LBI357:
 169:src/keys.c    **** {
 2324              		.loc 1 169 5 view .LVU718
 2325              	.LBB358:
 171:src/keys.c    **** }
 2326              		.loc 1 171 2 view .LVU719
 171:src/keys.c    **** }
 2327              		.loc 1 171 18 is_stmt 0 view .LVU720
 2328 0258 374B     		ldr	r3, .L368+12
 2329 025a A3FB0723 		umull	r2, r3, r3, r7
 171:src/keys.c    **** }
 2330              		.loc 1 171 24 view .LVU721
 2331 025e 03F0FC00 		and	r0, r3, #252
 2332              	.LVL171:
 171:src/keys.c    **** }
 2333              		.loc 1 171 24 view .LVU722
 2334 0262 00EB9300 		add	r0, r0, r3, lsr #2
 171:src/keys.c    **** }
 2335              		.loc 1 171 18 view .LVU723
 2336 0266 9B08     		lsrs	r3, r3, #2
 171:src/keys.c    **** }
 2337              		.loc 1 171 24 view .LVU724
 2338 0268 4000     		lsls	r0, r0, #1
 171:src/keys.c    **** }
 2339              		.loc 1 171 33 view .LVU725
 2340 026a 03EB4303 		add	r3, r3, r3, lsl #1
 171:src/keys.c    **** }
 2341              		.loc 1 171 12 view .LVU726
 2342 026e 0B30     		adds	r0, r0, #11
 171:src/keys.c    **** }
 2343              		.loc 1 171 33 view .LVU727
 2344 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
ARM GAS  /tmp/ccsJYix0.s 			page 101


 2345              	.LBE358:
 2346              	.LBE357:
1727:src/keys.c    **** 
 2347              		.loc 1 1727 10 view .LVU728
 2348 0274 3844     		add	r0, r0, r7
 2349              	.LVL172:
 2350              	.L351:
1957:src/keys.c    **** 
 2351              		.loc 1 1957 1 view .LVU729
 2352 0276 03B0     		add	sp, sp, #12
 2353              		.cfi_remember_state
 2354              		.cfi_def_cfa_offset 36
 2355              		@ sp needed
 2356 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2357              		.cfi_restore 14
 2358              		.cfi_restore 11
 2359              		.cfi_restore 10
 2360              		.cfi_restore 9
 2361              		.cfi_restore 8
 2362              		.cfi_restore 7
 2363              		.cfi_restore 6
 2364              		.cfi_restore 5
 2365              		.cfi_restore 4
 2366              		.cfi_def_cfa_offset 0
 2367              	.LVL173:
1727:src/keys.c    **** 
 2368              		.loc 1 1727 10 view .LVU730
 2369 027c FFF7FEBF 		b	arg_eval
 2370              	.LVL174:
 2371              	.L261:
 2372              		.cfi_restore_state
1862:src/keys.c    **** 			return arg_eval(n);
 2373              		.loc 1 1862 3 is_stmt 1 view .LVU731
1862:src/keys.c    **** 			return arg_eval(n);
 2374              		.loc 1 1862 7 is_stmt 0 view .LVU732
 2375 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1862:src/keys.c    **** 			return arg_eval(n);
 2376              		.loc 1 1862 6 view .LVU733
 2377 0282 5F06     		lsls	r7, r3, #25
 2378 0284 0AD4     		bmi	.L283
1862:src/keys.c    **** 			return arg_eval(n);
 2379              		.loc 1 1862 25 discriminator 1 view .LVU734
 2380 0286 0121     		movs	r1, #1
 2381 0288 0320     		movs	r0, #3
 2382              	.LVL175:
1862:src/keys.c    **** 			return arg_eval(n);
 2383              		.loc 1 1862 25 discriminator 1 view .LVU735
 2384 028a FFF7FEFF 		bl	arg_storcl
 2385              	.LVL176:
1862:src/keys.c    **** 			return arg_eval(n);
 2386              		.loc 1 1862 18 discriminator 1 view .LVU736
 2387 028e 0028     		cmp	r0, #0
 2388 0290 7FF404AF 		bne	.L349
1862:src/keys.c    **** 			return arg_eval(n);
 2389              		.loc 1 1862 63 discriminator 2 view .LVU737
 2390 0294 B8F1000F 		cmp	r8, #0
 2391 0298 3FF400AF 		beq	.L349
ARM GAS  /tmp/ccsJYix0.s 			page 102


 2392              	.L283:
1863:src/keys.c    **** 		break;
 2393              		.loc 1 1863 4 is_stmt 1 view .LVU738
1863:src/keys.c    **** 		break;
 2394              		.loc 1 1863 11 is_stmt 0 view .LVU739
 2395 029c 3046     		mov	r0, r6
 2396 029e EAE7     		b	.L351
 2397              	.LVL177:
 2398              	.L244:
1709:src/keys.c    **** 	  case regT_idx:
 2399              		.loc 1 1709 6 is_stmt 1 view .LVU740
1709:src/keys.c    **** 	  case regT_idx:
 2400              		.loc 1 1709 13 is_stmt 0 view .LVU741
 2401 02a0 0320     		movs	r0, #3
 2402              	.LVL178:
 2403              	.L350:
1957:src/keys.c    **** 
 2404              		.loc 1 1957 1 view .LVU742
 2405 02a2 03B0     		add	sp, sp, #12
 2406              		.cfi_remember_state
 2407              		.cfi_def_cfa_offset 36
 2408              		@ sp needed
 2409 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2410              		.cfi_restore 14
 2411              		.cfi_restore 11
 2412              		.cfi_restore 10
 2413              		.cfi_restore 9
 2414              		.cfi_restore 8
 2415              		.cfi_restore 7
 2416              		.cfi_restore 6
 2417              		.cfi_restore 5
 2418              		.cfi_restore 4
 2419              		.cfi_def_cfa_offset 0
 2420              	.LVL179:
1707:src/keys.c    **** 	  case regZ_idx:
 2421              		.loc 1 1707 13 view .LVU743
 2422 02a8 FFF7FEBF 		b	arg_digit
 2423              	.LVL180:
 2424              	.L245:
 2425              		.cfi_restore_state
1707:src/keys.c    **** 	  case regZ_idx:
 2426              		.loc 1 1707 6 is_stmt 1 view .LVU744
1707:src/keys.c    **** 	  case regZ_idx:
 2427              		.loc 1 1707 13 is_stmt 0 view .LVU745
 2428 02ac 0220     		movs	r0, #2
 2429              	.LVL181:
1707:src/keys.c    **** 	  case regZ_idx:
 2430              		.loc 1 1707 13 view .LVU746
 2431 02ae F8E7     		b	.L350
 2432              	.LVL182:
 2433              	.L242:
1711:src/keys.c    **** 	  case 5:
 2434              		.loc 1 1711 6 is_stmt 1 view .LVU747
1711:src/keys.c    **** 	  case 5:
 2435              		.loc 1 1711 13 is_stmt 0 view .LVU748
 2436 02b0 0420     		movs	r0, #4
 2437              	.LVL183:
ARM GAS  /tmp/ccsJYix0.s 			page 103


1711:src/keys.c    **** 	  case 5:
 2438              		.loc 1 1711 13 view .LVU749
 2439 02b2 F6E7     		b	.L350
 2440              	.LVL184:
 2441              	.L359:
1756:src/keys.c    **** 		    base = RARG_SIG;
 2442              		.loc 1 1756 5 is_stmt 1 view .LVU750
1756:src/keys.c    **** 		    base = RARG_SIG;
 2443              		.loc 1 1756 8 is_stmt 0 view .LVU751
 2444 02b4 8E2D     		cmp	r5, #142
 2445 02b6 40F00B81 		bne	.L304
 2446 02ba 8D23     		movs	r3, #141
 2447 02bc 0093     		str	r3, [sp]
 2448              	.LVL185:
1757:src/keys.c    **** 		    break;
 2449              		.loc 1 1757 12 view .LVU752
 2450 02be 1D46     		mov	r5, r3
 2451 02c0 10E7     		b	.L247
 2452              	.LVL186:
 2453              	.L360:
1757:src/keys.c    **** 		    break;
 2454              		.loc 1 1757 12 view .LVU753
 2455 02c2 4D23     		movs	r3, #77
 2456 02c4 A7E7     		b	.L348
 2457              	.LVL187:
 2458              	.L266:
1931:src/keys.c    **** 			if (State2.dot)
 2459              		.loc 1 1931 3 is_stmt 1 view .LVU754
1931:src/keys.c    **** 			if (State2.dot)
 2460              		.loc 1 1931 13 is_stmt 0 view .LVU755
 2461 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1931:src/keys.c    **** 			if (State2.dot)
 2462              		.loc 1 1931 6 view .LVU756
 2463 02c8 002B     		cmp	r3, #0
 2464 02ca 40F0EC80 		bne	.L290
1932:src/keys.c    **** 				State2.dot = 0;
 2465              		.loc 1 1932 4 is_stmt 1 view .LVU757
1932:src/keys.c    **** 				State2.dot = 0;
 2466              		.loc 1 1932 8 is_stmt 0 view .LVU758
 2467 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1932:src/keys.c    **** 				State2.dot = 0;
 2468              		.loc 1 1932 7 view .LVU759
 2469 02d0 13F04001 		ands	r1, r3, #64
 2470 02d4 40F0A080 		bne	.L291
1934:src/keys.c    **** 				State2.local = 0;
 2471              		.loc 1 1934 9 is_stmt 1 view .LVU760
1934:src/keys.c    **** 				State2.local = 0;
 2472              		.loc 1 1934 13 is_stmt 0 view .LVU761
 2473 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1934:src/keys.c    **** 				State2.local = 0;
 2474              		.loc 1 1934 12 view .LVU762
 2475 02da 12F00100 		ands	r0, r2, #1
 2476              	.LVL188:
1934:src/keys.c    **** 				State2.local = 0;
 2477              		.loc 1 1934 12 view .LVU763
 2478 02de 40F01181 		bne	.L361
1936:src/keys.c    **** 				State2.ind = 0;
ARM GAS  /tmp/ccsJYix0.s 			page 104


 2479              		.loc 1 1936 9 is_stmt 1 view .LVU764
1936:src/keys.c    **** 				State2.ind = 0;
 2480              		.loc 1 1936 12 is_stmt 0 view .LVU765
 2481 02e2 1906     		lsls	r1, r3, #24
 2482 02e4 7FF5D8AE 		bpl	.L256
1937:src/keys.c    **** 			else
 2483              		.loc 1 1937 5 is_stmt 1 view .LVU766
1937:src/keys.c    **** 			else
 2484              		.loc 1 1937 16 is_stmt 0 view .LVU767
 2485 02e8 60F3C713 		bfi	r3, r0, #7, #1
 2486 02ec 6375     		strb	r3, [r4, #21]
1956:src/keys.c    **** }
 2487              		.loc 1 1956 9 view .LVU768
 2488 02ee 3320     		movs	r0, #51
 2489 02f0 D5E6     		b	.L224
 2490              	.LVL189:
 2491              	.L264:
1866:src/keys.c    **** 		break;
 2492              		.loc 1 1866 3 is_stmt 1 view .LVU769
 2493 02f2 0121     		movs	r1, #1
 2494 02f4 0420     		movs	r0, #4
 2495              	.LVL190:
1866:src/keys.c    **** 		break;
 2496              		.loc 1 1866 3 is_stmt 0 view .LVU770
 2497 02f6 FFF7FEFF 		bl	arg_storcl
 2498              	.LVL191:
1867:src/keys.c    **** #else
 2499              		.loc 1 1867 3 is_stmt 1 view .LVU771
1956:src/keys.c    **** }
 2500              		.loc 1 1956 9 is_stmt 0 view .LVU772
 2501 02fa 3320     		movs	r0, #51
1867:src/keys.c    **** #else
 2502              		.loc 1 1867 3 view .LVU773
 2503 02fc CFE6     		b	.L224
 2504              	.LVL192:
 2505              	.L263:
1906:src/keys.c    **** 		break;
 2506              		.loc 1 1906 3 is_stmt 1 view .LVU774
 2507 02fe 0021     		movs	r1, #0
 2508 0300 0520     		movs	r0, #5
 2509              	.LVL193:
1906:src/keys.c    **** 		break;
 2510              		.loc 1 1906 3 is_stmt 0 view .LVU775
 2511 0302 FFF7FEFF 		bl	arg_storcl
 2512              	.LVL194:
1907:src/keys.c    **** 
 2513              		.loc 1 1907 3 is_stmt 1 view .LVU776
1956:src/keys.c    **** }
 2514              		.loc 1 1956 9 is_stmt 0 view .LVU777
 2515 0306 3320     		movs	r0, #51
1907:src/keys.c    **** 
 2516              		.loc 1 1907 3 view .LVU778
 2517 0308 C9E6     		b	.L224
 2518              	.LVL195:
 2519              	.L262:
1809:src/keys.c    **** 	    return process_arg_shuffle(3);
 2520              		.loc 1 1809 4 is_stmt 1 view .LVU779
ARM GAS  /tmp/ccsJYix0.s 			page 105


1809:src/keys.c    **** 	    return process_arg_shuffle(3);
 2521              		.loc 1 1809 8 is_stmt 0 view .LVU780
 2522 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1809:src/keys.c    **** 	    return process_arg_shuffle(3);
 2523              		.loc 1 1809 7 view .LVU781
 2524 030c 9507     		lsls	r5, r2, #30
 2525 030e 7FF557AF 		bpl	.L268
1810:src/keys.c    **** 	case K51:       // X
 2526              		.loc 1 1810 6 is_stmt 1 view .LVU782
1810:src/keys.c    **** 	case K51:       // X
 2527              		.loc 1 1810 13 is_stmt 0 view .LVU783
 2528 0312 0320     		movs	r0, #3
 2529              	.LVL196:
 2530              	.L352:
1957:src/keys.c    **** 
 2531              		.loc 1 1957 1 view .LVU784
 2532 0314 03B0     		add	sp, sp, #12
 2533              		.cfi_remember_state
 2534              		.cfi_def_cfa_offset 36
 2535              		@ sp needed
 2536 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2537              		.cfi_restore 14
 2538              		.cfi_restore 11
 2539              		.cfi_restore 10
 2540              		.cfi_restore 9
 2541              		.cfi_restore 8
 2542              		.cfi_restore 7
 2543              		.cfi_restore 6
 2544              		.cfi_restore 5
 2545              		.cfi_restore 4
 2546              		.cfi_def_cfa_offset 0
 2547              	.LVL197:
1819:src/keys.c    **** #else
 2548              		.loc 1 1819 13 view .LVU785
 2549 031a FFF7FEBF 		b	process_arg_shuffle
 2550              	.LVL198:
 2551              	.L260:
 2552              		.cfi_restore_state
1812:src/keys.c    **** 	    return process_arg_shuffle(0);
 2553              		.loc 1 1812 4 is_stmt 1 view .LVU786
1812:src/keys.c    **** 	    return process_arg_shuffle(0);
 2554              		.loc 1 1812 8 is_stmt 0 view .LVU787
 2555 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1812:src/keys.c    **** 	    return process_arg_shuffle(0);
 2556              		.loc 1 1812 7 view .LVU788
 2557 0320 9007     		lsls	r0, r2, #30
 2558              	.LVL199:
1812:src/keys.c    **** 	    return process_arg_shuffle(0);
 2559              		.loc 1 1812 7 view .LVU789
 2560 0322 7FF54DAF 		bpl	.L268
1813:src/keys.c    **** 	case K52:	// Y
 2561              		.loc 1 1813 6 is_stmt 1 view .LVU790
1813:src/keys.c    **** 	case K52:	// Y
 2562              		.loc 1 1813 13 is_stmt 0 view .LVU791
 2563 0326 0020     		movs	r0, #0
 2564 0328 F4E7     		b	.L352
 2565              	.L369:
ARM GAS  /tmp/ccsJYix0.s 			page 106


 2566 032a 00BF     		.align	2
 2567              	.L368:
 2568 032c 00000000 		.word	StateWhileOn
 2569 0330 00000000 		.word	.LANCHOR1
 2570 0334 00000000 		.word	.LANCHOR0
 2571 0338 ABAAAAAA 		.word	-1431655765
 2572 033c 00000000 		.word	argcmds
 2573              	.LVL200:
 2574              	.L258:
1818:src/keys.c    **** 	    return process_arg_shuffle(2);
 2575              		.loc 1 1818 4 is_stmt 1 view .LVU792
1818:src/keys.c    **** 	    return process_arg_shuffle(2);
 2576              		.loc 1 1818 8 is_stmt 0 view .LVU793
 2577 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1818:src/keys.c    **** 	    return process_arg_shuffle(2);
 2578              		.loc 1 1818 7 view .LVU794
 2579 0342 9207     		lsls	r2, r2, #30
 2580 0344 7FF53CAF 		bpl	.L268
1819:src/keys.c    **** #else
 2581              		.loc 1 1819 6 is_stmt 1 view .LVU795
1819:src/keys.c    **** #else
 2582              		.loc 1 1819 13 is_stmt 0 view .LVU796
 2583 0348 0220     		movs	r0, #2
 2584              	.LVL201:
1819:src/keys.c    **** #else
 2585              		.loc 1 1819 13 view .LVU797
 2586 034a E3E7     		b	.L352
 2587              	.LVL202:
 2588              	.L257:
1855:src/keys.c    **** 			reset_arg();
 2589              		.loc 1 1855 3 is_stmt 1 view .LVU798
1855:src/keys.c    **** 			reset_arg();
 2590              		.loc 1 1855 6 is_stmt 0 view .LVU799
 2591 034c 009B     		ldr	r3, [sp]
 2592 034e 212B     		cmp	r3, #33
 2593 0350 00F0B980 		beq	.L280
1855:src/keys.c    **** 			reset_arg();
 2594              		.loc 1 1855 25 discriminator 1 view .LVU800
 2595 0354 732B     		cmp	r3, #115
 2596 0356 00F0B680 		beq	.L280
1859:src/keys.c    **** 		break;
 2597              		.loc 1 1859 3 is_stmt 1 view .LVU801
 2598 035a 0121     		movs	r1, #1
 2599 035c 0220     		movs	r0, #2
 2600              	.LVL203:
1859:src/keys.c    **** 		break;
 2601              		.loc 1 1859 3 is_stmt 0 view .LVU802
 2602 035e FFF7FEFF 		bl	arg_storcl
 2603              	.LVL204:
1860:src/keys.c    **** 	case K44:		// multiply
 2604              		.loc 1 1860 3 is_stmt 1 view .LVU803
1956:src/keys.c    **** }
 2605              		.loc 1 1956 9 is_stmt 0 view .LVU804
 2606 0362 3320     		movs	r0, #51
1860:src/keys.c    **** 	case K44:		// multiply
 2607              		.loc 1 1860 3 view .LVU805
 2608 0364 9BE6     		b	.L224
ARM GAS  /tmp/ccsJYix0.s 			page 107


 2609              	.LVL205:
 2610              	.L255:
1847:src/keys.c    **** 
 2611              		.loc 1 1847 3 is_stmt 1 view .LVU806
 2612              	.LBB359:
 2613              	.LBI359:
1654:src/keys.c    **** 
 2614              		.loc 1 1654 12 view .LVU807
 2615              	.LBB360:
1656:src/keys.c    **** 		// Only valid at beginning of entry
 2616              		.loc 1 1656 2 view .LVU808
1656:src/keys.c    **** 		// Only valid at beginning of entry
 2617              		.loc 1 1656 5 is_stmt 0 view .LVU809
 2618 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 2619 0368 002A     		cmp	r2, #0
 2620 036a 7FF497AE 		bne	.L349
1658:src/keys.c    **** 			// '..' or ENTER '.' = X
 2621              		.loc 1 1658 3 is_stmt 1 view .LVU810
1658:src/keys.c    **** 			// '..' or ENTER '.' = X
 2622              		.loc 1 1658 6 is_stmt 0 view .LVU811
 2623 036e 11F4A03F 		tst	r1, #81920
 2624 0372 40F0C180 		bne	.L362
1663:src/keys.c    **** 			// local register or flag select
 2625              		.loc 1 1663 3 is_stmt 1 view .LVU812
1663:src/keys.c    **** 			// local register or flag select
 2626              		.loc 1 1663 20 is_stmt 0 view .LVU813
 2627 0376 009B     		ldr	r3, [sp]
 2628 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 2629 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1663:src/keys.c    **** 			// local register or flag select
 2630              		.loc 1 1663 6 view .LVU814
 2631 037e 1A07     		lsls	r2, r3, #28
 2632 0380 00F1A880 		bmi	.L276
1663:src/keys.c    **** 			// local register or flag select
 2633              		.loc 1 1663 27 view .LVU815
 2634 0384 94F91530 		ldrsb	r3, [r4, #21]
 2635 0388 002B     		cmp	r3, #0
 2636 038a C0F2A380 		blt	.L276
1667:src/keys.c    **** 			// Special GTO . sequence
 2637              		.loc 1 1667 8 is_stmt 1 view .LVU816
1667:src/keys.c    **** 			// Special GTO . sequence
 2638              		.loc 1 1667 29 is_stmt 0 view .LVU817
 2639 038e 009B     		ldr	r3, [sp]
 2640 0390 A3F14409 		sub	r9, r3, #68
1667:src/keys.c    **** 			// Special GTO . sequence
 2641              		.loc 1 1667 11 view .LVU818
 2642 0394 B9F1010F 		cmp	r9, #1
 2643 0398 3FF680AE 		bhi	.L349
1669:src/keys.c    **** 				State2.gtodot = 1;
 2644              		.loc 1 1669 4 is_stmt 1 view .LVU819
1670:src/keys.c    **** 				reset_arg();
 2645              		.loc 1 1670 5 view .LVU820
1670:src/keys.c    **** 				reset_arg();
 2646              		.loc 1 1670 19 is_stmt 0 view .LVU821
 2647 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2648 039e 43F00103 		orr	r3, r3, #1
 2649 03a2 6375     		strb	r3, [r4, #21]
ARM GAS  /tmp/ccsJYix0.s 			page 108


1671:src/keys.c    **** 			}
 2650              		.loc 1 1671 5 is_stmt 1 view .LVU822
 2651 03a4 FFF7FEFF 		bl	reset_arg
 2652              	.LVL206:
1675:src/keys.c    **** }
 2653              		.loc 1 1675 9 is_stmt 0 view .LVU823
 2654 03a8 3320     		movs	r0, #51
 2655 03aa 78E6     		b	.L224
 2656              	.LVL207:
 2657              	.L254:
1675:src/keys.c    **** }
 2658              		.loc 1 1675 9 view .LVU824
 2659              	.LBE360:
 2660              	.LBE359:
1851:src/keys.c    **** 			return arg_eval(n);
 2661              		.loc 1 1851 3 is_stmt 1 view .LVU825
1851:src/keys.c    **** 			return arg_eval(n);
 2662              		.loc 1 1851 7 is_stmt 0 view .LVU826
 2663 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1851:src/keys.c    **** 			return arg_eval(n);
 2664              		.loc 1 1851 6 view .LVU827
 2665 03ae 5B06     		lsls	r3, r3, #25
 2666 03b0 3FF574AF 		bmi	.L283
1851:src/keys.c    **** 			return arg_eval(n);
 2667              		.loc 1 1851 25 discriminator 1 view .LVU828
 2668 03b4 0121     		movs	r1, #1
 2669 03b6 0846     		mov	r0, r1
 2670              	.LVL208:
1851:src/keys.c    **** 			return arg_eval(n);
 2671              		.loc 1 1851 25 discriminator 1 view .LVU829
 2672 03b8 FFF7FEFF 		bl	arg_storcl
 2673              	.LVL209:
1851:src/keys.c    **** 			return arg_eval(n);
 2674              		.loc 1 1851 18 discriminator 1 view .LVU830
 2675 03bc 0028     		cmp	r0, #0
 2676 03be 7FF46DAE 		bne	.L349
1862:src/keys.c    **** 			return arg_eval(n);
 2677              		.loc 1 1862 63 view .LVU831
 2678 03c2 B8F1000F 		cmp	r8, #0
 2679 03c6 3FF469AE 		beq	.L349
 2680 03ca 67E7     		b	.L283
 2681              	.LVL210:
 2682              	.L253:
1787:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2683              		.loc 1 1787 3 is_stmt 1 view .LVU832
1787:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2684              		.loc 1 1787 6 is_stmt 0 view .LVU833
 2685 03cc BCF1000F 		cmp	ip, #0
 2686 03d0 3FF464AE 		beq	.L349
1788:src/keys.c    **** 		break;
 2687              		.loc 1 1788 4 is_stmt 1 view .LVU834
 2688              	.LVL211:
 2689              	.LBB363:
 2690              	.LBI363:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 2691              		.loc 1 94 20 view .LVU835
 2692              	.LBB364:
ARM GAS  /tmp/ccsJYix0.s 			page 109


  95:src/keys.c    **** 	State2.shifts = shift;
 2693              		.loc 1 95 2 view .LVU836
 2694              	.LBB365:
 2695              	.LBI365:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2696              		.loc 1 86 13 view .LVU837
 2697              	.LBB366:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2698              		.loc 1 87 2 view .LVU838
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2699              		.loc 1 87 18 is_stmt 0 view .LVU839
 2700 03d4 FFF7FEFF 		bl	shift_down
 2701              	.LVL212:
  88:src/keys.c    **** }
 2702              		.loc 1 88 2 is_stmt 1 view .LVU840
 2703              	.LBE366:
 2704              	.LBE365:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2705              		.loc 1 96 2 view .LVU841
 2706              	.LBE364:
 2707              	.LBE363:
1788:src/keys.c    **** 		break;
 2708              		.loc 1 1788 4 is_stmt 0 view .LVU842
 2709 03d8 019B     		ldr	r3, [sp, #4]
 2710 03da B3F1010A 		subs	r10, r3, #1
 2711 03de 18BF     		it	ne
 2712 03e0 4FF0010A 		movne	r10, #1
 2713 03e4 84F810A0 		strb	r10, [r4, #16]
 2714              	.LBB369:
 2715              	.LBB367:
  98:src/keys.c    **** }
 2716              		.loc 1 98 2 is_stmt 1 view .LVU843
 2717              	.LBE367:
 2718              	.LBE369:
1956:src/keys.c    **** }
 2719              		.loc 1 1956 9 is_stmt 0 view .LVU844
 2720 03e8 3320     		movs	r0, #51
 2721              	.LBB370:
 2722              	.LBB368:
  98:src/keys.c    **** }
 2723              		.loc 1 98 9 view .LVU845
 2724 03ea 58E6     		b	.L224
 2725              	.LVL213:
 2726              	.L252:
  98:src/keys.c    **** }
 2727              		.loc 1 98 9 view .LVU846
 2728              	.LBE368:
 2729              	.LBE370:
1792:src/keys.c    **** 			State2.ind = ! State2.ind;
 2730              		.loc 1 1792 3 is_stmt 1 view .LVU847
1792:src/keys.c    **** 			State2.ind = ! State2.ind;
 2731              		.loc 1 1792 7 is_stmt 0 view .LVU848
 2732 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
1792:src/keys.c    **** 			State2.ind = ! State2.ind;
 2733              		.loc 1 1792 6 view .LVU849
 2734 03ee 5706     		lsls	r7, r2, #25
 2735 03f0 3FF554AE 		bmi	.L349
ARM GAS  /tmp/ccsJYix0.s 			page 110


1792:src/keys.c    **** 			State2.ind = ! State2.ind;
 2736              		.loc 1 1792 35 discriminator 1 view .LVU850
 2737 03f4 009B     		ldr	r3, [sp]
 2738 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 2739 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
1792:src/keys.c    **** 			State2.ind = ! State2.ind;
 2740              		.loc 1 1792 19 discriminator 1 view .LVU851
 2741 03fe DE07     		lsls	r6, r3, #31
 2742              	.LVL214:
1792:src/keys.c    **** 			State2.ind = ! State2.ind;
 2743              		.loc 1 1792 19 discriminator 1 view .LVU852
 2744 0400 7FF54CAE 		bpl	.L349
1793:src/keys.c    **** 			if (! stack_reg)
 2745              		.loc 1 1793 4 is_stmt 1 view .LVU853
1793:src/keys.c    **** 			if (! stack_reg)
 2746              		.loc 1 1793 17 is_stmt 0 view .LVU854
 2747 0404 D343     		mvns	r3, r2
 2748 0406 C3F3C013 		ubfx	r3, r3, #7, #1
1793:src/keys.c    **** 			if (! stack_reg)
 2749              		.loc 1 1793 15 view .LVU855
 2750 040a 63F3C712 		bfi	r2, r3, #7, #1
 2751 040e 6275     		strb	r2, [r4, #21]
1794:src/keys.c    **** 				State2.dot = 0;
 2752              		.loc 1 1794 4 is_stmt 1 view .LVU856
1794:src/keys.c    **** 				State2.dot = 0;
 2753              		.loc 1 1794 7 is_stmt 0 view .LVU857
 2754 0410 B8F1000F 		cmp	r8, #0
 2755 0414 7FF442AE 		bne	.L349
 2756              	.L291:
1795:src/keys.c    **** 		}
 2757              		.loc 1 1795 5 is_stmt 1 view .LVU858
1795:src/keys.c    **** 		}
 2758              		.loc 1 1795 16 is_stmt 0 view .LVU859
 2759 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2760 041a 6FF38613 		bfc	r3, #6, #1
 2761 041e 6375     		strb	r3, [r4, #21]
1956:src/keys.c    **** }
 2762              		.loc 1 1956 9 view .LVU860
 2763 0420 3320     		movs	r0, #51
 2764              	.LVL215:
1956:src/keys.c    **** }
 2765              		.loc 1 1956 9 view .LVU861
 2766 0422 3CE6     		b	.L224
 2767              	.LVL216:
 2768              	.L250:
1800:src/keys.c    **** 			break;
 2769              		.loc 1 1800 3 is_stmt 1 view .LVU862
1800:src/keys.c    **** 			break;
 2770              		.loc 1 1800 18 is_stmt 0 view .LVU863
 2771 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1800:src/keys.c    **** 			break;
 2772              		.loc 1 1800 6 view .LVU864
 2773 0426 13F0C00F 		tst	r3, #192
 2774 042a 7FF437AE 		bne	.L349
1802:src/keys.c    **** 			CmdBase = RARG_STOM;
 2775              		.loc 1 1802 3 is_stmt 1 view .LVU865
1802:src/keys.c    **** 			CmdBase = RARG_STOM;
ARM GAS  /tmp/ccsJYix0.s 			page 111


 2776              		.loc 1 1802 6 is_stmt 0 view .LVU866
 2777 042e 009B     		ldr	r3, [sp]
 2778 0430 032B     		cmp	r3, #3
 2779 0432 5DD0     		beq	.L363
1804:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2780              		.loc 1 1804 8 is_stmt 1 view .LVU867
1804:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2781              		.loc 1 1804 11 is_stmt 0 view .LVU868
 2782 0434 009B     		ldr	r3, [sp]
 2783 0436 0A2B     		cmp	r3, #10
 2784 0438 7FF430AE 		bne	.L349
1805:src/keys.c    **** 		break;
 2785              		.loc 1 1805 4 is_stmt 1 view .LVU869
1805:src/keys.c    **** 		break;
 2786              		.loc 1 1805 12 is_stmt 0 view .LVU870
 2787 043c 7823     		movs	r3, #120
 2788 043e E377     		strb	r3, [r4, #31]
1956:src/keys.c    **** }
 2789              		.loc 1 1956 9 view .LVU871
 2790 0440 3320     		movs	r0, #51
 2791              	.LVL217:
1956:src/keys.c    **** }
 2792              		.loc 1 1956 9 view .LVU872
 2793 0442 2CE6     		b	.L224
 2794              	.LVL218:
 2795              	.L267:
1910:src/keys.c    **** 			if (argcmds[base].label) {
 2796              		.loc 1 1910 3 is_stmt 1 view .LVU873
1910:src/keys.c    **** 			if (argcmds[base].label) {
 2797              		.loc 1 1910 6 is_stmt 0 view .LVU874
 2798 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 2799 0446 4AB1     		cbz	r2, .L364
1924:src/keys.c    **** 			return arg_eval(State2.digval);
 2800              		.loc 1 1924 10 is_stmt 1 view .LVU875
1925:src/keys.c    **** 		else if (stack_reg)
 2801              		.loc 1 1925 4 view .LVU876
1925:src/keys.c    **** 		else if (stack_reg)
 2802              		.loc 1 1925 11 is_stmt 0 view .LVU877
 2803 0448 2089     		ldrh	r0, [r4, #8]
 2804              	.LVL219:
1925:src/keys.c    **** 		else if (stack_reg)
 2805              		.loc 1 1925 11 view .LVU878
 2806 044a 14E7     		b	.L351
 2807              	.LVL220:
 2808              	.L259:
1815:src/keys.c    **** 	    return process_arg_shuffle(1);
 2809              		.loc 1 1815 4 is_stmt 1 view .LVU879
1815:src/keys.c    **** 	    return process_arg_shuffle(1);
 2810              		.loc 1 1815 8 is_stmt 0 view .LVU880
 2811 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1815:src/keys.c    **** 	    return process_arg_shuffle(1);
 2812              		.loc 1 1815 7 view .LVU881
 2813 044e 9107     		lsls	r1, r2, #30
 2814 0450 7FF5B6AE 		bpl	.L268
1816:src/keys.c    **** 	case K53:       // Z
 2815              		.loc 1 1816 6 is_stmt 1 view .LVU882
1816:src/keys.c    **** 	case K53:       // Z
ARM GAS  /tmp/ccsJYix0.s 			page 112


 2816              		.loc 1 1816 13 is_stmt 0 view .LVU883
 2817 0454 0120     		movs	r0, #1
 2818              	.LVL221:
1816:src/keys.c    **** 	case K53:       // Z
 2819              		.loc 1 1816 13 view .LVU884
 2820 0456 5DE7     		b	.L352
 2821              	.LVL222:
 2822              	.L306:
1732:src/keys.c    **** 		case K_UP:	// up arrow
 2823              		.loc 1 1732 3 view .LVU885
 2824 0458 8D23     		movs	r3, #141
 2825              	.LVL223:
1762:src/keys.c    **** #else
 2826              		.loc 1 1762 3 is_stmt 1 view .LVU886
 2827 045a DCE6     		b	.L348
 2828              	.L364:
1910:src/keys.c    **** 			if (argcmds[base].label) {
 2829              		.loc 1 1910 43 is_stmt 0 discriminator 1 view .LVU887
 2830 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 2831 045e 12F0C00F 		tst	r2, #192
 2832 0462 13D1     		bne	.L285
1911:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2833              		.loc 1 1911 4 is_stmt 1 view .LVU888
1911:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2834              		.loc 1 1911 21 is_stmt 0 view .LVU889
 2835 0464 009B     		ldr	r3, [sp]
 2836 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 2837 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1911:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2838              		.loc 1 1911 7 view .LVU890
 2839 046c 9E06     		lsls	r6, r3, #26
 2840              	.LVL224:
1911:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2841              		.loc 1 1911 7 view .LVU891
 2842 046e 4ED4     		bmi	.L365
1916:src/keys.c    **** 				reset_arg();
 2843              		.loc 1 1916 11 is_stmt 1 view .LVU892
1916:src/keys.c    **** 				reset_arg();
 2844              		.loc 1 1916 14 is_stmt 0 view .LVU893
 2845 0470 0099     		ldr	r1, [sp]
 2846 0472 4E29     		cmp	r1, #78
 2847 0474 5DD0     		beq	.L366
1919:src/keys.c    **** 				reset_arg();
 2848              		.loc 1 1919 11 is_stmt 1 view .LVU894
1919:src/keys.c    **** 				reset_arg();
 2849              		.loc 1 1919 14 is_stmt 0 view .LVU895
 2850 0476 0099     		ldr	r1, [sp]
 2851 0478 4F29     		cmp	r1, #79
 2852 047a 5FD0     		beq	.L367
1922:src/keys.c    **** 				State2.dot = 1;
 2853              		.loc 1 1922 11 is_stmt 1 view .LVU896
1922:src/keys.c    **** 				State2.dot = 1;
 2854              		.loc 1 1922 14 is_stmt 0 view .LVU897
 2855 047c 5807     		lsls	r0, r3, #29
 2856              	.LVL225:
1922:src/keys.c    **** 				State2.dot = 1;
 2857              		.loc 1 1922 14 view .LVU898
ARM GAS  /tmp/ccsJYix0.s 			page 113


 2858 047e 7FF50DAE 		bpl	.L349
1923:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2859              		.loc 1 1923 5 is_stmt 1 view .LVU899
1923:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2860              		.loc 1 1923 16 is_stmt 0 view .LVU900
 2861 0482 42F04002 		orr	r2, r2, #64
 2862 0486 6275     		strb	r2, [r4, #21]
1956:src/keys.c    **** }
 2863              		.loc 1 1956 9 view .LVU901
 2864 0488 3320     		movs	r0, #51
 2865 048a 08E6     		b	.L224
 2866              	.LVL226:
 2867              	.L285:
1924:src/keys.c    **** 			return arg_eval(State2.digval);
 2868              		.loc 1 1924 10 is_stmt 1 view .LVU902
1926:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2869              		.loc 1 1926 8 view .LVU903
1926:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2870              		.loc 1 1926 11 is_stmt 0 view .LVU904
 2871 048c B8F1000F 		cmp	r8, #0
 2872 0490 3FF404AE 		beq	.L349
1927:src/keys.c    **** 		break;
 2873              		.loc 1 1927 4 is_stmt 1 view .LVU905
1927:src/keys.c    **** 		break;
 2874              		.loc 1 1927 27 is_stmt 0 view .LVU906
 2875 0494 C2F38013 		ubfx	r3, r2, #6, #1
1927:src/keys.c    **** 		break;
 2876              		.loc 1 1927 19 view .LVU907
 2877 0498 C3F10103 		rsb	r3, r3, #1
1927:src/keys.c    **** 		break;
 2878              		.loc 1 1927 15 view .LVU908
 2879 049c 63F38612 		bfi	r2, r3, #6, #1
 2880 04a0 6275     		strb	r2, [r4, #21]
1956:src/keys.c    **** }
 2881              		.loc 1 1956 9 view .LVU909
 2882 04a2 3320     		movs	r0, #51
 2883              	.LVL227:
1956:src/keys.c    **** }
 2884              		.loc 1 1956 9 view .LVU910
 2885 04a4 FBE5     		b	.L224
 2886              	.LVL228:
 2887              	.L290:
1942:src/keys.c    **** 			if (State2.shuffle)
 2888              		.loc 1 1942 4 is_stmt 1 view .LVU911
1943:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2889              		.loc 1 1943 8 is_stmt 0 view .LVU912
 2890 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1942:src/keys.c    **** 			if (State2.shuffle)
 2891              		.loc 1 1942 4 view .LVU913
 2892 04a8 013B     		subs	r3, r3, #1
 2893 04aa DBB2     		uxtb	r3, r3
1943:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2894              		.loc 1 1943 7 view .LVU914
 2895 04ac 9207     		lsls	r2, r2, #30
1942:src/keys.c    **** 			if (State2.shuffle)
 2896              		.loc 1 1942 4 view .LVU915
 2897 04ae E372     		strb	r3, [r4, #11]
ARM GAS  /tmp/ccsJYix0.s 			page 114


1943:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2898              		.loc 1 1943 4 is_stmt 1 view .LVU916
1943:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2899              		.loc 1 1943 7 is_stmt 0 view .LVU917
 2900 04b0 16D5     		bpl	.L293
1944:src/keys.c    **** 			else
 2901              		.loc 1 1944 5 is_stmt 1 view .LVU918
1944:src/keys.c    **** 			else
 2902              		.loc 1 1944 19 is_stmt 0 view .LVU919
 2903 04b2 2289     		ldrh	r2, [r4, #8]
1944:src/keys.c    **** 			else
 2904              		.loc 1 1944 46 view .LVU920
 2905 04b4 5B00     		lsls	r3, r3, #1
1944:src/keys.c    **** 			else
 2906              		.loc 1 1944 26 view .LVU921
 2907 04b6 0321     		movs	r1, #3
 2908 04b8 01FA03F3 		lsl	r3, r1, r3
1944:src/keys.c    **** 			else
 2909              		.loc 1 1944 19 view .LVU922
 2910 04bc 22EA0303 		bic	r3, r2, r3
 2911 04c0 2381     		strh	r3, [r4, #8]	@ movhi
1956:src/keys.c    **** }
 2912              		.loc 1 1956 9 view .LVU923
 2913 04c2 3320     		movs	r0, #51
 2914              	.LVL229:
1956:src/keys.c    **** }
 2915              		.loc 1 1956 9 view .LVU924
 2916 04c4 EBE5     		b	.L224
 2917              	.LVL230:
 2918              	.L280:
1856:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2919              		.loc 1 1856 4 is_stmt 1 view .LVU925
 2920 04c6 FFF7FEFF 		bl	reset_arg
 2921              	.LVL231:
1857:src/keys.c    **** 		}
 2922              		.loc 1 1857 4 view .LVU926
1857:src/keys.c    **** 		}
 2923              		.loc 1 1857 11 is_stmt 0 view .LVU927
 2924 04ca 40F27510 		movw	r0, #373
 2925 04ce E6E5     		b	.L224
 2926              	.LVL232:
 2927              	.L304:
1857:src/keys.c    **** 		}
 2928              		.loc 1 1857 11 view .LVU928
 2929 04d0 8E25     		movs	r5, #142
 2930              	.LVL233:
1857:src/keys.c    **** 		}
 2931              		.loc 1 1857 11 view .LVU929
 2932 04d2 07E6     		b	.L247
 2933              	.LVL234:
 2934              	.L276:
 2935              	.LBB371:
 2936              	.LBB361:
1665:src/keys.c    **** 		}
 2937              		.loc 1 1665 4 is_stmt 1 view .LVU930
1665:src/keys.c    **** 		}
 2938              		.loc 1 1665 17 is_stmt 0 view .LVU931
ARM GAS  /tmp/ccsJYix0.s 			page 115


 2939 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2940 04d6 43F00103 		orr	r3, r3, #1
 2941 04da A375     		strb	r3, [r4, #22]
1675:src/keys.c    **** }
 2942              		.loc 1 1675 9 view .LVU932
 2943 04dc 3320     		movs	r0, #51
 2944              	.LVL235:
1665:src/keys.c    **** 		}
 2945              		.loc 1 1665 17 view .LVU933
 2946 04de DEE5     		b	.L224
 2947              	.LVL236:
 2948              	.L293:
1665:src/keys.c    **** 		}
 2949              		.loc 1 1665 17 view .LVU934
 2950              	.LBE361:
 2951              	.LBE371:
1946:src/keys.c    **** 		}
 2952              		.loc 1 1946 5 is_stmt 1 view .LVU935
1946:src/keys.c    **** 		}
 2953              		.loc 1 1946 19 is_stmt 0 view .LVU936
 2954 04e0 2389     		ldrh	r3, [r4, #8]
 2955 04e2 1A4A     		ldr	r2, .L370
 2956 04e4 A2FB0323 		umull	r2, r3, r2, r3
 2957 04e8 DB08     		lsrs	r3, r3, #3
 2958 04ea 2381     		strh	r3, [r4, #8]	@ movhi
1956:src/keys.c    **** }
 2959              		.loc 1 1956 9 view .LVU937
 2960 04ec 3320     		movs	r0, #51
 2961              	.LVL237:
1956:src/keys.c    **** }
 2962              		.loc 1 1956 9 view .LVU938
 2963 04ee D6E5     		b	.L224
 2964              	.LVL238:
 2965              	.L363:
1803:src/keys.c    **** 		else if (base == RARG_RCL)
 2966              		.loc 1 1803 4 is_stmt 1 view .LVU939
1803:src/keys.c    **** 		else if (base == RARG_RCL)
 2967              		.loc 1 1803 12 is_stmt 0 view .LVU940
 2968 04f0 7723     		movs	r3, #119
 2969 04f2 E377     		strb	r3, [r4, #31]
1956:src/keys.c    **** }
 2970              		.loc 1 1956 9 view .LVU941
 2971 04f4 3320     		movs	r0, #51
 2972              	.LVL239:
1956:src/keys.c    **** }
 2973              		.loc 1 1956 9 view .LVU942
 2974 04f6 D2E5     		b	.L224
 2975              	.LVL240:
 2976              	.L362:
 2977              	.LBB372:
 2978              	.LBB362:
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2979              		.loc 1 1660 4 is_stmt 1 view .LVU943
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2980              		.loc 1 1660 17 is_stmt 0 view .LVU944
 2981 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2982 04fa 62F30003 		bfi	r3, r2, #0, #1
ARM GAS  /tmp/ccsJYix0.s 			page 116


1661:src/keys.c    **** 		}
 2983              		.loc 1 1661 11 view .LVU945
 2984 04fe 6420     		movs	r0, #100
 2985              	.LVL241:
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2986              		.loc 1 1660 17 view .LVU946
 2987 0500 A375     		strb	r3, [r4, #22]
1661:src/keys.c    **** 		}
 2988              		.loc 1 1661 4 is_stmt 1 view .LVU947
 2989 0502 B8E6     		b	.L351
 2990              	.L361:
1661:src/keys.c    **** 		}
 2991              		.loc 1 1661 4 is_stmt 0 view .LVU948
 2992              	.LBE362:
 2993              	.LBE372:
1935:src/keys.c    **** 			else if (State2.ind)
 2994              		.loc 1 1935 5 is_stmt 1 view .LVU949
1935:src/keys.c    **** 			else if (State2.ind)
 2995              		.loc 1 1935 18 is_stmt 0 view .LVU950
 2996 0504 61F30002 		bfi	r2, r1, #0, #1
 2997 0508 A275     		strb	r2, [r4, #22]
1956:src/keys.c    **** }
 2998              		.loc 1 1956 9 view .LVU951
 2999 050a 3320     		movs	r0, #51
 3000 050c C7E5     		b	.L224
 3001              	.LVL242:
 3002              	.L365:
1912:src/keys.c    **** 				State2.multi = 1;
 3003              		.loc 1 1912 5 is_stmt 1 view .LVU952
 3004              	.LBB373:
 3005              	.LBI373:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 3006              		.loc 1 506 13 view .LVU953
 3007              	.LBB374:
 507:src/keys.c    **** 		return;
 3008              		.loc 1 507 2 view .LVU954
 507:src/keys.c    **** 		return;
 3009              		.loc 1 507 6 is_stmt 0 view .LVU955
 3010 050e FFF7FEFF 		bl	is_bad_cmdline
 3011              	.LVL243:
 507:src/keys.c    **** 		return;
 3012              		.loc 1 507 5 view .LVU956
 3013 0512 20B9     		cbnz	r0, .L287
 3014              	.LBE374:
 3015              	.LBE373:
1912:src/keys.c    **** 				State2.multi = 1;
 3016              		.loc 1 1912 31 view .LVU957
 3017 0514 A5F14200 		sub	r0, r5, #66
 3018              	.LBB376:
 3019              	.LBB375:
 3020 0518 C0B2     		uxtb	r0, r0
 3021 051a FFF7FEFF 		bl	init_arg.part.0
 3022              	.LVL244:
 3023              	.L287:
1912:src/keys.c    **** 				State2.multi = 1;
 3024              		.loc 1 1912 31 view .LVU958
 3025              	.LBE375:
ARM GAS  /tmp/ccsJYix0.s 			page 117


 3026              	.LBE376:
1913:src/keys.c    **** 				State2.alphashift = 0;
 3027              		.loc 1 1913 5 is_stmt 1 view .LVU959
1914:src/keys.c    **** 				State2.rarg = 0;
 3028              		.loc 1 1914 5 view .LVU960
1915:src/keys.c    **** 			} else if (base == RARG_SCI) {
 3029              		.loc 1 1915 5 view .LVU961
1913:src/keys.c    **** 				State2.alphashift = 0;
 3030              		.loc 1 1913 18 is_stmt 0 view .LVU962
 3031 051e 6369     		ldr	r3, [r4, #20]
 3032 0520 23F44013 		bic	r3, r3, #3145728
 3033 0524 23F40063 		bic	r3, r3, #2048
 3034 0528 43F40063 		orr	r3, r3, #2048
 3035 052c 6361     		str	r3, [r4, #20]
1956:src/keys.c    **** }
 3036              		.loc 1 1956 9 view .LVU963
 3037 052e 3320     		movs	r0, #51
 3038 0530 B5E5     		b	.L224
 3039              	.LVL245:
 3040              	.L366:
1917:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 3041              		.loc 1 1917 5 is_stmt 1 view .LVU964
 3042 0532 FFF7FEFF 		bl	reset_arg
 3043              	.LVL246:
1918:src/keys.c    **** 			} else if (base == RARG_ENG) {
 3044              		.loc 1 1918 5 view .LVU965
1918:src/keys.c    **** 			} else if (base == RARG_ENG) {
 3045              		.loc 1 1918 12 is_stmt 0 view .LVU966
 3046 0536 40F25510 		movw	r0, #341
 3047 053a B0E5     		b	.L224
 3048              	.LVL247:
 3049              	.L367:
1920:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 3050              		.loc 1 1920 5 is_stmt 1 view .LVU967
 3051 053c FFF7FEFF 		bl	reset_arg
 3052              	.LVL248:
1921:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 3053              		.loc 1 1921 5 view .LVU968
1921:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 3054              		.loc 1 1921 12 is_stmt 0 view .LVU969
 3055 0540 4FF4AB70 		mov	r0, #342
 3056 0544 ABE5     		b	.L224
 3057              	.LVL249:
 3058              	.L241:
1705:src/keys.c    **** 	  case regY_idx:
 3059              		.loc 1 1705 6 is_stmt 1 view .LVU970
1705:src/keys.c    **** 	  case regY_idx:
 3060              		.loc 1 1705 13 is_stmt 0 view .LVU971
 3061 0546 0120     		movs	r0, #1
 3062              	.LVL250:
1705:src/keys.c    **** 	  case regY_idx:
 3063              		.loc 1 1705 13 view .LVU972
 3064 0548 ABE6     		b	.L350
 3065              	.L371:
 3066 054a 00BF     		.align	2
 3067              	.L370:
 3068 054c CDCCCCCC 		.word	-858993459
ARM GAS  /tmp/ccsJYix0.s 			page 118


 3069              		.cfi_endproc
 3070              	.LFE37:
 3072              		.section	.text.cur_shift,"ax",%progbits
 3073              		.align	1
 3074              		.p2align 2,,3
 3075              		.global	cur_shift
 3076              		.syntax unified
 3077              		.thumb
 3078              		.thumb_func
 3079              		.fpu fpv4-sp-d16
 3081              	cur_shift:
 3082              	.LFB0:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3083              		.loc 1 86 29 is_stmt 1 view -0
 3084              		.cfi_startproc
 3085              		@ args = 0, pretend = 0, frame = 0
 3086              		@ frame_needed = 0, uses_anonymous_args = 0
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3087              		.loc 1 87 2 view .LVU974
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3088              		.loc 1 86 29 is_stmt 0 view .LVU975
 3089 0000 08B5     		push	{r3, lr}
 3090              		.cfi_def_cfa_offset 8
 3091              		.cfi_offset 3, -8
 3092              		.cfi_offset 14, -4
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3093              		.loc 1 87 18 view .LVU976
 3094 0002 FFF7FEFF 		bl	shift_down
 3095              	.LVL251:
  88:src/keys.c    **** }
 3096              		.loc 1 88 2 is_stmt 1 view .LVU977
  88:src/keys.c    **** }
 3097              		.loc 1 88 52 is_stmt 0 view .LVU978
 3098 0006 08B9     		cbnz	r0, .L373
  88:src/keys.c    **** }
 3099              		.loc 1 88 52 discriminator 1 view .LVU979
 3100 0008 014B     		ldr	r3, .L375
 3101 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3102              	.LVL252:
 3103              	.L373:
  89:src/keys.c    **** 
 3104              		.loc 1 89 1 discriminator 4 view .LVU980
 3105 000c 08BD     		pop	{r3, pc}
 3106              	.L376:
 3107 000e 00BF     		.align	2
 3108              	.L375:
 3109 0010 00000000 		.word	StateWhileOn
 3110              		.cfi_endproc
 3111              	.LFE0:
 3113              		.section	.text.reset_shift,"ax",%progbits
 3114              		.align	1
 3115              		.p2align 2,,3
 3116              		.global	reset_shift
 3117              		.syntax unified
 3118              		.thumb
 3119              		.thumb_func
 3120              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccsJYix0.s 			page 119


 3122              	reset_shift:
 3123              	.LFB2:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3124              		.loc 1 104 31 is_stmt 1 view -0
 3125              		.cfi_startproc
 3126              		@ args = 0, pretend = 0, frame = 0
 3127              		@ frame_needed = 0, uses_anonymous_args = 0
 105:src/keys.c    **** }
 3128              		.loc 1 105 2 view .LVU982
 3129              	.LVL253:
 3130              	.LBB377:
 3131              	.LBI377:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 3132              		.loc 1 94 20 view .LVU983
 3133              	.LBB378:
  95:src/keys.c    **** 	State2.shifts = shift;
 3134              		.loc 1 95 2 view .LVU984
 3135              	.LBB379:
 3136              	.LBI379:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3137              		.loc 1 86 13 view .LVU985
 3138              	.LBB380:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3139              		.loc 1 87 2 view .LVU986
 3140              	.LBE380:
 3141              	.LBE379:
 3142              	.LBE378:
 3143              	.LBE377:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3144              		.loc 1 104 31 is_stmt 0 view .LVU987
 3145 0000 08B5     		push	{r3, lr}
 3146              		.cfi_def_cfa_offset 8
 3147              		.cfi_offset 3, -8
 3148              		.cfi_offset 14, -4
 3149              	.LBB384:
 3150              	.LBB383:
 3151              	.LBB382:
 3152              	.LBB381:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3153              		.loc 1 87 18 view .LVU988
 3154 0002 FFF7FEFF 		bl	shift_down
 3155              	.LVL254:
  88:src/keys.c    **** }
 3156              		.loc 1 88 2 is_stmt 1 view .LVU989
  88:src/keys.c    **** }
 3157              		.loc 1 88 52 is_stmt 0 view .LVU990
 3158 0006 034B     		ldr	r3, .L382
 3159 0008 00B9     		cbnz	r0, .L378
 3160 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3161              	.LVL255:
 3162              	.L378:
  88:src/keys.c    **** }
 3163              		.loc 1 88 52 view .LVU991
 3164              	.LBE381:
 3165              	.LBE382:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3166              		.loc 1 96 2 is_stmt 1 view .LVU992
ARM GAS  /tmp/ccsJYix0.s 			page 120


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3167              		.loc 1 96 16 is_stmt 0 view .LVU993
 3168 000c 0022     		movs	r2, #0
 3169 000e 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 3170              		.loc 1 98 2 is_stmt 1 view .LVU994
 3171              	.LVL256:
  98:src/keys.c    **** }
 3172              		.loc 1 98 2 is_stmt 0 view .LVU995
 3173              	.LBE383:
 3174              	.LBE384:
 106:src/keys.c    **** 
 3175              		.loc 1 106 1 view .LVU996
 3176 0010 08BD     		pop	{r3, pc}
 3177              	.L383:
 3178 0012 00BF     		.align	2
 3179              	.L382:
 3180 0014 00000000 		.word	StateWhileOn
 3181              		.cfi_endproc
 3182              	.LFE2:
 3184              		.section	.text.keycode_to_row_column,"ax",%progbits
 3185              		.align	1
 3186              		.p2align 2,,3
 3187              		.global	keycode_to_row_column
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv4-sp-d16
 3193              	keycode_to_row_column:
 3194              	.LVL257:
 3195              	.LFB6:
 170:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3196              		.loc 1 170 1 is_stmt 1 view -0
 3197              		.cfi_startproc
 3198              		@ args = 0, pretend = 0, frame = 0
 3199              		@ frame_needed = 0, uses_anonymous_args = 0
 3200              		@ link register save eliminated.
 171:src/keys.c    **** }
 3201              		.loc 1 171 2 view .LVU998
 171:src/keys.c    **** }
 3202              		.loc 1 171 18 is_stmt 0 view .LVU999
 3203 0000 074A     		ldr	r2, .L385
 3204 0002 82FB0032 		smull	r3, r2, r2, r0
 3205 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 171:src/keys.c    **** }
 3206              		.loc 1 171 24 view .LVU1000
 3207 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3208 000e 5200     		lsls	r2, r2, #1
 171:src/keys.c    **** }
 3209              		.loc 1 171 33 view .LVU1001
 3210 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3211 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 171:src/keys.c    **** }
 3212              		.loc 1 171 12 view .LVU1002
 3213 0018 02F10B00 		add	r0, r2, #11
 3214              	.LVL258:
 172:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 121


 3215              		.loc 1 172 1 view .LVU1003
 3216 001c 1844     		add	r0, r0, r3
 3217 001e 7047     		bx	lr
 3218              	.L386:
 3219              		.align	2
 3220              	.L385:
 3221 0020 ABAAAA2A 		.word	715827883
 3222              		.cfi_endproc
 3223              	.LFE6:
 3225              		.section	.text.row_column_to_keycode,"ax",%progbits
 3226              		.align	1
 3227              		.p2align 2,,3
 3228              		.global	row_column_to_keycode
 3229              		.syntax unified
 3230              		.thumb
 3231              		.thumb_func
 3232              		.fpu fpv4-sp-d16
 3234              	row_column_to_keycode:
 3235              	.LVL259:
 3236              	.LFB7:
 180:src/keys.c    **** 	int row = c / 10 - 1;
 3237              		.loc 1 180 1 is_stmt 1 view -0
 3238              		.cfi_startproc
 3239              		@ args = 0, pretend = 0, frame = 0
 3240              		@ frame_needed = 0, uses_anonymous_args = 0
 3241              		@ link register save eliminated.
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3242              		.loc 1 181 2 view .LVU1005
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3243              		.loc 1 181 14 is_stmt 0 view .LVU1006
 3244 0000 0E4A     		ldr	r2, .L393
 3245 0002 82FB0032 		smull	r3, r2, r2, r0
 3246 0006 C317     		asrs	r3, r0, #31
 3247 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 182:src/keys.c    **** 
 3248              		.loc 1 182 14 view .LVU1007
 3249 000c 03EB8302 		add	r2, r3, r3, lsl #2
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3250              		.loc 1 181 6 view .LVU1008
 3251 0010 013B     		subs	r3, r3, #1
 3252              	.LVL260:
 182:src/keys.c    **** 
 3253              		.loc 1 182 2 is_stmt 1 view .LVU1009
 182:src/keys.c    **** 
 3254              		.loc 1 182 14 is_stmt 0 view .LVU1010
 3255 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3256              	.LVL261:
 184:src/keys.c    **** 		return -1;
 3257              		.loc 1 184 5 view .LVU1011
 3258 0016 062B     		cmp	r3, #6
 182:src/keys.c    **** 
 3259              		.loc 1 182 6 view .LVU1012
 3260 0018 00F1FF30 		add	r0, r0, #-1
 3261              	.LVL262:
 184:src/keys.c    **** 		return -1;
 3262              		.loc 1 184 2 is_stmt 1 view .LVU1013
 184:src/keys.c    **** 		return -1;
ARM GAS  /tmp/ccsJYix0.s 			page 122


 3263              		.loc 1 184 5 is_stmt 0 view .LVU1014
 3264 001c 0AD8     		bhi	.L392
 184:src/keys.c    **** 		return -1;
 3265              		.loc 1 184 36 discriminator 1 view .LVU1015
 3266 001e 012B     		cmp	r3, #1
 3267 0020 CCBF     		ite	gt
 3268 0022 0422     		movgt	r2, #4
 3269 0024 0522     		movle	r2, #5
 184:src/keys.c    **** 		return -1;
 3270              		.loc 1 184 25 discriminator 1 view .LVU1016
 3271 0026 8242     		cmp	r2, r0
 3272 0028 04DB     		blt	.L392
 186:src/keys.c    **** }
 3273              		.loc 1 186 2 is_stmt 1 view .LVU1017
 186:src/keys.c    **** }
 3274              		.loc 1 186 13 is_stmt 0 view .LVU1018
 3275 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3276              	.LVL263:
 186:src/keys.c    **** }
 3277              		.loc 1 186 17 view .LVU1019
 3278 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3279              	.LVL264:
 186:src/keys.c    **** }
 3280              		.loc 1 186 17 view .LVU1020
 3281 0032 7047     		bx	lr
 3282              	.LVL265:
 3283              	.L392:
 185:src/keys.c    **** 	return row * 6 + col;
 3284              		.loc 1 185 10 view .LVU1021
 3285 0034 4FF0FF30 		mov	r0, #-1
 3286              	.LVL266:
 187:src/keys.c    **** 
 3287              		.loc 1 187 1 view .LVU1022
 3288 0038 7047     		bx	lr
 3289              	.L394:
 3290 003a 00BF     		.align	2
 3291              	.L393:
 3292 003c 67666666 		.word	1717986919
 3293              		.cfi_endproc
 3294              	.LFE7:
 3296              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3297              		.align	1
 3298              		.p2align 2,,3
 3299              		.global	keycode_to_digit_or_register
 3300              		.syntax unified
 3301              		.thumb
 3302              		.thumb_func
 3303              		.fpu fpv4-sp-d16
 3305              	keycode_to_digit_or_register:
 3306              	.LVL267:
 3307              	.LFB8:
 201:src/keys.c    ****   static const unsigned char map[] = {
 3308              		.loc 1 201 1 is_stmt 1 view -0
 3309              		.cfi_startproc
 3310              		@ args = 0, pretend = 0, frame = 0
 3311              		@ frame_needed = 0, uses_anonymous_args = 0
 3312              		@ link register save eliminated.
ARM GAS  /tmp/ccsJYix0.s 			page 123


 202:src/keys.c    ****     // K00 - K05
 3313              		.loc 1 202 3 view .LVU1024
 224:src/keys.c    **** }
 3314              		.loc 1 224 3 view .LVU1025
 3315              	.LBB385:
 3316              	.LBI385:
 121:src/keys.c    **** {
 3317              		.loc 1 121 12 view .LVU1026
 3318              	.LBB386:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3319              		.loc 1 123 2 view .LVU1027
 133:src/keys.c    **** }
 3320              		.loc 1 133 2 view .LVU1028
 133:src/keys.c    **** }
 3321              		.loc 1 133 23 is_stmt 0 view .LVU1029
 3322 0000 024B     		ldr	r3, .L396
 3323              	.LBE386:
 3324              	.LBE385:
 224:src/keys.c    **** }
 3325              		.loc 1 224 28 view .LVU1030
 3326 0002 034A     		ldr	r2, .L396+4
 3327              	.LBB388:
 3328              	.LBB387:
 133:src/keys.c    **** }
 3329              		.loc 1 133 23 view .LVU1031
 3330 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3331              	.LBE387:
 3332              	.LBE388:
 225:src/keys.c    **** #else
 3333              		.loc 1 225 1 view .LVU1032
 3334 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3335              	.LVL268:
 225:src/keys.c    **** #else
 3336              		.loc 1 225 1 view .LVU1033
 3337 0008 7047     		bx	lr
 3338              	.L397:
 3339 000a 00BF     		.align	2
 3340              	.L396:
 3341 000c 00000000 		.word	.LANCHOR1
 3342 0010 00000000 		.word	.LANCHOR0
 3343              		.cfi_endproc
 3344              	.LFE8:
 3346              		.section	.text.init_state,"ax",%progbits
 3347              		.align	1
 3348              		.p2align 2,,3
 3349              		.global	init_state
 3350              		.syntax unified
 3351              		.thumb
 3352              		.thumb_func
 3353              		.fpu fpv4-sp-d16
 3355              	init_state:
 3356              	.LFB13:
 569:src/keys.c    **** #ifndef REALBUILD
 3357              		.loc 1 569 23 is_stmt 1 view -0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsJYix0.s 			page 124


 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3361              		.loc 1 571 2 view .LVU1035
 569:src/keys.c    **** #ifndef REALBUILD
 3362              		.loc 1 569 23 is_stmt 0 view .LVU1036
 3363 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3364              		.cfi_def_cfa_offset 24
 3365              		.cfi_offset 4, -24
 3366              		.cfi_offset 5, -20
 3367              		.cfi_offset 6, -16
 3368              		.cfi_offset 7, -12
 3369              		.cfi_offset 8, -8
 3370              		.cfi_offset 14, -4
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3371              		.loc 1 571 25 view .LVU1037
 3372 0004 154C     		ldr	r4, .L400
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3373              		.loc 1 579 10 view .LVU1038
 3374 0006 0021     		movs	r1, #0
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3375              		.loc 1 583 2 view .LVU1039
 3376 0008 1422     		movs	r2, #20
 3377 000a 04F10800 		add	r0, r4, #8
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3378              		.loc 1 579 10 view .LVU1040
 3379 000e E177     		strb	r1, [r4, #31]
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3380              		.loc 1 571 25 view .LVU1041
 3381 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 572:src/keys.c    **** #else
 3382              		.loc 1 572 25 view .LVU1042
 3383 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 576:src/keys.c    **** 	int k = LastKey;
 3384              		.loc 1 576 10 view .LVU1043
 3385 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 577:src/keys.c    **** 
 3386              		.loc 1 577 10 view .LVU1044
 3387 0016 94F91380 		ldrsb	r8, [r4, #19]
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3388              		.loc 1 583 2 view .LVU1045
 3389 001a FFF7FEFF 		bl	xset
 3390              	.LVL269:
 585:src/keys.c    **** 	update_program_bounds(1);
 3391              		.loc 1 585 17 view .LVU1046
 3392 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 584:src/keys.c    **** 	State2.runmode = 1;
 3393              		.loc 1 584 14 view .LVU1047
 3394 0020 0722     		movs	r2, #7
 585:src/keys.c    **** 	update_program_bounds(1);
 3395              		.loc 1 585 17 view .LVU1048
 3396 0022 43F04003 		orr	r3, r3, #64
 586:src/keys.c    **** 	set_lift();
 3397              		.loc 1 586 2 view .LVU1049
 3398 0026 0120     		movs	r0, #1
 584:src/keys.c    **** 	State2.runmode = 1;
 3399              		.loc 1 584 14 view .LVU1050
 3400 0028 E273     		strb	r2, [r4, #15]
 585:src/keys.c    **** 	update_program_bounds(1);
ARM GAS  /tmp/ccsJYix0.s 			page 125


 3401              		.loc 1 585 17 view .LVU1051
 3402 002a A375     		strb	r3, [r4, #22]
 586:src/keys.c    **** 	set_lift();
 3403              		.loc 1 586 2 view .LVU1052
 3404 002c FFF7FEFF 		bl	update_program_bounds
 3405              	.LVL270:
 587:src/keys.c    **** 
 3406              		.loc 1 587 2 view .LVU1053
 3407 0030 FFF7FEFF 		bl	set_lift
 3408              	.LVL271:
 594:src/keys.c    **** 	State2.flags = a;
 3409              		.loc 1 594 15 view .LVU1054
 3410 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 595:src/keys.c    **** #else
 3411              		.loc 1 595 15 view .LVU1055
 3412 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 599:src/keys.c    **** }
 3413              		.loc 1 599 15 view .LVU1056
 3414 0038 0949     		ldr	r1, .L400+4
 592:src/keys.c    **** #ifndef REALBUILD
 3415              		.loc 1 592 10 view .LVU1057
 3416 003a 84F81380 		strb	r8, [r4, #19]
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3417              		.loc 1 571 25 view .LVU1058
 3418 003e 05F00105 		and	r5, r5, #1
 3419              	.LVL272:
 572:src/keys.c    **** #else
 3420              		.loc 1 572 2 is_stmt 1 view .LVU1059
 572:src/keys.c    **** #else
 3421              		.loc 1 572 25 is_stmt 0 view .LVU1060
 3422 0042 F609     		lsrs	r6, r6, #7
 3423              	.LVL273:
 576:src/keys.c    **** 	int k = LastKey;
 3424              		.loc 1 576 2 is_stmt 1 view .LVU1061
 576:src/keys.c    **** 	int k = LastKey;
 3425              		.loc 1 576 10 is_stmt 0 view .LVU1062
 3426 0044 FFB2     		uxtb	r7, r7
 3427              	.LVL274:
 577:src/keys.c    **** 
 3428              		.loc 1 577 2 is_stmt 1 view .LVU1063
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3429              		.loc 1 579 2 view .LVU1064
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3430              		.loc 1 583 2 view .LVU1065
 584:src/keys.c    **** 	State2.runmode = 1;
 3431              		.loc 1 584 2 view .LVU1066
 585:src/keys.c    **** 	update_program_bounds(1);
 3432              		.loc 1 585 2 view .LVU1067
 586:src/keys.c    **** 	set_lift();
 3433              		.loc 1 586 2 view .LVU1068
 587:src/keys.c    **** 
 3434              		.loc 1 587 2 view .LVU1069
 591:src/keys.c    **** 	LastKey = k;
 3435              		.loc 1 591 2 view .LVU1070
 594:src/keys.c    **** 	State2.flags = a;
 3436              		.loc 1 594 15 is_stmt 0 view .LVU1071
 3437 0046 66F3C712 		bfi	r2, r6, #7, #1
ARM GAS  /tmp/ccsJYix0.s 			page 126


 595:src/keys.c    **** #else
 3438              		.loc 1 595 15 view .LVU1072
 3439 004a 65F30003 		bfi	r3, r5, #0, #1
 599:src/keys.c    **** }
 3440              		.loc 1 599 15 view .LVU1073
 3441 004e 6420     		movs	r0, #100
 594:src/keys.c    **** 	State2.flags = a;
 3442              		.loc 1 594 15 view .LVU1074
 3443 0050 E275     		strb	r2, [r4, #23]
 595:src/keys.c    **** #else
 3444              		.loc 1 595 15 view .LVU1075
 3445 0052 2376     		strb	r3, [r4, #24]
 591:src/keys.c    **** 	LastKey = k;
 3446              		.loc 1 591 10 view .LVU1076
 3447 0054 A774     		strb	r7, [r4, #18]
 592:src/keys.c    **** #ifndef REALBUILD
 3448              		.loc 1 592 2 is_stmt 1 view .LVU1077
 594:src/keys.c    **** 	State2.flags = a;
 3449              		.loc 1 594 2 view .LVU1078
 595:src/keys.c    **** #else
 3450              		.loc 1 595 2 view .LVU1079
 599:src/keys.c    **** }
 3451              		.loc 1 599 2 view .LVU1080
 599:src/keys.c    **** }
 3452              		.loc 1 599 15 is_stmt 0 view .LVU1081
 3453 0056 0860     		str	r0, [r1]
 600:src/keys.c    **** 
 3454              		.loc 1 600 1 view .LVU1082
 3455 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3456              	.LVL275:
 3457              	.L401:
 600:src/keys.c    **** 
 3458              		.loc 1 600 1 view .LVU1083
 3459              		.align	2
 3460              	.L400:
 3461 005c 00000000 		.word	StateWhileOn
 3462 0060 00000000 		.word	ShowRegister
 3463              		.cfi_endproc
 3464              	.LFE13:
 3466              		.section	.text.soft_init_state,"ax",%progbits
 3467              		.align	1
 3468              		.p2align 2,,3
 3469              		.global	soft_init_state
 3470              		.syntax unified
 3471              		.thumb
 3472              		.thumb_func
 3473              		.fpu fpv4-sp-d16
 3475              	soft_init_state:
 3476              	.LFB14:
 602:src/keys.c    **** 	int soft;
 3477              		.loc 1 602 28 is_stmt 1 view -0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 0
 3480              		@ frame_needed = 0, uses_anonymous_args = 0
 603:src/keys.c    **** 	unsigned int runmode;
 3481              		.loc 1 603 2 view .LVU1085
 604:src/keys.c    **** 	unsigned int alphas;
ARM GAS  /tmp/ccsJYix0.s 			page 127


 3482              		.loc 1 604 2 view .LVU1086
 605:src/keys.c    **** 
 3483              		.loc 1 605 2 view .LVU1087
 607:src/keys.c    **** 		CmdLineLength = 0;
 3484              		.loc 1 607 2 view .LVU1088
 602:src/keys.c    **** 	int soft;
 3485              		.loc 1 602 28 is_stmt 0 view .LVU1089
 3486 0000 38B5     		push	{r3, r4, r5, lr}
 3487              		.cfi_def_cfa_offset 16
 3488              		.cfi_offset 3, -16
 3489              		.cfi_offset 4, -12
 3490              		.cfi_offset 5, -8
 3491              		.cfi_offset 14, -4
 607:src/keys.c    **** 		CmdLineLength = 0;
 3492              		.loc 1 607 6 view .LVU1090
 3493 0002 114C     		ldr	r4, .L409
 607:src/keys.c    **** 		CmdLineLength = 0;
 3494              		.loc 1 607 5 view .LVU1091
 3495 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3496 0006 D3B9     		cbnz	r3, .L408
 613:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3497              		.loc 1 613 2 is_stmt 1 view .LVU1092
 614:src/keys.c    **** 	runmode = State2.runmode;
 3498              		.loc 1 614 17 is_stmt 0 view .LVU1093
 3499 0008 104A     		ldr	r2, .L409+4
 3500 000a 6369     		ldr	r3, [r4, #20]
 614:src/keys.c    **** 	runmode = State2.runmode;
 3501              		.loc 1 614 60 view .LVU1094
 3502 000c 1A42     		tst	r2, r3
 3503 000e 0AD0     		beq	.L405
 3504              	.L406:
 3505              	.LVL276:
 615:src/keys.c    **** 	alphas = State2.alphas;
 3506              		.loc 1 615 2 is_stmt 1 view .LVU1095
 616:src/keys.c    **** 	init_state();
 3507              		.loc 1 616 17 is_stmt 0 view .LVU1096
 3508 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3509              	.LVL277:
 616:src/keys.c    **** 	init_state();
 3510              		.loc 1 616 2 is_stmt 1 view .LVU1097
 617:src/keys.c    **** 	if (soft) {
 3511              		.loc 1 617 2 view .LVU1098
 3512 0012 FFF7FEFF 		bl	init_state
 3513              	.LVL278:
 618:src/keys.c    **** 		State2.runmode = runmode;
 3514              		.loc 1 618 2 view .LVU1099
 619:src/keys.c    **** 		State2.alphas = alphas;
 3515              		.loc 1 619 3 view .LVU1100
 620:src/keys.c    **** 	}
 3516              		.loc 1 620 3 view .LVU1101
 620:src/keys.c    **** 	}
 3517              		.loc 1 620 17 is_stmt 0 view .LVU1102
 3518 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3519 0018 05F04805 		and	r5, r5, #72
 3520 001c 23F04803 		bic	r3, r3, #72
 3521 0020 2B43     		orrs	r3, r3, r5
 3522 0022 A375     		strb	r3, [r4, #22]
ARM GAS  /tmp/ccsJYix0.s 			page 128


 622:src/keys.c    **** 
 3523              		.loc 1 622 1 view .LVU1103
 3524 0024 38BD     		pop	{r3, r4, r5, pc}
 3525              	.LVL279:
 3526              	.L405:
 614:src/keys.c    **** 	runmode = State2.runmode;
 3527              		.loc 1 614 60 discriminator 2 view .LVU1104
 3528 0026 E368     		ldr	r3, [r4, #12]
 3529 0028 23F47F03 		bic	r3, r3, #16711680
 3530 002c 23F47F43 		bic	r3, r3, #65280
 3531 0030 B3F1E06F 		cmp	r3, #117440512
 3532 0034 ECD1     		bne	.L406
 3533              	.LVL280:
 615:src/keys.c    **** 	alphas = State2.alphas;
 3534              		.loc 1 615 2 is_stmt 1 view .LVU1105
 616:src/keys.c    **** 	init_state();
 3535              		.loc 1 616 2 view .LVU1106
 617:src/keys.c    **** 	if (soft) {
 3536              		.loc 1 617 2 view .LVU1107
 622:src/keys.c    **** 
 3537              		.loc 1 622 1 is_stmt 0 view .LVU1108
 3538 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3539              		.cfi_remember_state
 3540              		.cfi_restore 14
 3541              		.cfi_restore 5
 3542              		.cfi_restore 4
 3543              		.cfi_restore 3
 3544              		.cfi_def_cfa_offset 0
 617:src/keys.c    **** 	if (soft) {
 3545              		.loc 1 617 2 view .LVU1109
 3546 003a FFF7FEBF 		b	init_state
 3547              	.LVL281:
 3548              	.L408:
 3549              		.cfi_restore_state
 3550              	.LBB391:
 3551              	.LBI391:
 602:src/keys.c    **** 	int soft;
 3552              		.loc 1 602 6 is_stmt 1 view .LVU1110
 3553              	.LBB392:
 608:src/keys.c    **** 		CmdLineEex = 0;
 3554              		.loc 1 608 3 view .LVU1111
 609:src/keys.c    **** 		CmdLineDot = 0;
 3555              		.loc 1 609 3 view .LVU1112
 610:src/keys.c    **** 		return;
 3556              		.loc 1 610 3 view .LVU1113
 608:src/keys.c    **** 		CmdLineEex = 0;
 3557              		.loc 1 608 17 is_stmt 0 view .LVU1114
 3558 003e 0023     		movs	r3, #0
 3559 0040 A383     		strh	r3, [r4, #28]	@ movhi
 610:src/keys.c    **** 		return;
 3560              		.loc 1 610 14 view .LVU1115
 3561 0042 A377     		strb	r3, [r4, #30]
 611:src/keys.c    **** 	}
 3562              		.loc 1 611 3 is_stmt 1 view .LVU1116
 3563              	.LBE392:
 3564              	.LBE391:
 622:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 129


 3565              		.loc 1 622 1 is_stmt 0 view .LVU1117
 3566 0044 38BD     		pop	{r3, r4, r5, pc}
 3567              	.L410:
 3568 0046 00BF     		.align	2
 3569              	.L409:
 3570 0048 00000000 		.word	StateWhileOn
 3571 004c 002F2004 		.word	69218048
 3572              		.cfi_endproc
 3573              	.LFE14:
 3575              		.section	.text.current_catalogue_max,"ax",%progbits
 3576              		.align	1
 3577              		.p2align 2,,3
 3578              		.global	current_catalogue_max
 3579              		.syntax unified
 3580              		.thumb
 3581              		.thumb_func
 3582              		.fpu fpv4-sp-d16
 3584              	current_catalogue_max:
 3585              	.LFB39:
2093:src/keys.c    **** 	// A quick table of catalogue sizes
 3586              		.loc 1 2093 33 is_stmt 1 view -0
 3587              		.cfi_startproc
 3588              		@ args = 0, pretend = 0, frame = 0
 3589              		@ frame_needed = 0, uses_anonymous_args = 0
 3590              		@ link register save eliminated.
2096:src/keys.c    **** 	{
 3591              		.loc 1 2096 2 view .LVU1119
2127:src/keys.c    **** #endif
 3592              		.loc 1 2127 2 view .LVU1120
2127:src/keys.c    **** #endif
 3593              		.loc 1 2127 31 is_stmt 0 view .LVU1121
 3594 0000 024B     		ldr	r3, .L412
2127:src/keys.c    **** #endif
 3595              		.loc 1 2127 24 view .LVU1122
 3596 0002 034A     		ldr	r2, .L412+4
2127:src/keys.c    **** #endif
 3597              		.loc 1 2127 31 view .LVU1123
 3598 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2129:src/keys.c    **** 
 3599              		.loc 1 2129 1 view .LVU1124
 3600 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3601 0008 7047     		bx	lr
 3602              	.L413:
 3603 000a 00BF     		.align	2
 3604              	.L412:
 3605 000c 00000000 		.word	StateWhileOn
 3606 0010 00000000 		.word	.LANCHOR2
 3607              		.cfi_endproc
 3608              	.LFE39:
 3610              		.section	.text.current_catalogue,"ax",%progbits
 3611              		.align	1
 3612              		.p2align 2,,3
 3613              		.global	current_catalogue
 3614              		.syntax unified
 3615              		.thumb
 3616              		.thumb_func
 3617              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccsJYix0.s 			page 130


 3619              	current_catalogue:
 3620              	.LVL282:
 3621              	.LFB41:
2142:src/keys.c    **** 	// A quick table of catalogue tables
 3622              		.loc 1 2142 33 is_stmt 1 view -0
 3623              		.cfi_startproc
 3624              		@ args = 0, pretend = 0, frame = 0
 3625              		@ frame_needed = 0, uses_anonymous_args = 0
 3626              		@ link register save eliminated.
2145:src/keys.c    **** 	{
 3627              		.loc 1 2145 2 view .LVU1126
2172:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3628              		.loc 1 2172 2 view .LVU1127
2173:src/keys.c    **** 	int m, i;
 3629              		.loc 1 2173 2 view .LVU1128
2173:src/keys.c    **** 	int m, i;
 3630              		.loc 1 2173 25 is_stmt 0 view .LVU1129
 3631 0000 314A     		ldr	r2, .L441
2173:src/keys.c    **** 	int m, i;
 3632              		.loc 1 2173 15 view .LVU1130
 3633 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3634              	.LVL283:
2174:src/keys.c    **** 	unsigned p, q;
 3635              		.loc 1 2174 2 is_stmt 1 view .LVU1131
2175:src/keys.c    **** 
 3636              		.loc 1 2175 2 view .LVU1132
2177:src/keys.c    **** 		if (n == OP_ZERO)
 3637              		.loc 1 2177 2 view .LVU1133
2177:src/keys.c    **** 		if (n == OP_ZERO)
 3638              		.loc 1 2177 5 is_stmt 0 view .LVU1134
 3639 0004 102B     		cmp	r3, #16
 3640 0006 39D0     		beq	.L435
2182:src/keys.c    **** 		if (n == OP_ZERO)
 3641              		.loc 1 2182 2 is_stmt 1 view .LVU1135
2182:src/keys.c    **** 		if (n == OP_ZERO)
 3642              		.loc 1 2182 5 is_stmt 0 view .LVU1136
 3643 0008 112B     		cmp	r3, #17
 3644 000a 32D0     		beq	.L436
2187:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3645              		.loc 1 2187 2 is_stmt 1 view .LVU1137
2187:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3646              		.loc 1 2187 5 is_stmt 0 view .LVU1138
 3647 000c 122B     		cmp	r3, #18
 3648 000e 45D0     		beq	.L437
2200:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3649              		.loc 1 2200 2 is_stmt 1 view .LVU1139
2200:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3650              		.loc 1 2200 5 is_stmt 0 view .LVU1140
 3651 0010 0E2B     		cmp	r3, #14
 3652 0012 38D0     		beq	.L438
2203:src/keys.c    **** 
 3653              		.loc 1 2203 3 is_stmt 1 view .LVU1141
2203:src/keys.c    **** 
 3654              		.loc 1 2203 7 is_stmt 0 view .LVU1142
 3655 0014 2D4A     		ldr	r2, .L441+4
2205:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3656              		.loc 1 2205 35 view .LVU1143
ARM GAS  /tmp/ccsJYix0.s 			page 131


 3657 0016 A3F10B01 		sub	r1, r3, #11
2205:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3658              		.loc 1 2205 5 view .LVU1144
 3659 001a 0429     		cmp	r1, #4
2203:src/keys.c    **** 
 3660              		.loc 1 2203 7 view .LVU1145
 3661 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3662              	.LVL284:
2205:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3663              		.loc 1 2205 2 is_stmt 1 view .LVU1146
2205:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3664              		.loc 1 2205 5 is_stmt 0 view .LVU1147
 3665 0020 38D9     		bls	.L421
2208:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3666              		.loc 1 2208 2 is_stmt 1 view .LVU1148
2208:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3667              		.loc 1 2208 5 is_stmt 0 view .LVU1149
 3668 0022 142B     		cmp	r3, #20
 3669 0024 4DD8     		bhi	.L429
2212:src/keys.c    **** 	p = cat[0];
 3670              		.loc 1 2212 2 is_stmt 1 view .LVU1150
2142:src/keys.c    **** 	// A quick table of catalogue tables
 3671              		.loc 1 2142 33 is_stmt 0 view .LVU1151
 3672 0026 10B4     		push	{r4}
 3673              		.cfi_def_cfa_offset 4
 3674              		.cfi_offset 4, -4
2212:src/keys.c    **** 	p = cat[0];
 3675              		.loc 1 2212 11 view .LVU1152
 3676 0028 00EBA001 		add	r1, r0, r0, asr #2
2212:src/keys.c    **** 	p = cat[0];
 3677              		.loc 1 2212 6 view .LVU1153
 3678 002c 5318     		adds	r3, r2, r1
 3679              	.LVL285:
2213:src/keys.c    **** 	q = cat[1];
 3680              		.loc 1 2213 2 is_stmt 1 view .LVU1154
2214:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3681              		.loc 1 2214 2 view .LVU1155
2215:src/keys.c    **** 
 3682              		.loc 1 2215 2 view .LVU1156
2215:src/keys.c    **** 
 3683              		.loc 1 2215 35 is_stmt 0 view .LVU1157
 3684 002e 4000     		lsls	r0, r0, #1
 3685              	.LVL286:
2213:src/keys.c    **** 	q = cat[1];
 3686              		.loc 1 2213 4 view .LVU1158
 3687 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3688              	.LVL287:
2214:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3689              		.loc 1 2214 4 view .LVU1159
 3690 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3691              	.LVL288:
2214:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3692              		.loc 1 2214 4 view .LVU1160
 3693 0034 2649     		ldr	r1, .L441+8
 3694              	.LVL289:
2215:src/keys.c    **** 
 3695              		.loc 1 2215 54 view .LVU1161
ARM GAS  /tmp/ccsJYix0.s 			page 132


 3696 0036 C443     		mvns	r4, r0
2215:src/keys.c    **** 
 3697              		.loc 1 2215 35 view .LVU1162
 3698 0038 00F00600 		and	r0, r0, #6
2215:src/keys.c    **** 
 3699              		.loc 1 2215 54 view .LVU1163
 3700 003c 04F00604 		and	r4, r4, #6
2215:src/keys.c    **** 
 3701              		.loc 1 2215 24 view .LVU1164
 3702 0040 0230     		adds	r0, r0, #2
2215:src/keys.c    **** 
 3703              		.loc 1 2215 48 view .LVU1165
 3704 0042 E340     		lsrs	r3, r3, r4
 3705              	.LVL290:
2215:src/keys.c    **** 
 3706              		.loc 1 2215 18 view .LVU1166
 3707 0044 02FA00F0 		lsl	r0, r2, r0
2215:src/keys.c    **** 
 3708              		.loc 1 2215 43 view .LVU1167
 3709 0048 1843     		orrs	r0, r0, r3
2215:src/keys.c    **** 
 3710              		.loc 1 2215 4 view .LVU1168
 3711 004a C0F30903 		ubfx	r3, r0, #0, #10
 3712              	.LVL291:
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3713              		.loc 1 2218 2 is_stmt 1 view .LVU1169
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3714              		.loc 1 2218 12 view .LVU1170
2215:src/keys.c    **** 
 3715              		.loc 1 2215 4 is_stmt 0 view .LVU1171
 3716 004e 3422     		movs	r2, #52
 3717              	.LVL292:
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3718              		.loc 1 2218 8 view .LVU1172
 3719 0050 0020     		movs	r0, #0
 3720 0052 01E0     		b	.L425
 3721              	.LVL293:
 3722              	.L440:
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3723              		.loc 1 2218 8 view .LVU1173
 3724 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3725              	.LVL294:
 3726              	.L425:
2219:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3727              		.loc 1 2219 3 is_stmt 1 view .LVU1174
2221:src/keys.c    **** 	}
 3728              		.loc 1 2221 3 view .LVU1175
2219:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3729              		.loc 1 2219 6 is_stmt 0 view .LVU1176
 3730 0058 9A42     		cmp	r2, r3
 3731 005a 2FDC     		bgt	.L439
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3732              		.loc 1 2218 25 discriminator 2 view .LVU1177
 3733 005c 0130     		adds	r0, r0, #1
 3734              	.LVL295:
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3735              		.loc 1 2218 2 discriminator 2 view .LVU1178
ARM GAS  /tmp/ccsJYix0.s 			page 133


 3736 005e 0728     		cmp	r0, #7
2221:src/keys.c    **** 	}
 3737              		.loc 1 2221 5 discriminator 2 view .LVU1179
 3738 0060 A3EB0203 		sub	r3, r3, r2
 3739              	.LVL296:
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3740              		.loc 1 2218 24 is_stmt 1 discriminator 2 view .LVU1180
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3741              		.loc 1 2218 12 discriminator 2 view .LVU1181
2218:src/keys.c    **** 		if (m < opcode_breaks[i])
 3742              		.loc 1 2218 2 is_stmt 0 discriminator 2 view .LVU1182
 3743 0064 F6D1     		bne	.L440
2223:src/keys.c    **** }
 3744              		.loc 1 2223 2 is_stmt 1 view .LVU1183
2223:src/keys.c    **** }
 3745              		.loc 1 2223 9 is_stmt 0 view .LVU1184
 3746 0066 03F12000 		add	r0, r3, #32
 3747              	.LVL297:
2223:src/keys.c    **** }
 3748              		.loc 1 2223 9 view .LVU1185
 3749 006a 0002     		lsls	r0, r0, #8
 3750              	.L414:
2224:src/keys.c    **** 
 3751              		.loc 1 2224 1 view .LVU1186
 3752 006c 5DF8044B 		ldr	r4, [sp], #4
 3753              		.cfi_restore 4
 3754              		.cfi_def_cfa_offset 0
 3755 0070 7047     		bx	lr
 3756              	.LVL298:
 3757              	.L436:
2183:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3758              		.loc 1 2183 3 is_stmt 1 view .LVU1187
2183:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3759              		.loc 1 2183 6 is_stmt 0 view .LVU1188
 3760 0072 4B28     		cmp	r0, #75
 3761 0074 1FD0     		beq	.L427
2185:src/keys.c    **** 	}
 3762              		.loc 1 2185 3 is_stmt 1 view .LVU1189
2185:src/keys.c    **** 	}
 3763              		.loc 1 2185 10 is_stmt 0 view .LVU1190
 3764 0076 40F40450 		orr	r0, r0, #8448
 3765              	.LVL299:
2185:src/keys.c    **** 	}
 3766              		.loc 1 2185 10 view .LVU1191
 3767 007a 7047     		bx	lr
 3768              	.LVL300:
 3769              	.L435:
2178:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3770              		.loc 1 2178 3 is_stmt 1 view .LVU1192
2178:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3771              		.loc 1 2178 6 is_stmt 0 view .LVU1193
 3772 007c 4B28     		cmp	r0, #75
 3773 007e 17D0     		beq	.L426
2180:src/keys.c    **** 	}
 3774              		.loc 1 2180 3 is_stmt 1 view .LVU1194
2180:src/keys.c    **** 	}
 3775              		.loc 1 2180 10 is_stmt 0 view .LVU1195
ARM GAS  /tmp/ccsJYix0.s 			page 134


 3776 0080 40F40050 		orr	r0, r0, #8192
 3777              	.LVL301:
2180:src/keys.c    **** 	}
 3778              		.loc 1 2180 10 view .LVU1196
 3779 0084 7047     		bx	lr
 3780              	.LVL302:
 3781              	.L438:
2200:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3782              		.loc 1 2200 35 discriminator 1 view .LVU1197
 3783 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2201:src/keys.c    **** 	else
 3784              		.loc 1 2201 7 discriminator 1 view .LVU1198
 3785 0088 124B     		ldr	r3, .L441+12
 3786              	.LVL303:
2201:src/keys.c    **** 	else
 3787              		.loc 1 2201 7 discriminator 1 view .LVU1199
 3788 008a 134A     		ldr	r2, .L441+16
 3789              	.LVL304:
2201:src/keys.c    **** 	else
 3790              		.loc 1 2201 7 discriminator 1 view .LVU1200
 3791 008c 11F0100F 		tst	r1, #16
 3792 0090 18BF     		it	ne
 3793 0092 1A46     		movne	r2, r3
 3794              	.L421:
 3795              	.LVL305:
2206:src/keys.c    **** 	}
 3796              		.loc 1 2206 3 is_stmt 1 view .LVU1201
 3797              	.LBB393:
 3798              	.LBI393:
2135:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3799              		.loc 1 2135 15 view .LVU1202
 3800              	.LBB394:
2136:src/keys.c    **** }
 3801              		.loc 1 2136 2 view .LVU1203
2136:src/keys.c    **** }
 3802              		.loc 1 2136 9 is_stmt 0 view .LVU1204
 3803 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3804              	.LVL306:
2136:src/keys.c    **** }
 3805              		.loc 1 2136 9 view .LVU1205
 3806 0096 40F48840 		orr	r0, r0, #17408
 3807              	.LVL307:
2136:src/keys.c    **** }
 3808              		.loc 1 2136 9 view .LVU1206
 3809              	.LBE394:
 3810              	.LBE393:
2206:src/keys.c    **** 	}
 3811              		.loc 1 2206 10 view .LVU1207
 3812 009a 7047     		bx	lr
 3813              	.LVL308:
 3814              	.L437:
 3815              	.LBB395:
2188:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3816              		.loc 1 2188 3 is_stmt 1 view .LVU1208
2188:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3817              		.loc 1 2188 33 is_stmt 0 view .LVU1209
 3818 009c 0F4B     		ldr	r3, .L441+20
ARM GAS  /tmp/ccsJYix0.s 			page 135


 3819              	.LVL309:
2188:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3820              		.loc 1 2188 13 view .LVU1210
 3821 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3822              	.LVL310:
2189:src/keys.c    **** 			// Monadic conversion routine
 3823              		.loc 1 2189 3 is_stmt 1 view .LVU1211
2189:src/keys.c    **** 			// Monadic conversion routine
 3824              		.loc 1 2189 6 is_stmt 0 view .LVU1212
 3825 00a0 5728     		cmp	r0, #87
2191:src/keys.c    **** 		else
 3826              		.loc 1 2191 4 is_stmt 1 view .LVU1213
2191:src/keys.c    **** 		else
 3827              		.loc 1 2191 25 is_stmt 0 view .LVU1214
 3828 00a2 C6BF     		itte	gt
 3829 00a4 5838     		subgt	r0, r0, #88
 3830              	.LVL311:
2191:src/keys.c    **** 		else
 3831              		.loc 1 2191 18 view .LVU1215
 3832 00a6 40F40070 		orrgt	r0, r0, #512
2193:src/keys.c    **** 	}
 3833              		.loc 1 2193 4 is_stmt 1 view .LVU1216
2193:src/keys.c    **** 	}
 3834              		.loc 1 2193 11 is_stmt 0 view .LVU1217
 3835 00aa 40F40C40 		orrle	r0, r0, #35840
 3836 00ae 7047     		bx	lr
 3837              	.LVL312:
 3838              	.L426:
2193:src/keys.c    **** 	}
 3839              		.loc 1 2193 11 view .LVU1218
 3840              	.LBE395:
2179:src/keys.c    **** 		return CONST(n);
 3841              		.loc 1 2179 11 view .LVU1219
 3842 00b0 4FF42740 		mov	r0, #42752
 3843              	.LVL313:
2179:src/keys.c    **** 		return CONST(n);
 3844              		.loc 1 2179 11 view .LVU1220
 3845 00b4 7047     		bx	lr
 3846              	.LVL314:
 3847              	.L427:
2184:src/keys.c    **** 		return CONST_CMPLX(n);
 3848              		.loc 1 2184 11 view .LVU1221
 3849 00b6 4FF42840 		mov	r0, #43008
 3850              	.LVL315:
2184:src/keys.c    **** 		return CONST_CMPLX(n);
 3851              		.loc 1 2184 11 view .LVU1222
 3852 00ba 7047     		bx	lr
 3853              	.LVL316:
 3854              	.L439:
 3855              		.cfi_def_cfa_offset 4
 3856              		.cfi_offset 4, -4
2220:src/keys.c    **** 		m -= opcode_breaks[i];
 3857              		.loc 1 2220 4 is_stmt 1 view .LVU1223
2220:src/keys.c    **** 		m -= opcode_breaks[i];
 3858              		.loc 1 2220 29 is_stmt 0 view .LVU1224
 3859 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3860              	.LVL317:
ARM GAS  /tmp/ccsJYix0.s 			page 136


2220:src/keys.c    **** 		m -= opcode_breaks[i];
 3861              		.loc 1 2220 29 view .LVU1225
 3862 00c0 D4E7     		b	.L414
 3863              	.LVL318:
 3864              	.L429:
 3865              		.cfi_def_cfa_offset 0
 3866              		.cfi_restore 4
2209:src/keys.c    **** 
 3867              		.loc 1 2209 10 view .LVU1226
 3868 00c2 4FF48070 		mov	r0, #256
 3869              	.LVL319:
2224:src/keys.c    **** 
 3870              		.loc 1 2224 1 view .LVU1227
 3871 00c6 7047     		bx	lr
 3872              	.L442:
 3873              		.align	2
 3874              	.L441:
 3875 00c8 00000000 		.word	StateWhileOn
 3876 00cc 00000000 		.word	.LANCHOR6
 3877 00d0 01000000 		.word	.LANCHOR7+1
 3878 00d4 00000000 		.word	.LANCHOR4
 3879 00d8 00000000 		.word	.LANCHOR3
 3880 00dc 00000000 		.word	.LANCHOR5
 3881              		.cfi_endproc
 3882              	.LFE41:
 3884              		.section	.text.process_catalogue,"ax",%progbits
 3885              		.align	1
 3886              		.p2align 2,,3
 3887              		.syntax unified
 3888              		.thumb
 3889              		.thumb_func
 3890              		.fpu fpv4-sp-d16
 3892              	process_catalogue:
 3893              	.LVL320:
 3894              	.LFB43:
2238:src/keys.c    ****    int pos = State.catpos;
 3895              		.loc 1 2238 93 is_stmt 1 view -0
 3896              		.cfi_startproc
 3897              		@ args = 0, pretend = 0, frame = 16
 3898              		@ frame_needed = 0, uses_anonymous_args = 0
2238:src/keys.c    ****    int pos = State.catpos;
 3899              		.loc 1 2238 93 is_stmt 0 view .LVU1229
 3900 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3901              		.cfi_def_cfa_offset 36
 3902              		.cfi_offset 4, -36
 3903              		.cfi_offset 5, -32
 3904              		.cfi_offset 6, -28
 3905              		.cfi_offset 7, -24
 3906              		.cfi_offset 8, -20
 3907              		.cfi_offset 9, -16
 3908              		.cfi_offset 10, -12
 3909              		.cfi_offset 11, -8
 3910              		.cfi_offset 14, -4
2239:src/keys.c    ****    int ch;
 3911              		.loc 1 2239 14 view .LVU1230
 3912 0004 DFF8EC92 		ldr	r9, .L557+24
 3913              	.LBB396:
ARM GAS  /tmp/ccsJYix0.s 			page 137


 3914              	.LBB397:
2127:src/keys.c    **** #endif
 3915              		.loc 1 2127 31 view .LVU1231
 3916 0008 B44F     		ldr	r7, .L557
 3917              	.LBE397:
 3918              	.LBE396:
2239:src/keys.c    ****    int ch;
 3919              		.loc 1 2239 14 view .LVU1232
 3920 000a D9F80040 		ldr	r4, [r9]
 3921              	.LBB402:
 3922              	.LBB398:
2127:src/keys.c    **** #endif
 3923              		.loc 1 2127 31 view .LVU1233
 3924 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 3925              	.LBE398:
 3926              	.LBE402:
2239:src/keys.c    ****    int ch;
 3927              		.loc 1 2239 19 view .LVU1234
 3928 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3929              	.LBB403:
 3930              	.LBB399:
2127:src/keys.c    **** #endif
 3931              		.loc 1 2127 24 view .LVU1235
 3932 0016 B24B     		ldr	r3, .L557+4
 3933              	.LBE399:
 3934              	.LBE403:
2239:src/keys.c    ****    int ch;
 3935              		.loc 1 2239 4 is_stmt 1 view .LVU1236
2238:src/keys.c    ****    int pos = State.catpos;
 3936              		.loc 1 2238 93 is_stmt 0 view .LVU1237
 3937 0018 85B0     		sub	sp, sp, #20
 3938              		.cfi_def_cfa_offset 56
 3939              	.LBB404:
 3940              	.LBB400:
2127:src/keys.c    **** #endif
 3941              		.loc 1 2127 24 view .LVU1238
 3942 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3943              	.LBE400:
 3944              	.LBE404:
2238:src/keys.c    ****    int pos = State.catpos;
 3945              		.loc 1 2238 93 view .LVU1239
 3946 001e 1646     		mov	r6, r2
2239:src/keys.c    ****    int ch;
 3947              		.loc 1 2239 8 view .LVU1240
 3948 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3949              	.LVL321:
2240:src/keys.c    ****    const int ctmax = current_catalogue_max();
 3950              		.loc 1 2240 4 is_stmt 1 view .LVU1241
2241:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 3951              		.loc 1 2241 4 view .LVU1242
 3952              	.LBB405:
 3953              	.LBI396:
2093:src/keys.c    **** 	// A quick table of catalogue sizes
 3954              		.loc 1 2093 5 view .LVU1243
 3955              	.LBB401:
2096:src/keys.c    **** 	{
 3956              		.loc 1 2096 2 view .LVU1244
ARM GAS  /tmp/ccsJYix0.s 			page 138


2127:src/keys.c    **** #endif
 3957              		.loc 1 2127 2 view .LVU1245
2127:src/keys.c    **** #endif
 3958              		.loc 1 2127 2 is_stmt 0 view .LVU1246
 3959              	.LBE401:
 3960              	.LBE405:
2242:src/keys.c    **** 
 3961              		.loc 1 2242 4 is_stmt 1 view .LVU1247
2244:src/keys.c    ****      switch (c) {
 3962              		.loc 1 2244 4 view .LVU1248
2244:src/keys.c    ****      switch (c) {
 3963              		.loc 1 2244 7 is_stmt 0 view .LVU1249
 3964 0024 0029     		cmp	r1, #0
 3965 0026 65D0     		beq	.L542
2305:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3966              		.loc 1 2305 11 is_stmt 1 view .LVU1250
2305:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3967              		.loc 1 2305 14 is_stmt 0 view .LVU1251
 3968 0028 0129     		cmp	r1, #1
 3969 002a 00F0ED80 		beq	.L543
2339:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3970              		.loc 1 2339 11 is_stmt 1 view .LVU1252
2339:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3971              		.loc 1 2339 14 is_stmt 0 view .LVU1253
 3972 002e 0229     		cmp	r1, #2
 3973 0030 00F00B81 		beq	.L544
 3974              	.LVL322:
 3975              	.L479:
 3976              	.LBB406:
 3977              	.LBB407:
 445:src/keys.c    **** }
 3978              		.loc 1 445 2 is_stmt 1 view .LVU1254
 3979              	.LBB408:
 3980              	.LBI408:
 121:src/keys.c    **** {
 3981              		.loc 1 121 12 view .LVU1255
 3982              	.LBB409:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3983              		.loc 1 123 2 view .LVU1256
 133:src/keys.c    **** }
 3984              		.loc 1 133 2 view .LVU1257
 133:src/keys.c    **** }
 3985              		.loc 1 133 23 is_stmt 0 view .LVU1258
 3986 0034 AB4B     		ldr	r3, .L557+8
 3987              	.LBE409:
 3988              	.LBE408:
 445:src/keys.c    **** }
 3989              		.loc 1 445 49 view .LVU1259
 3990 0036 AC4A     		ldr	r2, .L557+12
 3991              	.LBB411:
 3992              	.LBB410:
 133:src/keys.c    **** }
 3993              		.loc 1 133 23 view .LVU1260
 3994 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3995              	.LBE410:
 3996              	.LBE411:
 445:src/keys.c    **** }
ARM GAS  /tmp/ccsJYix0.s 			page 139


 3997              		.loc 1 445 49 view .LVU1261
 3998 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3999 003e 02EB4303 		add	r3, r2, r3, lsl #1
 4000              	.LBE407:
 4001              	.LBE406:
 4002              	.LBB415:
 4003              	.LBB416:
 4004              	.LBB417:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4005              		.loc 1 96 16 view .LVU1262
 4006 0042 0025     		movs	r5, #0
 4007              	.LVL323:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4008              		.loc 1 96 16 view .LVU1263
 4009              	.LBE417:
 4010              	.LBE416:
 4011              	.LBE415:
2349:src/keys.c    ****    reset_shift();
 4012              		.loc 1 2349 9 view .LVU1264
 4013 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 4014              	.LVL324:
2349:src/keys.c    ****    reset_shift();
 4015              		.loc 1 2349 9 view .LVU1265
 4016 0046 FFF7FEFF 		bl	remap_chars
 4017              	.LVL325:
2349:src/keys.c    ****    reset_shift();
 4018              		.loc 1 2349 9 view .LVU1266
 4019 004a 0446     		mov	r4, r0
 4020              	.LVL326:
2350:src/keys.c    ****    if (ch == '\0')
 4021              		.loc 1 2350 4 is_stmt 1 view .LVU1267
 4022              	.LBB422:
 4023              	.LBI415:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 4024              		.loc 1 104 13 view .LVU1268
 4025              	.LBE422:
 105:src/keys.c    **** }
 4026              		.loc 1 105 2 view .LVU1269
 4027              	.LBB423:
 4028              	.LBB421:
 4029              	.LBI416:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 4030              		.loc 1 94 20 view .LVU1270
 4031              	.LBB420:
  95:src/keys.c    **** 	State2.shifts = shift;
 4032              		.loc 1 95 2 view .LVU1271
 4033              	.LBB418:
 4034              	.LBI418:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 4035              		.loc 1 86 13 view .LVU1272
 4036              	.LBB419:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4037              		.loc 1 87 2 view .LVU1273
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4038              		.loc 1 87 18 is_stmt 0 view .LVU1274
 4039 004c FFF7FEFF 		bl	shift_down
 4040              	.LVL327:
ARM GAS  /tmp/ccsJYix0.s 			page 140


  88:src/keys.c    **** }
 4041              		.loc 1 88 2 is_stmt 1 view .LVU1275
 4042              	.LBE419:
 4043              	.LBE418:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4044              		.loc 1 96 2 view .LVU1276
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4045              		.loc 1 96 16 is_stmt 0 view .LVU1277
 4046 0050 3D74     		strb	r5, [r7, #16]
  98:src/keys.c    **** }
 4047              		.loc 1 98 2 is_stmt 1 view .LVU1278
 4048              	.LVL328:
  98:src/keys.c    **** }
 4049              		.loc 1 98 2 is_stmt 0 view .LVU1279
 4050              	.LBE420:
 4051              	.LBE421:
 4052              	.LBE423:
2351:src/keys.c    ****      return STATE_UNFINISHED;
 4053              		.loc 1 2351 4 is_stmt 1 view .LVU1280
2351:src/keys.c    ****      return STATE_UNFINISHED;
 4054              		.loc 1 2351 7 is_stmt 0 view .LVU1281
 4055 0052 002C     		cmp	r4, #0
 4056 0054 6FD0     		beq	.L541
2353:src/keys.c    ****      // No multi character search in alpha catalogues
 4057              		.loc 1 2353 4 is_stmt 1 view .LVU1282
2353:src/keys.c    ****      // No multi character search in alpha catalogues
 4058              		.loc 1 2353 7 is_stmt 0 view .LVU1283
 4059 0056 AAF10B0A 		sub	r10, r10, #11
 4060              	.LVL329:
2353:src/keys.c    ****      // No multi character search in alpha catalogues
 4061              		.loc 1 2353 7 view .LVU1284
 4062 005a BAF1040F 		cmp	r10, #4
 4063 005e 40F2CB80 		bls	.L493
2357:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4064              		.loc 1 2357 4 is_stmt 1 view .LVU1285
2357:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4065              		.loc 1 2357 8 is_stmt 0 view .LVU1286
 4066 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2357:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4067              		.loc 1 2357 7 view .LVU1287
 4068 0064 092D     		cmp	r5, #9
 4069 0066 40F2C780 		bls	.L493
 4070              	.LVL330:
 4071              	.L461:
2362:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 4072              		.loc 1 2362 4 is_stmt 1 view .LVU1288
2362:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 4073              		.loc 1 2362 27 is_stmt 0 view .LVU1289
 4074 006a 7B19     		adds	r3, r7, r5
 4075 006c 0025     		movs	r5, #0
 4076 006e 83F82050 		strb	r5, [r3, #32]
2363:src/keys.c    ****      char buf[16];
 4077              		.loc 1 2363 4 is_stmt 1 view .LVU1290
 4078              	.LVL331:
2363:src/keys.c    ****      char buf[16];
 4079              		.loc 1 2363 18 view .LVU1291
2363:src/keys.c    ****      char buf[16];
ARM GAS  /tmp/ccsJYix0.s 			page 141


 4080              		.loc 1 2363 4 is_stmt 0 view .LVU1292
 4081 0072 B8F1000F 		cmp	r8, #0
 4082 0076 00F0D780 		beq	.L539
 4083              	.LVL332:
 4084              	.L481:
 4085              	.LBB424:
2364:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 4086              		.loc 1 2364 6 is_stmt 1 view .LVU1293
2365:src/keys.c    ****      int i;
 4087              		.loc 1 2365 6 view .LVU1294
2365:src/keys.c    ****      int i;
 4088              		.loc 1 2365 24 is_stmt 0 view .LVU1295
 4089 007a 2846     		mov	r0, r5
 4090 007c FFF7FEFF 		bl	current_catalogue
 4091              	.LVL333:
 4092 0080 6946     		mov	r1, sp
 4093 0082 FFF7FEFF 		bl	catcmd
 4094              	.LVL334:
 4095 0086 0446     		mov	r4, r0
 4096              	.LVL335:
2366:src/keys.c    **** 
 4097              		.loc 1 2366 6 is_stmt 1 view .LVU1296
2368:src/keys.c    ****        cmd++;
 4098              		.loc 1 2368 6 view .LVU1297
2369:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 4099              		.loc 1 2369 8 view .LVU1298
2368:src/keys.c    ****        cmd++;
 4100              		.loc 1 2368 10 is_stmt 0 view .LVU1299
 4101 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4102              	.LVL336:
2368:src/keys.c    ****        cmd++;
 4103              		.loc 1 2368 9 view .LVU1300
 4104 008a 1428     		cmp	r0, #20
 4105 008c 04BF     		itt	eq
 4106 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2369:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 4107              		.loc 1 2369 11 view .LVU1301
 4108 0090 0134     		addeq	r4, r4, #1
 4109              	.LVL337:
2370:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4110              		.loc 1 2370 6 is_stmt 1 view .LVU1302
2370:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4111              		.loc 1 2370 16 view .LVU1303
2370:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4112              		.loc 1 2370 6 is_stmt 0 view .LVU1304
 4113 0092 0028     		cmp	r0, #0
 4114 0094 00F0BF80 		beq	.L483
 4115 0098 DFF85CB2 		ldr	fp, .L557+28
 4116 009c C4F1010A 		rsb	r10, r4, #1
 4117 00a0 06E0     		b	.L486
 4118              	.LVL338:
 4119              	.L546:
 4120              	.LBB425:
2375:src/keys.c    **** 	 break;
 4121              		.loc 1 2375 16 view .LVU1305
 4122 00a2 C0F2BA80 		blt	.L485
 4123              	.LBE425:
ARM GAS  /tmp/ccsJYix0.s 			page 142


2370:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4124              		.loc 1 2370 19 discriminator 2 view .LVU1306
 4125 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 4126              	.LVL339:
2370:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4127              		.loc 1 2370 6 discriminator 2 view .LVU1307
 4128 00aa 0028     		cmp	r0, #0
 4129 00ac 00F0BF80 		beq	.L545
 4130              	.LVL340:
 4131              	.L486:
 4132              	.LBB426:
2371:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4133              		.loc 1 2371 8 is_stmt 1 view .LVU1308
2371:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4134              		.loc 1 2371 22 is_stmt 0 view .LVU1309
 4135 00b0 FFF7FEFF 		bl	remap_chars
 4136              	.LVL341:
2375:src/keys.c    **** 	 break;
 4137              		.loc 1 2375 13 is_stmt 1 view .LVU1310
 4138              	.LBE426:
2370:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4139              		.loc 1 2370 32 view .LVU1311
 4140              	.LBB427:
2372:src/keys.c    ****        if (c > cl)
 4141              		.loc 1 2372 8 view .LVU1312
2372:src/keys.c    ****        if (c > cl)
 4142              		.loc 1 2372 46 is_stmt 0 view .LVU1313
 4143 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4144              	.LVL342:
2373:src/keys.c    **** 	 goto set_pos;
 4145              		.loc 1 2373 8 is_stmt 1 view .LVU1314
2373:src/keys.c    **** 	 goto set_pos;
 4146              		.loc 1 2373 11 is_stmt 0 view .LVU1315
 4147 00b8 9842     		cmp	r0, r3
 4148 00ba 0AEB0402 		add	r2, r10, r4
 4149              	.LVL343:
2373:src/keys.c    **** 	 goto set_pos;
 4150              		.loc 1 2373 11 view .LVU1316
 4151              	.LBE427:
2370:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4152              		.loc 1 2370 16 is_stmt 1 view .LVU1317
 4153              	.LBB428:
2373:src/keys.c    **** 	 goto set_pos;
 4154              		.loc 1 2373 11 is_stmt 0 view .LVU1318
 4155 00be F0DD     		ble	.L546
 4156              	.LVL344:
 4157              	.L484:
2373:src/keys.c    **** 	 goto set_pos;
 4158              		.loc 1 2373 11 view .LVU1319
 4159 00c0 D9F80040 		ldr	r4, [r9]
 4160              	.L464:
2373:src/keys.c    **** 	 goto set_pos;
 4161              		.loc 1 2373 11 view .LVU1320
 4162              	.LBE428:
 4163              	.LBE424:
2384:src/keys.c    ****      --pos;
 4164              		.loc 1 2384 10 is_stmt 1 view .LVU1321
ARM GAS  /tmp/ccsJYix0.s 			page 143


 4165 00c4 002E     		cmp	r6, #0
 4166 00c6 00F0B680 		beq	.L468
2384:src/keys.c    ****      --pos;
 4167              		.loc 1 2384 20 is_stmt 0 view .LVU1322
 4168 00ca 4DB1     		cbz	r5, .L462
 4169              	.LVL345:
 4170              	.L540:
2384:src/keys.c    ****      --pos;
 4171              		.loc 1 2384 20 view .LVU1323
 4172 00cc 2846     		mov	r0, r5
 4173 00ce FFF7FEFF 		bl	current_catalogue
 4174              	.LVL346:
2385:src/keys.c    ****    State.catpos = pos;
 4175              		.loc 1 2385 6 is_stmt 1 view .LVU1324
2384:src/keys.c    ****      --pos;
 4176              		.loc 1 2384 10 view .LVU1325
 4177              	.LBB429:
 4178              	.LBI429:
2231:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4179              		.loc 1 2231 12 view .LVU1326
 4180              	.LBB430:
2232:src/keys.c    **** }
 4181              		.loc 1 2232 2 view .LVU1327
2232:src/keys.c    **** }
 4182              		.loc 1 2232 33 is_stmt 0 view .LVU1328
 4183 00d2 00F0F000 		and	r0, r0, #240
 4184              	.LBE430:
 4185              	.LBE429:
2384:src/keys.c    ****      --pos;
 4186              		.loc 1 2384 27 view .LVU1329
 4187 00d6 F028     		cmp	r0, #240
 4188 00d8 40F0AD80 		bne	.L468
2384:src/keys.c    ****      --pos;
 4189              		.loc 1 2384 20 view .LVU1330
 4190 00dc 013D     		subs	r5, r5, #1
 4191              	.LVL347:
2384:src/keys.c    ****      --pos;
 4192              		.loc 1 2384 20 view .LVU1331
 4193 00de F5D1     		bne	.L540
 4194              	.LVL348:
 4195              	.L462:
2386:src/keys.c    ****    return STATE_UNFINISHED;
 4196              		.loc 1 2386 4 is_stmt 1 view .LVU1332
2386:src/keys.c    ****    return STATE_UNFINISHED;
 4197              		.loc 1 2386 17 is_stmt 0 view .LVU1333
 4198 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 4199 00e4 65F34B13 		bfi	r3, r5, #5, #7
 4200 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2387:src/keys.c    ****  }
 4201              		.loc 1 2387 4 is_stmt 1 view .LVU1334
2387:src/keys.c    ****  }
 4202              		.loc 1 2387 11 is_stmt 0 view .LVU1335
 4203 00ec 3320     		movs	r0, #51
 4204              	.L553:
2388:src/keys.c    **** 
 4205              		.loc 1 2388 2 view .LVU1336
 4206 00ee 05B0     		add	sp, sp, #20
ARM GAS  /tmp/ccsJYix0.s 			page 144


 4207              		.cfi_remember_state
 4208              		.cfi_def_cfa_offset 36
 4209              		@ sp needed
 4210 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4211              	.LVL349:
 4212              	.L542:
 4213              		.cfi_restore_state
2245:src/keys.c    **** #ifdef DM42
 4214              		.loc 1 2245 6 is_stmt 1 view .LVU1337
 4215 00f4 431F     		subs	r3, r0, #5
 4216 00f6 1F2B     		cmp	r3, #31
 4217 00f8 2FD8     		bhi	.L445
 4218 00fa DFE803F0 		tbb	[pc, r3]
 4219              	.LVL350:
 4220              	.L447:
 4221 00fe 35       		.byte	(.L451-.L447)/2
 4222 00ff 2E       		.byte	(.L445-.L447)/2
 4223 0100 2E       		.byte	(.L445-.L447)/2
 4224 0101 2E       		.byte	(.L445-.L447)/2
 4225 0102 2E       		.byte	(.L445-.L447)/2
 4226 0103 2E       		.byte	(.L445-.L447)/2
 4227 0104 2E       		.byte	(.L445-.L447)/2
 4228 0105 35       		.byte	(.L451-.L447)/2
 4229 0106 2E       		.byte	(.L445-.L447)/2
 4230 0107 2E       		.byte	(.L445-.L447)/2
 4231 0108 2E       		.byte	(.L445-.L447)/2
 4232 0109 20       		.byte	(.L450-.L447)/2
 4233 010a 2E       		.byte	(.L445-.L447)/2
 4234 010b 64       		.byte	(.L449-.L447)/2
 4235 010c 2E       		.byte	(.L445-.L447)/2
 4236 010d 2E       		.byte	(.L445-.L447)/2
 4237 010e 2E       		.byte	(.L445-.L447)/2
 4238 010f 2E       		.byte	(.L445-.L447)/2
 4239 0110 2E       		.byte	(.L445-.L447)/2
 4240 0111 6B       		.byte	(.L448-.L447)/2
 4241 0112 2E       		.byte	(.L445-.L447)/2
 4242 0113 2E       		.byte	(.L445-.L447)/2
 4243 0114 2E       		.byte	(.L445-.L447)/2
 4244 0115 2E       		.byte	(.L445-.L447)/2
 4245 0116 2E       		.byte	(.L445-.L447)/2
 4246 0117 2E       		.byte	(.L445-.L447)/2
 4247 0118 2E       		.byte	(.L445-.L447)/2
 4248 0119 2E       		.byte	(.L445-.L447)/2
 4249 011a 2E       		.byte	(.L445-.L447)/2
 4250 011b 2E       		.byte	(.L445-.L447)/2
 4251 011c 2E       		.byte	(.L445-.L447)/2
 4252 011d 27       		.byte	(.L446-.L447)/2
 4253              		.p2align 1
 4254              	.L552:
2334:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4255              		.loc 1 2334 42 is_stmt 0 discriminator 1 view .LVU1338
 4256 011e 734A     		ldr	r2, .L557+16
 4257              	.LVL351:
2334:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4258              		.loc 1 2334 42 discriminator 1 view .LVU1339
 4259 0120 7B69     		ldr	r3, [r7, #20]
2334:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
ARM GAS  /tmp/ccsJYix0.s 			page 145


 4260              		.loc 1 2334 24 discriminator 1 view .LVU1340
 4261 0122 1A42     		tst	r2, r3
 4262 0124 75D0     		beq	.L476
2336:src/keys.c    ****        return STATE_UNFINISHED;
 4263              		.loc 1 2336 8 is_stmt 1 view .LVU1341
2336:src/keys.c    ****        return STATE_UNFINISHED;
 4264              		.loc 1 2336 38 is_stmt 0 view .LVU1342
 4265 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4266 0128 C3F30012 		ubfx	r2, r3, #4, #1
2336:src/keys.c    ****        return STATE_UNFINISHED;
 4267              		.loc 1 2336 30 view .LVU1343
 4268 012c C2F10102 		rsb	r2, r2, #1
2336:src/keys.c    ****        return STATE_UNFINISHED;
 4269              		.loc 1 2336 26 view .LVU1344
 4270 0130 62F30413 		bfi	r3, r2, #4, #1
 4271 0134 BB75     		strb	r3, [r7, #22]
 4272              	.LVL352:
 4273              	.L541:
2337:src/keys.c    ****      }
 4274              		.loc 1 2337 8 is_stmt 1 view .LVU1345
2337:src/keys.c    ****      }
 4275              		.loc 1 2337 15 is_stmt 0 view .LVU1346
 4276 0136 3320     		movs	r0, #51
 4277              	.L443:
2388:src/keys.c    **** 
 4278              		.loc 1 2388 2 view .LVU1347
 4279 0138 05B0     		add	sp, sp, #20
 4280              		.cfi_remember_state
 4281              		.cfi_def_cfa_offset 36
 4282              		@ sp needed
 4283 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4284              	.LVL353:
 4285              	.L450:
 4286              		.cfi_restore_state
2274:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4287              		.loc 1 2274 8 is_stmt 1 view .LVU1348
2274:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4288              		.loc 1 2274 11 is_stmt 0 view .LVU1349
 4289 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 4290 0140 23B1     		cbz	r3, .L446
2274:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4291              		.loc 1 2274 33 discriminator 1 view .LVU1350
 4292 0142 FFF7FEFF 		bl	keyticks
 4293              	.LVL354:
2274:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4294              		.loc 1 2274 30 discriminator 1 view .LVU1351
 4295 0146 1D28     		cmp	r0, #29
 4296 0148 40F39580 		ble	.L547
 4297              	.L446:
2284:src/keys.c    ****        return STATE_UNFINISHED;
 4298              		.loc 1 2284 8 is_stmt 1 view .LVU1352
 4299 014c 0020     		movs	r0, #0
 4300 014e FFF7FEFF 		bl	init_cat
 4301              	.LVL355:
2285:src/keys.c    **** 
 4302              		.loc 1 2285 8 view .LVU1353
2285:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 146


 4303              		.loc 1 2285 15 is_stmt 0 view .LVU1354
 4304 0152 3320     		movs	r0, #51
2388:src/keys.c    **** 
 4305              		.loc 1 2388 2 view .LVU1355
 4306 0154 05B0     		add	sp, sp, #20
 4307              		.cfi_remember_state
 4308              		.cfi_def_cfa_offset 36
 4309              		@ sp needed
 4310 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4311              	.LVL356:
 4312              	.L445:
 4313              		.cfi_restore_state
 4314              	.LBB431:
 4315              	.LBI406:
 389:src/keys.c    **** {
 4316              		.loc 1 389 12 is_stmt 1 discriminator 4 view .LVU1356
 4317              	.LBB412:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4318              		.loc 1 391 2 discriminator 4 view .LVU1357
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4319              		.loc 1 439 2 discriminator 4 view .LVU1358
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4320              		.loc 1 439 6 is_stmt 0 discriminator 4 view .LVU1359
 4321 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4322              		.loc 1 439 5 discriminator 4 view .LVU1360
 4323 015c 13F0100F 		tst	r3, #16
 4324 0160 14BF     		ite	ne
 4325 0162 0421     		movne	r1, #4
 4326              	.LVL357:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4327              		.loc 1 439 5 discriminator 4 view .LVU1361
 4328 0164 0021     		moveq	r1, #0
 4329 0166 65E7     		b	.L479
 4330              	.LVL358:
 4331              	.L451:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4332              		.loc 1 439 5 discriminator 4 view .LVU1362
 4333              	.LBE412:
 4334              	.LBE431:
2252:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4335              		.loc 1 2252 8 is_stmt 1 view .LVU1363
2252:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4336              		.loc 1 2252 11 is_stmt 0 view .LVU1364
 4337 0168 4545     		cmp	r5, r8
 4338 016a EFDA     		bge	.L446
 4339 016c 2846     		mov	r0, r5
 4340              	.LVL359:
2252:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4341              		.loc 1 2252 24 discriminator 1 view .LVU1365
 4342 016e 002E     		cmp	r6, #0
 4343 0170 00F08D80 		beq	.L548
 4344              	.LVL360:
 4345              	.LBB432:
 4346              	.LBI432:
2231:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4347              		.loc 1 2231 12 is_stmt 1 view .LVU1366
ARM GAS  /tmp/ccsJYix0.s 			page 147


 4348              	.LBB433:
2232:src/keys.c    **** }
 4349              		.loc 1 2232 2 view .LVU1367
2232:src/keys.c    **** }
 4350              		.loc 1 2232 10 is_stmt 0 view .LVU1368
 4351 0174 FFF7FEFF 		bl	current_catalogue
 4352              	.LVL361:
2232:src/keys.c    **** }
 4353              		.loc 1 2232 33 view .LVU1369
 4354 0178 00F0F003 		and	r3, r0, #240
 4355              	.LBE433:
 4356              	.LBE432:
2252:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4357              		.loc 1 2252 27 view .LVU1370
 4358 017c F02B     		cmp	r3, #240
 4359              	.LBB435:
 4360              	.LBB434:
2232:src/keys.c    **** }
 4361              		.loc 1 2232 10 view .LVU1371
 4362 017e 0446     		mov	r4, r0
 4363              	.LBE434:
 4364              	.LBE435:
2252:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4365              		.loc 1 2252 27 view .LVU1372
 4366 0180 E4D0     		beq	.L446
 4367              	.L454:
 4368              	.LBB436:
2253:src/keys.c    **** 
 4369              		.loc 1 2253 3 is_stmt 1 view .LVU1373
2255:src/keys.c    **** 
 4370              		.loc 1 2255 3 view .LVU1374
 4371 0182 0020     		movs	r0, #0
 4372 0184 FFF7FEFF 		bl	init_cat
 4373              	.LVL362:
2257:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4374              		.loc 1 2257 3 view .LVU1375
2257:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4375              		.loc 1 2257 6 is_stmt 0 view .LVU1376
 4376 0188 14F47043 		ands	r3, r4, #61440
 4377 018c 00F08C80 		beq	.L455
2257:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4378              		.loc 1 2257 7 discriminator 1 view .LVU1377
 4379 0190 B3F5704F 		cmp	r3, #61440
 4380 0194 00F08880 		beq	.L455
 4381              	.LBB437:
2258:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4382              		.loc 1 2258 5 is_stmt 1 view .LVU1378
2258:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4383              		.loc 1 2258 31 is_stmt 0 view .LVU1379
 4384 0198 C4F30723 		ubfx	r3, r4, #8, #8
 4385 019c A3F12005 		sub	r5, r3, #32
 4386              	.LVL363:
2258:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4387              		.loc 1 2258 31 view .LVU1380
 4388 01a0 EDB2     		uxtb	r5, r5
 4389              	.LVL364:
2259:src/keys.c    **** 	     return op;
ARM GAS  /tmp/ccsJYix0.s 			page 148


 4390              		.loc 1 2259 5 is_stmt 1 view .LVU1381
2259:src/keys.c    **** 	     return op;
 4391              		.loc 1 2259 8 is_stmt 0 view .LVU1382
 4392 01a2 012D     		cmp	r5, #1
 4393 01a4 40F28980 		bls	.L456
2259:src/keys.c    **** 	     return op;
 4394              		.loc 1 2259 56 discriminator 1 view .LVU1383
 4395 01a8 6C2D     		cmp	r5, #108
 4396 01aa 00F08680 		beq	.L456
2259:src/keys.c    **** 	     return op;
 4397              		.loc 1 2259 77 discriminator 2 view .LVU1384
 4398 01ae 242D     		cmp	r5, #36
 4399 01b0 00F08380 		beq	.L456
2261:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4400              		.loc 1 2261 5 is_stmt 1 view .LVU1385
2261:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4401              		.loc 1 2261 30 is_stmt 0 view .LVU1386
 4402 01b4 A5F12D02 		sub	r2, r5, #45
2261:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4403              		.loc 1 2261 8 view .LVU1387
 4404 01b8 062A     		cmp	r2, #6
 4405 01ba 00F29F80 		bhi	.L459
2262:src/keys.c    **** 	   else
 4406              		.loc 1 2262 7 is_stmt 1 view .LVU1388
2262:src/keys.c    **** 	   else
 4407              		.loc 1 2262 28 is_stmt 0 view .LVU1389
 4408 01be 4D3B     		subs	r3, r3, #77
2262:src/keys.c    **** 	   else
 4409              		.loc 1 2262 19 view .LVU1390
 4410 01c0 FB73     		strb	r3, [r7, #15]
 4411              	.LBE437:
 4412              	.LBE436:
2271:src/keys.c    **** 
 4413              		.loc 1 2271 15 view .LVU1391
 4414 01c2 3320     		movs	r0, #51
 4415              	.LBB447:
 4416              	.LBB440:
 4417 01c4 B8E7     		b	.L443
 4418              	.LVL365:
 4419              	.L449:
2271:src/keys.c    **** 
 4420              		.loc 1 2271 15 view .LVU1392
 4421              	.LBE440:
 4422              	.LBE447:
2288:src/keys.c    ****        if (pos == 0)
 4423              		.loc 1 2288 8 is_stmt 1 view .LVU1393
2288:src/keys.c    ****        if (pos == 0)
 4424              		.loc 1 2288 22 is_stmt 0 view .LVU1394
 4425 01c6 0023     		movs	r3, #0
 4426 01c8 3B77     		strb	r3, [r7, #28]
2289:src/keys.c    **** 	 goto set_max;
 4427              		.loc 1 2289 8 is_stmt 1 view .LVU1395
2289:src/keys.c    **** 	 goto set_max;
 4428              		.loc 1 2289 11 is_stmt 0 view .LVU1396
 4429 01ca 002D     		cmp	r5, #0
 4430 01cc 5DD1     		bne	.L549
 4431              	.LVL366:
ARM GAS  /tmp/ccsJYix0.s 			page 149


 4432              	.L463:
2382:src/keys.c    ****  set_pos:
 4433              		.loc 1 2382 4 is_stmt 1 view .LVU1397
2382:src/keys.c    ****  set_pos:
 4434              		.loc 1 2382 8 is_stmt 0 view .LVU1398
 4435 01ce 08F1FF35 		add	r5, r8, #-1
 4436              	.LVL367:
2382:src/keys.c    ****  set_pos:
 4437              		.loc 1 2382 8 view .LVU1399
 4438 01d2 77E7     		b	.L464
 4439              	.LVL368:
 4440              	.L448:
2296:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4441              		.loc 1 2296 8 is_stmt 1 view .LVU1400
2296:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4442              		.loc 1 2296 22 is_stmt 0 view .LVU1401
 4443 01d4 0023     		movs	r3, #0
 4444 01d6 3B77     		strb	r3, [r7, #28]
2297:src/keys.c    ****        if (pos >= ctmax)
 4445              		.loc 1 2297 8 is_stmt 1 view .LVU1402
2297:src/keys.c    ****        if (pos >= ctmax)
 4446              		.loc 1 2297 14 is_stmt 0 view .LVU1403
 4447 01d8 06E0     		b	.L467
 4448              	.LVL369:
 4449              	.L550:
2297:src/keys.c    ****        if (pos >= ctmax)
 4450              		.loc 1 2297 29 discriminator 1 view .LVU1404
 4451 01da 66B3     		cbz	r6, .L468
 4452              	.LBB448:
 4453              	.LBB449:
2232:src/keys.c    **** }
 4454              		.loc 1 2232 10 view .LVU1405
 4455 01dc FFF7FEFF 		bl	current_catalogue
 4456              	.LVL370:
2232:src/keys.c    **** }
 4457              		.loc 1 2232 33 view .LVU1406
 4458 01e0 00F0F000 		and	r0, r0, #240
 4459              	.LBE449:
 4460              	.LBE448:
2297:src/keys.c    ****        if (pos >= ctmax)
 4461              		.loc 1 2297 41 view .LVU1407
 4462 01e4 F028     		cmp	r0, #240
 4463 01e6 26D1     		bne	.L468
 4464              	.L467:
2297:src/keys.c    ****        if (pos >= ctmax)
 4465              		.loc 1 2297 65 is_stmt 1 discriminator 3 view .LVU1408
2297:src/keys.c    ****        if (pos >= ctmax)
 4466              		.loc 1 2297 14 discriminator 3 view .LVU1409
 4467 01e8 0135     		adds	r5, r5, #1
 4468              	.LVL371:
 4469              	.LBB452:
 4470              	.LBI448:
2231:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4471              		.loc 1 2231 12 discriminator 3 view .LVU1410
 4472              	.LBB450:
2232:src/keys.c    **** }
 4473              		.loc 1 2232 2 discriminator 3 view .LVU1411
ARM GAS  /tmp/ccsJYix0.s 			page 150


 4474              	.LBE450:
 4475              	.LBE452:
2297:src/keys.c    ****        if (pos >= ctmax)
 4476              		.loc 1 2297 14 is_stmt 0 discriminator 3 view .LVU1412
 4477 01ea A845     		cmp	r8, r5
 4478              	.LBB453:
 4479              	.LBB451:
2232:src/keys.c    **** }
 4480              		.loc 1 2232 10 discriminator 3 view .LVU1413
 4481 01ec 2846     		mov	r0, r5
 4482              	.LBE451:
 4483              	.LBE453:
2297:src/keys.c    ****        if (pos >= ctmax)
 4484              		.loc 1 2297 14 discriminator 3 view .LVU1414
 4485 01ee F4DC     		bgt	.L550
 4486              	.LVL372:
2384:src/keys.c    ****      --pos;
 4487              		.loc 1 2384 10 is_stmt 1 view .LVU1415
2299:src/keys.c    ****        goto set_pos;
 4488              		.loc 1 2299 7 is_stmt 0 view .LVU1416
 4489 01f0 3546     		mov	r5, r6
 4490              	.LVL373:
2384:src/keys.c    ****      --pos;
 4491              		.loc 1 2384 10 view .LVU1417
 4492 01f2 06B3     		cbz	r6, .L468
 4493              	.LVL374:
2384:src/keys.c    ****      --pos;
 4494              		.loc 1 2384 10 view .LVU1418
 4495 01f4 0025     		movs	r5, #0
 4496              	.LVL375:
2384:src/keys.c    ****      --pos;
 4497              		.loc 1 2384 10 view .LVU1419
 4498 01f6 73E7     		b	.L462
 4499              	.LVL376:
 4500              	.L493:
2357:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4501              		.loc 1 2357 8 view .LVU1420
 4502 01f8 2B46     		mov	r3, r5
2358:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4503              		.loc 1 2358 6 is_stmt 1 view .LVU1421
2358:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4504              		.loc 1 2358 31 is_stmt 0 view .LVU1422
 4505 01fa 3B44     		add	r3, r3, r7
2358:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4506              		.loc 1 2358 27 view .LVU1423
 4507 01fc 0135     		adds	r5, r5, #1
 4508 01fe EDB2     		uxtb	r5, r5
 4509 0200 3D77     		strb	r5, [r7, #28]
2358:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4510              		.loc 1 2358 31 view .LVU1424
 4511 0202 83F82040 		strb	r4, [r3, #32]
 4512 0206 30E7     		b	.L461
 4513              	.LVL377:
 4514              	.L543:
2306:src/keys.c    ****        /*
 4515              		.loc 1 2306 6 is_stmt 1 view .LVU1425
2306:src/keys.c    ****        /*
ARM GAS  /tmp/ccsJYix0.s 			page 151


 4516              		.loc 1 2306 9 is_stmt 0 view .LVU1426
 4517 0208 BAF1120F 		cmp	r10, #18
 4518 020c 21D0     		beq	.L551
 4519              	.L470:
2334:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4520              		.loc 1 2334 11 is_stmt 1 view .LVU1427
2334:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4521              		.loc 1 2334 14 is_stmt 0 view .LVU1428
 4522 020e 2428     		cmp	r0, #36
 4523 0210 85D0     		beq	.L552
 4524              	.LVL378:
 4525              	.L476:
2349:src/keys.c    ****    reset_shift();
 4526              		.loc 1 2349 4 is_stmt 1 view .LVU1429
 4527              	.LBB454:
 389:src/keys.c    **** {
 4528              		.loc 1 389 12 view .LVU1430
 4529              	.LBB413:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4530              		.loc 1 391 2 view .LVU1431
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4531              		.loc 1 439 2 view .LVU1432
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4532              		.loc 1 439 5 is_stmt 0 view .LVU1433
 4533 0212 0121     		movs	r1, #1
 4534              	.LVL379:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4535              		.loc 1 439 5 view .LVU1434
 4536 0214 0EE7     		b	.L479
 4537              	.LVL380:
 4538              	.L483:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4539              		.loc 1 439 5 view .LVU1435
 4540 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 4541              	.LVL381:
 4542              	.L485:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4543              		.loc 1 439 5 view .LVU1436
 4544              	.LBE413:
 4545              	.LBE454:
 4546              	.LBB455:
2378:src/keys.c    ****        goto set_pos;
 4547              		.loc 1 2378 6 is_stmt 1 view .LVU1437
2378:src/keys.c    ****        goto set_pos;
 4548              		.loc 1 2378 9 is_stmt 0 view .LVU1438
 4549 021a 002B     		cmp	r3, #0
 4550 021c 3FF450AF 		beq	.L484
 4551              	.LBE455:
2363:src/keys.c    ****      char buf[16];
 4552              		.loc 1 2363 31 is_stmt 1 view .LVU1439
 4553 0220 0135     		adds	r5, r5, #1
 4554              	.LVL382:
2363:src/keys.c    ****      char buf[16];
 4555              		.loc 1 2363 18 view .LVU1440
2363:src/keys.c    ****      char buf[16];
 4556              		.loc 1 2363 4 is_stmt 0 view .LVU1441
 4557 0222 A845     		cmp	r8, r5
ARM GAS  /tmp/ccsJYix0.s 			page 152


 4558 0224 7FF429AF 		bne	.L481
 4559              	.LVL383:
 4560              	.L539:
2363:src/keys.c    ****      char buf[16];
 4561              		.loc 1 2363 4 view .LVU1442
 4562 0228 D9F80040 		ldr	r4, [r9]
 4563 022c CFE7     		b	.L463
 4564              	.LVL384:
 4565              	.L545:
2363:src/keys.c    ****      char buf[16];
 4566              		.loc 1 2363 4 view .LVU1443
 4567 022e 3A44     		add	r2, r2, r7
 4568              	.LVL385:
2363:src/keys.c    ****      char buf[16];
 4569              		.loc 1 2363 4 view .LVU1444
 4570 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4571              	.LVL386:
2363:src/keys.c    ****      char buf[16];
 4572              		.loc 1 2363 4 view .LVU1445
 4573 0234 F1E7     		b	.L485
 4574              	.LVL387:
 4575              	.L468:
2386:src/keys.c    ****    return STATE_UNFINISHED;
 4576              		.loc 1 2386 17 view .LVU1446
 4577 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 4578 023a 05F07F05 		and	r5, r5, #127
 4579              	.LVL388:
2386:src/keys.c    ****    return STATE_UNFINISHED;
 4580              		.loc 1 2386 4 is_stmt 1 view .LVU1447
2386:src/keys.c    ****    return STATE_UNFINISHED;
 4581              		.loc 1 2386 17 is_stmt 0 view .LVU1448
 4582 023e 65F34B13 		bfi	r3, r5, #5, #7
 4583 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2387:src/keys.c    ****  }
 4584              		.loc 1 2387 4 is_stmt 1 view .LVU1449
2387:src/keys.c    ****  }
 4585              		.loc 1 2387 11 is_stmt 0 view .LVU1450
 4586 0246 3320     		movs	r0, #51
 4587 0248 51E7     		b	.L553
 4588              	.LVL389:
 4589              	.L544:
2340:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4590              		.loc 1 2340 6 is_stmt 1 view .LVU1451
2340:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4591              		.loc 1 2340 9 is_stmt 0 view .LVU1452
 4592 024a 1028     		cmp	r0, #16
 4593 024c 23D0     		beq	.L554
 4594              	.L478:
2349:src/keys.c    ****    reset_shift();
 4595              		.loc 1 2349 4 is_stmt 1 view .LVU1453
 4596              	.LVL390:
 4597              	.LBB456:
 389:src/keys.c    **** {
 4598              		.loc 1 389 12 view .LVU1454
 4599              	.LBB414:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4600              		.loc 1 391 2 view .LVU1455
ARM GAS  /tmp/ccsJYix0.s 			page 153


 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4601              		.loc 1 439 2 view .LVU1456
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4602              		.loc 1 439 5 is_stmt 0 view .LVU1457
 4603 024e 0521     		movs	r1, #5
 4604              	.LVL391:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4605              		.loc 1 439 5 view .LVU1458
 4606 0250 F0E6     		b	.L479
 4607              	.LVL392:
 4608              	.L551:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4609              		.loc 1 439 5 view .LVU1459
 4610              	.LBE414:
 4611              	.LBE456:
2306:src/keys.c    ****        /*
 4612              		.loc 1 2306 32 discriminator 1 view .LVU1460
 4613 0252 0128     		cmp	r0, #1
 4614 0254 DBD1     		bne	.L470
 4615              	.LBB457:
2315:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4616              		.loc 1 2315 8 is_stmt 1 view .LVU1461
2323:src/keys.c    ****        int i;
 4617              		.loc 1 2323 8 view .LVU1462
2323:src/keys.c    ****        int i;
 4618              		.loc 1 2323 26 is_stmt 0 view .LVU1463
 4619 0256 2846     		mov	r0, r5
 4620              	.LVL393:
2323:src/keys.c    ****        int i;
 4621              		.loc 1 2323 26 view .LVU1464
 4622 0258 FFF7FEFF 		bl	current_catalogue
 4623              	.LVL394:
2323:src/keys.c    ****        int i;
 4624              		.loc 1 2323 26 view .LVU1465
 4625 025c 0446     		mov	r4, r0
 4626              	.LVL395:
2324:src/keys.c    **** 
 4627              		.loc 1 2324 8 is_stmt 1 view .LVU1466
2326:src/keys.c    ****        if (isRARG(op))
 4628              		.loc 1 2326 8 view .LVU1467
 4629 025e 0020     		movs	r0, #0
 4630              	.LVL396:
2326:src/keys.c    ****        if (isRARG(op))
 4631              		.loc 1 2326 8 is_stmt 0 view .LVU1468
 4632 0260 FFF7FEFF 		bl	init_cat
 4633              	.LVL397:
2327:src/keys.c    **** 	 return op ^ 1;
 4634              		.loc 1 2327 8 is_stmt 1 view .LVU1469
2327:src/keys.c    **** 	 return op ^ 1;
 4635              		.loc 1 2327 11 is_stmt 0 view .LVU1470
 4636 0264 14F47043 		ands	r3, r4, #61440
 4637 0268 29D0     		beq	.L471
2327:src/keys.c    **** 	 return op ^ 1;
 4638              		.loc 1 2327 12 discriminator 1 view .LVU1471
 4639 026a B3F5704F 		cmp	r3, #61440
 4640 026e 26D0     		beq	.L471
2328:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
ARM GAS  /tmp/ccsJYix0.s 			page 154


 4641              		.loc 1 2328 3 is_stmt 1 view .LVU1472
2328:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4642              		.loc 1 2328 13 is_stmt 0 view .LVU1473
 4643 0270 84F00100 		eor	r0, r4, #1
 4644 0274 60E7     		b	.L443
 4645              	.LVL398:
 4646              	.L547:
2328:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4647              		.loc 1 2328 13 view .LVU1474
 4648              	.LBE457:
2275:src/keys.c    **** 	   goto search;
 4649              		.loc 1 2275 3 is_stmt 1 view .LVU1475
2275:src/keys.c    **** 	   goto search;
 4650              		.loc 1 2275 7 is_stmt 0 view .LVU1476
 4651 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 4652              	.LVL399:
2275:src/keys.c    **** 	   goto search;
 4653              		.loc 1 2275 7 view .LVU1477
 4654 0278 013D     		subs	r5, r5, #1
 4655 027a EDB2     		uxtb	r5, r5
2275:src/keys.c    **** 	   goto search;
 4656              		.loc 1 2275 6 view .LVU1478
 4657 027c 3D77     		strb	r5, [r7, #28]
 4658 027e 002D     		cmp	r5, #0
 4659 0280 7FF4F3AE 		bne	.L461
 4660 0284 D9F80040 		ldr	r4, [r9]
 4661 0288 2AE7     		b	.L462
 4662              	.LVL400:
 4663              	.L549:
2292:src/keys.c    ****        goto set_pos;
 4664              		.loc 1 2292 3 is_stmt 1 view .LVU1479
 4665 028a 013D     		subs	r5, r5, #1
 4666              	.LVL401:
2293:src/keys.c    **** 
 4667              		.loc 1 2293 8 view .LVU1480
 4668 028c 1AE7     		b	.L464
 4669              	.LVL402:
 4670              	.L548:
2293:src/keys.c    **** 
 4671              		.loc 1 2293 8 is_stmt 0 view .LVU1481
 4672 028e FFF7FEFF 		bl	current_catalogue
 4673              	.LVL403:
2293:src/keys.c    **** 
 4674              		.loc 1 2293 8 view .LVU1482
 4675 0292 0446     		mov	r4, r0
 4676 0294 75E7     		b	.L454
 4677              	.LVL404:
 4678              	.L554:
2340:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4679              		.loc 1 2340 19 discriminator 1 view .LVU1483
 4680 0296 BAF1130F 		cmp	r10, #19
 4681 029a D8D1     		bne	.L478
2341:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4682              		.loc 1 2341 8 is_stmt 1 view .LVU1484
 4683 029c 0020     		movs	r0, #0
 4684              	.LVL405:
2341:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
ARM GAS  /tmp/ccsJYix0.s 			page 155


 4685              		.loc 1 2341 8 is_stmt 0 view .LVU1485
 4686 029e FFF7FEFF 		bl	init_cat
 4687              	.LVL406:
2342:src/keys.c    ****      }
 4688              		.loc 1 2342 8 is_stmt 1 view .LVU1486
2342:src/keys.c    ****      }
 4689              		.loc 1 2342 15 is_stmt 0 view .LVU1487
 4690 02a2 40F23D10 		movw	r0, #317
 4691 02a6 47E7     		b	.L443
 4692              	.L455:
 4693              	.LBB458:
2267:src/keys.c    **** 	 }
 4694              		.loc 1 2267 5 is_stmt 1 view .LVU1488
 4695              	.LBB441:
 4696              	.LBB442:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4697              		.loc 1 625 5 is_stmt 0 view .LVU1489
 4698 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 4699 02ac 012B     		cmp	r3, #1
 4700              	.LBE442:
 4701              	.LBE441:
2267:src/keys.c    **** 	 }
 4702              		.loc 1 2267 12 view .LVU1490
 4703 02ae 2046     		mov	r0, r4
 4704              	.LVL407:
 4705              	.LBB444:
 4706              	.LBI441:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4707              		.loc 1 624 12 is_stmt 1 view .LVU1491
 4708              	.LBB443:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4709              		.loc 1 625 2 view .LVU1492
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4710              		.loc 1 625 5 is_stmt 0 view .LVU1493
 4711 02b0 7FF442AF 		bne	.L443
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4712              		.loc 1 625 5 view .LVU1494
 4713 02b4 FFF7FEFF 		bl	check_confirm.part.0
 4714              	.LVL408:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4715              		.loc 1 625 5 view .LVU1495
 4716 02b8 3EE7     		b	.L443
 4717              	.LVL409:
 4718              	.L456:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4719              		.loc 1 625 5 view .LVU1496
 4720              	.LBE443:
 4721              	.LBE444:
 4722              	.LBB445:
2260:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4723              		.loc 1 2260 7 is_stmt 1 view .LVU1497
2260:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4724              		.loc 1 2260 14 is_stmt 0 view .LVU1498
 4725 02ba 2046     		mov	r0, r4
 4726 02bc 3CE7     		b	.L443
 4727              	.LVL410:
 4728              	.L471:
ARM GAS  /tmp/ccsJYix0.s 			page 156


2260:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4729              		.loc 1 2260 14 view .LVU1499
 4730 02be 0C48     		ldr	r0, .L557+20
 4731              	.LBE445:
 4732              	.LBE458:
2238:src/keys.c    ****    int pos = State.catpos;
 4733              		.loc 1 2238 93 view .LVU1500
 4734 02c0 40F28522 		movw	r2, #645
 4735 02c4 0146     		mov	r1, r0
 4736 02c6 0023     		movs	r3, #0
 4737 02c8 01E0     		b	.L473
 4738              	.LVL411:
 4739              	.L556:
2238:src/keys.c    ****    int pos = State.catpos;
 4740              		.loc 1 2238 93 view .LVU1501
 4741 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 4742              	.LVL412:
 4743              	.L473:
 4744              	.LBB459:
2330:src/keys.c    **** 	   return conv_mapping[i^1];
 4745              		.loc 1 2330 3 is_stmt 1 view .LVU1502
2329:src/keys.c    **** 	 if (op == conv_mapping[i])
 4746              		.loc 1 2329 72 view .LVU1503
2330:src/keys.c    **** 	   return conv_mapping[i^1];
 4747              		.loc 1 2330 6 is_stmt 0 view .LVU1504
 4748 02ce A242     		cmp	r2, r4
 4749 02d0 1ED0     		beq	.L555
2329:src/keys.c    **** 	 if (op == conv_mapping[i])
 4750              		.loc 1 2329 72 discriminator 2 view .LVU1505
 4751 02d2 0133     		adds	r3, r3, #1
 4752              	.LVL413:
2329:src/keys.c    **** 	 if (op == conv_mapping[i])
 4753              		.loc 1 2329 20 is_stmt 1 discriminator 2 view .LVU1506
2329:src/keys.c    **** 	 if (op == conv_mapping[i])
 4754              		.loc 1 2329 8 is_stmt 0 discriminator 2 view .LVU1507
 4755 02d4 0C2B     		cmp	r3, #12
 4756 02d6 F8D1     		bne	.L556
 4757 02d8 2DE7     		b	.L541
 4758              	.L558:
 4759 02da 00BF     		.align	2
 4760              	.L557:
 4761 02dc 00000000 		.word	StateWhileOn
 4762 02e0 00000000 		.word	.LANCHOR2
 4763 02e4 00000000 		.word	.LANCHOR1
 4764 02e8 00000000 		.word	.LANCHOR9
 4765 02ec 00080800 		.word	526336
 4766 02f0 00000000 		.word	.LANCHOR8
 4767 02f4 00000000 		.word	main_ram
 4768 02f8 1F000000 		.word	StateWhileOn+31
 4769              	.LVL414:
 4770              	.L459:
2329:src/keys.c    **** 	 if (op == conv_mapping[i])
 4771              		.loc 1 2329 8 discriminator 2 view .LVU1508
 4772              	.LBE459:
 4773              	.LBB460:
 4774              	.LBB446:
2264:src/keys.c    **** 	 }
ARM GAS  /tmp/ccsJYix0.s 			page 157


 4775              		.loc 1 2264 7 is_stmt 1 view .LVU1509
 4776              	.LBB438:
 4777              	.LBI438:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 4778              		.loc 1 506 13 view .LVU1510
 4779              	.LBB439:
 507:src/keys.c    **** 		return;
 4780              		.loc 1 507 2 view .LVU1511
 507:src/keys.c    **** 		return;
 4781              		.loc 1 507 6 is_stmt 0 view .LVU1512
 4782 02fc FFF7FEFF 		bl	is_bad_cmdline
 4783              	.LVL415:
 507:src/keys.c    **** 		return;
 4784              		.loc 1 507 5 view .LVU1513
 4785 0300 0028     		cmp	r0, #0
 4786 0302 7FF418AF 		bne	.L541
 4787 0306 2846     		mov	r0, r5
 4788 0308 FFF7FEFF 		bl	init_arg.part.0
 4789              	.LVL416:
 4790              	.LBE439:
 4791              	.LBE438:
 4792              	.LBE446:
 4793              	.LBE460:
2271:src/keys.c    **** 
 4794              		.loc 1 2271 15 view .LVU1514
 4795 030c 3320     		movs	r0, #51
 4796 030e 13E7     		b	.L443
 4797              	.LVL417:
 4798              	.L555:
 4799              	.LBB461:
2331:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4800              		.loc 1 2331 5 is_stmt 1 view .LVU1515
2331:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4801              		.loc 1 2331 26 is_stmt 0 view .LVU1516
 4802 0310 83F00103 		eor	r3, r3, #1
 4803              	.LVL418:
2331:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4804              		.loc 1 2331 24 view .LVU1517
 4805 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4806 0318 0EE7     		b	.L443
 4807              	.LBE461:
 4808              		.cfi_endproc
 4809              	.LFE43:
 4811              		.section	.text.find_pos,"ax",%progbits
 4812              		.align	1
 4813              		.p2align 2,,3
 4814              		.global	find_pos
 4815              		.syntax unified
 4816              		.thumb
 4817              		.thumb_func
 4818              		.fpu fpv4-sp-d16
 4820              	find_pos:
 4821              	.LVL419:
 4822              	.LFB44:
2391:src/keys.c    **** 	int pos;
 4823              		.loc 1 2391 32 is_stmt 1 view -0
 4824              		.cfi_startproc
ARM GAS  /tmp/ccsJYix0.s 			page 158


 4825              		@ args = 0, pretend = 0, frame = 16
 4826              		@ frame_needed = 0, uses_anonymous_args = 0
2392:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4827              		.loc 1 2392 2 view .LVU1519
2393:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4828              		.loc 1 2393 2 view .LVU1520
 4829              	.LBB462:
 4830              	.LBI462:
2093:src/keys.c    **** 	// A quick table of catalogue sizes
 4831              		.loc 1 2093 5 view .LVU1521
 4832              	.LBB463:
2096:src/keys.c    **** 	{
 4833              		.loc 1 2096 2 view .LVU1522
2127:src/keys.c    **** #endif
 4834              		.loc 1 2127 2 view .LVU1523
 4835              	.LBE463:
 4836              	.LBE462:
2391:src/keys.c    **** 	int pos;
 4837              		.loc 1 2391 32 is_stmt 0 view .LVU1524
 4838 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4839              		.cfi_def_cfa_offset 32
 4840              		.cfi_offset 4, -32
 4841              		.cfi_offset 5, -28
 4842              		.cfi_offset 6, -24
 4843              		.cfi_offset 7, -20
 4844              		.cfi_offset 8, -16
 4845              		.cfi_offset 9, -12
 4846              		.cfi_offset 10, -8
 4847              		.cfi_offset 14, -4
 4848              	.LBB465:
 4849              	.LBB464:
2127:src/keys.c    **** #endif
 4850              		.loc 1 2127 31 view .LVU1525
 4851 0004 1E4B     		ldr	r3, .L576
2127:src/keys.c    **** #endif
 4852              		.loc 1 2127 24 view .LVU1526
 4853 0006 1F4A     		ldr	r2, .L576+4
2127:src/keys.c    **** #endif
 4854              		.loc 1 2127 31 view .LVU1527
 4855 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2127:src/keys.c    **** #endif
 4856              		.loc 1 2127 24 view .LVU1528
 4857 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4858              	.LVL420:
2127:src/keys.c    **** #endif
 4859              		.loc 1 2127 24 view .LVU1529
 4860              	.LBE464:
 4861              	.LBE465:
2394:src/keys.c    **** 		char buf[16];
 4862              		.loc 1 2394 2 is_stmt 1 view .LVU1530
2394:src/keys.c    **** 		char buf[16];
 4863              		.loc 1 2394 16 view .LVU1531
2391:src/keys.c    **** 	int pos;
 4864              		.loc 1 2391 32 is_stmt 0 view .LVU1532
 4865 000e 84B0     		sub	sp, sp, #16
 4866              		.cfi_def_cfa_offset 48
2394:src/keys.c    **** 		char buf[16];
ARM GAS  /tmp/ccsJYix0.s 			page 159


 4867              		.loc 1 2394 2 view .LVU1533
 4868 0010 BAF1000F 		cmp	r10, #0
 4869 0014 32D0     		beq	.L566
 4870 0016 8146     		mov	r9, r0
2394:src/keys.c    **** 		char buf[16];
 4871              		.loc 1 2394 11 view .LVU1534
 4872 0018 4FF00008 		mov	r8, #0
 4873 001c C0F10107 		rsb	r7, r0, #1
 4874              	.LVL421:
 4875              	.L565:
 4876              	.LBB466:
2395:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4877              		.loc 1 2395 3 is_stmt 1 view .LVU1535
2396:src/keys.c    **** 		int i;
 4878              		.loc 1 2396 3 view .LVU1536
2396:src/keys.c    **** 		int i;
 4879              		.loc 1 2396 21 is_stmt 0 view .LVU1537
 4880 0020 4046     		mov	r0, r8
 4881 0022 FFF7FEFF 		bl	current_catalogue
 4882              	.LVL422:
 4883 0026 6946     		mov	r1, sp
 4884 0028 FFF7FEFF 		bl	catcmd
 4885              	.LVL423:
 4886 002c 0646     		mov	r6, r0
 4887              	.LVL424:
2397:src/keys.c    **** 
 4888              		.loc 1 2397 3 is_stmt 1 view .LVU1538
2399:src/keys.c    **** 			cmd++;
 4889              		.loc 1 2399 3 view .LVU1539
2400:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4890              		.loc 1 2400 4 view .LVU1540
2399:src/keys.c    **** 			cmd++;
 4891              		.loc 1 2399 7 is_stmt 0 view .LVU1541
 4892 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4893              	.LVL425:
2399:src/keys.c    **** 			cmd++;
 4894              		.loc 1 2399 6 view .LVU1542
 4895 0030 1428     		cmp	r0, #20
 4896 0032 04BF     		itt	eq
 4897 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2400:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4898              		.loc 1 2400 7 view .LVU1543
 4899 0036 0136     		addeq	r6, r6, #1
 4900              	.LVL426:
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4901              		.loc 1 2401 3 is_stmt 1 view .LVU1544
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4902              		.loc 1 2401 13 view .LVU1545
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4903              		.loc 1 2401 3 is_stmt 0 view .LVU1546
 4904 0038 A8B1     		cbz	r0, .L567
 4905 003a 09F1FF33 		add	r3, r9, #-1
 4906 003e 04E0     		b	.L564
 4907              	.LVL427:
 4908              	.L575:
 4909              	.LBB467:
2406:src/keys.c    **** 				break;
ARM GAS  /tmp/ccsJYix0.s 			page 160


 4910              		.loc 1 2406 12 view .LVU1547
 4911 0040 12DB     		blt	.L562
 4912              	.LBE467:
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4913              		.loc 1 2401 16 discriminator 2 view .LVU1548
 4914 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4915              	.LVL428:
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4916              		.loc 1 2401 16 discriminator 2 view .LVU1549
 4917 0046 3C44     		add	r4, r4, r7
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4918              		.loc 1 2401 3 discriminator 2 view .LVU1550
 4919 0048 B0B1     		cbz	r0, .L574
 4920              	.LVL429:
 4921              	.L564:
 4922              	.LBB468:
2402:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4923              		.loc 1 2402 4 is_stmt 1 view .LVU1551
 4924 004a 5C1C     		adds	r4, r3, #1
2402:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4925              		.loc 1 2402 18 is_stmt 0 view .LVU1552
 4926 004c FFF7FEFF 		bl	remap_chars
 4927              	.LVL430:
 4928 0050 0546     		mov	r5, r0
2403:src/keys.c    **** 			if (c > cl)
 4929              		.loc 1 2403 19 view .LVU1553
 4930 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4931              	.LVL431:
2403:src/keys.c    **** 			if (c > cl)
 4932              		.loc 1 2403 4 is_stmt 1 view .LVU1554
2403:src/keys.c    **** 			if (c > cl)
 4933              		.loc 1 2403 19 is_stmt 0 view .LVU1555
 4934 0054 FFF7FEFF 		bl	remap_chars
 4935              	.LVL432:
2406:src/keys.c    **** 				break;
 4936              		.loc 1 2406 9 is_stmt 1 view .LVU1556
 4937              	.LBE468:
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4938              		.loc 1 2401 29 view .LVU1557
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4939              		.loc 1 2401 13 view .LVU1558
 4940              	.LBB469:
2404:src/keys.c    **** 				return pos;
 4941              		.loc 1 2404 4 view .LVU1559
2404:src/keys.c    **** 				return pos;
 4942              		.loc 1 2404 7 is_stmt 0 view .LVU1560
 4943 0058 8542     		cmp	r5, r0
 4944 005a 2346     		mov	r3, r4
 4945 005c F0DD     		ble	.L575
 4946              	.LVL433:
 4947              	.L559:
2404:src/keys.c    **** 				return pos;
 4948              		.loc 1 2404 7 view .LVU1561
 4949              	.LBE469:
 4950              	.LBE466:
2413:src/keys.c    **** 
 4951              		.loc 1 2413 1 view .LVU1562
ARM GAS  /tmp/ccsJYix0.s 			page 161


 4952 005e 4046     		mov	r0, r8
 4953 0060 04B0     		add	sp, sp, #16
 4954              		.cfi_remember_state
 4955              		.cfi_def_cfa_offset 32
 4956              		@ sp needed
 4957 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4958              	.LVL434:
 4959              	.L567:
 4960              		.cfi_restore_state
 4961              	.LBB470:
2401:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4962              		.loc 1 2401 3 view .LVU1563
 4963 0066 4C46     		mov	r4, r9
 4964              	.LVL435:
 4965              	.L562:
2409:src/keys.c    **** 			return pos;
 4966              		.loc 1 2409 3 is_stmt 1 view .LVU1564
2409:src/keys.c    **** 			return pos;
 4967              		.loc 1 2409 6 is_stmt 0 view .LVU1565
 4968 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4969 006a 002B     		cmp	r3, #0
 4970 006c F7D0     		beq	.L559
 4971              	.LBE470:
2394:src/keys.c    **** 		char buf[16];
 4972              		.loc 1 2394 29 is_stmt 1 view .LVU1566
 4973 006e 08F10108 		add	r8, r8, #1
 4974              	.LVL436:
2394:src/keys.c    **** 		char buf[16];
 4975              		.loc 1 2394 16 view .LVU1567
2394:src/keys.c    **** 		char buf[16];
 4976              		.loc 1 2394 2 is_stmt 0 view .LVU1568
 4977 0072 D045     		cmp	r8, r10
 4978 0074 D4D1     		bne	.L565
 4979 0076 F2E7     		b	.L559
 4980              	.LVL437:
 4981              	.L574:
2394:src/keys.c    **** 		char buf[16];
 4982              		.loc 1 2394 2 view .LVU1569
 4983 0078 4C44     		add	r4, r4, r9
 4984 007a F5E7     		b	.L562
 4985              	.LVL438:
 4986              	.L566:
2394:src/keys.c    **** 		char buf[16];
 4987              		.loc 1 2394 11 view .LVU1570
 4988 007c D046     		mov	r8, r10
 4989 007e EEE7     		b	.L559
 4990              	.L577:
 4991              		.align	2
 4992              	.L576:
 4993 0080 00000000 		.word	StateWhileOn
 4994 0084 00000000 		.word	.LANCHOR2
 4995              		.cfi_endproc
 4996              	.LFE44:
 4998              		.section	.text.get_alpha_state,"ax",%progbits
 4999              		.align	1
 5000              		.p2align 2,,3
 5001              		.global	get_alpha_state
ARM GAS  /tmp/ccsJYix0.s 			page 162


 5002              		.syntax unified
 5003              		.thumb
 5004              		.thumb_func
 5005              		.fpu fpv4-sp-d16
 5007              	get_alpha_state:
 5008              	.LFB56:
2738:src/keys.c    **** 
2739:src/keys.c    **** 
2740:src/keys.c    **** static int process_registerlist(const keycode c) {
2741:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2742:src/keys.c    **** 	enum shifts shift = reset_shift();
2743:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2744:src/keys.c    **** 	const int g_max = global_regs();
2745:src/keys.c    **** 
2746:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2747:src/keys.c    **** 		if (local_regs())
2748:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2749:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2750:src/keys.c    **** 		goto reset_window;
2751:src/keys.c    **** 	}
2752:src/keys.c    **** 	else if (n <= 9) {
2753:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2754:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2755:src/keys.c    **** 			dv = n;
2756:src/keys.c    **** 		State2.digval = dv;
2757:src/keys.c    **** 		goto reset_window;
2758:src/keys.c    **** 	}
2759:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2760:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2761:src/keys.c    **** 		set_smode(SDISP_SHOW);
2762:src/keys.c    **** 	}
2763:src/keys.c    **** 	else if (n != NO_REG) {
2764:src/keys.c    **** 		State2.digval = n;
2765:src/keys.c    **** 		goto reset_window;
2766:src/keys.c    **** 	}
2767:src/keys.c    **** 
2768:src/keys.c    **** 	switch (c) {
2769:src/keys.c    **** 	case K_DOWN:
2770:src/keys.c    **** 		if (State2.digval > 0) {
2771:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2772:src/keys.c    **** 				State2.digval = global_regs();
2773:src/keys.c    **** 			--State2.digval;
2774:src/keys.c    **** 		}
2775:src/keys.c    **** 		else
2776:src/keys.c    **** 			State2.digval = max - 1;
2777:src/keys.c    **** 		goto reset_window;
2778:src/keys.c    **** 
2779:src/keys.c    **** 	case K_UP:
2780:src/keys.c    **** 		if (State2.digval < max - 1) {
2781:src/keys.c    **** 			State2.digval++;
2782:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2783:src/keys.c    **** 				State2.digval = regX_idx;
2784:src/keys.c    **** 		}
2785:src/keys.c    **** 		else	
2786:src/keys.c    **** 			State2.digval = 0;
2787:src/keys.c    **** 		goto reset_window;
2788:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 163


2789:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2790:src/keys.c    **** 	case K04:
2791:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2792:src/keys.c    **** 		goto reset_window;
2793:src/keys.c    **** #endif
2794:src/keys.c    **** 
2795:src/keys.c    **** 	case K24:			
2796:src/keys.c    **** 	//case K60:
2797:src/keys.c    **** 		if (State2.disp_temp)
2798:src/keys.c    **** 			return STATE_UNFINISHED;
2799:src/keys.c    **** 		break;		// Exit doing nothing
2800:src/keys.c    **** 
2801:src/keys.c    **** 	case K20:		// ENTER
2802:src/keys.c    **** 		if (shift == SHIFT_F) {
2803:src/keys.c    **** 			State2.disp_as_alpha = 1;
2804:src/keys.c    **** 			goto reset_window;
2805:src/keys.c    **** 		}
2806:src/keys.c    **** 	case K11:		// RCL
2807:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2808:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2809:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2810:src/keys.c    **** #else
2811:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2812:src/keys.c    **** #endif
2813:src/keys.c    **** 			State2.registerlist = 0;
2814:src/keys.c    **** 			State2.digval = 0;
2815:src/keys.c    **** 			State2.digval2 = 0;
2816:src/keys.c    **** 			return n;
2817:src/keys.c    **** 		}
2818:src/keys.c    **** 	default:
2819:src/keys.c    **** 		return STATE_UNFINISHED;
2820:src/keys.c    **** 	}
2821:src/keys.c    **** 	State2.registerlist = 0;
2822:src/keys.c    **** 	State2.digval = 0;
2823:src/keys.c    **** 	State2.digval2 = 0;
2824:src/keys.c    **** reset_window:
2825:src/keys.c    **** 	State2.window = 0;
2826:src/keys.c    **** 	return STATE_UNFINISHED;
2827:src/keys.c    **** }
2828:src/keys.c    **** 
2829:src/keys.c    **** 
2830:src/keys.c    **** static int process(const int c) {
2831:src/keys.c    ****   const enum shifts shift = cur_shift();
2832:src/keys.c    ****   enum catalogues cat;
2833:src/keys.c    **** 
2834:src/keys.c    ****   if (Running || Pause) {
2835:src/keys.c    ****     /*
2836:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2837:src/keys.c    ****      */
2838:src/keys.c    ****     if (c == K60 || c == K63) {
2839:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2840:src/keys.c    **** 	set_pc(0);
2841:src/keys.c    ****       Pause = 0;
2842:src/keys.c    ****       xeq_xrom();
2843:src/keys.c    ****       set_running_off();
2844:src/keys.c    ****       DispMsg = "Stopped";
2845:src/keys.c    ****       State2.disp_freeze = 0;
ARM GAS  /tmp/ccsJYix0.s 			page 164


2846:src/keys.c    ****       return STATE_UNFINISHED;
2847:src/keys.c    ****     }
2848:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2849:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2850:src/keys.c    ****       Pause = 0;			// leave PSE statement
2851:src/keys.c    ****       GoFast = 1;
2852:src/keys.c    ****     }
2853:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2854:src/keys.c    ****     return STATE_RUNNING;
2855:src/keys.c    ****   }
2856:src/keys.c    **** 
2857:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2858:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2859:src/keys.c    ****    * if required.
2860:src/keys.c    ****    */
2861:src/keys.c    **** #ifdef DM42
2862:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
2863:src/keys.c    **** #else
2864:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
2865:src/keys.c    **** #endif
2866:src/keys.c    ****     {
2867:src/keys.c    ****       soft_init_state();
2868:src/keys.c    ****       return STATE_UNFINISHED;
2869:src/keys.c    ****     }
2870:src/keys.c    **** 
2871:src/keys.c    **** #ifndef CONSOLE
2872:src/keys.c    **** 	if (c == K63 && JustStopped) {
2873:src/keys.c    **** 		// Avoid an accidental restart with R/S
2874:src/keys.c    **** 		JustStopped = 0;
2875:src/keys.c    **** 		return STATE_IGNORE;
2876:src/keys.c    **** 	}
2877:src/keys.c    **** #endif
2878:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2879:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2880:src/keys.c    **** 	 */
2881:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2882:src/keys.c    **** 		CmdLineLength = 0;
2883:src/keys.c    **** 	/*
2884:src/keys.c    **** 	 *  Process the various cases
2885:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2886:src/keys.c    **** 	 */
2887:src/keys.c    **** 	if (State2.confirm)
2888:src/keys.c    **** 		return process_confirm((const keycode)c);
2889:src/keys.c    **** 
2890:src/keys.c    **** 	if (State2.rarg)
2891:src/keys.c    **** 		return process_arg((const keycode)c);
2892:src/keys.c    **** 
2893:src/keys.c    **** 	if (State2.gtodot)
2894:src/keys.c    **** 		return process_gtodot((const keycode)c);
2895:src/keys.c    **** 
2896:src/keys.c    **** 	if (State2.hyp)
2897:src/keys.c    **** 		return process_hyp((const keycode)c);
2898:src/keys.c    **** 
2899:src/keys.c    **** 	if (State2.test != TST_NONE)
2900:src/keys.c    **** 		return process_test((const keycode)c);
2901:src/keys.c    **** 
2902:src/keys.c    **** 	if (State2.status)
ARM GAS  /tmp/ccsJYix0.s 			page 165


2903:src/keys.c    **** 		return process_status((const keycode)c);
2904:src/keys.c    **** 
2905:src/keys.c    **** 	/*
2906:src/keys.c    **** 	 *  Process shift keys directly
2907:src/keys.c    **** 	 */
2908:src/keys.c    **** 	if (c == K_F) {
2909:src/keys.c    **** 		toggle_shift(SHIFT_F);
2910:src/keys.c    **** 		return STATE_UNFINISHED;
2911:src/keys.c    **** 	}
2912:src/keys.c    **** 	if (c == K_G) {
2913:src/keys.c    **** 		toggle_shift(SHIFT_G);
2914:src/keys.c    **** 		return STATE_UNFINISHED;
2915:src/keys.c    **** 	}
2916:src/keys.c    **** 	if (c == K_H) {
2917:src/keys.c    **** 		toggle_shift(SHIFT_H);
2918:src/keys.c    **** 		State2.arrow = 0;
2919:src/keys.c    **** 		return STATE_UNFINISHED;
2920:src/keys.c    **** 	}
2921:src/keys.c    **** 	/*
2922:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2923:src/keys.c    **** 	 */
2924:src/keys.c    **** 	// print_debug (2, c);
2925:src/keys.c    **** 	if (State2.arrow)
2926:src/keys.c    **** 		return process_arrow((const keycode)c);
2927:src/keys.c    **** 
2928:src/keys.c    **** 	/*
2929:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2930:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2931:src/keys.c    **** 	 * works and were not
2932:src/keys.c    **** 	 */
2933:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2934:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2935:src/keys.c    **** 		if (is_bad_cmdline())
2936:src/keys.c    **** 			return STATE_UNFINISHED;
2937:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2938:src/keys.c    **** 		init_cat( cat );
2939:src/keys.c    **** 		return STATE_UNFINISHED;
2940:src/keys.c    **** 	}
2941:src/keys.c    **** 
2942:src/keys.c    **** 	/*
2943:src/keys.c    **** 	 *  More handlers...
2944:src/keys.c    **** 	 */
2945:src/keys.c    **** 	if (State2.multi)
2946:src/keys.c    **** 		return process_multi((const keycode)c);
2947:src/keys.c    **** 
2948:src/keys.c    **** 	if (State2.labellist)
2949:src/keys.c    **** 		return process_labellist((const keycode)c);
2950:src/keys.c    **** 
2951:src/keys.c    **** 	if (State2.registerlist)
2952:src/keys.c    **** 		return process_registerlist((const keycode)c);
2953:src/keys.c    **** 
2954:src/keys.c    **** 	if (State2.catalogue)
2955:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2956:src/keys.c    **** 
2957:src/keys.c    **** 	if (State2.alphas) {
2958:src/keys.c    **** #ifndef INFRARED
2959:src/keys.c    **** 		return process_alpha((const keycode)c);
ARM GAS  /tmp/ccsJYix0.s 			page 166


2960:src/keys.c    **** #else
2961:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2962:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2963:src/keys.c    **** 			print_tab(0);
2964:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2965:src/keys.c    **** 		}
2966:src/keys.c    **** 		return i;
2967:src/keys.c    **** #endif
2968:src/keys.c    **** 	}
2969:src/keys.c    **** 
2970:src/keys.c    **** 	if (State2.cmplx) {
2971:src/keys.c    **** 		return process_cmplx((const keycode)c);
2972:src/keys.c    **** 	} else {
2973:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2974:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2975:src/keys.c    **** 		if (shift == SHIFT_H)
2976:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2977:src/keys.c    **** 		// print_debug (3, c);
2978:src/keys.c    **** 		return process_normal((const keycode)c);
2979:src/keys.c    **** 	}
2980:src/keys.c    **** }
2981:src/keys.c    **** 
2982:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 5009              		.loc 1 2982 40 is_stmt 1 view -0
 5010              		.cfi_startproc
 5011              		@ args = 0, pretend = 0, frame = 0
 5012              		@ frame_needed = 0, uses_anonymous_args = 0
 5013              		@ link register save eliminated.
2983:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 5014              		.loc 1 2983 4 view .LVU1572
 5015              		.loc 1 2983 53 is_stmt 0 view .LVU1573
 5016 0000 074B     		ldr	r3, .L583
 5017              		.loc 1 2983 44 view .LVU1574
 5018 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 5019 0004 1AB9     		cbnz	r2, .L581
2984:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2985:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 5020              		.loc 1 2985 5 discriminator 2 view .LVU1575
 5021 0006 5969     		ldr	r1, [r3, #20]
 5022 0008 064A     		ldr	r2, .L583+4
 5023 000a 0A40     		ands	r2, r2, r1
 5024 000c 0AB1     		cbz	r2, .L582
 5025              	.L581:
 5026 000e 0120     		movs	r0, #1
2986:src/keys.c    ****  }
 5027              		.loc 1 2986 2 view .LVU1576
 5028 0010 7047     		bx	lr
 5029              	.L582:
2985:src/keys.c    ****  }
 5030              		.loc 1 2985 42 discriminator 3 view .LVU1577
 5031 0012 D889     		ldrh	r0, [r3, #14]
 5032 0014 B0F5E060 		subs	r0, r0, #1792
 5033 0018 18BF     		it	ne
 5034 001a 0120     		movne	r0, #1
 5035 001c 7047     		bx	lr
 5036              	.L584:
 5037 001e 00BF     		.align	2
ARM GAS  /tmp/ccsJYix0.s 			page 167


 5038              	.L583:
 5039 0020 00000000 		.word	StateWhileOn
 5040 0024 0709280C 		.word	203950343
 5041              		.cfi_endproc
 5042              	.LFE56:
 5044              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 5045              		.align	2
 5046              	.LC0:
 5047 0000 52554E00 		.ascii	"RUN\000"
 5048              		.align	2
 5049              	.LC1:
 5050 0004 4E554C4C 		.ascii	"NULL\000"
 5050      00
 5051 0009 000000   		.align	2
 5052              	.LC2:
 5053 000c 53746F70 		.ascii	"Stopped\000"
 5053      70656400 
 5054              		.section	.text.process_keycode,"ax",%progbits
 5055              		.align	1
 5056              		.p2align 2,,3
 5057              		.global	process_keycode
 5058              		.syntax unified
 5059              		.thumb
 5060              		.thumb_func
 5061              		.fpu fpv4-sp-d16
 5063              	process_keycode:
 5064              	.LVL439:
 5065              	.LFB58:
2987:src/keys.c    **** 
2988:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2989:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2990:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2991:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2992:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2993:src/keys.c    ****        // Was error just wait for confirmation
2994:src/keys.c    ****        wait_for_key_press();
2995:src/keys.c    ****      }
2996:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2997:src/keys.c    ****      return;
2998:src/keys.c    ****    }
2999:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3000:src/keys.c    ****      nd_opcode = remapped.shift;
3001:src/keys.c    ****      set_shift(SHIFT_N);
3002:src/keys.c    ****    }
3003:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3004:src/keys.c    ****    process_keycode ( remapped.key_34s );
3005:src/keys.c    ****  }
3006:src/keys.c    ****  
3007:src/keys.c    **** /*
3008:src/keys.c    ****  *  Fed with key codes by the event loop
3009:src/keys.c    ****  */
3010:src/keys.c    **** void process_keycode(int c)
3011:src/keys.c    **** {
 5066              		.loc 1 3011 1 is_stmt 1 view -0
 5067              		.cfi_startproc
 5068              		@ args = 0, pretend = 0, frame = 8
 5069              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsJYix0.s 			page 168


3012:src/keys.c    ****   static int was_paused;
 5070              		.loc 1 3012 3 view .LVU1579
3013:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3014:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 5071              		.loc 1 3014 3 view .LVU1580
3015:src/keys.c    ****   if (was_paused && Pause == 0)
 5072              		.loc 1 3015 3 view .LVU1581
3011:src/keys.c    ****   static int was_paused;
 5073              		.loc 1 3011 1 is_stmt 0 view .LVU1582
 5074 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5075              		.cfi_def_cfa_offset 36
 5076              		.cfi_offset 4, -36
 5077              		.cfi_offset 5, -32
 5078              		.cfi_offset 6, -28
 5079              		.cfi_offset 7, -24
 5080              		.cfi_offset 8, -20
 5081              		.cfi_offset 9, -16
 5082              		.cfi_offset 10, -12
 5083              		.cfi_offset 11, -8
 5084              		.cfi_offset 14, -4
 5085              		.loc 1 3015 7 view .LVU1583
 5086 0004 964D     		ldr	r5, .L1253
 5087              		.loc 1 3015 27 view .LVU1584
 5088 0006 974F     		ldr	r7, .L1253+4
 5089              		.loc 1 3015 6 view .LVU1585
 5090 0008 2B68     		ldr	r3, [r5]
3011:src/keys.c    ****   static int was_paused;
 5091              		.loc 1 3011 1 view .LVU1586
 5092 000a 83B0     		sub	sp, sp, #12
 5093              		.cfi_def_cfa_offset 48
3011:src/keys.c    ****   static int was_paused;
 5094              		.loc 1 3011 1 view .LVU1587
 5095 000c 0446     		mov	r4, r0
 5096              		.loc 1 3015 6 view .LVU1588
 5097 000e 1BB1     		cbz	r3, .L586
 5098              		.loc 1 3015 27 discriminator 1 view .LVU1589
 5099 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5100              		.loc 1 3015 18 discriminator 1 view .LVU1590
 5101 0012 002B     		cmp	r3, #0
 5102 0014 00F00B82 		beq	.L1153
 5103              	.LVL440:
 5104              	.L586:
3016:src/keys.c    ****     {
3017:src/keys.c    ****     /*
3018:src/keys.c    ****      *  Continue XROM execution after a pause
3019:src/keys.c    ****      */
3020:src/keys.c    ****       xeq_xrom();
3021:src/keys.c    ****     }
3022:src/keys.c    ****   was_paused = Pause;
 5105              		.loc 1 3022 3 is_stmt 1 view .LVU1591
 5106              		.loc 1 3022 14 is_stmt 0 view .LVU1592
 5107 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5108 001a 2B60     		str	r3, [r5]
3023:src/keys.c    ****   if (c == K_NOP)
 5109              		.loc 1 3023 3 is_stmt 1 view .LVU1593
 5110              		.loc 1 3023 6 is_stmt 0 view .LVU1594
 5111 001c 2E2C     		cmp	r4, #46
ARM GAS  /tmp/ccsJYix0.s 			page 169


 5112 001e 00F0C781 		beq	.L1154
3024:src/keys.c    ****     {
3025:src/keys.c    ****       OpCode = 0;
3026:src/keys.c    ****     }
3027:src/keys.c    ****   else if (c == K_HEARTBEAT)
 5113              		.loc 1 3027 8 is_stmt 1 view .LVU1595
 5114              		.loc 1 3027 11 is_stmt 0 view .LVU1596
 5115 0022 622C     		cmp	r4, #98
 5116 0024 71D0     		beq	.L1155
3028:src/keys.c    ****     {
3029:src/keys.c    ****     /*
3030:src/keys.c    ****      *  Heartbeat processing goes here.
3031:src/keys.c    ****      *  This is totally thread safe!
3032:src/keys.c    ****      */
3033:src/keys.c    ****     if (Keyticks >= 2) {
3034:src/keys.c    ****       /*
3035:src/keys.c    ****        *  Some time has passed after last key press
3036:src/keys.c    ****        */
3037:src/keys.c    ****       if (OpCode != 0) {
3038:src/keys.c    **** 	/*
3039:src/keys.c    **** 	 *  Handle command display and NULL here
3040:src/keys.c    **** 	 */
3041:src/keys.c    **** 	if (OpCodeDisplayPending) {
3042:src/keys.c    **** 	  /*
3043:src/keys.c    **** 	   *  Show command to the user
3044:src/keys.c    **** 	   */
3045:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3046:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3047:src/keys.c    **** 	    DispMsg = "RUN";
3048:src/keys.c    **** 	  }
3049:src/keys.c    **** 	  else {
3050:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3051:src/keys.c    **** 	    DispMsg = TraceBuffer;
3052:src/keys.c    **** 	  }
3053:src/keys.c    **** 	  display();
3054:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3055:src/keys.c    **** 	}
3056:src/keys.c    ****     else if (Keyticks > 12) {
3057:src/keys.c    **** 	  /*
3058:src/keys.c    **** 	   *  Key is too long held down
3059:src/keys.c    **** 	   */
3060:src/keys.c    **** 	  OpCode = 0;
3061:src/keys.c    **** 	  message("NULL", CNULL);
3062:src/keys.c    **** 	  // Force display update on key-up
3063:src/keys.c    **** 	  State2.disp_temp = 0;
3064:src/keys.c    **** 	}
3065:src/keys.c    ****       }
3066:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3067:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3068:src/keys.c    **** 	State2.shifts = SHIFT_N;
3069:src/keys.c    ****       }
3070:src/keys.c    ****     }
3071:src/keys.c    **** 
3072:src/keys.c    ****     /*
3073:src/keys.c    ****      *  Serve the watchdog
3074:src/keys.c    ****      */
3075:src/keys.c    ****     watchdog();
ARM GAS  /tmp/ccsJYix0.s 			page 170


3076:src/keys.c    **** 
3077:src/keys.c    **** #ifndef CONSOLE
3078:src/keys.c    ****     /*
3079:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3080:src/keys.c    ****      */
3081:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3082:src/keys.c    ****       JustStopped = 0;
3083:src/keys.c    ****     }
3084:src/keys.c    **** #endif
3085:src/keys.c    **** 
3086:src/keys.c    ****     /*
3087:src/keys.c    ****      *  Do nothing if not running a program
3088:src/keys.c    ****      */
3089:src/keys.c    ****     if (!Running && ! Pause)
3090:src/keys.c    ****       return;
3091:src/keys.c    ****   }
3092:src/keys.c    ****   else {
3093:src/keys.c    ****     /*
3094:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3095:src/keys.c    ****      */
3096:src/keys.c    ****     xeq_init_contexts();
 5117              		.loc 1 3096 5 is_stmt 1 view .LVU1597
3097:src/keys.c    ****     State2.wascomplex = 0;
 5118              		.loc 1 3097 23 is_stmt 0 view .LVU1598
 5119 0026 DFF85882 		ldr	r8, .L1253+32
3096:src/keys.c    ****     State2.wascomplex = 0;
 5120              		.loc 1 3096 5 view .LVU1599
 5121 002a FFF7FEFF 		bl	xeq_init_contexts
 5122              	.LVL441:
 5123              		.loc 1 3097 5 is_stmt 1 view .LVU1600
 5124              		.loc 1 3097 23 is_stmt 0 view .LVU1601
 5125 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3098:src/keys.c    **** 
3099:src/keys.c    ****     if (is_dot(RPN)) {
 5126              		.loc 1 3099 9 view .LVU1602
 5127 0032 8D20     		movs	r0, #141
3097:src/keys.c    **** 
 5128              		.loc 1 3097 23 view .LVU1603
 5129 0034 6FF38713 		bfc	r3, #6, #2
 5130 0038 88F81430 		strb	r3, [r8, #20]
 5131              		.loc 1 3099 5 is_stmt 1 view .LVU1604
 5132              		.loc 1 3099 9 is_stmt 0 view .LVU1605
 5133 003c FFF7FEFF 		bl	is_dot
 5134              	.LVL442:
 5135              		.loc 1 3099 8 view .LVU1606
 5136 0040 0028     		cmp	r0, #0
 5137 0042 40F07F82 		bne	.L1156
 5138              	.L604:
3100:src/keys.c    ****       /*
3101:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3102:src/keys.c    ****        */
3103:src/keys.c    ****       clr_dot(RPN);
3104:src/keys.c    ****       finish_RPN(); // RPN
3105:src/keys.c    ****     }
3106:src/keys.c    **** 
3107:src/keys.c    **** #ifndef CONSOLE
3108:src/keys.c    ****     /*
ARM GAS  /tmp/ccsJYix0.s 			page 171


3109:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3110:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3111:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3112:src/keys.c    ****      *  an accidental restart of the program.
3113:src/keys.c    ****      */
3114:src/keys.c    ****     if (c != K63)
 5139              		.loc 1 3114 5 is_stmt 1 view .LVU1607
 5140              		.loc 1 3114 8 is_stmt 0 view .LVU1608
 5141 0046 272C     		cmp	r4, #39
 5142 0048 00F07982 		beq	.L1157
3115:src/keys.c    ****       JustStopped = 0;
 5143              		.loc 1 3115 7 is_stmt 1 view .LVU1609
 5144              		.loc 1 3115 19 is_stmt 0 view .LVU1610
 5145 004c 864B     		ldr	r3, .L1253+8
 5146 004e 0025     		movs	r5, #0
3116:src/keys.c    **** #endif
3117:src/keys.c    ****   }
3118:src/keys.c    **** 
3119:src/keys.c    ****   /*
3120:src/keys.c    ****    *  Handle key release
3121:src/keys.c    ****    */
3122:src/keys.c    ****   if (c == K_RELEASE)
 5147              		.loc 1 3122 6 view .LVU1611
 5148 0050 632C     		cmp	r4, #99
3115:src/keys.c    ****       JustStopped = 0;
 5149              		.loc 1 3115 19 view .LVU1612
 5150 0052 1D60     		str	r5, [r3]
 5151              		.loc 1 3122 3 is_stmt 1 view .LVU1613
 5152              		.loc 1 3122 6 is_stmt 0 view .LVU1614
 5153 0054 40F0BB81 		bne	.L606
3123:src/keys.c    ****     {
3124:src/keys.c    ****     if (OpCode != 0) {
 5154              		.loc 1 3124 5 is_stmt 1 view .LVU1615
 5155              		.loc 1 3124 16 is_stmt 0 view .LVU1616
 5156 0058 844B     		ldr	r3, .L1253+12
 5157 005a 1C68     		ldr	r4, [r3]
 5158              	.LVL443:
 5159              		.loc 1 3124 8 view .LVU1617
 5160 005c 002C     		cmp	r4, #0
 5161 005e 00F08482 		beq	.L607
3125:src/keys.c    ****       /*
3126:src/keys.c    ****        * Execute the key on release
3127:src/keys.c    ****        */
3128:src/keys.c    ****       GoFast = 1;
 5162              		.loc 1 3128 7 is_stmt 1 view .LVU1618
 5163              		.loc 1 3128 14 is_stmt 0 view .LVU1619
 5164 0062 834A     		ldr	r2, .L1253+16
3129:src/keys.c    ****       c = OpCode;
3130:src/keys.c    ****       OpCode = 0;
 5165              		.loc 1 3130 14 view .LVU1620
 5166 0064 1D60     		str	r5, [r3]
3128:src/keys.c    ****       c = OpCode;
 5167              		.loc 1 3128 14 view .LVU1621
 5168 0066 0120     		movs	r0, #1
3131:src/keys.c    **** 
3132:src/keys.c    ****       if (c == STATE_SST)
 5169              		.loc 1 3132 10 view .LVU1622
ARM GAS  /tmp/ccsJYix0.s 			page 172


 5170 0068 2E2C     		cmp	r4, #46
3129:src/keys.c    ****       OpCode = 0;
 5171              		.loc 1 3129 9 view .LVU1623
 5172 006a A346     		mov	fp, r4
3128:src/keys.c    ****       c = OpCode;
 5173              		.loc 1 3128 14 view .LVU1624
 5174 006c 1060     		str	r0, [r2]
3129:src/keys.c    ****       OpCode = 0;
 5175              		.loc 1 3129 7 is_stmt 1 view .LVU1625
 5176              	.LVL444:
3130:src/keys.c    **** 
 5177              		.loc 1 3130 7 view .LVU1626
 5178              		.loc 1 3132 7 view .LVU1627
 5179              		.loc 1 3132 10 is_stmt 0 view .LVU1628
 5180 006e 00F09082 		beq	.L1158
3133:src/keys.c    **** 	xeq_sst_bst(1);
3134:src/keys.c    ****       else {
3135:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5181              		.loc 1 3135 2 is_stmt 1 view .LVU1629
 5182              		.loc 1 3135 5 is_stmt 0 view .LVU1630
 5183 0072 B4F5817F 		cmp	r4, #258
 5184 0076 08D0     		beq	.L613
 5185              		.loc 1 3135 29 discriminator 1 view .LVU1631
 5186 0078 40F23F13 		movw	r3, #319
 5187 007c 9C42     		cmp	r4, r3
 5188 007e 04D0     		beq	.L613
 5189              		.loc 1 3135 60 discriminator 2 view .LVU1632
 5190 0080 FFF7FEFF 		bl	is_bad_cmdline
 5191              	.LVL445:
 5192              		.loc 1 3135 56 discriminator 2 view .LVU1633
 5193 0084 0028     		cmp	r0, #0
 5194 0086 40F09482 		bne	.L1159
 5195              	.L613:
3136:src/keys.c    **** 	  xeq(c);
 5196              		.loc 1 3136 4 is_stmt 1 view .LVU1634
3137:src/keys.c    **** 	  if (Running || Pause)
 5197              		.loc 1 3137 8 is_stmt 0 view .LVU1635
 5198 008a 7A4E     		ldr	r6, .L1253+20
3136:src/keys.c    **** 	  xeq(c);
 5199              		.loc 1 3136 4 view .LVU1636
 5200 008c 2046     		mov	r0, r4
 5201 008e FFF7FEFF 		bl	xeq
 5202              	.LVL446:
 5203              		.loc 1 3137 4 is_stmt 1 view .LVU1637
 5204              		.loc 1 3137 7 is_stmt 0 view .LVU1638
 5205 0092 3368     		ldr	r3, [r6]
 5206 0094 0BB9     		cbnz	r3, .L611
 5207              		.loc 1 3137 16 discriminator 1 view .LVU1639
 5208 0096 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5209 0098 0BB1     		cbz	r3, .L609
 5210              	.L611:
3138:src/keys.c    **** 	    xeqprog();
 5211              		.loc 1 3138 6 is_stmt 1 view .LVU1640
 5212 009a FFF7FEFF 		bl	xeqprog
 5213              	.LVL447:
 5214              	.L609:
3139:src/keys.c    **** 	}
ARM GAS  /tmp/ccsJYix0.s 			page 173


3140:src/keys.c    ****       }
3141:src/keys.c    ****       dot(RPN, ShowRPN);
 5215              		.loc 1 3141 7 view .LVU1641
 5216 009e 764C     		ldr	r4, .L1253+24
 5217              	.LVL448:
 5218              		.loc 1 3141 7 is_stmt 0 view .LVU1642
 5219 00a0 8D20     		movs	r0, #141
 5220 00a2 2168     		ldr	r1, [r4]
 5221 00a4 FFF7FEFF 		bl	dot
 5222              	.LVL449:
3142:src/keys.c    ****     }
3143:src/keys.c    ****     else {
3144:src/keys.c    ****       // Ignore key-up if no operation was pending
3145:src/keys.c    ****       dot(RPN, ShowRPN);
3146:src/keys.c    **** #ifndef CONSOLE
3147:src/keys.c    ****       if (! State2.disp_temp ) {
3148:src/keys.c    **** 	if (!WasDataEntry) {
3149:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3150:src/keys.c    **** 	  display();
3151:src/keys.c    **** 	}
3152:src/keys.c    **** 	else {
3153:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3154:src/keys.c    **** 	}
3155:src/keys.c    ****       }
3156:src/keys.c    **** #endif
3157:src/keys.c    ****       return;
3158:src/keys.c    ****     }
3159:src/keys.c    **** 
3160:src/keys.c    ****     /*
3161:src/keys.c    ****      *  Turn on the RPN symbol if desired
3162:src/keys.c    ****      */
3163:src/keys.c    ****     if (ShowRPN) {
 5223              		.loc 1 3163 5 is_stmt 1 view .LVU1643
 5224              		.loc 1 3163 9 is_stmt 0 view .LVU1644
 5225 00a8 2568     		ldr	r5, [r4]
 5226              		.loc 1 3163 8 view .LVU1645
 5227 00aa 002D     		cmp	r5, #0
 5228 00ac 40F05082 		bne	.L615
 5229 00b0 3268     		ldr	r2, [r6]
 5230              	.LVL450:
 5231              	.L616:
3164:src/keys.c    ****       finish_RPN(); // RPN
3165:src/keys.c    ****     }
3166:src/keys.c    ****   }
3167:src/keys.c    ****   else {
3168:src/keys.c    ****     /*
3169:src/keys.c    ****      *  Decode the key 
3170:src/keys.c    ****      */
3171:src/keys.c    ****     // print_debug (100, c);
3172:src/keys.c    ****     WasDataEntry = 0;
3173:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3174:src/keys.c    **** #ifdef DM42
3175:src/keys.c    ****     if (c != K_OP) {
3176:src/keys.c    ****       c = process(c);		// returns an op-code or state
3177:src/keys.c    ****     }
3178:src/keys.c    ****     else {
3179:src/keys.c    ****       if (isRARG(nd_opcode)) {
ARM GAS  /tmp/ccsJYix0.s 			page 174


3180:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3181:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3182:src/keys.c    **** 	  c = nd_opcode;
3183:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3184:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3185:src/keys.c    **** 	  c = STATE_UNFINISHED;
3186:src/keys.c    **** 	}
3187:src/keys.c    **** 	else {
3188:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3189:src/keys.c    **** 	  c = STATE_UNFINISHED;
3190:src/keys.c    **** 	}
3191:src/keys.c    ****       }
3192:src/keys.c    ****       else {
3193:src/keys.c    **** 	c = check_confirm(nd_opcode);
3194:src/keys.c    ****       }      
3195:src/keys.c    ****     }
3196:src/keys.c    **** #else
3197:src/keys.c    ****     c = process(c);		// returns an op-code or state
3198:src/keys.c    **** #endif
3199:src/keys.c    ****     switch (c) {
3200:src/keys.c    ****     case STATE_SST:
3201:src/keys.c    ****       OpCode = c;
3202:src/keys.c    ****       OpCodeDisplayPending = 0;
3203:src/keys.c    ****       xeq_sst_bst(0);
3204:src/keys.c    ****       break;
3205:src/keys.c    **** 
3206:src/keys.c    ****     case STATE_BST:
3207:src/keys.c    ****       xeq_sst_bst(-1);
3208:src/keys.c    ****       break;
3209:src/keys.c    **** 
3210:src/keys.c    ****     case STATE_BACKSPACE:
3211:src/keys.c    ****       if (! State2.runmode)
3212:src/keys.c    **** 	delprog();
3213:src/keys.c    ****       else if (State2.alphas) {
3214:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3215:src/keys.c    **** 	if (p > Alpha)
3216:src/keys.c    **** 	  *--p = '\0';
3217:src/keys.c    ****       }
3218:src/keys.c    ****       break;
3219:src/keys.c    **** 
3220:src/keys.c    ****     case STATE_RUNNING:
3221:src/keys.c    ****       xeqprog();  // continue execution
3222:src/keys.c    ****       break;
3223:src/keys.c    **** 
3224:src/keys.c    ****     case STATE_WINDOWRIGHT:
3225:src/keys.c    ****     case STATE_WINDOWLEFT:
3226:src/keys.c    ****       if (!is_bad_cmdline())
3227:src/keys.c    **** 	set_window(c);
3228:src/keys.c    ****       break;
3229:src/keys.c    **** 
3230:src/keys.c    ****     case STATE_UNFINISHED:
3231:src/keys.c    ****     case STATE_IGNORE:
3232:src/keys.c    ****       break;
3233:src/keys.c    **** 
3234:src/keys.c    ****     default:
3235:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3236:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccsJYix0.s 			page 175


3237:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3238:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3239:src/keys.c    **** 	    // Data entry key
3240:src/keys.c    **** #ifndef CONSOLE
3241:src/keys.c    **** 	    WasDataEntry = 1;
3242:src/keys.c    **** #endif
3243:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3244:src/keys.c    **** 	    xeq(c);
3245:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3246:src/keys.c    **** 	  }
3247:src/keys.c    **** 	}
3248:src/keys.c    **** 	else {
3249:src/keys.c    **** 	  // Save the op-code for execution on key-up
3250:src/keys.c    **** 	  OpCode = c;
3251:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3252:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3253:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3254:src/keys.c    **** 	}
3255:src/keys.c    ****       }
3256:src/keys.c    ****       else {
3257:src/keys.c    **** 	stoprog(c);
3258:src/keys.c    ****       }
3259:src/keys.c    ****     }
3260:src/keys.c    ****   }
3261:src/keys.c    ****   if (! Running && ! Pause
 5232              		.loc 1 3261 3 is_stmt 1 view .LVU1646
 5233              		.loc 1 3261 6 is_stmt 0 view .LVU1647
 5234 00b2 002A     		cmp	r2, #0
 5235 00b4 40F07881 		bne	.L1149
 5236              	.LVL451:
 5237              	.L632:
 5238              		.loc 1 3261 20 discriminator 1 view .LVU1648
 5239 00b8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5240              		.loc 1 3261 17 discriminator 1 view .LVU1649
 5241 00ba 002B     		cmp	r3, #0
 5242 00bc 40F07481 		bne	.L1149
3262:src/keys.c    **** #ifndef CONSOLE
3263:src/keys.c    ****       && ! JustStopped
 5243              		.loc 1 3263 10 view .LVU1650
 5244 00c0 694B     		ldr	r3, .L1253+8
3264:src/keys.c    **** #endif
3265:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5245              		.loc 1 3265 10 view .LVU1651
 5246 00c2 6E4C     		ldr	r4, .L1253+28
 5247 00c4 1B68     		ldr	r3, [r3]
 5248 00c6 2268     		ldr	r2, [r4]
 5249              		.loc 1 3265 7 view .LVU1652
 5250 00c8 1343     		orrs	r3, r3, r2
 5251 00ca 19D1     		bne	.L929
 5252              		.loc 1 3265 26 discriminator 1 view .LVU1653
 5253 00cc BBF1320F 		cmp	fp, #50
 5254 00d0 16D0     		beq	.L929
 5255              	.LBB651:
3266:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5256              		.loc 1 3266 5 is_stmt 1 view .LVU1654
 5257              		.loc 1 3266 15 is_stmt 0 view .LVU1655
 5258 00d2 DFF8C891 		ldr	r9, .L1253+60
ARM GAS  /tmp/ccsJYix0.s 			page 176


 5259 00d6 D9F80060 		ldr	r6, [r9]
 5260              	.LVL452:
3267:src/keys.c    **** 
3268:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5261              		.loc 1 3268 5 is_stmt 1 view .LVU1656
 5262              		.loc 1 3268 21 is_stmt 0 view .LVU1657
 5263 00da BBF1000F 		cmp	fp, #0
 5264 00de 09D0     		beq	.L931
 5265              		.loc 1 3268 49 discriminator 1 view .LVU1658
 5266 00e0 002D     		cmp	r5, #0
 5267 00e2 40F0CD84 		bne	.L990
 5268              		.loc 1 3268 66 discriminator 3 view .LVU1659
 5269 00e6 664B     		ldr	r3, .L1253+32
 5270 00e8 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5271              		.loc 1 3268 21 discriminator 3 view .LVU1660
 5272 00ea 9F07     		lsls	r7, r3, #30
 5273 00ec 00F11E85 		bmi	.L991
 5274 00f0 06F0010B 		and	fp, r6, #1
 5275              	.LVL453:
 5276              	.L931:
 5277              		.loc 1 3268 18 discriminator 8 view .LVU1661
 5278 00f4 C9F800B0 		str	fp, [r9]
3269:src/keys.c    ****     display();
 5279              		.loc 1 3269 5 is_stmt 1 discriminator 8 view .LVU1662
 5280 00f8 FFF7FEFF 		bl	display
 5281              	.LVL454:
3270:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5282              		.loc 1 3270 5 discriminator 8 view .LVU1663
 5283              		.loc 1 3270 18 is_stmt 0 discriminator 8 view .LVU1664
 5284 00fc C9F80060 		str	r6, [r9]
 5285              	.LVL455:
 5286              	.L929:
 5287              		.loc 1 3270 18 discriminator 8 view .LVU1665
 5288              	.LBE651:
3271:src/keys.c    ****   }
3272:src/keys.c    **** 
3273:src/keys.c    ****  no_display:
3274:src/keys.c    ****   JustDisplayed = 0;
 5289              		.loc 1 3274 3 is_stmt 1 view .LVU1666
 5290              		.loc 1 3274 17 is_stmt 0 view .LVU1667
 5291 0100 0023     		movs	r3, #0
 5292 0102 2360     		str	r3, [r4]
3275:src/keys.c    ****   watchdog();
 5293              		.loc 1 3275 13 is_stmt 1 view .LVU1668
 5294              	.L585:
3276:src/keys.c    **** }
 5295              		.loc 1 3276 1 is_stmt 0 view .LVU1669
 5296 0104 03B0     		add	sp, sp, #12
 5297              		.cfi_remember_state
 5298              		.cfi_def_cfa_offset 36
 5299              		@ sp needed
 5300 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5301              	.LVL456:
 5302              	.L1155:
 5303              		.cfi_restore_state
3033:src/keys.c    ****       /*
 5304              		.loc 1 3033 5 is_stmt 1 view .LVU1670
ARM GAS  /tmp/ccsJYix0.s 			page 177


3033:src/keys.c    ****       /*
 5305              		.loc 1 3033 9 is_stmt 0 view .LVU1671
 5306 010a FFF7FEFF 		bl	keyticks
 5307              	.LVL457:
3033:src/keys.c    ****       /*
 5308              		.loc 1 3033 8 view .LVU1672
 5309 010e 0128     		cmp	r0, #1
 5310 0110 1BDD     		ble	.L591
3037:src/keys.c    **** 	/*
 5311              		.loc 1 3037 7 is_stmt 1 view .LVU1673
3037:src/keys.c    **** 	/*
 5312              		.loc 1 3037 18 is_stmt 0 view .LVU1674
 5313 0112 564D     		ldr	r5, .L1253+12
 5314 0114 2868     		ldr	r0, [r5]
3037:src/keys.c    **** 	/*
 5315              		.loc 1 3037 10 view .LVU1675
 5316 0116 98B1     		cbz	r0, .L593
3041:src/keys.c    **** 	  /*
 5317              		.loc 1 3041 2 is_stmt 1 view .LVU1676
3041:src/keys.c    **** 	  /*
 5318              		.loc 1 3041 6 is_stmt 0 view .LVU1677
 5319 0118 5A4B     		ldr	r3, .L1253+36
3041:src/keys.c    **** 	  /*
 5320              		.loc 1 3041 5 view .LVU1678
 5321 011a 1E68     		ldr	r6, [r3]
 5322 011c 002E     		cmp	r6, #0
 5323 011e 00F06982 		beq	.L594
3045:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5324              		.loc 1 3045 4 is_stmt 1 view .LVU1679
3046:src/keys.c    **** 	    DispMsg = "RUN";
 5325              		.loc 1 3046 7 is_stmt 0 view .LVU1680
 5326 0122 40F23B12 		movw	r2, #315
3045:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5327              		.loc 1 3045 25 view .LVU1681
 5328 0126 0025     		movs	r5, #0
3046:src/keys.c    **** 	    DispMsg = "RUN";
 5329              		.loc 1 3046 7 view .LVU1682
 5330 0128 9042     		cmp	r0, r2
3045:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5331              		.loc 1 3045 25 view .LVU1683
 5332 012a 1D60     		str	r5, [r3]
3046:src/keys.c    **** 	    DispMsg = "RUN";
 5333              		.loc 1 3046 4 is_stmt 1 view .LVU1684
3046:src/keys.c    **** 	    DispMsg = "RUN";
 5334              		.loc 1 3046 7 is_stmt 0 view .LVU1685
 5335 012c 40F0A683 		bne	.L595
3047:src/keys.c    **** 	  }
 5336              		.loc 1 3047 6 is_stmt 1 view .LVU1686
3047:src/keys.c    **** 	  }
 5337              		.loc 1 3047 14 is_stmt 0 view .LVU1687
 5338 0130 554B     		ldr	r3, .L1253+40
 5339 0132 564A     		ldr	r2, .L1253+44
 5340 0134 1A60     		str	r2, [r3]
 5341              	.L596:
3053:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5342              		.loc 1 3053 4 is_stmt 1 view .LVU1688
 5343 0136 FFF7FEFF 		bl	display
ARM GAS  /tmp/ccsJYix0.s 			page 178


 5344              	.LVL458:
3054:src/keys.c    **** 	}
 5345              		.loc 1 3054 4 view .LVU1689
3054:src/keys.c    **** 	}
 5346              		.loc 1 3054 12 is_stmt 0 view .LVU1690
 5347 013a 4F4B     		ldr	r3, .L1253+24
 5348 013c 0122     		movs	r2, #1
 5349 013e 1A60     		str	r2, [r3]
 5350              	.L593:
3066:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5351              		.loc 1 3066 7 is_stmt 1 view .LVU1691
3066:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5352              		.loc 1 3066 11 is_stmt 0 view .LVU1692
 5353 0140 FFF7FEFF 		bl	keyticks
 5354              	.LVL459:
3066:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5355              		.loc 1 3066 10 view .LVU1693
 5356 0144 0C28     		cmp	r0, #12
 5357 0146 00F32B82 		bgt	.L1160
 5358              	.L591:
3075:src/keys.c    **** 
 5359              		.loc 1 3075 15 is_stmt 1 view .LVU1694
3081:src/keys.c    ****       JustStopped = 0;
 5360              		.loc 1 3081 5 view .LVU1695
3081:src/keys.c    ****       JustStopped = 0;
 5361              		.loc 1 3081 9 is_stmt 0 view .LVU1696
 5362 014a 474D     		ldr	r5, .L1253+8
3081:src/keys.c    ****       JustStopped = 0;
 5363              		.loc 1 3081 8 view .LVU1697
 5364 014c 2B68     		ldr	r3, [r5]
 5365 014e 002B     		cmp	r3, #0
 5366 0150 40F09E81 		bne	.L1161
 5367              	.L600:
3089:src/keys.c    ****       return;
 5368              		.loc 1 3089 5 is_stmt 1 view .LVU1698
3089:src/keys.c    ****       return;
 5369              		.loc 1 3089 9 is_stmt 0 view .LVU1699
 5370 0154 474E     		ldr	r6, .L1253+20
 5371 0156 3368     		ldr	r3, [r6]
3089:src/keys.c    ****       return;
 5372              		.loc 1 3089 8 view .LVU1700
 5373 0158 002B     		cmp	r3, #0
 5374 015a 00F08B81 		beq	.L1162
 5375              	.L602:
3122:src/keys.c    ****     {
 5376              		.loc 1 3122 3 is_stmt 1 view .LVU1701
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5377              		.loc 1 3172 5 view .LVU1702
3173:src/keys.c    **** #ifdef DM42
 5378              		.loc 1 3173 13 is_stmt 0 view .LVU1703
 5379 015e 464A     		ldr	r2, .L1253+24
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5380              		.loc 1 3172 18 view .LVU1704
 5381 0160 DFF83891 		ldr	r9, .L1253+60
3173:src/keys.c    **** #ifdef DM42
 5382              		.loc 1 3173 15 view .LVU1705
 5383 0164 B3FA83F3 		clz	r3, r3
ARM GAS  /tmp/ccsJYix0.s 			page 179


 5384 0168 5B09     		lsrs	r3, r3, #5
3173:src/keys.c    **** #ifdef DM42
 5385              		.loc 1 3173 13 view .LVU1706
 5386 016a 1360     		str	r3, [r2]
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5387              		.loc 1 3172 18 view .LVU1707
 5388 016c 0023     		movs	r3, #0
 5389 016e C9F80030 		str	r3, [r9]
3173:src/keys.c    **** #ifdef DM42
 5390              		.loc 1 3173 5 is_stmt 1 view .LVU1708
3175:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5391              		.loc 1 3175 5 view .LVU1709
 5392              	.L588:
3176:src/keys.c    ****     }
 5393              		.loc 1 3176 7 view .LVU1710
 5394              	.LVL460:
 5395              	.LBB652:
 5396              	.LBI652:
2830:src/keys.c    ****   const enum shifts shift = cur_shift();
 5397              		.loc 1 2830 12 view .LVU1711
 5398              	.LBB653:
2831:src/keys.c    ****   enum catalogues cat;
 5399              		.loc 1 2831 3 view .LVU1712
 5400              	.LBB654:
 5401              	.LBI654:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 5402              		.loc 1 86 13 view .LVU1713
 5403              	.LBB655:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5404              		.loc 1 87 2 view .LVU1714
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5405              		.loc 1 87 18 is_stmt 0 view .LVU1715
 5406 0172 FFF7FEFF 		bl	shift_down
 5407              	.LVL461:
  88:src/keys.c    **** }
 5408              		.loc 1 88 2 is_stmt 1 view .LVU1716
  88:src/keys.c    **** }
 5409              		.loc 1 88 52 is_stmt 0 view .LVU1717
 5410 0176 8246     		mov	r10, r0
 5411 0178 10B9     		cbnz	r0, .L620
 5412 017a 414B     		ldr	r3, .L1253+32
 5413 017c 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5414              	.L620:
 5415              	.LVL462:
  88:src/keys.c    **** }
 5416              		.loc 1 88 52 view .LVU1718
 5417              	.LBE655:
 5418              	.LBE654:
2832:src/keys.c    **** 
 5419              		.loc 1 2832 3 is_stmt 1 view .LVU1719
2834:src/keys.c    ****     /*
 5420              		.loc 1 2834 3 view .LVU1720
2834:src/keys.c    ****     /*
 5421              		.loc 1 2834 7 is_stmt 0 view .LVU1721
 5422 0180 3568     		ldr	r5, [r6]
2834:src/keys.c    ****     /*
 5423              		.loc 1 2834 6 view .LVU1722
ARM GAS  /tmp/ccsJYix0.s 			page 180


 5424 0182 002D     		cmp	r5, #0
 5425 0184 40F0F780 		bne	.L621
2834:src/keys.c    ****     /*
 5426              		.loc 1 2834 15 view .LVU1723
 5427 0188 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5428 018a 002B     		cmp	r3, #0
 5429 018c 40F0F380 		bne	.L621
2862:src/keys.c    **** #else
 5430              		.loc 1 2862 3 is_stmt 1 view .LVU1724
2862:src/keys.c    **** #else
 5431              		.loc 1 2862 6 is_stmt 0 view .LVU1725
 5432 0190 242C     		cmp	r4, #36
 5433 0192 00F0E283 		beq	.L1163
2872:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5434              		.loc 1 2872 2 is_stmt 1 view .LVU1726
2872:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5435              		.loc 1 2872 5 is_stmt 0 view .LVU1727
 5436 0196 272C     		cmp	r4, #39
 5437 0198 04D1     		bne	.L631
2872:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5438              		.loc 1 2872 15 view .LVU1728
 5439 019a 334B     		ldr	r3, .L1253+8
 5440 019c 1A68     		ldr	r2, [r3]
 5441 019e 002A     		cmp	r2, #0
 5442 01a0 40F0B284 		bne	.L1164
 5443              	.L631:
 5444 01a4 DFF8D880 		ldr	r8, .L1253+32
 5445 01a8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5446              	.L628:
2881:src/keys.c    **** 		CmdLineLength = 0;
 5447              		.loc 1 2881 2 is_stmt 1 view .LVU1729
2881:src/keys.c    **** 		CmdLineLength = 0;
 5448              		.loc 1 2881 5 is_stmt 0 view .LVU1730
 5449 01ac 33B1     		cbz	r3, .L634
2881:src/keys.c    **** 		CmdLineLength = 0;
 5450              		.loc 1 2881 26 view .LVU1731
 5451 01ae FFF7FEFF 		bl	keyticks
 5452              	.LVL463:
2881:src/keys.c    **** 		CmdLineLength = 0;
 5453              		.loc 1 2881 23 view .LVU1732
 5454 01b2 1E28     		cmp	r0, #30
2882:src/keys.c    **** 	/*
 5455              		.loc 1 2882 3 is_stmt 1 view .LVU1733
2882:src/keys.c    **** 	/*
 5456              		.loc 1 2882 17 is_stmt 0 view .LVU1734
 5457 01b4 C4BF     		itt	gt
 5458 01b6 0023     		movgt	r3, #0
 5459 01b8 88F81C30 		strbgt	r3, [r8, #28]
 5460              	.L634:
2887:src/keys.c    **** 		return process_confirm((const keycode)c);
 5461              		.loc 1 2887 2 is_stmt 1 view .LVU1735
2887:src/keys.c    **** 		return process_confirm((const keycode)c);
 5462              		.loc 1 2887 6 is_stmt 0 view .LVU1736
 5463 01bc 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2887:src/keys.c    **** 		return process_confirm((const keycode)c);
 5464              		.loc 1 2887 5 view .LVU1737
 5465 01c0 5907     		lsls	r1, r3, #29
ARM GAS  /tmp/ccsJYix0.s 			page 181


 5466 01c2 40F08583 		bne	.L1165
2890:src/keys.c    **** 		return process_arg((const keycode)c);
 5467              		.loc 1 2890 2 is_stmt 1 view .LVU1738
2890:src/keys.c    **** 		return process_arg((const keycode)c);
 5468              		.loc 1 2890 6 is_stmt 0 view .LVU1739
 5469 01c6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2890:src/keys.c    **** 		return process_arg((const keycode)c);
 5470              		.loc 1 2890 5 view .LVU1740
 5471 01ca 9A06     		lsls	r2, r3, #26
 5472 01cc 00F1DC83 		bmi	.L1166
2893:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5473              		.loc 1 2893 2 is_stmt 1 view .LVU1741
2893:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5474              		.loc 1 2893 6 is_stmt 0 view .LVU1742
 5475 01d0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2893:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5476              		.loc 1 2893 5 view .LVU1743
 5477 01d4 11F0010B 		ands	fp, r1, #1
 5478 01d8 40F01784 		bne	.L1167
2896:src/keys.c    **** 		return process_hyp((const keycode)c);
 5479              		.loc 1 2896 2 is_stmt 1 view .LVU1744
2896:src/keys.c    **** 		return process_hyp((const keycode)c);
 5480              		.loc 1 2896 5 is_stmt 0 view .LVU1745
 5481 01dc 11F02000 		ands	r0, r1, #32
 5482 01e0 40F05184 		bne	.L1168
2899:src/keys.c    **** 		return process_test((const keycode)c);
 5483              		.loc 1 2899 2 is_stmt 1 view .LVU1746
2899:src/keys.c    **** 		return process_test((const keycode)c);
 5484              		.loc 1 2899 12 is_stmt 0 view .LVU1747
 5485 01e4 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2899:src/keys.c    **** 		return process_test((const keycode)c);
 5486              		.loc 1 2899 5 view .LVU1748
 5487 01e8 BBF1070F 		cmp	fp, #7
 5488 01ec 40F0D983 		bne	.L1169
2902:src/keys.c    **** 		return process_status((const keycode)c);
 5489              		.loc 1 2902 2 is_stmt 1 view .LVU1749
2902:src/keys.c    **** 		return process_status((const keycode)c);
 5490              		.loc 1 2902 12 is_stmt 0 view .LVU1750
 5491 01f0 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2902:src/keys.c    **** 		return process_status((const keycode)c);
 5492              		.loc 1 2902 5 view .LVU1751
 5493 01f4 002B     		cmp	r3, #0
 5494 01f6 40F09C84 		bne	.L1170
2908:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5495              		.loc 1 2908 2 is_stmt 1 view .LVU1752
2908:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5496              		.loc 1 2908 5 is_stmt 0 view .LVU1753
 5497 01fa 292C     		cmp	r4, #41
 5498 01fc 00F05A85 		beq	.L1171
2912:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5499              		.loc 1 2912 2 is_stmt 1 view .LVU1754
2912:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5500              		.loc 1 2912 5 is_stmt 0 view .LVU1755
 5501 0200 2A2C     		cmp	r4, #42
 5502 0202 00F07A85 		beq	.L1172
2916:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5503              		.loc 1 2916 2 is_stmt 1 view .LVU1756
ARM GAS  /tmp/ccsJYix0.s 			page 182


2916:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5504              		.loc 1 2916 5 is_stmt 0 view .LVU1757
 5505 0206 2B2C     		cmp	r4, #43
 5506 0208 00F09985 		beq	.L1173
2925:src/keys.c    **** 		return process_arrow((const keycode)c);
 5507              		.loc 1 2925 2 is_stmt 1 view .LVU1758
2925:src/keys.c    **** 		return process_arrow((const keycode)c);
 5508              		.loc 1 2925 5 is_stmt 0 view .LVU1759
 5509 020c 4807     		lsls	r0, r1, #29
 5510 020e 00F1BC84 		bmi	.L1174
2933:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5511              		.loc 1 2933 2 is_stmt 1 view .LVU1760
2933:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5512              		.loc 1 2933 8 is_stmt 0 view .LVU1761
 5513 0212 E4B2     		uxtb	r4, r4
 5514              	.LVL464:
 5515              	.LBB656:
 5516              	.LBI656:
 257:src/keys.c    **** {
 5517              		.loc 1 257 24 is_stmt 1 view .LVU1762
 5518              	.LBB657:
 259:src/keys.c    ****   int i, col, max;
 5519              		.loc 1 259 3 view .LVU1763
 260:src/keys.c    ****   const struct _map {
 5520              		.loc 1 260 3 view .LVU1764
 261:src/keys.c    ****     unsigned char key, cat[3];
 5521              		.loc 1 261 3 view .LVU1765
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5522              		.loc 1 266 3 view .LVU1766
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5523              		.loc 1 266 6 is_stmt 0 view .LVU1767
 5524 0214 212C     		cmp	r4, #33
 5525 0216 00F0E484 		beq	.L1175
 269:src/keys.c    ****     /*
 5526              		.loc 1 269 3 is_stmt 1 view .LVU1768
 269:src/keys.c    ****     /*
 5527              		.loc 1 269 23 is_stmt 0 view .LVU1769
 5528 021a 1D4A     		ldr	r2, .L1253+48
 5529 021c D8F81430 		ldr	r3, [r8, #20]
 269:src/keys.c    ****     /*
 5530              		.loc 1 269 6 view .LVU1770
 5531 0220 1A42     		tst	r2, r3
 5532 0222 40F0E884 		bne	.L714
 5533              	.LBB658:
 273:src/keys.c    **** #ifdef DM42
 5534              		.loc 1 273 5 is_stmt 1 view .LVU1771
 300:src/keys.c    ****       /*
 5535              		.loc 1 300 5 view .LVU1772
 300:src/keys.c    ****       /*
 5536              		.loc 1 300 8 is_stmt 0 view .LVU1773
 5537 0226 242C     		cmp	r4, #36
 5538 0228 03D1     		bne	.L715
 300:src/keys.c    ****       /*
 5539              		.loc 1 300 18 view .LVU1774
 5540 022a BAF1020F 		cmp	r10, #2
 5541 022e 01F03683 		beq	.L963
 5542              	.L715:
ARM GAS  /tmp/ccsJYix0.s 			page 183


 315:src/keys.c    ****       /*
 5543              		.loc 1 315 5 is_stmt 1 view .LVU1775
 315:src/keys.c    ****       /*
 5544              		.loc 1 315 8 is_stmt 0 view .LVU1776
 5545 0232 BAF1030F 		cmp	r10, #3
 5546 0236 3AD1     		bne	.L722
 5547              	.L945:
 325:src/keys.c    **** #ifndef WINGUI
 5548              		.loc 1 325 5 is_stmt 1 view .LVU1777
 5549              	.LVL465:
 327:src/keys.c    **** #else
 5550              		.loc 1 327 5 view .LVU1778
 327:src/keys.c    **** #else
 5551              		.loc 1 327 23 is_stmt 0 view .LVU1779
 5552 0238 164B     		ldr	r3, .L1253+52
 5553 023a 1B68     		ldr	r3, [r3]
 5554 023c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 327:src/keys.c    **** #else
 5555              		.loc 1 327 27 view .LVU1780
 5556 0240 DA07     		lsls	r2, r3, #31
 5557 0242 00F12086 		bmi	.L964
 327:src/keys.c    **** #else
 5558              		.loc 1 327 73 view .LVU1781
 5559 0246 11F0020B 		ands	fp, r1, #2
 5560 024a 01F06081 		beq	.L1176
 325:src/keys.c    **** #ifndef WINGUI
 5561              		.loc 1 325 8 view .LVU1782
 5562 024e 124B     		ldr	r3, .L1253+56
 331:src/keys.c    ****   }
 5563              		.loc 1 331 9 view .LVU1783
 5564 0250 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 5565              		.loc 1 327 73 view .LVU1784
 5566 0252 4FF0020C 		mov	ip, #2
 5567              	.LVL466:
 5568              	.L717:
 327:src/keys.c    **** #else
 5569              		.loc 1 327 73 view .LVU1785
 5570              	.LBE658:
 375:src/keys.c    ****     if (cp->key == c) {
 5571              		.loc 1 375 3 is_stmt 1 view .LVU1786
 375:src/keys.c    ****     if (cp->key == c) {
 5572              		.loc 1 375 15 view .LVU1787
 5573 0256 181F     		subs	r0, r3, #4
 5574 0258 00EB8200 		add	r0, r0, r2, lsl #2
 5575              	.LBB659:
 327:src/keys.c    **** #else
 5576              		.loc 1 327 73 is_stmt 0 view .LVU1788
 5577 025c 0422     		movs	r2, #4
 5578              	.LVL467:
 327:src/keys.c    **** #else
 5579              		.loc 1 327 73 view .LVU1789
 5580 025e 21E0     		b	.L723
 5581              	.L1254:
 5582              		.align	2
 5583              	.L1253:
 5584 0260 00000000 		.word	.LANCHOR12
ARM GAS  /tmp/ccsJYix0.s 			page 184


 5585 0264 00000000 		.word	Pause
 5586 0268 00000000 		.word	JustStopped
 5587 026c 00000000 		.word	OpCode
 5588 0270 00000000 		.word	GoFast
 5589 0274 00000000 		.word	Running
 5590 0278 00000000 		.word	ShowRPN
 5591 027c 00000000 		.word	JustDisplayed
 5592 0280 00000000 		.word	StateWhileOn
 5593 0284 00000000 		.word	OpCodeDisplayPending
 5594 0288 00000000 		.word	DispMsg
 5595 028c 00000000 		.word	.LC0
 5596 0290 00080800 		.word	526336
 5597 0294 00000000 		.word	main_ram
 5598 0298 00000000 		.word	.LANCHOR11
 5599 029c 00000000 		.word	WasDataEntry
 5600              	.LVL468:
 5601              	.L1178:
 327:src/keys.c    **** #else
 5602              		.loc 1 327 73 view .LVU1790
 5603 02a0 13F8042F 		ldrb	r2, [r3, #4]!	@ zero_extendqisi2
 5604              	.LVL469:
 5605              	.L723:
 327:src/keys.c    **** #else
 5606              		.loc 1 327 73 view .LVU1791
 5607              	.LBE659:
 376:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5608              		.loc 1 376 5 is_stmt 1 view .LVU1792
 375:src/keys.c    ****     if (cp->key == c) {
 5609              		.loc 1 375 24 view .LVU1793
 375:src/keys.c    ****     if (cp->key == c) {
 5610              		.loc 1 375 15 view .LVU1794
 376:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5611              		.loc 1 376 8 is_stmt 0 view .LVU1795
 5612 02a4 9442     		cmp	r4, r2
 5613 02a6 00F0E384 		beq	.L1177
 375:src/keys.c    ****     if (cp->key == c) {
 5614              		.loc 1 375 3 view .LVU1796
 5615 02aa 9842     		cmp	r0, r3
 5616 02ac F8D1     		bne	.L1178
 5617              	.LVL470:
 5618              	.L722:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5619              		.loc 1 381 3 is_stmt 1 view .LVU1797
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5620              		.loc 1 381 6 is_stmt 0 view .LVU1798
 5621 02ae 0807     		lsls	r0, r1, #28
 5622 02b0 00F15A85 		bmi	.L728
 5623              	.LVL471:
 5624              	.L726:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5625              		.loc 1 381 6 view .LVU1799
 5626              	.LBE657:
 5627              	.LBE656:
2948:src/keys.c    **** 		return process_labellist((const keycode)c);
 5628              		.loc 1 2948 2 is_stmt 1 view .LVU1800
2948:src/keys.c    **** 		return process_labellist((const keycode)c);
 5629              		.loc 1 2948 6 is_stmt 0 view .LVU1801
ARM GAS  /tmp/ccsJYix0.s 			page 185


 5630 02b4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2948:src/keys.c    **** 		return process_labellist((const keycode)c);
 5631              		.loc 1 2948 5 view .LVU1802
 5632 02b8 5807     		lsls	r0, r3, #29
 5633 02ba 00F11D86 		bmi	.L1179
2951:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5634              		.loc 1 2951 2 is_stmt 1 view .LVU1803
2951:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5635              		.loc 1 2951 5 is_stmt 0 view .LVU1804
 5636 02be 1A07     		lsls	r2, r3, #28
 5637 02c0 00F13387 		bmi	.L1180
2954:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5638              		.loc 1 2954 2 is_stmt 1 view .LVU1805
2954:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5639              		.loc 1 2954 5 is_stmt 0 view .LVU1806
 5640 02c4 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 5641 02c8 002A     		cmp	r2, #0
 5642 02ca 40F0F187 		bne	.L1181
2957:src/keys.c    **** #ifndef INFRARED
 5643              		.loc 1 2957 2 is_stmt 1 view .LVU1807
2957:src/keys.c    **** #ifndef INFRARED
 5644              		.loc 1 2957 6 is_stmt 0 view .LVU1808
 5645 02ce 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2957:src/keys.c    **** #ifndef INFRARED
 5646              		.loc 1 2957 5 view .LVU1809
 5647 02d2 1007     		lsls	r0, r2, #28
 5648 02d4 01F12280 		bmi	.L1182
2970:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5649              		.loc 1 2970 2 is_stmt 1 view .LVU1810
2970:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5650              		.loc 1 2970 5 is_stmt 0 view .LVU1811
 5651 02d8 11F0020B 		ands	fp, r1, #2
 5652 02dc 41F0CE80 		bne	.L1183
2973:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5653              		.loc 1 2973 3 is_stmt 1 view .LVU1812
2973:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5654              		.loc 1 2973 24 is_stmt 0 view .LVU1813
 5655 02e0 0AF1FF31 		add	r1, r10, #-1
2973:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5656              		.loc 1 2973 6 view .LVU1814
 5657 02e4 C9B2     		uxtb	r1, r1
 5658 02e6 0129     		cmp	r1, #1
 5659 02e8 41F2A681 		bls	.L1184
2975:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5660              		.loc 1 2975 3 is_stmt 1 view .LVU1815
2975:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5661              		.loc 1 2975 6 is_stmt 0 view .LVU1816
 5662 02ec BAF1030F 		cmp	r10, #3
 5663 02f0 01F01C81 		beq	.L1185
2978:src/keys.c    **** 	}
 5664              		.loc 1 2978 3 is_stmt 1 view .LVU1817
 5665              	.LVL472:
 5666              	.LBB671:
 5667              	.LBI671:
 678:src/keys.c    **** {
 5668              		.loc 1 678 12 view .LVU1818
 5669              	.LBB672:
ARM GAS  /tmp/ccsJYix0.s 			page 186


 680:src/keys.c    **** 		// Row 1
 5670              		.loc 1 680 2 view .LVU1819
 727:src/keys.c    **** 	int op = op_map[lc];
 5671              		.loc 1 727 2 view .LVU1820
 5672              	.LBB673:
 5673              	.LBI673:
 136:src/keys.c    **** {
 5674              		.loc 1 136 12 view .LVU1821
 5675              	.LBB674:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5676              		.loc 1 138 2 view .LVU1822
 148:src/keys.c    **** }
 5677              		.loc 1 148 2 view .LVU1823
 148:src/keys.c    **** }
 5678              		.loc 1 148 2 is_stmt 0 view .LVU1824
 5679              	.LBE674:
 5680              	.LBE673:
 728:src/keys.c    **** 	
 5681              		.loc 1 728 2 is_stmt 1 view .LVU1825
 733:src/keys.c    **** 	  switch (c) {
 5682              		.loc 1 733 6 is_stmt 0 view .LVU1826
 5683 02f4 B049     		ldr	r1, .L1255
 5684              	.LBB677:
 5685              	.LBB675:
 148:src/keys.c    **** }
 5686              		.loc 1 148 23 view .LVU1827
 5687 02f6 B148     		ldr	r0, .L1255+4
 5688              	.LBE675:
 5689              	.LBE677:
 733:src/keys.c    **** 	  switch (c) {
 5690              		.loc 1 733 6 view .LVU1828
 5691 02f8 0968     		ldr	r1, [r1]
 5692              	.LBB678:
 5693              	.LBB676:
 148:src/keys.c    **** }
 5694              		.loc 1 148 23 view .LVU1829
 5695 02fa 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5696              	.LBE676:
 5697              	.LBE678:
 728:src/keys.c    **** 	
 5698              		.loc 1 728 17 view .LVU1830
 5699 02fe B048     		ldr	r0, .L1255+8
 733:src/keys.c    **** 	  switch (c) {
 5700              		.loc 1 733 6 view .LVU1831
 5701 0300 91F8E817 		ldrb	r1, [r1, #2024]	@ zero_extendqisi2
 728:src/keys.c    **** 	
 5702              		.loc 1 728 17 view .LVU1832
 5703 0304 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5704              	.LVL473:
 733:src/keys.c    **** 	  switch (c) {
 5705              		.loc 1 733 5 view .LVU1833
 5706 0308 C807     		lsls	r0, r1, #31
 728:src/keys.c    **** 	
 5707              		.loc 1 728 6 view .LVU1834
 5708 030a D346     		mov	fp, r10
 5709              	.LVL474:
 732:src/keys.c    **** 	if (UState.intm) {
ARM GAS  /tmp/ccsJYix0.s 			page 187


 5710              		.loc 1 732 2 is_stmt 1 view .LVU1835
 733:src/keys.c    **** 	  switch (c) {
 5711              		.loc 1 733 2 view .LVU1836
 733:src/keys.c    **** 	  switch (c) {
 5712              		.loc 1 733 5 is_stmt 0 view .LVU1837
 5713 030c 00F1BB81 		bmi	.L1186
 764:src/keys.c    **** 	  }
 5714              		.loc 1 764 12 is_stmt 1 view .LVU1838
 769:src/keys.c    **** #ifdef DM42
 5715              		.loc 1 769 2 view .LVU1839
 5716 0310 2D2C     		cmp	r4, #45
 5717 0312 00F29580 		bhi	.L646
 5718 0316 DFE814F0 		tbh	[pc, r4, lsl #1]
 5719              	.L951:
 5720 031a D00A     		.2byte	(.L898-.L951)/2
 5721 031c C90A     		.2byte	(.L899-.L951)/2
 5722 031e 9300     		.2byte	(.L646-.L951)/2
 5723 0320 2C02     		.2byte	(.L897-.L951)/2
 5724 0322 9300     		.2byte	(.L646-.L951)/2
 5725 0324 9300     		.2byte	(.L646-.L951)/2
 5726 0326 3802     		.2byte	(.L892-.L951)/2
 5727 0328 3802     		.2byte	(.L892-.L951)/2
 5728 032a 9300     		.2byte	(.L646-.L951)/2
 5729 032c 9300     		.2byte	(.L646-.L951)/2
 5730 032e 9300     		.2byte	(.L646-.L951)/2
 5731 0330 9300     		.2byte	(.L646-.L951)/2
 5732 0332 9300     		.2byte	(.L646-.L951)/2
 5733 0334 9300     		.2byte	(.L646-.L951)/2
 5734 0336 9300     		.2byte	(.L646-.L951)/2
 5735 0338 9300     		.2byte	(.L646-.L951)/2
 5736 033a 2102     		.2byte	(.L896-.L951)/2
 5737 033c 9300     		.2byte	(.L646-.L951)/2
 5738 033e 3802     		.2byte	(.L892-.L951)/2
 5739 0340 9300     		.2byte	(.L646-.L951)/2
 5740 0342 9300     		.2byte	(.L646-.L951)/2
 5741 0344 9300     		.2byte	(.L646-.L951)/2
 5742 0346 9300     		.2byte	(.L646-.L951)/2
 5743 0348 9300     		.2byte	(.L646-.L951)/2
 5744 034a 9300     		.2byte	(.L646-.L951)/2
 5745 034c 9300     		.2byte	(.L646-.L951)/2
 5746 034e 9300     		.2byte	(.L646-.L951)/2
 5747 0350 9300     		.2byte	(.L646-.L951)/2
 5748 0352 9300     		.2byte	(.L646-.L951)/2
 5749 0354 9300     		.2byte	(.L646-.L951)/2
 5750 0356 9300     		.2byte	(.L646-.L951)/2
 5751 0358 9300     		.2byte	(.L646-.L951)/2
 5752 035a 9300     		.2byte	(.L646-.L951)/2
 5753 035c 9300     		.2byte	(.L646-.L951)/2
 5754 035e 9300     		.2byte	(.L646-.L951)/2
 5755 0360 9300     		.2byte	(.L646-.L951)/2
 5756 0362 9300     		.2byte	(.L646-.L951)/2
 5757 0364 9300     		.2byte	(.L646-.L951)/2
 5758 0366 9300     		.2byte	(.L646-.L951)/2
 5759 0368 9300     		.2byte	(.L646-.L951)/2
 5760 036a 9300     		.2byte	(.L646-.L951)/2
 5761 036c 9300     		.2byte	(.L646-.L951)/2
 5762 036e 9300     		.2byte	(.L646-.L951)/2
ARM GAS  /tmp/ccsJYix0.s 			page 188


 5763 0370 9300     		.2byte	(.L646-.L951)/2
 5764 0372 6802     		.2byte	(.L895-.L951)/2
 5765 0374 9C0D     		.2byte	(.L901-.L951)/2
 5766              	.LVL475:
 5767              		.p2align 1
 5768              	.L621:
 769:src/keys.c    **** #ifdef DM42
 5769              		.loc 1 769 2 is_stmt 0 view .LVU1840
 5770              	.LBE672:
 5771              	.LBE671:
2838:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5772              		.loc 1 2838 5 is_stmt 1 view .LVU1841
2838:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5773              		.loc 1 2838 8 is_stmt 0 view .LVU1842
 5774 0376 242C     		cmp	r4, #36
 5775 0378 00F09180 		beq	.L623
2838:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5776              		.loc 1 2838 18 view .LVU1843
 5777 037c 272C     		cmp	r4, #39
 5778 037e 00F08E80 		beq	.L623
2848:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5779              		.loc 1 2848 5 is_stmt 1 view .LVU1844
2848:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5780              		.loc 1 2848 8 is_stmt 0 view .LVU1845
 5781 0382 622C     		cmp	r4, #98
 5782 0384 07D0     		beq	.L626
2849:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5783              		.loc 1 2849 7 is_stmt 1 view .LVU1846
2849:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5784              		.loc 1 2849 15 is_stmt 0 view .LVU1847
 5785 0386 8F4B     		ldr	r3, .L1255+12
2851:src/keys.c    ****     }
 5786              		.loc 1 2851 14 view .LVU1848
 5787 0388 8F4A     		ldr	r2, .L1255+16
2849:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5788              		.loc 1 2849 17 view .LVU1849
 5789 038a 0134     		adds	r4, r4, #1
 5790              	.LVL476:
2851:src/keys.c    ****     }
 5791              		.loc 1 2851 14 view .LVU1850
 5792 038c 0121     		movs	r1, #1
2849:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5793              		.loc 1 2849 15 view .LVU1851
 5794 038e DC74     		strb	r4, [r3, #19]
2850:src/keys.c    ****       GoFast = 1;
 5795              		.loc 1 2850 7 is_stmt 1 view .LVU1852
2850:src/keys.c    ****       GoFast = 1;
 5796              		.loc 1 2850 13 is_stmt 0 view .LVU1853
 5797 0390 0023     		movs	r3, #0
2851:src/keys.c    ****     }
 5798              		.loc 1 2851 14 view .LVU1854
 5799 0392 1160     		str	r1, [r2]
2850:src/keys.c    ****       GoFast = 1;
 5800              		.loc 1 2850 13 view .LVU1855
 5801 0394 3B70     		strb	r3, [r7]
2851:src/keys.c    ****     }
 5802              		.loc 1 2851 7 is_stmt 1 view .LVU1856
ARM GAS  /tmp/ccsJYix0.s 			page 189


 5803              	.LVL477:
 5804              	.L626:
2851:src/keys.c    ****     }
 5805              		.loc 1 2851 7 is_stmt 0 view .LVU1857
 5806              	.LBE653:
 5807              	.LBE652:
3221:src/keys.c    ****       break;
 5808              		.loc 1 3221 7 is_stmt 1 view .LVU1858
 5809 0396 FFF7FEFF 		bl	xeqprog
 5810              	.LVL478:
3222:src/keys.c    **** 
 5811              		.loc 1 3222 7 view .LVU1859
 5812 039a 3268     		ldr	r2, [r6]
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 5813              		.loc 1 3014 7 is_stmt 0 view .LVU1860
 5814 039c 0025     		movs	r5, #0
3222:src/keys.c    **** 
 5815              		.loc 1 3222 7 view .LVU1861
 5816 039e 4FF0310B 		mov	fp, #49
 5817              	.LVL479:
3261:src/keys.c    **** #ifndef CONSOLE
 5818              		.loc 1 3261 3 is_stmt 1 view .LVU1862
3261:src/keys.c    **** #ifndef CONSOLE
 5819              		.loc 1 3261 6 is_stmt 0 view .LVU1863
 5820 03a2 002A     		cmp	r2, #0
 5821 03a4 3FF488AE 		beq	.L632
 5822              	.L1149:
3261:src/keys.c    **** #ifndef CONSOLE
 5823              		.loc 1 3261 6 view .LVU1864
 5824 03a8 884C     		ldr	r4, .L1255+20
3274:src/keys.c    ****   watchdog();
 5825              		.loc 1 3274 3 is_stmt 1 view .LVU1865
3274:src/keys.c    ****   watchdog();
 5826              		.loc 1 3274 17 is_stmt 0 view .LVU1866
 5827 03aa 0023     		movs	r3, #0
 5828 03ac 2360     		str	r3, [r4]
3275:src/keys.c    **** }
 5829              		.loc 1 3275 13 is_stmt 1 view .LVU1867
 5830 03ae A9E6     		b	.L585
 5831              	.LVL480:
 5832              	.L1154:
3025:src/keys.c    ****     }
 5833              		.loc 1 3025 7 view .LVU1868
3173:src/keys.c    **** #ifdef DM42
 5834              		.loc 1 3173 15 is_stmt 0 view .LVU1869
 5835 03b0 874E     		ldr	r6, .L1255+24
3173:src/keys.c    **** #ifdef DM42
 5836              		.loc 1 3173 13 view .LVU1870
 5837 03b2 8849     		ldr	r1, .L1255+28
3173:src/keys.c    **** #ifdef DM42
 5838              		.loc 1 3173 15 view .LVU1871
 5839 03b4 3368     		ldr	r3, [r6]
3025:src/keys.c    ****     }
 5840              		.loc 1 3025 14 view .LVU1872
 5841 03b6 884A     		ldr	r2, .L1255+32
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5842              		.loc 1 3172 18 view .LVU1873
ARM GAS  /tmp/ccsJYix0.s 			page 190


 5843 03b8 DFF83492 		ldr	r9, .L1255+56
3173:src/keys.c    **** #ifdef DM42
 5844              		.loc 1 3173 15 view .LVU1874
 5845 03bc B3FA83F3 		clz	r3, r3
 5846 03c0 5B09     		lsrs	r3, r3, #5
3173:src/keys.c    **** #ifdef DM42
 5847              		.loc 1 3173 13 view .LVU1875
 5848 03c2 0B60     		str	r3, [r1]
3025:src/keys.c    ****     }
 5849              		.loc 1 3025 14 view .LVU1876
 5850 03c4 0023     		movs	r3, #0
 5851 03c6 1360     		str	r3, [r2]
3122:src/keys.c    ****     {
 5852              		.loc 1 3122 3 is_stmt 1 view .LVU1877
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5853              		.loc 1 3172 5 view .LVU1878
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5854              		.loc 1 3172 18 is_stmt 0 view .LVU1879
 5855 03c8 C9F80030 		str	r3, [r9]
3173:src/keys.c    **** #ifdef DM42
 5856              		.loc 1 3173 5 is_stmt 1 view .LVU1880
3175:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5857              		.loc 1 3175 5 view .LVU1881
 5858 03cc D1E6     		b	.L588
 5859              	.L606:
3175:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5860              		.loc 1 3175 5 is_stmt 0 view .LVU1882
 5861 03ce 804E     		ldr	r6, .L1255+24
3173:src/keys.c    **** #ifdef DM42
 5862              		.loc 1 3173 13 view .LVU1883
 5863 03d0 8049     		ldr	r1, .L1255+28
 5864 03d2 3268     		ldr	r2, [r6]
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5865              		.loc 1 3172 5 is_stmt 1 view .LVU1884
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5866              		.loc 1 3172 18 is_stmt 0 view .LVU1885
 5867 03d4 DFF81892 		ldr	r9, .L1255+56
3173:src/keys.c    **** #ifdef DM42
 5868              		.loc 1 3173 15 view .LVU1886
 5869 03d8 B2FA82F3 		clz	r3, r2
 5870 03dc 5B09     		lsrs	r3, r3, #5
3175:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5871              		.loc 1 3175 8 view .LVU1887
 5872 03de 342C     		cmp	r4, #52
3173:src/keys.c    **** #ifdef DM42
 5873              		.loc 1 3173 13 view .LVU1888
 5874 03e0 0B60     		str	r3, [r1]
3172:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5875              		.loc 1 3172 18 view .LVU1889
 5876 03e2 C9F80050 		str	r5, [r9]
3173:src/keys.c    **** #ifdef DM42
 5877              		.loc 1 3173 5 is_stmt 1 view .LVU1890
3175:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5878              		.loc 1 3175 5 view .LVU1891
3175:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5879              		.loc 1 3175 8 is_stmt 0 view .LVU1892
 5880 03e6 7FF4C4AE 		bne	.L588
ARM GAS  /tmp/ccsJYix0.s 			page 191


3179:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5881              		.loc 1 3179 7 is_stmt 1 view .LVU1893
3179:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5882              		.loc 1 3179 11 is_stmt 0 view .LVU1894
 5883 03ea 7C4B     		ldr	r3, .L1255+36
 5884 03ec 1868     		ldr	r0, [r3]
3179:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5885              		.loc 1 3179 10 view .LVU1895
 5886 03ee 10F47043 		ands	r3, r0, #61440
 5887 03f2 1FD0     		beq	.L904
3179:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5888              		.loc 1 3179 11 discriminator 1 view .LVU1896
 5889 03f4 B3F5704F 		cmp	r3, #61440
 5890              	.LBB1272:
3180:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5891              		.loc 1 3180 28 discriminator 1 view .LVU1897
 5892 03f8 C0F30723 		ubfx	r3, r0, #8, #8
 5893              	.LBE1272:
3179:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5894              		.loc 1 3179 11 discriminator 1 view .LVU1898
 5895 03fc 00F0AD80 		beq	.L905
 5896              	.LBB1275:
3180:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5897              		.loc 1 3180 2 is_stmt 1 view .LVU1899
3180:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5898              		.loc 1 3180 28 is_stmt 0 view .LVU1900
 5899 0400 A3F12004 		sub	r4, r3, #32
 5900              	.LVL481:
3180:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5901              		.loc 1 3180 28 view .LVU1901
 5902 0404 E4B2     		uxtb	r4, r4
 5903              	.LVL482:
3181:src/keys.c    **** 	  c = nd_opcode;
 5904              		.loc 1 3181 2 is_stmt 1 view .LVU1902
3181:src/keys.c    **** 	  c = nd_opcode;
 5905              		.loc 1 3181 5 is_stmt 0 view .LVU1903
 5906 0406 012C     		cmp	r4, #1
 5907 0408 40F28980 		bls	.L906
3181:src/keys.c    **** 	  c = nd_opcode;
 5908              		.loc 1 3181 53 discriminator 1 view .LVU1904
 5909 040c 6C2C     		cmp	r4, #108
 5910 040e 00F08680 		beq	.L906
3181:src/keys.c    **** 	  c = nd_opcode;
 5911              		.loc 1 3181 74 discriminator 2 view .LVU1905
 5912 0412 242C     		cmp	r4, #36
 5913 0414 00F08380 		beq	.L906
3183:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5914              		.loc 1 3183 7 is_stmt 1 view .LVU1906
3183:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5915              		.loc 1 3183 32 is_stmt 0 view .LVU1907
 5916 0418 A4F12D01 		sub	r1, r4, #45
3183:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5917              		.loc 1 3183 10 view .LVU1908
 5918 041c 0629     		cmp	r1, #6
 5919 041e 00F22183 		bhi	.L908
3184:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5920              		.loc 1 3184 4 is_stmt 1 view .LVU1909
ARM GAS  /tmp/ccsJYix0.s 			page 192


3184:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5921              		.loc 1 3184 25 is_stmt 0 view .LVU1910
 5922 0422 4D3B     		subs	r3, r3, #77
3184:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5923              		.loc 1 3184 16 view .LVU1911
 5924 0424 88F80F30 		strb	r3, [r8, #15]
3185:src/keys.c    **** 	}
 5925              		.loc 1 3185 4 is_stmt 1 view .LVU1912
 5926              	.LVL483:
3185:src/keys.c    **** 	}
 5927              		.loc 1 3185 4 is_stmt 0 view .LVU1913
 5928              	.LBE1275:
3199:src/keys.c    ****     case STATE_SST:
 5929              		.loc 1 3199 5 is_stmt 1 view .LVU1914
 5930              	.LBB1276:
3185:src/keys.c    **** 	}
 5931              		.loc 1 3185 6 is_stmt 0 view .LVU1915
 5932 0428 4FF0330B 		mov	fp, #51
 5933 042c 41E6     		b	.L616
 5934              	.LVL484:
 5935              	.L1153:
3185:src/keys.c    **** 	}
 5936              		.loc 1 3185 6 view .LVU1916
 5937              	.LBE1276:
3020:src/keys.c    ****     }
 5938              		.loc 1 3020 7 is_stmt 1 view .LVU1917
 5939 042e FFF7FEFF 		bl	xeq_xrom
 5940              	.LVL485:
3020:src/keys.c    ****     }
 5941              		.loc 1 3020 7 is_stmt 0 view .LVU1918
 5942 0432 F1E5     		b	.L586
 5943              	.L904:
3193:src/keys.c    ****       }      
 5944              		.loc 1 3193 2 is_stmt 1 view .LVU1919
 5945              	.LBB1277:
 5946              	.LBB1278:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5947              		.loc 1 625 5 is_stmt 0 view .LVU1920
 5948 0434 C0F30723 		ubfx	r3, r0, #8, #8
 5949 0438 012B     		cmp	r3, #1
 5950              	.LBE1278:
 5951              	.LBE1277:
3193:src/keys.c    ****       }      
 5952              		.loc 1 3193 6 view .LVU1921
 5953 043a 8346     		mov	fp, r0
 5954              	.LVL486:
 5955              	.LBB1282:
 5956              	.LBI1277:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5957              		.loc 1 624 12 is_stmt 1 view .LVU1922
 5958              	.LBB1279:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5959              		.loc 1 625 2 view .LVU1923
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5960              		.loc 1 625 5 is_stmt 0 view .LVU1924
 5961 043c 00F09180 		beq	.L946
 5962              	.LVL487:
ARM GAS  /tmp/ccsJYix0.s 			page 193


 5963              	.L646:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5964              		.loc 1 625 5 view .LVU1925
 5965              	.LBE1279:
 5966              	.LBE1282:
3199:src/keys.c    ****     case STATE_SST:
 5967              		.loc 1 3199 5 is_stmt 1 view .LVU1926
 5968 0440 ABF12B03 		sub	r3, fp, #43
 5969 0444 082B     		cmp	r3, #8
 5970 0446 00F2E580 		bhi	.L910
 5971 044a 01A2     		adr	r2, .L912
 5972 044c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5973              		.p2align 2
 5974              	.L912:
 5975 0450 7F040000 		.word	.L917+1
 5976 0454 7F040000 		.word	.L917+1
 5977 0458 15060000 		.word	.L910+1
 5978 045c ED040000 		.word	.L826+1
 5979 0460 DB040000 		.word	.L822+1
 5980 0464 05050000 		.word	.L819+1
 5981 0468 97030000 		.word	.L626+1
 5982 046c 9B050000 		.word	.L911+1
 5983 0470 9B050000 		.word	.L911+1
 5984              	.LVL488:
 5985              		.p2align 1
 5986              	.L1162:
3089:src/keys.c    ****       return;
 5987              		.loc 1 3089 21 is_stmt 0 discriminator 1 view .LVU1927
 5988 0474 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3089:src/keys.c    ****       return;
 5989              		.loc 1 3089 18 discriminator 1 view .LVU1928
 5990 0476 002A     		cmp	r2, #0
 5991 0478 7FF471AE 		bne	.L602
 5992 047c 42E6     		b	.L585
 5993              	.LVL489:
 5994              	.L917:
3226:src/keys.c    **** 	set_window(c);
 5995              		.loc 1 3226 7 is_stmt 1 view .LVU1929
3226:src/keys.c    **** 	set_window(c);
 5996              		.loc 1 3226 12 is_stmt 0 view .LVU1930
 5997 047e FFF7FEFF 		bl	is_bad_cmdline
 5998              	.LVL490:
3226:src/keys.c    **** 	set_window(c);
 5999              		.loc 1 3226 10 view .LVU1931
 6000 0482 0546     		mov	r5, r0
 6001 0484 0028     		cmp	r0, #0
 6002 0486 00F0F481 		beq	.L921
 6003 048a 3268     		ldr	r2, [r6]
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6004              		.loc 1 3014 7 view .LVU1932
 6005 048c 0025     		movs	r5, #0
 6006 048e 10E6     		b	.L616
 6007              	.LVL491:
 6008              	.L1161:
3081:src/keys.c    ****       JustStopped = 0;
 6009              		.loc 1 3081 25 discriminator 1 view .LVU1933
 6010 0490 FFF7FEFF 		bl	is_key_pressed
ARM GAS  /tmp/ccsJYix0.s 			page 194


 6011              	.LVL492:
3081:src/keys.c    ****       JustStopped = 0;
 6012              		.loc 1 3081 21 discriminator 1 view .LVU1934
 6013 0494 0028     		cmp	r0, #0
 6014 0496 7FF45DAE 		bne	.L600
3082:src/keys.c    ****     }
 6015              		.loc 1 3082 7 is_stmt 1 view .LVU1935
3082:src/keys.c    ****     }
 6016              		.loc 1 3082 19 is_stmt 0 view .LVU1936
 6017 049a 2860     		str	r0, [r5]
 6018 049c 5AE6     		b	.L600
 6019              	.LVL493:
 6020              	.L623:
 6021              	.LBB1283:
 6022              	.LBB1221:
2839:src/keys.c    **** 	set_pc(0);
 6023              		.loc 1 2839 7 is_stmt 1 view .LVU1937
2839:src/keys.c    **** 	set_pc(0);
 6024              		.loc 1 2839 11 is_stmt 0 view .LVU1938
 6025 049e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
2839:src/keys.c    **** 	set_pc(0);
 6026              		.loc 1 2839 10 view .LVU1939
 6027 04a0 4BB1     		cbz	r3, .L625
2839:src/keys.c    **** 	set_pc(0);
 6028              		.loc 1 2839 20 view .LVU1940
 6029 04a2 454B     		ldr	r3, .L1255
 6030 04a4 1B68     		ldr	r3, [r3]
 6031 04a6 B3F8E037 		ldrh	r3, [r3, #2016]
2839:src/keys.c    **** 	set_pc(0);
 6032              		.loc 1 2839 17 view .LVU1941
 6033 04aa 9B0B     		lsrs	r3, r3, #14
 6034 04ac 032B     		cmp	r3, #3
 6035 04ae 02D1     		bne	.L625
2840:src/keys.c    ****       Pause = 0;
 6036              		.loc 1 2840 2 is_stmt 1 view .LVU1942
 6037 04b0 0020     		movs	r0, #0
 6038 04b2 FFF7FEFF 		bl	set_pc
 6039              	.LVL494:
 6040              	.L625:
2841:src/keys.c    ****       xeq_xrom();
 6041              		.loc 1 2841 7 view .LVU1943
2841:src/keys.c    ****       xeq_xrom();
 6042              		.loc 1 2841 13 is_stmt 0 view .LVU1944
 6043 04b6 0025     		movs	r5, #0
 6044 04b8 3D70     		strb	r5, [r7]
2842:src/keys.c    ****       set_running_off();
 6045              		.loc 1 2842 7 is_stmt 1 view .LVU1945
 6046 04ba FFF7FEFF 		bl	xeq_xrom
 6047              	.LVL495:
2843:src/keys.c    ****       DispMsg = "Stopped";
 6048              		.loc 1 2843 7 view .LVU1946
 6049 04be FFF7FEFF 		bl	set_running_off
 6050              	.LVL496:
2844:src/keys.c    ****       State2.disp_freeze = 0;
 6051              		.loc 1 2844 7 view .LVU1947
2845:src/keys.c    ****       return STATE_UNFINISHED;
 6052              		.loc 1 2845 26 is_stmt 0 view .LVU1948
ARM GAS  /tmp/ccsJYix0.s 			page 195


 6053 04c2 404B     		ldr	r3, .L1255+12
2844:src/keys.c    ****       State2.disp_freeze = 0;
 6054              		.loc 1 2844 15 view .LVU1949
 6055 04c4 4648     		ldr	r0, .L1255+40
2845:src/keys.c    ****       return STATE_UNFINISHED;
 6056              		.loc 1 2845 26 view .LVU1950
 6057 04c6 D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
2844:src/keys.c    ****       State2.disp_freeze = 0;
 6058              		.loc 1 2844 15 view .LVU1951
 6059 04c8 464C     		ldr	r4, .L1255+44
 6060              	.LVL497:
2844:src/keys.c    ****       State2.disp_freeze = 0;
 6061              		.loc 1 2844 15 view .LVU1952
 6062 04ca 3268     		ldr	r2, [r6]
 6063 04cc 0460     		str	r4, [r0]
2845:src/keys.c    ****       return STATE_UNFINISHED;
 6064              		.loc 1 2845 7 is_stmt 1 view .LVU1953
2845:src/keys.c    ****       return STATE_UNFINISHED;
 6065              		.loc 1 2845 26 is_stmt 0 view .LVU1954
 6066 04ce 65F30411 		bfi	r1, r5, #4, #1
 6067 04d2 D975     		strb	r1, [r3, #23]
2846:src/keys.c    ****     }
 6068              		.loc 1 2846 7 is_stmt 1 view .LVU1955
2846:src/keys.c    ****     }
 6069              		.loc 1 2846 14 is_stmt 0 view .LVU1956
 6070 04d4 4FF0330B 		mov	fp, #51
 6071 04d8 EBE5     		b	.L616
 6072              	.LVL498:
 6073              	.L822:
2846:src/keys.c    ****     }
 6074              		.loc 1 2846 14 view .LVU1957
 6075              	.LBE1221:
 6076              	.LBE1283:
3207:src/keys.c    ****       break;
 6077              		.loc 1 3207 7 is_stmt 1 view .LVU1958
 6078 04da 4FF0FF30 		mov	r0, #-1
 6079 04de FFF7FEFF 		bl	xeq_sst_bst
 6080              	.LVL499:
3208:src/keys.c    **** 
 6081              		.loc 1 3208 7 view .LVU1959
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6082              		.loc 1 3014 7 is_stmt 0 view .LVU1960
 6083 04e2 0025     		movs	r5, #0
 6084 04e4 3268     		ldr	r2, [r6]
3208:src/keys.c    **** 
 6085              		.loc 1 3208 7 view .LVU1961
 6086 04e6 4FF02F0B 		mov	fp, #47
 6087 04ea E2E5     		b	.L616
 6088              	.L826:
3201:src/keys.c    ****       OpCodeDisplayPending = 0;
 6089              		.loc 1 3201 7 is_stmt 1 view .LVU1962
3202:src/keys.c    ****       xeq_sst_bst(0);
 6090              		.loc 1 3202 28 is_stmt 0 view .LVU1963
 6091 04ec 3E4A     		ldr	r2, .L1255+48
3201:src/keys.c    ****       OpCodeDisplayPending = 0;
 6092              		.loc 1 3201 14 view .LVU1964
 6093 04ee 3A49     		ldr	r1, .L1255+32
ARM GAS  /tmp/ccsJYix0.s 			page 196


3202:src/keys.c    ****       xeq_sst_bst(0);
 6094              		.loc 1 3202 28 view .LVU1965
 6095 04f0 0020     		movs	r0, #0
3201:src/keys.c    ****       OpCodeDisplayPending = 0;
 6096              		.loc 1 3201 14 view .LVU1966
 6097 04f2 2E23     		movs	r3, #46
3202:src/keys.c    ****       xeq_sst_bst(0);
 6098              		.loc 1 3202 28 view .LVU1967
 6099 04f4 1060     		str	r0, [r2]
3201:src/keys.c    ****       OpCodeDisplayPending = 0;
 6100              		.loc 1 3201 14 view .LVU1968
 6101 04f6 0B60     		str	r3, [r1]
3202:src/keys.c    ****       xeq_sst_bst(0);
 6102              		.loc 1 3202 7 is_stmt 1 view .LVU1969
3203:src/keys.c    ****       break;
 6103              		.loc 1 3203 7 view .LVU1970
3204:src/keys.c    **** 
 6104              		.loc 1 3204 7 is_stmt 0 view .LVU1971
 6105 04f8 9B46     		mov	fp, r3
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6106              		.loc 1 3014 7 view .LVU1972
 6107 04fa 0546     		mov	r5, r0
3203:src/keys.c    ****       break;
 6108              		.loc 1 3203 7 view .LVU1973
 6109 04fc FFF7FEFF 		bl	xeq_sst_bst
 6110              	.LVL500:
3204:src/keys.c    **** 
 6111              		.loc 1 3204 7 is_stmt 1 view .LVU1974
 6112 0500 3268     		ldr	r2, [r6]
 6113 0502 D6E5     		b	.L616
 6114              	.L819:
3211:src/keys.c    **** 	delprog();
 6115              		.loc 1 3211 7 view .LVU1975
3211:src/keys.c    **** 	delprog();
 6116              		.loc 1 3211 11 is_stmt 0 view .LVU1976
 6117 0504 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3211:src/keys.c    **** 	delprog();
 6118              		.loc 1 3211 10 view .LVU1977
 6119 0508 6C06     		lsls	r4, r5, #25
 6120 050a 40F12B81 		bpl	.L918
3213:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6121              		.loc 1 3213 12 is_stmt 1 view .LVU1978
3213:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6122              		.loc 1 3213 15 is_stmt 0 view .LVU1979
 6123 050e 15F00805 		ands	r5, r5, #8
 6124 0512 40F09680 		bne	.L919
 6125 0516 3268     		ldr	r2, [r6]
 6126 0518 4FF0300B 		mov	fp, #48
 6127 051c C9E5     		b	.L616
 6128              	.LVL501:
 6129              	.L906:
 6130              	.LBB1284:
3182:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6131              		.loc 1 3182 4 is_stmt 1 view .LVU1980
 6132 051e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3182:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6133              		.loc 1 3182 6 is_stmt 0 view .LVU1981
ARM GAS  /tmp/ccsJYix0.s 			page 197


 6134 0522 8346     		mov	fp, r0
 6135              	.LVL502:
 6136              	.L673:
3182:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6137              		.loc 1 3182 6 view .LVU1982
 6138              	.LBE1284:
3235:src/keys.c    **** 	NonProgrammable = 0;
 6139              		.loc 1 3235 7 is_stmt 1 view .LVU1983
3235:src/keys.c    **** 	NonProgrammable = 0;
 6140              		.loc 1 3235 10 is_stmt 0 view .LVU1984
 6141 0524 5906     		lsls	r1, r3, #25
 6142 0526 00F1BA81 		bmi	.L1187
 6143              	.L939:
3235:src/keys.c    **** 	NonProgrammable = 0;
 6144              		.loc 1 3235 26 view .LVU1985
 6145 052a 304B     		ldr	r3, .L1255+52
 6146 052c 1A68     		ldr	r2, [r3]
 6147 052e 002A     		cmp	r2, #0
 6148 0530 41F0BE84 		bne	.L1188
 6149              	.LVL503:
 6150              	.L927:
3257:src/keys.c    ****       }
 6151              		.loc 1 3257 2 is_stmt 1 view .LVU1986
 6152 0534 FFF7FEFF 		bl	stoprog
 6153              	.LVL504:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6154              		.loc 1 3014 7 is_stmt 0 view .LVU1987
 6155 0538 0025     		movs	r5, #0
 6156 053a 3268     		ldr	r2, [r6]
 6157 053c B9E5     		b	.L616
 6158              	.LVL505:
 6159              	.L1157:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6160              		.loc 1 3014 7 view .LVU1988
 6161 053e 244E     		ldr	r6, .L1255+24
 6162 0540 3368     		ldr	r3, [r6]
 6163 0542 0CE6     		b	.L602
 6164              	.L1156:
3103:src/keys.c    ****       finish_RPN(); // RPN
 6165              		.loc 1 3103 7 is_stmt 1 view .LVU1989
 6166 0544 8D20     		movs	r0, #141
 6167 0546 FFF7FEFF 		bl	clr_dot
 6168              	.LVL506:
3104:src/keys.c    ****     }
 6169              		.loc 1 3104 7 view .LVU1990
 6170 054a FFF7FEFF 		bl	finish_RPN
 6171              	.LVL507:
 6172 054e 7AE5     		b	.L604
 6173              	.LVL508:
 6174              	.L615:
3164:src/keys.c    ****     }
 6175              		.loc 1 3164 7 view .LVU1991
 6176 0550 FFF7FEFF 		bl	finish_RPN
 6177              	.LVL509:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6178              		.loc 1 3014 7 is_stmt 0 view .LVU1992
 6179 0554 0025     		movs	r5, #0
ARM GAS  /tmp/ccsJYix0.s 			page 198


 6180 0556 3268     		ldr	r2, [r6]
 6181 0558 ABE5     		b	.L616
 6182              	.LVL510:
 6183              	.L905:
3193:src/keys.c    ****       }      
 6184              		.loc 1 3193 2 is_stmt 1 view .LVU1993
 6185              	.LBB1285:
 6186              	.LBB1280:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6187              		.loc 1 625 5 is_stmt 0 view .LVU1994
 6188 055a 012B     		cmp	r3, #1
 6189              	.LBE1280:
 6190              	.LBE1285:
3193:src/keys.c    ****       }      
 6191              		.loc 1 3193 6 view .LVU1995
 6192 055c 8346     		mov	fp, r0
 6193              	.LVL511:
 6194              	.LBB1286:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6195              		.loc 1 624 12 is_stmt 1 view .LVU1996
 6196              	.LBB1281:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6197              		.loc 1 625 2 view .LVU1997
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6198              		.loc 1 625 5 is_stmt 0 view .LVU1998
 6199 055e 40F08280 		bne	.L1189
 6200              	.LVL512:
 6201              	.L946:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6202              		.loc 1 625 5 view .LVU1999
 6203 0562 FFF7FEFF 		bl	check_confirm.part.0
 6204              	.LVL513:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6205              		.loc 1 625 5 view .LVU2000
 6206 0566 8346     		mov	fp, r0
 6207              	.LVL514:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6208              		.loc 1 625 5 view .LVU2001
 6209 0568 6AE7     		b	.L646
 6210              	.LVL515:
 6211              	.L607:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6212              		.loc 1 625 5 view .LVU2002
 6213              	.LBE1281:
 6214              	.LBE1286:
3145:src/keys.c    **** #ifndef CONSOLE
 6215              		.loc 1 3145 7 is_stmt 1 view .LVU2003
 6216 056a 1A4B     		ldr	r3, .L1255+28
 6217 056c 8D20     		movs	r0, #141
 6218 056e 1968     		ldr	r1, [r3]
 6219 0570 FFF7FEFF 		bl	dot
 6220              	.LVL516:
3147:src/keys.c    **** 	if (!WasDataEntry) {
 6221              		.loc 1 3147 7 view .LVU2004
3147:src/keys.c    **** 	if (!WasDataEntry) {
 6222              		.loc 1 3147 11 is_stmt 0 view .LVU2005
 6223 0574 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccsJYix0.s 			page 199


3147:src/keys.c    **** 	if (!WasDataEntry) {
 6224              		.loc 1 3147 10 view .LVU2006
 6225 0578 9806     		lsls	r0, r3, #26
 6226 057a 3FF5C3AD 		bmi	.L585
3148:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6227              		.loc 1 3148 2 is_stmt 1 view .LVU2007
3148:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6228              		.loc 1 3148 6 is_stmt 0 view .LVU2008
 6229 057e 1C4B     		ldr	r3, .L1255+56
3148:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6230              		.loc 1 3148 5 view .LVU2009
 6231 0580 1B68     		ldr	r3, [r3]
 6232 0582 002B     		cmp	r3, #0
 6233 0584 40F08681 		bne	.L618
3150:src/keys.c    **** 	}
 6234              		.loc 1 3150 4 is_stmt 1 view .LVU2010
 6235              		.loc 1 3276 1 is_stmt 0 view .LVU2011
 6236 0588 03B0     		add	sp, sp, #12
 6237              		.cfi_remember_state
 6238              		.cfi_def_cfa_offset 36
 6239              		@ sp needed
 6240 058a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6241              		.cfi_restore 14
 6242              		.cfi_restore 11
 6243              		.cfi_restore 10
 6244              		.cfi_restore 9
 6245              		.cfi_restore 8
 6246              		.cfi_restore 7
 6247              		.cfi_restore 6
 6248              		.cfi_restore 5
 6249              		.cfi_restore 4
 6250              		.cfi_def_cfa_offset 0
3150:src/keys.c    **** 	}
 6251              		.loc 1 3150 4 view .LVU2012
 6252 058e FFF7FEBF 		b	display
 6253              	.LVL517:
 6254              	.L1158:
 6255              		.cfi_restore_state
3133:src/keys.c    ****       else {
 6256              		.loc 1 3133 2 is_stmt 1 view .LVU2013
 6257 0592 FFF7FEFF 		bl	xeq_sst_bst
 6258              	.LVL518:
 6259 0596 0E4E     		ldr	r6, .L1255+24
 6260 0598 81E5     		b	.L609
 6261              	.LVL519:
 6262              	.L911:
3133:src/keys.c    ****       else {
 6263              		.loc 1 3133 2 is_stmt 0 view .LVU2014
 6264 059a 3268     		ldr	r2, [r6]
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6265              		.loc 1 3014 7 view .LVU2015
 6266 059c 0025     		movs	r5, #0
 6267 059e 88E5     		b	.L616
 6268              	.LVL520:
 6269              	.L1160:
3066:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6270              		.loc 1 3066 28 discriminator 1 view .LVU2016
ARM GAS  /tmp/ccsJYix0.s 			page 200


 6271 05a0 FFF7FEFF 		bl	shift_down
 6272              	.LVL521:
3066:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6273              		.loc 1 3066 25 discriminator 1 view .LVU2017
 6274 05a4 0028     		cmp	r0, #0
 6275 05a6 3FF4D0AD 		beq	.L591
3068:src/keys.c    ****       }
 6276              		.loc 1 3068 2 is_stmt 1 view .LVU2018
3068:src/keys.c    ****       }
 6277              		.loc 1 3068 16 is_stmt 0 view .LVU2019
 6278 05aa 064B     		ldr	r3, .L1255+12
 6279 05ac 0022     		movs	r2, #0
 6280 05ae 1A74     		strb	r2, [r3, #16]
 6281 05b0 CBE5     		b	.L591
 6282              	.L1159:
3068:src/keys.c    ****       }
 6283              		.loc 1 3068 16 view .LVU2020
 6284 05b2 074E     		ldr	r6, .L1255+24
 6285 05b4 73E5     		b	.L609
 6286              	.L1256:
 6287 05b6 00BF     		.align	2
 6288              	.L1255:
 6289 05b8 00000000 		.word	main_ram
 6290 05bc 00000000 		.word	.LANCHOR18
 6291 05c0 00000000 		.word	.LANCHOR22
 6292 05c4 00000000 		.word	StateWhileOn
 6293 05c8 00000000 		.word	GoFast
 6294 05cc 00000000 		.word	JustDisplayed
 6295 05d0 00000000 		.word	Running
 6296 05d4 00000000 		.word	ShowRPN
 6297 05d8 00000000 		.word	OpCode
 6298 05dc 00000000 		.word	nd_opcode
 6299 05e0 00000000 		.word	DispMsg
 6300 05e4 0C000000 		.word	.LC2
 6301 05e8 00000000 		.word	OpCodeDisplayPending
 6302 05ec 00000000 		.word	NonProgrammable
 6303 05f0 00000000 		.word	WasDataEntry
 6304              	.L594:
3056:src/keys.c    **** 	  /*
 6305              		.loc 1 3056 10 is_stmt 1 view .LVU2021
3056:src/keys.c    **** 	  /*
 6306              		.loc 1 3056 14 is_stmt 0 view .LVU2022
 6307 05f4 FFF7FEFF 		bl	keyticks
 6308              	.LVL522:
3056:src/keys.c    **** 	  /*
 6309              		.loc 1 3056 13 view .LVU2023
 6310 05f8 0C28     		cmp	r0, #12
 6311 05fa 7FF7A1AD 		ble	.L593
3060:src/keys.c    **** 	  message("NULL", CNULL);
 6312              		.loc 1 3060 4 is_stmt 1 view .LVU2024
3061:src/keys.c    **** 	  // Force display update on key-up
 6313              		.loc 1 3061 4 is_stmt 0 view .LVU2025
 6314 05fe AB48     		ldr	r0, .L1257
3060:src/keys.c    **** 	  message("NULL", CNULL);
 6315              		.loc 1 3060 11 view .LVU2026
 6316 0600 2E60     		str	r6, [r5]
3061:src/keys.c    **** 	  // Force display update on key-up
ARM GAS  /tmp/ccsJYix0.s 			page 201


 6317              		.loc 1 3061 4 is_stmt 1 view .LVU2027
 6318 0602 3146     		mov	r1, r6
 6319 0604 FFF7FEFF 		bl	message
 6320              	.LVL523:
3063:src/keys.c    **** 	}
 6321              		.loc 1 3063 4 view .LVU2028
3063:src/keys.c    **** 	}
 6322              		.loc 1 3063 21 is_stmt 0 view .LVU2029
 6323 0608 A94B     		ldr	r3, .L1257+4
 6324 060a DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 6325 060c 66F34512 		bfi	r2, r6, #5, #1
 6326 0610 DA75     		strb	r2, [r3, #23]
 6327 0612 95E5     		b	.L593
 6328              	.LVL524:
 6329              	.L910:
3235:src/keys.c    **** 	NonProgrammable = 0;
 6330              		.loc 1 3235 11 view .LVU2030
 6331 0614 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6332 0618 A64A     		ldr	r2, .L1257+8
3235:src/keys.c    **** 	NonProgrammable = 0;
 6333              		.loc 1 3235 10 view .LVU2031
 6334 061a 5B06     		lsls	r3, r3, #25
 6335 061c 5846     		mov	r0, fp
 6336              	.LVL525:
3235:src/keys.c    **** 	NonProgrammable = 0;
 6337              		.loc 1 3235 7 is_stmt 1 view .LVU2032
3235:src/keys.c    **** 	NonProgrammable = 0;
 6338              		.loc 1 3235 10 is_stmt 0 view .LVU2033
 6339 061e 41F18582 		bpl	.L1141
 6340              	.L926:
 6341              	.LVL526:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6342              		.loc 1 3236 2 is_stmt 1 view .LVU2034
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6343              		.loc 1 3236 18 is_stmt 0 view .LVU2035
 6344 0622 0023     		movs	r3, #0
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6345              		.loc 1 3237 5 view .LVU2036
 6346 0624 1428     		cmp	r0, #20
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6347              		.loc 1 3236 18 view .LVU2037
 6348 0626 1360     		str	r3, [r2]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6349              		.loc 1 3237 2 is_stmt 1 view .LVU2038
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6350              		.loc 1 3237 5 is_stmt 0 view .LVU2039
 6351 0628 24D8     		bhi	.L923
3238:src/keys.c    **** 	    // Data entry key
 6352              		.loc 1 3238 4 is_stmt 1 view .LVU2040
3238:src/keys.c    **** 	    // Data entry key
 6353              		.loc 1 3238 7 is_stmt 0 view .LVU2041
 6354 062a BBF1000F 		cmp	fp, #0
 6355 062e 40F0CB80 		bne	.L925
3238:src/keys.c    **** 	    // Data entry key
 6356              		.loc 1 3238 38 discriminator 1 view .LVU2042
 6357 0632 FFF7FEFF 		bl	is_bad_cmdline
 6358              	.LVL527:
ARM GAS  /tmp/ccsJYix0.s 			page 202


3238:src/keys.c    **** 	    // Data entry key
 6359              		.loc 1 3238 34 discriminator 1 view .LVU2043
 6360 0636 0028     		cmp	r0, #0
 6361 0638 00F03581 		beq	.L989
 6362 063c 3268     		ldr	r2, [r6]
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6363              		.loc 1 3014 7 view .LVU2044
 6364 063e 5D46     		mov	r5, fp
 6365 0640 37E5     		b	.L616
 6366              	.L919:
 6367              	.LBB1287:
3214:src/keys.c    **** 	if (p > Alpha)
 6368              		.loc 1 3214 2 is_stmt 1 view .LVU2045
3214:src/keys.c    **** 	if (p > Alpha)
 6369              		.loc 1 3214 22 is_stmt 0 view .LVU2046
 6370 0642 9D4C     		ldr	r4, .L1257+12
 6371 0644 2068     		ldr	r0, [r4]
3214:src/keys.c    **** 	if (p > Alpha)
 6372              		.loc 1 3214 12 view .LVU2047
 6373 0646 0021     		movs	r1, #0
 6374 0648 00F5F660 		add	r0, r0, #1968
 6375 064c FFF7FEFF 		bl	find_char
 6376              	.LVL528:
3215:src/keys.c    **** 	  *--p = '\0';
 6377              		.loc 1 3215 8 view .LVU2048
 6378 0650 2368     		ldr	r3, [r4]
 6379              	.LVL529:
3215:src/keys.c    **** 	  *--p = '\0';
 6380              		.loc 1 3215 2 is_stmt 1 view .LVU2049
3215:src/keys.c    **** 	  *--p = '\0';
 6381              		.loc 1 3215 8 is_stmt 0 view .LVU2050
 6382 0652 03F5F663 		add	r3, r3, #1968
3215:src/keys.c    **** 	  *--p = '\0';
 6383              		.loc 1 3215 5 view .LVU2051
 6384 0656 9842     		cmp	r0, r3
 6385 0658 00F29B81 		bhi	.L920
 6386 065c 3268     		ldr	r2, [r6]
 6387              	.LBE1287:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6388              		.loc 1 3014 7 view .LVU2052
 6389 065e 0025     		movs	r5, #0
 6390              	.LBB1288:
3215:src/keys.c    **** 	  *--p = '\0';
 6391              		.loc 1 3215 5 view .LVU2053
 6392 0660 4FF0300B 		mov	fp, #48
 6393 0664 25E5     		b	.L616
 6394              	.LVL530:
 6395              	.L1189:
3215:src/keys.c    **** 	  *--p = '\0';
 6396              		.loc 1 3215 5 view .LVU2054
 6397              	.LBE1288:
3235:src/keys.c    **** 	NonProgrammable = 0;
 6398              		.loc 1 3235 7 is_stmt 1 view .LVU2055
3235:src/keys.c    **** 	NonProgrammable = 0;
 6399              		.loc 1 3235 11 is_stmt 0 view .LVU2056
 6400 0666 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3235:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccsJYix0.s 			page 203


 6401              		.loc 1 3235 10 view .LVU2057
 6402 066a 5A06     		lsls	r2, r3, #25
 6403 066c 7FF55DAF 		bpl	.L939
 6404              	.LVL531:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6405              		.loc 1 3236 2 is_stmt 1 view .LVU2058
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6406              		.loc 1 3236 18 is_stmt 0 view .LVU2059
 6407 0670 904B     		ldr	r3, .L1257+8
 6408 0672 1D60     		str	r5, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6409              		.loc 1 3237 2 is_stmt 1 view .LVU2060
 6410              	.L923:
3250:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6411              		.loc 1 3250 4 view .LVU2061
3250:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6412              		.loc 1 3250 11 is_stmt 0 view .LVU2062
 6413 0674 914A     		ldr	r2, .L1257+16
3251:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6414              		.loc 1 3251 25 view .LVU2063
 6415 0676 924B     		ldr	r3, .L1257+20
3250:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6416              		.loc 1 3250 11 view .LVU2064
 6417 0678 1060     		str	r0, [r2]
3251:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6418              		.loc 1 3251 4 is_stmt 1 view .LVU2065
3251:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6419              		.loc 1 3251 25 is_stmt 0 view .LVU2066
 6420 067a 0122     		movs	r2, #1
 6421 067c 914C     		ldr	r4, .L1257+24
 6422 067e 1A60     		str	r2, [r3]
3252:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6423              		.loc 1 3252 4 is_stmt 1 view .LVU2067
 6424 0680 FFF7FEFF 		bl	finish_RPN
 6425              	.LVL532:
3253:src/keys.c    **** 	}
 6426              		.loc 1 3253 4 view .LVU2068
 6427 0684 3CE5     		b	.L929
 6428              	.LVL533:
 6429              	.L1186:
 6430              	.LBB1289:
 6431              	.LBB1222:
 6432              	.LBB696:
 6433              	.LBB681:
 734:src/keys.c    **** 	  case K00:
 6434              		.loc 1 734 4 view .LVU2069
 6435 0686 122C     		cmp	r4, #18
 6436 0688 0BD8     		bhi	.L882
 6437 068a DFE804F0 		tbb	[pc, r4]
 6438              	.L884:
 6439 068e C4       		.byte	(.L887-.L884)/2
 6440 068f B8       		.byte	(.L886-.L884)/2
 6441 0690 0A       		.byte	(.L882-.L884)/2
 6442 0691 8D       		.byte	(.L885-.L884)/2
 6443 0692 0A       		.byte	(.L882-.L884)/2
 6444 0693 0A       		.byte	(.L882-.L884)/2
 6445 0694 0A       		.byte	(.L882-.L884)/2
ARM GAS  /tmp/ccsJYix0.s 			page 204


 6446 0695 0A       		.byte	(.L882-.L884)/2
 6447 0696 0A       		.byte	(.L882-.L884)/2
 6448 0697 0A       		.byte	(.L882-.L884)/2
 6449 0698 0A       		.byte	(.L882-.L884)/2
 6450 0699 0A       		.byte	(.L882-.L884)/2
 6451 069a 0A       		.byte	(.L882-.L884)/2
 6452 069b 0A       		.byte	(.L882-.L884)/2
 6453 069c 0A       		.byte	(.L882-.L884)/2
 6454 069d 0A       		.byte	(.L882-.L884)/2
 6455 069e 0A       		.byte	(.L882-.L884)/2
 6456 069f 0A       		.byte	(.L882-.L884)/2
 6457 06a0 78       		.byte	(.L883-.L884)/2
 6458 06a1 00       		.p2align 1
 6459              	.L882:
 764:src/keys.c    **** 	  }
 6460              		.loc 1 764 12 view .LVU2070
 769:src/keys.c    **** #ifdef DM42
 6461              		.loc 1 769 2 view .LVU2071
 6462 06a2 033C     		subs	r4, r4, #3
 6463 06a4 2A2C     		cmp	r4, #42
 6464 06a6 3FF6CBAE 		bhi	.L646
 6465 06aa 01A1     		adr	r1, .L894
 6466 06ac 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 6467              		.p2align 2
 6468              	.L894:
 6469 06b0 73070000 		.word	.L897+1
 6470 06b4 41040000 		.word	.L646+1
 6471 06b8 41040000 		.word	.L646+1
 6472 06bc 8B070000 		.word	.L892+1
 6473 06c0 8B070000 		.word	.L892+1
 6474 06c4 41040000 		.word	.L646+1
 6475 06c8 41040000 		.word	.L646+1
 6476 06cc 41040000 		.word	.L646+1
 6477 06d0 41040000 		.word	.L646+1
 6478 06d4 41040000 		.word	.L646+1
 6479 06d8 41040000 		.word	.L646+1
 6480 06dc 41040000 		.word	.L646+1
 6481 06e0 41040000 		.word	.L646+1
 6482 06e4 5D070000 		.word	.L896+1
 6483 06e8 41040000 		.word	.L646+1
 6484 06ec 8B070000 		.word	.L892+1
 6485 06f0 41040000 		.word	.L646+1
 6486 06f4 41040000 		.word	.L646+1
 6487 06f8 41040000 		.word	.L646+1
 6488 06fc 41040000 		.word	.L646+1
 6489 0700 41040000 		.word	.L646+1
 6490 0704 41040000 		.word	.L646+1
 6491 0708 41040000 		.word	.L646+1
 6492 070c 41040000 		.word	.L646+1
 6493 0710 41040000 		.word	.L646+1
 6494 0714 41040000 		.word	.L646+1
 6495 0718 41040000 		.word	.L646+1
 6496 071c 41040000 		.word	.L646+1
 6497 0720 41040000 		.word	.L646+1
 6498 0724 41040000 		.word	.L646+1
 6499 0728 41040000 		.word	.L646+1
 6500 072c 41040000 		.word	.L646+1
ARM GAS  /tmp/ccsJYix0.s 			page 205


 6501 0730 41040000 		.word	.L646+1
 6502 0734 41040000 		.word	.L646+1
 6503 0738 41040000 		.word	.L646+1
 6504 073c 41040000 		.word	.L646+1
 6505 0740 41040000 		.word	.L646+1
 6506 0744 41040000 		.word	.L646+1
 6507 0748 41040000 		.word	.L646+1
 6508 074c 41040000 		.word	.L646+1
 6509 0750 41040000 		.word	.L646+1
 6510 0754 EB070000 		.word	.L895+1
 6511 0758 2D080000 		.word	.L893+1
 6512              		.p2align 1
 6513              	.L896:
 826:src/keys.c    **** 			return STATE_UNFINISHED;
 6514              		.loc 1 826 3 view .LVU2072
 826:src/keys.c    **** 			return STATE_UNFINISHED;
 6515              		.loc 1 826 6 is_stmt 0 view .LVU2073
 6516 075c 9906     		lsls	r1, r3, #26
 6517 075e 65D4     		bmi	.L893
 828:src/keys.c    **** 			return op;
 6518              		.loc 1 828 3 is_stmt 1 view .LVU2074
 828:src/keys.c    **** 			return op;
 6519              		.loc 1 828 6 is_stmt 0 view .LVU2075
 6520 0760 5306     		lsls	r3, r2, #25
 6521 0762 67D4     		bmi	.L902
 6522              	.LVL534:
 6523              	.L918:
 828:src/keys.c    **** 			return op;
 6524              		.loc 1 828 6 view .LVU2076
 6525              	.LBE681:
 6526              	.LBE696:
 6527              	.LBE1222:
 6528              	.LBE1289:
3212:src/keys.c    ****       else if (State2.alphas) {
 6529              		.loc 1 3212 2 is_stmt 1 view .LVU2077
 6530 0764 FFF7FEFF 		bl	delprog
 6531              	.LVL535:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6532              		.loc 1 3014 7 is_stmt 0 view .LVU2078
 6533 0768 0025     		movs	r5, #0
 6534 076a 3268     		ldr	r2, [r6]
 6535 076c 4FF0300B 		mov	fp, #48
 6536 0770 9FE4     		b	.L616
 6537              	.LVL536:
 6538              	.L897:
 6539              	.LBB1290:
 6540              	.LBB1223:
 6541              	.LBB697:
 6542              	.LBB682:
 776:src/keys.c    **** #else
 6543              		.loc 1 776 3 is_stmt 1 view .LVU2079
 776:src/keys.c    **** #else
 6544              		.loc 1 776 10 is_stmt 0 view .LVU2080
 6545 0772 5146     		mov	r1, r10
 6546 0774 0220     		movs	r0, #2
 6547 0776 FFF7FEFF 		bl	check_f_key
 6548              	.LVL537:
ARM GAS  /tmp/ccsJYix0.s 			page 206


 6549 077a 8346     		mov	fp, r0
 6550 077c 60E6     		b	.L646
 6551              	.L883:
 760:src/keys.c    **** 	    if (intltr(15)) {
 6552              		.loc 1 760 6 is_stmt 1 view .LVU2081
 6553              	.LVL538:
 761:src/keys.c    **** 	      return op_int;
 6554              		.loc 1 761 6 view .LVU2082
 761:src/keys.c    **** 	      return op_int;
 6555              		.loc 1 761 10 is_stmt 0 view .LVU2083
 6556 077e 0F20     		movs	r0, #15
 6557 0780 FFF7FEFF 		bl	intltr
 6558              	.LVL539:
 761:src/keys.c    **** 	      return op_int;
 6559              		.loc 1 761 9 view .LVU2084
 6560 0784 0028     		cmp	r0, #0
 6561 0786 41F0FE81 		bne	.L1190
 6562              	.LVL540:
 6563              	.L892:
 835:src/keys.c    **** 		break;
 6564              		.loc 1 835 3 is_stmt 1 view .LVU2085
 6565              	.LBB679:
 6566              	.LBI679:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 6567              		.loc 1 506 13 view .LVU2086
 6568              	.LBB680:
 507:src/keys.c    **** 		return;
 6569              		.loc 1 507 2 view .LVU2087
 507:src/keys.c    **** 		return;
 6570              		.loc 1 507 6 is_stmt 0 view .LVU2088
 6571 078a FFF7FEFF 		bl	is_bad_cmdline
 6572              	.LVL541:
 507:src/keys.c    **** 		return;
 6573              		.loc 1 507 5 view .LVU2089
 6574 078e 0446     		mov	r4, r0
 6575 0790 0028     		cmp	r0, #0
 6576 0792 41F00482 		bne	.L1191
 6577 0796 5FFA8AF0 		uxtb	r0, r10
 6578 079a FFF7FEFF 		bl	init_arg.part.0
 6579              	.LVL542:
 6580              	.LBE680:
 6581              	.LBE679:
 6582              	.LBE682:
 6583              	.LBE697:
 6584              	.LBE1223:
 6585              	.LBE1290:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 6586              		.loc 1 3014 7 view .LVU2090
 6587 079e 2546     		mov	r5, r4
 6588 07a0 3268     		ldr	r2, [r6]
 6589              	.LBB1291:
 6590              	.LBB1224:
 6591              	.LBB698:
 6592              	.LBB683:
 841:src/keys.c    **** }
 6593              		.loc 1 841 9 view .LVU2091
 6594 07a2 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccsJYix0.s 			page 207


 6595 07a6 84E4     		b	.L616
 6596              	.LVL543:
 6597              	.L885:
 752:src/keys.c    **** 	    if (intltr(12)) {
 6598              		.loc 1 752 6 is_stmt 1 view .LVU2092
 753:src/keys.c    **** 	      return op_int;
 6599              		.loc 1 753 6 view .LVU2093
 753:src/keys.c    **** 	      return op_int;
 6600              		.loc 1 753 10 is_stmt 0 view .LVU2094
 6601 07a8 0C20     		movs	r0, #12
 6602 07aa FFF7FEFF 		bl	intltr
 6603              	.LVL544:
 753:src/keys.c    **** 	      return op_int;
 6604              		.loc 1 753 9 view .LVU2095
 6605 07ae 0028     		cmp	r0, #0
 6606 07b0 DFD0     		beq	.L897
 6607              	.LVL545:
 753:src/keys.c    **** 	      return op_int;
 6608              		.loc 1 753 9 view .LVU2096
 6609              	.LBE683:
 6610              	.LBE698:
 6611              	.LBE1224:
 6612              	.LBE1291:
3235:src/keys.c    **** 	NonProgrammable = 0;
 6613              		.loc 1 3235 7 is_stmt 1 view .LVU2097
3235:src/keys.c    **** 	NonProgrammable = 0;
 6614              		.loc 1 3235 11 is_stmt 0 view .LVU2098
 6615 07b2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3235:src/keys.c    **** 	NonProgrammable = 0;
 6616              		.loc 1 3235 10 view .LVU2099
 6617 07b6 5D06     		lsls	r5, r3, #25
 6618 07b8 41F1CD81 		bpl	.L984
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6619              		.loc 1 3236 2 is_stmt 1 view .LVU2100
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6620              		.loc 1 3236 18 is_stmt 0 view .LVU2101
 6621 07bc 3D4B     		ldr	r3, .L1257+8
 6622 07be 0022     		movs	r2, #0
 6623              	.LBB1292:
 6624              	.LBB1225:
 6625              	.LBB699:
 6626              	.LBB684:
 754:src/keys.c    **** 	    }
 6627              		.loc 1 754 15 view .LVU2102
 6628 07c0 4FF0110B 		mov	fp, #17
 6629              	.LBE684:
 6630              	.LBE699:
 6631              	.LBE1225:
 6632              	.LBE1292:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6633              		.loc 1 3236 18 view .LVU2103
 6634 07c4 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6635              		.loc 1 3237 2 is_stmt 1 view .LVU2104
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6636              		.loc 1 3237 32 is_stmt 0 view .LVU2105
 6637 07c6 5846     		mov	r0, fp
ARM GAS  /tmp/ccsJYix0.s 			page 208


 6638              	.LVL546:
 6639              	.L925:
3241:src/keys.c    **** #endif
 6640              		.loc 1 3241 6 is_stmt 1 view .LVU2106
3243:src/keys.c    **** 	    xeq(c);
 6641              		.loc 1 3243 37 is_stmt 0 view .LVU2107
 6642 07c8 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3241:src/keys.c    **** #endif
 6643              		.loc 1 3241 19 view .LVU2108
 6644 07cc 0123     		movs	r3, #1
3243:src/keys.c    **** 	    xeq(c);
 6645              		.loc 1 3243 37 view .LVU2109
 6646 07ce B5FA85F5 		clz	r5, r5
3241:src/keys.c    **** #endif
 6647              		.loc 1 3241 19 view .LVU2110
 6648 07d2 C9F80030 		str	r3, [r9]
3243:src/keys.c    **** 	    xeq(c);
 6649              		.loc 1 3243 6 is_stmt 1 view .LVU2111
3244:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6650              		.loc 1 3244 6 is_stmt 0 view .LVU2112
 6651 07d6 FFF7FEFF 		bl	xeq
 6652              	.LVL547:
3245:src/keys.c    **** 	  }
 6653              		.loc 1 3245 38 view .LVU2113
 6654 07da 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 6655 07de 3268     		ldr	r2, [r6]
3243:src/keys.c    **** 	    xeq(c);
 6656              		.loc 1 3243 37 view .LVU2114
 6657 07e0 6D09     		lsrs	r5, r5, #5
 6658              	.LVL548:
3244:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6659              		.loc 1 3244 6 is_stmt 1 view .LVU2115
3245:src/keys.c    **** 	  }
 6660              		.loc 1 3245 6 view .LVU2116
3245:src/keys.c    **** 	  }
 6661              		.loc 1 3245 20 is_stmt 0 view .LVU2117
 6662 07e2 0028     		cmp	r0, #0
 6663 07e4 08BF     		it	eq
 6664 07e6 0125     		moveq	r5, #1
 6665              	.LVL549:
3245:src/keys.c    **** 	  }
 6666              		.loc 1 3245 20 view .LVU2118
 6667 07e8 63E4     		b	.L616
 6668              	.LVL550:
 6669              	.L895:
 6670              	.LBB1293:
 6671              	.LBB1226:
 6672              	.LBB700:
 6673              	.LBB685:
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6674              		.loc 1 800 3 is_stmt 1 view .LVU2119
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6675              		.loc 1 800 7 is_stmt 0 view .LVU2120
 6676 07ea FFF7FEFF 		bl	is_bad_cmdline
 6677              	.LVL551:
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6678              		.loc 1 800 6 view .LVU2121
ARM GAS  /tmp/ccsJYix0.s 			page 209


 6679 07ee 0446     		mov	r4, r0
 6680 07f0 0028     		cmp	r0, #0
 6681 07f2 01F03C83 		beq	.L900
 6682 07f6 3268     		ldr	r2, [r6]
 801:src/keys.c    **** 		process_cmdline_set_lift();
 6683              		.loc 1 801 11 view .LVU2122
 6684 07f8 4FF0330B 		mov	fp, #51
 6685 07fc 59E4     		b	.L616
 6686              	.L886:
 744:src/keys.c    **** 	    if (intltr(11)) {
 6687              		.loc 1 744 6 is_stmt 1 view .LVU2123
 6688              	.LVL552:
 745:src/keys.c    **** 	      return op;
 6689              		.loc 1 745 6 view .LVU2124
 745:src/keys.c    **** 	      return op;
 6690              		.loc 1 745 10 is_stmt 0 view .LVU2125
 6691 07fe 0B20     		movs	r0, #11
 6692 0800 FFF7FEFF 		bl	intltr
 6693              	.LVL553:
 745:src/keys.c    **** 	      return op;
 6694              		.loc 1 745 9 view .LVU2126
 6695 0804 0028     		cmp	r0, #0
 6696 0806 41F04783 		bne	.L889
 749:src/keys.c    **** 	    }
 6697              		.loc 1 749 8 is_stmt 1 view .LVU2127
 749:src/keys.c    **** 	    }
 6698              		.loc 1 749 15 is_stmt 0 view .LVU2128
 6699 080a 1021     		movs	r1, #16
 6700 080c 0120     		movs	r0, #1
 6701 080e FFF7FEFF 		bl	check_f_key
 6702              	.LVL554:
 6703 0812 8346     		mov	fp, r0
 6704 0814 14E6     		b	.L646
 6705              	.LVL555:
 6706              	.L887:
 736:src/keys.c    **** 	    if (intltr(10)) {
 6707              		.loc 1 736 6 is_stmt 1 view .LVU2129
 737:src/keys.c    **** 	      return op;
 6708              		.loc 1 737 6 view .LVU2130
 737:src/keys.c    **** 	      return op;
 6709              		.loc 1 737 10 is_stmt 0 view .LVU2131
 6710 0816 0A20     		movs	r0, #10
 6711 0818 FFF7FEFF 		bl	intltr
 6712              	.LVL556:
 737:src/keys.c    **** 	      return op;
 6713              		.loc 1 737 9 view .LVU2132
 6714 081c 0028     		cmp	r0, #0
 6715 081e 41F00C83 		bne	.L888
 741:src/keys.c    **** 	    }
 6716              		.loc 1 741 8 is_stmt 1 view .LVU2133
 741:src/keys.c    **** 	    }
 6717              		.loc 1 741 15 is_stmt 0 view .LVU2134
 6718 0822 0F21     		movs	r1, #15
 6719 0824 FFF7FEFF 		bl	check_f_key
 6720              	.LVL557:
 6721 0828 8346     		mov	fp, r0
 6722 082a 09E6     		b	.L646
ARM GAS  /tmp/ccsJYix0.s 			page 210


 6723              	.LVL558:
 6724              	.L893:
 741:src/keys.c    **** 	    }
 6725              		.loc 1 741 15 view .LVU2135
 6726 082c 3268     		ldr	r2, [r6]
 841:src/keys.c    **** }
 6727              		.loc 1 841 9 view .LVU2136
 6728 082e 4FF0330B 		mov	fp, #51
 6729 0832 3EE4     		b	.L616
 6730              	.L902:
 6731              	.LVL559:
 841:src/keys.c    **** }
 6732              		.loc 1 841 9 view .LVU2137
 6733              	.LBE685:
 6734              	.LBE700:
 6735              	.LBE1226:
 6736              	.LBE1293:
3199:src/keys.c    ****     case STATE_SST:
 6737              		.loc 1 3199 5 is_stmt 1 view .LVU2138
 6738 0834 AAF12B03 		sub	r3, r10, #43
 6739 0838 082B     		cmp	r3, #8
 6740 083a 17D8     		bhi	.L940
 6741 083c 01A2     		adr	r2, .L942
 6742 083e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6743 0842 00BF     		.p2align 2
 6744              	.L942:
 6745 0844 7F040000 		.word	.L917+1
 6746 0848 7F040000 		.word	.L917+1
 6747 084c 6D080000 		.word	.L940+1
 6748 0850 ED040000 		.word	.L826+1
 6749 0854 DB040000 		.word	.L822+1
 6750 0858 05050000 		.word	.L819+1
 6751 085c 97030000 		.word	.L626+1
 6752 0860 69080000 		.word	.L941+1
 6753 0864 69080000 		.word	.L941+1
 6754              		.p2align 1
 6755              	.L941:
 6756 0868 3268     		ldr	r2, [r6]
 6757 086a 22E4     		b	.L616
 6758              	.L940:
 6759 086c 114A     		ldr	r2, .L1257+8
 6760 086e 5046     		mov	r0, r10
 6761 0870 D7E6     		b	.L926
 6762              	.LVL560:
 6763              	.L921:
3227:src/keys.c    ****       break;
 6764              		.loc 1 3227 2 view .LVU2139
 6765 0872 5846     		mov	r0, fp
 6766 0874 FFF7FEFF 		bl	set_window
 6767              	.LVL561:
 6768 0878 3268     		ldr	r2, [r6]
 6769 087a 1AE4     		b	.L616
 6770              	.LVL562:
 6771              	.L595:
3050:src/keys.c    **** 	    DispMsg = TraceBuffer;
 6772              		.loc 1 3050 6 view .LVU2140
 6773 087c 124E     		ldr	r6, .L1257+28
ARM GAS  /tmp/ccsJYix0.s 			page 211


 6774 087e 3146     		mov	r1, r6
 6775 0880 FFF7FEFF 		bl	prt
 6776              	.LVL563:
 6777 0884 2A46     		mov	r2, r5
 6778 0886 0146     		mov	r1, r0
 6779 0888 3046     		mov	r0, r6
 6780 088a FFF7FEFF 		bl	scopy_char
 6781              	.LVL564:
3051:src/keys.c    **** 	  }
 6782              		.loc 1 3051 6 view .LVU2141
3051:src/keys.c    **** 	  }
 6783              		.loc 1 3051 14 is_stmt 0 view .LVU2142
 6784 088e 0F4B     		ldr	r3, .L1257+32
 6785 0890 1E60     		str	r6, [r3]
 6786 0892 50E4     		b	.L596
 6787              	.LVL565:
 6788              	.L618:
3153:src/keys.c    **** 	}
 6789              		.loc 1 3153 4 is_stmt 1 view .LVU2143
 6790              		.loc 1 3276 1 is_stmt 0 view .LVU2144
 6791 0894 03B0     		add	sp, sp, #12
 6792              		.cfi_remember_state
 6793              		.cfi_def_cfa_offset 36
 6794              		@ sp needed
 6795 0896 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6796              		.cfi_restore 14
 6797              		.cfi_restore 11
 6798              		.cfi_restore 10
 6799              		.cfi_restore 9
 6800              		.cfi_restore 8
 6801              		.cfi_restore 7
 6802              		.cfi_restore 6
 6803              		.cfi_restore 5
 6804              		.cfi_restore 4
 6805              		.cfi_def_cfa_offset 0
3153:src/keys.c    **** 	}
 6806              		.loc 1 3153 4 view .LVU2145
 6807 089a FFF7FEBF 		b	finish_RPN
 6808              	.LVL566:
 6809              	.L1187:
 6810              		.cfi_restore_state
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6811              		.loc 1 3236 2 is_stmt 1 view .LVU2146
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6812              		.loc 1 3236 18 is_stmt 0 view .LVU2147
 6813 089e 054B     		ldr	r3, .L1257+8
 6814 08a0 0022     		movs	r2, #0
 6815 08a2 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6816              		.loc 1 3237 2 is_stmt 1 view .LVU2148
 6817 08a4 E6E6     		b	.L923
 6818              	.LVL567:
 6819              	.L989:
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6820              		.loc 1 3237 32 is_stmt 0 view .LVU2149
 6821 08a6 5846     		mov	r0, fp
 6822 08a8 8EE7     		b	.L925
ARM GAS  /tmp/ccsJYix0.s 			page 212


 6823              	.L1258:
 6824 08aa 00BF     		.align	2
 6825              	.L1257:
 6826 08ac 04000000 		.word	.LC1
 6827 08b0 00000000 		.word	StateWhileOn
 6828 08b4 00000000 		.word	NonProgrammable
 6829 08b8 00000000 		.word	main_ram
 6830 08bc 00000000 		.word	OpCode
 6831 08c0 00000000 		.word	OpCodeDisplayPending
 6832 08c4 00000000 		.word	JustDisplayed
 6833 08c8 00000000 		.word	TraceBuffer
 6834 08cc 00000000 		.word	DispMsg
 6835              	.LVL568:
 6836              	.L1165:
 6837              	.LBB1294:
 6838              	.LBB1227:
2888:src/keys.c    **** 
 6839              		.loc 1 2888 3 is_stmt 1 view .LVU2150
 6840              	.LBB701:
 6841              	.LBI701:
2497:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6842              		.loc 1 2497 12 view .LVU2151
 6843              	.LBB702:
2499:src/keys.c    **** #ifdef DM42
 6844              		.loc 1 2499 2 view .LVU2152
 6845 08d0 E4B2     		uxtb	r4, r4
 6846              	.LVL569:
2499:src/keys.c    **** #ifdef DM42
 6847              		.loc 1 2499 2 is_stmt 0 view .LVU2153
 6848 08d2 A4F10E03 		sub	r3, r4, #14
 6849 08d6 192B     		cmp	r3, #25
 6850 08d8 0ED8     		bhi	.L636
 6851 08da DFE803F0 		tbb	[pc, r3]
 6852              	.L638:
 6853 08de 14       		.byte	(.L639-.L638)/2
 6854 08df 0D       		.byte	(.L636-.L638)/2
 6855 08e0 14       		.byte	(.L639-.L638)/2
 6856 08e1 0D       		.byte	(.L636-.L638)/2
 6857 08e2 0D       		.byte	(.L636-.L638)/2
 6858 08e3 0D       		.byte	(.L636-.L638)/2
 6859 08e4 0D       		.byte	(.L636-.L638)/2
 6860 08e5 0D       		.byte	(.L636-.L638)/2
 6861 08e6 0D       		.byte	(.L636-.L638)/2
 6862 08e7 0D       		.byte	(.L636-.L638)/2
 6863 08e8 0D       		.byte	(.L636-.L638)/2
 6864 08e9 0D       		.byte	(.L636-.L638)/2
 6865 08ea 0D       		.byte	(.L636-.L638)/2
 6866 08eb 0D       		.byte	(.L636-.L638)/2
 6867 08ec 0D       		.byte	(.L636-.L638)/2
 6868 08ed 0D       		.byte	(.L636-.L638)/2
 6869 08ee 0D       		.byte	(.L636-.L638)/2
 6870 08ef 0D       		.byte	(.L636-.L638)/2
 6871 08f0 22       		.byte	(.L637-.L638)/2
 6872 08f1 0D       		.byte	(.L636-.L638)/2
 6873 08f2 0D       		.byte	(.L636-.L638)/2
 6874 08f3 0D       		.byte	(.L636-.L638)/2
 6875 08f4 0D       		.byte	(.L636-.L638)/2
ARM GAS  /tmp/ccsJYix0.s 			page 213


 6876 08f5 0D       		.byte	(.L636-.L638)/2
 6877 08f6 0D       		.byte	(.L636-.L638)/2
 6878 08f7 22       		.byte	(.L637-.L638)/2
 6879              		.p2align 1
 6880              	.L636:
 6881 08f8 3268     		ldr	r2, [r6]
 6882              	.LBE702:
 6883              	.LBE701:
2888:src/keys.c    **** 
 6884              		.loc 1 2888 10 view .LVU2154
 6885 08fa 4FF0330B 		mov	fp, #51
 6886 08fe FFF7D8BB 		b	.L616
 6887              	.L640:
 6888              	.LBB705:
 6889              	.LBB703:
2508:src/keys.c    **** 	  }
 6890              		.loc 1 2508 26 is_stmt 1 view .LVU2155
 6891 0902 FFF7FEFF 		bl	clpall
 6892              	.LVL570:
2508:src/keys.c    **** 	  }
 6893              		.loc 1 2508 36 view .LVU2156
 6894              	.L639:
2517:src/keys.c    **** 	  State2.digval = 0;
 6895              		.loc 1 2517 4 view .LVU2157
2517:src/keys.c    **** 	  State2.digval = 0;
 6896              		.loc 1 2517 19 is_stmt 0 view .LVU2158
 6897 0906 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6898 090a 3268     		ldr	r2, [r6]
 6899 090c 6FF30203 		bfc	r3, #0, #3
2518:src/keys.c    **** 	  break;
 6900              		.loc 1 2518 18 view .LVU2159
 6901 0910 0021     		movs	r1, #0
2517:src/keys.c    **** 	  State2.digval = 0;
 6902              		.loc 1 2517 19 view .LVU2160
 6903 0912 88F81430 		strb	r3, [r8, #20]
2518:src/keys.c    **** 	  break;
 6904              		.loc 1 2518 4 is_stmt 1 view .LVU2161
2518:src/keys.c    **** 	  break;
 6905              		.loc 1 2518 18 is_stmt 0 view .LVU2162
 6906 0916 A8F80810 		strh	r1, [r8, #8]	@ movhi
2519:src/keys.c    **** 	default:			// No state change
 6907              		.loc 1 2519 4 is_stmt 1 view .LVU2163
 6908              	.LBE703:
 6909              	.LBE705:
2888:src/keys.c    **** 
 6910              		.loc 1 2888 10 is_stmt 0 view .LVU2164
 6911 091a 4FF0330B 		mov	fp, #51
 6912              	.LBB706:
 6913              	.LBB704:
2519:src/keys.c    **** 	default:			// No state change
 6914              		.loc 1 2519 4 view .LVU2165
 6915 091e FFF7C8BB 		b	.L616
 6916              	.L637:
2504:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6917              		.loc 1 2504 4 is_stmt 1 view .LVU2166
2504:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6918              		.loc 1 2504 18 is_stmt 0 view .LVU2167
ARM GAS  /tmp/ccsJYix0.s 			page 214


 6919 0922 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6920 0926 03F00703 		and	r3, r3, #7
 6921 092a 013B     		subs	r3, r3, #1
 6922 092c 032B     		cmp	r3, #3
 6923 092e EAD8     		bhi	.L639
 6924 0930 01A2     		adr	r2, .L641
 6925 0932 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6926 0936 00BF     		.p2align 2
 6927              	.L641:
 6928 0938 55090000 		.word	.L644+1
 6929 093c 4F090000 		.word	.L643+1
 6930 0940 49090000 		.word	.L642+1
 6931 0944 03090000 		.word	.L640+1
 6932              		.p2align 1
 6933              	.L642:
2507:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6934              		.loc 1 2507 26 is_stmt 1 view .LVU2168
 6935 0948 FFF7FEFF 		bl	clrprog
 6936              	.LVL571:
2507:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6937              		.loc 1 2507 37 view .LVU2169
2507:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6938              		.loc 1 2507 4 is_stmt 0 view .LVU2170
 6939 094c DBE7     		b	.L639
 6940              	.L643:
2506:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6941              		.loc 1 2506 25 is_stmt 1 view .LVU2171
 6942 094e FFF7FEFF 		bl	reset
 6943              	.LVL572:
2506:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6944              		.loc 1 2506 34 view .LVU2172
2506:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6945              		.loc 1 2506 4 is_stmt 0 view .LVU2173
 6946 0952 D8E7     		b	.L639
 6947              	.L644:
2505:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6948              		.loc 1 2505 25 is_stmt 1 view .LVU2174
 6949 0954 FFF7FEFF 		bl	clrall
 6950              	.LVL573:
2505:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6951              		.loc 1 2505 35 view .LVU2175
2505:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6952              		.loc 1 2505 4 is_stmt 0 view .LVU2176
 6953 0958 D5E7     		b	.L639
 6954              	.LVL574:
 6955              	.L1163:
2505:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6956              		.loc 1 2505 4 view .LVU2177
 6957              	.LBE704:
 6958              	.LBE706:
2862:src/keys.c    **** #else
 6959              		.loc 1 2862 47 view .LVU2178
 6960 095a DFF89083 		ldr	r8, .L1259+32
 6961 095e 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2862:src/keys.c    **** #else
 6962              		.loc 1 2862 36 view .LVU2179
 6963 0962 4AEA0302 		orr	r2, r10, r3
ARM GAS  /tmp/ccsJYix0.s 			page 215


 6964 0966 12F0FF0F 		tst	r2, #255
 6965 096a 7FF41FAC 		bne	.L628
2862:src/keys.c    **** #else
 6966              		.loc 1 2862 76 view .LVU2180
 6967 096e D74A     		ldr	r2, .L1259
 6968 0970 D8F81430 		ldr	r3, [r8, #20]
 6969 0974 1A42     		tst	r2, r3
 6970 0976 7FF421AC 		bne	.L634
2867:src/keys.c    ****       return STATE_UNFINISHED;
 6971              		.loc 1 2867 7 is_stmt 1 view .LVU2181
 6972 097a FFF7FEFF 		bl	soft_init_state
 6973              	.LVL575:
2868:src/keys.c    ****     }
 6974              		.loc 1 2868 7 view .LVU2182
2868:src/keys.c    ****     }
 6975              		.loc 1 2868 14 is_stmt 0 view .LVU2183
 6976 097e 4FF0330B 		mov	fp, #51
 6977 0982 3268     		ldr	r2, [r6]
 6978 0984 FFF795BB 		b	.L616
 6979              	.L1166:
2891:src/keys.c    **** 
 6980              		.loc 1 2891 3 is_stmt 1 view .LVU2184
2891:src/keys.c    **** 
 6981              		.loc 1 2891 10 is_stmt 0 view .LVU2185
 6982 0988 E0B2     		uxtb	r0, r4
 6983 098a FFF7FEFF 		bl	process_arg
 6984              	.LVL576:
 6985 098e 8346     		mov	fp, r0
 6986 0990 56E5     		b	.L646
 6987              	.LVL577:
 6988              	.L920:
2891:src/keys.c    **** 
 6989              		.loc 1 2891 10 view .LVU2186
 6990              	.LBE1227:
 6991              	.LBE1294:
 6992              	.LBB1295:
3216:src/keys.c    ****       }
 6993              		.loc 1 3216 4 is_stmt 1 view .LVU2187
3216:src/keys.c    ****       }
 6994              		.loc 1 3216 9 is_stmt 0 view .LVU2188
 6995 0992 0025     		movs	r5, #0
 6996 0994 00F8015C 		strb	r5, [r0, #-1]
 6997 0998 3268     		ldr	r2, [r6]
 6998 099a 4FF0300B 		mov	fp, #48
 6999 099e FFF788BB 		b	.L616
 7000              	.LVL578:
 7001              	.L1169:
3216:src/keys.c    ****       }
 7002              		.loc 1 3216 9 view .LVU2189
 7003              	.LBE1295:
 7004              	.LBB1296:
 7005              	.LBB1228:
2900:src/keys.c    **** 
 7006              		.loc 1 2900 3 is_stmt 1 view .LVU2190
 7007              	.LBB707:
 7008              	.LBI707:
1963:src/keys.c    **** 	int r = State2.test;
ARM GAS  /tmp/ccsJYix0.s 			page 216


 7009              		.loc 1 1963 12 view .LVU2191
 7010              	.LBB708:
1964:src/keys.c    **** 	int cmpx = State2.cmplx;
 7011              		.loc 1 1964 2 view .LVU2192
1965:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7012              		.loc 1 1965 2 view .LVU2193
 7013              	.LBB709:
 7014              	.LBB710:
 7015              	.LBB711:
 7016              	.LBB712:
 133:src/keys.c    **** }
 7017              		.loc 1 133 23 is_stmt 0 view .LVU2194
 7018 09a2 CB4A     		ldr	r2, .L1259+4
 7019              	.LBE712:
 7020              	.LBE711:
 224:src/keys.c    **** }
 7021              		.loc 1 224 28 view .LVU2195
 7022 09a4 DFF82CC3 		ldr	ip, .L1259+8
 7023              	.LBB716:
 7024              	.LBB713:
 133:src/keys.c    **** }
 7025              		.loc 1 133 23 view .LVU2196
 7026 09a8 E4B2     		uxtb	r4, r4
 7027              	.LVL579:
 133:src/keys.c    **** }
 7028              		.loc 1 133 23 view .LVU2197
 7029              	.LBE713:
 7030              	.LBE716:
 7031              	.LBE710:
 7032              	.LBE709:
1967:src/keys.c    **** 
 7033              		.loc 1 1967 44 view .LVU2198
 7034 09aa 11F0020F 		tst	r1, #2
 7035              	.LBB721:
 7036              	.LBB719:
 7037              	.LBB717:
 7038              	.LBB714:
 133:src/keys.c    **** }
 7039              		.loc 1 133 23 view .LVU2199
 7040 09ae 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 7041              	.LBE714:
 7042              	.LBE717:
 224:src/keys.c    **** }
 7043              		.loc 1 224 28 view .LVU2200
 7044 09b0 1CF802C0 		ldrb	ip, [ip, r2]	@ zero_extendqisi2
 7045              	.LBE719:
 7046              	.LBE721:
1965:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7047              		.loc 1 1965 19 view .LVU2201
 7048 09b4 C1F3400E 		ubfx	lr, r1, #1, #1
 7049              	.LVL580:
1966:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7050              		.loc 1 1966 2 is_stmt 1 view .LVU2202
 7051              	.LBB722:
 7052              	.LBI709:
 200:src/keys.c    **** {
 7053              		.loc 1 200 14 view .LVU2203
ARM GAS  /tmp/ccsJYix0.s 			page 217


 7054              	.LBB720:
 202:src/keys.c    ****     // K00 - K05
 7055              		.loc 1 202 3 view .LVU2204
 224:src/keys.c    **** }
 7056              		.loc 1 224 3 view .LVU2205
 7057              	.LBB718:
 7058              	.LBI711:
 121:src/keys.c    **** {
 7059              		.loc 1 121 12 view .LVU2206
 7060              	.LBB715:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7061              		.loc 1 123 2 view .LVU2207
 133:src/keys.c    **** }
 7062              		.loc 1 133 2 view .LVU2208
 133:src/keys.c    **** }
 7063              		.loc 1 133 2 is_stmt 0 view .LVU2209
 7064              	.LBE715:
 7065              	.LBE718:
 7066              	.LBE720:
 7067              	.LBE722:
1966:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7068              		.loc 1 1966 15 view .LVU2210
 7069 09b8 2CF08002 		bic	r2, ip, #128
 7070              	.LVL581:
1967:src/keys.c    **** 
 7071              		.loc 1 1967 2 is_stmt 1 view .LVU2211
1967:src/keys.c    **** 
 7072              		.loc 1 1967 44 is_stmt 0 view .LVU2212
 7073 09bc 00F0A980 		beq	.L1192
 7074              	.LVL582:
1969:src/keys.c    **** 	State2.cmplx = 0;
 7075              		.loc 1 1969 2 is_stmt 1 view .LVU2213
1970:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7076              		.loc 1 1970 15 is_stmt 0 view .LVU2214
 7077 09c0 60F34101 		bfi	r1, r0, #1, #1
1971:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7078              		.loc 1 1971 5 view .LVU2215
 7079 09c4 642A     		cmp	r2, #100
1969:src/keys.c    **** 	State2.cmplx = 0;
 7080              		.loc 1 1969 14 view .LVU2216
 7081 09c6 4FF00700 		mov	r0, #7
1970:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7082              		.loc 1 1970 15 view .LVU2217
 7083 09ca 88F81510 		strb	r1, [r8, #21]
1969:src/keys.c    **** 	State2.cmplx = 0;
 7084              		.loc 1 1969 14 view .LVU2218
 7085 09ce 88F80F00 		strb	r0, [r8, #15]
1970:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7086              		.loc 1 1970 2 is_stmt 1 view .LVU2219
1971:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7087              		.loc 1 1971 2 view .LVU2220
1971:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7088              		.loc 1 1971 5 is_stmt 0 view .LVU2221
 7089 09d2 00F07C84 		beq	.L992
1967:src/keys.c    **** 
 7090              		.loc 1 1967 44 view .LVU2222
 7091 09d6 4FF0340A 		mov	r10, #52
ARM GAS  /tmp/ccsJYix0.s 			page 218


 7092              	.LVL583:
 7093              	.L949:
1972:src/keys.c    **** 		// Lettered register
 7094              		.loc 1 1972 5 view .LVU2223
 7095 09da 7F2A     		cmp	r2, #127
1967:src/keys.c    **** 
 7096              		.loc 1 1967 60 view .LVU2224
 7097 09dc DA44     		add	r10, r10, fp
1972:src/keys.c    **** 		// Lettered register
 7098              		.loc 1 1972 2 is_stmt 1 view .LVU2225
1972:src/keys.c    **** 		// Lettered register
 7099              		.loc 1 1972 5 is_stmt 0 view .LVU2226
 7100 09de 00F01381 		beq	.L678
 7101              	.LVL584:
1972:src/keys.c    **** 		// Lettered register
 7102              		.loc 1 1972 18 view .LVU2227
 7103 09e2 632A     		cmp	r2, #99
 7104 09e4 40F23981 		bls	.L679
1972:src/keys.c    **** 		// Lettered register
 7105              		.loc 1 1972 37 view .LVU2228
 7106 09e8 6F2A     		cmp	r2, #111
 7107 09ea 00F20D81 		bhi	.L678
1974:src/keys.c    **** 			if (n == regI_idx)
 7108              		.loc 1 1974 3 is_stmt 1 view .LVU2229
1974:src/keys.c    **** 			if (n == regI_idx)
 7109              		.loc 1 1974 6 is_stmt 0 view .LVU2230
 7110 09ee BEF1000F 		cmp	lr, #0
 7111 09f2 00F02082 		beq	.L680
1974:src/keys.c    **** 			if (n == regI_idx)
 7112              		.loc 1 1974 12 view .LVU2231
 7113 09f6 1CF0010F 		tst	ip, #1
 7114 09fa 00F01C82 		beq	.L680
1975:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7115              		.loc 1 1975 4 is_stmt 1 view .LVU2232
1975:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7116              		.loc 1 1975 7 is_stmt 0 view .LVU2233
 7117 09fe 6D2A     		cmp	r2, #109
 7118 0a00 40F00F81 		bne	.L681
1976:src/keys.c    **** 			// Disallow odd complex registers > A
 7119              		.loc 1 1976 5 is_stmt 1 view .LVU2234
1976:src/keys.c    **** 			// Disallow odd complex registers > A
 7120              		.loc 1 1976 30 is_stmt 0 view .LVU2235
 7121 0a04 0BF1290B 		add	fp, fp, #41
 7122              	.LVL585:
1976:src/keys.c    **** 			// Disallow odd complex registers > A
 7123              		.loc 1 1976 30 view .LVU2236
 7124 0a08 1AE5     		b	.L646
 7125              	.LVL586:
 7126              	.L1167:
1976:src/keys.c    **** 			// Disallow odd complex registers > A
 7127              		.loc 1 1976 30 view .LVU2237
 7128              	.LBE708:
 7129              	.LBE707:
2894:src/keys.c    **** 
 7130              		.loc 1 2894 3 is_stmt 1 view .LVU2238
 7131              	.LBB737:
 7132              	.LBI737:
ARM GAS  /tmp/ccsJYix0.s 			page 219


1336:src/keys.c    **** 	int pc = -1;
 7133              		.loc 1 1336 12 view .LVU2239
 7134              	.LBB738:
1337:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7135              		.loc 1 1337 2 view .LVU2240
1338:src/keys.c    **** 
 7136              		.loc 1 1338 2 view .LVU2241
 7137              	.LBB739:
 7138              	.LBI739:
 200:src/keys.c    **** {
 7139              		.loc 1 200 14 view .LVU2242
 7140              	.LBB740:
 202:src/keys.c    ****     // K00 - K05
 7141              		.loc 1 202 3 view .LVU2243
 224:src/keys.c    **** }
 7142              		.loc 1 224 3 view .LVU2244
 7143              	.LBB741:
 7144              	.LBI741:
 121:src/keys.c    **** {
 7145              		.loc 1 121 12 view .LVU2245
 7146              	.LBB742:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7147              		.loc 1 123 2 view .LVU2246
 133:src/keys.c    **** }
 7148              		.loc 1 133 2 view .LVU2247
 133:src/keys.c    **** }
 7149              		.loc 1 133 23 is_stmt 0 view .LVU2248
 7150 0a0a B14B     		ldr	r3, .L1259+4
 7151              	.LBE742:
 7152              	.LBE741:
 224:src/keys.c    **** }
 7153              		.loc 1 224 28 view .LVU2249
 7154 0a0c B14A     		ldr	r2, .L1259+8
 7155 0a0e E4B2     		uxtb	r4, r4
 7156              	.LVL587:
 7157              	.LBB744:
 7158              	.LBB743:
 133:src/keys.c    **** }
 7159              		.loc 1 133 23 view .LVU2250
 7160 0a10 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7161              	.LBE743:
 7162              	.LBE744:
 224:src/keys.c    **** }
 7163              		.loc 1 224 28 view .LVU2251
 7164 0a12 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7165              	.LVL588:
 224:src/keys.c    **** }
 7166              		.loc 1 224 28 view .LVU2252
 7167              	.LBE740:
 7168              	.LBE739:
1340:src/keys.c    **** 		// Digit 0 - 9
 7169              		.loc 1 1340 2 is_stmt 1 view .LVU2253
1340:src/keys.c    **** 		// Digit 0 - 9
 7170              		.loc 1 1340 5 is_stmt 0 view .LVU2254
 7171 0a14 0928     		cmp	r0, #9
 7172 0a16 40F21781 		bls	.L1193
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
ARM GAS  /tmp/ccsJYix0.s 			page 220


 7173              		.loc 1 1345 7 is_stmt 1 view .LVU2255
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7174              		.loc 1 1345 18 is_stmt 0 view .LVU2256
 7175 0a1a 20F08000 		bic	r0, r0, #128
 7176              	.LVL589:
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7177              		.loc 1 1345 10 view .LVU2257
 7178 0a1e 6428     		cmp	r0, #100
 7179 0a20 00F0F381 		beq	.L1194
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7180              		.loc 1 1346 7 is_stmt 1 view .LVU2258
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7181              		.loc 1 1346 10 is_stmt 0 view .LVU2259
 7182 0a24 6528     		cmp	r0, #101
 7183 0a26 00F0FE81 		beq	.L1195
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7184              		.loc 1 1347 7 is_stmt 1 view .LVU2260
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7185              		.loc 1 1347 10 is_stmt 0 view .LVU2261
 7186 0a2a 6628     		cmp	r0, #102
 7187 0a2c 00F01882 		beq	.L1196
1348:src/keys.c    **** #endif
 7188              		.loc 1 1348 7 is_stmt 1 view .LVU2262
1348:src/keys.c    **** #endif
 7189              		.loc 1 1348 10 is_stmt 0 view .LVU2263
 7190 0a30 6728     		cmp	r0, #103
 7191 0a32 00F01E84 		beq	.L1197
1350:src/keys.c    **** 		// A - D
 7192              		.loc 1 1350 7 is_stmt 1 view .LVU2264
1350:src/keys.c    **** 		// A - D
 7193              		.loc 1 1350 10 is_stmt 0 view .LVU2265
 7194 0a36 032C     		cmp	r4, #3
 7195 0a38 40F22384 		bls	.L1198
1355:src/keys.c    **** 		// .
 7196              		.loc 1 1355 7 is_stmt 1 view .LVU2266
1355:src/keys.c    **** 		// .
 7197              		.loc 1 1355 10 is_stmt 0 view .LVU2267
 7198 0a3c 262C     		cmp	r4, #38
 7199 0a3e 00F05584 		beq	.L1199
1360:src/keys.c    **** 		// ENTER - short circuit processing
 7200              		.loc 1 1360 7 is_stmt 1 view .LVU2268
1360:src/keys.c    **** 		// ENTER - short circuit processing
 7201              		.loc 1 1360 10 is_stmt 0 view .LVU2269
 7202 0a42 0C2C     		cmp	r4, #12
 7203 0a44 00F06581 		beq	.L1200
1364:src/keys.c    **** 		// backspace
 7204              		.loc 1 1364 7 is_stmt 1 view .LVU2270
1364:src/keys.c    **** 		// backspace
 7205              		.loc 1 1364 10 is_stmt 0 view .LVU2271
 7206 0a48 102C     		cmp	r4, #16
 7207 0a4a 00F05384 		beq	.L1201
1373:src/keys.c    **** 		// up
 7208              		.loc 1 1373 7 is_stmt 1 view .LVU2272
1373:src/keys.c    **** 		// up
 7209              		.loc 1 1373 10 is_stmt 0 view .LVU2273
 7210 0a4e 122C     		cmp	r4, #18
 7211 0a50 00F00E87 		beq	.L1202
ARM GAS  /tmp/ccsJYix0.s 			page 221


1383:src/keys.c    **** 		// down
 7212              		.loc 1 1383 7 is_stmt 1 view .LVU2274
1383:src/keys.c    **** 		// down
 7213              		.loc 1 1383 10 is_stmt 0 view .LVU2275
 7214 0a54 182C     		cmp	r4, #24
 7215 0a56 00F04B87 		beq	.L665
 7216 0a5a 3268     		ldr	r2, [r6]
 7217              	.LVL590:
1383:src/keys.c    **** 		// down
 7218              		.loc 1 1383 10 view .LVU2276
 7219              	.LBE738:
 7220              	.LBE737:
2894:src/keys.c    **** 
 7221              		.loc 1 2894 10 view .LVU2277
 7222 0a5c 4FF0330B 		mov	fp, #51
 7223 0a60 FFF727BB 		b	.L616
 7224              	.LVL591:
 7225              	.L908:
2894:src/keys.c    **** 
 7226              		.loc 1 2894 10 view .LVU2278
 7227              	.LBE1228:
 7228              	.LBE1296:
 7229              	.LBB1297:
3188:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7230              		.loc 1 3188 4 is_stmt 1 view .LVU2279
 7231              	.LBB1273:
 7232              	.LBI1273:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 7233              		.loc 1 506 13 view .LVU2280
 7234              	.LBB1274:
 507:src/keys.c    **** 		return;
 7235              		.loc 1 507 2 view .LVU2281
 507:src/keys.c    **** 		return;
 7236              		.loc 1 507 6 is_stmt 0 view .LVU2282
 7237 0a64 FFF7FEFF 		bl	is_bad_cmdline
 7238              	.LVL592:
 507:src/keys.c    **** 		return;
 7239              		.loc 1 507 5 view .LVU2283
 7240 0a68 0546     		mov	r5, r0
 7241 0a6a 0028     		cmp	r0, #0
 7242 0a6c 40F0E680 		bne	.L1203
 7243 0a70 2046     		mov	r0, r4
 7244 0a72 FFF7FEFF 		bl	init_arg.part.0
 7245              	.LVL593:
 7246              	.LBE1274:
 7247              	.LBE1273:
3189:src/keys.c    **** 	}
 7248              		.loc 1 3189 6 view .LVU2284
 7249 0a76 4FF0330B 		mov	fp, #51
 7250 0a7a 3268     		ldr	r2, [r6]
 7251 0a7c FFF719BB 		b	.L616
 7252              	.LVL594:
 7253              	.L990:
3189:src/keys.c    **** 	}
 7254              		.loc 1 3189 6 view .LVU2285
 7255              	.LBE1297:
 7256              	.LBB1298:
ARM GAS  /tmp/ccsJYix0.s 			page 222


 7257 0a80 9B46     		mov	fp, r3
 7258              	.LVL595:
3189:src/keys.c    **** 	}
 7259              		.loc 1 3189 6 view .LVU2286
 7260 0a82 FFF737BB 		b	.L931
 7261              	.LVL596:
 7262              	.L1168:
3189:src/keys.c    **** 	}
 7263              		.loc 1 3189 6 view .LVU2287
 7264              	.LBE1298:
 7265              	.LBB1299:
 7266              	.LBB1229:
2897:src/keys.c    **** 
 7267              		.loc 1 2897 3 is_stmt 1 view .LVU2288
 7268              	.LBB758:
 7269              	.LBB759:
1238:src/keys.c    **** 	State2.dot = 0;
 7270              		.loc 1 1238 15 is_stmt 0 view .LVU2289
 7271 0a86 21F06203 		bic	r3, r1, #98
 7272              	.LBE759:
 7273              	.LBE758:
2897:src/keys.c    **** 
 7274              		.loc 1 2897 10 view .LVU2290
 7275 0a8a E4B2     		uxtb	r4, r4
 7276              	.LVL597:
 7277              	.LBB773:
 7278              	.LBI758:
1228:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 7279              		.loc 1 1228 12 is_stmt 1 view .LVU2291
 7280              	.LBB769:
1229:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 7281              		.loc 1 1229 2 view .LVU2292
1234:src/keys.c    **** 	int f = State2.dot;
 7282              		.loc 1 1234 2 view .LVU2293
1238:src/keys.c    **** 	State2.dot = 0;
 7283              		.loc 1 1238 15 is_stmt 0 view .LVU2294
 7284 0a8c 88F81530 		strb	r3, [r8, #21]
1234:src/keys.c    **** 	int f = State2.dot;
 7285              		.loc 1 1234 20 view .LVU2295
 7286 0a90 C1F3400A 		ubfx	r10, r1, #1, #1
 7287              	.LVL598:
1235:src/keys.c    **** 
 7288              		.loc 1 1235 2 is_stmt 1 view .LVU2296
1235:src/keys.c    **** 
 7289              		.loc 1 1235 16 is_stmt 0 view .LVU2297
 7290 0a94 C1F38019 		ubfx	r9, r1, #6, #1
 7291              	.LVL599:
1237:src/keys.c    **** 	State2.cmplx = 0;
 7292              		.loc 1 1237 2 is_stmt 1 view .LVU2298
1238:src/keys.c    **** 	State2.dot = 0;
 7293              		.loc 1 1238 2 view .LVU2299
1239:src/keys.c    **** #ifdef DM42
 7294              		.loc 1 1239 2 view .LVU2300
1241:src/keys.c    **** #endif
 7295              		.loc 1 1241 2 view .LVU2301
 7296              	.LBB760:
 7297              	.LBI760:
ARM GAS  /tmp/ccsJYix0.s 			page 223


 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7298              		.loc 1 104 13 view .LVU2302
 7299              	.LBE760:
 7300              	.LBE769:
 7301              	.LBE773:
 7302              	.LBE1229:
 7303              	.LBE1299:
 105:src/keys.c    **** }
 7304              		.loc 1 105 2 view .LVU2303
 7305              	.LBB1300:
 7306              	.LBB1230:
 7307              	.LBB774:
 7308              	.LBB770:
 7309              	.LBB767:
 7310              	.LBB761:
 7311              	.LBI761:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7312              		.loc 1 94 20 view .LVU2304
 7313              	.LBB762:
  95:src/keys.c    **** 	State2.shifts = shift;
 7314              		.loc 1 95 2 view .LVU2305
 7315              	.LBB763:
 7316              	.LBI763:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7317              		.loc 1 86 13 view .LVU2306
 7318              	.LBB764:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7319              		.loc 1 87 2 view .LVU2307
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7320              		.loc 1 87 18 is_stmt 0 view .LVU2308
 7321 0a98 FFF7FEFF 		bl	shift_down
 7322              	.LVL600:
  88:src/keys.c    **** }
 7323              		.loc 1 88 2 is_stmt 1 view .LVU2309
 7324              	.LBE764:
 7325              	.LBE763:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7326              		.loc 1 96 2 view .LVU2310
 7327              	.LBE762:
 7328              	.LBE761:
 7329              	.LBE767:
1243:src/keys.c    **** 
 7330              		.loc 1 1243 2 is_stmt 0 view .LVU2311
 7331 0a9c 292C     		cmp	r4, #41
 7332              	.LBB768:
 7333              	.LBB766:
 7334              	.LBB765:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7335              		.loc 1 96 16 view .LVU2312
 7336 0a9e 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 7337              		.loc 1 98 2 is_stmt 1 view .LVU2313
 7338              	.LVL601:
  98:src/keys.c    **** }
 7339              		.loc 1 98 2 is_stmt 0 view .LVU2314
 7340              	.LBE765:
 7341              	.LBE766:
ARM GAS  /tmp/ccsJYix0.s 			page 224


 7342              	.LBE768:
1243:src/keys.c    **** 
 7343              		.loc 1 1243 2 is_stmt 1 view .LVU2315
 7344 0aa2 00F0E383 		beq	.L667
 7345 0aa6 16D8     		bhi	.L668
 7346 0aa8 013C     		subs	r4, r4, #1
 7347              	.LVL602:
1243:src/keys.c    **** 
 7348              		.loc 1 1243 2 is_stmt 0 view .LVU2316
 7349 0aaa E3B2     		uxtb	r3, r4
 7350 0aac 022B     		cmp	r3, #2
 7351 0aae 00F21F81 		bhi	.L669
1248:src/keys.c    **** 
 7352              		.loc 1 1248 3 is_stmt 1 view .LVU2317
1248:src/keys.c    **** 
 7353              		.loc 1 1248 54 is_stmt 0 view .LVU2318
 7354 0ab2 894A     		ldr	r2, .L1259+12
 7355 0ab4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 7356 0ab8 02EB4404 		add	r4, r2, r4, lsl #1
 7357              	.LVL603:
1248:src/keys.c    **** 
 7358              		.loc 1 1248 27 view .LVU2319
 7359 0abc BAF1000F 		cmp	r10, #0
1248:src/keys.c    **** 
 7360              		.loc 1 1248 54 view .LVU2320
 7361 0ac0 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1248:src/keys.c    **** 
 7362              		.loc 1 1248 27 view .LVU2321
 7363 0ac4 14BF     		ite	ne
 7364 0ac6 4FF4A062 		movne	r2, #1280
 7365 0aca 4FF40072 		moveq	r2, #512
1248:src/keys.c    **** 
 7366              		.loc 1 1248 37 view .LVU2322
 7367 0ace 4BEA020B 		orr	fp, fp, r2
 7368 0ad2 5846     		mov	r0, fp
 7369 0ad4 26E5     		b	.L673
 7370              	.LVL604:
 7371              	.L668:
1243:src/keys.c    **** 
 7372              		.loc 1 1243 2 view .LVU2323
 7373 0ad6 2D2C     		cmp	r4, #45
 7374 0ad8 40F00A81 		bne	.L669
1251:src/keys.c    **** 		goto stay;
 7375              		.loc 1 1251 3 is_stmt 1 view .LVU2324
 7376 0adc 8AF0010A 		eor	r10, r10, #1
 7377              	.LVL605:
1252:src/keys.c    **** 
 7378              		.loc 1 1252 3 view .LVU2325
 7379              	.L674:
1265:src/keys.c    **** 		State2.cmplx = cmplx;
 7380              		.loc 1 1265 3 view .LVU2326
1266:src/keys.c    **** 		State2.dot = f;
 7381              		.loc 1 1266 3 view .LVU2327
1267:src/keys.c    **** 		break;
 7382              		.loc 1 1267 3 view .LVU2328
1266:src/keys.c    **** 		State2.dot = f;
 7383              		.loc 1 1266 16 is_stmt 0 view .LVU2329
ARM GAS  /tmp/ccsJYix0.s 			page 225


 7384 0ae0 4FEA4A03 		lsl	r3, r10, #1
 7385 0ae4 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 7386 0ae8 3268     		ldr	r2, [r6]
 7387 0aea 43F02003 		orr	r3, r3, #32
 7388 0aee 43EA8913 		orr	r3, r3, r9, lsl #6
 7389 0af2 03F06203 		and	r3, r3, #98
 7390 0af6 21F06201 		bic	r1, r1, #98
 7391 0afa 0B43     		orrs	r3, r3, r1
 7392 0afc 88F81530 		strb	r3, [r8, #21]
1268:src/keys.c    **** 
 7393              		.loc 1 1268 3 is_stmt 1 view .LVU2330
1273:src/keys.c    **** }
 7394              		.loc 1 1273 9 is_stmt 0 view .LVU2331
 7395 0b00 4FF0330B 		mov	fp, #51
1268:src/keys.c    **** 
 7396              		.loc 1 1268 3 view .LVU2332
 7397 0b04 FFF7D5BA 		b	.L616
 7398              	.LVL606:
 7399              	.L1164:
1268:src/keys.c    **** 
 7400              		.loc 1 1268 3 view .LVU2333
 7401              	.LBE770:
 7402              	.LBE774:
2874:src/keys.c    **** 		return STATE_IGNORE;
 7403              		.loc 1 2874 3 is_stmt 1 view .LVU2334
2874:src/keys.c    **** 		return STATE_IGNORE;
 7404              		.loc 1 2874 15 is_stmt 0 view .LVU2335
 7405 0b08 1D60     		str	r5, [r3]
2875:src/keys.c    **** 	}
 7406              		.loc 1 2875 3 is_stmt 1 view .LVU2336
 7407              	.LVL607:
2875:src/keys.c    **** 	}
 7408              		.loc 1 2875 3 is_stmt 0 view .LVU2337
 7409              	.LBE1230:
 7410              	.LBE1300:
3261:src/keys.c    **** #ifndef CONSOLE
 7411              		.loc 1 3261 3 is_stmt 1 view .LVU2338
 7412              	.LBB1301:
 7413              	.LBB1231:
2875:src/keys.c    **** 	}
 7414              		.loc 1 2875 10 is_stmt 0 view .LVU2339
 7415 0b0a 4FF0320B 		mov	fp, #50
 7416 0b0e FFF7D3BA 		b	.L632
 7417              	.LVL608:
 7418              	.L1192:
 7419              	.LBB775:
 7420              	.LBB727:
1969:src/keys.c    **** 	State2.cmplx = 0;
 7421              		.loc 1 1969 2 is_stmt 1 view .LVU2340
1970:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7422              		.loc 1 1970 15 is_stmt 0 view .LVU2341
 7423 0b12 6EF34101 		bfi	r1, lr, #1, #1
1969:src/keys.c    **** 	State2.cmplx = 0;
 7424              		.loc 1 1969 14 view .LVU2342
 7425 0b16 0720     		movs	r0, #7
1971:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7426              		.loc 1 1971 5 view .LVU2343
ARM GAS  /tmp/ccsJYix0.s 			page 226


 7427 0b18 642A     		cmp	r2, #100
1970:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7428              		.loc 1 1970 15 view .LVU2344
 7429 0b1a 88F81510 		strb	r1, [r8, #21]
1969:src/keys.c    **** 	State2.cmplx = 0;
 7430              		.loc 1 1969 14 view .LVU2345
 7431 0b1e 88F80F00 		strb	r0, [r8, #15]
1970:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7432              		.loc 1 1970 2 is_stmt 1 view .LVU2346
1971:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7433              		.loc 1 1971 2 view .LVU2347
1971:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7434              		.loc 1 1971 5 is_stmt 0 view .LVU2348
 7435 0b22 00F0D883 		beq	.L993
1967:src/keys.c    **** 
 7436              		.loc 1 1967 44 view .LVU2349
 7437 0b26 4FF02D0A 		mov	r10, #45
 7438              	.LVL609:
1967:src/keys.c    **** 
 7439              		.loc 1 1967 44 view .LVU2350
 7440 0b2a 56E7     		b	.L949
 7441              	.LVL610:
 7442              	.L991:
1967:src/keys.c    **** 
 7443              		.loc 1 1967 44 view .LVU2351
 7444              	.LBE727:
 7445              	.LBE775:
 7446              	.LBE1231:
 7447              	.LBE1301:
 7448              	.LBB1302:
 7449 0b2c AB46     		mov	fp, r5
 7450              	.LVL611:
1967:src/keys.c    **** 
 7451              		.loc 1 1967 44 view .LVU2352
 7452 0b2e FFF7E1BA 		b	.L931
 7453              	.LVL612:
 7454              	.L1170:
1967:src/keys.c    **** 
 7455              		.loc 1 1967 44 view .LVU2353
 7456              	.LBE1302:
 7457              	.LBB1303:
 7458              	.LBB1232:
2903:src/keys.c    **** 
 7459              		.loc 1 2903 3 is_stmt 1 view .LVU2354
 7460              	.LBB776:
 7461              	.LBB777:
2532:src/keys.c    **** 
 7462              		.loc 1 2532 12 is_stmt 0 view .LVU2355
 7463 0b32 6A4A     		ldr	r2, .L1259+16
 7464 0b34 1268     		ldr	r2, [r2]
2532:src/keys.c    **** 
 7465              		.loc 1 2532 31 view .LVU2356
 7466 0b36 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7467              	.LBE777:
 7468              	.LBE776:
2903:src/keys.c    **** 
 7469              		.loc 1 2903 10 view .LVU2357
ARM GAS  /tmp/ccsJYix0.s 			page 227


 7470 0b3a E4B2     		uxtb	r4, r4
 7471              	.LVL613:
 7472              	.LBB796:
 7473              	.LBI776:
2530:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7474              		.loc 1 2530 12 is_stmt 1 view .LVU2358
 7475              	.LBB788:
2531:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7476              		.loc 1 2531 2 view .LVU2359
2532:src/keys.c    **** 
 7477              		.loc 1 2532 2 view .LVU2360
2532:src/keys.c    **** 
 7478              		.loc 1 2532 31 is_stmt 0 view .LVU2361
 7479 0b3c 002A     		cmp	r2, #0
 7480 0b3e B4BF     		ite	lt
 7481 0b40 0B22     		movlt	r2, #11
 7482 0b42 0A22     		movge	r2, #10
 7483              	.LVL614:
2534:src/keys.c    **** 		if (--n < -2)
 7484              		.loc 1 2534 2 is_stmt 1 view .LVU2362
2534:src/keys.c    **** 		if (--n < -2)
 7485              		.loc 1 2534 5 is_stmt 0 view .LVU2363
 7486 0b44 122C     		cmp	r4, #18
 7487 0b46 00F00A81 		beq	.L1204
2538:src/keys.c    **** 		if (++n > max)
 7488              		.loc 1 2538 7 is_stmt 1 view .LVU2364
2538:src/keys.c    **** 		if (++n > max)
 7489              		.loc 1 2538 10 is_stmt 0 view .LVU2365
 7490 0b4a 182C     		cmp	r4, #24
 7491 0b4c 00F08181 		beq	.L1205
2542:src/keys.c    **** 		State2.status = 0;
 7492              		.loc 1 2542 7 is_stmt 1 view .LVU2366
2542:src/keys.c    **** 		State2.status = 0;
 7493              		.loc 1 2542 10 is_stmt 0 view .LVU2367
 7494 0b50 102C     		cmp	r4, #16
 7495 0b52 00F0C483 		beq	.L1206
 7496              	.LBB778:
2547:src/keys.c    **** 		if (nn <= 9)
 7497              		.loc 1 2547 3 is_stmt 1 view .LVU2368
 7498              	.LVL615:
 7499              	.LBB779:
 7500              	.LBI779:
 200:src/keys.c    **** {
 7501              		.loc 1 200 14 view .LVU2369
 7502              	.LBB780:
 202:src/keys.c    ****     // K00 - K05
 7503              		.loc 1 202 3 view .LVU2370
 224:src/keys.c    **** }
 7504              		.loc 1 224 3 view .LVU2371
 7505              	.LBB781:
 7506              	.LBI781:
 121:src/keys.c    **** {
 7507              		.loc 1 121 12 view .LVU2372
 7508              	.LBB782:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7509              		.loc 1 123 2 view .LVU2373
 133:src/keys.c    **** }
ARM GAS  /tmp/ccsJYix0.s 			page 228


 7510              		.loc 1 133 2 view .LVU2374
 133:src/keys.c    **** }
 7511              		.loc 1 133 23 is_stmt 0 view .LVU2375
 7512 0b56 5E49     		ldr	r1, .L1259+4
 7513              	.LBE782:
 7514              	.LBE781:
 224:src/keys.c    **** }
 7515              		.loc 1 224 28 view .LVU2376
 7516 0b58 5E48     		ldr	r0, .L1259+8
 7517              	.LBB784:
 7518              	.LBB783:
 133:src/keys.c    **** }
 7519              		.loc 1 133 23 view .LVU2377
 7520 0b5a 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 7521 0b5c 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 7522 0b5e 01F07F01 		and	r1, r1, #127
 7523              	.LVL616:
 133:src/keys.c    **** }
 7524              		.loc 1 133 23 view .LVU2378
 7525              	.LBE783:
 7526              	.LBE784:
 7527              	.LBE780:
 7528              	.LBE779:
2548:src/keys.c    **** 			n = nn;
 7529              		.loc 1 2548 3 is_stmt 1 view .LVU2379
2548:src/keys.c    **** 			n = nn;
 7530              		.loc 1 2548 6 is_stmt 0 view .LVU2380
 7531 0b62 0929     		cmp	r1, #9
 7532 0b64 40F2B581 		bls	.L959
2550:src/keys.c    **** 			n = n == max ? 10 : max;
 7533              		.loc 1 2550 11 view .LVU2381
 7534 0b68 7029     		cmp	r1, #112
 7535              	.LBE778:
2531:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7536              		.loc 1 2531 6 view .LVU2382
 7537 0b6a A3F10303 		sub	r3, r3, #3
 7538              	.LVL617:
 7539              	.LBB785:
2550:src/keys.c    **** 			n = n == max ? 10 : max;
 7540              		.loc 1 2550 8 is_stmt 1 view .LVU2383
2550:src/keys.c    **** 			n = n == max ? 10 : max;
 7541              		.loc 1 2550 11 is_stmt 0 view .LVU2384
 7542 0b6e 00F02085 		beq	.L1207
2552:src/keys.c    **** 			n = 10; 
 7543              		.loc 1 2552 8 is_stmt 1 view .LVU2385
 7544              	.LBE785:
2531:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7545              		.loc 1 2531 6 is_stmt 0 view .LVU2386
 7546 0b72 7F29     		cmp	r1, #127
 7547 0b74 0CBF     		ite	eq
 7548 0b76 1A46     		moveq	r2, r3
 7549              	.LVL618:
2531:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7550              		.loc 1 2531 6 view .LVU2387
 7551 0b78 0A22     		movne	r2, #10
 7552              	.LVL619:
 7553              	.L695:
ARM GAS  /tmp/ccsJYix0.s 			page 229


2555:src/keys.c    **** 
 7554              		.loc 1 2555 2 is_stmt 1 view .LVU2388
2555:src/keys.c    **** 
 7555              		.loc 1 2555 20 is_stmt 0 view .LVU2389
 7556 0b7a 0332     		adds	r2, r2, #3
 7557              	.LVL620:
2555:src/keys.c    **** 
 7558              		.loc 1 2555 16 view .LVU2390
 7559 0b7c 88F80C20 		strb	r2, [r8, #12]
2557:src/keys.c    **** }
 7560              		.loc 1 2557 2 is_stmt 1 view .LVU2391
 7561              	.LBE788:
 7562              	.LBE796:
2903:src/keys.c    **** 
 7563              		.loc 1 2903 10 is_stmt 0 view .LVU2392
 7564 0b80 4FF0330B 		mov	fp, #51
 7565 0b84 3268     		ldr	r2, [r6]
 7566              	.LVL621:
 7567              	.LBB797:
 7568              	.LBB789:
2557:src/keys.c    **** }
 7569              		.loc 1 2557 9 view .LVU2393
 7570 0b86 FFF794BA 		b	.L616
 7571              	.LVL622:
 7572              	.L1174:
2557:src/keys.c    **** }
 7573              		.loc 1 2557 9 view .LVU2394
 7574              	.LBE789:
 7575              	.LBE797:
2926:src/keys.c    **** 
 7576              		.loc 1 2926 3 is_stmt 1 view .LVU2395
 7577              	.LBB798:
 7578              	.LBB799:
 7579              	.LBB800:
 7580              	.LBB801:
 7581              	.LBB802:
 7582              	.LBB803:
 7583              	.LBB804:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7584              		.loc 1 87 18 is_stmt 0 view .LVU2396
 7585 0b8a FFF7FEFF 		bl	shift_down
 7586              	.LVL623:
 7587              	.LBE804:
 7588              	.LBE803:
 7589              	.LBE802:
 7590              	.LBE801:
 7591              	.LBE800:
 7592              	.LBE799:
 7593              	.LBE798:
2926:src/keys.c    **** 
 7594              		.loc 1 2926 10 view .LVU2397
 7595 0b8e E4B2     		uxtb	r4, r4
 7596              	.LVL624:
 7597              	.LBB825:
 7598              	.LBI798:
1280:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7599              		.loc 1 1280 12 is_stmt 1 view .LVU2398
ARM GAS  /tmp/ccsJYix0.s 			page 230


 7600              	.LBB821:
1281:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7601              		.loc 1 1281 2 view .LVU2399
1286:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7602              		.loc 1 1286 2 view .LVU2400
1290:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7603              		.loc 1 1290 2 view .LVU2401
 7604              	.LBB813:
 7605              	.LBI800:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7606              		.loc 1 104 13 view .LVU2402
 7607              	.LBE813:
 7608              	.LBE821:
 7609              	.LBE825:
 7610              	.LBE1232:
 7611              	.LBE1303:
 105:src/keys.c    **** }
 7612              		.loc 1 105 2 view .LVU2403
 7613              	.LBB1304:
 7614              	.LBB1233:
 7615              	.LBB826:
 7616              	.LBB822:
 7617              	.LBB814:
 7618              	.LBB810:
 7619              	.LBI801:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7620              		.loc 1 94 20 view .LVU2404
 7621              	.LBB807:
  95:src/keys.c    **** 	State2.shifts = shift;
 7622              		.loc 1 95 2 view .LVU2405
 7623              	.LBB806:
 7624              	.LBI803:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7625              		.loc 1 86 13 view .LVU2406
 7626              	.LBB805:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7627              		.loc 1 87 2 view .LVU2407
  88:src/keys.c    **** }
 7628              		.loc 1 88 2 view .LVU2408
  88:src/keys.c    **** }
 7629              		.loc 1 88 52 is_stmt 0 view .LVU2409
 7630 0b90 8346     		mov	fp, r0
 7631 0b92 08B9     		cbnz	r0, .L705
 7632 0b94 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7633              	.L705:
 7634              	.LVL625:
  88:src/keys.c    **** }
 7635              		.loc 1 88 52 view .LVU2410
 7636              	.LBE805:
 7637              	.LBE806:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7638              		.loc 1 96 2 is_stmt 1 view .LVU2411
 7639              	.LBE807:
 7640              	.LBE810:
 7641              	.LBE814:
1293:src/keys.c    **** #ifdef DM42
 7642              		.loc 1 1293 15 is_stmt 0 view .LVU2412
ARM GAS  /tmp/ccsJYix0.s 			page 231


 7643 0b98 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7644              	.LBB815:
 7645              	.LBB811:
 7646              	.LBB808:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7647              		.loc 1 96 16 view .LVU2413
 7648 0b9c 0023     		movs	r3, #0
 7649              	.LBE808:
 7650              	.LBE811:
 7651              	.LBE815:
1291:src/keys.c    **** 
 7652              		.loc 1 1291 23 view .LVU2414
 7653 0b9e ABF1010A 		sub	r10, fp, #1
 7654              	.LVL626:
1293:src/keys.c    **** #ifdef DM42
 7655              		.loc 1 1293 15 view .LVU2415
 7656 0ba2 63F38202 		bfi	r2, r3, #2, #1
1291:src/keys.c    **** 
 7657              		.loc 1 1291 23 view .LVU2416
 7658 0ba6 BAFA8AFA 		clz	r10, r10
1293:src/keys.c    **** #ifdef DM42
 7659              		.loc 1 1293 15 view .LVU2417
 7660 0baa 88F81520 		strb	r2, [r8, #21]
 7661              	.LBB816:
 7662              	.LBB812:
 7663              	.LBB809:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7664              		.loc 1 96 16 view .LVU2418
 7665 0bae 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 7666              		.loc 1 98 2 is_stmt 1 view .LVU2419
 7667              	.LVL627:
  98:src/keys.c    **** }
 7668              		.loc 1 98 2 is_stmt 0 view .LVU2420
 7669              	.LBE809:
 7670              	.LBE812:
 7671              	.LBE816:
1291:src/keys.c    **** 
 7672              		.loc 1 1291 2 is_stmt 1 view .LVU2421
1291:src/keys.c    **** 
 7673              		.loc 1 1291 23 is_stmt 0 view .LVU2422
 7674 0bb2 4FEA5A1A 		lsr	r10, r10, #5
 7675              	.LVL628:
1293:src/keys.c    **** #ifdef DM42
 7676              		.loc 1 1293 2 is_stmt 1 view .LVU2423
1295:src/keys.c    **** 	display_current_menu ();
 7677              		.loc 1 1295 2 view .LVU2424
 7678 0bb6 FFF7FEFF 		bl	set_last_menu
 7679              	.LVL629:
1296:src/keys.c    **** #endif
 7680              		.loc 1 1296 2 view .LVU2425
 7681 0bba FFF7FEFF 		bl	display_current_menu
 7682              	.LVL630:
1298:src/keys.c    **** 	
 7683              		.loc 1 1298 2 view .LVU2426
1298:src/keys.c    **** 	
 7684              		.loc 1 1298 5 is_stmt 0 view .LVU2427
ARM GAS  /tmp/ccsJYix0.s 			page 232


 7685 0bbe BBF1000F 		cmp	fp, #0
 7686 0bc2 09D0     		beq	.L708
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7687              		.loc 1 1300 2 is_stmt 1 view .LVU2428
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7688              		.loc 1 1300 15 is_stmt 0 view .LVU2429
 7689 0bc4 A31F     		subs	r3, r4, #6
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7690              		.loc 1 1300 5 view .LVU2430
 7691 0bc6 DAB2     		uxtb	r2, r3
 7692 0bc8 022A     		cmp	r2, #2
 7693 0bca 40F23B81 		bls	.L1208
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7694              		.loc 1 1303 2 is_stmt 1 view .LVU2431
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7695              		.loc 1 1303 15 is_stmt 0 view .LVU2432
 7696 0bce 0E3C     		subs	r4, r4, #14
 7697              	.LVL631:
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7698              		.loc 1 1303 5 view .LVU2433
 7699 0bd0 E3B2     		uxtb	r3, r4
 7700 0bd2 012B     		cmp	r3, #1
 7701 0bd4 40F27F81 		bls	.L1209
 7702              	.LVL632:
 7703              	.L708:
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7704              		.loc 1 1303 5 view .LVU2434
 7705 0bd8 3268     		ldr	r2, [r6]
1298:src/keys.c    **** 	
 7706              		.loc 1 1298 31 view .LVU2435
 7707 0bda 4FF0330B 		mov	fp, #51
 7708              	.LVL633:
1298:src/keys.c    **** 	
 7709              		.loc 1 1298 31 view .LVU2436
 7710 0bde FFF768BA 		b	.L616
 7711              	.LVL634:
 7712              	.L1175:
1298:src/keys.c    **** 	
 7713              		.loc 1 1298 31 view .LVU2437
 7714              	.LBE822:
 7715              	.LBE826:
 7716              	.LBB827:
 7717              	.LBB665:
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7718              		.loc 1 266 16 view .LVU2438
 7719 0be2 BAF1030F 		cmp	r10, #3
 7720 0be6 00F04381 		beq	.L1210
 269:src/keys.c    ****     /*
 7721              		.loc 1 269 3 is_stmt 1 view .LVU2439
 269:src/keys.c    ****     /*
 7722              		.loc 1 269 23 is_stmt 0 view .LVU2440
 7723 0bea 3D4A     		ldr	r2, .L1259+20
 7724 0bec D8F81430 		ldr	r3, [r8, #20]
 269:src/keys.c    ****     /*
 7725              		.loc 1 269 6 view .LVU2441
 7726 0bf0 1A42     		tst	r2, r3
 7727 0bf2 3FF45CAB 		beq	.L722
ARM GAS  /tmp/ccsJYix0.s 			page 233


 7728              	.L714:
 7729              	.LBB660:
 338:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7730              		.loc 1 338 5 is_stmt 1 view .LVU2442
 362:src/keys.c    **** 
 7731              		.loc 1 362 5 view .LVU2443
 367:src/keys.c    ****     col = smap[shift];
 7732              		.loc 1 367 5 view .LVU2444
 7733              	.LVL635:
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7734              		.loc 1 368 5 view .LVU2445
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7735              		.loc 1 368 15 is_stmt 0 view .LVU2446
 7736 0bf6 3B4A     		ldr	r2, .L1259+24
 367:src/keys.c    ****     col = smap[shift];
 7737              		.loc 1 367 8 view .LVU2447
 7738 0bf8 3B4B     		ldr	r3, .L1259+28
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7739              		.loc 1 368 9 view .LVU2448
 7740 0bfa 12F80AC0 		ldrb	ip, [r2, r10]	@ zero_extendqisi2
 7741              	.LVL636:
 369:src/keys.c    ****   }
 7742              		.loc 1 369 5 is_stmt 1 view .LVU2449
 369:src/keys.c    ****   }
 7743              		.loc 1 369 9 is_stmt 0 view .LVU2450
 7744 0bfe 0822     		movs	r2, #8
 7745 0c00 FFF729BB 		b	.L717
 7746              	.LVL637:
 7747              	.L684:
 369:src/keys.c    ****   }
 7748              		.loc 1 369 9 view .LVU2451
 7749              	.LBE660:
 7750              	.LBE665:
 7751              	.LBE827:
 7752              	.LBB828:
 7753              	.LBB728:
1991:src/keys.c    **** 		// digit 2..9, -> or .
 7754              		.loc 1 1991 7 is_stmt 1 view .LVU2452
1991:src/keys.c    **** 		// digit 2..9, -> or .
 7755              		.loc 1 1991 10 is_stmt 0 view .LVU2453
 7756 0c04 092A     		cmp	r2, #9
 7757 0c06 48D9     		bls	.L686
 7758              	.L678:
1991:src/keys.c    **** 		// digit 2..9, -> or .
 7759              		.loc 1 1991 19 view .LVU2454
 7760 0c08 2C2C     		cmp	r4, #44
 7761 0c0a 46D0     		beq	.L686
1991:src/keys.c    **** 		// digit 2..9, -> or .
 7762              		.loc 1 1991 35 view .LVU2455
 7763 0c0c 262C     		cmp	r4, #38
 7764 0c0e 44D0     		beq	.L686
1997:src/keys.c    **** 	case K11:					// tests vs register
 7765              		.loc 1 1997 2 is_stmt 1 view .LVU2456
 7766 0c10 0C2C     		cmp	r4, #12
 7767 0c12 00F04381 		beq	.L689
 7768 0c16 102C     		cmp	r4, #16
 7769 0c18 00F03B81 		beq	.L690
ARM GAS  /tmp/ccsJYix0.s 			page 234


 7770 0c1c 072C     		cmp	r4, #7
 7771 0c1e 00F03D81 		beq	.L689
 7772              	.L681:
2011:src/keys.c    **** 	State2.cmplx = cmpx;
 7773              		.loc 1 2011 2 view .LVU2457
2012:src/keys.c    **** 	return STATE_UNFINISHED;
 7774              		.loc 1 2012 15 is_stmt 0 view .LVU2458
 7775 0c22 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 7776 0c26 3268     		ldr	r2, [r6]
2011:src/keys.c    **** 	State2.cmplx = cmpx;
 7777              		.loc 1 2011 14 view .LVU2459
 7778 0c28 88F80FB0 		strb	fp, [r8, #15]
2012:src/keys.c    **** 	return STATE_UNFINISHED;
 7779              		.loc 1 2012 2 is_stmt 1 view .LVU2460
2012:src/keys.c    **** 	return STATE_UNFINISHED;
 7780              		.loc 1 2012 15 is_stmt 0 view .LVU2461
 7781 0c2c 6EF34103 		bfi	r3, lr, #1, #1
 7782 0c30 88F81530 		strb	r3, [r8, #21]
2013:src/keys.c    **** }
 7783              		.loc 1 2013 2 is_stmt 1 view .LVU2462
2013:src/keys.c    **** }
 7784              		.loc 1 2013 9 is_stmt 0 view .LVU2463
 7785 0c34 4FF0330B 		mov	fp, #51
 7786              	.LVL638:
2013:src/keys.c    **** }
 7787              		.loc 1 2013 9 view .LVU2464
 7788 0c38 FFF73BBA 		b	.L616
 7789              	.LVL639:
 7790              	.L1203:
2013:src/keys.c    **** }
 7791              		.loc 1 2013 9 view .LVU2465
 7792 0c3c 3268     		ldr	r2, [r6]
 7793              	.LBE728:
 7794              	.LBE828:
 7795              	.LBE1233:
 7796              	.LBE1304:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 7797              		.loc 1 3014 7 view .LVU2466
 7798 0c3e 0025     		movs	r5, #0
 7799              	.LBB1305:
3189:src/keys.c    **** 	}
 7800              		.loc 1 3189 6 view .LVU2467
 7801 0c40 4FF0330B 		mov	fp, #51
 7802 0c44 FFF735BA 		b	.L616
 7803              	.LVL640:
 7804              	.L1193:
3189:src/keys.c    **** 	}
 7805              		.loc 1 3189 6 view .LVU2468
 7806              	.LBE1305:
 7807              	.LBB1306:
 7808              	.LBB1234:
 7809              	.LBB829:
 7810              	.LBB747:
1342:src/keys.c    **** 	}
 7811              		.loc 1 1342 3 is_stmt 1 view .LVU2469
1342:src/keys.c    **** 	}
 7812              		.loc 1 1342 8 is_stmt 0 view .LVU2470
ARM GAS  /tmp/ccsJYix0.s 			page 235


 7813 0c48 FFF7FEFF 		bl	gtodot_digit
 7814              	.LVL641:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7815              		.loc 1 1391 2 is_stmt 1 view .LVU2471
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7816              		.loc 1 1391 5 is_stmt 0 view .LVU2472
 7817 0c4c 0028     		cmp	r0, #0
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7818              		.loc 1 1391 5 view .LVU2473
 7819 0c4e 62DA     		bge	.L649
 7820 0c50 3268     		ldr	r2, [r6]
 7821              	.LBE747:
 7822              	.LBE829:
2894:src/keys.c    **** 
 7823              		.loc 1 2894 10 view .LVU2474
 7824 0c52 4FF0330B 		mov	fp, #51
 7825 0c56 FFF72CBA 		b	.L616
 7826              	.LVL642:
 7827              	.L679:
 7828              	.LBB830:
 7829              	.LBB729:
1983:src/keys.c    **** 		// Special 0
 7830              		.loc 1 1983 7 is_stmt 1 view .LVU2475
1983:src/keys.c    **** 		// Special 0
 7831              		.loc 1 1983 10 is_stmt 0 view .LVU2476
 7832 0c5a 002A     		cmp	r2, #0
 7833 0c5c 41F05D80 		bne	.L682
1985:src/keys.c    **** 	}
 7834              		.loc 1 1985 3 is_stmt 1 view .LVU2477
1985:src/keys.c    **** 	}
 7835              		.loc 1 1985 18 is_stmt 0 view .LVU2478
 7836 0c60 BEF1000F 		cmp	lr, #0
 7837 0c64 14BF     		ite	ne
 7838 0c66 2523     		movne	r3, #37
 7839 0c68 1723     		moveq	r3, #23
1985:src/keys.c    **** 	}
 7840              		.loc 1 1985 47 view .LVU2479
 7841 0c6a 9B44     		add	fp, fp, r3
 7842              	.LVL643:
1985:src/keys.c    **** 	}
 7843              		.loc 1 1985 47 view .LVU2480
 7844 0c6c FFF7E8BB 		b	.L646
 7845              	.LVL644:
 7846              	.L1177:
1985:src/keys.c    **** 	}
 7847              		.loc 1 1985 47 view .LVU2481
 7848              	.LBE729:
 7849              	.LBE830:
 7850              	.LBB831:
 7851              	.LBB666:
 377:src/keys.c    ****       break;
 7852              		.loc 1 377 7 is_stmt 1 view .LVU2482
 377:src/keys.c    ****       break;
 7853              		.loc 1 377 11 is_stmt 0 view .LVU2483
 7854 0c70 6344     		add	r3, r3, ip
 7855              	.LVL645:
 377:src/keys.c    ****       break;
ARM GAS  /tmp/ccsJYix0.s 			page 236


 7856              		.loc 1 377 11 view .LVU2484
 7857 0c72 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7858              	.LVL646:
 378:src/keys.c    ****     }
 7859              		.loc 1 378 7 is_stmt 1 view .LVU2485
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7860              		.loc 1 381 3 view .LVU2486
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7861              		.loc 1 381 6 is_stmt 0 view .LVU2487
 7862 0c76 0B07     		lsls	r3, r1, #28
 7863 0c78 40F1CF80 		bpl	.L1211
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7864              		.loc 1 381 20 view .LVU2488
 7865 0c7c ABF10B03 		sub	r3, fp, #11
 7866 0c80 042B     		cmp	r3, #4
 7867 0c82 71D8     		bhi	.L728
 7868              	.LVL647:
 7869              	.L712:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7870              		.loc 1 381 20 view .LVU2489
 7871              	.LBE666:
 7872              	.LBE831:
2935:src/keys.c    **** 			return STATE_UNFINISHED;
 7873              		.loc 1 2935 3 is_stmt 1 view .LVU2490
2935:src/keys.c    **** 			return STATE_UNFINISHED;
 7874              		.loc 1 2935 7 is_stmt 0 view .LVU2491
 7875 0c84 FFF7FEFF 		bl	is_bad_cmdline
 7876              	.LVL648:
2935:src/keys.c    **** 			return STATE_UNFINISHED;
 7877              		.loc 1 2935 6 view .LVU2492
 7878 0c88 0446     		mov	r4, r0
 7879 0c8a 0028     		cmp	r0, #0
 7880 0c8c 00F01681 		beq	.L727
 7881 0c90 3268     		ldr	r2, [r6]
2936:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
 7882              		.loc 1 2936 11 view .LVU2493
 7883 0c92 4FF0330B 		mov	fp, #51
 7884 0c96 FFF70CBA 		b	.L616
 7885              	.LVL649:
 7886              	.L686:
 7887              	.LBB832:
 7888              	.LBB730:
1993:src/keys.c    **** 		return process_arg(c);
 7889              		.loc 1 1993 3 is_stmt 1 view .LVU2494
 7890              	.LBB723:
 7891              	.LBI723:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 7892              		.loc 1 506 13 view .LVU2495
 7893              	.LBB724:
 507:src/keys.c    **** 		return;
 7894              		.loc 1 507 2 view .LVU2496
 507:src/keys.c    **** 		return;
 7895              		.loc 1 507 6 is_stmt 0 view .LVU2497
 7896 0c9a FFF7FEFF 		bl	is_bad_cmdline
 7897              	.LVL650:
 507:src/keys.c    **** 		return;
 7898              		.loc 1 507 5 view .LVU2498
ARM GAS  /tmp/ccsJYix0.s 			page 237


 7899 0c9e 18B9     		cbnz	r0, .L688
 7900 0ca0 5FFA8AF0 		uxtb	r0, r10
 7901 0ca4 FFF7FEFF 		bl	init_arg.part.0
 7902              	.LVL651:
 7903              	.L688:
 507:src/keys.c    **** 		return;
 7904              		.loc 1 507 5 view .LVU2499
 7905              	.LBE724:
 7906              	.LBE723:
1994:src/keys.c    **** 	}
 7907              		.loc 1 1994 3 is_stmt 1 view .LVU2500
1994:src/keys.c    **** 	}
 7908              		.loc 1 1994 10 is_stmt 0 view .LVU2501
 7909 0ca8 2046     		mov	r0, r4
 7910 0caa FFF7FEFF 		bl	process_arg
 7911              	.LVL652:
 7912 0cae 8346     		mov	fp, r0
 7913              	.LVL653:
1994:src/keys.c    **** 	}
 7914              		.loc 1 1994 10 view .LVU2502
 7915 0cb0 FFF7C6BB 		b	.L646
 7916              	.LVL654:
 7917              	.L1171:
1994:src/keys.c    **** 	}
 7918              		.loc 1 1994 10 view .LVU2503
 7919              	.LBE730:
 7920              	.LBE832:
2909:src/keys.c    **** 		return STATE_UNFINISHED;
 7921              		.loc 1 2909 3 is_stmt 1 view .LVU2504
 7922              	.LBB833:
 7923              	.LBI833:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7924              		.loc 1 111 13 view .LVU2505
 7925              	.LBB834:
 112:src/keys.c    **** }
 7926              		.loc 1 112 2 view .LVU2506
 112:src/keys.c    **** }
 7927              		.loc 1 112 16 is_stmt 0 view .LVU2507
 7928 0cb4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7929 0cb8 3268     		ldr	r2, [r6]
 7930 0cba 013B     		subs	r3, r3, #1
 7931 0cbc 18BF     		it	ne
 7932 0cbe 0123     		movne	r3, #1
 7933 0cc0 88F81030 		strb	r3, [r8, #16]
 7934              	.LVL655:
 112:src/keys.c    **** }
 7935              		.loc 1 112 16 view .LVU2508
 7936              	.LBE834:
 7937              	.LBE833:
2910:src/keys.c    **** 	}
 7938              		.loc 1 2910 3 is_stmt 1 view .LVU2509
2910:src/keys.c    **** 	}
 7939              		.loc 1 2910 10 is_stmt 0 view .LVU2510
 7940 0cc4 4FF0330B 		mov	fp, #51
 7941 0cc8 FFF7F3B9 		b	.L616
 7942              	.L1260:
 7943              		.align	2
ARM GAS  /tmp/ccsJYix0.s 			page 238


 7944              	.L1259:
 7945 0ccc 00040800 		.word	525312
 7946 0cd0 00000000 		.word	.LANCHOR1
 7947 0cd4 00000000 		.word	.LANCHOR0
 7948 0cd8 00000000 		.word	.LANCHOR13
 7949 0cdc 00000000 		.word	main_ram
 7950 0ce0 00080800 		.word	526336
 7951 0ce4 00000000 		.word	.LANCHOR16
 7952 0ce8 00000000 		.word	.LANCHOR10
 7953 0cec 00000000 		.word	StateWhileOn
 7954              	.LVL656:
 7955              	.L669:
2910:src/keys.c    **** 	}
 7956              		.loc 1 2910 10 view .LVU2511
 7957 0cf0 3268     		ldr	r2, [r6]
 7958              	.LBB835:
 7959              	.LBB771:
1273:src/keys.c    **** }
 7960              		.loc 1 1273 9 view .LVU2512
 7961 0cf2 4FF0330B 		mov	fp, #51
 7962 0cf6 FFF7DCB9 		b	.L616
 7963              	.LVL657:
 7964              	.L1172:
1273:src/keys.c    **** }
 7965              		.loc 1 1273 9 view .LVU2513
 7966              	.LBE771:
 7967              	.LBE835:
2913:src/keys.c    **** 		return STATE_UNFINISHED;
 7968              		.loc 1 2913 3 is_stmt 1 view .LVU2514
 7969              	.LBB836:
 7970              	.LBI836:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7971              		.loc 1 111 13 view .LVU2515
 7972              	.LBB837:
 112:src/keys.c    **** }
 7973              		.loc 1 112 2 view .LVU2516
 112:src/keys.c    **** }
 7974              		.loc 1 112 16 is_stmt 0 view .LVU2517
 7975 0cfa 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 7976 0cfe 3268     		ldr	r2, [r6]
 7977 0d00 0229     		cmp	r1, #2
 7978 0d02 18BF     		it	ne
 7979 0d04 0223     		movne	r3, #2
 7980 0d06 88F81030 		strb	r3, [r8, #16]
 7981              	.LVL658:
 112:src/keys.c    **** }
 7982              		.loc 1 112 16 view .LVU2518
 7983              	.LBE837:
 7984              	.LBE836:
2914:src/keys.c    **** 	}
 7985              		.loc 1 2914 3 is_stmt 1 view .LVU2519
2914:src/keys.c    **** 	}
 7986              		.loc 1 2914 10 is_stmt 0 view .LVU2520
 7987 0d0a 4FF0330B 		mov	fp, #51
 7988 0d0e FFF7D0B9 		b	.L616
 7989              	.LVL659:
 7990              	.L1200:
ARM GAS  /tmp/ccsJYix0.s 			page 239


 7991              	.LBB838:
 7992              	.LBB748:
1362:src/keys.c    **** 	}
 7993              		.loc 1 1362 3 is_stmt 1 view .LVU2521
1362:src/keys.c    **** 	}
 7994              		.loc 1 1362 6 is_stmt 0 view .LVU2522
 7995 0d12 B8F80800 		ldrh	r0, [r8, #8]
 7996              	.LVL660:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7997              		.loc 1 1391 2 is_stmt 1 view .LVU2523
 7998              	.L649:
1392:src/keys.c    **** fin:		set_pc(rawpc);
 7999              		.loc 1 1392 3 view .LVU2524
1392:src/keys.c    **** fin:		set_pc(rawpc);
 8000              		.loc 1 1392 11 is_stmt 0 view .LVU2525
 8001 0d16 FFF7FEFF 		bl	find_user_pc
 8002              	.LVL661:
 8003              	.L658:
1393:src/keys.c    **** fin2:		State2.gtodot = 0;
 8004              		.loc 1 1393 7 is_stmt 1 view .LVU2526
 8005 0d1a FFF7FEFF 		bl	set_pc
 8006              	.LVL662:
 8007              	.L662:
1394:src/keys.c    **** 		State2.digval = 0;
 8008              		.loc 1 1394 8 view .LVU2527
1394:src/keys.c    **** 		State2.digval = 0;
 8009              		.loc 1 1394 22 is_stmt 0 view .LVU2528
 8010 0d1e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 8011 0d22 3268     		ldr	r2, [r6]
1395:src/keys.c    **** 		State2.numdigit = 0;
 8012              		.loc 1 1395 17 view .LVU2529
 8013 0d24 0023     		movs	r3, #0
1394:src/keys.c    **** 		State2.digval = 0;
 8014              		.loc 1 1394 22 view .LVU2530
 8015 0d26 6FF30001 		bfc	r1, #0, #1
 8016 0d2a 88F81510 		strb	r1, [r8, #21]
1395:src/keys.c    **** 		State2.numdigit = 0;
 8017              		.loc 1 1395 3 is_stmt 1 view .LVU2531
1395:src/keys.c    **** 		State2.numdigit = 0;
 8018              		.loc 1 1395 17 is_stmt 0 view .LVU2532
 8019 0d2e A8F80830 		strh	r3, [r8, #8]	@ movhi
1396:src/keys.c    **** 	}
 8020              		.loc 1 1396 3 is_stmt 1 view .LVU2533
1396:src/keys.c    **** 	}
 8021              		.loc 1 1396 19 is_stmt 0 view .LVU2534
 8022 0d32 88F80B30 		strb	r3, [r8, #11]
 8023              	.LBE748:
 8024              	.LBE838:
2894:src/keys.c    **** 
 8025              		.loc 1 2894 10 view .LVU2535
 8026 0d36 4FF0330B 		mov	fp, #51
 8027 0d3a FFF7BAB9 		b	.L616
 8028              	.LVL663:
 8029              	.L1173:
2917:src/keys.c    **** 		State2.arrow = 0;
 8030              		.loc 1 2917 3 is_stmt 1 view .LVU2536
 8031              	.LBB839:
ARM GAS  /tmp/ccsJYix0.s 			page 240


 8032              	.LBI839:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8033              		.loc 1 111 13 view .LVU2537
 8034              	.LBB840:
 112:src/keys.c    **** }
 8035              		.loc 1 112 2 view .LVU2538
 112:src/keys.c    **** }
 8036              		.loc 1 112 16 is_stmt 0 view .LVU2539
 8037 0d3e 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 8038              	.LVL664:
 112:src/keys.c    **** }
 8039              		.loc 1 112 16 view .LVU2540
 8040 0d42 3268     		ldr	r2, [r6]
 8041 0d44 032C     		cmp	r4, #3
 8042              	.LBE840:
 8043              	.LBE839:
2918:src/keys.c    **** 		return STATE_UNFINISHED;
 8044              		.loc 1 2918 16 view .LVU2541
 8045 0d46 60F38201 		bfi	r1, r0, #2, #1
 8046              	.LBB843:
 8047              	.LBB841:
 112:src/keys.c    **** }
 8048              		.loc 1 112 16 view .LVU2542
 8049 0d4a 18BF     		it	ne
 8050 0d4c 0323     		movne	r3, #3
 8051              	.LBE841:
 8052              	.LBE843:
2918:src/keys.c    **** 		return STATE_UNFINISHED;
 8053              		.loc 1 2918 16 view .LVU2543
 8054 0d4e 88F81510 		strb	r1, [r8, #21]
 8055              	.LBB844:
 8056              	.LBB842:
 112:src/keys.c    **** }
 8057              		.loc 1 112 16 view .LVU2544
 8058 0d52 88F81030 		strb	r3, [r8, #16]
 8059              	.LVL665:
 112:src/keys.c    **** }
 8060              		.loc 1 112 16 view .LVU2545
 8061              	.LBE842:
 8062              	.LBE844:
2918:src/keys.c    **** 		return STATE_UNFINISHED;
 8063              		.loc 1 2918 3 is_stmt 1 view .LVU2546
2919:src/keys.c    **** 	}
 8064              		.loc 1 2919 3 view .LVU2547
2919:src/keys.c    **** 	}
 8065              		.loc 1 2919 10 is_stmt 0 view .LVU2548
 8066 0d56 4FF0330B 		mov	fp, #51
 8067 0d5a FFF7AAB9 		b	.L616
 8068              	.LVL666:
 8069              	.L1204:
 8070              	.LBB845:
 8071              	.LBB790:
2535:src/keys.c    **** 			n = max;
 8072              		.loc 1 2535 3 is_stmt 1 view .LVU2549
2535:src/keys.c    **** 			n = max;
 8073              		.loc 1 2535 6 is_stmt 0 view .LVU2550
 8074 0d5e 191F     		subs	r1, r3, #4
ARM GAS  /tmp/ccsJYix0.s 			page 241


 8075              	.LVL667:
2535:src/keys.c    **** 			n = max;
 8076              		.loc 1 2535 6 view .LVU2551
 8077 0d60 012B     		cmp	r3, #1
 8078 0d62 18BF     		it	ne
 8079 0d64 0A46     		movne	r2, r1
 8080              	.LVL668:
2535:src/keys.c    **** 			n = max;
 8081              		.loc 1 2535 6 view .LVU2552
 8082 0d66 08E7     		b	.L695
 8083              	.LVL669:
 8084              	.L728:
2535:src/keys.c    **** 			n = max;
 8085              		.loc 1 2535 6 view .LVU2553
 8086              	.LBE790:
 8087              	.LBE845:
2946:src/keys.c    **** 
 8088              		.loc 1 2946 3 is_stmt 1 view .LVU2554
 8089              	.LBB846:
 8090              	.LBI846:
2426:src/keys.c    **** 	enum shifts shift = reset_shift();
 8091              		.loc 1 2426 12 view .LVU2555
 8092              	.LBB847:
2427:src/keys.c    **** 	unsigned int ch = 0;
 8093              		.loc 1 2427 2 view .LVU2556
 8094              	.LBB848:
 8095              	.LBI848:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8096              		.loc 1 104 13 view .LVU2557
 8097              	.LBE848:
 8098              	.LBE847:
 8099              	.LBE846:
 8100              	.LBE1234:
 8101              	.LBE1306:
 105:src/keys.c    **** }
 8102              		.loc 1 105 2 view .LVU2558
 8103              	.LBB1307:
 8104              	.LBB1235:
 8105              	.LBB884:
 8106              	.LBB876:
 8107              	.LBB855:
 8108              	.LBB849:
 8109              	.LBI849:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8110              		.loc 1 94 20 view .LVU2559
 8111              	.LBB850:
  95:src/keys.c    **** 	State2.shifts = shift;
 8112              		.loc 1 95 2 view .LVU2560
 8113              	.LBB851:
 8114              	.LBI851:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8115              		.loc 1 86 13 view .LVU2561
 8116              	.LBB852:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8117              		.loc 1 87 2 view .LVU2562
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8118              		.loc 1 87 18 is_stmt 0 view .LVU2563
ARM GAS  /tmp/ccsJYix0.s 			page 242


 8119 0d68 FFF7FEFF 		bl	shift_down
 8120              	.LVL670:
  88:src/keys.c    **** }
 8121              		.loc 1 88 2 is_stmt 1 view .LVU2564
  88:src/keys.c    **** }
 8122              		.loc 1 88 52 is_stmt 0 view .LVU2565
 8123 0d6c 0146     		mov	r1, r0
 8124 0d6e 08B9     		cbnz	r0, .L725
 8125 0d70 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 8126              	.L725:
 8127              	.LVL671:
  88:src/keys.c    **** }
 8128              		.loc 1 88 52 view .LVU2566
 8129              	.LBE852:
 8130              	.LBE851:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8131              		.loc 1 96 2 is_stmt 1 view .LVU2567
 8132              	.LBE850:
 8133              	.LBE849:
 8134              	.LBE855:
2431:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8135              		.loc 1 2431 5 is_stmt 0 view .LVU2568
 8136 0d74 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 8137              	.LBB856:
 8138              	.LBB854:
 8139              	.LBB853:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8140              		.loc 1 96 16 view .LVU2569
 8141 0d78 0023     		movs	r3, #0
 8142 0d7a 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 8143              		.loc 1 98 2 is_stmt 1 view .LVU2570
 8144              	.LVL672:
  98:src/keys.c    **** }
 8145              		.loc 1 98 2 is_stmt 0 view .LVU2571
 8146              	.LBE853:
 8147              	.LBE854:
 8148              	.LBE856:
2428:src/keys.c    **** 	unsigned int opcode;
 8149              		.loc 1 2428 2 is_stmt 1 view .LVU2572
2429:src/keys.c    **** 
 8150              		.loc 1 2429 2 view .LVU2573
2431:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8151              		.loc 1 2431 2 view .LVU2574
2431:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8152              		.loc 1 2431 5 is_stmt 0 view .LVU2575
 8153 0d7e 0028     		cmp	r0, #0
 8154 0d80 40F0B783 		bne	.L1212
2440:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 8155              		.loc 1 2440 2 is_stmt 1 view .LVU2576
 8156 0d84 102C     		cmp	r4, #16
 8157 0d86 00F03185 		beq	.L732
 8158 0d8a 242C     		cmp	r4, #36
 8159 0d8c 00F01785 		beq	.L733
 8160 0d90 0C2C     		cmp	r4, #12
 8161 0d92 00F01384 		beq	.L1213
 8162              	.L734:
ARM GAS  /tmp/ccsJYix0.s 			page 243


2473:src/keys.c    **** 	if (ch == 0)
 8163              		.loc 1 2473 2 view .LVU2577
 8164              	.LBB857:
 8165              	.LBB858:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8166              		.loc 1 439 6 is_stmt 0 view .LVU2578
 8167 0d96 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8168              	.LVL673:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8169              		.loc 1 439 6 view .LVU2579
 8170              	.LBE858:
 8171              	.LBI857:
 389:src/keys.c    **** {
 8172              		.loc 1 389 12 is_stmt 1 view .LVU2580
 8173              	.LBB863:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 8174              		.loc 1 391 2 view .LVU2581
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8175              		.loc 1 439 2 view .LVU2582
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8176              		.loc 1 439 5 is_stmt 0 view .LVU2583
 8177 0d9a DB06     		lsls	r3, r3, #27
 8178 0d9c 03D5     		bpl	.L738
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 8179              		.loc 1 440 3 is_stmt 1 view .LVU2584
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 8180              		.loc 1 440 6 is_stmt 0 view .LVU2585
 8181 0d9e 0029     		cmp	r1, #0
 8182 0da0 40F0CF86 		bne	.L1214
 441:src/keys.c    **** 		else if (shift == SHIFT_G)
 8183              		.loc 1 441 10 view .LVU2586
 8184 0da4 0421     		movs	r1, #4
 8185              	.LVL674:
 8186              	.L738:
 445:src/keys.c    **** }
 8187              		.loc 1 445 2 is_stmt 1 view .LVU2587
 8188              	.LBB859:
 8189              	.LBI859:
 121:src/keys.c    **** {
 8190              		.loc 1 121 12 view .LVU2588
 8191              	.LBB860:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8192              		.loc 1 123 2 view .LVU2589
 133:src/keys.c    **** }
 8193              		.loc 1 133 2 view .LVU2590
 133:src/keys.c    **** }
 8194              		.loc 1 133 23 is_stmt 0 view .LVU2591
 8195 0da6 AF4B     		ldr	r3, .L1261
 8196              	.LBE860:
 8197              	.LBE859:
 445:src/keys.c    **** }
 8198              		.loc 1 445 49 view .LVU2592
 8199 0da8 AF4A     		ldr	r2, .L1261+4
 8200              	.LBB862:
 8201              	.LBB861:
 133:src/keys.c    **** }
 8202              		.loc 1 133 23 view .LVU2593
ARM GAS  /tmp/ccsJYix0.s 			page 244


 8203 0daa 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8204              	.LBE861:
 8205              	.LBE862:
 445:src/keys.c    **** }
 8206              		.loc 1 445 49 view .LVU2594
 8207 0dac 0620     		movs	r0, #6
 8208 0dae 00FB0323 		mla	r3, r0, r3, r2
 8209              	.LBE863:
 8210              	.LBE857:
2473:src/keys.c    **** 	if (ch == 0)
 8211              		.loc 1 2473 5 view .LVU2595
 8212 0db2 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 8213              	.LVL675:
2474:src/keys.c    **** 		return STATE_UNFINISHED;
 8214              		.loc 1 2474 2 is_stmt 1 view .LVU2596
2474:src/keys.c    **** 		return STATE_UNFINISHED;
 8215              		.loc 1 2474 5 is_stmt 0 view .LVU2597
 8216 0db4 0028     		cmp	r0, #0
 8217 0db6 00F09685 		beq	.L1215
 8218              	.L731:
2477:src/keys.c    **** 		State2.digval = ch;
 8219              		.loc 1 2477 2 is_stmt 1 view .LVU2598
2477:src/keys.c    **** 		State2.digval = ch;
 8220              		.loc 1 2477 12 is_stmt 0 view .LVU2599
 8221 0dba 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2477:src/keys.c    **** 		State2.digval = ch;
 8222              		.loc 1 2477 5 view .LVU2600
 8223 0dbe 002B     		cmp	r3, #0
 8224 0dc0 00F03185 		beq	.L1216
2481:src/keys.c    **** 		State2.digval2 = ch;
 8225              		.loc 1 2481 9 is_stmt 1 view .LVU2601
2481:src/keys.c    **** 		State2.digval2 = ch;
 8226              		.loc 1 2481 12 is_stmt 0 view .LVU2602
 8227 0dc4 012B     		cmp	r3, #1
 8228 0dc6 00F0BB87 		beq	.L1217
2486:src/keys.c    **** 
 8229              		.loc 1 2486 2 is_stmt 1 view .LVU2603
 8230              	.LBB865:
 8231              	.LBI865:
2419:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 8232              		.loc 1 2419 13 view .LVU2604
 8233              	.LBB866:
2421:src/keys.c    **** 	if (! State2.alphas )
 8234              		.loc 1 2421 2 view .LVU2605
2421:src/keys.c    **** 	if (! State2.alphas )
 8235              		.loc 1 2421 15 is_stmt 0 view .LVU2606
 8236 0dca 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2422:src/keys.c    **** 		State2.alphashift = 0;
 8237              		.loc 1 2422 6 view .LVU2607
 8238 0dce 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2421:src/keys.c    **** 	if (! State2.alphas )
 8239              		.loc 1 2421 15 view .LVU2608
 8240 0dd2 6FF3C302 		bfc	r2, #3, #1
 8241 0dd6 88F81520 		strb	r2, [r8, #21]
2422:src/keys.c    **** 		State2.alphashift = 0;
 8242              		.loc 1 2422 2 is_stmt 1 view .LVU2609
2422:src/keys.c    **** 		State2.alphashift = 0;
ARM GAS  /tmp/ccsJYix0.s 			page 245


 8243              		.loc 1 2422 5 is_stmt 0 view .LVU2610
 8244 0dda 13F00802 		ands	r2, r3, #8
2423:src/keys.c    **** }
 8245              		.loc 1 2423 3 is_stmt 1 view .LVU2611
2423:src/keys.c    **** }
 8246              		.loc 1 2423 21 is_stmt 0 view .LVU2612
 8247 0dde 04BF     		itt	eq
 8248 0de0 62F30413 		bfieq	r3, r2, #4, #1
 8249 0de4 88F81630 		strbeq	r3, [r8, #22]
 8250              	.LVL676:
 8251              	.L737:
2423:src/keys.c    **** }
 8252              		.loc 1 2423 21 view .LVU2613
 8253              	.LBE866:
 8254              	.LBE865:
2489:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8255              		.loc 1 2489 2 is_stmt 1 view .LVU2614
2491:src/keys.c    **** }
 8256              		.loc 1 2491 2 view .LVU2615
2489:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8257              		.loc 1 2489 21 is_stmt 0 view .LVU2616
 8258 0de8 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2490:src/keys.c    **** 	return opcode;
 8259              		.loc 1 2490 17 view .LVU2617
 8260 0dec B8F80820 		ldrh	r2, [r8, #8]
2490:src/keys.c    **** 	return opcode;
 8261              		.loc 1 2490 34 view .LVU2618
 8262 0df0 98F80A30 		ldrb	r3, [r8, #10]	@ zero_extendqisi2
2489:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8263              		.loc 1 2489 29 view .LVU2619
 8264 0df4 4FEA0B2B 		lsl	fp, fp, #8
2489:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8265              		.loc 1 2489 18 view .LVU2620
 8266 0df8 0BF5704B 		add	fp, fp, #61440
2490:src/keys.c    **** 	return opcode;
 8267              		.loc 1 2490 9 view .LVU2621
 8268 0dfc 9344     		add	fp, fp, r2
2490:src/keys.c    **** 	return opcode;
 8269              		.loc 1 2490 25 view .LVU2622
 8270 0dfe 0BEB034B 		add	fp, fp, r3, lsl #16
2489:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8271              		.loc 1 2489 9 view .LVU2623
 8272 0e02 0BEB006B 		add	fp, fp, r0, lsl #24
2491:src/keys.c    **** }
 8273              		.loc 1 2491 9 view .LVU2624
 8274 0e06 FFF71BBB 		b	.L646
 8275              	.LVL677:
 8276              	.L1194:
2491:src/keys.c    **** }
 8277              		.loc 1 2491 9 view .LVU2625
 8278              	.LBE876:
 8279              	.LBE884:
 8280              	.LBB885:
 8281              	.LBB749:
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8282              		.loc 1 1345 44 is_stmt 1 view .LVU2626
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
ARM GAS  /tmp/ccsJYix0.s 			page 246


 8283              		.loc 1 1345 52 is_stmt 0 view .LVU2627
 8284 0e0a 0120     		movs	r0, #1
 8285 0e0c FFF7FEFF 		bl	gtodot_digit
 8286              	.LVL678:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8287              		.loc 1 1391 2 is_stmt 1 view .LVU2628
 8288              	.LBE749:
 8289              	.LBE885:
2894:src/keys.c    **** 
 8290              		.loc 1 2894 10 is_stmt 0 view .LVU2629
 8291 0e10 4FF0330B 		mov	fp, #51
 8292 0e14 3268     		ldr	r2, [r6]
 8293 0e16 FFF74CB9 		b	.L616
 8294              	.LVL679:
 8295              	.L1211:
2934:src/keys.c    **** 		if (is_bad_cmdline())
 8296              		.loc 1 2934 2 is_stmt 1 view .LVU2630
2934:src/keys.c    **** 		if (is_bad_cmdline())
 8297              		.loc 1 2934 5 is_stmt 0 view .LVU2631
 8298 0e1a BBF1000F 		cmp	fp, #0
 8299 0e1e 7FF431AF 		bne	.L712
 8300 0e22 FFF747BA 		b	.L726
 8301              	.LVL680:
 8302              	.L1195:
 8303              	.LBB886:
 8304              	.LBB750:
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8305              		.loc 1 1346 44 is_stmt 1 view .LVU2632
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8306              		.loc 1 1346 52 is_stmt 0 view .LVU2633
 8307 0e26 0220     		movs	r0, #2
 8308 0e28 FFF7FEFF 		bl	gtodot_digit
 8309              	.LVL681:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8310              		.loc 1 1391 2 is_stmt 1 view .LVU2634
 8311              	.LBE750:
 8312              	.LBE886:
2894:src/keys.c    **** 
 8313              		.loc 1 2894 10 is_stmt 0 view .LVU2635
 8314 0e2c 4FF0330B 		mov	fp, #51
 8315 0e30 3268     		ldr	r2, [r6]
 8316 0e32 FFF73EB9 		b	.L616
 8317              	.LVL682:
 8318              	.L680:
 8319              	.LBB887:
 8320              	.LBB731:
1981:src/keys.c    **** 	}
 8321              		.loc 1 1981 3 is_stmt 1 view .LVU2636
1981:src/keys.c    **** 	}
 8322              		.loc 1 1981 10 is_stmt 0 view .LVU2637
 8323 0e36 0AF12000 		add	r0, r10, #32
 8324 0e3a 42EA0020 		orr	r0, r2, r0, lsl #8
 8325 0e3e 8346     		mov	fp, r0
 8326              	.LVL683:
1981:src/keys.c    **** 	}
 8327              		.loc 1 1981 10 view .LVU2638
 8328 0e40 FFF770BB 		b	.L673
ARM GAS  /tmp/ccsJYix0.s 			page 247


 8329              	.LVL684:
 8330              	.L1208:
1981:src/keys.c    **** 	}
 8331              		.loc 1 1981 10 view .LVU2639
 8332              	.LBE731:
 8333              	.LBE887:
 8334              	.LBB888:
 8335              	.LBB823:
1301:src/keys.c    **** 
 8336              		.loc 1 1301 3 is_stmt 1 view .LVU2640
1301:src/keys.c    **** 
 8337              		.loc 1 1301 25 is_stmt 0 view .LVU2641
 8338 0e44 894A     		ldr	r2, .L1261+8
 8339 0e46 0AEB4303 		add	r3, r10, r3, lsl #1
 8340 0e4a 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8341              	.LVL685:
1301:src/keys.c    **** 
 8342              		.loc 1 1301 25 view .LVU2642
 8343 0e4e FFF7F7BA 		b	.L646
 8344              	.LVL686:
 8345              	.L1205:
1301:src/keys.c    **** 
 8346              		.loc 1 1301 25 view .LVU2643
 8347              	.LBE823:
 8348              	.LBE888:
 8349              	.LBB889:
 8350              	.LBB791:
2539:src/keys.c    **** 			n = -2;
 8351              		.loc 1 2539 3 is_stmt 1 view .LVU2644
2539:src/keys.c    **** 			n = -2;
 8352              		.loc 1 2539 6 is_stmt 0 view .LVU2645
 8353 0e52 023B     		subs	r3, r3, #2
 8354              	.LVL687:
2540:src/keys.c    **** 	}
 8355              		.loc 1 2540 6 view .LVU2646
 8356 0e54 9342     		cmp	r3, r2
 8357 0e56 D4BF     		ite	le
 8358 0e58 1A46     		movle	r2, r3
 8359              	.LVL688:
2540:src/keys.c    **** 	}
 8360              		.loc 1 2540 6 view .LVU2647
 8361 0e5a 6FF00102 		mvngt	r2, #1
 8362 0e5e 8CE6     		b	.L695
 8363              	.LVL689:
 8364              	.L1196:
2540:src/keys.c    **** 	}
 8365              		.loc 1 2540 6 view .LVU2648
 8366              	.LBE791:
 8367              	.LBE889:
 8368              	.LBB890:
 8369              	.LBB751:
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8370              		.loc 1 1347 44 is_stmt 1 view .LVU2649
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8371              		.loc 1 1347 52 is_stmt 0 view .LVU2650
 8372 0e60 0320     		movs	r0, #3
 8373 0e62 FFF7FEFF 		bl	gtodot_digit
ARM GAS  /tmp/ccsJYix0.s 			page 248


 8374              	.LVL690:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8375              		.loc 1 1391 2 is_stmt 1 view .LVU2651
 8376              	.LBE751:
 8377              	.LBE890:
2894:src/keys.c    **** 
 8378              		.loc 1 2894 10 is_stmt 0 view .LVU2652
 8379 0e66 4FF0330B 		mov	fp, #51
 8380 0e6a 3268     		ldr	r2, [r6]
 8381 0e6c FFF721B9 		b	.L616
 8382              	.LVL691:
 8383              	.L1210:
 8384              	.LBB891:
 8385              	.LBB667:
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 8386              		.loc 1 266 74 view .LVU2653
 8387 0e70 D8F81430 		ldr	r3, [r8, #20]
 8388 0e74 7E4A     		ldr	r2, .L1261+12
 8389 0e76 1342     		tst	r3, r2
 8390 0e78 3FF404AF 		beq	.L712
 269:src/keys.c    ****     /*
 8391              		.loc 1 269 3 is_stmt 1 view .LVU2654
 269:src/keys.c    ****     /*
 8392              		.loc 1 269 23 is_stmt 0 view .LVU2655
 8393 0e7c 7D4A     		ldr	r2, .L1261+16
 269:src/keys.c    ****     /*
 8394              		.loc 1 269 6 view .LVU2656
 8395 0e7e 1342     		tst	r3, r2
 8396 0e80 3FF4DAA9 		beq	.L945
 8397 0e84 B7E6     		b	.L714
 8398              	.LVL692:
 8399              	.L964:
 8400              	.LBB661:
 325:src/keys.c    **** #ifndef WINGUI
 8401              		.loc 1 325 8 view .LVU2657
 8402 0e86 7C4B     		ldr	r3, .L1261+20
 331:src/keys.c    ****   }
 8403              		.loc 1 331 9 view .LVU2658
 8404 0e88 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 8405              		.loc 1 327 27 view .LVU2659
 8406 0e8a 4FF0010C 		mov	ip, #1
 8407 0e8e FFF7E2B9 		b	.L717
 8408              	.LVL693:
 8409              	.L690:
 327:src/keys.c    **** #else
 8410              		.loc 1 327 27 view .LVU2660
 8411 0e92 3268     		ldr	r2, [r6]
 8412              	.LBE661:
 8413              	.LBE667:
 8414              	.LBE891:
 8415              	.LBB892:
 8416              	.LBB732:
2005:src/keys.c    **** 
 8417              		.loc 1 2005 10 view .LVU2661
 8418 0e94 4FF0330B 		mov	fp, #51
 8419              	.LVL694:
ARM GAS  /tmp/ccsJYix0.s 			page 249


2005:src/keys.c    **** 
 8420              		.loc 1 2005 10 view .LVU2662
 8421 0e98 FFF70BB9 		b	.L616
 8422              	.LVL695:
 8423              	.L689:
2000:src/keys.c    **** 		return STATE_UNFINISHED;
 8424              		.loc 1 2000 3 is_stmt 1 view .LVU2663
 8425              	.LBB725:
 8426              	.LBI725:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 8427              		.loc 1 506 13 view .LVU2664
 8428              	.LBB726:
 507:src/keys.c    **** 		return;
 8429              		.loc 1 507 2 view .LVU2665
 507:src/keys.c    **** 		return;
 8430              		.loc 1 507 6 is_stmt 0 view .LVU2666
 8431 0e9c FFF7FEFF 		bl	is_bad_cmdline
 8432              	.LVL696:
 507:src/keys.c    **** 		return;
 8433              		.loc 1 507 5 view .LVU2667
 8434 0ea0 0446     		mov	r4, r0
 8435 0ea2 0028     		cmp	r0, #0
 8436 0ea4 40F0A983 		bne	.L1218
 8437 0ea8 5FFA8AF0 		uxtb	r0, r10
 8438 0eac FFF7FEFF 		bl	init_arg.part.0
 8439              	.LVL697:
 8440              	.LBE726:
 8441              	.LBE725:
 8442              	.LBE732:
 8443              	.LBE892:
 8444              	.LBE1235:
 8445              	.LBE1307:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 8446              		.loc 1 3014 7 view .LVU2668
 8447 0eb0 2546     		mov	r5, r4
 8448 0eb2 3268     		ldr	r2, [r6]
 8449              	.LBB1308:
 8450              	.LBB1236:
 8451              	.LBB893:
 8452              	.LBB733:
2001:src/keys.c    **** 
 8453              		.loc 1 2001 10 view .LVU2669
 8454 0eb4 4FF0330B 		mov	fp, #51
 8455              	.LVL698:
2001:src/keys.c    **** 
 8456              		.loc 1 2001 10 view .LVU2670
 8457 0eb8 FFF7FBB8 		b	.L616
 8458              	.LVL699:
 8459              	.L727:
2001:src/keys.c    **** 
 8460              		.loc 1 2001 10 view .LVU2671
 8461              	.LBE733:
 8462              	.LBE893:
2937:src/keys.c    **** 		init_cat( cat );
 8463              		.loc 1 2937 3 is_stmt 1 view .LVU2672
 8464 0ebc FFF7FEFF 		bl	init_cat
 8465              	.LVL700:
ARM GAS  /tmp/ccsJYix0.s 			page 250


2938:src/keys.c    **** 		return STATE_UNFINISHED;
 8466              		.loc 1 2938 3 view .LVU2673
 8467 0ec0 5846     		mov	r0, fp
 8468 0ec2 FFF7FEFF 		bl	init_cat
 8469              	.LVL701:
2939:src/keys.c    **** 	}
 8470              		.loc 1 2939 3 view .LVU2674
 8471              	.LBE1236:
 8472              	.LBE1308:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 8473              		.loc 1 3014 7 is_stmt 0 view .LVU2675
 8474 0ec6 2546     		mov	r5, r4
 8475 0ec8 3268     		ldr	r2, [r6]
 8476              	.LBB1309:
 8477              	.LBB1237:
2939:src/keys.c    **** 	}
 8478              		.loc 1 2939 10 view .LVU2676
 8479 0eca 4FF0330B 		mov	fp, #51
 8480 0ece FFF7F0B8 		b	.L616
 8481              	.LVL702:
 8482              	.L959:
 8483              	.LBB894:
 8484              	.LBB792:
 8485              	.LBB786:
2547:src/keys.c    **** 		if (nn <= 9)
 8486              		.loc 1 2547 7 view .LVU2677
 8487 0ed2 0A46     		mov	r2, r1
 8488              	.LVL703:
2547:src/keys.c    **** 		if (nn <= 9)
 8489              		.loc 1 2547 7 view .LVU2678
 8490 0ed4 51E6     		b	.L695
 8491              	.LVL704:
 8492              	.L1209:
2547:src/keys.c    **** 		if (nn <= 9)
 8493              		.loc 1 2547 7 view .LVU2679
 8494              	.LBE786:
 8495              	.LBE792:
 8496              	.LBE894:
 8497              	.LBB895:
 8498              	.LBB824:
1304:src/keys.c    **** 
 8499              		.loc 1 1304 3 is_stmt 1 view .LVU2680
 8500 0ed6 694B     		ldr	r3, .L1261+24
 8501              	.LBB817:
 8502              	.LBB818:
 652:src/keys.c    **** }
 8503              		.loc 1 652 15 is_stmt 0 view .LVU2681
 8504 0ed8 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 8505 0edc 3268     		ldr	r2, [r6]
 8506              	.LBE818:
 8507              	.LBE817:
1304:src/keys.c    **** 
 8508              		.loc 1 1304 3 view .LVU2682
 8509 0ede 03EB4403 		add	r3, r3, r4, lsl #1
1306:src/keys.c    **** }
 8510              		.loc 1 1306 9 view .LVU2683
 8511 0ee2 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccsJYix0.s 			page 251


 8512              	.LVL705:
1304:src/keys.c    **** 
 8513              		.loc 1 1304 3 view .LVU2684
 8514 0ee6 13F80A30 		ldrb	r3, [r3, r10]	@ zero_extendqisi2
 8515              	.LVL706:
 8516              	.LBB820:
 8517              	.LBI817:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 8518              		.loc 1 651 13 is_stmt 1 view .LVU2685
 8519              	.LBB819:
 652:src/keys.c    **** }
 8520              		.loc 1 652 2 view .LVU2686
 652:src/keys.c    **** }
 8521              		.loc 1 652 15 is_stmt 0 view .LVU2687
 8522 0eea 9942     		cmp	r1, r3
 8523 0eec 08BF     		it	eq
 8524 0eee 0023     		moveq	r3, #0
 8525              	.LVL707:
 652:src/keys.c    **** }
 8526              		.loc 1 652 15 view .LVU2688
 8527 0ef0 88F81130 		strb	r3, [r8, #17]
 653:src/keys.c    **** 
 8528              		.loc 1 653 1 view .LVU2689
 8529 0ef4 FFF7DDB8 		b	.L616
 8530              	.LVL708:
 8531              	.L1179:
 653:src/keys.c    **** 
 8532              		.loc 1 653 1 view .LVU2690
 8533              	.LBE819:
 8534              	.LBE820:
 8535              	.LBE824:
 8536              	.LBE895:
2949:src/keys.c    **** 
 8537              		.loc 1 2949 3 is_stmt 1 view .LVU2691
 8538              	.LBB896:
 8539              	.LBI896:
2609:src/keys.c    **** 	unsigned int pc = State2.digval;
 8540              		.loc 1 2609 12 view .LVU2692
 8541              	.LBB897:
2610:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8542              		.loc 1 2610 2 view .LVU2693
2612:src/keys.c    **** 	const int opcode = getprog(pc);
 8543              		.loc 1 2612 27 is_stmt 0 view .LVU2694
 8544 0ef8 262C     		cmp	r4, #38
2610:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8545              		.loc 1 2610 15 view .LVU2695
 8546 0efa B8F808A0 		ldrh	r10, [r8, #8]
 8547              	.LVL709:
2611:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8548              		.loc 1 2611 2 is_stmt 1 view .LVU2696
2612:src/keys.c    **** 	const int opcode = getprog(pc);
 8549              		.loc 1 2612 27 is_stmt 0 view .LVU2697
 8550 0efe 00F01283 		beq	.L969
 8551              	.LVL710:
 8552              	.LBB898:
 8553              	.LBI898:
 200:src/keys.c    **** {
ARM GAS  /tmp/ccsJYix0.s 			page 252


 8554              		.loc 1 200 14 is_stmt 1 view .LVU2698
 8555              	.LBB899:
 202:src/keys.c    ****     // K00 - K05
 8556              		.loc 1 202 3 view .LVU2699
 224:src/keys.c    **** }
 8557              		.loc 1 224 3 view .LVU2700
 8558              	.LBB900:
 8559              	.LBI900:
 121:src/keys.c    **** {
 8560              		.loc 1 121 12 view .LVU2701
 8561              	.LBB901:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8562              		.loc 1 123 2 view .LVU2702
 133:src/keys.c    **** }
 8563              		.loc 1 133 2 view .LVU2703
 133:src/keys.c    **** }
 8564              		.loc 1 133 23 is_stmt 0 view .LVU2704
 8565 0f02 584B     		ldr	r3, .L1261
 8566              	.LBE901:
 8567              	.LBE900:
 224:src/keys.c    **** }
 8568              		.loc 1 224 28 view .LVU2705
 8569 0f04 5E4A     		ldr	r2, .L1261+28
 8570              	.LBB903:
 8571              	.LBB902:
 133:src/keys.c    **** }
 8572              		.loc 1 133 23 view .LVU2706
 8573 0f06 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8574              	.LBE902:
 8575              	.LBE903:
 224:src/keys.c    **** }
 8576              		.loc 1 224 10 view .LVU2707
 8577 0f08 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8578              	.LBE899:
 8579              	.LBE898:
2612:src/keys.c    **** 	const int opcode = getprog(pc);
 8580              		.loc 1 2612 27 view .LVU2708
 8581 0f0c 2BF0800B 		bic	fp, fp, #128
 8582              	.L746:
 8583              	.LVL711:
2613:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8584              		.loc 1 2613 2 is_stmt 1 view .LVU2709
2613:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8585              		.loc 1 2613 21 is_stmt 0 view .LVU2710
 8586 0f10 5046     		mov	r0, r10
 8587 0f12 FFF7FEFF 		bl	getprog
 8588              	.LVL712:
2614:src/keys.c    **** 	const int direct = State2.runmode;
 8589              		.loc 1 2614 2 is_stmt 1 view .LVU2711
2614:src/keys.c    **** 	const int direct = State2.runmode;
 8590              		.loc 1 2614 20 is_stmt 0 view .LVU2712
 8591 0f16 00F47040 		and	r0, r0, #61440
 8592              	.LVL713:
2614:src/keys.c    **** 	const int direct = State2.runmode;
 8593              		.loc 1 2614 63 view .LVU2713
 8594 0f1a B0F5704F 		cmp	r0, #61440
 8595 0f1e 00F0D384 		beq	.L1219
ARM GAS  /tmp/ccsJYix0.s 			page 253


 8596 0f22 0022     		movs	r2, #0
 8597              	.L747:
 8598              	.LVL714:
2615:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8599              		.loc 1 2615 2 is_stmt 1 view .LVU2714
2615:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8600              		.loc 1 2615 27 is_stmt 0 view .LVU2715
 8601 0f24 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8602 0f28 0192     		str	r2, [sp, #4]
 8603              	.LVL715:
2615:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8604              		.loc 1 2615 27 view .LVU2716
 8605 0f2a C3F38013 		ubfx	r3, r3, #6, #1
 8606 0f2e 0093     		str	r3, [sp]
 8607              	.LVL716:
2616:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8608              		.loc 1 2616 2 is_stmt 1 view .LVU2717
 8609              	.LBB904:
 8610              	.LBI904:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8611              		.loc 1 104 13 view .LVU2718
 8612              	.LBE904:
 8613              	.LBE897:
 8614              	.LBE896:
 8615              	.LBE1237:
 8616              	.LBE1309:
 105:src/keys.c    **** }
 8617              		.loc 1 105 2 view .LVU2719
 8618              	.LBB1310:
 8619              	.LBB1238:
 8620              	.LBB931:
 8621              	.LBB923:
 8622              	.LBB911:
 8623              	.LBB905:
 8624              	.LBI905:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8625              		.loc 1 94 20 view .LVU2720
 8626              	.LBB906:
  95:src/keys.c    **** 	State2.shifts = shift;
 8627              		.loc 1 95 2 view .LVU2721
 8628              	.LBB907:
 8629              	.LBI907:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8630              		.loc 1 86 13 view .LVU2722
 8631              	.LBB908:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8632              		.loc 1 87 2 view .LVU2723
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8633              		.loc 1 87 18 is_stmt 0 view .LVU2724
 8634 0f30 FFF7FEFF 		bl	shift_down
 8635              	.LVL717:
  88:src/keys.c    **** }
 8636              		.loc 1 88 2 is_stmt 1 view .LVU2725
  88:src/keys.c    **** }
 8637              		.loc 1 88 52 is_stmt 0 view .LVU2726
 8638 0f34 019A     		ldr	r2, [sp, #4]
 8639 0f36 0346     		mov	r3, r0
ARM GAS  /tmp/ccsJYix0.s 			page 254


 8640 0f38 08B9     		cbnz	r0, .L748
 8641 0f3a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8642              	.L748:
 8643              	.LVL718:
  88:src/keys.c    **** }
 8644              		.loc 1 88 52 view .LVU2727
 8645              	.LBE908:
 8646              	.LBE907:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8647              		.loc 1 96 2 is_stmt 1 view .LVU2728
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8648              		.loc 1 96 16 is_stmt 0 view .LVU2729
 8649 0f3e 0021     		movs	r1, #0
 8650              	.LBE906:
 8651              	.LBE905:
 8652              	.LBE911:
2619:src/keys.c    **** 		// Digits take you to that segment
 8653              		.loc 1 2619 5 view .LVU2730
 8654 0f40 BBF1020F 		cmp	fp, #2
 8655              	.LBB912:
 8656              	.LBB910:
 8657              	.LBB909:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8658              		.loc 1 96 16 view .LVU2731
 8659 0f44 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 8660              		.loc 1 98 2 is_stmt 1 view .LVU2732
 8661              	.LVL719:
  98:src/keys.c    **** }
 8662              		.loc 1 98 2 is_stmt 0 view .LVU2733
 8663              	.LBE909:
 8664              	.LBE910:
 8665              	.LBE912:
2617:src/keys.c    **** 
 8666              		.loc 1 2617 2 is_stmt 1 view .LVU2734
2619:src/keys.c    **** 		// Digits take you to that segment
 8667              		.loc 1 2619 2 view .LVU2735
2619:src/keys.c    **** 		// Digits take you to that segment
 8668              		.loc 1 2619 5 is_stmt 0 view .LVU2736
 8669 0f48 40F26C85 		bls	.L1220
2628:src/keys.c    **** 
 8670              		.loc 1 2628 2 is_stmt 1 view .LVU2737
2628:src/keys.c    **** 
 8671              		.loc 1 2628 12 is_stmt 0 view .LVU2738
 8672 0f4c 44EA0323 		orr	r3, r4, r3, lsl #8
 8673              	.LVL720:
2628:src/keys.c    **** 
 8674              		.loc 1 2628 2 view .LVU2739
 8675 0f50 272B     		cmp	r3, #39
 8676 0f52 00F39780 		bgt	.L751
 8677 0f56 042B     		cmp	r3, #4
 8678 0f58 4ADD     		ble	.L753
 8679 0f5a 053B     		subs	r3, r3, #5
 8680 0f5c 222B     		cmp	r3, #34
 8681 0f5e 47D8     		bhi	.L753
 8682 0f60 DFE803F0 		tbb	[pc, r3]
 8683              	.L760:
ARM GAS  /tmp/ccsJYix0.s 			page 255


 8684 0f64 3D       		.byte	(.L765-.L760)/2
 8685 0f65 4B       		.byte	(.L764-.L760)/2
 8686 0f66 4B       		.byte	(.L764-.L760)/2
 8687 0f67 46       		.byte	(.L753-.L760)/2
 8688 0f68 46       		.byte	(.L753-.L760)/2
 8689 0f69 46       		.byte	(.L753-.L760)/2
 8690 0f6a 46       		.byte	(.L753-.L760)/2
 8691 0f6b 12       		.byte	(.L972-.L760)/2
 8692 0f6c 46       		.byte	(.L753-.L760)/2
 8693 0f6d 46       		.byte	(.L753-.L760)/2
 8694 0f6e 46       		.byte	(.L753-.L760)/2
 8695 0f6f 71       		.byte	(.L763-.L760)/2
 8696 0f70 46       		.byte	(.L753-.L760)/2
 8697 0f71 66       		.byte	(.L762-.L760)/2
 8698 0f72 46       		.byte	(.L753-.L760)/2
 8699 0f73 46       		.byte	(.L753-.L760)/2
 8700 0f74 46       		.byte	(.L753-.L760)/2
 8701 0f75 46       		.byte	(.L753-.L760)/2
 8702 0f76 46       		.byte	(.L753-.L760)/2
 8703 0f77 31       		.byte	(.L761-.L760)/2
 8704 0f78 46       		.byte	(.L753-.L760)/2
 8705 0f79 46       		.byte	(.L753-.L760)/2
 8706 0f7a 46       		.byte	(.L753-.L760)/2
 8707 0f7b 46       		.byte	(.L753-.L760)/2
 8708 0f7c 46       		.byte	(.L753-.L760)/2
 8709 0f7d 46       		.byte	(.L753-.L760)/2
 8710 0f7e 46       		.byte	(.L753-.L760)/2
 8711 0f7f 46       		.byte	(.L753-.L760)/2
 8712 0f80 46       		.byte	(.L753-.L760)/2
 8713 0f81 46       		.byte	(.L753-.L760)/2
 8714 0f82 46       		.byte	(.L753-.L760)/2
 8715 0f83 46       		.byte	(.L753-.L760)/2
 8716 0f84 46       		.byte	(.L753-.L760)/2
 8717 0f85 46       		.byte	(.L753-.L760)/2
 8718 0f86 52       		.byte	(.L759-.L760)/2
 8719 0f87 00       		.p2align 1
 8720              	.L972:
2617:src/keys.c    **** 
 8721              		.loc 1 2617 6 view .LVU2740
 8722 0f88 4FF0330B 		mov	fp, #51
 8723              	.LVL721:
 8724              	.L757:
2650:src/keys.c    **** 		break;
 8725              		.loc 1 2650 3 is_stmt 1 view .LVU2741
 8726 0f8c 5046     		mov	r0, r10
 8727 0f8e FFF7FEFF 		bl	set_pc
 8728              	.LVL722:
2651:src/keys.c    **** 
 8729              		.loc 1 2651 3 view .LVU2742
 8730              	.L769:
2704:src/keys.c    **** 	State2.labellist = 0;
 8731              		.loc 1 2704 2 view .LVU2743
2705:src/keys.c    **** 	return check_confirm(op);
 8732              		.loc 1 2705 19 is_stmt 0 view .LVU2744
 8733 0f92 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2704:src/keys.c    **** 	State2.labellist = 0;
 8734              		.loc 1 2704 16 view .LVU2745
ARM GAS  /tmp/ccsJYix0.s 			page 256


 8735 0f96 0022     		movs	r2, #0
 8736              	.LBB913:
 8737              	.LBB914:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8738              		.loc 1 625 5 view .LVU2746
 8739 0f98 CBF30723 		ubfx	r3, fp, #8, #8
 8740              	.LBE914:
 8741              	.LBE913:
2705:src/keys.c    **** 	return check_confirm(op);
 8742              		.loc 1 2705 19 view .LVU2747
 8743 0f9c 62F38201 		bfi	r1, r2, #2, #1
 8744              	.LBB919:
 8745              	.LBB915:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8746              		.loc 1 625 5 view .LVU2748
 8747 0fa0 012B     		cmp	r3, #1
 8748              	.LBE915:
 8749              	.LBE919:
2705:src/keys.c    **** 	return check_confirm(op);
 8750              		.loc 1 2705 19 view .LVU2749
 8751 0fa2 88F81710 		strb	r1, [r8, #23]
2704:src/keys.c    **** 	State2.labellist = 0;
 8752              		.loc 1 2704 16 view .LVU2750
 8753 0fa6 A8F80820 		strh	r2, [r8, #8]	@ movhi
2705:src/keys.c    **** 	return check_confirm(op);
 8754              		.loc 1 2705 2 is_stmt 1 view .LVU2751
2706:src/keys.c    **** }
 8755              		.loc 1 2706 2 view .LVU2752
 8756              	.LVL723:
 8757              	.LBB920:
 8758              	.LBI913:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8759              		.loc 1 624 12 view .LVU2753
 8760              	.LBB916:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8761              		.loc 1 625 2 view .LVU2754
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8762              		.loc 1 625 5 is_stmt 0 view .LVU2755
 8763 0faa 7FF449AA 		bne	.L646
 8764              	.LVL724:
 8765              	.L944:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8766              		.loc 1 625 5 view .LVU2756
 8767              	.LBE916:
 8768              	.LBE920:
 8769              	.LBE923:
 8770              	.LBE931:
 8771              	.LBB932:
 8772              	.LBB933:
 8773              	.LBB934:
 8774              	.LBB935:
 8775 0fae 5846     		mov	r0, fp
 8776 0fb0 FFF7FEFF 		bl	check_confirm.part.0
 8777              	.LVL725:
 8778 0fb4 8346     		mov	fp, r0
 8779              	.LVL726:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/ccsJYix0.s 			page 257


 8780              		.loc 1 625 5 view .LVU2757
 8781 0fb6 FFF743BA 		b	.L646
 8782              	.LVL727:
 8783              	.L754:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8784              		.loc 1 625 5 view .LVU2758
 8785              	.LBE935:
 8786              	.LBE934:
 8787              	.LBE933:
 8788              	.LBE932:
 8789              	.LBB972:
 8790              	.LBB924:
2635:src/keys.c    **** 	case K_DOWN:				// Find next label
 8791              		.loc 1 2635 3 is_stmt 1 view .LVU2759
2635:src/keys.c    **** 	case K_DOWN:				// Find next label
 8792              		.loc 1 2635 8 is_stmt 0 view .LVU2760
 8793 0fba 5046     		mov	r0, r10
 8794 0fbc 0122     		movs	r2, #1
 8795 0fbe 0021     		movs	r1, #0
 8796 0fc0 FFF7FEFF 		bl	advance_to_next_label
 8797              	.LVL728:
 8798 0fc4 8246     		mov	r10, r0
 8799              	.LVL729:
 8800              	.L761:
2638:src/keys.c    **** 		return STATE_UNFINISHED;
 8801              		.loc 1 2638 3 is_stmt 1 view .LVU2761
2638:src/keys.c    **** 		return STATE_UNFINISHED;
 8802              		.loc 1 2638 19 is_stmt 0 view .LVU2762
 8803 0fc6 0022     		movs	r2, #0
 8804 0fc8 5046     		mov	r0, r10
 8805 0fca 0121     		movs	r1, #1
 8806 0fcc FFF7FEFF 		bl	advance_to_next_label
 8807              	.LVL730:
2639:src/keys.c    **** 
 8808              		.loc 1 2639 10 view .LVU2763
 8809 0fd0 4FF0330B 		mov	fp, #51
 8810              	.LVL731:
2639:src/keys.c    **** 
 8811              		.loc 1 2639 10 view .LVU2764
 8812 0fd4 3268     		ldr	r2, [r6]
2638:src/keys.c    **** 		return STATE_UNFINISHED;
 8813              		.loc 1 2638 17 view .LVU2765
 8814 0fd6 A8F80800 		strh	r0, [r8, #8]	@ movhi
2639:src/keys.c    **** 
 8815              		.loc 1 2639 3 is_stmt 1 view .LVU2766
2639:src/keys.c    **** 
 8816              		.loc 1 2639 10 is_stmt 0 view .LVU2767
 8817 0fda FFF76AB8 		b	.L616
 8818              	.LVL732:
 8819              	.L765:
2668:src/keys.c    **** 		goto xeq_or_gto;
 8820              		.loc 1 2668 3 is_stmt 1 view .LVU2768
2668:src/keys.c    **** 		goto xeq_or_gto;
 8821              		.loc 1 2668 6 is_stmt 0 view .LVU2769
 8822 0fde 02F5007B 		add	fp, r2, #512
 8823              	.LVL733:
2669:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 258


 8824              		.loc 1 2669 3 is_stmt 1 view .LVU2770
 8825              	.L770:
2674:src/keys.c    **** 			break;
 8826              		.loc 1 2674 3 view .LVU2771
2674:src/keys.c    **** 			break;
 8827              		.loc 1 2674 6 is_stmt 0 view .LVU2772
 8828 0fe2 002A     		cmp	r2, #0
 8829 0fe4 D5D1     		bne	.L769
 8830              	.LVL734:
 8831              	.L771:
2674:src/keys.c    **** 			break;
 8832              		.loc 1 2674 6 view .LVU2773
 8833 0fe6 3268     		ldr	r2, [r6]
2676:src/keys.c    **** #else
 8834              		.loc 1 2676 10 view .LVU2774
 8835 0fe8 4FF0330B 		mov	fp, #51
 8836 0fec FFF761B8 		b	.L616
 8837              	.LVL735:
 8838              	.L753:
2676:src/keys.c    **** #else
 8839              		.loc 1 2676 10 view .LVU2775
 8840 0ff0 3268     		ldr	r2, [r6]
2702:src/keys.c    **** 	}
 8841              		.loc 1 2702 10 view .LVU2776
 8842 0ff2 4FF0330B 		mov	fp, #51
 8843              	.LVL736:
2702:src/keys.c    **** 	}
 8844              		.loc 1 2702 10 view .LVU2777
 8845 0ff6 FFF75CB8 		b	.L616
 8846              	.LVL737:
 8847              	.L764:
2660:src/keys.c    **** 	  //#endif
 8848              		.loc 1 2660 3 is_stmt 1 view .LVU2778
2660:src/keys.c    **** 	  //#endif
 8849              		.loc 1 2660 38 is_stmt 0 view .LVU2779
 8850 0ffa 062C     		cmp	r4, #6
 8851 0ffc 40F2B11B 		movw	fp, #433
 8852              	.LVL738:
2660:src/keys.c    **** 	  //#endif
 8853              		.loc 1 2660 38 view .LVU2780
 8854 1000 08BF     		it	eq
 8855 1002 4FF4D97B 		moveq	fp, #434
 8856 1006 C1E7     		b	.L757
 8857              	.LVL739:
 8858              	.L759:
2690:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8859              		.loc 1 2690 3 is_stmt 1 view .LVU2781
2690:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8860              		.loc 1 2690 6 is_stmt 0 view .LVU2782
 8861 1008 009B     		ldr	r3, [sp]
 8862 100a 002B     		cmp	r3, #0
 8863 100c EBD0     		beq	.L771
2690:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8864              		.loc 1 2690 14 view .LVU2783
 8865 100e 002A     		cmp	r2, #0
 8866 1010 E9D0     		beq	.L771
2691:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
ARM GAS  /tmp/ccsJYix0.s 			page 259


 8867              		.loc 1 2691 4 is_stmt 1 view .LVU2784
 8868 1012 5146     		mov	r1, r10
 8869 1014 0120     		movs	r0, #1
 8870 1016 FFF7FEFF 		bl	cmdgtocommon
 8871              	.LVL740:
2692:src/keys.c    **** 			break;
 8872              		.loc 1 2692 4 view .LVU2785
2693:src/keys.c    **** 		}
 8873              		.loc 1 2693 4 view .LVU2786
2704:src/keys.c    **** 	State2.labellist = 0;
 8874              		.loc 1 2704 2 view .LVU2787
2705:src/keys.c    **** 	return check_confirm(op);
 8875              		.loc 1 2705 19 is_stmt 0 view .LVU2788
 8876 101a 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2704:src/keys.c    **** 	State2.labellist = 0;
 8877              		.loc 1 2704 16 view .LVU2789
 8878 101e 0023     		movs	r3, #0
2705:src/keys.c    **** 	return check_confirm(op);
 8879              		.loc 1 2705 19 view .LVU2790
 8880 1020 63F38202 		bfi	r2, r3, #2, #1
 8881 1024 88F81720 		strb	r2, [r8, #23]
2704:src/keys.c    **** 	State2.labellist = 0;
 8882              		.loc 1 2704 16 view .LVU2791
 8883 1028 A8F80830 		strh	r3, [r8, #8]	@ movhi
2705:src/keys.c    **** 	return check_confirm(op);
 8884              		.loc 1 2705 2 is_stmt 1 view .LVU2792
2706:src/keys.c    **** }
 8885              		.loc 1 2706 2 view .LVU2793
 8886              	.LVL741:
 8887              	.LBB921:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8888              		.loc 1 624 12 view .LVU2794
 8889              	.LBB917:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8890              		.loc 1 625 2 view .LVU2795
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8891              		.loc 1 625 2 is_stmt 0 view .LVU2796
 8892              	.LBE917:
 8893              	.LBE921:
 8894              	.LBE924:
 8895              	.LBE972:
 8896              	.LBE1238:
 8897              	.LBE1310:
3199:src/keys.c    ****     case STATE_SST:
 8898              		.loc 1 3199 5 is_stmt 1 view .LVU2797
 8899 102c FFF7B3B9 		b	.L626
 8900              	.LVL742:
 8901              	.L762:
 8902              	.LBB1311:
 8903              	.LBB1239:
 8904              	.LBB973:
 8905              	.LBB925:
2642:src/keys.c    **** 		return STATE_UNFINISHED;
 8906              		.loc 1 2642 3 view .LVU2798
2642:src/keys.c    **** 		return STATE_UNFINISHED;
 8907              		.loc 1 2642 19 is_stmt 0 view .LVU2799
 8908 1030 5046     		mov	r0, r10
ARM GAS  /tmp/ccsJYix0.s 			page 260


 8909 1032 0021     		movs	r1, #0
 8910 1034 FFF7FEFF 		bl	advance_to_previous_label
 8911              	.LVL743:
2643:src/keys.c    **** 
 8912              		.loc 1 2643 10 view .LVU2800
 8913 1038 4FF0330B 		mov	fp, #51
 8914              	.LVL744:
2643:src/keys.c    **** 
 8915              		.loc 1 2643 10 view .LVU2801
 8916 103c 3268     		ldr	r2, [r6]
2642:src/keys.c    **** 		return STATE_UNFINISHED;
 8917              		.loc 1 2642 17 view .LVU2802
 8918 103e A8F80800 		strh	r0, [r8, #8]	@ movhi
2643:src/keys.c    **** 
 8919              		.loc 1 2643 3 is_stmt 1 view .LVU2803
2643:src/keys.c    **** 
 8920              		.loc 1 2643 10 is_stmt 0 view .LVU2804
 8921 1042 FFF736B8 		b	.L616
 8922              	.LVL745:
 8923              	.L763:
2704:src/keys.c    **** 	State2.labellist = 0;
 8924              		.loc 1 2704 2 is_stmt 1 view .LVU2805
2705:src/keys.c    **** 	return check_confirm(op);
 8925              		.loc 1 2705 19 is_stmt 0 view .LVU2806
 8926 1046 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 8927 104a 3268     		ldr	r2, [r6]
2704:src/keys.c    **** 	State2.labellist = 0;
 8928              		.loc 1 2704 16 view .LVU2807
 8929 104c 0023     		movs	r3, #0
2705:src/keys.c    **** 	return check_confirm(op);
 8930              		.loc 1 2705 19 view .LVU2808
 8931 104e 63F38201 		bfi	r1, r3, #2, #1
 8932 1052 88F81710 		strb	r1, [r8, #23]
2704:src/keys.c    **** 	State2.labellist = 0;
 8933              		.loc 1 2704 16 view .LVU2809
 8934 1056 A8F80830 		strh	r3, [r8, #8]	@ movhi
2705:src/keys.c    **** 	return check_confirm(op);
 8935              		.loc 1 2705 2 is_stmt 1 view .LVU2810
2706:src/keys.c    **** }
 8936              		.loc 1 2706 2 view .LVU2811
 8937              	.LVL746:
 8938              	.LBB922:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8939              		.loc 1 624 12 view .LVU2812
 8940              	.LBB918:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8941              		.loc 1 625 2 view .LVU2813
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8942              		.loc 1 625 2 is_stmt 0 view .LVU2814
 8943              	.LBE918:
 8944              	.LBE922:
 8945              	.LBE925:
 8946              	.LBE973:
 8947              	.LBE1239:
 8948              	.LBE1311:
3199:src/keys.c    ****     case STATE_SST:
 8949              		.loc 1 3199 5 is_stmt 1 view .LVU2815
ARM GAS  /tmp/ccsJYix0.s 			page 261


 8950              	.LBB1312:
 8951              	.LBB1240:
 8952              	.LBB974:
 8953              	.LBB926:
2617:src/keys.c    **** 
 8954              		.loc 1 2617 6 is_stmt 0 view .LVU2816
 8955 105a 4FF0330B 		mov	fp, #51
 8956              	.LVL747:
2617:src/keys.c    **** 
 8957              		.loc 1 2617 6 view .LVU2817
 8958 105e FFF728B8 		b	.L616
 8959              	.L1262:
 8960 1062 00BF     		.align	2
 8961              	.L1261:
 8962 1064 00000000 		.word	.LANCHOR1
 8963 1068 00000000 		.word	.LANCHOR9
 8964 106c 00000000 		.word	.LANCHOR14
 8965 1070 000A4000 		.word	4196864
 8966 1074 00080800 		.word	526336
 8967 1078 00000000 		.word	.LANCHOR11
 8968 107c 00000000 		.word	.LANCHOR15
 8969 1080 00000000 		.word	.LANCHOR0
 8970              	.LVL748:
 8971              	.L751:
2628:src/keys.c    **** 
 8972              		.loc 1 2628 2 view .LVU2818
 8973 1084 B3F58C7F 		cmp	r3, #280
 8974 1088 41DC     		bgt	.L766
 8975 108a B3F5827F 		cmp	r3, #260
 8976 108e AFDD     		ble	.L753
 8977 1090 6FF48271 		mvn	r1, #260
 8978 1094 0B44     		add	r3, r3, r1
 8979 1096 132B     		cmp	r3, #19
 8980 1098 AAD8     		bhi	.L753
 8981 109a 01A1     		adr	r1, .L755
 8982 109c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8983              		.p2align 2
 8984              	.L755:
 8985 10a0 F7100000 		.word	.L758+1
 8986 10a4 F10F0000 		.word	.L753+1
 8987 10a8 F10F0000 		.word	.L753+1
 8988 10ac F10F0000 		.word	.L753+1
 8989 10b0 F10F0000 		.word	.L753+1
 8990 10b4 F10F0000 		.word	.L753+1
 8991 10b8 F10F0000 		.word	.L753+1
 8992 10bc F10F0000 		.word	.L753+1
 8993 10c0 F10F0000 		.word	.L753+1
 8994 10c4 F10F0000 		.word	.L753+1
 8995 10c8 F10F0000 		.word	.L753+1
 8996 10cc F1100000 		.word	.L971+1
 8997 10d0 F10F0000 		.word	.L753+1
 8998 10d4 FD100000 		.word	.L756+1
 8999 10d8 F10F0000 		.word	.L753+1
 9000 10dc F10F0000 		.word	.L753+1
 9001 10e0 F10F0000 		.word	.L753+1
 9002 10e4 F10F0000 		.word	.L753+1
 9003 10e8 F10F0000 		.word	.L753+1
ARM GAS  /tmp/ccsJYix0.s 			page 262


 9004 10ec BB0F0000 		.word	.L754+1
 9005              		.p2align 1
 9006              	.L971:
 9007 10f0 40F2431B 		movw	fp, #323
 9008              	.LVL749:
2628:src/keys.c    **** 
 9009              		.loc 1 2628 2 view .LVU2819
 9010 10f4 4AE7     		b	.L757
 9011              	.LVL750:
 9012              	.L758:
2672:src/keys.c    **** 	xeq_or_gto:
 9013              		.loc 1 2672 3 is_stmt 1 view .LVU2820
2672:src/keys.c    **** 	xeq_or_gto:
 9014              		.loc 1 2672 6 is_stmt 0 view .LVU2821
 9015 10f6 02F5407B 		add	fp, r2, #768
 9016              	.LVL751:
2672:src/keys.c    **** 	xeq_or_gto:
 9017              		.loc 1 2672 6 view .LVU2822
 9018 10fa 72E7     		b	.L770
 9019              	.LVL752:
 9020              	.L756:
2631:src/keys.c    **** 		goto next;
 9021              		.loc 1 2631 3 is_stmt 1 view .LVU2823
2631:src/keys.c    **** 		goto next;
 9022              		.loc 1 2631 8 is_stmt 0 view .LVU2824
 9023 10fc 5046     		mov	r0, r10
 9024 10fe 0121     		movs	r1, #1
 9025 1100 FFF7FEFF 		bl	advance_to_previous_label
 9026              	.LVL753:
 9027 1104 0121     		movs	r1, #1
 9028 1106 FFF7FEFF 		bl	advance_to_previous_label
 9029              	.LVL754:
 9030 110a 8246     		mov	r10, r0
 9031              	.LVL755:
2632:src/keys.c    **** 
 9032              		.loc 1 2632 3 is_stmt 1 view .LVU2825
 9033 110c 5BE7     		b	.L761
 9034              	.LVL756:
 9035              	.L766:
2628:src/keys.c    **** 
 9036              		.loc 1 2628 2 is_stmt 0 view .LVU2826
 9037 110e 40F22732 		movw	r2, #807
 9038 1112 9342     		cmp	r3, r2
 9039 1114 7FF46CAF 		bne	.L753
2698:src/keys.c    **** 		goto set_pc_and_exit;
 9040              		.loc 1 2698 3 is_stmt 1 view .LVU2827
2698:src/keys.c    **** 		goto set_pc_and_exit;
 9041              		.loc 1 2698 18 is_stmt 0 view .LVU2828
 9042 1118 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9043 111c 61F38613 		bfi	r3, r1, #6, #1
 9044 1120 88F81630 		strb	r3, [r8, #22]
2699:src/keys.c    **** 
 9045              		.loc 1 2699 3 is_stmt 1 view .LVU2829
2617:src/keys.c    **** 
 9046              		.loc 1 2617 6 is_stmt 0 view .LVU2830
 9047 1124 4FF0330B 		mov	fp, #51
 9048              	.LVL757:
ARM GAS  /tmp/ccsJYix0.s 			page 263


2699:src/keys.c    **** 
 9049              		.loc 1 2699 3 view .LVU2831
 9050 1128 30E7     		b	.L757
 9051              	.LVL758:
 9052              	.L1180:
2699:src/keys.c    **** 
 9053              		.loc 1 2699 3 view .LVU2832
 9054              	.LBE926:
 9055              	.LBE974:
2952:src/keys.c    **** 
 9056              		.loc 1 2952 3 is_stmt 1 view .LVU2833
 9057              	.LBB975:
 9058              	.LBI975:
2740:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9059              		.loc 1 2740 12 view .LVU2834
 9060              	.LBB976:
2741:src/keys.c    **** 	enum shifts shift = reset_shift();
 9061              		.loc 1 2741 2 view .LVU2835
 9062              	.LBB977:
 9063              	.LBI977:
 200:src/keys.c    **** {
 9064              		.loc 1 200 14 view .LVU2836
 9065              	.LBB978:
 202:src/keys.c    ****     // K00 - K05
 9066              		.loc 1 202 3 view .LVU2837
 224:src/keys.c    **** }
 9067              		.loc 1 224 3 view .LVU2838
 9068              	.LBB979:
 9069              	.LBI979:
 121:src/keys.c    **** {
 9070              		.loc 1 121 12 view .LVU2839
 9071              	.LBB980:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9072              		.loc 1 123 2 view .LVU2840
 133:src/keys.c    **** }
 9073              		.loc 1 133 2 view .LVU2841
 133:src/keys.c    **** }
 9074              		.loc 1 133 23 is_stmt 0 view .LVU2842
 9075 112a A44B     		ldr	r3, .L1263
 9076              	.LBE980:
 9077              	.LBE979:
 224:src/keys.c    **** }
 9078              		.loc 1 224 28 view .LVU2843
 9079 112c A44A     		ldr	r2, .L1263+4
 9080              	.LBB982:
 9081              	.LBB981:
 133:src/keys.c    **** }
 9082              		.loc 1 133 23 view .LVU2844
 9083 112e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9084              	.LBE981:
 9085              	.LBE982:
 224:src/keys.c    **** }
 9086              		.loc 1 224 10 view .LVU2845
 9087 1130 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 9088              	.LBE978:
 9089              	.LBE977:
 9090              	.LBB983:
ARM GAS  /tmp/ccsJYix0.s 			page 264


 9091              	.LBB984:
 9092              	.LBB985:
 9093              	.LBB986:
 9094              	.LBB987:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9095              		.loc 1 87 18 view .LVU2846
 9096 1134 FFF7FEFF 		bl	shift_down
 9097              	.LVL759:
 9098              	.LBE987:
 9099              	.LBE986:
 9100              	.LBE985:
 9101              	.LBE984:
 9102              	.LBE983:
2741:src/keys.c    **** 	enum shifts shift = reset_shift();
 9103              		.loc 1 2741 15 view .LVU2847
 9104 1138 2BF0800B 		bic	fp, fp, #128
 9105              	.LVL760:
2742:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 9106              		.loc 1 2742 2 is_stmt 1 view .LVU2848
 9107              	.LBB996:
 9108              	.LBI983:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9109              		.loc 1 104 13 view .LVU2849
 9110              	.LBE996:
 9111              	.LBE976:
 9112              	.LBE975:
 9113              	.LBE1240:
 9114              	.LBE1312:
 105:src/keys.c    **** }
 9115              		.loc 1 105 2 view .LVU2850
 9116              	.LBB1313:
 9117              	.LBB1241:
 9118              	.LBB1011:
 9119              	.LBB1003:
 9120              	.LBB997:
 9121              	.LBB993:
 9122              	.LBI984:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9123              		.loc 1 94 20 view .LVU2851
 9124              	.LBB990:
  95:src/keys.c    **** 	State2.shifts = shift;
 9125              		.loc 1 95 2 view .LVU2852
 9126              	.LBB989:
 9127              	.LBI986:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9128              		.loc 1 86 13 view .LVU2853
 9129              	.LBB988:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9130              		.loc 1 87 2 view .LVU2854
  88:src/keys.c    **** }
 9131              		.loc 1 88 2 view .LVU2855
  88:src/keys.c    **** }
 9132              		.loc 1 88 52 is_stmt 0 view .LVU2856
 9133 113c 8146     		mov	r9, r0
 9134 113e 08B9     		cbnz	r0, .L773
 9135 1140 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 9136              	.L773:
ARM GAS  /tmp/ccsJYix0.s 			page 265


 9137              	.LVL761:
  88:src/keys.c    **** }
 9138              		.loc 1 88 52 view .LVU2857
 9139              	.LBE988:
 9140              	.LBE989:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9141              		.loc 1 96 2 is_stmt 1 view .LVU2858
 9142              	.LBE990:
 9143              	.LBE993:
 9144              	.LBE997:
2743:src/keys.c    **** 	const int g_max = global_regs();
 9145              		.loc 1 2743 31 is_stmt 0 view .LVU2859
 9146 1144 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9147              	.LBB998:
 9148              	.LBB994:
 9149              	.LBB991:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9150              		.loc 1 96 16 view .LVU2860
 9151 1148 0022     		movs	r2, #0
 9152              	.LBE991:
 9153              	.LBE994:
 9154              	.LBE998:
2743:src/keys.c    **** 	const int g_max = global_regs();
 9155              		.loc 1 2743 46 view .LVU2861
 9156 114a DB07     		lsls	r3, r3, #31
 9157              	.LBB999:
 9158              	.LBB995:
 9159              	.LBB992:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9160              		.loc 1 96 16 view .LVU2862
 9161 114c 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9162              		.loc 1 98 2 is_stmt 1 view .LVU2863
 9163              	.LVL762:
  98:src/keys.c    **** }
 9164              		.loc 1 98 2 is_stmt 0 view .LVU2864
 9165              	.LBE992:
 9166              	.LBE995:
 9167              	.LBE999:
2743:src/keys.c    **** 	const int g_max = global_regs();
 9168              		.loc 1 2743 2 is_stmt 1 view .LVU2865
2743:src/keys.c    **** 	const int g_max = global_regs();
 9169              		.loc 1 2743 46 is_stmt 0 view .LVU2866
 9170 1150 00F15882 		bmi	.L1221
 9171 1154 4FF0700A 		mov	r10, #112
 9172              	.LVL763:
 9173              	.L774:
2744:src/keys.c    **** 
 9174              		.loc 1 2744 2 is_stmt 1 view .LVU2867
2744:src/keys.c    **** 
 9175              		.loc 1 2744 20 is_stmt 0 view .LVU2868
 9176 1158 FFF7FEFF 		bl	global_regs
 9177              	.LVL764:
2746:src/keys.c    **** 		if (local_regs())
 9178              		.loc 1 2746 2 is_stmt 1 view .LVU2869
2746:src/keys.c    **** 		if (local_regs())
 9179              		.loc 1 2746 5 is_stmt 0 view .LVU2870
ARM GAS  /tmp/ccsJYix0.s 			page 266


 9180 115c BBF1700F 		cmp	fp, #112
 9181 1160 00F04C85 		beq	.L1222
2752:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9182              		.loc 1 2752 7 is_stmt 1 view .LVU2871
2752:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9183              		.loc 1 2752 10 is_stmt 0 view .LVU2872
 9184 1164 BBF1090F 		cmp	fp, #9
 9185 1168 40F26783 		bls	.L1223
2759:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9186              		.loc 1 2759 7 is_stmt 1 view .LVU2873
2759:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9187              		.loc 1 2759 29 is_stmt 0 view .LVU2874
 9188 116c 09F1FF33 		add	r3, r9, #-1
2759:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9189              		.loc 1 2759 10 view .LVU2875
 9190 1170 DBB2     		uxtb	r3, r3
 9191 1172 012B     		cmp	r3, #1
 9192 1174 40F24A82 		bls	.L1224
 9193              	.L782:
2763:src/keys.c    **** 		State2.digval = n;
 9194              		.loc 1 2763 7 is_stmt 1 view .LVU2876
2763:src/keys.c    **** 		State2.digval = n;
 9195              		.loc 1 2763 10 is_stmt 0 view .LVU2877
 9196 1178 BBF17F0F 		cmp	fp, #127
 9197 117c 40F07583 		bne	.L1225
2768:src/keys.c    **** 	case K_DOWN:
 9198              		.loc 1 2768 2 is_stmt 1 view .LVU2878
 9199 1180 073C     		subs	r4, r4, #7
 9200 1182 112C     		cmp	r4, #17
 9201 1184 21D8     		bhi	.L932
 9202 1186 DFE804F0 		tbb	[pc, r4]
 9203              	.L933:
 9204 118a 09       		.byte	(.L795-.L933)/2
 9205 118b 20       		.byte	(.L932-.L933)/2
 9206 118c 20       		.byte	(.L932-.L933)/2
 9207 118d 20       		.byte	(.L932-.L933)/2
 9208 118e 20       		.byte	(.L932-.L933)/2
 9209 118f 50       		.byte	(.L794-.L933)/2
 9210 1190 20       		.byte	(.L932-.L933)/2
 9211 1191 20       		.byte	(.L932-.L933)/2
 9212 1192 20       		.byte	(.L932-.L933)/2
 9213 1193 41       		.byte	(.L792-.L933)/2
 9214 1194 20       		.byte	(.L932-.L933)/2
 9215 1195 5A       		.byte	(.L788-.L933)/2
 9216 1196 20       		.byte	(.L932-.L933)/2
 9217 1197 20       		.byte	(.L932-.L933)/2
 9218 1198 20       		.byte	(.L932-.L933)/2
 9219 1199 20       		.byte	(.L932-.L933)/2
 9220 119a 20       		.byte	(.L932-.L933)/2
 9221 119b 25       		.byte	(.L785-.L933)/2
 9222              		.p2align 1
 9223              	.L795:
2807:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9224              		.loc 1 2807 3 view .LVU2879
2807:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9225              		.loc 1 2807 6 is_stmt 0 view .LVU2880
 9226 119c B9F1000F 		cmp	r9, #0
ARM GAS  /tmp/ccsJYix0.s 			page 267


 9227 11a0 40F0E083 		bne	.L796
2811:src/keys.c    **** #endif
 9228              		.loc 1 2811 4 is_stmt 1 view .LVU2881
2811:src/keys.c    **** #endif
 9229              		.loc 1 2811 8 is_stmt 0 view .LVU2882
 9230 11a4 B8F808B0 		ldrh	fp, [r8, #8]
 9231              	.LVL765:
2813:src/keys.c    **** 			State2.digval = 0;
 9232              		.loc 1 2813 4 is_stmt 1 view .LVU2883
2813:src/keys.c    **** 			State2.digval = 0;
 9233              		.loc 1 2813 24 is_stmt 0 view .LVU2884
 9234 11a8 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2815:src/keys.c    **** 			return n;
 9235              		.loc 1 2815 19 view .LVU2885
 9236 11ac 88F80A90 		strb	r9, [r8, #10]
2813:src/keys.c    **** 			State2.digval = 0;
 9237              		.loc 1 2813 24 view .LVU2886
 9238 11b0 69F3C303 		bfi	r3, r9, #3, #1
2816:src/keys.c    **** 		}
 9239              		.loc 1 2816 11 view .LVU2887
 9240 11b4 4BF4285B 		orr	fp, fp, #10752
 9241              	.LVL766:
2813:src/keys.c    **** 			State2.digval = 0;
 9242              		.loc 1 2813 24 view .LVU2888
 9243 11b8 88F81730 		strb	r3, [r8, #23]
2814:src/keys.c    **** 			State2.digval2 = 0;
 9244              		.loc 1 2814 4 is_stmt 1 view .LVU2889
2815:src/keys.c    **** 			return n;
 9245              		.loc 1 2815 4 view .LVU2890
2816:src/keys.c    **** 		}
 9246              		.loc 1 2816 4 view .LVU2891
2814:src/keys.c    **** 			State2.digval2 = 0;
 9247              		.loc 1 2814 18 is_stmt 0 view .LVU2892
 9248 11bc A8F80890 		strh	r9, [r8, #8]	@ movhi
 9249 11c0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9250 11c4 5846     		mov	r0, fp
 9251              	.LVL767:
2816:src/keys.c    **** 		}
 9252              		.loc 1 2816 11 view .LVU2893
 9253 11c6 FFF7ADB9 		b	.L673
 9254              	.LVL768:
 9255              	.L932:
2816:src/keys.c    **** 		}
 9256              		.loc 1 2816 11 view .LVU2894
 9257 11ca 3268     		ldr	r2, [r6]
2819:src/keys.c    **** 	}
 9258              		.loc 1 2819 10 view .LVU2895
 9259 11cc 4FF0330B 		mov	fp, #51
 9260              	.LVL769:
2819:src/keys.c    **** 	}
 9261              		.loc 1 2819 10 view .LVU2896
 9262 11d0 FEF76FBF 		b	.L616
 9263              	.LVL770:
 9264              	.L785:
2770:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9265              		.loc 1 2770 3 is_stmt 1 view .LVU2897
2770:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
ARM GAS  /tmp/ccsJYix0.s 			page 268


 9266              		.loc 1 2770 13 is_stmt 0 view .LVU2898
 9267 11d4 B8F80830 		ldrh	r3, [r8, #8]
2770:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9268              		.loc 1 2770 6 view .LVU2899
 9269 11d8 002B     		cmp	r3, #0
 9270 11da 00F09B84 		beq	.L786
2771:src/keys.c    **** 				State2.digval = global_regs();
 9271              		.loc 1 2771 4 is_stmt 1 view .LVU2900
2771:src/keys.c    **** 				State2.digval = global_regs();
 9272              		.loc 1 2771 8 is_stmt 0 view .LVU2901
 9273 11de 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2771:src/keys.c    **** 				State2.digval = global_regs();
 9274              		.loc 1 2771 7 view .LVU2902
 9275 11e2 D207     		lsls	r2, r2, #31
 9276 11e4 02D4     		bmi	.L787
2771:src/keys.c    **** 				State2.digval = global_regs();
 9277              		.loc 1 2771 23 view .LVU2903
 9278 11e6 642B     		cmp	r3, #100
 9279 11e8 00F09A84 		beq	.L1226
 9280              	.LVL771:
 9281              	.L787:
2773:src/keys.c    **** 		}
 9282              		.loc 1 2773 4 is_stmt 1 view .LVU2904
 9283 11ec B8F80830 		ldrh	r3, [r8, #8]
 9284 11f0 013B     		subs	r3, r3, #1
 9285              	.L1146:
2773:src/keys.c    **** 		}
 9286              		.loc 1 2773 4 is_stmt 0 view .LVU2905
 9287 11f2 A8F80830 		strh	r3, [r8, #8]	@ movhi
 9288              	.LVL772:
 9289              	.L778:
2825:src/keys.c    **** 	return STATE_UNFINISHED;
 9290              		.loc 1 2825 2 is_stmt 1 view .LVU2906
2825:src/keys.c    **** 	return STATE_UNFINISHED;
 9291              		.loc 1 2825 16 is_stmt 0 view .LVU2907
 9292 11f6 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 9293 11fa 3268     		ldr	r2, [r6]
 9294 11fc 6FF3C503 		bfc	r3, #3, #3
 9295 1200 88F81430 		strb	r3, [r8, #20]
2826:src/keys.c    **** }
 9296              		.loc 1 2826 2 is_stmt 1 view .LVU2908
2826:src/keys.c    **** }
 9297              		.loc 1 2826 9 is_stmt 0 view .LVU2909
 9298 1204 4FF0330B 		mov	fp, #51
 9299              	.LVL773:
2826:src/keys.c    **** }
 9300              		.loc 1 2826 9 view .LVU2910
 9301 1208 FEF753BF 		b	.L616
 9302              	.LVL774:
 9303              	.L792:
2797:src/keys.c    **** 			return STATE_UNFINISHED;
 9304              		.loc 1 2797 3 is_stmt 1 view .LVU2911
2797:src/keys.c    **** 			return STATE_UNFINISHED;
 9305              		.loc 1 2797 7 is_stmt 0 view .LVU2912
 9306 120c 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2797:src/keys.c    **** 			return STATE_UNFINISHED;
 9307              		.loc 1 2797 6 view .LVU2913
ARM GAS  /tmp/ccsJYix0.s 			page 269


 9308 1210 13F02002 		ands	r2, r3, #32
 9309 1214 40F0A683 		bne	.L796
2799:src/keys.c    **** 
 9310              		.loc 1 2799 3 is_stmt 1 view .LVU2914
2821:src/keys.c    **** 	State2.digval = 0;
 9311              		.loc 1 2821 2 view .LVU2915
2821:src/keys.c    **** 	State2.digval = 0;
 9312              		.loc 1 2821 22 is_stmt 0 view .LVU2916
 9313 1218 62F3C303 		bfi	r3, r2, #3, #1
 9314 121c 88F81730 		strb	r3, [r8, #23]
2822:src/keys.c    **** 	State2.digval2 = 0;
 9315              		.loc 1 2822 2 is_stmt 1 view .LVU2917
2822:src/keys.c    **** 	State2.digval2 = 0;
 9316              		.loc 1 2822 16 is_stmt 0 view .LVU2918
 9317 1220 A8F80820 		strh	r2, [r8, #8]	@ movhi
2823:src/keys.c    **** reset_window:
 9318              		.loc 1 2823 2 is_stmt 1 view .LVU2919
2823:src/keys.c    **** reset_window:
 9319              		.loc 1 2823 17 is_stmt 0 view .LVU2920
 9320 1224 88F80A20 		strb	r2, [r8, #10]
 9321 1228 E5E7     		b	.L778
 9322              	.L794:
2802:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9323              		.loc 1 2802 3 is_stmt 1 view .LVU2921
2802:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9324              		.loc 1 2802 6 is_stmt 0 view .LVU2922
 9325 122a B9F1010F 		cmp	r9, #1
 9326 122e B5D1     		bne	.L795
2803:src/keys.c    **** 			goto reset_window;
 9327              		.loc 1 2803 4 is_stmt 1 view .LVU2923
2803:src/keys.c    **** 			goto reset_window;
 9328              		.loc 1 2803 25 is_stmt 0 view .LVU2924
 9329 1230 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9330 1234 43F00403 		orr	r3, r3, #4
 9331 1238 88F81630 		strb	r3, [r8, #22]
2804:src/keys.c    **** 		}
 9332              		.loc 1 2804 4 is_stmt 1 view .LVU2925
 9333 123c DBE7     		b	.L778
 9334              	.L788:
2780:src/keys.c    **** 			State2.digval++;
 9335              		.loc 1 2780 3 view .LVU2926
2780:src/keys.c    **** 			State2.digval++;
 9336              		.loc 1 2780 13 is_stmt 0 view .LVU2927
 9337 123e B8F80830 		ldrh	r3, [r8, #8]
2780:src/keys.c    **** 			State2.digval++;
 9338              		.loc 1 2780 27 view .LVU2928
 9339 1242 0AF1FF3A 		add	r10, r10, #-1
 9340              	.LVL775:
2780:src/keys.c    **** 			State2.digval++;
 9341              		.loc 1 2780 6 view .LVU2929
 9342 1246 5345     		cmp	r3, r10
 9343 1248 80F27684 		bge	.L789
2781:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9344              		.loc 1 2781 4 is_stmt 1 view .LVU2930
2782:src/keys.c    **** 				State2.digval = regX_idx;
 9345              		.loc 1 2782 8 is_stmt 0 view .LVU2931
 9346 124c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccsJYix0.s 			page 270


2781:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9347              		.loc 1 2781 17 view .LVU2932
 9348 1250 0133     		adds	r3, r3, #1
 9349 1252 9CB2     		uxth	r4, r3
2782:src/keys.c    **** 				State2.digval = regX_idx;
 9350              		.loc 1 2782 7 view .LVU2933
 9351 1254 D307     		lsls	r3, r2, #31
2781:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9352              		.loc 1 2781 17 view .LVU2934
 9353 1256 A8F80840 		strh	r4, [r8, #8]	@ movhi
2782:src/keys.c    **** 				State2.digval = regX_idx;
 9354              		.loc 1 2782 4 is_stmt 1 view .LVU2935
2782:src/keys.c    **** 				State2.digval = regX_idx;
 9355              		.loc 1 2782 7 is_stmt 0 view .LVU2936
 9356 125a CCD4     		bmi	.L778
2782:src/keys.c    **** 				State2.digval = regX_idx;
 9357              		.loc 1 2782 43 view .LVU2937
 9358 125c FFF7FEFF 		bl	global_regs
 9359              	.LVL776:
2782:src/keys.c    **** 				State2.digval = regX_idx;
 9360              		.loc 1 2782 23 view .LVU2938
 9361 1260 8442     		cmp	r4, r0
 9362 1262 C8D1     		bne	.L778
2783:src/keys.c    **** 		}
 9363              		.loc 1 2783 5 is_stmt 1 view .LVU2939
2783:src/keys.c    **** 		}
 9364              		.loc 1 2783 19 is_stmt 0 view .LVU2940
 9365 1264 6423     		movs	r3, #100
 9366 1266 A8F80830 		strh	r3, [r8, #8]	@ movhi
 9367 126a C4E7     		b	.L778
 9368              	.LVL777:
 9369              	.L667:
2783:src/keys.c    **** 		}
 9370              		.loc 1 2783 19 view .LVU2941
 9371              	.LBE1003:
 9372              	.LBE1011:
 9373              	.LBB1012:
 9374              	.LBB772:
1261:src/keys.c    **** #endif
 9375              		.loc 1 1261 4 is_stmt 1 view .LVU2942
1261:src/keys.c    **** #endif
 9376              		.loc 1 1261 18 view .LVU2943
1261:src/keys.c    **** #endif
 9377              		.loc 1 1261 18 is_stmt 0 view .LVU2944
 9378 126c 89F00109 		eor	r9, r9, #1
 9379              	.LVL778:
1261:src/keys.c    **** #endif
 9380              		.loc 1 1261 18 view .LVU2945
 9381 1270 36E4     		b	.L674
 9382              	.LVL779:
 9383              	.L1197:
1261:src/keys.c    **** #endif
 9384              		.loc 1 1261 18 view .LVU2946
 9385              	.LBE772:
 9386              	.LBE1012:
 9387              	.LBB1013:
 9388              	.LBB752:
ARM GAS  /tmp/ccsJYix0.s 			page 271


1348:src/keys.c    **** #endif
 9389              		.loc 1 1348 44 is_stmt 1 view .LVU2947
1348:src/keys.c    **** #endif
 9390              		.loc 1 1348 52 is_stmt 0 view .LVU2948
 9391 1272 0420     		movs	r0, #4
 9392 1274 FFF7FEFF 		bl	gtodot_digit
 9393              	.LVL780:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9394              		.loc 1 1391 2 is_stmt 1 view .LVU2949
 9395              	.LBE752:
 9396              	.LBE1013:
2894:src/keys.c    **** 
 9397              		.loc 1 2894 10 is_stmt 0 view .LVU2950
 9398 1278 4FF0330B 		mov	fp, #51
 9399 127c 3268     		ldr	r2, [r6]
 9400 127e FEF718BF 		b	.L616
 9401              	.LVL781:
 9402              	.L1198:
 9403              	.LBB1014:
 9404              	.LBB753:
1352:src/keys.c    **** 		goto fin;
 9405              		.loc 1 1352 3 is_stmt 1 view .LVU2951
 9406              	.LBB745:
 9407              	.LBI745:
1324:src/keys.c    **** 	const int code = 100 + n;
 9408              		.loc 1 1324 12 view .LVU2952
 9409              	.LBB746:
1325:src/keys.c    **** 	unsigned int pc = state_pc();
 9410              		.loc 1 1325 2 view .LVU2953
1326:src/keys.c    **** 
 9411              		.loc 1 1326 2 view .LVU2954
1326:src/keys.c    **** 
 9412              		.loc 1 1326 20 is_stmt 0 view .LVU2955
 9413 1282 DFF84091 		ldr	r9, .L1263+8
 9414 1286 D9F80030 		ldr	r3, [r9]
 9415              	.LVL782:
1326:src/keys.c    **** 
 9416              		.loc 1 1326 15 view .LVU2956
 9417 128a B3F8E007 		ldrh	r0, [r3, #2016]
 9418              	.LVL783:
1328:src/keys.c    **** 		pc = 1;
 9419              		.loc 1 1328 2 is_stmt 1 view .LVU2957
1328:src/keys.c    **** 		pc = 1;
 9420              		.loc 1 1328 5 is_stmt 0 view .LVU2958
 9421 128e 830B     		lsrs	r3, r0, #14
1329:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9422              		.loc 1 1329 6 view .LVU2959
 9423 1290 032B     		cmp	r3, #3
 9424              	.LVL784:
1330:src/keys.c    **** 	if (pc > 0)
 9425              		.loc 1 1330 2 is_stmt 1 view .LVU2960
1330:src/keys.c    **** 	if (pc > 0)
 9426              		.loc 1 1330 7 is_stmt 0 view .LVU2961
 9427 1292 08BF     		it	eq
 9428 1294 0120     		moveq	r0, #1
 9429              	.LVL785:
1330:src/keys.c    **** 	if (pc > 0)
ARM GAS  /tmp/ccsJYix0.s 			page 272


 9430              		.loc 1 1330 7 view .LVU2962
 9431 1296 04F16401 		add	r1, r4, #100
 9432              	.LVL786:
1330:src/keys.c    **** 	if (pc > 0)
 9433              		.loc 1 1330 7 view .LVU2963
 9434 129a 0322     		movs	r2, #3
 9435              	.LVL787:
1330:src/keys.c    **** 	if (pc > 0)
 9436              		.loc 1 1330 7 view .LVU2964
 9437 129c FFF7FEFF 		bl	find_label_from
 9438              	.LVL788:
1331:src/keys.c    **** 		return pc;
 9439              		.loc 1 1331 2 is_stmt 1 view .LVU2965
1331:src/keys.c    **** 		return pc;
 9440              		.loc 1 1331 5 is_stmt 0 view .LVU2966
 9441 12a0 0028     		cmp	r0, #0
 9442 12a2 7FF43AAD 		bne	.L658
1333:src/keys.c    **** }
 9443              		.loc 1 1333 2 is_stmt 1 view .LVU2967
1333:src/keys.c    **** }
 9444              		.loc 1 1333 9 is_stmt 0 view .LVU2968
 9445 12a6 D9F80030 		ldr	r3, [r9]
 9446 12aa B3F8E007 		ldrh	r0, [r3, #2016]
 9447              	.LVL789:
1333:src/keys.c    **** }
 9448              		.loc 1 1333 9 view .LVU2969
 9449              	.LBE746:
 9450              	.LBE745:
1353:src/keys.c    **** 	}
 9451              		.loc 1 1353 3 is_stmt 1 view .LVU2970
 9452 12ae 34E5     		b	.L658
 9453              	.LVL790:
 9454              	.L1181:
1353:src/keys.c    **** 	}
 9455              		.loc 1 1353 3 is_stmt 0 view .LVU2971
 9456              	.LBE753:
 9457              	.LBE1014:
2955:src/keys.c    **** 
 9458              		.loc 1 2955 3 is_stmt 1 view .LVU2972
 9459              	.LBB1015:
 9460              	.LBI1015:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9461              		.loc 1 104 13 view .LVU2973
 9462              	.LBE1015:
 9463              	.LBE1241:
 9464              	.LBE1313:
 105:src/keys.c    **** }
 9465              		.loc 1 105 2 view .LVU2974
 9466              	.LBB1314:
 9467              	.LBB1242:
 9468              	.LBB1022:
 9469              	.LBB1016:
 9470              	.LBI1016:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9471              		.loc 1 94 20 view .LVU2975
 9472              	.LBB1017:
  95:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccsJYix0.s 			page 273


 9473              		.loc 1 95 2 view .LVU2976
 9474              	.LBB1018:
 9475              	.LBI1018:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9476              		.loc 1 86 13 view .LVU2977
 9477              	.LBB1019:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9478              		.loc 1 87 2 view .LVU2978
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9479              		.loc 1 87 18 is_stmt 0 view .LVU2979
 9480 12b0 FFF7FEFF 		bl	shift_down
 9481              	.LVL791:
  88:src/keys.c    **** }
 9482              		.loc 1 88 2 is_stmt 1 view .LVU2980
  88:src/keys.c    **** }
 9483              		.loc 1 88 52 is_stmt 0 view .LVU2981
 9484 12b4 0146     		mov	r1, r0
 9485 12b6 08B9     		cbnz	r0, .L798
 9486 12b8 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9487              	.L798:
 9488              	.LVL792:
  88:src/keys.c    **** }
 9489              		.loc 1 88 52 view .LVU2982
 9490              	.LBE1019:
 9491              	.LBE1018:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9492              		.loc 1 96 2 is_stmt 1 view .LVU2983
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9493              		.loc 1 96 16 is_stmt 0 view .LVU2984
 9494 12bc 0022     		movs	r2, #0
 9495              	.LBE1017:
 9496              	.LBE1016:
 9497              	.LBE1022:
2955:src/keys.c    **** 
 9498              		.loc 1 2955 10 view .LVU2985
 9499 12be 2046     		mov	r0, r4
 9500              	.LBB1023:
 9501              	.LBB1021:
 9502              	.LBB1020:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9503              		.loc 1 96 16 view .LVU2986
 9504 12c0 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9505              		.loc 1 98 2 is_stmt 1 view .LVU2987
 9506              	.LVL793:
  98:src/keys.c    **** }
 9507              		.loc 1 98 2 is_stmt 0 view .LVU2988
 9508              	.LBE1020:
 9509              	.LBE1021:
 9510              	.LBE1023:
2955:src/keys.c    **** 
 9511              		.loc 1 2955 10 view .LVU2989
 9512 12c4 FFF7FEFF 		bl	process_catalogue
 9513              	.LVL794:
2955:src/keys.c    **** 
 9514              		.loc 1 2955 10 view .LVU2990
 9515 12c8 8346     		mov	fp, r0
ARM GAS  /tmp/ccsJYix0.s 			page 274


 9516 12ca FFF7B9B8 		b	.L646
 9517              	.LVL795:
 9518              	.L992:
 9519              	.LBB1024:
 9520              	.LBB734:
1989:src/keys.c    **** 	}
 9521              		.loc 1 1989 18 view .LVU2991
 9522 12ce 2723     		movs	r3, #39
1989:src/keys.c    **** 	}
 9523              		.loc 1 1989 47 view .LVU2992
 9524 12d0 9B44     		add	fp, fp, r3
 9525              	.LVL796:
1989:src/keys.c    **** 	}
 9526              		.loc 1 1989 47 view .LVU2993
 9527 12d2 FFF7B5B8 		b	.L646
 9528              	.LVL797:
 9529              	.L993:
1989:src/keys.c    **** 	}
 9530              		.loc 1 1989 18 view .LVU2994
 9531 12d6 1E23     		movs	r3, #30
1989:src/keys.c    **** 	}
 9532              		.loc 1 1989 47 view .LVU2995
 9533 12d8 9B44     		add	fp, fp, r3
 9534              	.LVL798:
1989:src/keys.c    **** 	}
 9535              		.loc 1 1989 47 view .LVU2996
 9536 12da FFF7B1B8 		b	.L646
 9537              	.LVL799:
 9538              	.L1206:
1989:src/keys.c    **** 	}
 9539              		.loc 1 1989 47 view .LVU2997
 9540              	.LBE734:
 9541              	.LBE1024:
 9542              	.LBB1025:
 9543              	.LBB793:
2543:src/keys.c    **** 		return STATE_UNFINISHED;
 9544              		.loc 1 2543 3 is_stmt 1 view .LVU2998
 9545 12de 3268     		ldr	r2, [r6]
 9546              	.LVL800:
2543:src/keys.c    **** 		return STATE_UNFINISHED;
 9547              		.loc 1 2543 17 is_stmt 0 view .LVU2999
 9548 12e0 88F80C00 		strb	r0, [r8, #12]
2544:src/keys.c    **** 	} 
 9549              		.loc 1 2544 3 is_stmt 1 view .LVU3000
 9550              	.LBE793:
 9551              	.LBE1025:
2903:src/keys.c    **** 
 9552              		.loc 1 2903 10 is_stmt 0 view .LVU3001
 9553 12e4 4FF0330B 		mov	fp, #51
 9554              	.LBB1026:
 9555              	.LBB794:
2544:src/keys.c    **** 	} 
 9556              		.loc 1 2544 10 view .LVU3002
 9557 12e8 FEF7E3BE 		b	.L616
 9558              	.LVL801:
 9559              	.L1199:
2544:src/keys.c    **** 	} 
ARM GAS  /tmp/ccsJYix0.s 			page 275


 9560              		.loc 1 2544 10 view .LVU3003
 9561              	.LBE794:
 9562              	.LBE1026:
 9563              	.LBB1027:
 9564              	.LBB754:
1357:src/keys.c    **** 		goto fin;
 9565              		.loc 1 1357 3 is_stmt 1 view .LVU3004
1357:src/keys.c    **** 		goto fin;
 9566              		.loc 1 1357 11 is_stmt 0 view .LVU3005
 9567 12ec 354B     		ldr	r3, .L1263+8
 9568              	.LVL802:
1357:src/keys.c    **** 		goto fin;
 9569              		.loc 1 1357 11 view .LVU3006
 9570 12ee 1B68     		ldr	r3, [r3]
1357:src/keys.c    **** 		goto fin;
 9571              		.loc 1 1357 9 view .LVU3007
 9572 12f0 5888     		ldrh	r0, [r3, #2]
 9573              	.LVL803:
1358:src/keys.c    **** 	}
 9574              		.loc 1 1358 3 is_stmt 1 view .LVU3008
 9575 12f2 12E5     		b	.L658
 9576              	.LVL804:
 9577              	.L1201:
1366:src/keys.c    **** 			goto fin2;
 9578              		.loc 1 1366 3 view .LVU3009
1366:src/keys.c    **** 			goto fin2;
 9579              		.loc 1 1366 13 is_stmt 0 view .LVU3010
 9580 12f4 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9581              	.LVL805:
1366:src/keys.c    **** 			goto fin2;
 9582              		.loc 1 1366 6 view .LVU3011
 9583 12f8 002B     		cmp	r3, #0
 9584 12fa 3FF410AD 		beq	.L662
1369:src/keys.c    **** 			State2.digval /= 10;
 9585              		.loc 1 1369 4 is_stmt 1 view .LVU3012
1369:src/keys.c    **** 			State2.digval /= 10;
 9586              		.loc 1 1369 19 is_stmt 0 view .LVU3013
 9587 12fe 013B     		subs	r3, r3, #1
 9588 1300 88F80B30 		strb	r3, [r8, #11]
1370:src/keys.c    **** 		}
 9589              		.loc 1 1370 4 is_stmt 1 view .LVU3014
1370:src/keys.c    **** 		}
 9590              		.loc 1 1370 18 is_stmt 0 view .LVU3015
 9591 1304 0A21     		movs	r1, #10
 9592 1306 B8F80830 		ldrh	r3, [r8, #8]
 9593 130a 3268     		ldr	r2, [r6]
 9594              	.LVL806:
1370:src/keys.c    **** 		}
 9595              		.loc 1 1370 18 view .LVU3016
 9596 130c B3FBF1F3 		udiv	r3, r3, r1
 9597              	.LBE754:
 9598              	.LBE1027:
2894:src/keys.c    **** 
 9599              		.loc 1 2894 10 view .LVU3017
 9600 1310 4FF0330B 		mov	fp, #51
 9601              	.LBB1028:
 9602              	.LBB755:
ARM GAS  /tmp/ccsJYix0.s 			page 276


1370:src/keys.c    **** 		}
 9603              		.loc 1 1370 18 view .LVU3018
 9604 1314 A8F80830 		strh	r3, [r8, #8]	@ movhi
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9605              		.loc 1 1391 2 is_stmt 1 view .LVU3019
 9606 1318 FEF7CBBE 		b	.L616
 9607              	.LVL807:
 9608              	.L1182:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9609              		.loc 1 1391 2 is_stmt 0 view .LVU3020
 9610              	.LBE755:
 9611              	.LBE1028:
2959:src/keys.c    **** #else
 9612              		.loc 1 2959 3 is_stmt 1 view .LVU3021
 9613              	.LBB1029:
 9614              	.LBI1029:
1404:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 9615              		.loc 1 1404 12 view .LVU3022
 9616              	.LBB1030:
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9617              		.loc 1 1405 2 view .LVU3023
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9618              		.loc 1 1405 33 is_stmt 0 view .LVU3024
 9619 131c 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 9620              	.LBB1031:
 9621              	.LBB1032:
 9622              	.LBB1033:
 9623              	.LBB1034:
 9624              	.LBB1035:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9625              		.loc 1 87 18 view .LVU3025
 9626 1320 FFF7FEFF 		bl	shift_down
 9627              	.LVL808:
 9628              	.LBE1035:
 9629              	.LBE1034:
 9630              	.LBE1033:
 9631              	.LBE1032:
 9632              	.LBE1031:
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9633              		.loc 1 1405 15 view .LVU3026
 9634 1324 CA46     		mov	r10, r9
 9635              	.LVL809:
1406:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9636              		.loc 1 1406 9 is_stmt 1 view .LVU3027
1407:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9637              		.loc 1 1407 2 view .LVU3028
 9638              	.LBB1044:
 9639              	.LBI1031:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9640              		.loc 1 104 13 view .LVU3029
 9641              	.LBE1044:
 9642              	.LBE1030:
 9643              	.LBE1029:
 9644              	.LBE1242:
 9645              	.LBE1314:
 105:src/keys.c    **** }
 9646              		.loc 1 105 2 view .LVU3030
ARM GAS  /tmp/ccsJYix0.s 			page 277


 9647              	.LBB1315:
 9648              	.LBB1243:
 9649              	.LBB1094:
 9650              	.LBB1082:
 9651              	.LBB1045:
 9652              	.LBB1041:
 9653              	.LBI1032:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9654              		.loc 1 94 20 view .LVU3031
 9655              	.LBB1038:
  95:src/keys.c    **** 	State2.shifts = shift;
 9656              		.loc 1 95 2 view .LVU3032
 9657              	.LBB1037:
 9658              	.LBI1034:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9659              		.loc 1 86 13 view .LVU3033
 9660              	.LBB1036:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9661              		.loc 1 87 2 view .LVU3034
  88:src/keys.c    **** }
 9662              		.loc 1 88 2 view .LVU3035
  88:src/keys.c    **** }
 9663              		.loc 1 88 52 is_stmt 0 view .LVU3036
 9664 1326 08B9     		cbnz	r0, .L800
 9665 1328 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9666              	.LVL810:
 9667              	.L800:
  88:src/keys.c    **** }
 9668              		.loc 1 88 52 view .LVU3037
 9669              	.LBE1036:
 9670              	.LBE1037:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9671              		.loc 1 96 2 is_stmt 1 view .LVU3038
 9672              	.LBE1038:
 9673              	.LBE1041:
 9674              	.LBE1045:
 9675              	.LBB1046:
 9676              	.LBB1047:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9677              		.loc 1 439 6 is_stmt 0 view .LVU3039
 9678 132c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9679              	.LBE1047:
 9680              	.LBE1046:
 9681              	.LBB1063:
 9682              	.LBB1042:
 9683              	.LBB1039:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9684              		.loc 1 96 16 view .LVU3040
 9685 1330 4FF0000C 		mov	ip, #0
 9686              	.LBE1039:
 9687              	.LBE1042:
 9688              	.LBE1063:
 9689              	.LBB1064:
 9690              	.LBB1058:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9691              		.loc 1 439 5 view .LVU3041
 9692 1334 D906     		lsls	r1, r3, #27
ARM GAS  /tmp/ccsJYix0.s 			page 278


 9693              	.LBE1058:
 9694              	.LBE1064:
 9695              	.LBB1065:
 9696              	.LBB1043:
 9697              	.LBB1040:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9698              		.loc 1 96 16 view .LVU3042
 9699 1336 88F810C0 		strb	ip, [r8, #16]
  98:src/keys.c    **** }
 9700              		.loc 1 98 2 is_stmt 1 view .LVU3043
 9701              	.LVL811:
  98:src/keys.c    **** }
 9702              		.loc 1 98 2 is_stmt 0 view .LVU3044
 9703              	.LBE1040:
 9704              	.LBE1043:
 9705              	.LBE1065:
1408:src/keys.c    **** 	State2.alpha_pos = 0;
 9706              		.loc 1 1408 2 is_stmt 1 view .LVU3045
1408:src/keys.c    **** 	State2.alpha_pos = 0;
 9707              		.loc 1 1408 11 is_stmt 0 view .LVU3046
 9708 133a 0246     		mov	r2, r0
 9709              	.LVL812:
 9710              	.LBB1066:
 9711              	.LBI1046:
 389:src/keys.c    **** {
 9712              		.loc 1 389 12 is_stmt 1 view .LVU3047
 9713              	.LBB1059:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9714              		.loc 1 391 2 view .LVU3048
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9715              		.loc 1 439 2 view .LVU3049
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9716              		.loc 1 439 5 is_stmt 0 view .LVU3050
 9717 133c 47D5     		bpl	.L801
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 9718              		.loc 1 440 3 is_stmt 1 view .LVU3051
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 9719              		.loc 1 440 6 is_stmt 0 view .LVU3052
 9720 133e 0028     		cmp	r0, #0
 9721 1340 44D0     		beq	.L977
 442:src/keys.c    **** 			shift = SHIFT_LC_G;
 9722              		.loc 1 442 8 is_stmt 1 view .LVU3053
 9723              	.LBB1048:
 9724              	.LBB1049:
 133:src/keys.c    **** }
 9725              		.loc 1 133 23 is_stmt 0 view .LVU3054
 9726 1342 1E49     		ldr	r1, .L1263
 9727              	.LBE1049:
 9728              	.LBE1048:
 445:src/keys.c    **** }
 9729              		.loc 1 445 49 view .LVU3055
 9730 1344 204A     		ldr	r2, .L1263+12
 9731              	.LBB1054:
 9732              	.LBB1050:
 133:src/keys.c    **** }
 9733              		.loc 1 133 23 view .LVU3056
 9734 1346 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccsJYix0.s 			page 279


 9735              	.LBE1050:
 9736              	.LBE1054:
 9737              	.LBE1059:
 9738              	.LBE1066:
1409:src/keys.c    **** 
 9739              		.loc 1 1409 19 view .LVU3057
 9740 1348 88F80DC0 		strb	ip, [r8, #13]
 9741              	.LBB1067:
 9742              	.LBB1060:
 443:src/keys.c    **** 	}
 9743              		.loc 1 443 10 view .LVU3058
 9744 134c 0228     		cmp	r0, #2
 445:src/keys.c    **** }
 9745              		.loc 1 445 49 view .LVU3059
 9746 134e 4FF0060C 		mov	ip, #6
 9747 1352 0CFB0121 		mla	r1, ip, r1, r2
 443:src/keys.c    **** 	}
 9748              		.loc 1 443 10 view .LVU3060
 9749 1356 14BF     		ite	ne
 9750 1358 0246     		movne	r2, r0
 9751 135a 0522     		moveq	r2, #5
 9752              	.LVL813:
 445:src/keys.c    **** }
 9753              		.loc 1 445 2 is_stmt 1 view .LVU3061
 9754              	.LBB1055:
 9755              	.LBI1048:
 121:src/keys.c    **** {
 9756              		.loc 1 121 12 view .LVU3062
 9757              	.LBB1051:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9758              		.loc 1 123 2 view .LVU3063
 133:src/keys.c    **** }
 9759              		.loc 1 133 2 view .LVU3064
 133:src/keys.c    **** }
 9760              		.loc 1 133 2 is_stmt 0 view .LVU3065
 9761 135c 063C     		subs	r4, r4, #6
 9762              	.LBE1051:
 9763              	.LBE1055:
 445:src/keys.c    **** }
 9764              		.loc 1 445 49 view .LVU3066
 9765 135e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9766              	.LVL814:
 445:src/keys.c    **** }
 9767              		.loc 1 445 49 view .LVU3067
 9768              	.LBE1060:
 9769              	.LBE1067:
1409:src/keys.c    **** 
 9770              		.loc 1 1409 2 is_stmt 1 view .LVU3068
1411:src/keys.c    **** 	case K10:	// STO
 9771              		.loc 1 1411 2 view .LVU3069
 9772 1360 212C     		cmp	r4, #33
 9773 1362 23D8     		bhi	.L804
 9774 1364 DFE814F0 		tbh	[pc, r4, lsl #1]
 9775              	.L934:
 9776 1368 BA05     		.2byte	(.L813-.L934)/2
 9777 136a A805     		.2byte	(.L812-.L934)/2
 9778 136c 2200     		.2byte	(.L804-.L934)/2
ARM GAS  /tmp/ccsJYix0.s 			page 280


 9779 136e 2200     		.2byte	(.L804-.L934)/2
 9780 1370 2200     		.2byte	(.L804-.L934)/2
 9781 1372 2200     		.2byte	(.L804-.L934)/2
 9782 1374 CF05     		.2byte	(.L811-.L934)/2
 9783 1376 2200     		.2byte	(.L804-.L934)/2
 9784 1378 2200     		.2byte	(.L804-.L934)/2
 9785 137a 2200     		.2byte	(.L804-.L934)/2
 9786 137c 0304     		.2byte	(.L820-.L934)/2
 9787 137e 2200     		.2byte	(.L804-.L934)/2
 9788 1380 B504     		.2byte	(.L809-.L934)/2
 9789 1382 2200     		.2byte	(.L804-.L934)/2
 9790 1384 2200     		.2byte	(.L804-.L934)/2
 9791 1386 2200     		.2byte	(.L804-.L934)/2
 9792 1388 2200     		.2byte	(.L804-.L934)/2
 9793 138a 2200     		.2byte	(.L804-.L934)/2
 9794 138c A704     		.2byte	(.L808-.L934)/2
 9795 138e 2200     		.2byte	(.L804-.L934)/2
 9796 1390 2200     		.2byte	(.L804-.L934)/2
 9797 1392 2200     		.2byte	(.L804-.L934)/2
 9798 1394 2200     		.2byte	(.L804-.L934)/2
 9799 1396 2200     		.2byte	(.L804-.L934)/2
 9800 1398 2200     		.2byte	(.L804-.L934)/2
 9801 139a 2200     		.2byte	(.L804-.L934)/2
 9802 139c 2200     		.2byte	(.L804-.L934)/2
 9803 139e 2200     		.2byte	(.L804-.L934)/2
 9804 13a0 2200     		.2byte	(.L804-.L934)/2
 9805 13a2 2200     		.2byte	(.L804-.L934)/2
 9806 13a4 7204     		.2byte	(.L807-.L934)/2
 9807 13a6 2200     		.2byte	(.L804-.L934)/2
 9808 13a8 2200     		.2byte	(.L804-.L934)/2
 9809 13aa 6604     		.2byte	(.L805-.L934)/2
 9810              		.p2align 1
 9811              	.L804:
1518:src/keys.c    **** 		return STATE_UNFINISHED;
 9812              		.loc 1 1518 2 view .LVU3070
1518:src/keys.c    **** 		return STATE_UNFINISHED;
 9813              		.loc 1 1518 5 is_stmt 0 view .LVU3071
 9814 13ac 0029     		cmp	r1, #0
 9815 13ae 00F0D382 		beq	.L1227
1520:src/keys.c    **** }
 9816              		.loc 1 1520 2 is_stmt 1 view .LVU3072
1520:src/keys.c    **** }
 9817              		.loc 1 1520 9 is_stmt 0 view .LVU3073
 9818 13b2 41F4884B 		orr	fp, r1, #17408
 9819 13b6 5846     		mov	r0, fp
 9820              	.LVL815:
1520:src/keys.c    **** }
 9821              		.loc 1 1520 9 view .LVU3074
 9822 13b8 FFF7B4B8 		b	.L673
 9823              	.L1264:
 9824              		.align	2
 9825              	.L1263:
 9826 13bc 00000000 		.word	.LANCHOR1
 9827 13c0 00000000 		.word	.LANCHOR0
 9828 13c4 00000000 		.word	main_ram
 9829 13c8 00000000 		.word	.LANCHOR9
 9830              	.LVL816:
ARM GAS  /tmp/ccsJYix0.s 			page 281


 9831              	.L977:
 9832              	.LBB1068:
 9833              	.LBB1061:
 441:src/keys.c    **** 		else if (shift == SHIFT_G)
 9834              		.loc 1 441 10 view .LVU3075
 9835 13cc 0422     		movs	r2, #4
 9836              	.L801:
 9837              	.LVL817:
 445:src/keys.c    **** }
 9838              		.loc 1 445 2 is_stmt 1 view .LVU3076
 9839              	.LBB1056:
 121:src/keys.c    **** {
 9840              		.loc 1 121 12 view .LVU3077
 9841              	.LBB1052:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9842              		.loc 1 123 2 view .LVU3078
 133:src/keys.c    **** }
 9843              		.loc 1 133 2 view .LVU3079
 133:src/keys.c    **** }
 9844              		.loc 1 133 23 is_stmt 0 view .LVU3080
 9845 13ce BC49     		ldr	r1, .L1265
 9846              	.LBE1052:
 9847              	.LBE1056:
 445:src/keys.c    **** }
 9848              		.loc 1 445 49 view .LVU3081
 9849 13d0 DFF804C3 		ldr	ip, .L1265+24
 9850              	.LBB1057:
 9851              	.LBB1053:
 133:src/keys.c    **** }
 9852              		.loc 1 133 23 view .LVU3082
 9853 13d4 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9854              	.LBE1053:
 9855              	.LBE1057:
 445:src/keys.c    **** }
 9856              		.loc 1 445 49 view .LVU3083
 9857 13d6 4FF0060E 		mov	lr, #6
 9858 13da 0EFB01C1 		mla	r1, lr, r1, ip
 9859 13de 063C     		subs	r4, r4, #6
 9860              	.LBE1061:
 9861              	.LBE1068:
1409:src/keys.c    **** 
 9862              		.loc 1 1409 19 view .LVU3084
 9863 13e0 4FF0000C 		mov	ip, #0
 9864              	.LBB1069:
 9865              	.LBB1062:
 445:src/keys.c    **** }
 9866              		.loc 1 445 49 view .LVU3085
 9867 13e4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9868              	.LVL818:
 445:src/keys.c    **** }
 9869              		.loc 1 445 49 view .LVU3086
 9870              	.LBE1062:
 9871              	.LBE1069:
1409:src/keys.c    **** 
 9872              		.loc 1 1409 2 is_stmt 1 view .LVU3087
1409:src/keys.c    **** 
 9873              		.loc 1 1409 19 is_stmt 0 view .LVU3088
ARM GAS  /tmp/ccsJYix0.s 			page 282


 9874 13e6 88F80DC0 		strb	ip, [r8, #13]
1411:src/keys.c    **** 	case K10:	// STO
 9875              		.loc 1 1411 2 is_stmt 1 view .LVU3089
 9876 13ea 212C     		cmp	r4, #33
 9877 13ec DED8     		bhi	.L804
 9878 13ee 01A2     		adr	r2, .L806
 9879 13f0 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 9880              		.p2align 2
 9881              	.L806:
 9882 13f4 DD1E0000 		.word	.L813+1
 9883 13f8 B91E0000 		.word	.L812+1
 9884 13fc AD130000 		.word	.L804+1
 9885 1400 AD130000 		.word	.L804+1
 9886 1404 AD130000 		.word	.L804+1
 9887 1408 AD130000 		.word	.L804+1
 9888 140c 071F0000 		.word	.L811+1
 9889 1410 AD130000 		.word	.L804+1
 9890 1414 AD130000 		.word	.L804+1
 9891 1418 AD130000 		.word	.L804+1
 9892 141c 691B0000 		.word	.L810+1
 9893 1420 AD130000 		.word	.L804+1
 9894 1424 D31C0000 		.word	.L809+1
 9895 1428 AD130000 		.word	.L804+1
 9896 142c AD130000 		.word	.L804+1
 9897 1430 AD130000 		.word	.L804+1
 9898 1434 AD130000 		.word	.L804+1
 9899 1438 AD130000 		.word	.L804+1
 9900 143c B71C0000 		.word	.L808+1
 9901 1440 AD130000 		.word	.L804+1
 9902 1444 AD130000 		.word	.L804+1
 9903 1448 AD130000 		.word	.L804+1
 9904 144c AD130000 		.word	.L804+1
 9905 1450 AD130000 		.word	.L804+1
 9906 1454 AD130000 		.word	.L804+1
 9907 1458 AD130000 		.word	.L804+1
 9908 145c AD130000 		.word	.L804+1
 9909 1460 AD130000 		.word	.L804+1
 9910 1464 AD130000 		.word	.L804+1
 9911 1468 AD130000 		.word	.L804+1
 9912 146c 4D1C0000 		.word	.L807+1
 9913 1470 AD130000 		.word	.L804+1
 9914 1474 AD130000 		.word	.L804+1
 9915 1478 351C0000 		.word	.L805+1
 9916              	.LVL819:
 9917              		.p2align 1
 9918              	.L1183:
1411:src/keys.c    **** 	case K10:	// STO
 9919              		.loc 1 1411 2 is_stmt 0 view .LVU3090
 9920              	.LBE1082:
 9921              	.LBE1094:
2971:src/keys.c    **** 	} else {
 9922              		.loc 1 2971 3 is_stmt 1 view .LVU3091
 9923              	.LBB1095:
 9924              	.LBI1095:
1109:src/keys.c    **** #define _RARG   0xFF00
 9925              		.loc 1 1109 12 view .LVU3092
 9926              	.LBB1096:
ARM GAS  /tmp/ccsJYix0.s 			page 283


1114:src/keys.c    **** 		// Row 1
 9927              		.loc 1 1114 2 view .LVU3093
1165:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9928              		.loc 1 1165 2 view .LVU3094
 9929              	.LBB1097:
 9930              	.LBI1097:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9931              		.loc 1 104 13 view .LVU3095
 9932              	.LBE1097:
 9933              	.LBE1096:
 9934              	.LBE1095:
 9935              	.LBE1243:
 9936              	.LBE1315:
 105:src/keys.c    **** }
 9937              		.loc 1 105 2 view .LVU3096
 9938              	.LBB1316:
 9939              	.LBB1244:
 9940              	.LBB1127:
 9941              	.LBB1121:
 9942              	.LBB1106:
 9943              	.LBB1098:
 9944              	.LBI1098:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9945              		.loc 1 94 20 view .LVU3097
 9946              	.LBB1099:
  95:src/keys.c    **** 	State2.shifts = shift;
 9947              		.loc 1 95 2 view .LVU3098
 9948              	.LBB1100:
 9949              	.LBI1100:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9950              		.loc 1 86 13 view .LVU3099
 9951              	.LBB1101:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9952              		.loc 1 87 2 view .LVU3100
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9953              		.loc 1 87 18 is_stmt 0 view .LVU3101
 9954 147c FFF7FEFF 		bl	shift_down
 9955              	.LVL820:
  88:src/keys.c    **** }
 9956              		.loc 1 88 2 is_stmt 1 view .LVU3102
  88:src/keys.c    **** }
 9957              		.loc 1 88 52 is_stmt 0 view .LVU3103
 9958 1480 8246     		mov	r10, r0
 9959              	.LVL821:
  88:src/keys.c    **** }
 9960              		.loc 1 88 52 view .LVU3104
 9961 1482 08B9     		cbnz	r0, .L834
 9962 1484 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 9963              	.L834:
 9964              	.LVL822:
  88:src/keys.c    **** }
 9965              		.loc 1 88 52 view .LVU3105
 9966              	.LBE1101:
 9967              	.LBE1100:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9968              		.loc 1 96 2 is_stmt 1 view .LVU3106
 9969              	.LBE1099:
ARM GAS  /tmp/ccsJYix0.s 			page 284


 9970              	.LBE1098:
 9971              	.LBE1106:
 9972              	.LBB1107:
 9973              	.LBB1108:
 148:src/keys.c    **** }
 9974              		.loc 1 148 23 is_stmt 0 view .LVU3107
 9975 1488 8E4B     		ldr	r3, .L1265+4
 9976              	.LBE1108:
 9977              	.LBE1107:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9978              		.loc 1 1167 21 view .LVU3108
 9979 148a 8F48     		ldr	r0, .L1265+8
 9980              	.LBB1111:
 9981              	.LBB1109:
 148:src/keys.c    **** }
 9982              		.loc 1 148 23 view .LVU3109
 9983 148c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9984              	.LBE1109:
 9985              	.LBE1111:
1168:src/keys.c    **** 
 9986              		.loc 1 1168 15 view .LVU3110
 9987 148e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1167:src/keys.c    **** 	State2.cmplx = 0;
 9988              		.loc 1 1167 21 view .LVU3111
 9989 1492 0AEB8303 		add	r3, r10, r3, lsl #2
 9990              	.LBB1112:
 9991              	.LBB1104:
 9992              	.LBB1102:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9993              		.loc 1 96 16 view .LVU3112
 9994 1496 0021     		movs	r1, #0
 9995              	.LBE1102:
 9996              	.LBE1104:
 9997              	.LBE1112:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9998              		.loc 1 1167 21 view .LVU3113
 9999 1498 30F813B0 		ldrh	fp, [r0, r3, lsl #1]
 10000              	.LBB1113:
 10001              	.LBB1105:
 10002              	.LBB1103:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10003              		.loc 1 96 16 view .LVU3114
 10004 149c 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 10005              		.loc 1 98 2 is_stmt 1 view .LVU3115
 10006              	.LVL823:
  98:src/keys.c    **** }
 10007              		.loc 1 98 2 is_stmt 0 view .LVU3116
 10008              	.LBE1103:
 10009              	.LBE1105:
 10010              	.LBE1113:
1166:src/keys.c    **** 	int op = op_map[lc][shift];
 10011              		.loc 1 1166 2 is_stmt 1 view .LVU3117
 10012              	.LBB1114:
 10013              	.LBI1107:
 136:src/keys.c    **** {
 10014              		.loc 1 136 12 view .LVU3118
ARM GAS  /tmp/ccsJYix0.s 			page 285


 10015              	.LBB1110:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10016              		.loc 1 138 2 view .LVU3119
 148:src/keys.c    **** }
 10017              		.loc 1 148 2 view .LVU3120
 148:src/keys.c    **** }
 10018              		.loc 1 148 2 is_stmt 0 view .LVU3121
 10019              	.LBE1110:
 10020              	.LBE1114:
1167:src/keys.c    **** 	State2.cmplx = 0;
 10021              		.loc 1 1167 2 is_stmt 1 view .LVU3122
1168:src/keys.c    **** 
 10022              		.loc 1 1168 2 view .LVU3123
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 10023              		.loc 1 1170 5 is_stmt 0 view .LVU3124
 10024 14a0 0BF47F43 		and	r3, fp, #65280
1168:src/keys.c    **** 
 10025              		.loc 1 1168 15 view .LVU3125
 10026 14a4 61F34102 		bfi	r2, r1, #1, #1
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 10027              		.loc 1 1170 5 view .LVU3126
 10028 14a8 B3F57F4F 		cmp	r3, #65280
1168:src/keys.c    **** 
 10029              		.loc 1 1168 15 view .LVU3127
 10030 14ac 88F81520 		strb	r2, [r8, #21]
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 10031              		.loc 1 1170 2 is_stmt 1 view .LVU3128
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 10032              		.loc 1 1170 5 is_stmt 0 view .LVU3129
 10033 14b0 00F0A784 		beq	.L1228
1174:src/keys.c    **** 		// HYP
 10034              		.loc 1 1174 2 is_stmt 1 view .LVU3130
1174:src/keys.c    **** 		// HYP
 10035              		.loc 1 1174 5 is_stmt 0 view .LVU3131
 10036 14b4 002C     		cmp	r4, #0
 10037 14b6 00F09184 		beq	.L1229
1183:src/keys.c    **** 		switch (c) {
 10038              		.loc 1 1183 2 is_stmt 1 view .LVU3132
1183:src/keys.c    **** 		switch (c) {
 10039              		.loc 1 1183 5 is_stmt 0 view .LVU3133
 10040 14ba BAF1000F 		cmp	r10, #0
 10041 14be 3EF4BFAF 		beq	.L646
1184:src/keys.c    **** 		case K_CMPLX:
 10042              		.loc 1 1184 3 is_stmt 1 view .LVU3134
 10043 14c2 242C     		cmp	r4, #36
 10044 14c4 00F0AB84 		beq	.L838
 10045 14c8 2D2C     		cmp	r4, #45
 10046 14ca 00F07C84 		beq	.L839
 10047 14ce 1F2C     		cmp	r4, #31
 10048 14d0 7EF4B6AF 		bne	.L646
1190:src/keys.c    **** 				if (is_bad_cmdline())
 10049              		.loc 1 1190 4 view .LVU3135
1190:src/keys.c    **** 				if (is_bad_cmdline())
 10050              		.loc 1 1190 7 is_stmt 0 view .LVU3136
 10051 14d4 BBF1330F 		cmp	fp, #51
 10052 14d8 00F06484 		beq	.L1230
1191:src/keys.c    **** 					return STATE_UNFINISHED;
ARM GAS  /tmp/ccsJYix0.s 			page 286


 10053              		.loc 1 1191 5 is_stmt 1 view .LVU3137
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 10054              		.loc 1 1191 9 is_stmt 0 view .LVU3138
 10055 14dc FFF7FEFF 		bl	is_bad_cmdline
 10056              	.LVL824:
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 10057              		.loc 1 1191 8 view .LVU3139
 10058 14e0 0446     		mov	r4, r0
 10059 14e2 0028     		cmp	r0, #0
 10060 14e4 00F04E84 		beq	.L842
 10061 14e8 3268     		ldr	r2, [r6]
1192:src/keys.c    **** 				process_cmdline_set_lift();
 10062              		.loc 1 1192 13 view .LVU3140
 10063 14ea 4FF0330B 		mov	fp, #51
 10064              	.LVL825:
1192:src/keys.c    **** 				process_cmdline_set_lift();
 10065              		.loc 1 1192 13 view .LVU3141
 10066 14ee FEF7E0BD 		b	.L616
 10067              	.LVL826:
 10068              	.L1212:
1192:src/keys.c    **** 				process_cmdline_set_lift();
 10069              		.loc 1 1192 13 view .LVU3142
 10070              	.LBE1121:
 10071              	.LBE1127:
 10072              	.LBB1128:
 10073              	.LBB877:
2433:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10074              		.loc 1 2433 3 is_stmt 1 view .LVU3143
2433:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10075              		.loc 1 2433 12 is_stmt 0 view .LVU3144
 10076 14f2 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 10077 14f6 2046     		mov	r0, r4
 10078 14f8 941E     		subs	r4, r2, #2
 10079 14fa 6242     		rsbs	r2, r4, #0
 10080 14fc 6241     		adcs	r2, r2, r4
 10081 14fe FFF7FEFF 		bl	process_catalogue
 10082              	.LVL827:
2434:src/keys.c    **** 			return opcode;
 10083              		.loc 1 2434 6 view .LVU3145
 10084 1502 3328     		cmp	r0, #51
2433:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10085              		.loc 1 2433 12 view .LVU3146
 10086 1504 8346     		mov	fp, r0
 10087              	.LVL828:
2434:src/keys.c    **** 			return opcode;
 10088              		.loc 1 2434 3 is_stmt 1 view .LVU3147
2434:src/keys.c    **** 			return opcode;
 10089              		.loc 1 2434 6 is_stmt 0 view .LVU3148
 10090 1506 00F0CE81 		beq	.L1231
2436:src/keys.c    **** 		goto add_char;
 10091              		.loc 1 2436 3 is_stmt 1 view .LVU3149
2436:src/keys.c    **** 		goto add_char;
 10092              		.loc 1 2436 6 is_stmt 0 view .LVU3150
 10093 150a C0B2     		uxtb	r0, r0
 10094              	.LVL829:
2437:src/keys.c    **** 	}
 10095              		.loc 1 2437 3 is_stmt 1 view .LVU3151
ARM GAS  /tmp/ccsJYix0.s 			page 287


 10096 150c 55E4     		b	.L731
 10097              	.LVL830:
 10098              	.L1176:
2437:src/keys.c    **** 	}
 10099              		.loc 1 2437 3 is_stmt 0 view .LVU3152
 10100              	.LBE877:
 10101              	.LBE1128:
 10102              	.LBB1129:
 10103              	.LBB668:
 10104              	.LBB662:
 327:src/keys.c    **** #else
 10105              		.loc 1 327 45 view .LVU3153
 10106 150e FFF7FEFF 		bl	shift_down
 10107              	.LVL831:
 327:src/keys.c    **** #else
 10108              		.loc 1 327 42 view .LVU3154
 10109 1512 0328     		cmp	r0, #3
 10110 1514 00F0DF81 		beq	.L718
 10111 1518 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 325:src/keys.c    **** #ifndef WINGUI
 10112              		.loc 1 325 8 view .LVU3155
 10113 151c 6B4B     		ldr	r3, .L1265+12
 327:src/keys.c    **** #else
 10114              		.loc 1 327 73 view .LVU3156
 10115 151e DC46     		mov	ip, fp
 331:src/keys.c    ****   }
 10116              		.loc 1 331 9 view .LVU3157
 10117 1520 0C22     		movs	r2, #12
 10118 1522 FEF798BE 		b	.L717
 10119              	.LVL832:
 10120              	.L969:
 331:src/keys.c    ****   }
 10121              		.loc 1 331 9 view .LVU3158
 10122              	.LBE662:
 10123              	.LBE668:
 10124              	.LBE1129:
 10125              	.LBB1130:
 10126              	.LBB927:
2612:src/keys.c    **** 	const int opcode = getprog(pc);
 10127              		.loc 1 2612 27 view .LVU3159
 10128 1526 4FF0030B 		mov	fp, #3
 10129 152a F1E4     		b	.L746
 10130              	.LVL833:
 10131              	.L1185:
2612:src/keys.c    **** 	const int opcode = getprog(pc);
 10132              		.loc 1 2612 27 view .LVU3160
 10133              	.LBE927:
 10134              	.LBE1130:
2976:src/keys.c    **** 		// print_debug (3, c);
 10135              		.loc 1 2976 4 is_stmt 1 view .LVU3161
 10136              	.LBB1131:
 10137              	.LBI1131:
1010:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 10138              		.loc 1 1010 12 view .LVU3162
 10139              	.LBB1132:
1013:src/keys.c    **** 		// Row 1
 10140              		.loc 1 1013 2 view .LVU3163
ARM GAS  /tmp/ccsJYix0.s 			page 288


1064:src/keys.c    **** 	int op = op_map[lc];
 10141              		.loc 1 1064 2 view .LVU3164
 10142              	.LBB1133:
 10143              	.LBI1133:
 136:src/keys.c    **** {
 10144              		.loc 1 136 12 view .LVU3165
 10145              	.LBB1134:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10146              		.loc 1 138 2 view .LVU3166
 148:src/keys.c    **** }
 10147              		.loc 1 148 2 view .LVU3167
 148:src/keys.c    **** }
 10148              		.loc 1 148 2 is_stmt 0 view .LVU3168
 10149              	.LBE1134:
 10150              	.LBE1133:
1065:src/keys.c    **** 	reset_shift();
 10151              		.loc 1 1065 2 is_stmt 1 view .LVU3169
 10152              	.LBB1137:
 10153              	.LBB1135:
 148:src/keys.c    **** }
 10154              		.loc 1 148 23 is_stmt 0 view .LVU3170
 10155 152c 654A     		ldr	r2, .L1265+4
 10156              	.LBE1135:
 10157              	.LBE1137:
1065:src/keys.c    **** 	reset_shift();
 10158              		.loc 1 1065 17 view .LVU3171
 10159 152e 684B     		ldr	r3, .L1265+16
 10160              	.LBB1138:
 10161              	.LBB1136:
 148:src/keys.c    **** }
 10162              		.loc 1 148 23 view .LVU3172
 10163 1530 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 10164              	.LBE1136:
 10165              	.LBE1138:
1065:src/keys.c    **** 	reset_shift();
 10166              		.loc 1 1065 17 view .LVU3173
 10167 1532 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 10168              	.LVL834:
1066:src/keys.c    **** 
 10169              		.loc 1 1066 2 is_stmt 1 view .LVU3174
 10170              	.LBB1139:
 10171              	.LBI1139:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10172              		.loc 1 104 13 view .LVU3175
 10173              	.LBE1139:
 10174              	.LBE1132:
 10175              	.LBE1131:
 10176              	.LBE1244:
 10177              	.LBE1316:
 105:src/keys.c    **** }
 10178              		.loc 1 105 2 view .LVU3176
 10179              	.LBB1317:
 10180              	.LBB1245:
 10181              	.LBB1154:
 10182              	.LBB1150:
 10183              	.LBB1146:
 10184              	.LBB1140:
ARM GAS  /tmp/ccsJYix0.s 			page 289


 10185              	.LBI1140:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10186              		.loc 1 94 20 view .LVU3177
 10187              	.LBB1141:
  95:src/keys.c    **** 	State2.shifts = shift;
 10188              		.loc 1 95 2 view .LVU3178
 10189              	.LBB1142:
 10190              	.LBI1142:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10191              		.loc 1 86 13 view .LVU3179
 10192              	.LBB1143:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10193              		.loc 1 87 2 view .LVU3180
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10194              		.loc 1 87 18 is_stmt 0 view .LVU3181
 10195 1536 FFF7FEFF 		bl	shift_down
 10196              	.LVL835:
  88:src/keys.c    **** }
 10197              		.loc 1 88 2 is_stmt 1 view .LVU3182
 10198              	.LBE1143:
 10199              	.LBE1142:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10200              		.loc 1 96 2 view .LVU3183
 10201              	.LBE1141:
 10202              	.LBE1140:
 10203              	.LBE1146:
1069:src/keys.c    **** 	case K62:
 10204              		.loc 1 1069 2 is_stmt 0 view .LVU3184
 10205 153a 262C     		cmp	r4, #38
 10206              	.LBB1147:
 10207              	.LBB1145:
 10208              	.LBB1144:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10209              		.loc 1 96 16 view .LVU3185
 10210 153c 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 10211              		.loc 1 98 2 is_stmt 1 view .LVU3186
 10212              	.LVL836:
  98:src/keys.c    **** }
 10213              		.loc 1 98 2 is_stmt 0 view .LVU3187
 10214              	.LBE1144:
 10215              	.LBE1145:
 10216              	.LBE1147:
1069:src/keys.c    **** 	case K62:
 10217              		.loc 1 1069 2 is_stmt 1 view .LVU3188
 10218 1540 00F0EA81 		beq	.L869
 10219 1544 272C     		cmp	r4, #39
 10220 1546 1FD1     		bne	.L871
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10221              		.loc 1 1082 3 view .LVU3189
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10222              		.loc 1 1082 7 is_stmt 0 view .LVU3190
 10223 1548 FFF7FEFF 		bl	is_bad_cmdline
 10224              	.LVL837:
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10225              		.loc 1 1082 6 view .LVU3191
 10226 154c 0028     		cmp	r0, #0
ARM GAS  /tmp/ccsJYix0.s 			page 290


 10227 154e 40F04183 		bne	.L1232
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10228              		.loc 1 1084 3 is_stmt 1 view .LVU3192
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10229              		.loc 1 1084 30 is_stmt 0 view .LVU3193
 10230 1552 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10231 1556 C3F38012 		ubfx	r2, r3, #6, #1
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10232              		.loc 1 1084 22 view .LVU3194
 10233 155a C2F10102 		rsb	r2, r2, #1
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10234              		.loc 1 1084 18 view .LVU3195
 10235 155e 62F38613 		bfi	r3, r2, #6, #1
 10236 1562 88F81630 		strb	r3, [r8, #22]
1085:src/keys.c    **** 		update_program_bounds(1);
 10237              		.loc 1 1085 3 is_stmt 1 view .LVU3196
 10238 1566 FFF7FEFF 		bl	process_cmdline_set_lift
 10239              	.LVL838:
1086:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 10240              		.loc 1 1086 3 view .LVU3197
 10241 156a 0120     		movs	r0, #1
 10242 156c FFF7FEFF 		bl	update_program_bounds
 10243              	.LVL839:
1087:src/keys.c    **** 			set_pc(0);
 10244              		.loc 1 1087 3 view .LVU3198
1087:src/keys.c    **** 			set_pc(0);
 10245              		.loc 1 1087 7 is_stmt 0 view .LVU3199
 10246 1570 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1087:src/keys.c    **** 			set_pc(0);
 10247              		.loc 1 1087 6 view .LVU3200
 10248 1574 10F04000 		ands	r0, r0, #64
 10249 1578 06D1     		bne	.L871
1087:src/keys.c    **** 			set_pc(0);
 10250              		.loc 1 1087 27 view .LVU3201
 10251 157a 564B     		ldr	r3, .L1265+20
 10252 157c 1B68     		ldr	r3, [r3]
1087:src/keys.c    **** 			set_pc(0);
 10253              		.loc 1 1087 24 view .LVU3202
 10254 157e B3F8E027 		ldrh	r2, [r3, #2016]
 10255 1582 012A     		cmp	r2, #1
 10256 1584 00F01E83 		beq	.L1233
 10257              	.L871:
1095:src/keys.c    **** 		if (op & _RARG) {
 10258              		.loc 1 1095 5 view .LVU3203
 10259 1588 BAF1330F 		cmp	r10, #51
1065:src/keys.c    **** 	reset_shift();
 10260              		.loc 1 1065 6 view .LVU3204
 10261 158c D346     		mov	fp, r10
1095:src/keys.c    **** 		if (op & _RARG) {
 10262              		.loc 1 1095 2 is_stmt 1 view .LVU3205
1095:src/keys.c    **** 		if (op & _RARG) {
 10263              		.loc 1 1095 5 is_stmt 0 view .LVU3206
 10264 158e 0AD0     		beq	.L880
 10265              	.LVL840:
1096:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10266              		.loc 1 1096 3 is_stmt 1 view .LVU3207
1096:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
ARM GAS  /tmp/ccsJYix0.s 			page 291


 10267              		.loc 1 1096 6 is_stmt 0 view .LVU3208
 10268 1590 1AF4004F 		tst	r10, #32768
 10269 1594 00F0D081 		beq	.L1234
1097:src/keys.c    **** 			op = STATE_UNFINISHED;
 10270              		.loc 1 1097 4 is_stmt 1 view .LVU3209
 10271              	.LVL841:
 10272              	.LBB1148:
 10273              	.LBI1148:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 10274              		.loc 1 506 13 view .LVU3210
 10275              	.LBB1149:
 507:src/keys.c    **** 		return;
 10276              		.loc 1 507 2 view .LVU3211
 507:src/keys.c    **** 		return;
 10277              		.loc 1 507 6 is_stmt 0 view .LVU3212
 10278 1598 FFF7FEFF 		bl	is_bad_cmdline
 10279              	.LVL842:
 507:src/keys.c    **** 		return;
 10280              		.loc 1 507 5 view .LVU3213
 10281 159c 18B9     		cbnz	r0, .L880
 10282 159e 5FFA8AF0 		uxtb	r0, r10
 10283 15a2 FFF7FEFF 		bl	init_arg.part.0
 10284              	.LVL843:
 10285              	.L880:
 507:src/keys.c    **** 		return;
 10286              		.loc 1 507 5 view .LVU3214
 10287              	.LBE1149:
 10288              	.LBE1148:
1101:src/keys.c    **** #undef _RARG
 10289              		.loc 1 1101 2 is_stmt 1 view .LVU3215
1077:src/keys.c    **** #endif
 10290              		.loc 1 1077 29 is_stmt 0 view .LVU3216
 10291 15a6 4FF0330B 		mov	fp, #51
 10292              	.LVL844:
 10293              	.L874:
1101:src/keys.c    **** #undef _RARG
 10294              		.loc 1 1101 57 view .LVU3217
 10295 15aa 2BF4804B 		bic	fp, fp, #16384
 10296 15ae FEF747BF 		b	.L646
 10297              	.LVL845:
 10298              	.L1207:
1101:src/keys.c    **** #undef _RARG
 10299              		.loc 1 1101 57 view .LVU3218
 10300              	.LBE1150:
 10301              	.LBE1154:
 10302              	.LBB1155:
 10303              	.LBB795:
 10304              	.LBB787:
2551:src/keys.c    **** 		else if (nn != NO_REG)
 10305              		.loc 1 2551 4 is_stmt 1 view .LVU3219
2553:src/keys.c    **** 	}
 10306              		.loc 1 2553 6 is_stmt 0 view .LVU3220
 10307 15b2 9342     		cmp	r3, r2
 10308 15b4 08BF     		it	eq
 10309 15b6 0A22     		moveq	r2, #10
 10310              	.LVL846:
2553:src/keys.c    **** 	}
ARM GAS  /tmp/ccsJYix0.s 			page 292


 10311              		.loc 1 2553 6 view .LVU3221
 10312 15b8 FFF7DFBA 		b	.L695
 10313              	.LVL847:
 10314              	.L1213:
2553:src/keys.c    **** 	}
 10315              		.loc 1 2553 6 view .LVU3222
 10316              	.LBE787:
 10317              	.LBE795:
 10318              	.LBE1155:
 10319              	.LBB1156:
 10320              	.LBB878:
2442:src/keys.c    **** 				break;
 10321              		.loc 1 2442 3 is_stmt 1 view .LVU3223
2442:src/keys.c    **** 				break;
 10322              		.loc 1 2442 6 is_stmt 0 view .LVU3224
 10323 15bc 0029     		cmp	r1, #0
 10324 15be 7FF4EAAB 		bne	.L734
2444:src/keys.c    **** 		if (State2.numdigit == 0)
 10325              		.loc 1 2444 3 is_stmt 1 view .LVU3225
 10326              	.LBB867:
 10327              	.LBI867:
2419:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10328              		.loc 1 2419 13 view .LVU3226
 10329              	.LBB868:
2421:src/keys.c    **** 	if (! State2.alphas )
 10330              		.loc 1 2421 2 view .LVU3227
2421:src/keys.c    **** 	if (! State2.alphas )
 10331              		.loc 1 2421 15 is_stmt 0 view .LVU3228
 10332 15c2 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2422:src/keys.c    **** 		State2.alphashift = 0;
 10333              		.loc 1 2422 6 view .LVU3229
 10334 15c6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2421:src/keys.c    **** 	if (! State2.alphas )
 10335              		.loc 1 2421 15 view .LVU3230
 10336 15ca 61F3C302 		bfi	r2, r1, #3, #1
 10337 15ce 88F81520 		strb	r2, [r8, #21]
2422:src/keys.c    **** 		State2.alphashift = 0;
 10338              		.loc 1 2422 2 is_stmt 1 view .LVU3231
2422:src/keys.c    **** 		State2.alphashift = 0;
 10339              		.loc 1 2422 5 is_stmt 0 view .LVU3232
 10340 15d2 1A07     		lsls	r2, r3, #28
2423:src/keys.c    **** }
 10341              		.loc 1 2423 3 is_stmt 1 view .LVU3233
 10342              	.LBE868:
 10343              	.LBE867:
2445:src/keys.c    **** 			return STATE_UNFINISHED;
 10344              		.loc 1 2445 3 view .LVU3234
 10345              	.LBB870:
 10346              	.LBB869:
2423:src/keys.c    **** }
 10347              		.loc 1 2423 21 is_stmt 0 view .LVU3235
 10348 15d4 5CBF     		itt	pl
 10349 15d6 61F30413 		bfipl	r3, r1, #4, #1
 10350 15da 88F81630 		strbpl	r3, [r8, #22]
 10351              	.LBE869:
 10352              	.LBE870:
2445:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccsJYix0.s 			page 293


 10353              		.loc 1 2445 13 view .LVU3236
 10354 15de 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2445:src/keys.c    **** 			return STATE_UNFINISHED;
 10355              		.loc 1 2445 6 view .LVU3237
 10356 15e2 002B     		cmp	r3, #0
 10357 15e4 00F0B282 		beq	.L1235
2447:src/keys.c    **** 			State2.digval2 = 0;
 10358              		.loc 1 2447 8 is_stmt 1 view .LVU3238
2447:src/keys.c    **** 			State2.digval2 = 0;
 10359              		.loc 1 2447 11 is_stmt 0 view .LVU3239
 10360 15e8 012B     		cmp	r3, #1
2448:src/keys.c    **** 		goto fin;
 10361              		.loc 1 2448 19 view .LVU3240
 10362 15ea 4FF00000 		mov	r0, #0
2447:src/keys.c    **** 			State2.digval2 = 0;
 10363              		.loc 1 2447 11 view .LVU3241
 10364 15ee 7FF4FBAB 		bne	.L737
2448:src/keys.c    **** 		goto fin;
 10365              		.loc 1 2448 4 is_stmt 1 view .LVU3242
2448:src/keys.c    **** 		goto fin;
 10366              		.loc 1 2448 19 is_stmt 0 view .LVU3243
 10367 15f2 88F80A00 		strb	r0, [r8, #10]
 10368 15f6 FFF7F7BB 		b	.L737
 10369              	.LVL848:
 10370              	.L1218:
2448:src/keys.c    **** 		goto fin;
 10371              		.loc 1 2448 19 view .LVU3244
 10372 15fa 3268     		ldr	r2, [r6]
 10373              	.LBE878:
 10374              	.LBE1156:
 10375              	.LBB1157:
 10376              	.LBB735:
2001:src/keys.c    **** 
 10377              		.loc 1 2001 10 view .LVU3245
 10378 15fc 4FF0330B 		mov	fp, #51
 10379              	.LVL849:
2001:src/keys.c    **** 
 10380              		.loc 1 2001 10 view .LVU3246
 10381 1600 FEF757BD 		b	.L616
 10382              	.LVL850:
 10383              	.L1221:
2001:src/keys.c    **** 
 10384              		.loc 1 2001 10 view .LVU3247
 10385              	.LBE735:
 10386              	.LBE1157:
 10387              	.LBB1158:
 10388              	.LBB1004:
2743:src/keys.c    **** 	const int g_max = global_regs();
 10389              		.loc 1 2743 33 view .LVU3248
 10390 1604 FFF7FEFF 		bl	local_regs
 10391              	.LVL851:
 10392 1608 8246     		mov	r10, r0
 10393              	.LVL852:
2743:src/keys.c    **** 	const int g_max = global_regs();
 10394              		.loc 1 2743 33 view .LVU3249
 10395 160a A5E5     		b	.L774
 10396              	.LVL853:
ARM GAS  /tmp/ccsJYix0.s 			page 294


 10397              	.L1224:
2759:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10398              		.loc 1 2759 50 view .LVU3250
 10399 160c 0D2C     		cmp	r4, #13
 10400 160e 7FF4B3AD 		bne	.L782
2760:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10401              		.loc 1 2760 3 is_stmt 1 view .LVU3251
 10402 1612 B9F1010F 		cmp	r9, #1
 10403 1616 14BF     		ite	ne
 10404 1618 2C20     		movne	r0, #44
 10405              	.LVL854:
2760:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10406              		.loc 1 2760 3 is_stmt 0 view .LVU3252
 10407 161a 2B20     		moveq	r0, #43
 10408 161c FFF7FEFF 		bl	set_window
 10409              	.LVL855:
2761:src/keys.c    **** 	}
 10410              		.loc 1 2761 3 is_stmt 1 view .LVU3253
 10411              	.LBB1000:
 10412              	.LBI1000:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10413              		.loc 1 651 13 view .LVU3254
 10414              	.LBB1001:
 652:src/keys.c    **** }
 10415              		.loc 1 652 2 view .LVU3255
 652:src/keys.c    **** }
 10416              		.loc 1 652 15 is_stmt 0 view .LVU3256
 10417 1620 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10418 1624 3268     		ldr	r2, [r6]
 10419 1626 013B     		subs	r3, r3, #1
 10420 1628 18BF     		it	ne
 10421 162a 0123     		movne	r3, #1
 10422 162c 88F81130 		strb	r3, [r8, #17]
 10423              	.LVL856:
 652:src/keys.c    **** }
 10424              		.loc 1 652 15 view .LVU3257
 10425              	.LBE1001:
 10426              	.LBE1000:
2768:src/keys.c    **** 	case K_DOWN:
 10427              		.loc 1 2768 2 is_stmt 1 view .LVU3258
2768:src/keys.c    **** 	case K_DOWN:
 10428              		.loc 1 2768 2 is_stmt 0 view .LVU3259
 10429              	.LBE1004:
 10430              	.LBE1158:
 10431              	.LBE1245:
 10432              	.LBE1317:
3199:src/keys.c    ****     case STATE_SST:
 10433              		.loc 1 3199 5 is_stmt 1 view .LVU3260
 10434              	.LBB1318:
 10435              	.LBB1246:
 10436              	.LBB1159:
 10437              	.LBB1005:
2819:src/keys.c    **** 	}
 10438              		.loc 1 2819 10 is_stmt 0 view .LVU3261
 10439 1630 4FF0330B 		mov	fp, #51
 10440 1634 FEF73DBD 		b	.L616
 10441              	.LVL857:
ARM GAS  /tmp/ccsJYix0.s 			page 295


 10442              	.L1184:
2819:src/keys.c    **** 	}
 10443              		.loc 1 2819 10 view .LVU3262
 10444              	.LBE1005:
 10445              	.LBE1159:
2974:src/keys.c    **** 		if (shift == SHIFT_H)
 10446              		.loc 1 2974 4 is_stmt 1 view .LVU3263
 10447              	.LBB1160:
 10448              	.LBI932:
 848:src/keys.c    **** 
 10449              		.loc 1 848 12 view .LVU3264
 10450              	.LBB958:
 851:src/keys.c    **** 		// Row 1
 10451              		.loc 1 851 2 view .LVU3265
 902:src/keys.c    **** 		STATE_UNFINISHED,
 10452              		.loc 1 902 2 view .LVU3266
 909:src/keys.c    **** 	int lc = keycode_to_linear(c);
 10453              		.loc 1 909 2 view .LVU3267
 10454              	.LBB937:
 10455              	.LBI937:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10456              		.loc 1 104 13 view .LVU3268
 10457              	.LBE937:
 10458              	.LBE958:
 10459              	.LBE1160:
 10460              	.LBE1246:
 10461              	.LBE1318:
 105:src/keys.c    **** }
 10462              		.loc 1 105 2 view .LVU3269
 10463              	.LBB1319:
 10464              	.LBB1247:
 10465              	.LBB1161:
 10466              	.LBB959:
 10467              	.LBB946:
 10468              	.LBB938:
 10469              	.LBI938:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10470              		.loc 1 94 20 view .LVU3270
 10471              	.LBB939:
  95:src/keys.c    **** 	State2.shifts = shift;
 10472              		.loc 1 95 2 view .LVU3271
 10473              	.LBB940:
 10474              	.LBI940:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10475              		.loc 1 86 13 view .LVU3272
 10476              	.LBB941:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10477              		.loc 1 87 2 view .LVU3273
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10478              		.loc 1 87 18 is_stmt 0 view .LVU3274
 10479 1638 FFF7FEFF 		bl	shift_down
 10480              	.LVL858:
  88:src/keys.c    **** }
 10481              		.loc 1 88 2 is_stmt 1 view .LVU3275
  88:src/keys.c    **** }
 10482              		.loc 1 88 52 is_stmt 0 view .LVU3276
 10483 163c 0346     		mov	r3, r0
ARM GAS  /tmp/ccsJYix0.s 			page 296


 10484 163e 08B9     		cbnz	r0, .L844
 10485 1640 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10486              	.L844:
 10487              	.LVL859:
  88:src/keys.c    **** }
 10488              		.loc 1 88 52 view .LVU3277
 10489              	.LBE941:
 10490              	.LBE940:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10491              		.loc 1 96 2 is_stmt 1 view .LVU3278
 10492              	.LBE939:
 10493              	.LBE938:
 10494              	.LBE946:
 10495              	.LBB947:
 10496              	.LBB948:
 148:src/keys.c    **** }
 10497              		.loc 1 148 23 is_stmt 0 view .LVU3279
 10498 1644 1F4A     		ldr	r2, .L1265+4
 10499              	.LBE948:
 10500              	.LBE947:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10501              		.loc 1 911 21 view .LVU3280
 10502 1646 DFF894C0 		ldr	ip, .L1265+28
 10503              	.LBB951:
 10504              	.LBB949:
 148:src/keys.c    **** }
 10505              		.loc 1 148 23 view .LVU3281
 10506 164a 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 10507              	.LBE949:
 10508              	.LBE951:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10509              		.loc 1 911 21 view .LVU3282
 10510 164c 4200     		lsls	r2, r0, #1
 10511 164e 022B     		cmp	r3, #2
 10512 1650 08BF     		it	eq
 10513 1652 0132     		addeq	r2, r2, #1
 10514              	.LBB952:
 10515              	.LBB944:
 10516              	.LBB942:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10517              		.loc 1 96 16 view .LVU3283
 10518 1654 0021     		movs	r1, #0
 10519              	.LBE942:
 10520              	.LBE944:
 10521              	.LBE952:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10522              		.loc 1 911 21 view .LVU3284
 10523 1656 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10524              	.LBB953:
 10525              	.LBB945:
 10526              	.LBB943:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10527              		.loc 1 96 16 view .LVU3285
 10528 165a 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 10529              		.loc 1 98 2 is_stmt 1 view .LVU3286
 10530              	.LVL860:
ARM GAS  /tmp/ccsJYix0.s 			page 297


  98:src/keys.c    **** }
 10531              		.loc 1 98 2 is_stmt 0 view .LVU3287
 10532              	.LBE943:
 10533              	.LBE945:
 10534              	.LBE953:
 910:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10535              		.loc 1 910 2 is_stmt 1 view .LVU3288
 10536              	.LBB954:
 10537              	.LBI947:
 136:src/keys.c    **** {
 10538              		.loc 1 136 12 view .LVU3289
 10539              	.LBB950:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10540              		.loc 1 138 2 view .LVU3290
 148:src/keys.c    **** }
 10541              		.loc 1 148 2 view .LVU3291
 148:src/keys.c    **** }
 10542              		.loc 1 148 2 is_stmt 0 view .LVU3292
 10543              	.LBE950:
 10544              	.LBE954:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10545              		.loc 1 911 2 is_stmt 1 view .LVU3293
 912:src/keys.c    **** 	if (no_int)
 10546              		.loc 1 912 2 view .LVU3294
 10547 165e 0BF4704A 		and	r10, fp, #61440
 10548              	.LVL861:
 913:src/keys.c    **** 		op &= ~NO_INT;
 10549              		.loc 1 913 2 view .LVU3295
 913:src/keys.c    **** 		op &= ~NO_INT;
 10550              		.loc 1 913 5 is_stmt 0 view .LVU3296
 10551 1662 BAF5704F 		cmp	r10, #61440
 10552 1666 00F08281 		beq	.L1236
 916:src/keys.c    **** 	case K00:
 10553              		.loc 1 916 2 is_stmt 1 view .LVU3297
 10554 166a 282C     		cmp	r4, #40
 10555 166c 22D8     		bhi	.L867
 10556 166e DFE804F0 		tbb	[pc, r4]
 10557              	.L935:
 10558 1672 5D       		.byte	(.L856-.L935)/2
 10559 1673 9E       		.byte	(.L854-.L935)/2
 10560 1674 21       		.byte	(.L867-.L935)/2
 10561 1675 9E       		.byte	(.L854-.L935)/2
 10562 1676 21       		.byte	(.L867-.L935)/2
 10563 1677 21       		.byte	(.L867-.L935)/2
 10564 1678 21       		.byte	(.L867-.L935)/2
 10565 1679 21       		.byte	(.L867-.L935)/2
 10566 167a 21       		.byte	(.L867-.L935)/2
 10567 167b 21       		.byte	(.L867-.L935)/2
 10568 167c 21       		.byte	(.L867-.L935)/2
 10569 167d 21       		.byte	(.L867-.L935)/2
 10570 167e 89       		.byte	(.L853-.L935)/2
 10571 167f 21       		.byte	(.L867-.L935)/2
 10572 1680 21       		.byte	(.L867-.L935)/2
 10573 1681 21       		.byte	(.L867-.L935)/2
 10574 1682 21       		.byte	(.L867-.L935)/2
 10575 1683 21       		.byte	(.L867-.L935)/2
 10576 1684 6F       		.byte	(.L852-.L935)/2
ARM GAS  /tmp/ccsJYix0.s 			page 298


 10577 1685 15       		.byte	(.L851-.L935)/2
 10578 1686 21       		.byte	(.L867-.L935)/2
 10579 1687 21       		.byte	(.L867-.L935)/2
 10580 1688 21       		.byte	(.L867-.L935)/2
 10581 1689 21       		.byte	(.L867-.L935)/2
 10582 168a 21       		.byte	(.L867-.L935)/2
 10583 168b 21       		.byte	(.L867-.L935)/2
 10584 168c 21       		.byte	(.L867-.L935)/2
 10585 168d 21       		.byte	(.L867-.L935)/2
 10586 168e 21       		.byte	(.L867-.L935)/2
 10587 168f 21       		.byte	(.L867-.L935)/2
 10588 1690 42       		.byte	(.L850-.L935)/2
 10589 1691 37       		.byte	(.L849-.L935)/2
 10590 1692 49       		.byte	(.L847-.L935)/2
 10591 1693 49       		.byte	(.L847-.L935)/2
 10592 1694 21       		.byte	(.L867-.L935)/2
 10593 1695 21       		.byte	(.L867-.L935)/2
 10594 1696 21       		.byte	(.L867-.L935)/2
 10595 1697 21       		.byte	(.L867-.L935)/2
 10596 1698 21       		.byte	(.L867-.L935)/2
 10597 1699 49       		.byte	(.L847-.L935)/2
 10598 169a 49       		.byte	(.L847-.L935)/2
 10599 169b 00       		.p2align 1
 10600              	.L851:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10601              		.loc 1 961 4 view .LVU3298
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10602              		.loc 1 961 7 is_stmt 0 view .LVU3299
 10603 169c 022B     		cmp	r3, #2
 10604 169e 00F00B82 		beq	.L1237
 10605              	.LVL862:
 10606              	.L858:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10607              		.loc 1 1000 2 is_stmt 1 view .LVU3300
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10608              		.loc 1 1000 5 is_stmt 0 view .LVU3301
 10609 16a2 BAF5704F 		cmp	r10, #61440
 10610 16a6 05D1     		bne	.L867
 10611              	.L846:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10612              		.loc 1 1000 13 view .LVU3302
 10613 16a8 0A4B     		ldr	r3, .L1265+20
 10614 16aa 1B68     		ldr	r3, [r3]
 10615 16ac 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10616 16b0 D907     		lsls	r1, r3, #31
 10617 16b2 36D4     		bmi	.L950
 10618              	.LVL863:
 10619              	.L867:
1003:src/keys.c    **** #undef NO_INT
 10620              		.loc 1 1003 2 is_stmt 1 view .LVU3303
 10621              	.LBB955:
 10622              	.LBI934:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10623              		.loc 1 624 12 view .LVU3304
 10624              	.LBB936:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10625              		.loc 1 625 2 view .LVU3305
ARM GAS  /tmp/ccsJYix0.s 			page 299


 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10626              		.loc 1 625 6 is_stmt 0 view .LVU3306
 10627 16b4 4FEA2B23 		asr	r3, fp, #8
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10628              		.loc 1 625 5 view .LVU3307
 10629 16b8 012B     		cmp	r3, #1
 10630 16ba 7EF4C1AE 		bne	.L646
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10631              		.loc 1 625 5 view .LVU3308
 10632 16be 76E4     		b	.L944
 10633              	.L1266:
 10634              		.align	2
 10635              	.L1265:
 10636 16c0 00000000 		.word	.LANCHOR1
 10637 16c4 00000000 		.word	.LANCHOR18
 10638 16c8 00000000 		.word	.LANCHOR17
 10639 16cc 00000000 		.word	.LANCHOR11
 10640 16d0 00000000 		.word	.LANCHOR21
 10641 16d4 00000000 		.word	main_ram
 10642 16d8 00000000 		.word	.LANCHOR9
 10643 16dc 00000000 		.word	.LANCHOR19
 10644              	.LVL864:
 10645              	.L849:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10646              		.loc 1 625 5 view .LVU3309
 10647              	.LBE936:
 10648              	.LBE955:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10649              		.loc 1 972 3 is_stmt 1 view .LVU3310
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10650              		.loc 1 972 7 is_stmt 0 view .LVU3311
 10651 16e0 FFF7FEFF 		bl	is_bad_cmdline
 10652              	.LVL865:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10653              		.loc 1 972 6 view .LVU3312
 10654 16e4 0446     		mov	r4, r0
 10655              	.LVL866:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10656              		.loc 1 972 6 view .LVU3313
 10657 16e6 0028     		cmp	r0, #0
 10658 16e8 00F03483 		beq	.L863
 10659 16ec 3268     		ldr	r2, [r6]
 973:src/keys.c    **** 		process_cmdline_set_lift();
 10660              		.loc 1 973 11 view .LVU3314
 10661 16ee 4FF0330B 		mov	fp, #51
 10662              	.LVL867:
 973:src/keys.c    **** 		process_cmdline_set_lift();
 10663              		.loc 1 973 11 view .LVU3315
 10664 16f2 FEF7DEBC 		b	.L616
 10665              	.LVL868:
 10666              	.L850:
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10667              		.loc 1 980 3 is_stmt 1 view .LVU3316
 10668 16f6 0093     		str	r3, [sp]
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10669              		.loc 1 980 18 is_stmt 0 view .LVU3317
 10670 16f8 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccsJYix0.s 			page 300


 10671              	.LVL869:
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10672              		.loc 1 980 6 view .LVU3318
 10673 16fc 009B     		ldr	r3, [sp]
 10674 16fe 0028     		cmp	r0, #0
 10675 1700 40F0CC81 		bne	.L1238
 10676              	.L847:
 989:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10677              		.loc 1 989 3 is_stmt 1 view .LVU3319
 989:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10678              		.loc 1 989 6 is_stmt 0 view .LVU3320
 10679 1704 BBF59C7F 		cmp	fp, #312
 10680 1708 40F02E83 		bne	.L1239
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10681              		.loc 1 1000 2 is_stmt 1 view .LVU3321
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10682              		.loc 1 1000 5 is_stmt 0 view .LVU3322
 10683 170c BAF5704F 		cmp	r10, #61440
 10684 1710 7FF44DAC 		bne	.L944
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10685              		.loc 1 1000 13 view .LVU3323
 10686 1714 DD4B     		ldr	r3, .L1267
 10687 1716 1B68     		ldr	r3, [r3]
 10688 1718 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10689 171c DB07     		lsls	r3, r3, #31
 10690 171e 7FF546AC 		bpl	.L944
 10691              	.L950:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10692              		.loc 1 1000 13 view .LVU3324
 10693 1722 3268     		ldr	r2, [r6]
1001:src/keys.c    **** 
 10694              		.loc 1 1001 10 view .LVU3325
 10695 1724 4FF0330B 		mov	fp, #51
 10696              	.LVL870:
1001:src/keys.c    **** 
 10697              		.loc 1 1001 10 view .LVU3326
 10698 1728 FEF7C3BC 		b	.L616
 10699              	.LVL871:
 10700              	.L856:
 918:src/keys.c    **** 	    State2.hyp = 1;
 10701              		.loc 1 918 4 is_stmt 1 view .LVU3327
 918:src/keys.c    **** 	    State2.hyp = 1;
 10702              		.loc 1 918 8 is_stmt 0 view .LVU3328
 10703 172c D74A     		ldr	r2, .L1267
 10704 172e 1268     		ldr	r2, [r2]
 10705 1730 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 918:src/keys.c    **** 	    State2.hyp = 1;
 10706              		.loc 1 918 7 view .LVU3329
 10707 1734 D407     		lsls	r4, r2, #31
 10708 1736 40F19781 		bpl	.L1240
 10709              	.L1151:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10710              		.loc 1 937 20 view .LVU3330
 10711 173a 012B     		cmp	r3, #1
 10712 173c 00F08C81 		beq	.L1241
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10713              		.loc 1 1000 2 is_stmt 1 view .LVU3331
ARM GAS  /tmp/ccsJYix0.s 			page 301


1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10714              		.loc 1 1000 5 is_stmt 0 view .LVU3332
 10715 1740 BAF5704F 		cmp	r10, #61440
 10716 1744 B6D1     		bne	.L867
 10717 1746 3268     		ldr	r2, [r6]
1001:src/keys.c    **** 
 10718              		.loc 1 1001 10 view .LVU3333
 10719 1748 4FF0330B 		mov	fp, #51
 10720              	.LVL872:
1001:src/keys.c    **** 
 10721              		.loc 1 1001 10 view .LVU3334
 10722 174c FEF7B1BC 		b	.L616
 10723              	.LVL873:
 10724              	.L852:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10725              		.loc 1 966 4 is_stmt 1 view .LVU3335
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10726              		.loc 1 966 7 is_stmt 0 view .LVU3336
 10727 1750 022B     		cmp	r3, #2
 10728 1752 A6D1     		bne	.L858
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10729              		.loc 1 966 27 view .LVU3337
 10730 1754 CD4B     		ldr	r3, .L1267
 10731              	.LVL874:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10732              		.loc 1 966 27 view .LVU3338
 10733 1756 1B68     		ldr	r3, [r3]
 10734 1758 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10735 175c DB07     		lsls	r3, r3, #31
 10736 175e A0D5     		bpl	.L858
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10737              		.loc 1 966 45 view .LVU3339
 10738 1760 0E20     		movs	r0, #14
 10739              	.LVL875:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10740              		.loc 1 966 45 view .LVU3340
 10741 1762 FFF7FEFF 		bl	intltr
 10742              	.LVL876:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10743              		.loc 1 966 42 view .LVU3341
 10744 1766 0028     		cmp	r0, #0
 10745 1768 9BD0     		beq	.L858
 10746              	.LVL877:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10747              		.loc 1 966 42 view .LVU3342
 10748              	.LBE959:
 10749              	.LBE1161:
 10750              	.LBE1247:
 10751              	.LBE1319:
3235:src/keys.c    **** 	NonProgrammable = 0;
 10752              		.loc 1 3235 7 is_stmt 1 view .LVU3343
3235:src/keys.c    **** 	NonProgrammable = 0;
 10753              		.loc 1 3235 11 is_stmt 0 view .LVU3344
 10754 176a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3235:src/keys.c    **** 	NonProgrammable = 0;
 10755              		.loc 1 3235 10 view .LVU3345
 10756 176e 5A06     		lsls	r2, r3, #25
ARM GAS  /tmp/ccsJYix0.s 			page 302


 10757 1770 40F1BB81 		bpl	.L982
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10758              		.loc 1 3236 2 is_stmt 1 view .LVU3346
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10759              		.loc 1 3236 18 is_stmt 0 view .LVU3347
 10760 1774 C64B     		ldr	r3, .L1267+4
 10761 1776 0022     		movs	r2, #0
 10762              	.LBB1320:
 10763              	.LBB1248:
 10764              	.LBB1162:
 10765              	.LBB960:
 967:src/keys.c    **** 	  }
 10766              		.loc 1 967 13 view .LVU3348
 10767 1778 4FF0130B 		mov	fp, #19
 10768              	.LBE960:
 10769              	.LBE1162:
 10770              	.LBE1248:
 10771              	.LBE1320:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10772              		.loc 1 3236 18 view .LVU3349
 10773 177c 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10774              		.loc 1 3237 2 is_stmt 1 view .LVU3350
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10775              		.loc 1 3237 32 is_stmt 0 view .LVU3351
 10776 177e 5846     		mov	r0, fp
 10777 1780 FFF722B8 		b	.L925
 10778              	.LVL878:
 10779              	.L853:
 10780              	.LBB1321:
 10781              	.LBB1249:
 10782              	.LBB1163:
 10783              	.LBB961:
 948:src/keys.c    **** 			if (is_bad_cmdline())
 10784              		.loc 1 948 3 is_stmt 1 view .LVU3352
 948:src/keys.c    **** 			if (is_bad_cmdline())
 10785              		.loc 1 948 6 is_stmt 0 view .LVU3353
 10786 1784 012B     		cmp	r3, #1
 10787 1786 8CD1     		bne	.L858
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10788              		.loc 1 949 4 is_stmt 1 view .LVU3354
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10789              		.loc 1 949 8 is_stmt 0 view .LVU3355
 10790 1788 FFF7FEFF 		bl	is_bad_cmdline
 10791              	.LVL879:
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10792              		.loc 1 949 7 view .LVU3356
 10793 178c 0028     		cmp	r0, #0
 10794 178e 40F0B681 		bne	.L1242
 951:src/keys.c    **** 			State2.alphas = 1;
 10795              		.loc 1 951 4 is_stmt 1 view .LVU3357
 10796 1792 FFF7FEFF 		bl	process_cmdline_set_lift
 10797              	.LVL880:
 952:src/keys.c    **** #ifdef DM42
 10798              		.loc 1 952 4 view .LVU3358
 952:src/keys.c    **** #ifdef DM42
 10799              		.loc 1 952 18 is_stmt 0 view .LVU3359
ARM GAS  /tmp/ccsJYix0.s 			page 303


 10800 1796 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 954:src/keys.c    **** 			display_current_menu();
 10801              		.loc 1 954 4 view .LVU3360
 10802 179a 1020     		movs	r0, #16
 952:src/keys.c    **** #ifdef DM42
 10803              		.loc 1 952 18 view .LVU3361
 10804 179c 43F00803 		orr	r3, r3, #8
 10805 17a0 88F81630 		strb	r3, [r8, #22]
 954:src/keys.c    **** 			display_current_menu();
 10806              		.loc 1 954 4 is_stmt 1 view .LVU3362
 10807 17a4 FFF7FEFF 		bl	set_menu
 10808              	.LVL881:
 955:src/keys.c    **** #endif
 10809              		.loc 1 955 4 view .LVU3363
 10810 17a8 FFF7FEFF 		bl	display_current_menu
 10811              	.LVL882:
 10812 17ac 79E7     		b	.L858
 10813              	.LVL883:
 10814              	.L854:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10815              		.loc 1 937 4 view .LVU3364
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10816              		.loc 1 937 8 is_stmt 0 view .LVU3365
 10817 17ae B74A     		ldr	r2, .L1267
 10818 17b0 1268     		ldr	r2, [r2]
 10819 17b2 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10820              		.loc 1 937 7 view .LVU3366
 10821 17b6 D107     		lsls	r1, r2, #31
 10822 17b8 7FF573AF 		bpl	.L858
 10823 17bc BDE7     		b	.L1151
 10824              	.LVL884:
 10825              	.L733:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10826              		.loc 1 937 7 view .LVU3367
 10827              	.LBE961:
 10828              	.LBE1163:
 10829              	.LBB1164:
 10830              	.LBB879:
2462:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10831              		.loc 1 2462 3 is_stmt 1 view .LVU3368
2462:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10832              		.loc 1 2462 6 is_stmt 0 view .LVU3369
 10833 17be 0129     		cmp	r1, #1
 10834 17c0 00F00D82 		beq	.L1243
2465:src/keys.c    **** 		return STATE_UNFINISHED;
 10835              		.loc 1 2465 4 is_stmt 1 view .LVU3370
 10836              	.LBB871:
 10837              	.LBI871:
2419:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10838              		.loc 1 2419 13 view .LVU3371
 10839              	.LBB872:
2421:src/keys.c    **** 	if (! State2.alphas )
 10840              		.loc 1 2421 2 view .LVU3372
2421:src/keys.c    **** 	if (! State2.alphas )
 10841              		.loc 1 2421 15 is_stmt 0 view .LVU3373
 10842 17c4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccsJYix0.s 			page 304


2422:src/keys.c    **** 		State2.alphashift = 0;
 10843              		.loc 1 2422 6 view .LVU3374
 10844 17c8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2421:src/keys.c    **** 	if (! State2.alphas )
 10845              		.loc 1 2421 15 view .LVU3375
 10846 17cc 60F3C302 		bfi	r2, r0, #3, #1
 10847 17d0 88F81520 		strb	r2, [r8, #21]
2422:src/keys.c    **** 		State2.alphashift = 0;
 10848              		.loc 1 2422 2 is_stmt 1 view .LVU3376
2422:src/keys.c    **** 		State2.alphashift = 0;
 10849              		.loc 1 2422 5 is_stmt 0 view .LVU3377
 10850 17d4 13F00802 		ands	r2, r3, #8
2423:src/keys.c    **** }
 10851              		.loc 1 2423 3 is_stmt 1 view .LVU3378
2423:src/keys.c    **** }
 10852              		.loc 1 2423 21 is_stmt 0 view .LVU3379
 10853 17d8 04BF     		itt	eq
 10854 17da 62F30413 		bfieq	r3, r2, #4, #1
 10855 17de 88F81630 		strbeq	r3, [r8, #22]
 10856 17e2 3268     		ldr	r2, [r6]
 10857              	.LBE872:
 10858              	.LBE871:
2466:src/keys.c    **** 
 10859              		.loc 1 2466 10 view .LVU3380
 10860 17e4 4FF0330B 		mov	fp, #51
 10861 17e8 FEF763BC 		b	.L616
 10862              	.L732:
2452:src/keys.c    **** 			if (State2.numdigit == 0)
 10863              		.loc 1 2452 3 is_stmt 1 view .LVU3381
2452:src/keys.c    **** 			if (State2.numdigit == 0)
 10864              		.loc 1 2452 6 is_stmt 0 view .LVU3382
 10865 17ec 0329     		cmp	r1, #3
 10866 17ee 3FF4DAAA 		beq	.L738
2453:src/keys.c    **** 				reset_multi();
 10867              		.loc 1 2453 4 is_stmt 1 view .LVU3383
2453:src/keys.c    **** 				reset_multi();
 10868              		.loc 1 2453 14 is_stmt 0 view .LVU3384
 10869 17f2 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2453:src/keys.c    **** 				reset_multi();
 10870              		.loc 1 2453 7 view .LVU3385
 10871 17f6 002A     		cmp	r2, #0
 10872 17f8 40F09A82 		bne	.L739
2454:src/keys.c    **** 			else
 10873              		.loc 1 2454 5 is_stmt 1 view .LVU3386
 10874              	.LBB873:
 10875              	.LBI873:
2419:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10876              		.loc 1 2419 13 view .LVU3387
 10877              	.LBB874:
2421:src/keys.c    **** 	if (! State2.alphas )
 10878              		.loc 1 2421 2 view .LVU3388
2422:src/keys.c    **** 		State2.alphashift = 0;
 10879              		.loc 1 2422 6 is_stmt 0 view .LVU3389
 10880 17fc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2421:src/keys.c    **** 	if (! State2.alphas )
 10881              		.loc 1 2421 15 view .LVU3390
 10882 1800 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccsJYix0.s 			page 305


 10883              	.LVL885:
2421:src/keys.c    **** 	if (! State2.alphas )
 10884              		.loc 1 2421 15 view .LVU3391
 10885 1804 62F3C301 		bfi	r1, r2, #3, #1
2422:src/keys.c    **** 		State2.alphashift = 0;
 10886              		.loc 1 2422 5 view .LVU3392
 10887 1808 13F00802 		ands	r2, r3, #8
2423:src/keys.c    **** }
 10888              		.loc 1 2423 21 view .LVU3393
 10889 180c 08BF     		it	eq
 10890 180e 62F30413 		bfieq	r3, r2, #4, #1
2421:src/keys.c    **** 	if (! State2.alphas )
 10891              		.loc 1 2421 15 view .LVU3394
 10892 1812 88F81510 		strb	r1, [r8, #21]
2422:src/keys.c    **** 		State2.alphashift = 0;
 10893              		.loc 1 2422 2 is_stmt 1 view .LVU3395
2423:src/keys.c    **** }
 10894              		.loc 1 2423 3 view .LVU3396
2423:src/keys.c    **** }
 10895              		.loc 1 2423 21 is_stmt 0 view .LVU3397
 10896 1816 08BF     		it	eq
 10897 1818 88F81630 		strbeq	r3, [r8, #22]
 10898 181c 3268     		ldr	r2, [r6]
 10899              	.LBE874:
 10900              	.LBE873:
2457:src/keys.c    **** 		}
 10901              		.loc 1 2457 11 view .LVU3398
 10902 181e 4FF0330B 		mov	fp, #51
 10903 1822 FEF746BC 		b	.L616
 10904              	.LVL886:
 10905              	.L1216:
2478:src/keys.c    **** 		State2.numdigit = 1;
 10906              		.loc 1 2478 3 is_stmt 1 view .LVU3399
2479:src/keys.c    **** 		return STATE_UNFINISHED;
 10907              		.loc 1 2479 19 is_stmt 0 view .LVU3400
 10908 1826 0123     		movs	r3, #1
 10909 1828 3268     		ldr	r2, [r6]
2478:src/keys.c    **** 		State2.numdigit = 1;
 10910              		.loc 1 2478 17 view .LVU3401
 10911 182a A8F80800 		strh	r0, [r8, #8]	@ movhi
2479:src/keys.c    **** 		return STATE_UNFINISHED;
 10912              		.loc 1 2479 3 is_stmt 1 view .LVU3402
2479:src/keys.c    **** 		return STATE_UNFINISHED;
 10913              		.loc 1 2479 19 is_stmt 0 view .LVU3403
 10914 182e 88F80B30 		strb	r3, [r8, #11]
2480:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10915              		.loc 1 2480 3 is_stmt 1 view .LVU3404
2480:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10916              		.loc 1 2480 10 is_stmt 0 view .LVU3405
 10917 1832 4FF0330B 		mov	fp, #51
 10918 1836 FEF73CBC 		b	.L616
 10919              	.LVL887:
 10920              	.L1223:
2480:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10921              		.loc 1 2480 10 view .LVU3406
 10922              	.LBE879:
 10923              	.LBE1164:
ARM GAS  /tmp/ccsJYix0.s 			page 306


 10924              	.LBB1165:
 10925              	.LBB1006:
 10926              	.LBB1002:
2753:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10927              		.loc 1 2753 3 is_stmt 1 view .LVU3407
2753:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10928              		.loc 1 2753 19 is_stmt 0 view .LVU3408
 10929 183a B8F80810 		ldrh	r1, [r8, #8]
2753:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10930              		.loc 1 2753 27 view .LVU3409
 10931 183e 0A23     		movs	r3, #10
2753:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10932              		.loc 1 2753 32 view .LVU3410
 10933 1840 03FB01B2 		mla	r2, r3, r1, fp
2753:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10934              		.loc 1 2753 37 view .LVU3411
 10935 1844 6424     		movs	r4, #100
 10936 1846 B2FBF4F3 		udiv	r3, r2, r4
 10937 184a 04FB1323 		mls	r3, r4, r3, r2
 10938              	.LVL888:
2754:src/keys.c    **** 			dv = n;
 10939              		.loc 1 2754 3 is_stmt 1 view .LVU3412
2754:src/keys.c    **** 			dv = n;
 10940              		.loc 1 2754 6 is_stmt 0 view .LVU3413
 10941 184e 5345     		cmp	r3, r10
 10942 1850 09DA     		bge	.L780
2754:src/keys.c    **** 			dv = n;
 10943              		.loc 1 2754 21 view .LVU3414
 10944 1852 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2754:src/keys.c    **** 			dv = n;
 10945              		.loc 1 2754 17 view .LVU3415
 10946 1856 D407     		lsls	r4, r2, #31
 10947 1858 3FF5CBAC 		bmi	.L1146
2754:src/keys.c    **** 			dv = n;
 10948              		.loc 1 2754 36 view .LVU3416
 10949 185c 8842     		cmp	r0, r1
 10950 185e 02DD     		ble	.L780
2754:src/keys.c    **** 			dv = n;
 10951              		.loc 1 2754 63 view .LVU3417
 10952 1860 9842     		cmp	r0, r3
 10953 1862 3FF7C6AC 		bgt	.L1146
 10954              	.L780:
2755:src/keys.c    **** 		State2.digval = dv;
 10955              		.loc 1 2755 4 is_stmt 1 view .LVU3418
2755:src/keys.c    **** 		State2.digval = dv;
 10956              		.loc 1 2755 7 is_stmt 0 view .LVU3419
 10957 1866 5B46     		mov	r3, fp
 10958              	.LVL889:
2756:src/keys.c    **** 		goto reset_window;
 10959              		.loc 1 2756 3 is_stmt 1 view .LVU3420
 10960 1868 C3E4     		b	.L1146
 10961              	.LVL890:
 10962              	.L1225:
2756:src/keys.c    **** 		goto reset_window;
 10963              		.loc 1 2756 3 is_stmt 0 view .LVU3421
 10964              	.LBE1002:
2764:src/keys.c    **** 		goto reset_window;
ARM GAS  /tmp/ccsJYix0.s 			page 307


 10965              		.loc 1 2764 3 is_stmt 1 view .LVU3422
2764:src/keys.c    **** 		goto reset_window;
 10966              		.loc 1 2764 17 is_stmt 0 view .LVU3423
 10967 186a A8F808B0 		strh	fp, [r8, #8]	@ movhi
2765:src/keys.c    **** 	}
 10968              		.loc 1 2765 3 is_stmt 1 view .LVU3424
 10969 186e C2E4     		b	.L778
 10970              	.LVL891:
 10971              	.L1202:
2765:src/keys.c    **** 	}
 10972              		.loc 1 2765 3 is_stmt 0 view .LVU3425
 10973              	.LBE1006:
 10974              	.LBE1165:
 10975              	.LBB1166:
 10976              	.LBB756:
1375:src/keys.c    **** 		if (rawpc == 1)
 10977              		.loc 1 1375 3 is_stmt 1 view .LVU3426
1375:src/keys.c    **** 		if (rawpc == 1)
 10978              		.loc 1 1375 11 is_stmt 0 view .LVU3427
 10979 1870 DFF81892 		ldr	r9, .L1267
 10980 1874 D9F80030 		ldr	r3, [r9]
 10981              	.LVL892:
1375:src/keys.c    **** 		if (rawpc == 1)
 10982              		.loc 1 1375 9 view .LVU3428
 10983 1878 B3F8E007 		ldrh	r0, [r3, #2016]
 10984              	.LVL893:
1376:src/keys.c    **** 			rawpc = 0;
 10985              		.loc 1 1376 3 is_stmt 1 view .LVU3429
1377:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10986              		.loc 1 1377 10 is_stmt 0 view .LVU3430
 10987 187c 0128     		cmp	r0, #1
 10988              	.LVL894:
1378:src/keys.c    **** 		update_program_bounds(1);
 10989              		.loc 1 1378 3 is_stmt 1 view .LVU3431
 10990 187e 08BF     		it	eq
 10991 1880 0020     		moveq	r0, #0
 10992              	.LVL895:
1378:src/keys.c    **** 		update_program_bounds(1);
 10993              		.loc 1 1378 3 is_stmt 0 view .LVU3432
 10994 1882 0021     		movs	r1, #0
 10995 1884 FFF7FEFF 		bl	do_dec
 10996              	.LVL896:
1378:src/keys.c    **** 		update_program_bounds(1);
 10997              		.loc 1 1378 3 view .LVU3433
 10998 1888 FFF7FEFF 		bl	set_pc
 10999              	.LVL897:
1379:src/keys.c    **** 		rawpc = ProgBegin;
 11000              		.loc 1 1379 3 is_stmt 1 view .LVU3434
 11001 188c 0120     		movs	r0, #1
 11002 188e FFF7FEFF 		bl	update_program_bounds
 11003              	.LVL898:
1380:src/keys.c    **** 		goto fin;
 11004              		.loc 1 1380 3 view .LVU3435
1380:src/keys.c    **** 		goto fin;
 11005              		.loc 1 1380 11 is_stmt 0 view .LVU3436
 11006 1892 D9F80030 		ldr	r3, [r9]
1380:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccsJYix0.s 			page 308


 11007              		.loc 1 1380 9 view .LVU3437
 11008 1896 B3F8EC07 		ldrh	r0, [r3, #2028]
 11009              	.LVL899:
1381:src/keys.c    **** 	}
 11010              		.loc 1 1381 3 is_stmt 1 view .LVU3438
 11011 189a FFF73EBA 		b	.L658
 11012              	.LVL900:
 11013              	.L963:
1381:src/keys.c    **** 	}
 11014              		.loc 1 1381 3 is_stmt 0 view .LVU3439
 11015              	.LBE756:
 11016              	.LBE1166:
 11017              	.LBB1167:
 11018              	.LBB669:
 11019              	.LBB663:
 304:src/keys.c    ****     }
 11020              		.loc 1 304 14 view .LVU3440
 11021 189e 4FF0160B 		mov	fp, #22
 11022 18a2 FFF7EFB9 		b	.L712
 11023              	.LVL901:
 11024              	.L1231:
 304:src/keys.c    ****     }
 11025              		.loc 1 304 14 view .LVU3441
 11026 18a6 3268     		ldr	r2, [r6]
 11027 18a8 FEF703BC 		b	.L616
 11028              	.LVL902:
 11029              	.L899:
 304:src/keys.c    ****     }
 11030              		.loc 1 304 14 view .LVU3442
 11031              	.LBE663:
 11032              	.LBE669:
 11033              	.LBE1167:
 11034              	.LBB1168:
 11035              	.LBB686:
 774:src/keys.c    **** 	case K03:
 11036              		.loc 1 774 3 is_stmt 1 view .LVU3443
 774:src/keys.c    **** 	case K03:
 11037              		.loc 1 774 10 is_stmt 0 view .LVU3444
 11038 18ac 5146     		mov	r1, r10
 11039 18ae 0120     		movs	r0, #1
 11040 18b0 FFF7FEFF 		bl	check_f_key
 11041              	.LVL903:
 11042 18b4 8346     		mov	fp, r0
 11043 18b6 FEF7C3BD 		b	.L646
 11044              	.L898:
 772:src/keys.c    **** 	case K01:
 11045              		.loc 1 772 3 is_stmt 1 view .LVU3445
 772:src/keys.c    **** 	case K01:
 11046              		.loc 1 772 10 is_stmt 0 view .LVU3446
 11047 18ba 5146     		mov	r1, r10
 11048 18bc 0020     		movs	r0, #0
 11049 18be FFF7FEFF 		bl	check_f_key
 11050              	.LVL904:
 11051 18c2 8346     		mov	fp, r0
 11052 18c4 FEF7BCBD 		b	.L646
 11053              	.LVL905:
 11054              	.L1219:
ARM GAS  /tmp/ccsJYix0.s 			page 309


 772:src/keys.c    **** 	case K01:
 11055              		.loc 1 772 10 view .LVU3447
 11056              	.LBE686:
 11057              	.LBE1168:
 11058              	.LBB1169:
 11059              	.LBB928:
2614:src/keys.c    **** 	const int direct = State2.runmode;
 11060              		.loc 1 2614 37 view .LVU3448
 11061 18c8 5046     		mov	r0, r10
 11062 18ca FFF7FEFF 		bl	getprog
 11063              	.LVL906:
2614:src/keys.c    **** 	const int direct = State2.runmode;
 11064              		.loc 1 2614 63 view .LVU3449
 11065 18ce 20F47062 		bic	r2, r0, #3840
 11066 18d2 FFF727BB 		b	.L747
 11067              	.LVL907:
 11068              	.L718:
2614:src/keys.c    **** 	const int direct = State2.runmode;
 11069              		.loc 1 2614 63 view .LVU3450
 11070 18d6 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 11071              	.LBE928:
 11072              	.LBE1169:
 11073              	.LBB1170:
 11074              	.LBB670:
 11075              	.LBB664:
 325:src/keys.c    **** #ifndef WINGUI
 11076              		.loc 1 325 8 view .LVU3451
 11077 18da 6E4B     		ldr	r3, .L1267+8
 331:src/keys.c    ****   }
 11078              		.loc 1 331 9 view .LVU3452
 11079 18dc 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 11080              		.loc 1 327 73 view .LVU3453
 11081 18de 4FF0020C 		mov	ip, #2
 11082 18e2 FEF7B8BC 		b	.L717
 11083              	.LVL908:
 11084              	.L1215:
 327:src/keys.c    **** #else
 11085              		.loc 1 327 73 view .LVU3454
 11086 18e6 3268     		ldr	r2, [r6]
 11087              	.LBE664:
 11088              	.LBE670:
 11089              	.LBE1170:
 11090              	.LBB1171:
 11091              	.LBB880:
2475:src/keys.c    **** add_char:
 11092              		.loc 1 2475 10 view .LVU3455
 11093 18e8 4FF0330B 		mov	fp, #51
 11094 18ec FEF7E1BB 		b	.L616
 11095              	.LVL909:
 11096              	.L665:
2475:src/keys.c    **** add_char:
 11097              		.loc 1 2475 10 view .LVU3456
 11098              	.LBE880:
 11099              	.LBE1171:
 11100              	.LBB1172:
 11101              	.LBB757:
ARM GAS  /tmp/ccsJYix0.s 			page 310


1385:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 11102              		.loc 1 1385 3 is_stmt 1 view .LVU3457
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11103              		.loc 1 1386 18 is_stmt 0 view .LVU3458
 11104 18f0 664C     		ldr	r4, .L1267
1385:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 11105              		.loc 1 1385 3 view .LVU3459
 11106 18f2 0120     		movs	r0, #1
 11107 18f4 FFF7FEFF 		bl	update_program_bounds
 11108              	.LVL910:
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11109              		.loc 1 1386 3 is_stmt 1 view .LVU3460
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11110              		.loc 1 1386 18 is_stmt 0 view .LVU3461
 11111 18f8 2368     		ldr	r3, [r4]
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11112              		.loc 1 1386 11 view .LVU3462
 11113 18fa 0021     		movs	r1, #0
 11114 18fc B3F8EE07 		ldrh	r0, [r3, #2030]
 11115 1900 FFF7FEFF 		bl	do_inc
 11116              	.LVL911:
1387:src/keys.c    **** 			rawpc = 1;
 11117              		.loc 1 1387 3 is_stmt 1 view .LVU3463
1387:src/keys.c    **** 			rawpc = 1;
 11118              		.loc 1 1387 6 is_stmt 0 view .LVU3464
 11119 1904 0028     		cmp	r0, #0
 11120 1906 7FF408AA 		bne	.L658
1387:src/keys.c    **** 			rawpc = 1;
 11121              		.loc 1 1387 21 view .LVU3465
 11122 190a 2368     		ldr	r3, [r4]
1387:src/keys.c    **** 			rawpc = 1;
 11123              		.loc 1 1387 18 view .LVU3466
 11124 190c 5888     		ldrh	r0, [r3, #2]
 11125              	.LVL912:
1387:src/keys.c    **** 			rawpc = 1;
 11126              		.loc 1 1387 18 view .LVU3467
 11127 190e 0038     		subs	r0, r0, #0
 11128 1910 18BF     		it	ne
 11129 1912 0120     		movne	r0, #1
 11130 1914 FFF701BA 		b	.L658
 11131              	.LVL913:
 11132              	.L869:
1387:src/keys.c    **** 			rawpc = 1;
 11133              		.loc 1 1387 18 view .LVU3468
 11134              	.LBE757:
 11135              	.LBE1172:
 11136              	.LBB1173:
 11137              	.LBB1151:
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11138              		.loc 1 1071 3 is_stmt 1 view .LVU3469
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11139              		.loc 1 1071 7 is_stmt 0 view .LVU3470
 11140 1918 5C4B     		ldr	r3, .L1267
 11141 191a 1B68     		ldr	r3, [r3]
 11142 191c 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11143              		.loc 1 1071 6 view .LVU3471
ARM GAS  /tmp/ccsJYix0.s 			page 311


 11144 1920 D207     		lsls	r2, r2, #31
 11145 1922 40F19180 		bpl	.L872
1072:src/keys.c    **** 		else
 11146              		.loc 1 1072 4 is_stmt 1 view .LVU3472
1072:src/keys.c    **** 		else
 11147              		.loc 1 1072 57 is_stmt 0 view .LVU3473
 11148 1926 93F9E737 		ldrsb	r3, [r3, #2023]
 11149 192a 002B     		cmp	r3, #0
 11150 192c 40F2531B 		movw	fp, #339
 11151 1930 A8BF     		it	ge
 11152 1932 4FF4AA7B 		movge	fp, #340
 11153 1936 38E6     		b	.L874
 11154              	.LVL914:
 11155              	.L1234:
1101:src/keys.c    **** #undef _RARG
 11156              		.loc 1 1101 2 is_stmt 1 view .LVU3474
1101:src/keys.c    **** #undef _RARG
 11157              		.loc 1 1101 9 is_stmt 0 view .LVU3475
 11158 1938 544B     		ldr	r3, .L1267
 11159 193a 1B68     		ldr	r3, [r3]
 11160 193c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1101:src/keys.c    **** #undef _RARG
 11161              		.loc 1 1101 57 view .LVU3476
 11162 1940 DC07     		lsls	r4, r3, #31
 11163 1942 7FF532AE 		bpl	.L874
 11164              	.LVL915:
1101:src/keys.c    **** #undef _RARG
 11165              		.loc 1 1101 21 view .LVU3477
 11166 1946 1AF4804F 		tst	r10, #16384
 11167 194a 3FF42EAE 		beq	.L874
 11168 194e 3268     		ldr	r2, [r6]
1101:src/keys.c    **** #undef _RARG
 11169              		.loc 1 1101 57 view .LVU3478
 11170 1950 4FF0330B 		mov	fp, #51
 11171 1954 FEF7ADBB 		b	.L616
 11172              	.LVL916:
 11173              	.L1227:
1101:src/keys.c    **** #undef _RARG
 11174              		.loc 1 1101 57 view .LVU3479
 11175 1958 3268     		ldr	r2, [r6]
 11176              	.LBE1151:
 11177              	.LBE1173:
 11178              	.LBE1249:
 11179              	.LBE1321:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 11180              		.loc 1 3014 7 view .LVU3480
 11181 195a 0D46     		mov	r5, r1
 11182              	.LBB1322:
 11183              	.LBB1250:
 11184              	.LBB1174:
 11185              	.LBB1083:
1519:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11186              		.loc 1 1519 10 view .LVU3481
 11187 195c 4FF0330B 		mov	fp, #51
 11188 1960 FEF7A7BB 		b	.L616
 11189              	.LVL917:
 11190              	.L796:
ARM GAS  /tmp/ccsJYix0.s 			page 312


1519:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11191              		.loc 1 1519 10 view .LVU3482
 11192 1964 3268     		ldr	r2, [r6]
 11193              	.LBE1083:
 11194              	.LBE1174:
 11195              	.LBB1175:
 11196              	.LBB1007:
2798:src/keys.c    **** 		break;		// Exit doing nothing
 11197              		.loc 1 2798 11 view .LVU3483
 11198 1966 4FF0330B 		mov	fp, #51
 11199              	.LVL918:
2798:src/keys.c    **** 		break;		// Exit doing nothing
 11200              		.loc 1 2798 11 view .LVU3484
 11201 196a FEF7A2BB 		b	.L616
 11202              	.LVL919:
 11203              	.L1236:
2798:src/keys.c    **** 		break;		// Exit doing nothing
 11204              		.loc 1 2798 11 view .LVU3485
 11205              	.LBE1007:
 11206              	.LBE1175:
 11207              	.LBB1176:
 11208              	.LBB962:
 914:src/keys.c    **** 
 11209              		.loc 1 914 3 is_stmt 1 view .LVU3486
 914:src/keys.c    **** 
 11210              		.loc 1 914 6 is_stmt 0 view .LVU3487
 11211 196e 2BF4704B 		bic	fp, fp, #61440
 11212              	.LVL920:
 916:src/keys.c    **** 	case K00:
 11213              		.loc 1 916 2 is_stmt 1 view .LVU3488
 11214 1972 282C     		cmp	r4, #40
 11215 1974 3FF698AE 		bhi	.L846
 11216 1978 01A2     		adr	r2, .L848
 11217 197a 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 11218 197e 00BF     		.p2align 2
 11219              	.L848:
 11220 1980 2D170000 		.word	.L856+1
 11221 1984 AF170000 		.word	.L854+1
 11222 1988 A9160000 		.word	.L846+1
 11223 198c AF170000 		.word	.L854+1
 11224 1990 A9160000 		.word	.L846+1
 11225 1994 A9160000 		.word	.L846+1
 11226 1998 A9160000 		.word	.L846+1
 11227 199c A9160000 		.word	.L846+1
 11228 19a0 A9160000 		.word	.L846+1
 11229 19a4 A9160000 		.word	.L846+1
 11230 19a8 A9160000 		.word	.L846+1
 11231 19ac A9160000 		.word	.L846+1
 11232 19b0 85170000 		.word	.L853+1
 11233 19b4 A9160000 		.word	.L846+1
 11234 19b8 A9160000 		.word	.L846+1
 11235 19bc A9160000 		.word	.L846+1
 11236 19c0 A9160000 		.word	.L846+1
 11237 19c4 A9160000 		.word	.L846+1
 11238 19c8 51170000 		.word	.L852+1
 11239 19cc 9D160000 		.word	.L851+1
 11240 19d0 A9160000 		.word	.L846+1
ARM GAS  /tmp/ccsJYix0.s 			page 313


 11241 19d4 A9160000 		.word	.L846+1
 11242 19d8 A9160000 		.word	.L846+1
 11243 19dc A9160000 		.word	.L846+1
 11244 19e0 A9160000 		.word	.L846+1
 11245 19e4 A9160000 		.word	.L846+1
 11246 19e8 A9160000 		.word	.L846+1
 11247 19ec A9160000 		.word	.L846+1
 11248 19f0 A9160000 		.word	.L846+1
 11249 19f4 A9160000 		.word	.L846+1
 11250 19f8 F7160000 		.word	.L850+1
 11251 19fc E1160000 		.word	.L849+1
 11252 1a00 05170000 		.word	.L847+1
 11253 1a04 05170000 		.word	.L847+1
 11254 1a08 A9160000 		.word	.L846+1
 11255 1a0c A9160000 		.word	.L846+1
 11256 1a10 A9160000 		.word	.L846+1
 11257 1a14 A9160000 		.word	.L846+1
 11258 1a18 A9160000 		.word	.L846+1
 11259 1a1c 05170000 		.word	.L847+1
 11260 1a20 05170000 		.word	.L847+1
 11261              	.LVL921:
 11262              		.p2align 1
 11263              	.L1220:
 916:src/keys.c    **** 	case K00:
 11264              		.loc 1 916 2 is_stmt 0 view .LVU3489
 11265              	.LBE962:
 11266              	.LBE1176:
 11267              	.LBB1177:
 11268              	.LBB929:
2621:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11269              		.loc 1 2621 3 is_stmt 1 view .LVU3490
2621:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11270              		.loc 1 2621 8 is_stmt 0 view .LVU3491
 11271 1a24 4FEA8B34 		lsl	r4, fp, #14
2621:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11272              		.loc 1 2621 6 view .LVU3492
 11273 1a28 44F00104 		orr	r4, r4, #1
 11274              	.LVL922:
2622:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11275              		.loc 1 2622 3 is_stmt 1 view .LVU3493
2622:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11276              		.loc 1 2622 9 is_stmt 0 view .LVU3494
 11277 1a2c 2046     		mov	r0, r4
 11278 1a2e FFF7FEFF 		bl	is_label_or_end_at
 11279              	.LVL923:
2622:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11280              		.loc 1 2622 6 view .LVU3495
 11281 1a32 0246     		mov	r2, r0
 11282 1a34 0028     		cmp	r0, #0
 11283 1a36 00F09180 		beq	.L1244
 11284              	.L750:
2624:src/keys.c    **** 		return STATE_UNFINISHED;
 11285              		.loc 1 2624 3 is_stmt 1 view .LVU3496
 11286 1a3a 3268     		ldr	r2, [r6]
2624:src/keys.c    **** 		return STATE_UNFINISHED;
 11287              		.loc 1 2624 17 is_stmt 0 view .LVU3497
 11288 1a3c A8F80840 		strh	r4, [r8, #8]	@ movhi
ARM GAS  /tmp/ccsJYix0.s 			page 314


2625:src/keys.c    **** 	}
 11289              		.loc 1 2625 3 is_stmt 1 view .LVU3498
2625:src/keys.c    **** 	}
 11290              		.loc 1 2625 10 is_stmt 0 view .LVU3499
 11291 1a40 4FF0330B 		mov	fp, #51
 11292              	.LVL924:
2625:src/keys.c    **** 	}
 11293              		.loc 1 2625 10 view .LVU3500
 11294 1a44 FEF735BB 		b	.L616
 11295              	.LVL925:
 11296              	.L872:
2625:src/keys.c    **** 	}
 11297              		.loc 1 2625 10 view .LVU3501
 11298              	.LBE929:
 11299              	.LBE1177:
 11300              	.LBB1178:
 11301              	.LBB1152:
1077:src/keys.c    **** #endif
 11302              		.loc 1 1077 4 is_stmt 1 view .LVU3502
1077:src/keys.c    **** #endif
 11303              		.loc 1 1077 8 is_stmt 0 view .LVU3503
 11304 1a48 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1077:src/keys.c    **** #endif
 11305              		.loc 1 1077 7 view .LVU3504
 11306 1a4c 9B06     		lsls	r3, r3, #26
 11307 1a4e 7FF59BAD 		bpl	.L871
1077:src/keys.c    **** #endif
 11308              		.loc 1 1077 29 view .LVU3505
 11309 1a52 40F24F1B 		movw	fp, #335
 11310 1a56 A8E5     		b	.L874
 11311              	.LVL926:
 11312              	.L1241:
1077:src/keys.c    **** #endif
 11313              		.loc 1 1077 29 view .LVU3506
 11314              	.LBE1152:
 11315              	.LBE1178:
 11316              	.LBB1179:
 11317              	.LBB963:
 938:src/keys.c    **** 		}
 11318              		.loc 1 938 4 is_stmt 1 view .LVU3507
 938:src/keys.c    **** 		}
 11319              		.loc 1 938 34 is_stmt 0 view .LVU3508
 11320 1a58 0F4B     		ldr	r3, .L1267+12
 11321              	.LVL927:
 938:src/keys.c    **** 		}
 11322              		.loc 1 938 11 view .LVU3509
 11323 1a5a 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11324 1a5e FFF7FEFF 		bl	check_f_key
 11325              	.LVL928:
 938:src/keys.c    **** 		}
 11326              		.loc 1 938 11 view .LVU3510
 11327 1a62 8346     		mov	fp, r0
 11328              	.LVL929:
 938:src/keys.c    **** 		}
 11329              		.loc 1 938 11 view .LVU3511
 11330 1a64 FEF7ECBC 		b	.L646
 11331              	.LVL930:
ARM GAS  /tmp/ccsJYix0.s 			page 315


 11332              	.L1240:
 919:src/keys.c    **** 	    State2.dot = op;
 11333              		.loc 1 919 6 is_stmt 1 view .LVU3512
 920:src/keys.c    **** 	    // State2.cmplx = 0;
 11334              		.loc 1 920 6 view .LVU3513
 919:src/keys.c    **** 	    State2.dot = op;
 11335              		.loc 1 919 17 is_stmt 0 view .LVU3514
 11336 1a68 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 11337 1a6c 3268     		ldr	r2, [r6]
 11338 1a6e 0BF00103 		and	r3, fp, #1
 11339              	.LVL931:
 919:src/keys.c    **** 	    State2.dot = op;
 11340              		.loc 1 919 17 view .LVU3515
 11341 1a72 9B01     		lsls	r3, r3, #6
 11342 1a74 43F02003 		orr	r3, r3, #32
 11343 1a78 21F06001 		bic	r1, r1, #96
 11344 1a7c 0B43     		orrs	r3, r3, r1
 11345 1a7e 88F81530 		strb	r3, [r8, #21]
 922:src/keys.c    **** 	  }
 11346              		.loc 1 922 6 is_stmt 1 view .LVU3516
 922:src/keys.c    **** 	  }
 11347              		.loc 1 922 13 is_stmt 0 view .LVU3517
 11348 1a82 4FF0330B 		mov	fp, #51
 11349              	.LVL932:
 922:src/keys.c    **** 	  }
 11350              		.loc 1 922 13 view .LVU3518
 11351 1a86 FEF714BB 		b	.L616
 11352              	.L1268:
 11353 1a8a 00BF     		.align	2
 11354              	.L1267:
 11355 1a8c 00000000 		.word	main_ram
 11356 1a90 00000000 		.word	NonProgrammable
 11357 1a94 00000000 		.word	.LANCHOR11
 11358 1a98 00000000 		.word	.LANCHOR20
 11359              	.LVL933:
 11360              	.L1238:
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11361              		.loc 1 981 4 is_stmt 1 view .LVU3519
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11362              		.loc 1 981 26 is_stmt 0 view .LVU3520
 11363 1a9c 5C1E     		subs	r4, r3, #1
 11364              	.LVL934:
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11365              		.loc 1 981 17 view .LVU3521
 11366 1a9e 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 11367 1aa2 3268     		ldr	r2, [r6]
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11368              		.loc 1 981 26 view .LVU3522
 11369 1aa4 6342     		rsbs	r3, r4, #0
 11370 1aa6 6341     		adcs	r3, r3, r4
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11371              		.loc 1 981 17 view .LVU3523
 11372 1aa8 63F3C711 		bfi	r1, r3, #7, #1
 11373 1aac 88F81710 		strb	r1, [r8, #23]
 982:src/keys.c    **** 		}
 11374              		.loc 1 982 4 is_stmt 1 view .LVU3524
 982:src/keys.c    **** 		}
ARM GAS  /tmp/ccsJYix0.s 			page 316


 11375              		.loc 1 982 11 is_stmt 0 view .LVU3525
 11376 1ab0 4FF0330B 		mov	fp, #51
 11377              	.LVL935:
 982:src/keys.c    **** 		}
 11378              		.loc 1 982 11 view .LVU3526
 11379 1ab4 FEF7FDBA 		b	.L616
 11380              	.LVL936:
 11381              	.L1237:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11382              		.loc 1 961 27 view .LVU3527
 11383 1ab8 C64B     		ldr	r3, .L1269
 11384              	.LVL937:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11385              		.loc 1 961 27 view .LVU3528
 11386 1aba 1B68     		ldr	r3, [r3]
 11387 1abc 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 11388 1ac0 DA07     		lsls	r2, r3, #31
 11389 1ac2 7FF5EEAD 		bpl	.L858
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11390              		.loc 1 961 45 view .LVU3529
 11391 1ac6 0D20     		movs	r0, #13
 11392              	.LVL938:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11393              		.loc 1 961 45 view .LVU3530
 11394 1ac8 FFF7FEFF 		bl	intltr
 11395              	.LVL939:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11396              		.loc 1 961 42 view .LVU3531
 11397 1acc 0028     		cmp	r0, #0
 11398 1ace 3FF4E8AD 		beq	.L858
 11399              	.LVL940:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11400              		.loc 1 961 42 view .LVU3532
 11401              	.LBE963:
 11402              	.LBE1179:
 11403              	.LBE1250:
 11404              	.LBE1322:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11405              		.loc 1 3235 7 is_stmt 1 view .LVU3533
3235:src/keys.c    **** 	NonProgrammable = 0;
 11406              		.loc 1 3235 11 is_stmt 0 view .LVU3534
 11407 1ad2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3235:src/keys.c    **** 	NonProgrammable = 0;
 11408              		.loc 1 3235 10 view .LVU3535
 11409 1ad6 5906     		lsls	r1, r3, #25
 11410 1ad8 16D5     		bpl	.L981
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11411              		.loc 1 3236 2 is_stmt 1 view .LVU3536
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11412              		.loc 1 3236 18 is_stmt 0 view .LVU3537
 11413 1ada BF4B     		ldr	r3, .L1269+4
 11414 1adc 0022     		movs	r2, #0
 11415              	.LBB1323:
 11416              	.LBB1251:
 11417              	.LBB1180:
 11418              	.LBB964:
 962:src/keys.c    **** 	  }
ARM GAS  /tmp/ccsJYix0.s 			page 317


 11419              		.loc 1 962 13 view .LVU3538
 11420 1ade 4FF0120B 		mov	fp, #18
 11421              	.LBE964:
 11422              	.LBE1180:
 11423              	.LBE1251:
 11424              	.LBE1323:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11425              		.loc 1 3236 18 view .LVU3539
 11426 1ae2 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11427              		.loc 1 3237 2 is_stmt 1 view .LVU3540
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11428              		.loc 1 3237 32 is_stmt 0 view .LVU3541
 11429 1ae4 5846     		mov	r0, fp
 11430 1ae6 FEF76FBE 		b	.L925
 11431              	.LVL941:
 11432              	.L982:
 11433              	.LBB1324:
 11434              	.LBB1252:
 11435              	.LBB1181:
 11436              	.LBB965:
 967:src/keys.c    **** 	  }
 11437              		.loc 1 967 13 view .LVU3542
 11438 1aea 4FF0130B 		mov	fp, #19
 11439              	.LVL942:
 11440              	.L924:
 967:src/keys.c    **** 	  }
 11441              		.loc 1 967 13 view .LVU3543
 11442              	.LBE965:
 11443              	.LBE1181:
 11444              	.LBE1252:
 11445              	.LBE1324:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11446              		.loc 1 3235 26 view .LVU3544
 11447 1aee BA4B     		ldr	r3, .L1269+4
 11448 1af0 1A68     		ldr	r2, [r3]
 11449 1af2 62B1     		cbz	r2, .L1148
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11450              		.loc 1 3236 2 is_stmt 1 view .LVU3545
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11451              		.loc 1 3236 18 is_stmt 0 view .LVU3546
 11452 1af4 0022     		movs	r2, #0
 11453 1af6 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11454              		.loc 1 3237 2 is_stmt 1 view .LVU3547
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11455              		.loc 1 3237 32 is_stmt 0 view .LVU3548
 11456 1af8 5846     		mov	r0, fp
 11457 1afa FEF765BE 		b	.L925
 11458              	.LVL943:
 11459              	.L1242:
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11460              		.loc 1 3237 32 view .LVU3549
 11461 1afe 3268     		ldr	r2, [r6]
 11462              	.LBB1325:
 11463              	.LBB1253:
 11464              	.LBB1182:
ARM GAS  /tmp/ccsJYix0.s 			page 318


 11465              	.LBB966:
 950:src/keys.c    **** 			process_cmdline_set_lift();
 11466              		.loc 1 950 12 view .LVU3550
 11467 1b00 4FF0330B 		mov	fp, #51
 11468              	.LVL944:
 950:src/keys.c    **** 			process_cmdline_set_lift();
 11469              		.loc 1 950 12 view .LVU3551
 11470 1b04 FEF7D5BA 		b	.L616
 11471              	.LVL945:
 11472              	.L981:
 962:src/keys.c    **** 	  }
 11473              		.loc 1 962 13 view .LVU3552
 11474 1b08 4FF0120B 		mov	fp, #18
 11475 1b0c EFE7     		b	.L924
 11476              	.LVL946:
 11477              	.L1148:
 962:src/keys.c    **** 	  }
 11478              		.loc 1 962 13 view .LVU3553
 11479 1b0e 5846     		mov	r0, fp
 11480 1b10 FEF710BD 		b	.L927
 11481              	.LVL947:
 11482              	.L786:
 962:src/keys.c    **** 	  }
 11483              		.loc 1 962 13 view .LVU3554
 11484              	.LBE966:
 11485              	.LBE1182:
 11486              	.LBB1183:
 11487              	.LBB1008:
2776:src/keys.c    **** 		goto reset_window;
 11488              		.loc 1 2776 4 is_stmt 1 view .LVU3555
2776:src/keys.c    **** 		goto reset_window;
 11489              		.loc 1 2776 24 is_stmt 0 view .LVU3556
 11490 1b14 0AF1FF3A 		add	r10, r10, #-1
 11491              	.LVL948:
2776:src/keys.c    **** 		goto reset_window;
 11492              		.loc 1 2776 18 view .LVU3557
 11493 1b18 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 11494 1b1c FFF76BBB 		b	.L778
 11495              	.LVL949:
 11496              	.L1226:
2772:src/keys.c    **** 			--State2.digval;
 11497              		.loc 1 2772 5 is_stmt 1 view .LVU3558
2772:src/keys.c    **** 			--State2.digval;
 11498              		.loc 1 2772 21 is_stmt 0 view .LVU3559
 11499 1b20 FFF7FEFF 		bl	global_regs
 11500              	.LVL950:
2772:src/keys.c    **** 			--State2.digval;
 11501              		.loc 1 2772 19 view .LVU3560
 11502 1b24 A8F80800 		strh	r0, [r8, #8]	@ movhi
 11503 1b28 FFF760BB 		b	.L787
 11504              	.LVL951:
 11505              	.L1141:
2772:src/keys.c    **** 			--State2.digval;
 11506              		.loc 1 2772 19 view .LVU3561
 11507              	.LBE1008:
 11508              	.LBE1183:
 11509              	.LBE1253:
ARM GAS  /tmp/ccsJYix0.s 			page 319


 11510              	.LBE1325:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11511              		.loc 1 3235 26 discriminator 1 view .LVU3562
 11512 1b2c 1368     		ldr	r3, [r2]
 11513 1b2e 002B     		cmp	r3, #0
 11514 1b30 7EF477AD 		bne	.L926
 11515 1b34 FEF7FEBC 		b	.L927
 11516              	.LVL952:
 11517              	.L789:
 11518              	.LBB1326:
 11519              	.LBB1254:
 11520              	.LBB1184:
 11521              	.LBB1009:
2786:src/keys.c    **** 		goto reset_window;
 11522              		.loc 1 2786 4 is_stmt 1 view .LVU3563
2786:src/keys.c    **** 		goto reset_window;
 11523              		.loc 1 2786 18 is_stmt 0 view .LVU3564
 11524 1b38 0023     		movs	r3, #0
 11525 1b3a A8F80830 		strh	r3, [r8, #8]	@ movhi
 11526 1b3e FFF75ABB 		b	.L778
 11527              	.LVL953:
 11528              	.L1214:
2786:src/keys.c    **** 		goto reset_window;
 11529              		.loc 1 2786 18 view .LVU3565
 11530              	.LBE1009:
 11531              	.LBE1184:
 11532              	.LBB1185:
 11533              	.LBB881:
 11534              	.LBB875:
 11535              	.LBB864:
 442:src/keys.c    **** 			shift = SHIFT_LC_G;
 11536              		.loc 1 442 8 is_stmt 1 view .LVU3566
 443:src/keys.c    **** 	}
 11537              		.loc 1 443 10 is_stmt 0 view .LVU3567
 11538 1b42 0229     		cmp	r1, #2
 11539 1b44 08BF     		it	eq
 11540 1b46 0521     		moveq	r1, #5
 11541              	.LVL954:
 443:src/keys.c    **** 	}
 11542              		.loc 1 443 10 view .LVU3568
 11543 1b48 FFF72DB9 		b	.L738
 11544              	.LVL955:
 11545              	.L1235:
 443:src/keys.c    **** 	}
 11546              		.loc 1 443 10 view .LVU3569
 11547 1b4c 3268     		ldr	r2, [r6]
 11548              	.LBE864:
 11549              	.LBE875:
2446:src/keys.c    **** 		else if (State2.numdigit == 1)
 11550              		.loc 1 2446 11 view .LVU3570
 11551 1b4e 4FF0330B 		mov	fp, #51
 11552 1b52 FEF7AEBA 		b	.L616
 11553              	.LVL956:
 11554              	.L984:
2446:src/keys.c    **** 		else if (State2.numdigit == 1)
 11555              		.loc 1 2446 11 view .LVU3571
 11556              	.LBE881:
ARM GAS  /tmp/ccsJYix0.s 			page 320


 11557              	.LBE1185:
 11558              	.LBB1186:
 11559              	.LBB687:
 754:src/keys.c    **** 	    }
 11560              		.loc 1 754 15 view .LVU3572
 11561 1b56 4FF0110B 		mov	fp, #17
 11562 1b5a C8E7     		b	.L924
 11563              	.LVL957:
 11564              	.L1244:
 754:src/keys.c    **** 	    }
 11565              		.loc 1 754 15 view .LVU3573
 11566              	.LBE687:
 11567              	.LBE1186:
 11568              	.LBB1187:
 11569              	.LBB930:
2623:src/keys.c    **** 		State2.digval = pc;
 11570              		.loc 1 2623 4 is_stmt 1 view .LVU3574
2623:src/keys.c    **** 		State2.digval = pc;
 11571              		.loc 1 2623 9 is_stmt 0 view .LVU3575
 11572 1b5c 2046     		mov	r0, r4
 11573 1b5e 0121     		movs	r1, #1
 11574 1b60 FFF7FEFF 		bl	advance_to_next_label
 11575              	.LVL958:
 11576 1b64 0446     		mov	r4, r0
 11577              	.LVL959:
2623:src/keys.c    **** 		State2.digval = pc;
 11578              		.loc 1 2623 9 view .LVU3576
 11579 1b66 68E7     		b	.L750
 11580              	.LVL960:
 11581              	.L810:
2623:src/keys.c    **** 		State2.digval = pc;
 11582              		.loc 1 2623 9 view .LVU3577
 11583              	.LBE930:
 11584              	.LBE1187:
 11585              	.LBB1188:
 11586              	.LBB1084:
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 11587              		.loc 1 1447 3 is_stmt 1 view .LVU3578
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 11588              		.loc 1 1447 6 is_stmt 0 view .LVU3579
 11589 1b68 0028     		cmp	r0, #0
 11590 1b6a 3EF4CBAC 		beq	.L819
 11591              	.L820:
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11592              		.loc 1 1449 3 is_stmt 1 view .LVU3580
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11593              		.loc 1 1449 6 is_stmt 0 view .LVU3581
 11594 1b6e 0328     		cmp	r0, #3
 11595 1b70 7FF41CAC 		bne	.L804
 11596              	.LVL961:
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11597              		.loc 1 1449 6 view .LVU3582
 11598              	.LBE1084:
 11599              	.LBE1188:
 11600              	.LBE1254:
 11601              	.LBE1326:
3235:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccsJYix0.s 			page 321


 11602              		.loc 1 3235 7 is_stmt 1 view .LVU3583
3235:src/keys.c    **** 	NonProgrammable = 0;
 11603              		.loc 1 3235 10 is_stmt 0 view .LVU3584
 11604 1b74 5906     		lsls	r1, r3, #25
 11605              	.LVL962:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11606              		.loc 1 3235 10 view .LVU3585
 11607 1b76 17D5     		bpl	.L987
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11608              		.loc 1 3236 2 is_stmt 1 view .LVU3586
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11609              		.loc 1 3236 18 is_stmt 0 view .LVU3587
 11610 1b78 974B     		ldr	r3, .L1269+4
 11611 1b7a 0022     		movs	r2, #0
 11612 1b7c 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11613              		.loc 1 3237 2 is_stmt 1 view .LVU3588
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11614              		.loc 1 3237 32 is_stmt 0 view .LVU3589
 11615 1b7e 4FF4BA70 		mov	r0, #372
 11616              	.LVL963:
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11617              		.loc 1 3237 32 view .LVU3590
 11618 1b82 FEF777BD 		b	.L923
 11619              	.LVL964:
 11620              	.L1190:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11621              		.loc 1 3235 7 is_stmt 1 view .LVU3591
3235:src/keys.c    **** 	NonProgrammable = 0;
 11622              		.loc 1 3235 11 is_stmt 0 view .LVU3592
 11623 1b86 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3235:src/keys.c    **** 	NonProgrammable = 0;
 11624              		.loc 1 3235 10 view .LVU3593
 11625 1b8a 5C06     		lsls	r4, r3, #25
 11626 1b8c 17D5     		bpl	.L985
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11627              		.loc 1 3236 2 is_stmt 1 view .LVU3594
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11628              		.loc 1 3236 18 is_stmt 0 view .LVU3595
 11629 1b8e 924B     		ldr	r3, .L1269+4
 11630 1b90 0022     		movs	r2, #0
 11631              	.LBB1327:
 11632              	.LBB1255:
 11633              	.LBB1189:
 11634              	.LBB688:
 762:src/keys.c    **** 	    }
 11635              		.loc 1 762 15 view .LVU3596
 11636 1b92 4FF0140B 		mov	fp, #20
 11637              	.LBE688:
 11638              	.LBE1189:
 11639              	.LBE1255:
 11640              	.LBE1327:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11641              		.loc 1 3236 18 view .LVU3597
 11642 1b96 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11643              		.loc 1 3237 2 is_stmt 1 view .LVU3598
ARM GAS  /tmp/ccsJYix0.s 			page 322


3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11644              		.loc 1 3237 32 is_stmt 0 view .LVU3599
 11645 1b98 5846     		mov	r0, fp
 11646 1b9a FEF715BE 		b	.L925
 11647              	.LVL965:
 11648              	.L1191:
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11649              		.loc 1 3237 32 view .LVU3600
 11650 1b9e 3268     		ldr	r2, [r6]
 11651              	.LBB1328:
 11652              	.LBB1256:
 11653              	.LBB1190:
 11654              	.LBB689:
 841:src/keys.c    **** }
 11655              		.loc 1 841 9 view .LVU3601
 11656 1ba0 4FF0330B 		mov	fp, #51
 11657 1ba4 FEF785BA 		b	.L616
 11658              	.LVL966:
 11659              	.L987:
 841:src/keys.c    **** }
 11660              		.loc 1 841 9 view .LVU3602
 11661              	.LBE689:
 11662              	.LBE1190:
 11663              	.LBB1191:
 11664              	.LBB1085:
1450:src/keys.c    **** 		break;
 11665              		.loc 1 1450 11 view .LVU3603
 11666 1ba8 4FF4BA7B 		mov	fp, #372
 11667              	.LVL967:
 11668              	.L922:
1450:src/keys.c    **** 		break;
 11669              		.loc 1 1450 11 view .LVU3604
 11670              	.LBE1085:
 11671              	.LBE1191:
 11672              	.LBE1256:
 11673              	.LBE1328:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11674              		.loc 1 3235 26 view .LVU3605
 11675 1bac 8A4B     		ldr	r3, .L1269+4
 11676 1bae 1A68     		ldr	r2, [r3]
 11677 1bb0 002A     		cmp	r2, #0
 11678 1bb2 ACD0     		beq	.L1148
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11679              		.loc 1 3236 2 is_stmt 1 view .LVU3606
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11680              		.loc 1 3236 18 is_stmt 0 view .LVU3607
 11681 1bb4 0022     		movs	r2, #0
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11682              		.loc 1 3237 32 view .LVU3608
 11683 1bb6 5846     		mov	r0, fp
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11684              		.loc 1 3236 18 view .LVU3609
 11685 1bb8 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11686              		.loc 1 3237 2 is_stmt 1 view .LVU3610
 11687 1bba FEF75BBD 		b	.L923
 11688              	.LVL968:
ARM GAS  /tmp/ccsJYix0.s 			page 323


 11689              	.L985:
 11690              	.LBB1329:
 11691              	.LBB1257:
 11692              	.LBB1192:
 11693              	.LBB690:
 762:src/keys.c    **** 	    }
 11694              		.loc 1 762 15 is_stmt 0 view .LVU3611
 11695 1bbe 4FF0140B 		mov	fp, #20
 11696 1bc2 94E7     		b	.L924
 11697              	.LVL969:
 11698              	.L1233:
 762:src/keys.c    **** 	    }
 11699              		.loc 1 762 15 view .LVU3612
 11700              	.LBE690:
 11701              	.LBE1192:
 11702              	.LBB1193:
 11703              	.LBB1153:
1087:src/keys.c    **** 			set_pc(0);
 11704              		.loc 1 1087 43 view .LVU3613
 11705 1bc4 B3F8EE37 		ldrh	r3, [r3, #2030]
 11706 1bc8 012B     		cmp	r3, #1
 11707 1bca 7FF4DDAC 		bne	.L871
1088:src/keys.c    **** 		break;
 11708              		.loc 1 1088 4 is_stmt 1 view .LVU3614
 11709 1bce FFF7FEFF 		bl	set_pc
 11710              	.LVL970:
 11711 1bd2 D9E4     		b	.L871
 11712              	.L1232:
 11713 1bd4 3268     		ldr	r2, [r6]
1083:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11714              		.loc 1 1083 11 is_stmt 0 view .LVU3615
 11715 1bd6 4FF0330B 		mov	fp, #51
 11716 1bda FEF76ABA 		b	.L616
 11717              	.LVL971:
 11718              	.L1243:
1083:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11719              		.loc 1 1083 11 view .LVU3616
 11720              	.LBE1153:
 11721              	.LBE1193:
 11722              	.LBB1194:
 11723              	.LBB882:
2463:src/keys.c    **** 		else
 11724              		.loc 1 2463 4 is_stmt 1 view .LVU3617
2463:src/keys.c    **** 		else
 11725              		.loc 1 2463 34 is_stmt 0 view .LVU3618
 11726 1bde 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11727 1be2 3268     		ldr	r2, [r6]
 11728 1be4 C3F30011 		ubfx	r1, r3, #4, #1
 11729              	.LVL972:
2463:src/keys.c    **** 		else
 11730              		.loc 1 2463 26 view .LVU3619
 11731 1be8 C1F10101 		rsb	r1, r1, #1
2463:src/keys.c    **** 		else
 11732              		.loc 1 2463 22 view .LVU3620
 11733 1bec 61F30413 		bfi	r3, r1, #4, #1
 11734 1bf0 88F81630 		strb	r3, [r8, #22]
2466:src/keys.c    **** 
ARM GAS  /tmp/ccsJYix0.s 			page 324


 11735              		.loc 1 2466 10 view .LVU3621
 11736 1bf4 4FF0330B 		mov	fp, #51
 11737 1bf8 FEF75BBA 		b	.L616
 11738              	.LVL973:
 11739              	.L1222:
2466:src/keys.c    **** 
 11740              		.loc 1 2466 10 view .LVU3622
 11741              	.LBE882:
 11742              	.LBE1194:
 11743              	.LBB1195:
 11744              	.LBB1010:
2747:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11745              		.loc 1 2747 3 is_stmt 1 view .LVU3623
2747:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11746              		.loc 1 2747 7 is_stmt 0 view .LVU3624
 11747 1bfc FFF7FEFF 		bl	local_regs
 11748              	.LVL974:
2747:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11749              		.loc 1 2747 6 view .LVU3625
 11750 1c00 68B1     		cbz	r0, .L776
2748:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11751              		.loc 1 2748 4 is_stmt 1 view .LVU3626
2748:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11752              		.loc 1 2748 19 is_stmt 0 view .LVU3627
 11753 1c02 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2748:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11754              		.loc 1 2748 34 view .LVU3628
 11755 1c06 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2748:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11756              		.loc 1 2748 19 view .LVU3629
 11757 1c0a 03F00101 		and	r1, r3, #1
2748:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11758              		.loc 1 2748 34 view .LVU3630
 11759 1c0e 0A43     		orrs	r2, r1, r2
 11760 1c10 0CBF     		ite	eq
 11761 1c12 0122     		moveq	r2, #1
 11762 1c14 0022     		movne	r2, #0
2748:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11763              		.loc 1 2748 17 view .LVU3631
 11764 1c16 62F30003 		bfi	r3, r2, #0, #1
 11765 1c1a 88F81630 		strb	r3, [r8, #22]
 11766              	.L776:
2749:src/keys.c    **** 		goto reset_window;
 11767              		.loc 1 2749 3 is_stmt 1 view .LVU3632
2749:src/keys.c    **** 		goto reset_window;
 11768              		.loc 1 2749 32 is_stmt 0 view .LVU3633
 11769 1c1e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2749:src/keys.c    **** 		goto reset_window;
 11770              		.loc 1 2749 17 view .LVU3634
 11771 1c22 13F0010F 		tst	r3, #1
 11772 1c26 14BF     		ite	ne
 11773 1c28 0023     		movne	r3, #0
 11774 1c2a 6423     		moveq	r3, #100
 11775 1c2c A8F80830 		strh	r3, [r8, #8]	@ movhi
2750:src/keys.c    **** 	}
 11776              		.loc 1 2750 3 is_stmt 1 view .LVU3635
 11777 1c30 FFF7E1BA 		b	.L778
ARM GAS  /tmp/ccsJYix0.s 			page 325


 11778              	.LVL975:
 11779              	.L805:
2750:src/keys.c    **** 	}
 11780              		.loc 1 2750 3 is_stmt 0 view .LVU3636
 11781              	.LBE1010:
 11782              	.LBE1195:
 11783              	.LBB1196:
 11784              	.LBB1086:
1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11785              		.loc 1 1509 3 is_stmt 1 view .LVU3637
1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11786              		.loc 1 1509 6 is_stmt 0 view .LVU3638
 11787 1c34 0128     		cmp	r0, #1
 11788 1c36 7FF4B9AB 		bne	.L804
 11789              	.LVL976:
1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11790              		.loc 1 1509 6 view .LVU3639
 11791              	.LBE1086:
 11792              	.LBE1196:
 11793              	.LBE1257:
 11794              	.LBE1329:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11795              		.loc 1 3235 7 is_stmt 1 view .LVU3640
3235:src/keys.c    **** 	NonProgrammable = 0;
 11796              		.loc 1 3235 10 is_stmt 0 view .LVU3641
 11797 1c3a 5806     		lsls	r0, r3, #25
 11798              	.LVL977:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11799              		.loc 1 3235 10 view .LVU3642
 11800 1c3c 10D5     		bpl	.L980
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11801              		.loc 1 3236 2 is_stmt 1 view .LVU3643
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11802              		.loc 1 3236 18 is_stmt 0 view .LVU3644
 11803 1c3e 664B     		ldr	r3, .L1269+4
 11804 1c40 0022     		movs	r2, #0
 11805 1c42 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11806              		.loc 1 3237 2 is_stmt 1 view .LVU3645
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11807              		.loc 1 3237 32 is_stmt 0 view .LVU3646
 11808 1c44 40F23B10 		movw	r0, #315
 11809 1c48 FEF714BD 		b	.L923
 11810              	.LVL978:
 11811              	.L807:
 11812              	.LBB1330:
 11813              	.LBB1258:
 11814              	.LBB1197:
 11815              	.LBB1087:
1495:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11816              		.loc 1 1495 3 is_stmt 1 view .LVU3647
1495:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11817              		.loc 1 1495 6 is_stmt 0 view .LVU3648
 11818 1c4c 0128     		cmp	r0, #1
 11819 1c4e 20D0     		beq	.L1245
1497:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11820              		.loc 1 1497 8 is_stmt 1 view .LVU3649
ARM GAS  /tmp/ccsJYix0.s 			page 326


1497:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11821              		.loc 1 1497 11 is_stmt 0 view .LVU3650
 11822 1c50 0328     		cmp	r0, #3
 11823 1c52 15D0     		beq	.L829
1499:src/keys.c    **** #ifdef DM42
 11824              		.loc 1 1499 8 is_stmt 1 view .LVU3651
1499:src/keys.c    **** #ifdef DM42
 11825              		.loc 1 1499 11 is_stmt 0 view .LVU3652
 11826 1c54 38B1     		cbz	r0, .L830
 11827 1c56 3268     		ldr	r2, [r6]
1506:src/keys.c    **** 
 11828              		.loc 1 1506 10 view .LVU3653
 11829 1c58 4FF0330B 		mov	fp, #51
 11830 1c5c FEF729BA 		b	.L616
 11831              	.LVL979:
 11832              	.L980:
1510:src/keys.c    **** 		break;
 11833              		.loc 1 1510 11 view .LVU3654
 11834 1c60 40F23B1B 		movw	fp, #315
 11835 1c64 A2E7     		b	.L922
 11836              	.LVL980:
 11837              	.L830:
1501:src/keys.c    **** 		  display_current_menu();
 11838              		.loc 1 1501 5 is_stmt 1 view .LVU3655
 11839 1c66 4FF0FF30 		mov	r0, #-1
 11840              	.LVL981:
1501:src/keys.c    **** 		  display_current_menu();
 11841              		.loc 1 1501 5 is_stmt 0 view .LVU3656
 11842 1c6a FFF7FEFF 		bl	set_menu
 11843              	.LVL982:
1502:src/keys.c    **** #endif
 11844              		.loc 1 1502 5 is_stmt 1 view .LVU3657
1506:src/keys.c    **** 
 11845              		.loc 1 1506 10 is_stmt 0 view .LVU3658
 11846 1c6e 4FF0330B 		mov	fp, #51
1502:src/keys.c    **** #endif
 11847              		.loc 1 1502 5 view .LVU3659
 11848 1c72 FFF7FEFF 		bl	display_current_menu
 11849              	.LVL983:
1504:src/keys.c    **** 		}
 11850              		.loc 1 1504 5 is_stmt 1 view .LVU3660
 11851 1c76 FFF7FEFF 		bl	init_state
 11852              	.LVL984:
 11853 1c7a 3268     		ldr	r2, [r6]
 11854 1c7c FEF719BA 		b	.L616
 11855              	.LVL985:
 11856              	.L829:
1504:src/keys.c    **** 		}
 11857              		.loc 1 1504 5 is_stmt 0 view .LVU3661
 11858              	.LBE1087:
 11859              	.LBE1197:
 11860              	.LBE1258:
 11861              	.LBE1330:
3235:src/keys.c    **** 	NonProgrammable = 0;
 11862              		.loc 1 3235 7 is_stmt 1 view .LVU3662
3235:src/keys.c    **** 	NonProgrammable = 0;
 11863              		.loc 1 3235 10 is_stmt 0 view .LVU3663
ARM GAS  /tmp/ccsJYix0.s 			page 327


 11864 1c80 5A06     		lsls	r2, r3, #25
 11865 1c82 15D5     		bpl	.L988
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11866              		.loc 1 3236 2 is_stmt 1 view .LVU3664
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11867              		.loc 1 3236 18 is_stmt 0 view .LVU3665
 11868 1c84 544B     		ldr	r3, .L1269+4
 11869 1c86 0022     		movs	r2, #0
 11870 1c88 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11871              		.loc 1 3237 2 is_stmt 1 view .LVU3666
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11872              		.loc 1 3237 32 is_stmt 0 view .LVU3667
 11873 1c8a 4FF48170 		mov	r0, #258
 11874              	.LVL986:
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11875              		.loc 1 3237 32 view .LVU3668
 11876 1c8e FEF7F1BC 		b	.L923
 11877              	.LVL987:
 11878              	.L1245:
 11879              	.LBB1331:
 11880              	.LBB1259:
 11881              	.LBB1198:
 11882              	.LBB1088:
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11883              		.loc 1 1496 4 is_stmt 1 view .LVU3669
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11884              		.loc 1 1496 34 is_stmt 0 view .LVU3670
 11885 1c92 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11886 1c96 3268     		ldr	r2, [r6]
 11887 1c98 C3F30011 		ubfx	r1, r3, #4, #1
 11888              	.LVL988:
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11889              		.loc 1 1496 26 view .LVU3671
 11890 1c9c C1F10101 		rsb	r1, r1, #1
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11891              		.loc 1 1496 22 view .LVU3672
 11892 1ca0 61F30413 		bfi	r3, r1, #4, #1
 11893 1ca4 88F81630 		strb	r3, [r8, #22]
1506:src/keys.c    **** 
 11894              		.loc 1 1506 10 view .LVU3673
 11895 1ca8 4FF0330B 		mov	fp, #51
 11896 1cac FEF701BA 		b	.L616
 11897              	.LVL989:
 11898              	.L988:
1498:src/keys.c    **** 		else if (shift == SHIFT_N) {
 11899              		.loc 1 1498 11 view .LVU3674
 11900 1cb0 4FF4817B 		mov	fp, #258
 11901 1cb4 7AE7     		b	.L922
 11902              	.LVL990:
 11903              	.L808:
1483:src/keys.c    **** 	    if ( State2.runmode ) {
 11904              		.loc 1 1483 4 is_stmt 1 view .LVU3675
1483:src/keys.c    **** 	    if ( State2.runmode ) {
 11905              		.loc 1 1483 7 is_stmt 0 view .LVU3676
 11906 1cb6 0028     		cmp	r0, #0
 11907 1cb8 7FF478AB 		bne	.L804
ARM GAS  /tmp/ccsJYix0.s 			page 328


1484:src/keys.c    **** 	      // Alpha scroll right
 11908              		.loc 1 1484 6 is_stmt 1 view .LVU3677
1484:src/keys.c    **** 	      // Alpha scroll right
 11909              		.loc 1 1484 9 is_stmt 0 view .LVU3678
 11910 1cbc 5B06     		lsls	r3, r3, #25
 11911 1cbe 7EF515AC 		bpl	.L826
1486:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11912              		.loc 1 1486 8 is_stmt 1 view .LVU3679
1486:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11913              		.loc 1 1486 11 is_stmt 0 view .LVU3680
 11914 1cc2 B9F1000F 		cmp	r9, #0
 11915 1cc6 16D1     		bne	.L827
 11916 1cc8 3268     		ldr	r2, [r6]
1488:src/keys.c    **** 	    }
 11917              		.loc 1 1488 15 view .LVU3681
 11918 1cca 4FF0330B 		mov	fp, #51
 11919 1cce FEF7F0B9 		b	.L616
 11920              	.L809:
1454:src/keys.c    **** 	    if ( State2.runmode ) {
 11921              		.loc 1 1454 4 is_stmt 1 view .LVU3682
1454:src/keys.c    **** 	    if ( State2.runmode ) {
 11922              		.loc 1 1454 7 is_stmt 0 view .LVU3683
 11923 1cd2 0028     		cmp	r0, #0
 11924 1cd4 7FF46AAB 		bne	.L804
1455:src/keys.c    **** 	      // Alpha scroll left
 11925              		.loc 1 1455 6 is_stmt 1 view .LVU3684
1455:src/keys.c    **** 	      // Alpha scroll left
 11926              		.loc 1 1455 9 is_stmt 0 view .LVU3685
 11927 1cd8 5A06     		lsls	r2, r3, #25
 11928 1cda 7EF5FEAB 		bpl	.L822
1463:src/keys.c    **** 		alpha_pos += 1;
 11929              		.loc 1 1463 8 is_stmt 1 view .LVU3686
1463:src/keys.c    **** 		alpha_pos += 1;
 11930              		.loc 1 1463 11 is_stmt 0 view .LVU3687
 11931 1cde B9F1000F 		cmp	r9, #0
 11932 1ce2 11D1     		bne	.L823
 11933              	.LVL991:
 11934              	.L825:
1464:src/keys.c    **** 	      }
 11935              		.loc 1 1464 3 is_stmt 1 view .LVU3688
1464:src/keys.c    **** 	      }
 11936              		.loc 1 1464 13 is_stmt 0 view .LVU3689
 11937 1ce4 09F1010A 		add	r10, r9, #1
 11938              	.LVL992:
 11939              	.L824:
1471:src/keys.c    **** #else
 11940              		.loc 1 1471 8 is_stmt 1 view .LVU3690
 11941 1ce8 3268     		ldr	r2, [r6]
1471:src/keys.c    **** #else
 11942              		.loc 1 1471 25 is_stmt 0 view .LVU3691
 11943 1cea 88F80DA0 		strb	r10, [r8, #13]
1476:src/keys.c    **** 	    }
 11944              		.loc 1 1476 8 is_stmt 1 view .LVU3692
1476:src/keys.c    **** 	    }
 11945              		.loc 1 1476 15 is_stmt 0 view .LVU3693
 11946 1cee 4FF0330B 		mov	fp, #51
 11947 1cf2 FEF7DEB9 		b	.L616
ARM GAS  /tmp/ccsJYix0.s 			page 329


 11948              	.LVL993:
 11949              	.L827:
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11950              		.loc 1 1487 3 is_stmt 1 view .LVU3694
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11951              		.loc 1 1487 31 is_stmt 0 view .LVU3695
 11952 1cf6 09F1FF39 		add	r9, r9, #-1
 11953              	.LVL994:
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11954              		.loc 1 1487 31 view .LVU3696
 11955 1cfa 3268     		ldr	r2, [r6]
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11956              		.loc 1 1487 20 view .LVU3697
 11957 1cfc 88F80D90 		strb	r9, [r8, #13]
1488:src/keys.c    **** 	    }
 11958              		.loc 1 1488 15 view .LVU3698
 11959 1d00 4FF0330B 		mov	fp, #51
 11960 1d04 FEF7D5B9 		b	.L616
 11961              	.LVL995:
 11962              	.L823:
1463:src/keys.c    **** 		alpha_pos += 1;
 11963              		.loc 1 1463 33 view .LVU3699
 11964 1d08 FFF7FEFF 		bl	alen
 11965              	.LVL996:
1463:src/keys.c    **** 		alpha_pos += 1;
 11966              		.loc 1 1463 41 view .LVU3700
 11967 1d0c 09EB4903 		add	r3, r9, r9, lsl #1
1463:src/keys.c    **** 		alpha_pos += 1;
 11968              		.loc 1 1463 39 view .LVU3701
 11969 1d10 A0EB4300 		sub	r0, r0, r3, lsl #1
1463:src/keys.c    **** 		alpha_pos += 1;
 11970              		.loc 1 1463 29 view .LVU3702
 11971 1d14 1328     		cmp	r0, #19
 11972 1d16 E5D8     		bhi	.L825
 11973 1d18 E6E7     		b	.L824
 11974              	.LVL997:
 11975              	.L682:
1463:src/keys.c    **** 		alpha_pos += 1;
 11976              		.loc 1 1463 29 view .LVU3703
 11977              	.LBE1088:
 11978              	.LBE1198:
 11979              	.LBB1199:
 11980              	.LBB736:
1987:src/keys.c    **** 		// Special 1
 11981              		.loc 1 1987 7 is_stmt 1 view .LVU3704
1987:src/keys.c    **** 		// Special 1
 11982              		.loc 1 1987 10 is_stmt 0 view .LVU3705
 11983 1d1a 012A     		cmp	r2, #1
 11984 1d1c 7EF472AF 		bne	.L684
1989:src/keys.c    **** 	}
 11985              		.loc 1 1989 3 is_stmt 1 view .LVU3706
1989:src/keys.c    **** 	}
 11986              		.loc 1 1989 18 is_stmt 0 view .LVU3707
 11987 1d20 BEF1000F 		cmp	lr, #0
 11988 1d24 14BF     		ite	ne
 11989 1d26 2723     		movne	r3, #39
 11990 1d28 1E23     		moveq	r3, #30
ARM GAS  /tmp/ccsJYix0.s 			page 330


1989:src/keys.c    **** 	}
 11991              		.loc 1 1989 47 view .LVU3708
 11992 1d2a 9B44     		add	fp, fp, r3
 11993              	.LVL998:
1989:src/keys.c    **** 	}
 11994              		.loc 1 1989 47 view .LVU3709
 11995 1d2c FEF788BB 		b	.L646
 11996              	.LVL999:
 11997              	.L739:
1989:src/keys.c    **** 	}
 11998              		.loc 1 1989 47 view .LVU3710
 11999              	.LBE736:
 12000              	.LBE1199:
 12001              	.LBB1200:
 12002              	.LBB883:
2456:src/keys.c    **** 			return STATE_UNFINISHED;
 12003              		.loc 1 2456 5 is_stmt 1 view .LVU3711
2456:src/keys.c    **** 			return STATE_UNFINISHED;
 12004              		.loc 1 2456 20 is_stmt 0 view .LVU3712
 12005 1d30 013A     		subs	r2, r2, #1
 12006 1d32 88F80B20 		strb	r2, [r8, #11]
2457:src/keys.c    **** 		}
 12007              		.loc 1 2457 11 view .LVU3713
 12008 1d36 4FF0330B 		mov	fp, #51
 12009 1d3a 3268     		ldr	r2, [r6]
 12010 1d3c FEF7B9B9 		b	.L616
 12011              	.LVL1000:
 12012              	.L1217:
2482:src/keys.c    **** 		State2.numdigit = 2;
 12013              		.loc 1 2482 3 is_stmt 1 view .LVU3714
2483:src/keys.c    **** 		return STATE_UNFINISHED;
 12014              		.loc 1 2483 19 is_stmt 0 view .LVU3715
 12015 1d40 0223     		movs	r3, #2
 12016 1d42 3268     		ldr	r2, [r6]
2482:src/keys.c    **** 		State2.numdigit = 2;
 12017              		.loc 1 2482 18 view .LVU3716
 12018 1d44 88F80A00 		strb	r0, [r8, #10]
2483:src/keys.c    **** 		return STATE_UNFINISHED;
 12019              		.loc 1 2483 3 is_stmt 1 view .LVU3717
2483:src/keys.c    **** 		return STATE_UNFINISHED;
 12020              		.loc 1 2483 19 is_stmt 0 view .LVU3718
 12021 1d48 88F80B30 		strb	r3, [r8, #11]
2484:src/keys.c    **** 	}
 12022              		.loc 1 2484 3 is_stmt 1 view .LVU3719
2484:src/keys.c    **** 	}
 12023              		.loc 1 2484 10 is_stmt 0 view .LVU3720
 12024 1d4c 4FF0330B 		mov	fp, #51
 12025 1d50 FEF7AFB9 		b	.L616
 12026              	.LVL1001:
 12027              	.L863:
2484:src/keys.c    **** 	}
 12028              		.loc 1 2484 10 view .LVU3721
 12029              	.LBE883:
 12030              	.LBE1200:
 12031              	.LBB1201:
 12032              	.LBB967:
 974:src/keys.c    **** 		State2.test = op;
ARM GAS  /tmp/ccsJYix0.s 			page 331


 12033              		.loc 1 974 3 is_stmt 1 view .LVU3722
 12034 1d54 FFF7FEFF 		bl	process_cmdline_set_lift
 12035              	.LVL1002:
 975:src/keys.c    **** 		return STATE_UNFINISHED;
 12036              		.loc 1 975 3 view .LVU3723
 12037              	.LBE967:
 12038              	.LBE1201:
 12039              	.LBE1259:
 12040              	.LBE1331:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 12041              		.loc 1 3014 7 is_stmt 0 view .LVU3724
 12042 1d58 2546     		mov	r5, r4
 12043              	.LBB1332:
 12044              	.LBB1260:
 12045              	.LBB1202:
 12046              	.LBB968:
 975:src/keys.c    **** 		return STATE_UNFINISHED;
 12047              		.loc 1 975 15 view .LVU3725
 12048 1d5a 88F80FB0 		strb	fp, [r8, #15]
 976:src/keys.c    **** 
 12049              		.loc 1 976 3 is_stmt 1 view .LVU3726
 12050 1d5e 3268     		ldr	r2, [r6]
 976:src/keys.c    **** 
 12051              		.loc 1 976 10 is_stmt 0 view .LVU3727
 12052 1d60 4FF0330B 		mov	fp, #51
 12053              	.LVL1003:
 976:src/keys.c    **** 
 12054              		.loc 1 976 10 view .LVU3728
 12055 1d64 FEF7A5B9 		b	.L616
 12056              	.LVL1004:
 12057              	.L1239:
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12058              		.loc 1 990 4 is_stmt 1 view .LVU3729
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12059              		.loc 1 990 7 is_stmt 0 view .LVU3730
 12060 1d68 BAF5704F 		cmp	r10, #61440
 12061 1d6c 1DD1     		bne	.L865
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12062              		.loc 1 990 18 view .LVU3731
 12063 1d6e 194B     		ldr	r3, .L1269
 12064 1d70 1B68     		ldr	r3, [r3]
 12065 1d72 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12066              		.loc 1 990 8 view .LVU3732
 12067 1d76 D807     		lsls	r0, r3, #31
 12068 1d78 17D5     		bpl	.L865
 12069 1d7a 3268     		ldr	r2, [r6]
 993:src/keys.c    **** 		}
 12070              		.loc 1 993 11 view .LVU3733
 12071 1d7c 4FF0330B 		mov	fp, #51
 12072              	.LVL1005:
 993:src/keys.c    **** 		}
 12073              		.loc 1 993 11 view .LVU3734
 12074 1d80 FEF797B9 		b	.L616
 12075              	.LVL1006:
 12076              	.L842:
 993:src/keys.c    **** 		}
ARM GAS  /tmp/ccsJYix0.s 			page 332


 12077              		.loc 1 993 11 view .LVU3735
 12078              	.LBE968:
 12079              	.LBE1202:
 12080              	.LBB1203:
 12081              	.LBB1122:
1193:src/keys.c    **** 				State2.cmplx = 1;
 12082              		.loc 1 1193 5 is_stmt 1 view .LVU3736
 12083 1d84 FFF7FEFF 		bl	process_cmdline_set_lift
 12084              	.LVL1007:
1194:src/keys.c    **** 				State2.test = op;
 12085              		.loc 1 1194 5 view .LVU3737
1194:src/keys.c    **** 				State2.test = op;
 12086              		.loc 1 1194 18 is_stmt 0 view .LVU3738
 12087 1d88 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 12088 1d8c 3268     		ldr	r2, [r6]
1195:src/keys.c    **** 			}
 12089              		.loc 1 1195 17 view .LVU3739
 12090 1d8e 88F80FB0 		strb	fp, [r8, #15]
1194:src/keys.c    **** 				State2.test = op;
 12091              		.loc 1 1194 18 view .LVU3740
 12092 1d92 43F00203 		orr	r3, r3, #2
 12093 1d96 88F81530 		strb	r3, [r8, #21]
1195:src/keys.c    **** 			}
 12094              		.loc 1 1195 5 is_stmt 1 view .LVU3741
 12095              	.LBE1122:
 12096              	.LBE1203:
 12097              	.LBE1260:
 12098              	.LBE1332:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 12099              		.loc 1 3014 7 is_stmt 0 view .LVU3742
 12100 1d9a 2546     		mov	r5, r4
 12101              	.LBB1333:
 12102              	.LBB1261:
 12103              	.LBB1204:
 12104              	.LBB1123:
1197:src/keys.c    **** 
 12105              		.loc 1 1197 11 view .LVU3743
 12106 1d9c 4FF0330B 		mov	fp, #51
 12107              	.LVL1008:
1197:src/keys.c    **** 
 12108              		.loc 1 1197 11 view .LVU3744
 12109 1da0 FEF787B9 		b	.L616
 12110              	.LVL1009:
 12111              	.L1230:
1197:src/keys.c    **** 
 12112              		.loc 1 1197 11 view .LVU3745
 12113 1da4 3268     		ldr	r2, [r6]
 12114 1da6 FEF784B9 		b	.L616
 12115              	.LVL1010:
 12116              	.L865:
1197:src/keys.c    **** 
 12117              		.loc 1 1197 11 view .LVU3746
 12118              	.LBE1123:
 12119              	.LBE1204:
 12120              	.LBB1205:
 12121              	.LBB969:
 991:src/keys.c    **** 			}
ARM GAS  /tmp/ccsJYix0.s 			page 333


 12122              		.loc 1 991 5 is_stmt 1 view .LVU3747
 12123              	.LBB956:
 12124              	.LBI956:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12125              		.loc 1 506 13 view .LVU3748
 12126              	.LBB957:
 507:src/keys.c    **** 		return;
 12127              		.loc 1 507 2 view .LVU3749
 507:src/keys.c    **** 		return;
 12128              		.loc 1 507 6 is_stmt 0 view .LVU3750
 12129 1daa FFF7FEFF 		bl	is_bad_cmdline
 12130              	.LVL1011:
 507:src/keys.c    **** 		return;
 12131              		.loc 1 507 5 view .LVU3751
 12132 1dae 0446     		mov	r4, r0
 12133              	.LVL1012:
 507:src/keys.c    **** 		return;
 12134              		.loc 1 507 5 view .LVU3752
 12135 1db0 C8BB     		cbnz	r0, .L1246
 12136 1db2 5FFA8BF0 		uxtb	r0, fp
 12137 1db6 FFF7FEFF 		bl	init_arg.part.0
 12138              	.LVL1013:
 12139              	.LBE957:
 12140              	.LBE956:
 12141              	.LBE969:
 12142              	.LBE1205:
 12143              	.LBE1261:
 12144              	.LBE1333:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 12145              		.loc 1 3014 7 view .LVU3753
 12146 1dba 2546     		mov	r5, r4
 12147 1dbc 3268     		ldr	r2, [r6]
 12148              	.LBB1334:
 12149              	.LBB1262:
 12150              	.LBB1206:
 12151              	.LBB970:
 993:src/keys.c    **** 		}
 12152              		.loc 1 993 11 view .LVU3754
 12153 1dbe 4FF0330B 		mov	fp, #51
 12154              	.LVL1014:
 993:src/keys.c    **** 		}
 12155              		.loc 1 993 11 view .LVU3755
 12156 1dc2 FEF776B9 		b	.L616
 12157              	.LVL1015:
 12158              	.L839:
 993:src/keys.c    **** 		}
 12159              		.loc 1 993 11 view .LVU3756
 12160              	.LBE970:
 12161              	.LBE1206:
 12162              	.LBB1207:
 12163              	.LBB1124:
1186:src/keys.c    **** 			break;
 12164              		.loc 1 1186 4 is_stmt 1 view .LVU3757
 12165              	.LBB1115:
 12166              	.LBI1115:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12167              		.loc 1 94 20 view .LVU3758
ARM GAS  /tmp/ccsJYix0.s 			page 334


 12168              	.LBB1116:
  95:src/keys.c    **** 	State2.shifts = shift;
 12169              		.loc 1 95 2 view .LVU3759
 12170              	.LBB1117:
 12171              	.LBI1117:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12172              		.loc 1 86 13 view .LVU3760
 12173              	.LBB1118:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12174              		.loc 1 87 2 view .LVU3761
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12175              		.loc 1 87 18 is_stmt 0 view .LVU3762
 12176 1dc6 FFF7FEFF 		bl	shift_down
 12177              	.LVL1016:
  88:src/keys.c    **** }
 12178              		.loc 1 88 2 is_stmt 1 view .LVU3763
 12179              	.LBE1118:
 12180              	.LBE1117:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12181              		.loc 1 96 2 view .LVU3764
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12182              		.loc 1 96 16 is_stmt 0 view .LVU3765
 12183 1dca 88F810A0 		strb	r10, [r8, #16]
  98:src/keys.c    **** }
 12184              		.loc 1 98 2 is_stmt 1 view .LVU3766
  98:src/keys.c    **** }
 12185              		.loc 1 98 9 is_stmt 0 view .LVU3767
 12186 1dce FEF737BB 		b	.L646
 12187              	.L1270:
 12188 1dd2 00BF     		.align	2
 12189              	.L1269:
 12190 1dd4 00000000 		.word	main_ram
 12191 1dd8 00000000 		.word	NonProgrammable
 12192              	.LVL1017:
 12193              	.L1229:
  98:src/keys.c    **** }
 12194              		.loc 1 98 9 view .LVU3768
 12195              	.LBE1116:
 12196              	.LBE1115:
1176:src/keys.c    **** 		State2.hyp = 1;
 12197              		.loc 1 1176 3 is_stmt 1 view .LVU3769
 12198 1ddc FFF7FEFF 		bl	process_cmdline_set_lift
 12199              	.LVL1018:
1177:src/keys.c    **** 		State2.dot = op;
 12200              		.loc 1 1177 3 view .LVU3770
1178:src/keys.c    **** 		State2.cmplx = 1;
 12201              		.loc 1 1178 3 view .LVU3771
1179:src/keys.c    **** 		return STATE_UNFINISHED;
 12202              		.loc 1 1179 3 view .LVU3772
1179:src/keys.c    **** 		return STATE_UNFINISHED;
 12203              		.loc 1 1179 16 is_stmt 0 view .LVU3773
 12204 1de0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12205 1de4 3268     		ldr	r2, [r6]
 12206 1de6 0BF00103 		and	r3, fp, #1
 12207 1dea 9B01     		lsls	r3, r3, #6
 12208 1dec 43F02203 		orr	r3, r3, #34
 12209 1df0 21F06201 		bic	r1, r1, #98
ARM GAS  /tmp/ccsJYix0.s 			page 335


 12210 1df4 0B43     		orrs	r3, r3, r1
 12211 1df6 88F81530 		strb	r3, [r8, #21]
1180:src/keys.c    **** 	}
 12212              		.loc 1 1180 3 is_stmt 1 view .LVU3774
1180:src/keys.c    **** 	}
 12213              		.loc 1 1180 10 is_stmt 0 view .LVU3775
 12214 1dfa 4FF0330B 		mov	fp, #51
 12215              	.LVL1019:
1180:src/keys.c    **** 	}
 12216              		.loc 1 1180 10 view .LVU3776
 12217 1dfe FEF758B9 		b	.L616
 12218              	.LVL1020:
 12219              	.L1228:
1171:src/keys.c    **** 		return STATE_UNFINISHED;
 12220              		.loc 1 1171 3 is_stmt 1 view .LVU3777
 12221              	.LBB1119:
 12222              	.LBI1119:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12223              		.loc 1 506 13 view .LVU3778
 12224              	.LBB1120:
 507:src/keys.c    **** 		return;
 12225              		.loc 1 507 2 view .LVU3779
 507:src/keys.c    **** 		return;
 12226              		.loc 1 507 6 is_stmt 0 view .LVU3780
 12227 1e02 FFF7FEFF 		bl	is_bad_cmdline
 12228              	.LVL1021:
 507:src/keys.c    **** 		return;
 12229              		.loc 1 507 5 view .LVU3781
 12230 1e06 0446     		mov	r4, r0
 12231 1e08 90B9     		cbnz	r0, .L1247
 12232 1e0a 5FFA8BF0 		uxtb	r0, fp
 12233 1e0e FFF7FEFF 		bl	init_arg.part.0
 12234              	.LVL1022:
 12235              	.LBE1120:
 12236              	.LBE1119:
 12237              	.LBE1124:
 12238              	.LBE1207:
 12239              	.LBE1262:
 12240              	.LBE1334:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 12241              		.loc 1 3014 7 view .LVU3782
 12242 1e12 2546     		mov	r5, r4
 12243 1e14 3268     		ldr	r2, [r6]
 12244              	.LBB1335:
 12245              	.LBB1263:
 12246              	.LBB1208:
 12247              	.LBB1125:
1172:src/keys.c    **** 	}
 12248              		.loc 1 1172 10 view .LVU3783
 12249 1e16 4FF0330B 		mov	fp, #51
 12250              	.LVL1023:
1172:src/keys.c    **** 	}
 12251              		.loc 1 1172 10 view .LVU3784
 12252 1e1a FEF74AB9 		b	.L616
 12253              	.LVL1024:
 12254              	.L838:
1200:src/keys.c    **** 			break;
ARM GAS  /tmp/ccsJYix0.s 			page 336


 12255              		.loc 1 1200 4 is_stmt 1 view .LVU3785
 12256 1e1e FFF7FEFF 		bl	init_state
 12257              	.LVL1025:
1201:src/keys.c    **** 
 12258              		.loc 1 1201 4 view .LVU3786
 12259 1e22 FEF70DBB 		b	.L646
 12260              	.LVL1026:
 12261              	.L1246:
1201:src/keys.c    **** 
 12262              		.loc 1 1201 4 is_stmt 0 view .LVU3787
 12263 1e26 3268     		ldr	r2, [r6]
 12264              	.LBE1125:
 12265              	.LBE1208:
 12266              	.LBB1209:
 12267              	.LBB971:
 993:src/keys.c    **** 		}
 12268              		.loc 1 993 11 view .LVU3788
 12269 1e28 4FF0330B 		mov	fp, #51
 12270              	.LVL1027:
 993:src/keys.c    **** 		}
 12271              		.loc 1 993 11 view .LVU3789
 12272 1e2c FEF741B9 		b	.L616
 12273              	.LVL1028:
 12274              	.L1247:
 993:src/keys.c    **** 		}
 12275              		.loc 1 993 11 view .LVU3790
 12276 1e30 3268     		ldr	r2, [r6]
 12277              	.LBE971:
 12278              	.LBE1209:
 12279              	.LBB1210:
 12280              	.LBB1126:
1172:src/keys.c    **** 	}
 12281              		.loc 1 1172 10 view .LVU3791
 12282 1e32 4FF0330B 		mov	fp, #51
 12283              	.LVL1029:
1172:src/keys.c    **** 	}
 12284              		.loc 1 1172 10 view .LVU3792
 12285 1e36 FEF73CB9 		b	.L616
 12286              	.LVL1030:
 12287              	.L888:
1172:src/keys.c    **** 	}
 12288              		.loc 1 1172 10 view .LVU3793
 12289              	.LBE1126:
 12290              	.LBE1210:
 12291              	.LBE1263:
 12292              	.LBE1335:
3235:src/keys.c    **** 	NonProgrammable = 0;
 12293              		.loc 1 3235 7 is_stmt 1 view .LVU3794
3235:src/keys.c    **** 	NonProgrammable = 0;
 12294              		.loc 1 3235 11 is_stmt 0 view .LVU3795
 12295 1e3a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3235:src/keys.c    **** 	NonProgrammable = 0;
 12296              		.loc 1 3235 10 view .LVU3796
 12297 1e3e 5806     		lsls	r0, r3, #25
 12298 1e40 12D5     		bpl	.L986
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12299              		.loc 1 3236 2 is_stmt 1 view .LVU3797
ARM GAS  /tmp/ccsJYix0.s 			page 337


3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12300              		.loc 1 3236 18 is_stmt 0 view .LVU3798
 12301 1e42 534B     		ldr	r3, .L1271
 12302 1e44 0022     		movs	r2, #0
 12303              	.LBB1336:
 12304              	.LBB1264:
 12305              	.LBB1211:
 12306              	.LBB691:
 738:src/keys.c    **** 	    }
 12307              		.loc 1 738 15 view .LVU3799
 12308 1e46 4FF00F0B 		mov	fp, #15
 12309              	.LBE691:
 12310              	.LBE1211:
 12311              	.LBE1264:
 12312              	.LBE1336:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12313              		.loc 1 3236 18 view .LVU3800
 12314 1e4a 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12315              		.loc 1 3237 2 is_stmt 1 view .LVU3801
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12316              		.loc 1 3237 32 is_stmt 0 view .LVU3802
 12317 1e4c 5846     		mov	r0, fp
 12318 1e4e FEF7BBBC 		b	.L925
 12319              	.LVL1031:
 12320              	.L901:
 12321              	.LBB1337:
 12322              	.LBB1265:
 12323              	.LBB1212:
 12324              	.LBB692:
 817:src/keys.c    **** #else
 12325              		.loc 1 817 4 is_stmt 1 view .LVU3803
 817:src/keys.c    **** #else
 12326              		.loc 1 817 17 is_stmt 0 view .LVU3804
 12327 1e52 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 12328 1e56 3268     		ldr	r2, [r6]
 12329 1e58 43F00203 		orr	r3, r3, #2
 12330 1e5c 88F81530 		strb	r3, [r8, #21]
 823:src/keys.c    **** 
 12331              		.loc 1 823 4 is_stmt 1 view .LVU3805
 841:src/keys.c    **** }
 12332              		.loc 1 841 9 is_stmt 0 view .LVU3806
 12333 1e60 4FF0330B 		mov	fp, #51
 823:src/keys.c    **** 
 12334              		.loc 1 823 4 view .LVU3807
 12335 1e64 FEF725B9 		b	.L616
 12336              	.LVL1032:
 12337              	.L986:
 738:src/keys.c    **** 	    }
 12338              		.loc 1 738 15 view .LVU3808
 12339 1e68 4FF00F0B 		mov	fp, #15
 12340 1e6c 3FE6     		b	.L924
 12341              	.LVL1033:
 12342              	.L900:
 802:src/keys.c    **** 		State2.arrow = 1;
 12343              		.loc 1 802 3 is_stmt 1 view .LVU3809
 12344 1e6e FFF7FEFF 		bl	process_cmdline_set_lift
ARM GAS  /tmp/ccsJYix0.s 			page 338


 12345              	.LVL1034:
 803:src/keys.c    **** #ifdef DM42
 12346              		.loc 1 803 3 view .LVU3810
 803:src/keys.c    **** #ifdef DM42
 12347              		.loc 1 803 16 is_stmt 0 view .LVU3811
 12348 1e72 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 805:src/keys.c    **** 		display_current_menu ();
 12349              		.loc 1 805 3 view .LVU3812
 12350 1e76 0920     		movs	r0, #9
 803:src/keys.c    **** #ifdef DM42
 12351              		.loc 1 803 16 view .LVU3813
 12352 1e78 43F00403 		orr	r3, r3, #4
 12353 1e7c 88F81530 		strb	r3, [r8, #21]
 805:src/keys.c    **** 		display_current_menu ();
 12354              		.loc 1 805 3 is_stmt 1 view .LVU3814
 12355 1e80 FFF7FEFF 		bl	set_menu
 12356              	.LVL1035:
 806:src/keys.c    **** 		lcd_refresh ();
 12357              		.loc 1 806 3 view .LVU3815
 12358 1e84 FFF7FEFF 		bl	display_current_menu
 12359              	.LVL1036:
 807:src/keys.c    **** #else
 12360              		.loc 1 807 3 view .LVU3816
 12361 1e88 424B     		ldr	r3, .L1271+4
 12362 1e8a 9847     		blx	r3
 12363              	.LVL1037:
 811:src/keys.c    **** 
 12364              		.loc 1 811 3 view .LVU3817
 12365              	.LBE692:
 12366              	.LBE1212:
 12367              	.LBE1265:
 12368              	.LBE1337:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 12369              		.loc 1 3014 7 is_stmt 0 view .LVU3818
 12370 1e8c 2546     		mov	r5, r4
 12371 1e8e 3268     		ldr	r2, [r6]
 12372              	.LBB1338:
 12373              	.LBB1266:
 12374              	.LBB1213:
 12375              	.LBB693:
 841:src/keys.c    **** }
 12376              		.loc 1 841 9 view .LVU3819
 12377 1e90 4FF0330B 		mov	fp, #51
 811:src/keys.c    **** 
 12378              		.loc 1 811 3 view .LVU3820
 12379 1e94 FEF70DB9 		b	.L616
 12380              	.LVL1038:
 12381              	.L889:
 811:src/keys.c    **** 
 12382              		.loc 1 811 3 view .LVU3821
 12383              	.LBE693:
 12384              	.LBE1213:
 12385              	.LBE1266:
 12386              	.LBE1338:
3235:src/keys.c    **** 	NonProgrammable = 0;
 12387              		.loc 1 3235 7 is_stmt 1 view .LVU3822
3235:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccsJYix0.s 			page 339


 12388              		.loc 1 3235 11 is_stmt 0 view .LVU3823
 12389 1e98 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3235:src/keys.c    **** 	NonProgrammable = 0;
 12390              		.loc 1 3235 10 view .LVU3824
 12391 1e9c 5B06     		lsls	r3, r3, #25
 12392 1e9e 64D5     		bpl	.L983
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12393              		.loc 1 3236 2 is_stmt 1 view .LVU3825
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12394              		.loc 1 3236 18 is_stmt 0 view .LVU3826
 12395 1ea0 3B4B     		ldr	r3, .L1271
 12396 1ea2 0022     		movs	r2, #0
 12397              	.LBB1339:
 12398              	.LBB1267:
 12399              	.LBB1214:
 12400              	.LBB694:
 746:src/keys.c    **** 	    }
 12401              		.loc 1 746 15 view .LVU3827
 12402 1ea4 4FF0100B 		mov	fp, #16
 12403              	.LBE694:
 12404              	.LBE1214:
 12405              	.LBE1267:
 12406              	.LBE1339:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12407              		.loc 1 3236 18 view .LVU3828
 12408 1ea8 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12409              		.loc 1 3237 2 is_stmt 1 view .LVU3829
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12410              		.loc 1 3237 32 is_stmt 0 view .LVU3830
 12411 1eaa 5846     		mov	r0, fp
 12412 1eac FEF78CBC 		b	.L925
 12413              	.LVL1039:
 12414              	.L1188:
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12415              		.loc 1 3236 2 is_stmt 1 view .LVU3831
3236:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12416              		.loc 1 3236 18 is_stmt 0 view .LVU3832
 12417 1eb0 0022     		movs	r2, #0
 12418 1eb2 1A60     		str	r2, [r3]
3237:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12419              		.loc 1 3237 2 is_stmt 1 view .LVU3833
 12420 1eb4 FEF7DEBB 		b	.L923
 12421              	.LVL1040:
 12422              	.L812:
 12423              	.LBB1340:
 12424              	.LBB1268:
 12425              	.LBB1215:
 12426              	.LBB1089:
1420:src/keys.c    **** 			init_arg(RARG_ARCL);
 12427              		.loc 1 1420 3 view .LVU3834
1420:src/keys.c    **** 			init_arg(RARG_ARCL);
 12428              		.loc 1 1420 6 is_stmt 0 view .LVU3835
 12429 1eb8 0128     		cmp	r0, #1
 12430 1eba 3FD0     		beq	.L1248
1423:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12431              		.loc 1 1423 10 is_stmt 1 view .LVU3836
ARM GAS  /tmp/ccsJYix0.s 			page 340


1423:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12432              		.loc 1 1423 13 is_stmt 0 view .LVU3837
 12433 1ebc 0328     		cmp	r0, #3
 12434 1ebe 7FF475AA 		bne	.L804
1424:src/keys.c    **** 			return STATE_UNFINISHED;
 12435              		.loc 1 1424 4 is_stmt 1 view .LVU3838
 12436              	.LVL1041:
 12437              	.LBB1070:
 12438              	.LBI1070:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12439              		.loc 1 506 13 view .LVU3839
 12440              	.LBB1071:
 507:src/keys.c    **** 		return;
 12441              		.loc 1 507 2 view .LVU3840
 507:src/keys.c    **** 		return;
 12442              		.loc 1 507 6 is_stmt 0 view .LVU3841
 12443 1ec2 FFF7FEFF 		bl	is_bad_cmdline
 12444              	.LVL1042:
 507:src/keys.c    **** 		return;
 12445              		.loc 1 507 5 view .LVU3842
 12446 1ec6 0346     		mov	r3, r0
 12447 1ec8 C0B9     		cbnz	r0, .L1249
 12448 1eca 7320     		movs	r0, #115
 12449              	.LBE1071:
 12450              	.LBE1070:
 12451              	.LBE1089:
 12452              	.LBE1215:
 12453              	.LBE1268:
 12454              	.LBE1340:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 12455              		.loc 1 3014 7 view .LVU3843
 12456 1ecc 1D46     		mov	r5, r3
 12457              	.LBB1341:
 12458              	.LBB1269:
 12459              	.LBB1216:
 12460              	.LBB1090:
1425:src/keys.c    **** 		}
 12461              		.loc 1 1425 11 view .LVU3844
 12462 1ece 4FF0330B 		mov	fp, #51
 12463              	.LBB1073:
 12464              	.LBB1072:
 12465 1ed2 FFF7FEFF 		bl	init_arg.part.0
 12466              	.LVL1043:
 12467 1ed6 3268     		ldr	r2, [r6]
 12468 1ed8 FEF7EBB8 		b	.L616
 12469              	.LVL1044:
 12470              	.L813:
1425:src/keys.c    **** 		}
 12471              		.loc 1 1425 11 view .LVU3845
 12472              	.LBE1072:
 12473              	.LBE1073:
1413:src/keys.c    **** 			init_arg(RARG_ASTO);
 12474              		.loc 1 1413 3 is_stmt 1 view .LVU3846
1413:src/keys.c    **** 			init_arg(RARG_ASTO);
 12475              		.loc 1 1413 6 is_stmt 0 view .LVU3847
 12476 1edc 0128     		cmp	r0, #1
 12477 1ede 7FF465AA 		bne	.L804
ARM GAS  /tmp/ccsJYix0.s 			page 341


1414:src/keys.c    **** 			return STATE_UNFINISHED;
 12478              		.loc 1 1414 4 is_stmt 1 view .LVU3848
 12479              	.LVL1045:
 12480              	.LBB1074:
 12481              	.LBI1074:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12482              		.loc 1 506 13 view .LVU3849
 12483              	.LBB1075:
 507:src/keys.c    **** 		return;
 12484              		.loc 1 507 2 view .LVU3850
 507:src/keys.c    **** 		return;
 12485              		.loc 1 507 6 is_stmt 0 view .LVU3851
 12486 1ee2 FFF7FEFF 		bl	is_bad_cmdline
 12487              	.LVL1046:
 507:src/keys.c    **** 		return;
 12488              		.loc 1 507 5 view .LVU3852
 12489 1ee6 0346     		mov	r3, r0
 12490 1ee8 A8BB     		cbnz	r0, .L1250
 12491 1eea 2620     		movs	r0, #38
 12492              	.LBE1075:
 12493              	.LBE1074:
 12494              	.LBE1090:
 12495              	.LBE1216:
 12496              	.LBE1269:
 12497              	.LBE1341:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 12498              		.loc 1 3014 7 view .LVU3853
 12499 1eec 1D46     		mov	r5, r3
 12500              	.LBB1342:
 12501              	.LBB1270:
 12502              	.LBB1217:
 12503              	.LBB1091:
1415:src/keys.c    **** 		}
 12504              		.loc 1 1415 11 view .LVU3854
 12505 1eee 4FF0330B 		mov	fp, #51
 12506              	.LBB1077:
 12507              	.LBB1076:
 12508 1ef2 FFF7FEFF 		bl	init_arg.part.0
 12509              	.LVL1047:
 12510 1ef6 3268     		ldr	r2, [r6]
 12511 1ef8 FEF7DBB8 		b	.L616
 12512              	.LVL1048:
 12513              	.L1249:
1415:src/keys.c    **** 		}
 12514              		.loc 1 1415 11 view .LVU3855
 12515 1efc 3268     		ldr	r2, [r6]
 12516              	.LBE1076:
 12517              	.LBE1077:
1425:src/keys.c    **** 		}
 12518              		.loc 1 1425 11 view .LVU3856
 12519 1efe 4FF0330B 		mov	fp, #51
 12520 1f02 FEF7D6B8 		b	.L616
 12521              	.LVL1049:
 12522              	.L811:
1430:src/keys.c    **** 			break;
 12523              		.loc 1 1430 3 is_stmt 1 view .LVU3857
1430:src/keys.c    **** 			break;
ARM GAS  /tmp/ccsJYix0.s 			page 342


 12524              		.loc 1 1430 24 is_stmt 0 view .LVU3858
 12525 1f06 821E     		subs	r2, r0, #2
1430:src/keys.c    **** 			break;
 12526              		.loc 1 1430 6 view .LVU3859
 12527 1f08 D2B2     		uxtb	r2, r2
 12528 1f0a 012A     		cmp	r2, #1
 12529 1f0c 7FF64EAA 		bls	.L804
1432:src/keys.c    **** 			State2.multi = 1;
 12530              		.loc 1 1432 3 is_stmt 1 view .LVU3860
1432:src/keys.c    **** 			State2.multi = 1;
 12531              		.loc 1 1432 6 is_stmt 0 view .LVU3861
 12532 1f10 0128     		cmp	r0, #1
 12533 1f12 02D1     		bne	.L818
1432:src/keys.c    **** 			State2.multi = 1;
 12534              		.loc 1 1432 24 view .LVU3862
 12535 1f14 13F04002 		ands	r2, r3, #64
 12536 1f18 2AD0     		beq	.L1251
 12537              	.L818:
1438:src/keys.c    **** 		State2.alphashift = 0;
 12538              		.loc 1 1438 3 is_stmt 1 view .LVU3863
1439:src/keys.c    **** #ifdef DM42
 12539              		.loc 1 1439 3 view .LVU3864
1438:src/keys.c    **** 		State2.alphashift = 0;
 12540              		.loc 1 1438 17 is_stmt 0 view .LVU3865
 12541 1f1a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1441:src/keys.c    **** 		display_current_menu();
 12542              		.loc 1 1441 3 view .LVU3866
 12543 1f1e 4FF0FF30 		mov	r0, #-1
 12544              	.LVL1050:
1438:src/keys.c    **** 		State2.alphashift = 0;
 12545              		.loc 1 1438 17 view .LVU3867
 12546 1f22 23F01803 		bic	r3, r3, #24
 12547 1f26 88F81630 		strb	r3, [r8, #22]
1441:src/keys.c    **** 		display_current_menu();
 12548              		.loc 1 1441 3 is_stmt 1 view .LVU3868
1444:src/keys.c    **** 
 12549              		.loc 1 1444 10 is_stmt 0 view .LVU3869
 12550 1f2a 4FF0330B 		mov	fp, #51
1441:src/keys.c    **** 		display_current_menu();
 12551              		.loc 1 1441 3 view .LVU3870
 12552 1f2e FFF7FEFF 		bl	set_menu
 12553              	.LVL1051:
1442:src/keys.c    **** #endif
 12554              		.loc 1 1442 3 is_stmt 1 view .LVU3871
 12555 1f32 FFF7FEFF 		bl	display_current_menu
 12556              	.LVL1052:
1444:src/keys.c    **** 
 12557              		.loc 1 1444 3 view .LVU3872
 12558 1f36 3268     		ldr	r2, [r6]
1444:src/keys.c    **** 
 12559              		.loc 1 1444 10 is_stmt 0 view .LVU3873
 12560 1f38 FEF7BBB8 		b	.L616
 12561              	.LVL1053:
 12562              	.L1248:
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 12563              		.loc 1 1421 4 is_stmt 1 view .LVU3874
 12564              	.LBB1078:
ARM GAS  /tmp/ccsJYix0.s 			page 343


 12565              	.LBI1078:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12566              		.loc 1 506 13 view .LVU3875
 12567              	.LBB1079:
 507:src/keys.c    **** 		return;
 12568              		.loc 1 507 2 view .LVU3876
 507:src/keys.c    **** 		return;
 12569              		.loc 1 507 6 is_stmt 0 view .LVU3877
 12570 1f3c FFF7FEFF 		bl	is_bad_cmdline
 12571              	.LVL1054:
 507:src/keys.c    **** 		return;
 12572              		.loc 1 507 5 view .LVU3878
 12573 1f40 0346     		mov	r3, r0
 12574 1f42 68B9     		cbnz	r0, .L1252
 12575 1f44 2720     		movs	r0, #39
 12576              	.LBE1079:
 12577              	.LBE1078:
 12578              	.LBE1091:
 12579              	.LBE1217:
 12580              	.LBE1270:
 12581              	.LBE1342:
3014:src/keys.c    ****   if (was_paused && Pause == 0)
 12582              		.loc 1 3014 7 view .LVU3879
 12583 1f46 1D46     		mov	r5, r3
 12584              	.LBB1343:
 12585              	.LBB1271:
 12586              	.LBB1218:
 12587              	.LBB1092:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12588              		.loc 1 1422 11 view .LVU3880
 12589 1f48 4FF0330B 		mov	fp, #51
 12590              	.LBB1081:
 12591              	.LBB1080:
 12592 1f4c FFF7FEFF 		bl	init_arg.part.0
 12593              	.LVL1055:
 12594 1f50 3268     		ldr	r2, [r6]
 12595 1f52 FEF7AEB8 		b	.L616
 12596              	.LVL1056:
 12597              	.L1250:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12598              		.loc 1 1422 11 view .LVU3881
 12599 1f56 3268     		ldr	r2, [r6]
 12600              	.LBE1080:
 12601              	.LBE1081:
1415:src/keys.c    **** 		}
 12602              		.loc 1 1415 11 view .LVU3882
 12603 1f58 4FF0330B 		mov	fp, #51
 12604 1f5c FEF7A9B8 		b	.L616
 12605              	.LVL1057:
 12606              	.L1252:
1415:src/keys.c    **** 		}
 12607              		.loc 1 1415 11 view .LVU3883
 12608 1f60 3268     		ldr	r2, [r6]
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12609              		.loc 1 1422 11 view .LVU3884
 12610 1f62 4FF0330B 		mov	fp, #51
 12611 1f66 FEF7A4B8 		b	.L616
ARM GAS  /tmp/ccsJYix0.s 			page 344


 12612              	.LVL1058:
 12613              	.L983:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12614              		.loc 1 1422 11 view .LVU3885
 12615              	.LBE1092:
 12616              	.LBE1218:
 12617              	.LBB1219:
 12618              	.LBB695:
 746:src/keys.c    **** 	    }
 12619              		.loc 1 746 15 view .LVU3886
 12620 1f6a 4FF0100B 		mov	fp, #16
 12621 1f6e BEE5     		b	.L924
 12622              	.LVL1059:
 12623              	.L1251:
 746:src/keys.c    **** 	    }
 12624              		.loc 1 746 15 view .LVU3887
 12625              	.LBE695:
 12626              	.LBE1219:
 12627              	.LBB1220:
 12628              	.LBB1093:
1433:src/keys.c    **** 			State2.numdigit = 0;
 12629              		.loc 1 1433 4 is_stmt 1 view .LVU3888
1433:src/keys.c    **** 			State2.numdigit = 0;
 12630              		.loc 1 1433 17 is_stmt 0 view .LVU3889
 12631 1f70 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1434:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12632              		.loc 1 1434 20 view .LVU3890
 12633 1f74 88F80B20 		strb	r2, [r8, #11]
1433:src/keys.c    **** 			State2.numdigit = 0;
 12634              		.loc 1 1433 17 view .LVU3891
 12635 1f78 43F00803 		orr	r3, r3, #8
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12636              		.loc 1 1435 12 view .LVU3892
 12637 1f7c 0A21     		movs	r1, #10
 12638              	.LVL1060:
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12639              		.loc 1 1435 12 view .LVU3893
 12640 1f7e 3268     		ldr	r2, [r6]
 12641 1f80 88F81F10 		strb	r1, [r8, #31]
1433:src/keys.c    **** 			State2.numdigit = 0;
 12642              		.loc 1 1433 17 view .LVU3894
 12643 1f84 88F81530 		strb	r3, [r8, #21]
1434:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12644              		.loc 1 1434 4 is_stmt 1 view .LVU3895
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12645              		.loc 1 1435 4 view .LVU3896
1436:src/keys.c    **** 		}
 12646              		.loc 1 1436 4 view .LVU3897
1436:src/keys.c    **** 		}
 12647              		.loc 1 1436 11 is_stmt 0 view .LVU3898
 12648 1f88 4FF0330B 		mov	fp, #51
 12649 1f8c FEF791B8 		b	.L616
 12650              	.L1272:
 12651              		.align	2
 12652              	.L1271:
 12653 1f90 00000000 		.word	NonProgrammable
 12654 1f94 31020008 		.word	134218289
ARM GAS  /tmp/ccsJYix0.s 			page 345


 12655              	.LBE1093:
 12656              	.LBE1220:
 12657              	.LBE1271:
 12658              	.LBE1343:
 12659              		.cfi_endproc
 12660              	.LFE58:
 12662              		.section	.text.process_keycode_with_shift,"ax",%progbits
 12663              		.align	1
 12664              		.p2align 2,,3
 12665              		.global	process_keycode_with_shift
 12666              		.syntax unified
 12667              		.thumb
 12668              		.thumb_func
 12669              		.fpu fpv4-sp-d16
 12671              	process_keycode_with_shift:
 12672              	.LFB57:
2988:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12673              		.loc 1 2988 61 is_stmt 1 view -0
 12674              		.cfi_startproc
 12675              		@ args = 0, pretend = 0, frame = 8
 12676              		@ frame_needed = 0, uses_anonymous_args = 0
 12677 0000 30B5     		push	{r4, r5, lr}
 12678              		.cfi_def_cfa_offset 12
 12679              		.cfi_offset 4, -12
 12680              		.cfi_offset 5, -8
 12681              		.cfi_offset 14, -4
 12682 0002 83B0     		sub	sp, sp, #12
 12683              		.cfi_def_cfa_offset 24
2988:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12684              		.loc 1 2988 61 is_stmt 0 view .LVU3900
 12685 0004 02AB     		add	r3, sp, #8
 12686 0006 03E90300 		stmdb	r3, {r0, r1}
 12687 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 12688              	.LVL1061:
2989:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12689              		.loc 1 2989 4 is_stmt 1 view .LVU3901
2989:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12690              		.loc 1 2989 7 is_stmt 0 view .LVU3902
 12691 000e 2E2C     		cmp	r4, #46
 12692 0010 10D0     		beq	.L1273
2990:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12693              		.loc 1 2990 4 is_stmt 1 view .LVU3903
2990:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12694              		.loc 1 2990 7 is_stmt 0 view .LVU3904
 12695 0012 332C     		cmp	r4, #51
 12696 0014 1DD0     		beq	.L1280
2999:src/keys.c    ****      nd_opcode = remapped.shift;
 12697              		.loc 1 2999 7 view .LVU3905
 12698 0016 342C     		cmp	r4, #52
 12699 0018 019D     		ldr	r5, [sp, #4]
2999:src/keys.c    ****      nd_opcode = remapped.shift;
 12700              		.loc 1 2999 4 is_stmt 1 view .LVU3906
2999:src/keys.c    ****      nd_opcode = remapped.shift;
 12701              		.loc 1 2999 7 is_stmt 0 view .LVU3907
 12702 001a 0DD0     		beq	.L1281
3003:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12703              		.loc 1 3003 9 is_stmt 1 view .LVU3908
ARM GAS  /tmp/ccsJYix0.s 			page 346


3003:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12704              		.loc 1 3003 12 is_stmt 0 view .LVU3909
 12705 001c 002D     		cmp	r5, #0
 12706 001e 03DB     		blt	.L1278
3003:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12707              		.loc 1 3003 34 is_stmt 1 discriminator 1 view .LVU3910
 12708              	.LVL1062:
 12709              	.LBB1344:
 12710              	.LBI1344:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12711              		.loc 1 94 20 discriminator 1 view .LVU3911
 12712              	.LBB1345:
  95:src/keys.c    **** 	State2.shifts = shift;
 12713              		.loc 1 95 2 discriminator 1 view .LVU3912
 12714              	.LBB1346:
 12715              	.LBI1346:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12716              		.loc 1 86 13 discriminator 1 view .LVU3913
 12717              	.LBB1347:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12718              		.loc 1 87 2 discriminator 1 view .LVU3914
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12719              		.loc 1 87 18 is_stmt 0 discriminator 1 view .LVU3915
 12720 0020 FFF7FEFF 		bl	shift_down
 12721              	.LVL1063:
  88:src/keys.c    **** }
 12722              		.loc 1 88 2 is_stmt 1 discriminator 1 view .LVU3916
 12723              	.LBE1347:
 12724              	.LBE1346:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12725              		.loc 1 96 2 discriminator 1 view .LVU3917
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12726              		.loc 1 96 16 is_stmt 0 discriminator 1 view .LVU3918
 12727 0024 194B     		ldr	r3, .L1282
 12728              	.LBE1345:
 12729              	.LBE1344:
3003:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12730              		.loc 1 3003 34 discriminator 1 view .LVU3919
 12731 0026 1D74     		strb	r5, [r3, #16]
 12732              	.LBB1349:
 12733              	.LBB1348:
  98:src/keys.c    **** }
 12734              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU3920
 12735              	.LVL1064:
 12736              	.L1278:
  98:src/keys.c    **** }
 12737              		.loc 1 98 2 is_stmt 0 discriminator 1 view .LVU3921
 12738              	.LBE1348:
 12739              	.LBE1349:
3004:src/keys.c    ****  }
 12740              		.loc 1 3004 4 is_stmt 1 view .LVU3922
 12741 0028 2046     		mov	r0, r4
3005:src/keys.c    ****  
 12742              		.loc 1 3005 2 is_stmt 0 view .LVU3923
 12743 002a 03B0     		add	sp, sp, #12
 12744              		.cfi_remember_state
 12745              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccsJYix0.s 			page 347


 12746              		@ sp needed
 12747 002c BDE83040 		pop	{r4, r5, lr}
 12748              		.cfi_restore 14
 12749              		.cfi_restore 5
 12750              		.cfi_restore 4
 12751              		.cfi_def_cfa_offset 0
 12752              	.LVL1065:
3004:src/keys.c    ****  }
 12753              		.loc 1 3004 4 view .LVU3924
 12754 0030 FFF7FEBF 		b	process_keycode
 12755              	.LVL1066:
 12756              	.L1273:
 12757              		.cfi_restore_state
3005:src/keys.c    ****  
 12758              		.loc 1 3005 2 view .LVU3925
 12759 0034 03B0     		add	sp, sp, #12
 12760              		.cfi_remember_state
 12761              		.cfi_def_cfa_offset 12
 12762              		@ sp needed
 12763 0036 30BD     		pop	{r4, r5, pc}
 12764              	.LVL1067:
 12765              	.L1281:
 12766              		.cfi_restore_state
3000:src/keys.c    ****      set_shift(SHIFT_N);
 12767              		.loc 1 3000 6 is_stmt 1 view .LVU3926
3000:src/keys.c    ****      set_shift(SHIFT_N);
 12768              		.loc 1 3000 16 is_stmt 0 view .LVU3927
 12769 0038 154B     		ldr	r3, .L1282+4
 12770 003a 1D60     		str	r5, [r3]
3001:src/keys.c    ****    }
 12771              		.loc 1 3001 6 is_stmt 1 view .LVU3928
 12772              	.LVL1068:
 12773              	.LBB1350:
 12774              	.LBI1350:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12775              		.loc 1 94 20 view .LVU3929
 12776              	.LBB1351:
  95:src/keys.c    **** 	State2.shifts = shift;
 12777              		.loc 1 95 2 view .LVU3930
 12778              	.LBB1352:
 12779              	.LBI1352:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12780              		.loc 1 86 13 view .LVU3931
 12781              	.LBB1353:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12782              		.loc 1 87 2 view .LVU3932
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12783              		.loc 1 87 18 is_stmt 0 view .LVU3933
 12784 003c FFF7FEFF 		bl	shift_down
 12785              	.LVL1069:
  88:src/keys.c    **** }
 12786              		.loc 1 88 2 is_stmt 1 view .LVU3934
 12787              	.LBE1353:
 12788              	.LBE1352:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12789              		.loc 1 96 2 view .LVU3935
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccsJYix0.s 			page 348


 12790              		.loc 1 96 16 is_stmt 0 view .LVU3936
 12791 0040 124B     		ldr	r3, .L1282
 12792 0042 0022     		movs	r2, #0
 12793              	.LBE1351:
 12794              	.LBE1350:
3004:src/keys.c    ****  }
 12795              		.loc 1 3004 4 view .LVU3937
 12796 0044 2046     		mov	r0, r4
 12797              	.LBB1355:
 12798              	.LBB1354:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12799              		.loc 1 96 16 view .LVU3938
 12800 0046 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 12801              		.loc 1 98 2 is_stmt 1 view .LVU3939
 12802              	.LVL1070:
  98:src/keys.c    **** }
 12803              		.loc 1 98 2 is_stmt 0 view .LVU3940
 12804              	.LBE1354:
 12805              	.LBE1355:
3004:src/keys.c    ****  }
 12806              		.loc 1 3004 4 is_stmt 1 view .LVU3941
3005:src/keys.c    ****  
 12807              		.loc 1 3005 2 is_stmt 0 view .LVU3942
 12808 0048 03B0     		add	sp, sp, #12
 12809              		.cfi_remember_state
 12810              		.cfi_def_cfa_offset 12
 12811              		@ sp needed
 12812 004a BDE83040 		pop	{r4, r5, lr}
 12813              		.cfi_restore 14
 12814              		.cfi_restore 5
 12815              		.cfi_restore 4
 12816              		.cfi_def_cfa_offset 0
 12817              	.LVL1071:
3004:src/keys.c    ****  }
 12818              		.loc 1 3004 4 view .LVU3943
 12819 004e FFF7FEBF 		b	process_keycode
 12820              	.LVL1072:
 12821              	.L1280:
 12822              		.cfi_restore_state
2991:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12823              		.loc 1 2991 6 is_stmt 1 view .LVU3944
 12824 0052 104B     		ldr	r3, .L1282+8
 12825 0054 41F23010 		movw	r0, #4400
 12826 0058 9847     		blx	r3
 12827              	.LVL1073:
2991:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12828              		.loc 1 2991 31 view .LVU3945
 12829 005a 0A20     		movs	r0, #10
 12830 005c 0E4B     		ldr	r3, .L1282+12
 12831 005e 9847     		blx	r3
 12832              	.LVL1074:
2991:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12833              		.loc 1 2991 46 view .LVU3946
 12834 0060 0E4B     		ldr	r3, .L1282+16
 12835 0062 9847     		blx	r3
 12836              	.LVL1075:
ARM GAS  /tmp/ccsJYix0.s 			page 349


2992:src/keys.c    ****        // Was error just wait for confirmation
 12837              		.loc 1 2992 6 view .LVU3947
2992:src/keys.c    ****        // Was error just wait for confirmation
 12838              		.loc 1 2992 11 is_stmt 0 view .LVU3948
 12839 0064 0E4B     		ldr	r3, .L1282+20
 12840 0066 0120     		movs	r0, #1
 12841 0068 9847     		blx	r3
 12842              	.LVL1076:
2992:src/keys.c    ****        // Was error just wait for confirmation
 12843              		.loc 1 2992 9 view .LVU3949
 12844 006a 0228     		cmp	r0, #2
 12845 006c 01D1     		bne	.L1276
2994:src/keys.c    ****      }
 12846              		.loc 1 2994 8 is_stmt 1 view .LVU3950
 12847 006e 0D4B     		ldr	r3, .L1282+24
 12848 0070 9847     		blx	r3
 12849              	.LVL1077:
 12850              	.L1276:
2996:src/keys.c    ****      return;
 12851              		.loc 1 2996 6 view .LVU3951
 12852 0072 084B     		ldr	r3, .L1282+8
 12853 0074 42F26020 		movw	r0, #8800
 12854 0078 9847     		blx	r3
 12855              	.LVL1078:
2996:src/keys.c    ****      return;
 12856              		.loc 1 2996 31 view .LVU3952
 12857 007a 074B     		ldr	r3, .L1282+12
 12858 007c 0A20     		movs	r0, #10
 12859 007e 9847     		blx	r3
 12860              	.LVL1079:
2996:src/keys.c    ****      return;
 12861              		.loc 1 2996 46 view .LVU3953
 12862 0080 064B     		ldr	r3, .L1282+16
3005:src/keys.c    ****  
 12863              		.loc 1 3005 2 is_stmt 0 view .LVU3954
 12864 0082 03B0     		add	sp, sp, #12
 12865              		.cfi_def_cfa_offset 12
 12866              		@ sp needed
 12867 0084 BDE83040 		pop	{r4, r5, lr}
 12868              		.cfi_restore 14
 12869              		.cfi_restore 5
 12870              		.cfi_restore 4
 12871              		.cfi_def_cfa_offset 0
 12872              	.LVL1080:
2996:src/keys.c    ****      return;
 12873              		.loc 1 2996 46 view .LVU3955
 12874 0088 1847     		bx	r3	@ indirect register sibling call
 12875              	.LVL1081:
 12876              	.L1283:
 12877 008a 00BF     		.align	2
 12878              	.L1282:
 12879 008c 00000000 		.word	StateWhileOn
 12880 0090 00000000 		.word	nd_opcode
 12881 0094 F5020008 		.word	134218485
 12882 0098 05040008 		.word	134218757
 12883 009c F9020008 		.word	134218489
 12884 00a0 79030008 		.word	134218617
ARM GAS  /tmp/ccsJYix0.s 			page 350


 12885 00a4 99030008 		.word	134218649
 12886              		.cfi_endproc
 12887              	.LFE57:
 12889              		.comm	nd_opcode,4,4
 12890              		.comm	NonProgrammable,4,4
 12891              		.comm	GoFast,4,4
 12892              		.comm	OpCodeDisplayPending,4,4
 12893              		.comm	OpCode,4,4
 12894              		.comm	WasDataEntry,4,4
 12895              		.section	.bss.was_paused.9667,"aw",%nobits
 12896              		.align	2
 12897              		.set	.LANCHOR12,. + 0
 12900              	was_paused.9667:
 12901 0000 00000000 		.space	4
 12902              		.section	.rodata.alpha_arrows,"a"
 12903              		.align	2
 12906              	alpha_arrows:
 12907 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 12907      03049F5E 
 12907      7F
 12908              		.section	.rodata.alpha_catalogue,"a"
 12909              		.align	2
 12912              	alpha_catalogue:
 12913 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 12913      9EAE0AA2 
 12913      7EB5AE6B 
 12913      AAEEBC
 12914 000f 284AB0   		.ascii	"(J\260"
 12915              		.section	.rodata.alpha_compares,"a"
 12916              		.align	2
 12919              	alpha_compares:
 12920 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 12920      0A3E5B5D 
 12920      7B7D
 12921              		.section	.rodata.alpha_letters,"a"
 12922              		.align	2
 12923              		.set	.LANCHOR3,. + 0
 12926              	alpha_letters:
 12927 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 12927      88C4C5C6 
 12927      C784C8C9 
 12927      CA
 12928 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 12928      CECFD0D1 
 12928      D2D3D415 
 12928      D5
 12929 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 12929      DADBDC01 
 12929      1902DD1A 
 12929      DE
 12930 0027 DF       		.ascii	"\337"
 12931              		.section	.rodata.alpha_letters_lower,"a"
 12932              		.align	2
 12933              		.set	.LANCHOR4,. + 0
 12936              	alpha_letters_lower:
 12937 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12937      89E4E5E6 
ARM GAS  /tmp/ccsJYix0.s 			page 351


 12937      E785E8E9 
 12937      EA
 12938 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12938      EEEFF0F1 
 12938      F2F3F416 
 12938      F5
 12939 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 12939      FAFBFC01 
 12939      1902FD1A 
 12939      FE
 12940 0027 FF       		.ascii	"\377"
 12941              		.section	.rodata.alpha_subscripts,"a"
 12942              		.align	2
 12945              	alpha_subscripts:
 12946 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12946      9A80D798 
 12946      BB1486BC 
 12946      F7
 12947 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12947      BF818B9C 
 12947      8C999D90 
 12947      9B
 12948              		.section	.rodata.alpha_symbols,"a"
 12949              		.align	2
 12952              	alpha_symbols:
 12953 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12953      222A405F 
 12953      7E25240C 
 12953      1E1F8EAE 
 12953      926023
 12954              		.section	.rodata.alphamap.9196,"a"
 12955              		.align	2
 12956              		.set	.LANCHOR9,. + 0
 12959              	alphamap.9196:
 12960 0000 41004100 		.ascii	"A\000A\000a\240"
 12960      61A0
 12961 0006 42004200 		.ascii	"B\000B\000b\241"
 12961      62A1
 12962 000c 43008200 		.ascii	"C\000\202\000c\242"
 12962      63A2
 12963 0012 44008300 		.ascii	"D\000\203\000d\243"
 12963      64A3
 12964 0018 450D4500 		.ascii	"E\015E\000e\244"
 12964      65A4
 12965 001e 46009400 		.ascii	"F\000\224\000f\264"
 12965      66B4
 12966 0024 47008200 		.ascii	"G\000\202\000g\242"
 12966      67A2
 12967 002a 48005800 		.ascii	"H\000X\000h\265"
 12967      68B5
 12968 0030 49004900 		.ascii	"I\000I\000i\250"
 12968      69A8
 12969 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12969      6A00
 12970 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12970      6BA9
 12971 0042 4C008A00 		.ascii	"L\000\212\000l\252"
ARM GAS  /tmp/ccsJYix0.s 			page 352


 12971      6CAA
 12972 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12972      00A6
 12973 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12973      6DAB
 12974 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12974      6EAC
 12975 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 12975      6FB7
 12976 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12976      0000
 12977 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12977      0000
 12978 006c 50378F26 		.ascii	"P7\217&p\257"
 12978      70AF
 12979 0072 5138007C 		.ascii	"Q8\000|q\000"
 12979      7100
 12980 0078 5239520B 		.ascii	"R9R\013r\260"
 12980      72B0
 12981 007e 532F915C 		.ascii	"S/\221\\s\261"
 12981      73B1
 12982 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12982      0000
 12983 008a 54345400 		.ascii	"T4T\000t\262"
 12983      74B2
 12984 0090 55350000 		.ascii	"U5\000\000u\000"
 12984      7500
 12985 0096 56360000 		.ascii	"V6\000\000v\000"
 12985      7600
 12986 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12986      7700
 12987 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12987      0000
 12988 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12988      78AD
 12989 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12989      79B3
 12990 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12990      7AA5
 12991 00ba 2D282900 		.ascii	"-()\000\000\000"
 12991      0000
 12992 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12992      0000
 12993 00c6 3A308720 		.ascii	":0\207 ;\247"
 12993      3BA7
 12994 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12994      2EB6
 12995 00d2 3F002100 		.ascii	"?\000!\000?\000"
 12995      3F00
 12996 00d8 202B3D00 		.ascii	" +=\000  "
 12996      2020
 12997 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 12997      0000
 12998              		.section	.rodata.amap.9187,"a"
 12999              		.align	2
 13000              		.set	.LANCHOR10,. + 0
 13003              	amap.9187:
ARM GAS  /tmp/ccsJYix0.s 			page 353


 13004 0000 04       		.byte	4
 13005 0001 000D00   		.ascii	"\000\015\000"
 13006 0004 05       		.byte	5
 13007 0005 000E09   		.ascii	"\000\016\011"
 13008 0008 2C       		.byte	44
 13009 0009 000D00   		.ascii	"\000\015\000"
 13010 000c 2D       		.byte	45
 13011 000d 000E09   		.ascii	"\000\016\011"
 13012 0010 08       		.byte	8
 13013 0011 00000F   		.ascii	"\000\000\017"
 13014 0014 1F       		.byte	31
 13015 0015 00000C   		.ascii	"\000\000\014"
 13016 0018 21       		.byte	33
 13017 0019 00000A   		.ascii	"\000\000\012"
 13018 001c 26       		.byte	38
 13019 001d 00000B   		.ascii	"\000\000\013"
 13020              		.section	.rodata.catalogue,"a"
 13021              		.align	2
 13024              	catalogue:
 13025 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 13025      C15F57E3 
 13025      D8A23B58 
 13025      16BC7D44 
 13025      71010974 
 13026 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 13026      4F569D21 
 13026      489136D5 
 13026      B6695A66 
 13026      4B0E6F17 
 13027 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 13027      69256099 
 13027      76599460 
 13027      1AC6ECC3 
 13027      6B5B144B 
 13028 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 13028      023ED1A3 
 13028      0B0F28DB 
 13028      2611B30D 
 13028      57
 13029 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 13029      D0942DAE 
 13029      2B1B75FC 
 13029      A027AB82 
 13029      A89F
 13030 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 13030      BAAEEBCA 
 13030      D8A12AD9 
 13030      94919D
 13031 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 13031      B05F1007 
 13031      15A26FD6 
 13031      D5A9A1
 13032              		.section	.rodata.catalogue_sizes.9465,"a"
 13033              		.align	2
 13034              		.set	.LANCHOR2,. + 0
 13037              	catalogue_sizes.9465:
 13038 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
ARM GAS  /tmp/ccsJYix0.s 			page 354


 13038      363C437E 
 13038      25340E13 
 13038      0A09281A 
 13038      4C4C580E 
 13039              		.section	.rodata.catalogues.9473,"a"
 13040              		.align	2
 13041              		.set	.LANCHOR6,. + 0
 13044              	catalogues.9473:
 13045 0000 00000000 		.word	0
 13046 0004 00000000 		.word	catalogue
 13047 0008 00000000 		.word	cplx_catalogue
 13048 000c 00000000 		.word	stats_catalogue
 13049 0010 00000000 		.word	prob_catalogue
 13050 0014 00000000 		.word	int_catalogue
 13051 0018 00000000 		.word	prog_catalogue
 13052 001c 00000000 		.word	program_xfcn
 13053 0020 00000000 		.word	test_catalogue
 13054 0024 00000000 		.word	mode_catalogue
 13055 0028 00000000 		.word	alpha_catalogue
 13056 002c 00000000 		.word	alpha_symbols
 13057 0030 00000000 		.word	alpha_compares
 13058 0034 00000000 		.word	alpha_arrows
 13059 0038 00000000 		.word	alpha_letters
 13060 003c 00000000 		.word	alpha_subscripts
 13061 0040 00000000 		.word	0
 13062 0044 00000000 		.word	0
 13063 0048 00000000 		.word	0
 13064 004c 00000000 		.word	sums_catalogue
 13065 0050 00000000 		.word	matrix_catalogue
 13066              		.section	.rodata.cmap.9186,"a"
 13067              		.align	2
 13068              		.set	.LANCHOR11,. + 0
 13071              	cmap.9186:
 13072 0000 04       		.byte	4
 13073 0001 120012   		.ascii	"\022\000\022"
 13074 0004 05       		.byte	5
 13075 0005 090909   		.ascii	"\011\011\011"
 13076 0008 06       		.byte	6
 13077 0009 151515   		.ascii	"\025\025\025"
 13078 000c 0C       		.byte	12
 13079 000d 100011   		.ascii	"\020\000\021"
 13080 0010 19       		.byte	25
 13081 0011 040004   		.ascii	"\004\000\004"
 13082 0014 1A       		.byte	26
 13083 0015 030003   		.ascii	"\003\000\003"
 13084 0018 1B       		.byte	27
 13085 0019 130013   		.ascii	"\023\000\023"
 13086 001c 1C       		.byte	28
 13087 001d 140014   		.ascii	"\024\000\024"
 13088 0020 1E       		.byte	30
 13089 0021 171717   		.ascii	"\027\027\027"
 13090 0024 1F       		.byte	31
 13091 0025 080808   		.ascii	"\010\010\010"
 13092 0028 20       		.byte	32
 13093 0029 060606   		.ascii	"\006\006\006"
 13094 002c 21       		.byte	33
 13095 002d 010502   		.ascii	"\001\005\002"
ARM GAS  /tmp/ccsJYix0.s 			page 355


 13096              		.section	.rodata.conv_catalogue,"a"
 13097              		.align	2
 13098              		.set	.LANCHOR5,. + 0
 13101              	conv_catalogue:
 13102 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 13102      2B2DDD37 
 13102      27393133 
 13102      111605DC 
 13102      DE19
 13103 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 13103      0D0F8D08 
 13103      8F0A2A2C 
 13103      47434517 
 13103      3F30
 13104 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 13104      02062622 
 13104      20282435 
 13104      2F012310 
 13104      0C0E2112 
 13105 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 13105      1E292E09 
 13105      36383E3A 
 13105      3C4025DF 
 13105      3D8B8E03 
 13106 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 13106      4A484642 
 13106      441F
 13107              		.section	.rodata.conv_mapping.9512,"a"
 13108              		.align	2
 13109              		.set	.LANCHOR8,. + 0
 13112              	conv_mapping.9512:
 13113 0000 8502     		.short	645
 13114 0002 8402     		.short	644
 13115 0004 8602     		.short	646
 13116 0006 8702     		.short	647
 13117 0008 8202     		.short	642
 13118 000a 8302     		.short	643
 13119 000c 3202     		.short	562
 13120 000e 3302     		.short	563
 13121 0010 3402     		.short	564
 13122 0012 3502     		.short	565
 13123 0014 3602     		.short	566
 13124 0016 3702     		.short	567
 13125              		.section	.rodata.cplx_catalogue,"a"
 13126              		.align	2
 13129              	cplx_catalogue:
 13130 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 13130      013BCEE1 
 13130      0DDA785F 
 13130      57DA6676 
 13130      66E7E5CF 
 13131 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 13131      A2EB09B5 
 13131      F87500
 13132              		.section	.rodata.disp.9323,"a"
 13133              		.align	2
 13134              		.set	.LANCHOR15,. + 0
ARM GAS  /tmp/ccsJYix0.s 			page 356


 13137              	disp.9323:
 13138 0000 03       		.byte	3
 13139 0001 02       		.byte	2
 13140 0002 05       		.byte	5
 13141 0003 04       		.byte	4
 13142              		.section	.rodata.int_catalogue,"a"
 13143              		.align	2
 13146              	int_catalogue:
 13147 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 13147      F53D9BE2 
 13147      59BD10AF 
 13147      6434F569 
 13147      D926A094 
 13148 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 13148      965C9946 
 13148      B1716ECC 
 13148      36B495BB 
 13148      6EF3DE
 13149 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 13149      A0FBBC6F 
 13149      2C3D840D 
 13149      4CA42DAE 
 13149      2B1B7AE0 
 13150 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 13150      E6BAAEEB 
 13150      CAD8AB49 
 13150      100719
 13151 004a C7       		.ascii	"\307"
 13152              		.section	.rodata.linear_key_map.9157,"a"
 13153              		.align	2
 13154              		.set	.LANCHOR1,. + 0
 13157              	linear_key_map.9157:
 13158 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 13158      04050607 
 13158      08090A0B 
 13158      0C
 13159 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 13159      00111213 
 13159      14150016 
 13159      17
 13160 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 13160      1B1C1D1E 
 13160      1F002021 
 13160      22232425 
 13160      25252525 
 13161 002e 25       		.ascii	"%"
 13162              		.section	.rodata.linear_key_map.9161,"a"
 13163              		.align	2
 13164              		.set	.LANCHOR18,. + 0
 13167              	linear_key_map.9161:
 13168 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 13168      04050607 
 13168      08222222 
 13168      090A0B
 13169 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 13169      0F101112 
 13169      00131415 
ARM GAS  /tmp/ccsJYix0.s 			page 357


 13169      16
 13170 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 13170      1A1B1C00 
 13170      1D1E1F20 
 13170      21222222 
 13171 002c 040522   		.ascii	"\004\005\""
 13172              		.section	.rodata.map.9173,"a"
 13173              		.align	2
 13174              		.set	.LANCHOR0,. + 0
 13177              	map.9173:
 13178 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 13178      FF7F7F7F 
 13178      6D6E6F6C 
 13178      FFFFFFFF 
 13179 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 13179      097F7FE7 
 13179      05067F7F 
 13179      E4
 13180 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 13180      00F07F7F 
 13180      FFFFFFFF 
 13180      FF
 13181 002a FF       		.ascii	"\377"
 13182              		.section	.rodata.matrix_catalogue,"a"
 13183              		.align	2
 13186              	matrix_catalogue:
 13187 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 13187      D835DC23 
 13187      6D856E58 
 13187      66E1C16E 
 13187      98A631C3 
 13188 0017 1C       		.ascii	"\034"
 13189              		.section	.rodata.mode_catalogue,"a"
 13190              		.align	2
 13193              	mode_catalogue:
 13194 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 13194      8BBEC663 
 13194      A8E91F88 
 13194      01FC7CB8 
 13195 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 13195      2449C26C 
 13195      62194932 
 13195      489A1930 
 13195      821083
 13196 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 13196      87320A63 
 13196      10C7324A 
 13196      7314C623 
 13196      8CE0E039 
 13197 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 13197      BB0F33C8 
 13197      99
 13198              		.section	.rodata.op_map.9240,"a"
 13199              		.align	2
 13200              		.set	.LANCHOR22,. + 0
 13203              	op_map.9240:
 13204 0000 1500     		.short	21
ARM GAS  /tmp/ccsJYix0.s 			page 358


 13205 0002 0B02     		.short	523
 13206 0004 0003     		.short	768
 13207 0006 0A02     		.short	522
 13208 0008 1300     		.short	19
 13209 000a 1400     		.short	20
 13210 000c 0300     		.short	3
 13211 000e 0A00     		.short	10
 13212 0010 0701     		.short	263
 13213 0012 0000     		.short	0
 13214 0014 6531     		.short	12645
 13215 0016 0300     		.short	3
 13216 0018 0200     		.short	2
 13217 001a 0100     		.short	1
 13218 001c 4400     		.short	68
 13219 001e 0C00     		.short	12
 13220 0020 0D00     		.short	13
 13221 0022 0E00     		.short	14
 13222 0024 0403     		.short	772
 13223 0026 2F00     		.short	47
 13224 0028 0900     		.short	9
 13225 002a 0A00     		.short	10
 13226 002c 0B00     		.short	11
 13227 002e 0303     		.short	771
 13228 0030 2E00     		.short	46
 13229 0032 0600     		.short	6
 13230 0034 0700     		.short	7
 13231 0036 0800     		.short	8
 13232 0038 0203     		.short	770
 13233 003a 3300     		.short	51
 13234 003c 0500     		.short	5
 13235 003e 0400     		.short	4
 13236 0040 3B01     		.short	315
 13237 0042 0103     		.short	769
 13238 0044 0001     		.short	256
 13239              		.section	.rodata.op_map.9263,"a"
 13240              		.align	2
 13241              		.set	.LANCHOR19,. + 0
 13244              	op_map.9263:
 13245 0000 0100     		.short	1
 13246 0002 0000     		.short	0
 13247 0004 20F2     		.short	-3552
 13248 0006 23F2     		.short	-3549
 13249 0008 21F2     		.short	-3551
 13250 000a 24F2     		.short	-3548
 13251 000c 22F2     		.short	-3550
 13252 000e 25F2     		.short	-3547
 13253 0010 47F1     		.short	-3769
 13254 0012 46F1     		.short	-3770
 13255 0014 4E01     		.short	334
 13256 0016 4D01     		.short	333
 13257 0018 5C01     		.short	348
 13258 001a 35F1     		.short	-3787
 13259 001c 5B01     		.short	347
 13260 001e 36F1     		.short	-3786
 13261 0020 3301     		.short	307
 13262 0022 37F1     		.short	-3785
 13263 0024 3300     		.short	51
ARM GAS  /tmp/ccsJYix0.s 			page 359


 13264 0026 0C01     		.short	268
 13265 0028 2B00     		.short	43
 13266 002a 2C00     		.short	44
 13267 002c 028B     		.short	-29950
 13268 002e 088B     		.short	-29944
 13269 0030 0A8B     		.short	-29942
 13270 0032 108B     		.short	-29936
 13271 0034 4301     		.short	323
 13272 0036 3D01     		.short	317
 13273 0038 0902     		.short	521
 13274 003a 0802     		.short	520
 13275 003c 1002     		.short	528
 13276 003e 0D02     		.short	525
 13277 0040 0F02     		.short	527
 13278 0042 0E02     		.short	526
 13279 0044 0003     		.short	768
 13280 0046 0803     		.short	776
 13281 0048 0BF2     		.short	-3573
 13282 004a 1603     		.short	790
 13283 004c 1203     		.short	786
 13284 004e 1303     		.short	787
 13285 0050 3DF2     		.short	-3523
 13286 0052 3EF2     		.short	-3522
 13287 0054 24F1     		.short	-3804
 13288 0056 1EF1     		.short	-3810
 13289 0058 75F2     		.short	-3467
 13290 005a 27F1     		.short	-3801
 13291 005c 0A02     		.short	522
 13292 005e 1602     		.short	534
 13293 0060 5100     		.short	81
 13294 0062 5200     		.short	82
 13295 0064 0000     		.short	0
 13296 0066 0100     		.short	1
 13297 0068 48F0     		.short	-4024
 13298 006a 4BF0     		.short	-4021
 13299 006c 47F0     		.short	-4025
 13300 006e 46F0     		.short	-4026
 13301 0070 77F2     		.short	-3465
 13302 0072 78F2     		.short	-3464
 13303 0074 3300     		.short	51
 13304 0076 3300     		.short	51
 13305 0078 0502     		.short	517
 13306 007a 0602     		.short	518
 13307 007c 0402     		.short	516
 13308 007e 0002     		.short	512
 13309 0080 4200     		.short	66
 13310 0082 3801     		.short	312
 13311 0084 3A00     		.short	58
 13312 0086 3B00     		.short	59
 13313 0088 0001     		.short	256
 13314 008a 0001     		.short	256
 13315              		.section	.rodata.op_map.9286,"a"
 13316              		.align	2
 13317              		.set	.LANCHOR21,. + 0
 13320              	op_map.9286:
 13321 0000 4C80     		.short	-32692
 13322 0002 4D80     		.short	-32691
ARM GAS  /tmp/ccsJYix0.s 			page 360


 13323 0004 4E80     		.short	-32690
 13324 0006 4F80     		.short	-32689
 13325 0008 3300     		.short	51
 13326 000a 3300     		.short	51
 13327 000c 3300     		.short	51
 13328 000e 2180     		.short	-32735
 13329 0010 0801     		.short	264
 13330 0012 8780     		.short	-32633
 13331 0014 1180     		.short	-32751
 13332 0016 7C02     		.short	636
 13333 0018 5560     		.short	24661
 13334 001a 3F01     		.short	319
 13335 001c 4580     		.short	-32699
 13336 001e 1C03     		.short	796
 13337 0020 1D03     		.short	797
 13338 0022 1E03     		.short	798
 13339 0024 0603     		.short	774
 13340 0026 2F02     		.short	559
 13341 0028 3300     		.short	51
 13342 002a 3300     		.short	51
 13343 002c 3300     		.short	51
 13344 002e 3300     		.short	51
 13345 0030 3300     		.short	51
 13346 0032 3300     		.short	51
 13347 0034 3300     		.short	51
 13348 0036 3300     		.short	51
 13349 0038 1640     		.short	16406
 13350 003a 0201     		.short	258
 13351 003c 6D80     		.short	-32659
 13352 003e 5001     		.short	336
 13353 0040 3300     		.short	51
 13354 0042 1540     		.short	16405
 13355 0044 0001     		.short	256
 13356              		.section	.rodata.op_map.9296,"a"
 13357              		.align	2
 13358              		.set	.LANCHOR17,. + 0
 13361              	op_map.9296:
 13362 0000 0100     		.short	1
 13363 0002 0100     		.short	1
 13364 0004 0000     		.short	0
 13365 0006 0000     		.short	0
 13366 0008 0B05     		.short	1291
 13367 000a 2005     		.short	1312
 13368 000c 2305     		.short	1315
 13369 000e 3300     		.short	51
 13370 0010 0006     		.short	1536
 13371 0012 2105     		.short	1313
 13372 0014 2405     		.short	1316
 13373 0016 3300     		.short	51
 13374 0018 0A05     		.short	1290
 13375 001a 2205     		.short	1314
 13376 001c 2505     		.short	1317
 13377 001e 3300     		.short	51
 13378 0020 3300     		.short	51
 13379 0022 4701     		.short	327
 13380 0024 4601     		.short	326
 13381 0026 3300     		.short	51
ARM GAS  /tmp/ccsJYix0.s 			page 361


 13382 0028 3300     		.short	51
 13383 002a 3300     		.short	51
 13384 002c 3300     		.short	51
 13385 002e 3300     		.short	51
 13386 0030 15FF     		.short	-235
 13387 0032 3300     		.short	51
 13388 0034 3300     		.short	51
 13389 0036 3300     		.short	51
 13390 0038 1AFF     		.short	-230
 13391 003a 3300     		.short	51
 13392 003c 3300     		.short	51
 13393 003e 8CFF     		.short	-116
 13394 0040 0901     		.short	265
 13395 0042 3300     		.short	51
 13396 0044 3300     		.short	51
 13397 0046 0A01     		.short	266
 13398 0048 0B01     		.short	267
 13399 004a 3300     		.short	51
 13400 004c 0D01     		.short	269
 13401 004e 0D01     		.short	269
 13402 0050 663F     		.short	16230
 13403 0052 3300     		.short	51
 13404 0054 3300     		.short	51
 13405 0056 1FFF     		.short	-225
 13406 0058 3805     		.short	1336
 13407 005a 3300     		.short	51
 13408 005c 3300     		.short	51
 13409 005e 3905     		.short	1337
 13410 0060 5521     		.short	8533
 13411 0062 3300     		.short	51
 13412 0064 3300     		.short	51
 13413 0066 5521     		.short	8533
 13414 0068 3300     		.short	51
 13415 006a 3300     		.short	51
 13416 006c 3300     		.short	51
 13417 006e 3300     		.short	51
 13418 0070 3300     		.short	51
 13419 0072 0905     		.short	1289
 13420 0074 0805     		.short	1288
 13421 0076 3300     		.short	51
 13422 0078 07A8     		.short	-22521
 13423 007a 1005     		.short	1296
 13424 007c 0D05     		.short	1293
 13425 007e 3300     		.short	51
 13426 0080 08A8     		.short	-22520
 13427 0082 0F05     		.short	1295
 13428 0084 0E05     		.short	1294
 13429 0086 3300     		.short	51
 13430 0088 09A8     		.short	-22519
 13431 008a 0006     		.short	1536
 13432 008c 0806     		.short	1544
 13433 008e 3300     		.short	51
 13434 0090 0406     		.short	1540
 13435 0092 0B05     		.short	1291
 13436 0094 1606     		.short	1558
 13437 0096 3300     		.short	51
 13438 0098 3300     		.short	51
ARM GAS  /tmp/ccsJYix0.s 			page 362


 13439 009a 1206     		.short	1554
 13440 009c 1306     		.short	1555
 13441 009e 2F05     		.short	1327
 13442 00a0 04A8     		.short	-22524
 13443 00a2 3300     		.short	51
 13444 00a4 3300     		.short	51
 13445 00a6 3300     		.short	51
 13446 00a8 05A8     		.short	-22523
 13447 00aa 3300     		.short	51
 13448 00ac 3300     		.short	51
 13449 00ae 3300     		.short	51
 13450 00b0 06A8     		.short	-22522
 13451 00b2 3300     		.short	51
 13452 00b4 3300     		.short	51
 13453 00b6 3300     		.short	51
 13454 00b8 0306     		.short	1539
 13455 00ba 0A05     		.short	1290
 13456 00bc 1605     		.short	1302
 13457 00be 1605     		.short	1302
 13458 00c0 3300     		.short	51
 13459 00c2 3300     		.short	51
 13460 00c4 3300     		.short	51
 13461 00c6 3300     		.short	51
 13462 00c8 01A8     		.short	-22527
 13463 00ca 0000     		.short	0
 13464 00cc 0100     		.short	1
 13465 00ce 3300     		.short	51
 13466 00d0 02A8     		.short	-22526
 13467 00d2 3300     		.short	51
 13468 00d4 3300     		.short	51
 13469 00d6 3300     		.short	51
 13470 00d8 03A8     		.short	-22525
 13471 00da 3300     		.short	51
 13472 00dc 3300     		.short	51
 13473 00de 3300     		.short	51
 13474 00e0 0206     		.short	1538
 13475 00e2 3300     		.short	51
 13476 00e4 3300     		.short	51
 13477 00e6 3300     		.short	51
 13478 00e8 3300     		.short	51
 13479 00ea 3300     		.short	51
 13480 00ec 3300     		.short	51
 13481 00ee 0201     		.short	258
 13482 00f0 00A8     		.short	-22528
 13483 00f2 0505     		.short	1285
 13484 00f4 0605     		.short	1286
 13485 00f6 3300     		.short	51
 13486 00f8 B801     		.short	440
 13487 00fa 0405     		.short	1284
 13488 00fc 0005     		.short	1280
 13489 00fe 3300     		.short	51
 13490 0100 3300     		.short	51
 13491 0102 3300     		.short	51
 13492 0104 3300     		.short	51
 13493 0106 3300     		.short	51
 13494 0108 0106     		.short	1537
 13495 010a 3300     		.short	51
ARM GAS  /tmp/ccsJYix0.s 			page 363


 13496 010c 3300     		.short	51
 13497 010e 3300     		.short	51
 13498 0110 0001     		.short	256
 13499 0112 0001     		.short	256
 13500 0114 0001     		.short	256
 13501 0116 0001     		.short	256
 13502              		.section	.rodata.op_map.9308,"a"
 13503              		.align	2
 13504              		.set	.LANCHOR13,. + 0
 13507              	op_map.9308:
 13508 0000 2A27     		.ascii	"*'"
 13509 0002 2B28     		.ascii	"+("
 13510 0004 2C29     		.ascii	",)"
 13511              		.section	.rodata.op_map.9322,"a"
 13512              		.align	2
 13513              		.set	.LANCHOR14,. + 0
 13516              	op_map.9322:
 13517 0000 1A02     		.short	538
 13518 0002 7B02     		.short	635
 13519 0004 1B02     		.short	539
 13520 0006 7A02     		.short	634
 13521 0008 1C02     		.short	540
 13522 000a 3300     		.short	51
 13523              		.section	.rodata.op_map2.9264,"a"
 13524              		.align	2
 13525              		.set	.LANCHOR20,. + 0
 13528              	op_map2.9264:
 13529 0000 3300     		.short	51
 13530 0002 3300     		.short	51
 13531 0004 0003     		.short	768
 13532 0006 0A02     		.short	522
 13533              		.section	.rodata.opcode_breaks,"a"
 13534              		.align	2
 13535              		.set	.LANCHOR7,. + 0
 13538              	opcode_breaks:
 13539 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 13539      0C992F
 13540              		.section	.rodata.prob_catalogue,"a"
 13541              		.align	2
 13544              	prob_catalogue:
 13545 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 13545      44561575 
 13545      9D595013 
 13545      F57D414E 
 13545      55D4E93B 
 13546 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 13546      15955355 
 13546      55459956 
 13546      53D4E591 
 13546      50525485 
 13547 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 13547      85474D95 
 13547      C4DD384F 
 13547      53C5793E 
 13547      569304D1 
 13548 0043 B0       		.ascii	"\260"
 13549              		.section	.rodata.prog_catalogue,"a"
ARM GAS  /tmp/ccsJYix0.s 			page 364


 13550              		.align	2
 13553              	prog_catalogue:
 13554 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 13554      791D4781 
 13554      C8742A31 
 13554      9B4042B3 
 13554      2CE1BA92 
 13555 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 13555      DA332D1B 
 13555      36CFC28E 
 13555      2390E738 
 13555      CE8C
 13556 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 13556      B0D0DC39 
 13556      47039B09 
 13556      ACCDF1D8 
 13556      CD
 13557 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 13557      B22C0E1B 
 13557      18D20DEB 
 13557      2302A4
 13558 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 13558      CBA8AA3C 
 13558      00AE2B6F 
 13558      FC58
 13559              		.section	.rodata.program_xfcn,"a"
 13560              		.align	2
 13563              	program_xfcn:
 13564 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 13564      F33057D5 
 13564      FAF53D8A 
 13564      23B5816B 
 13564      DBE259BD 
 13565 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 13565      425D12E4 
 13565      BD8341AF 
 13565      6434F569 
 13565      D21489
 13566 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 13566      95A664B0 
 13566      E6F1756A 
 13566      0946D105 
 13566      7019A4
 13567 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 13567      A65D965C 
 13567      994601AC 
 13567      5C5BB30D 
 13567      AD
 13568 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 13568      95BB6EF3 
 13568      DEEEBC30 
 13568      5BD301C0 
 13568      8683
 13569 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 13569      2BCB0F28 
 13569      DB2611B3 
 13569      0D573329 
ARM GAS  /tmp/ccsJYix0.s 			page 365


 13569      0841D0
 13570 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 13570      1B75FCA0 
 13570      27AB82A8 
 13570      9FADEB5A 
 13570      E6
 13571 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
 13571      D8A12AD9 
 13571      94919D67 
 13571      99B671
 13572 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 13572      19C5689B 
 13572      F5B56A68 
 13572      5C70
 13573              		.section	.rodata.smap.9188,"a"
 13574              		.align	2
 13575              		.set	.LANCHOR16,. + 0
 13578              	smap.9188:
 13579 0000 00010002 		.ascii	"\000\001\000\002"
 13580              		.section	.rodata.stats_catalogue,"a"
 13581              		.align	2
 13584              	stats_catalogue:
 13585 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 13585      5D17C971 
 13585      58611685 
 13585      95A05417 
 13585      85
 13586 0011 514C575A 		.ascii	"QLWZ\200"
 13586      80
 13587              		.section	.rodata.sums_catalogue,"a"
 13588              		.align	2
 13591              	sums_catalogue:
 13592 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 13592      4A1384C1 
 13592      20451104 
 13592      F11C4911 
 13592      8500
 13593              		.section	.rodata.test_catalogue,"a"
 13594              		.align	2
 13597              	test_catalogue:
 13598 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 13598      EB2FCBDB 
 13598      96E9BAEE 
 13598      A2F2E4B9 
 13599 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 13599      2EEFEB4C 
 13599      9D368B82 
 13599      F8BA350B 
 13600 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 13600      2C1354D6 
 13600      AFEC3B08 
 13600      B73C40
 13601              		.text
 13602              	.Letext0:
 13603              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 13604              		.file 3 "dmcp/dmcp.h"
 13605              		.file 4 "src/decNumber/decContext.h"
ARM GAS  /tmp/ccsJYix0.s 			page 366


 13606              		.file 5 "src/decNumber/decNumber.h"
 13607              		.file 6 "src/decNumber/decimal64.h"
 13608              		.file 7 "src/decNumber/decimal128.h"
 13609              		.file 8 "src/xeq.h"
 13610              		.file 9 "src/data.h"
 13611              		.file 10 "src/keys.h"
 13612              		.file 11 "src/display.h"
 13613              		.file 12 "src/consts.h"
 13614              		.file 13 "src/storage.h"
 13615              		.file 14 "src/stats.h"
 13616              		.file 15 "src/catalogues.h"
 13617              		.file 16 "src/lcd.h"
 13618              		.file 17 "src/int.h"
ARM GAS  /tmp/ccsJYix0.s 			page 367


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccsJYix0.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccsJYix0.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccsJYix0.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccsJYix0.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccsJYix0.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccsJYix0.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccsJYix0.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccsJYix0.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccsJYix0.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccsJYix0.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccsJYix0.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccsJYix0.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccsJYix0.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccsJYix0.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccsJYix0.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccsJYix0.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccsJYix0.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccsJYix0.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccsJYix0.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccsJYix0.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccsJYix0.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccsJYix0.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccsJYix0.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccsJYix0.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/ccsJYix0.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccsJYix0.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/ccsJYix0.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/ccsJYix0.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccsJYix0.s:1094   .text.arg_eval:0000000000000074 $d
     /tmp/ccsJYix0.s:1101   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccsJYix0.s:1108   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccsJYix0.s:1166   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccsJYix0.s:1171   .text.arg_digit:0000000000000000 $t
     /tmp/ccsJYix0.s:1178   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccsJYix0.s:1439   .text.arg_digit:00000000000000fc $d
     /tmp/ccsJYix0.s:1447   .text.intltr:0000000000000000 $t
     /tmp/ccsJYix0.s:1454   .text.intltr:0000000000000000 intltr
     /tmp/ccsJYix0.s:1517   .text.intltr:0000000000000030 $d
     /tmp/ccsJYix0.s:1523   .text.set_window:0000000000000000 $t
     /tmp/ccsJYix0.s:1530   .text.set_window:0000000000000000 set_window
     /tmp/ccsJYix0.s:1677   .text.set_window:000000000000008c $d
     /tmp/ccsJYix0.s:1684   .text.arg_storcl:0000000000000000 $t
     /tmp/ccsJYix0.s:1691   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccsJYix0.s:1807   .text.arg_storcl:0000000000000040 $d
     /tmp/ccsJYix0.s:1812   .text.process_arg:0000000000000000 $t
     /tmp/ccsJYix0.s:1819   .text.process_arg:0000000000000000 process_arg
     /tmp/ccsJYix0.s:2025   .text.process_arg:000000000000008a $d
     /tmp/ccsJYix0.s:2029   .text.process_arg:0000000000000090 $t
     /tmp/ccsJYix0.s:2118   .text.process_arg:00000000000000f0 $d
     /tmp/ccsJYix0.s:2165   .text.process_arg:00000000000001a8 $t
     /tmp/ccsJYix0.s:2568   .text.process_arg:000000000000032c $d
     /tmp/ccsJYix0.s:2577   .text.process_arg:0000000000000340 $t
     /tmp/ccsJYix0.s:3068   .text.process_arg:000000000000054c $d
     /tmp/ccsJYix0.s:3073   .text.cur_shift:0000000000000000 $t
ARM GAS  /tmp/ccsJYix0.s 			page 368


     /tmp/ccsJYix0.s:3081   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccsJYix0.s:3109   .text.cur_shift:0000000000000010 $d
     /tmp/ccsJYix0.s:3114   .text.reset_shift:0000000000000000 $t
     /tmp/ccsJYix0.s:3122   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccsJYix0.s:3180   .text.reset_shift:0000000000000014 $d
     /tmp/ccsJYix0.s:3185   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccsJYix0.s:3193   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccsJYix0.s:3221   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccsJYix0.s:3226   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccsJYix0.s:3234   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccsJYix0.s:3292   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccsJYix0.s:3297   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccsJYix0.s:3305   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccsJYix0.s:3341   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccsJYix0.s:3347   .text.init_state:0000000000000000 $t
     /tmp/ccsJYix0.s:3355   .text.init_state:0000000000000000 init_state
     /tmp/ccsJYix0.s:3461   .text.init_state:000000000000005c $d
     /tmp/ccsJYix0.s:3467   .text.soft_init_state:0000000000000000 $t
     /tmp/ccsJYix0.s:3475   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccsJYix0.s:3570   .text.soft_init_state:0000000000000048 $d
     /tmp/ccsJYix0.s:3576   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccsJYix0.s:3584   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccsJYix0.s:3605   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccsJYix0.s:3611   .text.current_catalogue:0000000000000000 $t
     /tmp/ccsJYix0.s:3619   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccsJYix0.s:3875   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccsJYix0.s:3885   .text.process_catalogue:0000000000000000 $t
     /tmp/ccsJYix0.s:3892   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccsJYix0.s:4221   .text.process_catalogue:00000000000000fe $d
     /tmp/ccsJYix0.s:4253   .text.process_catalogue:000000000000011e $t
     /tmp/ccsJYix0.s:4761   .text.process_catalogue:00000000000002dc $d
     /tmp/ccsJYix0.s:4782   .text.process_catalogue:00000000000002fc $t
     /tmp/ccsJYix0.s:4812   .text.find_pos:0000000000000000 $t
     /tmp/ccsJYix0.s:4820   .text.find_pos:0000000000000000 find_pos
     /tmp/ccsJYix0.s:4993   .text.find_pos:0000000000000080 $d
     /tmp/ccsJYix0.s:4999   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccsJYix0.s:5007   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccsJYix0.s:5039   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccsJYix0.s:5045   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccsJYix0.s:5055   .text.process_keycode:0000000000000000 $t
     /tmp/ccsJYix0.s:5063   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccsJYix0.s:5584   .text.process_keycode:0000000000000260 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccsJYix0.s:5603   .text.process_keycode:00000000000002a0 $t
     /tmp/ccsJYix0.s:5720   .text.process_keycode:000000000000031a $d
     /tmp/ccsJYix0.s:5767   .text.process_keycode:0000000000000376 $t
     /tmp/ccsJYix0.s:5975   .text.process_keycode:0000000000000450 $d
     /tmp/ccsJYix0.s:5985   .text.process_keycode:0000000000000474 $t
     /tmp/ccsJYix0.s:6289   .text.process_keycode:00000000000005b8 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccsJYix0.s:6307   .text.process_keycode:00000000000005f4 $t
     /tmp/ccsJYix0.s:6439   .text.process_keycode:000000000000068e $d
     /tmp/ccsJYix0.s:6469   .text.process_keycode:00000000000006b0 $d
     /tmp/ccsJYix0.s:6512   .text.process_keycode:000000000000075c $t
ARM GAS  /tmp/ccsJYix0.s 			page 369


     /tmp/ccsJYix0.s:6745   .text.process_keycode:0000000000000844 $d
     /tmp/ccsJYix0.s:6754   .text.process_keycode:0000000000000868 $t
     /tmp/ccsJYix0.s:6826   .text.process_keycode:00000000000008ac $d
     /tmp/ccsJYix0.s:6845   .text.process_keycode:00000000000008d0 $t
     /tmp/ccsJYix0.s:6853   .text.process_keycode:00000000000008de $d
     /tmp/ccsJYix0.s:6879   .text.process_keycode:00000000000008f8 $t
     /tmp/ccsJYix0.s:6928   .text.process_keycode:0000000000000938 $d
     /tmp/ccsJYix0.s:6932   .text.process_keycode:0000000000000948 $t
     /tmp/ccsJYix0.s:7945   .text.process_keycode:0000000000000ccc $d
     /tmp/ccsJYix0.s:7957   .text.process_keycode:0000000000000cf0 $t
     /tmp/ccsJYix0.s:8684   .text.process_keycode:0000000000000f64 $d
     /tmp/ccsJYix0.s:8962   .text.process_keycode:0000000000001064 $d
     /tmp/ccsJYix0.s:8973   .text.process_keycode:0000000000001084 $t
     /tmp/ccsJYix0.s:8985   .text.process_keycode:00000000000010a0 $d
     /tmp/ccsJYix0.s:9005   .text.process_keycode:00000000000010f0 $t
     /tmp/ccsJYix0.s:9204   .text.process_keycode:000000000000118a $d
     /tmp/ccsJYix0.s:9222   .text.process_keycode:000000000000119c $t
     /tmp/ccsJYix0.s:9776   .text.process_keycode:0000000000001368 $d
     /tmp/ccsJYix0.s:9810   .text.process_keycode:00000000000013ac $t
     /tmp/ccsJYix0.s:9826   .text.process_keycode:00000000000013bc $d
     /tmp/ccsJYix0.s:9835   .text.process_keycode:00000000000013cc $t
     /tmp/ccsJYix0.s:9882   .text.process_keycode:00000000000013f4 $d
     /tmp/ccsJYix0.s:9917   .text.process_keycode:000000000000147c $t
     /tmp/ccsJYix0.s:10558  .text.process_keycode:0000000000001672 $d
     /tmp/ccsJYix0.s:10636  .text.process_keycode:00000000000016c0 $d
     /tmp/ccsJYix0.s:10651  .text.process_keycode:00000000000016e0 $t
     /tmp/ccsJYix0.s:11220  .text.process_keycode:0000000000001980 $d
     /tmp/ccsJYix0.s:11262  .text.process_keycode:0000000000001a24 $t
     /tmp/ccsJYix0.s:11355  .text.process_keycode:0000000000001a8c $d
     /tmp/ccsJYix0.s:11363  .text.process_keycode:0000000000001a9c $t
     /tmp/ccsJYix0.s:12190  .text.process_keycode:0000000000001dd4 $d
     /tmp/ccsJYix0.s:12198  .text.process_keycode:0000000000001ddc $t
     /tmp/ccsJYix0.s:12653  .text.process_keycode:0000000000001f90 $d
     /tmp/ccsJYix0.s:12663  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccsJYix0.s:12671  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccsJYix0.s:12879  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccsJYix0.s:12896  .bss.was_paused.9667:0000000000000000 $d
     /tmp/ccsJYix0.s:12900  .bss.was_paused.9667:0000000000000000 was_paused.9667
     /tmp/ccsJYix0.s:12903  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccsJYix0.s:12906  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccsJYix0.s:12909  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:12912  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccsJYix0.s:12916  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccsJYix0.s:12919  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccsJYix0.s:12922  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccsJYix0.s:12926  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccsJYix0.s:12932  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccsJYix0.s:12936  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccsJYix0.s:12942  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccsJYix0.s:12945  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccsJYix0.s:12949  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccsJYix0.s:12952  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccsJYix0.s:12955  .rodata.alphamap.9196:0000000000000000 $d
     /tmp/ccsJYix0.s:12959  .rodata.alphamap.9196:0000000000000000 alphamap.9196
     /tmp/ccsJYix0.s:12999  .rodata.amap.9187:0000000000000000 $d
     /tmp/ccsJYix0.s:13003  .rodata.amap.9187:0000000000000000 amap.9187
     /tmp/ccsJYix0.s:13021  .rodata.catalogue:0000000000000000 $d
ARM GAS  /tmp/ccsJYix0.s 			page 370


     /tmp/ccsJYix0.s:13024  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccsJYix0.s:13033  .rodata.catalogue_sizes.9465:0000000000000000 $d
     /tmp/ccsJYix0.s:13037  .rodata.catalogue_sizes.9465:0000000000000000 catalogue_sizes.9465
     /tmp/ccsJYix0.s:13040  .rodata.catalogues.9473:0000000000000000 $d
     /tmp/ccsJYix0.s:13044  .rodata.catalogues.9473:0000000000000000 catalogues.9473
     /tmp/ccsJYix0.s:13129  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccsJYix0.s:13584  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccsJYix0.s:13544  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccsJYix0.s:13146  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccsJYix0.s:13553  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccsJYix0.s:13563  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccsJYix0.s:13597  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccsJYix0.s:13193  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccsJYix0.s:13591  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccsJYix0.s:13186  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccsJYix0.s:13067  .rodata.cmap.9186:0000000000000000 $d
     /tmp/ccsJYix0.s:13071  .rodata.cmap.9186:0000000000000000 cmap.9186
     /tmp/ccsJYix0.s:13097  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13101  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccsJYix0.s:13108  .rodata.conv_mapping.9512:0000000000000000 $d
     /tmp/ccsJYix0.s:13112  .rodata.conv_mapping.9512:0000000000000000 conv_mapping.9512
     /tmp/ccsJYix0.s:13126  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13133  .rodata.disp.9323:0000000000000000 $d
     /tmp/ccsJYix0.s:13137  .rodata.disp.9323:0000000000000000 disp.9323
     /tmp/ccsJYix0.s:13143  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13153  .rodata.linear_key_map.9157:0000000000000000 $d
     /tmp/ccsJYix0.s:13157  .rodata.linear_key_map.9157:0000000000000000 linear_key_map.9157
     /tmp/ccsJYix0.s:13163  .rodata.linear_key_map.9161:0000000000000000 $d
     /tmp/ccsJYix0.s:13167  .rodata.linear_key_map.9161:0000000000000000 linear_key_map.9161
     /tmp/ccsJYix0.s:13173  .rodata.map.9173:0000000000000000 $d
     /tmp/ccsJYix0.s:13177  .rodata.map.9173:0000000000000000 map.9173
     /tmp/ccsJYix0.s:13183  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13190  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13199  .rodata.op_map.9240:0000000000000000 $d
     /tmp/ccsJYix0.s:13203  .rodata.op_map.9240:0000000000000000 op_map.9240
     /tmp/ccsJYix0.s:13240  .rodata.op_map.9263:0000000000000000 $d
     /tmp/ccsJYix0.s:13244  .rodata.op_map.9263:0000000000000000 op_map.9263
     /tmp/ccsJYix0.s:13316  .rodata.op_map.9286:0000000000000000 $d
     /tmp/ccsJYix0.s:13320  .rodata.op_map.9286:0000000000000000 op_map.9286
     /tmp/ccsJYix0.s:13357  .rodata.op_map.9296:0000000000000000 $d
     /tmp/ccsJYix0.s:13361  .rodata.op_map.9296:0000000000000000 op_map.9296
     /tmp/ccsJYix0.s:13503  .rodata.op_map.9308:0000000000000000 $d
     /tmp/ccsJYix0.s:13507  .rodata.op_map.9308:0000000000000000 op_map.9308
     /tmp/ccsJYix0.s:13512  .rodata.op_map.9322:0000000000000000 $d
     /tmp/ccsJYix0.s:13516  .rodata.op_map.9322:0000000000000000 op_map.9322
     /tmp/ccsJYix0.s:13524  .rodata.op_map2.9264:0000000000000000 $d
     /tmp/ccsJYix0.s:13528  .rodata.op_map2.9264:0000000000000000 op_map2.9264
     /tmp/ccsJYix0.s:13534  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccsJYix0.s:13538  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccsJYix0.s:13541  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13550  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13560  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccsJYix0.s:13574  .rodata.smap.9188:0000000000000000 $d
     /tmp/ccsJYix0.s:13578  .rodata.smap.9188:0000000000000000 smap.9188
     /tmp/ccsJYix0.s:13581  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13588  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccsJYix0.s:13594  .rodata.test_catalogue:0000000000000000 $d
ARM GAS  /tmp/ccsJYix0.s 			page 371


     /tmp/ccsJYix0.s:6458   .text.process_keycode:00000000000006a1 $d
     /tmp/ccsJYix0.s:6458   .text.process_keycode:00000000000006a2 $t
     /tmp/ccsJYix0.s:8719   .text.process_keycode:0000000000000f87 $d
     /tmp/ccsJYix0.s:8719   .text.process_keycode:0000000000000f88 $t
     /tmp/ccsJYix0.s:10599  .text.process_keycode:000000000000169b $d
     /tmp/ccsJYix0.s:10599  .text.process_keycode:000000000000169c $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
is_key_pressed
set_pc
set_running_off
xeq_sst_bst
stoprog
clr_dot
finish_RPN
message
find_char
ARM GAS  /tmp/ccsJYix0.s 			page 372


delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
display_current_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
set_menu
alen

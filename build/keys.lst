ARM GAS  /tmp/cceyv6gL.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/cceyv6gL.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/cceyv6gL.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/cceyv6gL.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/cceyv6gL.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/cceyv6gL.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/cceyv6gL.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/cceyv6gL.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/cceyv6gL.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/cceyv6gL.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/cceyv6gL.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 638:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 639:src/keys.c    **** #endif							//JM5
 640:src/keys.c    **** 
 641:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 642:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 643:src/keys.c    **** #endif							//JM5
 644:src/keys.c    **** 
 645:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 646:src/keys.c    **** 	UState.show_y = 1;
 647:src/keys.c    **** #endif
 648:src/keys.c    **** 
 649:src/keys.c    **** #ifdef DEFAULT_TO_J
 650:src/keys.c    **** 	SET_CPX_J;
 651:src/keys.c    **** #endif
 652:src/keys.c    **** 
 653:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 654:src/keys.c    **** 	cpx_nop(OP_CYES);
 655:src/keys.c    **** #endif
 656:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 13


 657:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 658:src/keys.c    **** 	cpx_nop(OP_CYES);
 659:src/keys.c    **** 	cpx_nop(OP_C_ON);
 660:src/keys.c    **** #endif
 661:src/keys.c    **** 
 662:src/keys.c    **** #ifdef ENTRY_RPN
 663:src/keys.c    **** 
 664:src/keys.c    **** #ifdef DEFAULT_TO_ENTRY_RPN
 665:src/keys.c    **** 	ENTRY_RPN_ON;
 666:src/keys.c    **** #else
 667:src/keys.c    **** 	ENTRY_RPN_OFF;
 668:src/keys.c    **** #endif
 669:src/keys.c    **** 
 670:src/keys.c    **** #endif
 671:src/keys.c    **** 	
 672:src/keys.c    **** #endif
 673:src/keys.c    **** 
 674:src/keys.c    **** 	State2.test = TST_NONE;
 675:src/keys.c    **** 	State2.runmode = 1;
 676:src/keys.c    **** 	update_program_bounds(1);
 677:src/keys.c    **** 	set_lift();
 678:src/keys.c    **** 
 679:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 680:src/keys.c    **** 	// but must not be cleared.
 681:src/keys.c    **** 	Voltage = v;
 682:src/keys.c    **** 	LastKey = k;
 683:src/keys.c    **** #ifndef REALBUILD
 684:src/keys.c    **** 	State2.trace = b;
 685:src/keys.c    **** 	State2.flags = a;
 686:src/keys.c    **** #else
 687:src/keys.c    **** 	TestFlag = t;
 688:src/keys.c    **** #endif
 689:src/keys.c    **** 	ShowRegister = regX_idx;
 690:src/keys.c    **** }
 691:src/keys.c    **** 
 692:src/keys.c    **** void soft_init_state(void) {
 693:src/keys.c    **** 	int soft;
 694:src/keys.c    **** 	unsigned int runmode;
 695:src/keys.c    **** 	unsigned int alphas;
 696:src/keys.c    **** 
 697:src/keys.c    **** 	if (CmdLineLength) {
 698:src/keys.c    **** 		CmdLineLength = 0;
 699:src/keys.c    **** 		CmdLineEex = 0;
 700:src/keys.c    **** 		CmdLineDot = 0;
 701:src/keys.c    **** 		return;
 702:src/keys.c    **** 	}
 703:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 704:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 705:src/keys.c    **** 	runmode = State2.runmode;
 706:src/keys.c    **** 	alphas = State2.alphas;
 707:src/keys.c    **** 	init_state();
 708:src/keys.c    **** 	if (soft) {
 709:src/keys.c    **** 		State2.runmode = runmode;
 710:src/keys.c    **** 		State2.alphas = alphas;
 711:src/keys.c    **** 	}
 712:src/keys.c    **** }
 713:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 14


 714:src/keys.c    **** static int check_confirm(int op) {
 715:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 716:src/keys.c    **** 		const int nilop = argKIND(op);
 717:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 718:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 719:src/keys.c    **** 			return STATE_UNFINISHED;
 720:src/keys.c    **** 		}
 721:src/keys.c    **** #ifndef DM42		
 722:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 723:src/keys.c    **** #endif
 724:src/keys.c    **** #ifdef DM42
 725:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 726:src/keys.c    **** #endif
 727:src/keys.c    **** #ifdef INFRARED
 728:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 729:src/keys.c    **** #endif
 730:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 731:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 732:src/keys.c    **** #endif
 733:src/keys.c    **** 		) {
 734:src/keys.c    **** 			// These commands are not programmable
 735:src/keys.c    **** 			NonProgrammable = 1;
 736:src/keys.c    **** 		}
 737:src/keys.c    **** 	}
 738:src/keys.c    **** 	return op;
 739:src/keys.c    **** }
 740:src/keys.c    **** 
 741:src/keys.c    **** static void set_smode(const enum single_disp d) {
 742:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 743:src/keys.c    **** }
 744:src/keys.c    **** 
 745:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 746:src/keys.c    **** 	const int code = 100 + n;
 747:src/keys.c    **** 	unsigned int pc = state_pc();
 748:src/keys.c    **** 
 749:src/keys.c    **** 	if (State2.runmode) {
 750:src/keys.c    **** 		if (isXROM(pc))
 751:src/keys.c    **** 			pc = 1;
 752:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 753:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 754:src/keys.c    **** 	}
 755:src/keys.c    **** 	return dflt;
 756:src/keys.c    **** }
 757:src/keys.c    **** 
 758:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 759:src/keys.c    ****  * as digits.
 760:src/keys.c    ****  */
 761:src/keys.c    **** static int intltr(int d) {
 762:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 763:src/keys.c    **** }
 764:src/keys.c    **** 
 765:src/keys.c    **** /*
 766:src/keys.c    ****  *  Process a key code in the unshifted mode.
 767:src/keys.c    ****  */
 768:src/keys.c    **** static int process_normal(const keycode c)
 769:src/keys.c    **** {
 770:src/keys.c    **** 	static const unsigned short int op_map[] = {
ARM GAS  /tmp/cceyv6gL.s 			page 15


 771:src/keys.c    **** 		// Row 1
 772:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 773:src/keys.c    **** 		OP_MON  | OP_RECIP,
 774:src/keys.c    **** 		OP_DYA  | OP_POW,
 775:src/keys.c    **** 		OP_MON  | OP_SQRT,
 776:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 777:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 778:src/keys.c    **** 		// Row 2
 779:src/keys.c    **** 		RARG_STO,
 780:src/keys.c    **** 		RARG_RCL,
 781:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 782:src/keys.c    **** 		// Row 3
 783:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 784:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 785:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 786:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 787:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 788:src/keys.c    **** 		// Row 4
 789:src/keys.c    **** 		RARG_XEQ,
 790:src/keys.c    **** 		OP_SPEC | OP_7,
 791:src/keys.c    **** 		OP_SPEC | OP_8,
 792:src/keys.c    **** 		OP_SPEC | OP_9,
 793:src/keys.c    **** 		OP_DYA  | OP_DIV,
 794:src/keys.c    **** 		// Row 5
 795:src/keys.c    **** 		STATE_BST,
 796:src/keys.c    **** 		OP_SPEC | OP_4,
 797:src/keys.c    **** 		OP_SPEC | OP_5,
 798:src/keys.c    **** 		OP_SPEC | OP_6,
 799:src/keys.c    **** 		OP_DYA  | OP_MUL,
 800:src/keys.c    **** 		// Row 6
 801:src/keys.c    **** 		STATE_SST,		// SST
 802:src/keys.c    **** 		OP_SPEC | OP_1,
 803:src/keys.c    **** 		OP_SPEC | OP_2,
 804:src/keys.c    **** 		OP_SPEC | OP_3,
 805:src/keys.c    **** 		OP_DYA  | OP_SUB,
 806:src/keys.c    **** 		// Row 7
 807:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 808:src/keys.c    **** 		OP_SPEC | OP_0,
 809:src/keys.c    **** 		OP_SPEC | OP_DOT,
 810:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 811:src/keys.c    **** 		OP_DYA  | OP_ADD,
 812:src/keys.c    **** #ifdef DM42
 813:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 814:src/keys.c    **** #endif
 815:src/keys.c    **** 	};
 816:src/keys.c    **** 
 817:src/keys.c    **** 	int lc = keycode_to_linear(c);
 818:src/keys.c    **** 	int op = op_map[lc];
 819:src/keys.c    **** 	
 820:src/keys.c    **** 	// The switch handles all the special cases
 821:src/keys.c    **** #ifdef DM42
 822:src/keys.c    **** 	int op_int;
 823:src/keys.c    **** 	if (UState.intm) {
 824:src/keys.c    **** 	  switch (c) {
 825:src/keys.c    **** 	  case K00:
 826:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 827:src/keys.c    **** 	    if (intltr(10)) {
ARM GAS  /tmp/cceyv6gL.s 			page 16


 828:src/keys.c    **** 	      return op;
 829:src/keys.c    **** 	    }
 830:src/keys.c    **** 	    else {
 831:src/keys.c    **** 	      return check_f_key(0, op);
 832:src/keys.c    **** 	    }
 833:src/keys.c    **** 	  case K01:
 834:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 835:src/keys.c    **** 	    if (intltr(11)) {
 836:src/keys.c    **** 	      return op;
 837:src/keys.c    **** 	    }
 838:src/keys.c    **** 	    else {
 839:src/keys.c    **** 	      return check_f_key(1, op);
 840:src/keys.c    **** 	    }
 841:src/keys.c    **** 	  case K03:
 842:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 843:src/keys.c    **** 	    if (intltr(12)) {
 844:src/keys.c    **** 	      return op_int;
 845:src/keys.c    **** 	    }
 846:src/keys.c    **** 	    else {
 847:src/keys.c    **** 	      return check_f_key(2, op);
 848:src/keys.c    **** 	    }
 849:src/keys.c    **** 	  case K30:
 850:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 851:src/keys.c    **** 	    if (intltr(15)) {
 852:src/keys.c    **** 	      return op_int;
 853:src/keys.c    **** 	    }
 854:src/keys.c    **** 	  default:;
 855:src/keys.c    **** 	  }
 856:src/keys.c    **** 	}
 857:src/keys.c    **** #endif  
 858:src/keys.c    **** 
 859:src/keys.c    **** 	switch (c) {
 860:src/keys.c    **** #ifdef DM42
 861:src/keys.c    **** 	case K00:
 862:src/keys.c    **** 		return check_f_key(0, op);
 863:src/keys.c    **** 	case K01:
 864:src/keys.c    **** 		return check_f_key(1, op);
 865:src/keys.c    **** 	case K03:
 866:src/keys.c    **** 		return check_f_key(2, op);
 867:src/keys.c    **** #else
 868:src/keys.c    **** 	case K00:
 869:src/keys.c    **** 	case K01:
 870:src/keys.c    **** 		if (UState.intm)
 871:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 872:src/keys.c    **** 	case K02:
 873:src/keys.c    **** 	case K03:
 874:src/keys.c    **** 		if (intltr(lc + 10)) {
 875:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 876:src/keys.c    **** 			return op;
 877:src/keys.c    **** 		}
 878:src/keys.c    **** 		return check_f_key(lc, op);
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 	case K_ARROW:
 881:src/keys.c    **** #ifndef DM42
 882:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 883:src/keys.c    **** 		if (intltr(14))
 884:src/keys.c    **** 			return op;
ARM GAS  /tmp/cceyv6gL.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		if (UState.intm)
 887:src/keys.c    **** 			return op;
 888:src/keys.c    **** #endif
 889:src/keys.c    **** #endif		
 890:src/keys.c    **** 		if (is_bad_cmdline())
 891:src/keys.c    **** 			return STATE_UNFINISHED;
 892:src/keys.c    **** 		process_cmdline_set_lift();
 893:src/keys.c    **** 		State2.arrow = 1;
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 		set_menu (M_Arrow); // arrow menu
 896:src/keys.c    **** 		display_current_menu ();
 897:src/keys.c    **** 		lcd_refresh ();
 898:src/keys.c    **** #else
 899:src/keys.c    **** 		set_shift(SHIFT_G);
 900:src/keys.c    **** #endif
 901:src/keys.c    **** 		break;
 902:src/keys.c    **** 
 903:src/keys.c    **** 	case K_CMPLX:
 904:src/keys.c    **** #ifdef DM42
 905:src/keys.c    **** 	  if (UState.intm)
 906:src/keys.c    **** 	    break; // return nothing
 907:src/keys.c    **** 	  State2.cmplx = 1;
 908:src/keys.c    **** #else
 909:src/keys.c    **** 	  if (UState.intm)
 910:src/keys.c    **** 	    return op;
 911:src/keys.c    **** 	  State2.cmplx = 1;
 912:src/keys.c    **** #endif
 913:src/keys.c    **** 	  break;
 914:src/keys.c    **** 
 915:src/keys.c    **** 	case K24:				// <-
 916:src/keys.c    **** 		if (State2.disp_temp)
 917:src/keys.c    **** 			return STATE_UNFINISHED;
 918:src/keys.c    **** 		if (State2.runmode)
 919:src/keys.c    **** 			return op;
 920:src/keys.c    **** 		return STATE_BACKSPACE;
 921:src/keys.c    **** 
 922:src/keys.c    **** 	case K10:				// STO
 923:src/keys.c    **** 	case K11:				// RCL
 924:src/keys.c    **** 	case K30:				// XEQ
 925:src/keys.c    **** 		init_arg((enum rarg)op);
 926:src/keys.c    **** 		break;
 927:src/keys.c    **** 
 928:src/keys.c    **** 	default:
 929:src/keys.c    **** 		return op;			// Keys handled by table
 930:src/keys.c    **** 	}
 931:src/keys.c    **** 	return STATE_UNFINISHED;
 932:src/keys.c    **** }
 933:src/keys.c    **** 
 934:src/keys.c    **** 
 935:src/keys.c    **** /*
 936:src/keys.c    ****  *  Process a key code after f or g shift
 937:src/keys.c    ****  */
 938:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 939:src/keys.c    **** 
 940:src/keys.c    **** #define NO_INT 0xf000
 941:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
ARM GAS  /tmp/cceyv6gL.s 			page 18


 942:src/keys.c    **** 		// Row 1
 943:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 944:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 945:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 946:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 947:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 948:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 949:src/keys.c    **** 		// Row 2
 950:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 951:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 952:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 953:src/keys.c    **** 		// Row 3
 954:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 955:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 956:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 957:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 958:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 959:src/keys.c    **** 		// Row 4
 960:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 961:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 962:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 963:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 964:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 965:src/keys.c    **** 		// Row 5
 966:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 967:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 968:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 969:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 970:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 971:src/keys.c    **** 		// Row 6
 972:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 973:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 974:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 975:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 976:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 977:src/keys.c    **** 		// Row 7
 978:src/keys.c    **** #ifdef INFRARED
 979:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 980:src/keys.c    **** #else
 981:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 982:src/keys.c    **** #endif
 983:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 984:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 985:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 986:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 987:src/keys.c    **** #ifdef DM42
 988:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 989:src/keys.c    **** #endif
 990:src/keys.c    **** 	};
 991:src/keys.c    **** 
 992:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 993:src/keys.c    **** 		STATE_UNFINISHED,
 994:src/keys.c    **** 		STATE_UNFINISHED,
 995:src/keys.c    **** 		OP_DYA  | OP_POW,
 996:src/keys.c    **** 		OP_MON  | OP_SQRT
 997:src/keys.c    **** 	};
 998:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 19


 999:src/keys.c    **** 	enum shifts shift = reset_shift();
1000:src/keys.c    **** 	int lc = keycode_to_linear(c);
1001:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
1002:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
1003:src/keys.c    **** 	if (no_int)
1004:src/keys.c    **** 		op &= ~NO_INT;
1005:src/keys.c    **** 
1006:src/keys.c    **** 	switch (c) {
1007:src/keys.c    **** 	case K00:
1008:src/keys.c    **** 	  if (! UState.intm) {
1009:src/keys.c    **** 	    //	    print_debug(100,0);
1010:src/keys.c    **** 	    State2.hyp = 1;
1011:src/keys.c    **** 	    State2.dot = op;
1012:src/keys.c    **** 	    // State2.cmplx = 0;
1013:src/keys.c    **** 	    return STATE_UNFINISHED;
1014:src/keys.c    **** 	  }
1015:src/keys.c    **** 	  // fall through
1016:src/keys.c    **** 	case K01:
1017:src/keys.c    **** #ifdef DM42
1018:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1019:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1020:src/keys.c    **** 	  }
1021:src/keys.c    **** 	  break;
1022:src/keys.c    **** #endif
1023:src/keys.c    **** #ifndef DM42
1024:src/keys.c    **** 	case K02:
1025:src/keys.c    **** #endif
1026:src/keys.c    **** 	case K03:
1027:src/keys.c    **** #ifdef DM42
1028:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1030:src/keys.c    **** 		}
1031:src/keys.c    **** 		break;
1032:src/keys.c    **** #else
1033:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1034:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1035:src/keys.c    **** 		}
1036:src/keys.c    **** 		break;
1037:src/keys.c    **** #endif
1038:src/keys.c    **** 	case K20:				// Alpha
1039:src/keys.c    **** 		if (shift == SHIFT_F) {
1040:src/keys.c    **** 			if (is_bad_cmdline())
1041:src/keys.c    **** 				return STATE_UNFINISHED;
1042:src/keys.c    **** 			process_cmdline_set_lift();
1043:src/keys.c    **** 			State2.alphas = 1;
1044:src/keys.c    **** #ifdef DM42
1045:src/keys.c    **** 			set_menu(M_Alpha);
1046:src/keys.c    **** 			display_current_menu();
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		}
1049:src/keys.c    **** 		break;
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 	case K31:
1052:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
1054:src/keys.c    **** 	  }
1055:src/keys.c    **** 	  break;
ARM GAS  /tmp/cceyv6gL.s 			page 20


1056:src/keys.c    **** 	case K30:
1057:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
1059:src/keys.c    **** 	  }
1060:src/keys.c    **** 	  break;
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	case K51:
1063:src/keys.c    **** 		if (is_bad_cmdline())
1064:src/keys.c    **** 			return STATE_UNFINISHED;
1065:src/keys.c    **** 		process_cmdline_set_lift();
1066:src/keys.c    **** 		State2.test = op;
1067:src/keys.c    **** 		return STATE_UNFINISHED;
1068:src/keys.c    **** 
1069:src/keys.c    **** 	case K50:
1070:src/keys.c    **** #ifndef REALBUILD
1071:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1072:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1073:src/keys.c    **** 			return STATE_UNFINISHED;
1074:src/keys.c    **** 		}
1075:src/keys.c    **** #endif
1076:src/keys.c    **** 	case K52:
1077:src/keys.c    **** 	case K53:
1078:src/keys.c    **** 	case K63:
1079:src/keys.c    **** 	case K64:
1080:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1081:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1082:src/keys.c    **** 				init_arg((enum rarg) op);
1083:src/keys.c    **** 			}
1084:src/keys.c    **** 			return STATE_UNFINISHED;
1085:src/keys.c    **** 		}
1086:src/keys.c    **** 		break;
1087:src/keys.c    **** 
1088:src/keys.c    **** 	default:
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 	}
1091:src/keys.c    **** 	if (no_int && UState.intm)
1092:src/keys.c    **** 		return STATE_UNFINISHED;
1093:src/keys.c    **** 
1094:src/keys.c    **** 	return check_confirm(op);
1095:src/keys.c    **** #undef NO_INT
1096:src/keys.c    **** }
1097:src/keys.c    **** 
1098:src/keys.c    **** /*
1099:src/keys.c    ****  *  Process a key code after h shift
1100:src/keys.c    ****  */
1101:src/keys.c    **** static int process_h_shifted(const keycode c) {
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1103:src/keys.c    **** #define NO_INT   0x4000
1104:src/keys.c    **** 	static const unsigned short int op_map[] = {
1105:src/keys.c    **** 		// Row 1
1106:src/keys.c    **** 		_RARG   | RARG_STD,
1107:src/keys.c    **** 		_RARG   | RARG_FIX,
1108:src/keys.c    **** 		_RARG   | RARG_SCI,
1109:src/keys.c    **** 		_RARG   | RARG_ENG,
1110:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1111:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1112:src/keys.c    **** 		// Row 2
ARM GAS  /tmp/cceyv6gL.s 			page 21


1113:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1114:src/keys.c    **** 		_RARG   | RARG_VIEW,
1115:src/keys.c    **** 		OP_NIL  | OP_RUP,
1116:src/keys.c    **** 		// Row 3
1117:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1118:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1119:src/keys.c    **** 		OP_MON  | OP_NOT,
1120:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1121:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1122:src/keys.c    **** 		// Row 4
1123:src/keys.c    **** 		_RARG   | RARG_GTO,
1124:src/keys.c    **** 		OP_DYA  | OP_LAND,
1125:src/keys.c    **** 		OP_DYA  | OP_LOR,
1126:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1127:src/keys.c    **** 		OP_DYA  | OP_MOD,
1128:src/keys.c    **** 		// Row 5
1129:src/keys.c    **** 		OP_MON  | OP_FACT,
1130:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1131:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1132:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1133:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1134:src/keys.c    **** 		// Row 6
1135:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1136:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1137:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1138:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1139:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1140:src/keys.c    **** 		// Row 7
1141:src/keys.c    **** 		OP_NIL | OP_OFF,
1142:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1143:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1144:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1145:src/keys.c    **** #else
1146:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1147:src/keys.c    **** #endif
1148:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1149:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1150:src/keys.c    **** #ifdef DM42
1151:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1152:src/keys.c    **** #endif
1153:src/keys.c    **** 	};
1154:src/keys.c    **** 
1155:src/keys.c    **** 	int lc = keycode_to_linear(c);
1156:src/keys.c    **** 	int op = op_map[lc];
1157:src/keys.c    **** 	reset_shift();
1158:src/keys.c    **** 
1159:src/keys.c    **** 	// The switch handles all the special cases
1160:src/keys.c    **** 	switch (c) {
1161:src/keys.c    **** 	case K62:
1162:src/keys.c    **** 		if (UState.intm)
1163:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1164:src/keys.c    **** 		else
1165:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1166:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1167:src/keys.c    **** #else
1168:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1169:src/keys.c    **** #endif
ARM GAS  /tmp/cceyv6gL.s 			page 22


1170:src/keys.c    **** 		break;
1171:src/keys.c    **** 
1172:src/keys.c    **** 	case K63:					// Program<->Run mode
1173:src/keys.c    **** 		if (is_bad_cmdline())
1174:src/keys.c    **** 			return STATE_UNFINISHED;
1175:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		update_program_bounds(1);
1178:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1179:src/keys.c    **** 			set_pc(0);
1180:src/keys.c    **** 		break;
1181:src/keys.c    **** 
1182:src/keys.c    **** 	default:
1183:src/keys.c    **** 		break;
1184:src/keys.c    **** 	}
1185:src/keys.c    **** 
1186:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1187:src/keys.c    **** 		if (op & _RARG) {
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1189:src/keys.c    **** 			op = STATE_UNFINISHED;
1190:src/keys.c    **** 		}
1191:src/keys.c    **** 	}
1192:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1193:src/keys.c    **** #undef _RARG
1194:src/keys.c    **** #undef NO_INT
1195:src/keys.c    **** }
1196:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1197:src/keys.c    **** 
1198:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1199:src/keys.c    **** 
1200:src/keys.c    **** static void do_command_line ( void ) {
1201:src/keys.c    **** 	if (CmdLineLength) {
1202:src/keys.c    **** 		State2.state_lift = 0;
1203:src/keys.c    **** 		process_cmdline();
1204:src/keys.c    **** 	}
1205:src/keys.c    **** }
1206:src/keys.c    **** 
1207:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1209:src/keys.c    **** // The argument sets the lift state after entry is finished.
1210:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1211:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1212:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1213:src/keys.c    **** 
1214:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1215:src/keys.c    **** 		CLEAR_REAL;
1216:src/keys.c    **** 		do_command_line();
1217:src/keys.c    **** 	}
1218:src/keys.c    **** 	else if (IMAG_FLAG) {
1219:src/keys.c    **** 		CLEAR_IMAG;
1220:src/keys.c    **** 		do_command_line();
1221:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1222:src/keys.c    **** 	}
1223:src/keys.c    **** */
1224:src/keys.c    **** 	do_command_line();
1225:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1226:src/keys.c    **** 	CLEAR_REAL;
ARM GAS  /tmp/cceyv6gL.s 			page 23


1227:src/keys.c    **** 	CLEAR_IMAG;
1228:src/keys.c    **** 
1229:src/keys.c    **** 	State2.state_lift = lift;
1230:src/keys.c    **** 
1231:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1232:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1233:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1234:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1235:src/keys.c    **** 		//call p2r
1236:src/keys.c    **** 		update_speed(0);
1237:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1238:src/keys.c    **** #ifdef RP_PREFIX
1239:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1240:src/keys.c    **** #endif
1241:src/keys.c    **** 		SET_POLAR_READY;
1242:src/keys.c    **** 	}
1243:src/keys.c    **** }
1244:src/keys.c    **** 
1245:src/keys.c    **** static void stack_restore ( void ) { 
1246:src/keys.c    **** 	// called if number entry terminated by EXIT key
1247:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1248:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1249:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1251:src/keys.c    **** 		drop ( OP_DROPXY );
1252:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1253:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1254:src/keys.c    **** 	}
1255:src/keys.c    **** 	else { // X, Y have been overwritten
1256:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1257:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
1261:src/keys.c    **** 	CLEAR_POLAR_READY;
1262:src/keys.c    **** }
1263:src/keys.c    **** 
1264:src/keys.c    **** void stack_begin ( int zero_y ) { 
1265:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1266:src/keys.c    **** 	// zeros y if requested. 
1267:src/keys.c    **** 	CLEAR_POLAR_READY;
1268:src/keys.c    **** 	if ( State2.state_lift ){
1269:src/keys.c    **** 		SET_INIT_LIFT;
1270:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1272:src/keys.c    **** 		lift();
1273:src/keys.c    **** 		zero_X();
1274:src/keys.c    **** 		lift();
1275:src/keys.c    **** 		State2.state_lift = 0;
1276:src/keys.c    **** 	}
1277:src/keys.c    **** 	else {
1278:src/keys.c    **** 		CLEAR_INIT_LIFT;
1279:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1281:src/keys.c    **** 		zero_X();
1282:src/keys.c    **** 		if ( zero_y ) zero_Y();
1283:src/keys.c    **** 	}
ARM GAS  /tmp/cceyv6gL.s 			page 24


1284:src/keys.c    **** }
1285:src/keys.c    **** 
1286:src/keys.c    ****  static int process_c_lock ( const keycode c ) { // main function - called from process (c) functio
1287:src/keys.c    **** 
1288:src/keys.c    ****    enum shifts shift = cur_shift();
1289:src/keys.c    **** 
1290:src/keys.c    ****    // Individual keys needing special treatment
1291:src/keys.c    **** 
1292:src/keys.c    ****    if ( (c < K05) && shift == SHIFT_H ){ // display modes
1293:src/keys.c    ****      return process_h_shifted (c);
1294:src/keys.c    ****    }
1295:src/keys.c    **** 
1296:src/keys.c    **** 
1297:src/keys.c    ****    if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because oth
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
1299:src/keys.c    ****    }
1300:src/keys.c    ****    if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, H
1301:src/keys.c    ****      return process_fg_shifted (c);
1302:src/keys.c    ****    }
1303:src/keys.c    **** 
1304:src/keys.c    ****    if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry comple
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
1306:src/keys.c    ****        reset_shift();
1307:src/keys.c    ****        if ( CmdLineLength ) {
1308:src/keys.c    **** 	 State2.state_lift = 0;
1309:src/keys.c    **** 	 return OP_NIL | OP_PIB;
1310:src/keys.c    ****        }
1311:src/keys.c    ****        else {
1312:src/keys.c    **** 	 return OP_NIL | OP_PIA;
1313:src/keys.c    ****        }
1314:src/keys.c    ****      }
1315:src/keys.c    ****      else {
1316:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1317:src/keys.c    ****        const int eex_pi = 1;
1318:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1319:src/keys.c    ****        const int eex_pi = get_user_flag(regL_idx);
1320:src/keys.c    **** #else
1321:src/keys.c    ****        const int eex_pi = 0;
1322:src/keys.c    **** #endif
1323:src/keys.c    ****        if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // norma
1324:src/keys.c    **** 	 finish_cpx_entry(1);
1325:src/keys.c    **** 	 return process_cmplx(c);
1326:src/keys.c    ****        }
1327:src/keys.c    ****      }
1328:src/keys.c    ****    }
1329:src/keys.c    **** 
1330:src/keys.c    ****    if (shift != SHIFT_N) { // other shifted keys - special cases first.
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
1332:src/keys.c    ****      switch (c) {
1333:src/keys.c    ****      case (K60):
1334:src/keys.c    ****        reset_shift();
1335:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1336:src/keys.c    ****      case (K21): // x<->y key
1337:src/keys.c    ****        if (shift == SHIFT_F || shift == SHIFT_G) { // exchanges real and imag parts with either shi
1338:src/keys.c    **** 	 reset_shift();
1339:src/keys.c    **** 	 CLEAR_POLAR_READY;
1340:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
ARM GAS  /tmp/cceyv6gL.s 			page 25


1341:src/keys.c    ****        }
1342:src/keys.c    ****        else if (shift == SHIFT_H) {
1343:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
1344:src/keys.c    ****        }
1345:src/keys.c    ****        break;
1346:src/keys.c    ****      case (K40): // up-arrow key
1347:src/keys.c    ****        if (shift == SHIFT_F) {
1348:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
1349:src/keys.c    ****        }
1350:src/keys.c    ****        else if (shift == SHIFT_G) {
1351:src/keys.c    **** 	 SET_POLAR_DISPLAY;
1352:src/keys.c    **** 	 CLEAR_POLAR_READY;
1353:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
1354:src/keys.c    ****        }
1355:src/keys.c    ****        else if (shift == SHIFT_H) { // ND addition on DM42 - should work on ordinary calculator too
1356:src/keys.c    **** 	 return process_cmplx (c);
1357:src/keys.c    ****        }
1358:src/keys.c    ****        break;
1359:src/keys.c    ****      case (K22): // +/- key
1360:src/keys.c    ****        reset_shift();
1361:src/keys.c    ****        if (shift == SHIFT_F ) {
1362:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
1363:src/keys.c    ****        }
1364:src/keys.c    ****        else if (shift == SHIFT_H) {
1365:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
1366:src/keys.c    ****        }
1367:src/keys.c    ****        break;
1368:src/keys.c    ****      case (K62): // IP/FP key
1369:src/keys.c    ****        reset_shift();
1370:src/keys.c    ****        if (shift == SHIFT_F) {
1371:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
1372:src/keys.c    ****        }
1373:src/keys.c    ****        else if (shift == SHIFT_G) {
1374:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
1375:src/keys.c    ****        }
1376:src/keys.c    ****        break;
1377:src/keys.c    ****      case (K44): // x (times) key
1378:src/keys.c    ****        if (shift == SHIFT_H) { // real*real + i imag*imag
1379:src/keys.c    **** 	 reset_shift();
1380:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
1381:src/keys.c    ****        }
1382:src/keys.c    ****        else {
1383:src/keys.c    **** 	 return process_cmplx(c);
1384:src/keys.c    ****        }
1385:src/keys.c    ****        break;
1386:src/keys.c    ****      case (K34): // divide key
1387:src/keys.c    ****        if (shift == SHIFT_H) { // real/real + i imag/imag
1388:src/keys.c    **** 	 reset_shift();
1389:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
1390:src/keys.c    ****        }
1391:src/keys.c    ****        else {
1392:src/keys.c    **** 	 return process_cmplx(c);
1393:src/keys.c    ****        }
1394:src/keys.c    ****        break;
1395:src/keys.c    ****      case (K24): // <- key
1396:src/keys.c    ****        if (POLAR_DISPLAY) break;
1397:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
ARM GAS  /tmp/cceyv6gL.s 			page 26


1398:src/keys.c    **** 	 zero_X ();
1399:src/keys.c    **** 	 State2.state_lift = 0;
1400:src/keys.c    **** 	 SET_REAL;
1401:src/keys.c    **** 	 stack_begin (0);
1402:src/keys.c    ****        }
1403:src/keys.c    ****        break;
1404:src/keys.c    ****      default:
1405:src/keys.c    ****        return process_cmplx(c); // for shifted keys not listed above
1406:src/keys.c    ****      }
1407:src/keys.c    ****      reset_shift(); // for the keys listed above; functions complete
1408:src/keys.c    ****      return STATE_UNFINISHED;
1409:src/keys.c    ****    }
1410:src/keys.c    **** 
1411:src/keys.c    ****    switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally n
1412:src/keys.c    ****    case (K61):
1413:src/keys.c    ****    case (K62):
1414:src/keys.c    ****    case (K51):
1415:src/keys.c    ****    case (K52):
1416:src/keys.c    ****    case (K53):
1417:src/keys.c    ****    case (K41):
1418:src/keys.c    ****    case (K42):
1419:src/keys.c    ****    case (K43):
1420:src/keys.c    ****    case (K31):
1421:src/keys.c    ****    case (K32):
1422:src/keys.c    ****    case (K33):
1423:src/keys.c    ****    case (K23): // 0.123456789EEX
1424:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
1426:src/keys.c    ****        stack_begin (1);
1427:src/keys.c    ****      }
1428:src/keys.c    ****      return process_normal(c);
1429:src/keys.c    ****    case (K22): // CHS
1430:src/keys.c    ****      //	case (K23): // EEX
1431:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1432:src/keys.c    ****        return process_cmplx(c);
1433:src/keys.c    ****      }
1434:src/keys.c    ****      else {
1435:src/keys.c    ****        return process_normal(c);
1436:src/keys.c    ****      }
1437:src/keys.c    ****    case (K24): // backspace
1438:src/keys.c    ****    case (K04): // arrow
1439:src/keys.c    ****    case (K_ARROW):
1440:src/keys.c    ****      return process_normal(c);
1441:src/keys.c    ****    case (K_CMPLX):
1442:src/keys.c    ****      if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1443:src/keys.c    ****        CLEAR_REAL;
1444:src/keys.c    ****        SET_IMAG;
1445:src/keys.c    ****        do_command_line();
1446:src/keys.c    ****        State2.state_lift = 0;
1447:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1448:src/keys.c    ****      }
1449:src/keys.c    ****      else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1450:src/keys.c    ****        finish_cpx_entry (1);
1451:src/keys.c    ****      }
1452:src/keys.c    ****      else { // down here we need a part that deals with CPX being pressed without a real part being
1453:src/keys.c    ****        SET_IMAG;
1454:src/keys.c    ****        stack_begin (1);
ARM GAS  /tmp/cceyv6gL.s 			page 27


1455:src/keys.c    ****      }
1456:src/keys.c    ****      return STATE_UNFINISHED;
1457:src/keys.c    ****    default:;
1458:src/keys.c    ****    }
1459:src/keys.c    ****    finish_cpx_entry(0);
1460:src/keys.c    ****    return process_cmplx(c);
1461:src/keys.c    **** 
1462:src/keys.c    ****  }
1463:src/keys.c    **** 
1464:src/keys.c    **** #endif
1465:src/keys.c    **** 
1466:src/keys.c    **** /*
1467:src/keys.c    ****  *  Process a key code after CPX
1468:src/keys.c    ****  */
1469:src/keys.c    **** static int process_cmplx(const keycode c) {
1470:src/keys.c    **** #define _RARG   0xFF00
1471:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1472:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1473:src/keys.c    **** 
1474:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1475:src/keys.c    **** 		// Row 1
1476:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1477:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1478:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1479:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1480:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1482:src/keys.c    **** 		// Row 2
1483:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1484:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1485:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1486:src/keys.c    **** 		// Row 3
1487:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1488:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1489:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1490:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1491:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1492:src/keys.c    **** 		// Row 4
1493:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1494:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1495:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1497:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1498:src/keys.c    **** 		// Row 5
1499:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1500:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1501:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1502:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1503:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1504:src/keys.c    **** 		// Row 6
1505:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1506:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1507:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1508:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1509:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1510:src/keys.c    **** 		// Row 7
1511:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
ARM GAS  /tmp/cceyv6gL.s 			page 28


1512:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1513:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1514:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1515:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1516:src/keys.c    **** #else
1517:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1518:src/keys.c    **** #endif
1519:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1520:src/keys.c    **** #ifdef DM42
1521:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1522:src/keys.c    **** #endif
1523:src/keys.c    **** 	};
1524:src/keys.c    **** 
1525:src/keys.c    **** 	enum shifts shift = reset_shift();
1526:src/keys.c    **** 	int lc = keycode_to_linear(c);
1527:src/keys.c    **** 	int op = op_map[lc][shift];
1528:src/keys.c    **** 	State2.cmplx = 0;
1529:src/keys.c    **** 
1530:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1532:src/keys.c    **** 		return STATE_UNFINISHED;
1533:src/keys.c    **** 	}
1534:src/keys.c    **** 	if (c == K00) {
1535:src/keys.c    **** 		// HYP
1536:src/keys.c    **** 		process_cmdline_set_lift();
1537:src/keys.c    **** 		//		print_debug(100,1);
1538:src/keys.c    **** 		State2.hyp = 1;
1539:src/keys.c    **** 		State2.dot = op;
1540:src/keys.c    **** 		State2.cmplx = 1;
1541:src/keys.c    **** 		return STATE_UNFINISHED;
1542:src/keys.c    **** 	}
1543:src/keys.c    **** 
1544:src/keys.c    **** 	if (shift != SHIFT_N) {
1545:src/keys.c    **** 		switch (c) {
1546:src/keys.c    **** 		case K_CMPLX:
1547:src/keys.c    **** 			set_shift(shift);
1548:src/keys.c    **** 			break;
1549:src/keys.c    **** 
1550:src/keys.c    **** 		case K51:
1551:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1552:src/keys.c    **** 				if (is_bad_cmdline())
1553:src/keys.c    **** 					return STATE_UNFINISHED;
1554:src/keys.c    **** 				process_cmdline_set_lift();
1555:src/keys.c    **** 				State2.cmplx = 1;
1556:src/keys.c    **** 				State2.test = op;
1557:src/keys.c    **** 			}
1558:src/keys.c    **** 			return STATE_UNFINISHED;
1559:src/keys.c    **** 
1560:src/keys.c    **** 		case K60:
1561:src/keys.c    **** 			init_state();
1562:src/keys.c    **** 			break;
1563:src/keys.c    **** 
1564:src/keys.c    **** 		default:
1565:src/keys.c    **** 			break;
1566:src/keys.c    **** 		}
1567:src/keys.c    **** 	}
1568:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
ARM GAS  /tmp/cceyv6gL.s 			page 29


1569:src/keys.c    **** 	return check_confirm(op);
1570:src/keys.c    **** #else
1571:src/keys.c    **** 	return op;
1572:src/keys.c    **** #endif
1573:src/keys.c    **** 
1574:src/keys.c    **** #undef _RARG
1575:src/keys.c    **** #undef CSWAPXZ
1576:src/keys.c    **** #undef CNUM
1577:src/keys.c    **** }
1578:src/keys.c    **** 
1579:src/keys.c    **** 
1580:src/keys.c    **** 
1581:src/keys.c    **** /*
1582:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1583:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1584:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1585:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1586:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1587:src/keys.c    ****  * the ON key are dealt with by our caller.
1588:src/keys.c    ****  */
1589:src/keys.c    **** static int process_hyp(const keycode c) {
1590:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1591:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1592:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1593:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1594:src/keys.c    **** 	};
1595:src/keys.c    **** 	int cmplx = State2.cmplx;
1596:src/keys.c    **** 	int f = State2.dot;
1597:src/keys.c    **** 
1598:src/keys.c    **** 	State2.hyp = 0;
1599:src/keys.c    **** 	State2.cmplx = 0;
1600:src/keys.c    **** 	State2.dot = 0;
1601:src/keys.c    **** #ifdef DM42
1602:src/keys.c    **** 	reset_shift();
1603:src/keys.c    **** #endif
1604:src/keys.c    **** 	switch ((int)c) {
1605:src/keys.c    **** 
1606:src/keys.c    **** 	case K01:
1607:src/keys.c    **** 	case K02:
1608:src/keys.c    **** 	case K03:
1609:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1610:src/keys.c    **** 
1611:src/keys.c    **** 	case K_CMPLX:
1612:src/keys.c    **** 		cmplx = ! cmplx;
1613:src/keys.c    **** 		goto stay;
1614:src/keys.c    **** 
1615:src/keys.c    **** #ifndef DM42
1616:src/keys.c    **** 	case K_F: 
1617:src/keys.c    **** 	case K_G:
1618:src/keys.c    **** 		f = (c == K_F);
1619:src/keys.c    **** 		// fall through
1620:src/keys.c    **** #else
1621:src/keys.c    **** 	case K_F:
1622:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1623:src/keys.c    **** #endif
1624:src/keys.c    **** 	stay:
1625:src/keys.c    **** 		// process_cmdline_set_lift();
ARM GAS  /tmp/cceyv6gL.s 			page 30


1626:src/keys.c    **** 	  //	  print_debug(100,2);
1627:src/keys.c    **** 	  
1628:src/keys.c    **** 	  State2.hyp = 1;
1629:src/keys.c    **** 		State2.cmplx = cmplx;
1630:src/keys.c    **** 		State2.dot = f;
1631:src/keys.c    **** 		break;
1632:src/keys.c    **** 
1633:src/keys.c    **** 	default:
1634:src/keys.c    **** 		break;
1635:src/keys.c    **** 	}
1636:src/keys.c    **** 	return STATE_UNFINISHED;
1637:src/keys.c    **** }
1638:src/keys.c    **** 
1639:src/keys.c    **** 
1640:src/keys.c    **** /*
1641:src/keys.c    ****  *  Process a key code after ->
1642:src/keys.c    ****  */
1643:src/keys.c    **** static int process_arrow(const keycode c) {
1644:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1645:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1646:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1647:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1648:src/keys.c    **** 	};
1649:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1650:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1651:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1652:src/keys.c    **** 	};
1653:src/keys.c    **** 	const int shift = reset_shift();
1654:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1655:src/keys.c    **** 
1656:src/keys.c    **** 	State2.arrow = 0;
1657:src/keys.c    **** #ifdef DM42
1658:src/keys.c    **** 	set_last_menu ();
1659:src/keys.c    **** 	display_current_menu ();
1660:src/keys.c    **** #endif
1661:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1662:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
1664:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1665:src/keys.c    **** 	  }
1666:src/keys.c    **** 	  else {
1667:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1668:src/keys.c    **** 	  }
1669:src/keys.c    **** 	}
1670:src/keys.c    **** #endif
1671:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1672:src/keys.c    **** 	
1673:src/keys.c    **** 	if (c >= K10 && c <= K12)
1674:src/keys.c    **** 		return op_map[c - K10][f];
1675:src/keys.c    **** 
1676:src/keys.c    **** 	if (c == K22 || c == K23)
1677:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1678:src/keys.c    **** 
1679:src/keys.c    **** 	return STATE_UNFINISHED;
1680:src/keys.c    **** }
1681:src/keys.c    **** 
1682:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 31


1683:src/keys.c    **** /* Process a GTO . sequence
1684:src/keys.c    ****  */
1685:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1685 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1686 2 view .LVU1
1687:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1687 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1685 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1686 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1687 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1686 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1687 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1686 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1685 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1688:src/keys.c    **** 
1689:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1689 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1686:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1686 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1687:src/keys.c    **** 
  63              		.loc 1 1687 2 is_stmt 1 view .LVU12
  64              		.loc 1 1689 2 view .LVU13
  65              		.loc 1 1689 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1689 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
ARM GAS  /tmp/cceyv6gL.s 			page 32


  73              		.loc 1 1689 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1690:src/keys.c    **** 		return val;
1691:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1691 2 is_stmt 1 view .LVU17
  77              		.loc 1 1691 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1691 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1691 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1691 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1691 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1692:src/keys.c    **** 		return val;
1693:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1693 2 is_stmt 1 view .LVU23
  91              		.loc 1 1693 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1694:src/keys.c    **** 	return -1;
  94              		.loc 1 1694 2 is_stmt 1 view .LVU25
1691:src/keys.c    **** 		return val;
  95              		.loc 1 1691 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1694 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1695:src/keys.c    **** }
 102              		.loc 1 1695 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1695 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
ARM GAS  /tmp/cceyv6gL.s 			page 33


 125              	.LVL6:
 126              	.LFB17:
 745:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 745 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 746 2 view .LVU31
 745:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 745 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 749:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 749 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 747:src/keys.c    **** 
 143              		.loc 1 747 2 is_stmt 1 view .LVU34
 749:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 749 2 view .LVU35
 749:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 749 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 745:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 745 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 749:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 749 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 747:src/keys.c    **** 
 151              		.loc 1 747 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 747:src/keys.c    **** 
 154              		.loc 1 747 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 747:src/keys.c    **** 
 157              		.loc 1 747 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 750:src/keys.c    **** 			pc = 1;
 160              		.loc 1 750 3 is_stmt 1 view .LVU42
 750:src/keys.c    **** 			pc = 1;
 161              		.loc 1 750 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 751:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 751 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
ARM GAS  /tmp/cceyv6gL.s 			page 34


 166              		.loc 1 752 3 is_stmt 1 view .LVU45
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 746 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 752 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 752 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 752 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 752 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 755:src/keys.c    **** }
 186              		.loc 1 755 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 756:src/keys.c    **** 
 188              		.loc 1 756 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 753:src/keys.c    **** 	}
 192              		.loc 1 753 4 is_stmt 1 view .LVU53
 753:src/keys.c    **** 	}
 193              		.loc 1 753 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 756:src/keys.c    **** 
 195              		.loc 1 756 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 756:src/keys.c    **** 
 199              		.loc 1 756 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
ARM GAS  /tmp/cceyv6gL.s 			page 35


 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1696:src/keys.c    **** 
1697:src/keys.c    **** static int gtodot_fkey(int n) {
1698:src/keys.c    **** 	const int code = 100 + n;
1699:src/keys.c    **** 	unsigned int pc = state_pc();
1700:src/keys.c    **** 
1701:src/keys.c    **** 	if(isXROM(pc))
1702:src/keys.c    **** 		pc = 1;
1703:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1704:src/keys.c    **** 	if (pc > 0)
1705:src/keys.c    **** 		return pc;
1706:src/keys.c    **** 	return state_pc();
1707:src/keys.c    **** }
1708:src/keys.c    **** 
1709:src/keys.c    **** static int process_gtodot(const keycode c) {
1710:src/keys.c    **** 	int pc = -1;
1711:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1712:src/keys.c    **** 
1713:src/keys.c    **** 	if (rawpc <= 9) {
1714:src/keys.c    **** 		// Digit 0 - 9
1715:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1716:src/keys.c    **** 	}
1717:src/keys.c    **** #ifdef DM42
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1722:src/keys.c    **** #endif
1723:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1724:src/keys.c    **** 		// A - D
1725:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1726:src/keys.c    **** 		goto fin;
1727:src/keys.c    **** 	}
1728:src/keys.c    **** 	else if (c == K62) {
1729:src/keys.c    **** 		// .
1730:src/keys.c    **** 		rawpc = ProgSize;
1731:src/keys.c    **** 		goto fin;
1732:src/keys.c    **** 	}
1733:src/keys.c    **** 	else if (c == K20) {
1734:src/keys.c    **** 		// ENTER - short circuit processing
1735:src/keys.c    **** 		pc = State2.digval;
1736:src/keys.c    **** 	}
1737:src/keys.c    **** 	else if (c == K24) {
1738:src/keys.c    **** 		// backspace
1739:src/keys.c    **** 		if (State2.numdigit == 0) {
1740:src/keys.c    **** 			goto fin2;
1741:src/keys.c    **** 		} else {
1742:src/keys.c    **** 			State2.numdigit--;
1743:src/keys.c    **** 			State2.digval /= 10;
1744:src/keys.c    **** 		}
1745:src/keys.c    **** 	}
1746:src/keys.c    **** 	else if (c == K_UP) {
1747:src/keys.c    **** 		// up
1748:src/keys.c    **** 		rawpc = state_pc();
ARM GAS  /tmp/cceyv6gL.s 			page 36


1749:src/keys.c    **** 		if (rawpc == 1)
1750:src/keys.c    **** 			rawpc = 0;
1751:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1752:src/keys.c    **** 		update_program_bounds(1);
1753:src/keys.c    **** 		rawpc = ProgBegin;
1754:src/keys.c    **** 		goto fin;
1755:src/keys.c    **** 	}
1756:src/keys.c    **** 	else if (c == K_DOWN) {
1757:src/keys.c    **** 		// down
1758:src/keys.c    **** 		update_program_bounds(1);
1759:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1760:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1761:src/keys.c    **** 			rawpc = 1;
1762:src/keys.c    **** 		goto fin;
1763:src/keys.c    **** 	}
1764:src/keys.c    **** 	if (pc >= 0) {
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
1766:src/keys.c    **** fin:		set_pc(rawpc);
1767:src/keys.c    **** fin2:		State2.gtodot = 0;
1768:src/keys.c    **** 		State2.digval = 0;
1769:src/keys.c    **** 		State2.numdigit = 0;
1770:src/keys.c    **** 	}
1771:src/keys.c    **** 	return STATE_UNFINISHED;
1772:src/keys.c    **** }
1773:src/keys.c    **** 
1774:src/keys.c    **** 
1775:src/keys.c    **** /* Process a keystroke in alpha mode
1776:src/keys.c    ****  */
1777:src/keys.c    **** static int process_alpha(const keycode c) {
1778:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1779:src/keys.c    ****         int op = STATE_UNFINISHED;
1780:src/keys.c    **** 	const enum shifts shift = reset_shift();
1781:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1782:src/keys.c    **** 	State2.alpha_pos = 0;
1783:src/keys.c    **** 
1784:src/keys.c    **** 	switch (c) {
1785:src/keys.c    **** 	case K10:	// STO
1786:src/keys.c    **** 		if (shift == SHIFT_F) {
1787:src/keys.c    **** 			init_arg(RARG_ASTO);
1788:src/keys.c    **** 			return STATE_UNFINISHED;
1789:src/keys.c    **** 		}
1790:src/keys.c    **** 		break;
1791:src/keys.c    **** 
1792:src/keys.c    **** 	case K11:	// RCL - maybe view
1793:src/keys.c    **** 		if (shift == SHIFT_F) {
1794:src/keys.c    **** 			init_arg(RARG_ARCL);
1795:src/keys.c    **** 			return STATE_UNFINISHED;
1796:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1797:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1798:src/keys.c    **** 			return STATE_UNFINISHED;
1799:src/keys.c    **** 		}
1800:src/keys.c    **** 		break;
1801:src/keys.c    **** 
1802:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1803:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1804:src/keys.c    **** 			break;
1805:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
ARM GAS  /tmp/cceyv6gL.s 			page 37


1806:src/keys.c    **** 			State2.multi = 1;
1807:src/keys.c    **** 			State2.numdigit = 0;
1808:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1809:src/keys.c    **** 			return STATE_UNFINISHED;
1810:src/keys.c    **** 		}
1811:src/keys.c    **** 		State2.alphas = 0;
1812:src/keys.c    **** 		State2.alphashift = 0;
1813:src/keys.c    **** #ifdef DM42
1814:src/keys.c    **** 		set_menu(M_Last);
1815:src/keys.c    **** 		display_current_menu();
1816:src/keys.c    **** #endif
1817:src/keys.c    **** 		return op;
1818:src/keys.c    **** 
1819:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1820:src/keys.c    **** 		if (shift == SHIFT_N)
1821:src/keys.c    **** 			return STATE_BACKSPACE;
1822:src/keys.c    **** 		if (shift == SHIFT_H)
1823:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1824:src/keys.c    **** 		break;
1825:src/keys.c    **** 
1826:src/keys.c    **** 	case K_UP:
1827:src/keys.c    **** 	  if (shift == SHIFT_N) {
1828:src/keys.c    **** 	    if ( State2.runmode ) {
1829:src/keys.c    **** 	      // Alpha scroll left
1830:src/keys.c    **** #ifdef DM42
1831:src/keys.c    **** 	      /* 
1832:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1833:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1834:src/keys.c    **** 	       */
1835:src/keys.c    **** #ifdef BIGGER_DISPLAY
1836:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1837:src/keys.c    **** 		alpha_pos += 1;
1838:src/keys.c    **** 	      }
1839:src/keys.c    **** #else
1840:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1841:src/keys.c    **** 		alpha_pos += 1;
1842:src/keys.c    **** 	      }
1843:src/keys.c    **** #endif
1844:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1845:src/keys.c    **** #else
1846:src/keys.c    **** 	      int n = alpha_pos + 1;
1847:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1848:src/keys.c    **** #endif
1849:src/keys.c    **** 	      return STATE_UNFINISHED;
1850:src/keys.c    **** 	    }
1851:src/keys.c    **** 	    return STATE_BST;
1852:src/keys.c    **** 	  }
1853:src/keys.c    **** 	  break;
1854:src/keys.c    **** 
1855:src/keys.c    **** 	case K_DOWN:
1856:src/keys.c    **** 	  if (shift == SHIFT_N) {
1857:src/keys.c    **** 	    if ( State2.runmode ) {
1858:src/keys.c    **** 	      // Alpha scroll right
1859:src/keys.c    **** 	      if (alpha_pos > 0)
1860:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1861:src/keys.c    **** 	      return STATE_UNFINISHED;
1862:src/keys.c    **** 	    }
ARM GAS  /tmp/cceyv6gL.s 			page 38


1863:src/keys.c    **** 	    return STATE_SST;
1864:src/keys.c    **** 	  }
1865:src/keys.c    **** 	  break;
1866:src/keys.c    **** 
1867:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1868:src/keys.c    **** 		if (shift == SHIFT_F)
1869:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
1871:src/keys.c    **** 			return OP_NIL | OP_OFF;
1872:src/keys.c    **** 		else if (shift == SHIFT_N) {
1873:src/keys.c    **** #ifdef DM42
1874:src/keys.c    **** 		  set_menu(M_Last);
1875:src/keys.c    **** 		  display_current_menu();
1876:src/keys.c    **** #endif
1877:src/keys.c    **** 		  init_state();
1878:src/keys.c    **** 		}
1879:src/keys.c    **** 		return STATE_UNFINISHED;
1880:src/keys.c    **** 
1881:src/keys.c    **** 	case K63:
1882:src/keys.c    **** 		if (shift == SHIFT_F)
1883:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1884:src/keys.c    **** 		break;
1885:src/keys.c    **** 
1886:src/keys.c    **** 	default:
1887:src/keys.c    **** 		break;
1888:src/keys.c    **** 	}
1889:src/keys.c    **** 
1890:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1891:src/keys.c    **** 	if (ch == 0)
1892:src/keys.c    **** 		return STATE_UNFINISHED;
1893:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1894:src/keys.c    **** }
1895:src/keys.c    **** 
1896:src/keys.c    **** /*
1897:src/keys.c    ****  *  Code to handle all commands with arguments
1898:src/keys.c    ****  */
1899:src/keys.c    **** static void reset_arg(void) {
1900:src/keys.c    **** 	init_arg((enum rarg) 0);
1901:src/keys.c    **** 	State2.rarg = 0;
1902:src/keys.c    **** }
1903:src/keys.c    **** 
1904:src/keys.c    ****  static int arg_eval(unsigned int val) {
1905:src/keys.c    ****    const unsigned int base = CmdBase;
1906:src/keys.c    ****    int r = RARG(base, val 
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1908:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1909:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1910:src/keys.c    **** 
1911:src/keys.c    ****    if (! State2.ind) {
1912:src/keys.c    ****      /*
1913:src/keys.c    ****       *  Central argument checking for some commands
1914:src/keys.c    ****       */
1915:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1916:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1917:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1918:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1919:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
ARM GAS  /tmp/cceyv6gL.s 			page 39


1920:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1921:src/keys.c    ****        if ( val == 0 )
1922:src/keys.c    **** 	 return STATE_UNFINISHED;
1923:src/keys.c    ****        r = RARG(base, val);
1924:src/keys.c    ****      }
1925:src/keys.c    **** #endif
1926:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1927:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1928:src/keys.c    ****        if (C_LOCKED) {
1929:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1930:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1931:src/keys.c    ****        }
1932:src/keys.c    ****        else {
1933:src/keys.c    **** 	 return STATE_UNFINISHED;
1934:src/keys.c    ****        }
1935:src/keys.c    ****      }
1936:src/keys.c    **** #else
1937:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1938:src/keys.c    ****        // Disallow odd complex register > 98
1939:src/keys.c    ****        return STATE_UNFINISHED;
1940:src/keys.c    **** #endif
1941:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1943:src/keys.c    ****        return STATE_UNFINISHED;
1944:src/keys.c    ****    }
1945:src/keys.c    ****    // Build op-code
1946:src/keys.c    ****    reset_arg();
1947:src/keys.c    ****    return r;
1948:src/keys.c    ****  }
1949:src/keys.c    **** 
1950:src/keys.c    **** static int arg_digit(int n) {
1951:src/keys.c    **** 	int lim;
1952:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1953:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1954:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1955:src/keys.c    **** #else
1956:src/keys.c    **** 	const unsigned int base = CmdBase;
1957:src/keys.c    **** #endif
1958:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1959:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1960:src/keys.c    **** 	
1961:src/keys.c    **** 	if (State2.local) {
1962:src/keys.c    **** 		// Handle local registers and flags
1963:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1964:src/keys.c    **** 		if (State2.runmode) {
1965:src/keys.c    **** 			if (LocalRegs == 0)
1966:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1967:src/keys.c    **** 			if (is_reg) {
1968:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1969:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1970:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1971:src/keys.c    **** 			}
1972:src/keys.c    **** 		}
1973:src/keys.c    **** 	}
1974:src/keys.c    **** 	else if (is_reg)						// normal register
1975:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1976:src/keys.c    **** 	else {
ARM GAS  /tmp/cceyv6gL.s 			page 40


1977:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1978:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1979:src/keys.c    **** 			lim = RARG_IND - 1;
1980:src/keys.c    **** 	}
1981:src/keys.c    **** 	if ((int) val > lim)
1982:src/keys.c    **** 		return STATE_UNFINISHED;
1983:src/keys.c    **** 
1984:src/keys.c    **** 	State2.digval = val;
1985:src/keys.c    **** 	++State2.numdigit;
1986:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1987:src/keys.c    **** 		int result = arg_eval(val);
1988:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1989:src/keys.c    **** 			--State2.numdigit;
1990:src/keys.c    **** 			State2.digval /= 10;
1991:src/keys.c    **** 		}
1992:src/keys.c    **** 		return result;
1993:src/keys.c    **** 	}
1994:src/keys.c    **** 	return STATE_UNFINISHED;
1995:src/keys.c    **** }
1996:src/keys.c    **** 
1997:src/keys.c    **** static int arg_fkey(int n) {
1998:src/keys.c    **** 	const unsigned int b = CmdBase;
1999:src/keys.c    **** 
2000:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
2001:src/keys.c    **** 	{
2002:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
2003:src/keys.c    **** 			return STATE_UNFINISHED;
2004:src/keys.c    **** 		if (argcmds[b].lim < 100)
2005:src/keys.c    **** 			return STATE_UNFINISHED;
2006:src/keys.c    **** 		return arg_eval(n + 100);
2007:src/keys.c    **** 	}
2008:src/keys.c    **** 	return STATE_UNFINISHED;
2009:src/keys.c    **** }
2010:src/keys.c    **** 
2011:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2012:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2013:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2014:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2015:src/keys.c    **** #else
2016:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2017:src/keys.c    **** #endif
2018:src/keys.c    **** }
2019:src/keys.c    **** 
2020:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2021:src/keys.c    **** 	unsigned int b = CmdBase;
2022:src/keys.c    **** 
2023:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2024:src/keys.c    **** 		CmdBase += n;
2025:src/keys.c    **** 		return 1;
2026:src/keys.c    **** 	}
2027:src/keys.c    **** 	/* And we can turn off the operation too */
2028:src/keys.c    **** 	if (b >= n) {
2029:src/keys.c    **** 		b -= n;
2030:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2031:src/keys.c    **** 			CmdBase = b;
2032:src/keys.c    **** 			return 1;
2033:src/keys.c    **** 		}
ARM GAS  /tmp/cceyv6gL.s 			page 41


2034:src/keys.c    **** 	}
2035:src/keys.c    **** 	return 0;
2036:src/keys.c    **** }
2037:src/keys.c    **** 
2038:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2039:src/keys.c    **** 
2040:src/keys.c    **** 	if (State2.numdigit == 0) {
2041:src/keys.c    **** 		// Only valid at beginning of entry
2042:src/keys.c    **** 		if (State2.dot || State2.local) {
2043:src/keys.c    **** 			// '..' or ENTER '.' = X
2044:src/keys.c    **** 			State2.local = 0;
2045:src/keys.c    **** 			return arg_eval(regX_idx);
2046:src/keys.c    **** 		}
2047:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2048:src/keys.c    **** 			// local register or flag select
2049:src/keys.c    **** 			State2.local = 1;
2050:src/keys.c    **** 		}
2051:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2052:src/keys.c    **** 			// Special GTO . sequence
2053:src/keys.c    **** 			if (! State2.ind) {
2054:src/keys.c    **** 				State2.gtodot = 1;
2055:src/keys.c    **** 				reset_arg();
2056:src/keys.c    **** 			}
2057:src/keys.c    **** 		}
2058:src/keys.c    **** 	}
2059:src/keys.c    **** 	return STATE_UNFINISHED;
2060:src/keys.c    **** }
2061:src/keys.c    **** 
2062:src/keys.c    **** static int process_arg_shuffle(int r) {
2063:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2064:src/keys.c    **** 	if (State2.numdigit < 4)
2065:src/keys.c    **** 		return STATE_UNFINISHED;
2066:src/keys.c    **** 	return arg_eval(State2.digval);
2067:src/keys.c    **** }
2068:src/keys.c    **** 
2069:src/keys.c    **** 
2070:src/keys.c    **** static int process_arg(const keycode c) {
2071:src/keys.c    **** 	unsigned int base = CmdBase;
2072:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2073:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2075:src/keys.c    **** 	const enum shifts shift = reset_shift();
2076:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2078:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2079:src/keys.c    **** 
2080:src/keys.c    **** 	n &= ~NO_SHORT;
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
2082:src/keys.c    **** 		reset_arg();
2083:src/keys.c    **** 		return STATE_UNFINISHED;
2084:src/keys.c    **** 	}
2085:src/keys.c    **** #ifdef DM42
2086:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2087:src/keys.c    **** 	  switch (n) {
2088:src/keys.c    **** 	  case regX_idx:
2089:src/keys.c    **** 	    return arg_digit(1);
2090:src/keys.c    **** 	  case regY_idx:
ARM GAS  /tmp/cceyv6gL.s 			page 42


2091:src/keys.c    **** 	    return arg_digit(2);
2092:src/keys.c    **** 	  case regZ_idx:
2093:src/keys.c    **** 	    return arg_digit(3);
2094:src/keys.c    **** 	  case regT_idx:
2095:src/keys.c    **** 	    return arg_digit(4);
2096:src/keys.c    **** 	  case 5:
2097:src/keys.c    **** 	  case 6:
2098:src/keys.c    **** 	  case 7:
2099:src/keys.c    **** 	  case 8:
2100:src/keys.c    **** 	  case 9:
2101:src/keys.c    **** 	  case 0:
2102:src/keys.c    **** 	    return arg_digit(n);
2103:src/keys.c    **** 	  }
2104:src/keys.c    **** 	}
2105:src/keys.c    **** #else
2106:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2107:src/keys.c    **** 		return arg_digit(n);
2108:src/keys.c    **** #endif	
2109:src/keys.c    **** 	if (shorthand)
2110:src/keys.c    **** 		// row column shorthand addressing
2111:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2112:src/keys.c    **** 
2113:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2114:src/keys.c    **** #ifdef DM42
2115:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2116:src/keys.c    **** 		switch ((int)c) {
2117:src/keys.c    **** 		case K_UP:	// up arrow
2118:src/keys.c    **** 		  if (base == RARG_FIX) {
2119:src/keys.c    **** 		    base = RARG_SIG;
2120:src/keys.c    **** 		    break;
2121:src/keys.c    **** 		  }
2122:src/keys.c    **** 		  if (base == RARG_SIG) {
2123:src/keys.c    **** 		    base = RARG_SIG0;
2124:src/keys.c    **** 		    break;
2125:src/keys.c    **** 		  }
2126:src/keys.c    **** 		  if (base == RARG_SIG0) {
2127:src/keys.c    **** 		    base = RARG_FIX;
2128:src/keys.c    **** 		    break;
2129:src/keys.c    **** 		  }
2130:src/keys.c    **** 		case K_DOWN:	// down arrow
2131:src/keys.c    **** 		case K01:	// B
2132:src/keys.c    **** 		  if (base == RARG_FIX) {
2133:src/keys.c    **** 		    base = RARG_SIG0;
2134:src/keys.c    **** 		    break;
2135:src/keys.c    **** 		  }
2136:src/keys.c    **** 		  if (base == RARG_SIG) {
2137:src/keys.c    **** 		    base = RARG_FIX;
2138:src/keys.c    **** 		    break;
2139:src/keys.c    **** 		  }
2140:src/keys.c    **** 		  if (base == RARG_SIG0) {
2141:src/keys.c    **** 		    base = RARG_SIG;
2142:src/keys.c    **** 		    break;
2143:src/keys.c    **** 		  }
2144:src/keys.c    **** 		}
2145:src/keys.c    **** 	}
2146:src/keys.c    **** 		CmdBase = base;
2147:src/keys.c    **** #else
ARM GAS  /tmp/cceyv6gL.s 			page 43


2148:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2149:src/keys.c    **** 		switch ((int)c) {
2150:src/keys.c    **** 		case K_UP:	// up arrow
2151:src/keys.c    **** 			if (--base < RARG_FIX)
2152:src/keys.c    **** 				base = RARG_SIG0;
2153:src/keys.c    **** 			break;
2154:src/keys.c    **** 
2155:src/keys.c    **** 		case K_DOWN:	// down arrow
2156:src/keys.c    **** 		case K01:	// B
2157:src/keys.c    **** 			if (++base > RARG_SIG0)
2158:src/keys.c    **** 				base = RARG_FIX;
2159:src/keys.c    **** 			break;
2160:src/keys.c    **** 		}
2161:src/keys.c    **** 		CmdBase = base;
2162:src/keys.c    **** 	}
2163:src/keys.c    **** #endif
2164:src/keys.c    **** #endif
2165:src/keys.c    **** 	/*
2166:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2167:src/keys.c    **** 	 *  Handle the rest here.
2168:src/keys.c    **** 	 */
2169:src/keys.c    **** 	switch ((int)c) {
2170:src/keys.c    **** 	case K_F:
2171:src/keys.c    **** 		if (label_addressing)
2172:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2173:src/keys.c    **** 		break;
2174:src/keys.c    **** 
2175:src/keys.c    **** 	case K_ARROW:		// arrow
2176:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
2178:src/keys.c    **** 			if (! stack_reg)
2179:src/keys.c    **** 				State2.dot = 0;
2180:src/keys.c    **** 		}
2181:src/keys.c    **** 		break;
2182:src/keys.c    **** 
2183:src/keys.c    **** 	case K_CMPLX:
2184:src/keys.c    **** 		if (State2.ind || State2.dot)
2185:src/keys.c    **** 			break;
2186:src/keys.c    **** 		if (base == RARG_STO)
2187:src/keys.c    **** 			CmdBase = RARG_STOM;
2188:src/keys.c    **** 		else if (base == RARG_RCL)
2189:src/keys.c    **** 			CmdBase = RARG_RCLM;
2190:src/keys.c    **** 		break;
2191:src/keys.c    **** #ifdef DM42
2192:src/keys.c    **** 	case K41:       // T
2193:src/keys.c    **** 	  if (State2.shuffle)
2194:src/keys.c    **** 	    return process_arg_shuffle(3);
2195:src/keys.c    **** 	case K51:       // X
2196:src/keys.c    **** 	  if (State2.shuffle)
2197:src/keys.c    **** 	    return process_arg_shuffle(0);
2198:src/keys.c    **** 	case K52:	// Y
2199:src/keys.c    **** 	  if (State2.shuffle)
2200:src/keys.c    **** 	    return process_arg_shuffle(1);
2201:src/keys.c    **** 	case K53:       // Z
2202:src/keys.c    **** 	  if (State2.shuffle)
2203:src/keys.c    **** 	    return process_arg_shuffle(2);
2204:src/keys.c    **** #else
ARM GAS  /tmp/cceyv6gL.s 			page 44


2205:src/keys.c    **** 	case K63:	// Y
2206:src/keys.c    **** 	  if (State2.shuffle)
2207:src/keys.c    **** 	    return process_arg_shuffle(1);
2208:src/keys.c    **** #endif
2209:src/keys.c    **** 	case K00:	// A
2210:src/keys.c    **** 	case K01:	// B
2211:src/keys.c    **** 	case K02:	// C
2212:src/keys.c    **** 	case K03:	// D
2213:src/keys.c    **** #ifdef DM42
2214:src/keys.c    **** 	case K12:	// I (lastY)
2215:src/keys.c    **** 	case K13:	// J
2216:src/keys.c    **** 	case K14:	// K
2217:src/keys.c    **** 	case K15:	// L (lastX)
2218:src/keys.c    **** #else
2219:src/keys.c    **** 	case K12:	// I (lastY)
2220:src/keys.c    **** 	case K21:	// J
2221:src/keys.c    **** 	case K22:	// K
2222:src/keys.c    **** 	case K23:	// L (lastX)
2223:src/keys.c    **** #endif
2224:src/keys.c    **** 	  if (State2.dot || stack_reg)
2225:src/keys.c    **** 			return arg_eval(n);
2226:src/keys.c    **** 		if ( c <= K03 )
2227:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2228:src/keys.c    **** 		break;
2229:src/keys.c    **** #ifdef DM42
2230:src/keys.c    **** 	case K62:	// '.'
2231:src/keys.c    **** 		return process_arg_dot(base);
2232:src/keys.c    **** 
2233:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2234:src/keys.c    **** 	case K64:		// plus
2235:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2236:src/keys.c    **** 			return arg_eval(n);
2237:src/keys.c    **** 		break;
2238:src/keys.c    **** 	case K54:               // minus
2239:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2240:src/keys.c    **** 			reset_arg();
2241:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2242:src/keys.c    **** 		}
2243:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2244:src/keys.c    **** 		break;
2245:src/keys.c    **** 	case K44:		// multiply
2246:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2247:src/keys.c    **** 			return arg_eval(n);
2248:src/keys.c    **** 		break;
2249:src/keys.c    **** 	case K34:
2250:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2251:src/keys.c    **** 		break;
2252:src/keys.c    **** #else
2253:src/keys.c    **** 	case K62:	// X, '.'
2254:src/keys.c    **** 		if (State2.shuffle)
2255:src/keys.c    **** 			return process_arg_shuffle(0);
2256:src/keys.c    **** 		return process_arg_dot(base);
2257:src/keys.c    **** 
2258:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2259:src/keys.c    **** 	case K64:		// Z register
2260:src/keys.c    **** 		if (State2.shuffle)
2261:src/keys.c    **** 			return process_arg_shuffle(2);
ARM GAS  /tmp/cceyv6gL.s 			page 45


2262:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2263:src/keys.c    **** 			return arg_eval(n);
2264:src/keys.c    **** 		break;
2265:src/keys.c    **** 
2266:src/keys.c    **** 	case K54:
2267:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2268:src/keys.c    **** 			reset_arg();
2269:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2270:src/keys.c    **** 		}
2271:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2272:src/keys.c    **** 		break;
2273:src/keys.c    **** 
2274:src/keys.c    **** 	case K44:		// T register
2275:src/keys.c    **** 		if (State2.shuffle)
2276:src/keys.c    **** 			return process_arg_shuffle(3);
2277:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2278:src/keys.c    **** 			return arg_eval(n);
2279:src/keys.c    **** 		break;
2280:src/keys.c    **** 
2281:src/keys.c    **** 	case K34:
2282:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2283:src/keys.c    **** 		break;
2284:src/keys.c    **** #endif
2285:src/keys.c    **** 	case K_UP:
2286:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2287:src/keys.c    **** 		break;
2288:src/keys.c    **** 
2289:src/keys.c    **** 	case K_DOWN:
2290:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2291:src/keys.c    **** 		break;
2292:src/keys.c    **** 
2293:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2294:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2295:src/keys.c    **** 			if (argcmds[base].label) {
2296:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2297:src/keys.c    **** 				State2.multi = 1;
2298:src/keys.c    **** 				State2.alphashift = 0;
2299:src/keys.c    **** 				State2.rarg = 0;
2300:src/keys.c    **** 			} else if (base == RARG_SCI) {
2301:src/keys.c    **** 				reset_arg();
2302:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2303:src/keys.c    **** 			} else if (base == RARG_ENG) {
2304:src/keys.c    **** 				reset_arg();
2305:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2306:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2307:src/keys.c    **** 				State2.dot = 1;
2308:src/keys.c    **** 		} else if (State2.numdigit > 0)
2309:src/keys.c    **** 			return arg_eval(State2.digval);
2310:src/keys.c    **** 		else if (stack_reg)
2311:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2312:src/keys.c    **** 		break;
2313:src/keys.c    **** 
2314:src/keys.c    **** 	case K24:	// <-
2315:src/keys.c    **** 		if (State2.numdigit == 0) {
2316:src/keys.c    **** 			if (State2.dot)
2317:src/keys.c    **** 				State2.dot = 0;
2318:src/keys.c    **** 			else if (State2.local)
ARM GAS  /tmp/cceyv6gL.s 			page 46


2319:src/keys.c    **** 				State2.local = 0;
2320:src/keys.c    **** 			else if (State2.ind)
2321:src/keys.c    **** 				State2.ind = 0;
2322:src/keys.c    **** 			else
2323:src/keys.c    **** 				goto reset;
2324:src/keys.c    **** 		}
2325:src/keys.c    **** 		else {
2326:src/keys.c    **** 			--State2.numdigit;
2327:src/keys.c    **** 			if (State2.shuffle)
2328:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2329:src/keys.c    **** 			else
2330:src/keys.c    **** 				State2.digval /= 10;
2331:src/keys.c    **** 		}
2332:src/keys.c    **** 		break;
2333:src/keys.c    **** 
2334:src/keys.c    **** 	case K60:
2335:src/keys.c    **** 	reset:
2336:src/keys.c    **** 		reset_arg();
2337:src/keys.c    **** 	default:
2338:src/keys.c    **** 		break;
2339:src/keys.c    **** 	}
2340:src/keys.c    **** 	return STATE_UNFINISHED;
2341:src/keys.c    **** }
2342:src/keys.c    **** 
2343:src/keys.c    **** 
2344:src/keys.c    **** /*
2345:src/keys.c    ****  *  Process arguments to the diverse test commands
2346:src/keys.c    ****  */
2347:src/keys.c    **** static int process_test(const keycode c) {
2348:src/keys.c    **** 	int r = State2.test;
2349:src/keys.c    **** 	int cmpx = State2.cmplx;
2350:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2351:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2352:src/keys.c    **** 
2353:src/keys.c    **** 	State2.test = TST_NONE;
2354:src/keys.c    **** 	State2.cmplx = 0;
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2357:src/keys.c    **** 		// Lettered register
2358:src/keys.c    **** 		if (cmpx && (n & 1)) {
2359:src/keys.c    **** 			if (n == regI_idx)
2360:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2361:src/keys.c    **** 			// Disallow odd complex registers > A
2362:src/keys.c    **** 			goto again;
2363:src/keys.c    **** 		}
2364:src/keys.c    **** 		// Return the command with the register completed
2365:src/keys.c    **** 		return RARG(base, n);
2366:src/keys.c    **** 	}
2367:src/keys.c    **** 	else if ( n == 0 ) {
2368:src/keys.c    **** 		// Special 0
2369:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2370:src/keys.c    **** 	}
2371:src/keys.c    **** 	else if ( n == 1 ) {
2372:src/keys.c    **** 		// Special 1
2373:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2374:src/keys.c    **** 	}
2375:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
ARM GAS  /tmp/cceyv6gL.s 			page 47


2376:src/keys.c    **** 		// digit 2..9, -> or .
2377:src/keys.c    **** 		init_arg((enum rarg)base);
2378:src/keys.c    **** 		return process_arg(c);
2379:src/keys.c    **** 	}
2380:src/keys.c    **** 
2381:src/keys.c    **** 	switch (c) {
2382:src/keys.c    **** 	case K11:					// tests vs register
2383:src/keys.c    **** 	case K20:
2384:src/keys.c    **** 		init_arg((enum rarg)base);
2385:src/keys.c    **** 		return STATE_UNFINISHED;
2386:src/keys.c    **** 
2387:src/keys.c    **** 	//case K60:
2388:src/keys.c    **** 	case K24:
2389:src/keys.c    **** 		return STATE_UNFINISHED;
2390:src/keys.c    **** 
2391:src/keys.c    **** 	default:
2392:src/keys.c    **** 		break;
2393:src/keys.c    **** 	}
2394:src/keys.c    **** again:
2395:src/keys.c    **** 	State2.test = r;
2396:src/keys.c    **** 	State2.cmplx = cmpx;
2397:src/keys.c    **** 	return STATE_UNFINISHED;
2398:src/keys.c    **** }
2399:src/keys.c    **** 
2400:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2401:src/keys.c    **** /*
2402:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2403:src/keys.c    ****  */
2404:src/keys.c    **** #define USER_CAT_MAX 100
2405:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2406:src/keys.c    **** 
2407:src/keys.c    **** static int build_user_cat(void)
2408:src/keys.c    **** {
2409:src/keys.c    **** 	// find the label 'CAT'
2410:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2411:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2412:src/keys.c    **** 	int len = 0;
2413:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2414:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2415:src/keys.c    **** 		char buf1[16];
2416:src/keys.c    **** 		int i;
2417:src/keys.c    **** 		s_opcode op;
2418:src/keys.c    **** 	next:
2419:src/keys.c    **** 		pc = do_inc(pc, 0);
2420:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2421:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2422:src/keys.c    **** 			break;
2423:src/keys.c    **** 		if (isDBL(op))
2424:src/keys.c    **** 			continue;
2425:src/keys.c    **** 		if (isRARG(op)) {
2426:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2427:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2428:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2429:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2430:src/keys.c    **** 		}
2431:src/keys.c    **** 		catcmd(op, buf1);
2432:src/keys.c    **** 		for (i = 0; i < len; ++i) {
ARM GAS  /tmp/cceyv6gL.s 			page 48


2433:src/keys.c    **** 			// Find a position in the table to insert the new entry
2434:src/keys.c    **** 			char buf2[16];
2435:src/keys.c    **** 			const char *p, *q;
2436:src/keys.c    **** 			int diff = 0;
2437:src/keys.c    **** 			if (op == UserCat[i]) {
2438:src/keys.c    **** 				// duplicate entry - ignore
2439:src/keys.c    **** 				goto next;
2440:src/keys.c    **** 			}
2441:src/keys.c    **** 			p = buf1;
2442:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2443:src/keys.c    **** 				++p;
2444:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2445:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2446:src/keys.c    **** 				++q;
2447:src/keys.c    **** 			diff = 0;
2448:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2449:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2450:src/keys.c    **** 			}
2451:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2452:src/keys.c    **** 				// identical according to sort order, insert after
2453:src/keys.c    **** 				++i;
2454:src/keys.c    **** 				break;
2455:src/keys.c    **** 			}
2456:src/keys.c    **** 			if (diff > 0) {
2457:src/keys.c    **** 				// insert new entry before the one found because this is greater
2458:src/keys.c    **** 				break;
2459:src/keys.c    **** 			}
2460:src/keys.c    **** 		}
2461:src/keys.c    **** 		if (i < len) {
2462:src/keys.c    **** 			// Make room
2463:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2464:src/keys.c    **** 		}
2465:src/keys.c    **** 		UserCat[i] = op;
2466:src/keys.c    **** 		++len;
2467:src/keys.c    **** 	}
2468:src/keys.c    **** 	// return the number of entries
2469:src/keys.c    **** 	return len;
2470:src/keys.c    **** }
2471:src/keys.c    **** #endif
2472:src/keys.c    **** 
2473:src/keys.c    **** /* Return the number of entries in the current catalogue.
2474:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2475:src/keys.c    ****  * likely be the most space efficient method.
2476:src/keys.c    ****  */
2477:src/keys.c    **** int current_catalogue_max(void) {
2478:src/keys.c    **** 	// A quick table of catalogue sizes
2479:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2480:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2481:src/keys.c    **** 	{
2482:src/keys.c    **** 		0, // NONE
2483:src/keys.c    **** 		SIZE_catalogue,
2484:src/keys.c    **** 		SIZE_cplx_catalogue,
2485:src/keys.c    **** 		SIZE_stats_catalogue,
2486:src/keys.c    **** 		SIZE_prob_catalogue,
2487:src/keys.c    **** 		SIZE_int_catalogue,
2488:src/keys.c    **** 		SIZE_prog_catalogue,
2489:src/keys.c    **** 		SIZE_program_xfcn,
ARM GAS  /tmp/cceyv6gL.s 			page 49


2490:src/keys.c    **** 		SIZE_test_catalogue,
2491:src/keys.c    **** 		SIZE_mode_catalogue,
2492:src/keys.c    **** 		SIZE_alpha_catalogue,
2493:src/keys.c    **** 		SIZE_alpha_symbols,
2494:src/keys.c    **** 		SIZE_alpha_compares,
2495:src/keys.c    **** 		SIZE_alpha_arrows,
2496:src/keys.c    **** 		SIZE_alpha_letters,
2497:src/keys.c    **** 		SIZE_alpha_subscripts,
2498:src/keys.c    **** 		NUM_CONSTS_CAT,
2499:src/keys.c    **** 		NUM_CONSTS_CAT,
2500:src/keys.c    **** 		SIZE_conv_catalogue,
2501:src/keys.c    **** 		SIZE_sums_catalogue,
2502:src/keys.c    **** 		SIZE_matrix_catalogue,
2503:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2504:src/keys.c    **** 		SIZE_internal_catalogue,
2505:src/keys.c    **** #endif
2506:src/keys.c    **** 	};
2507:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2508:src/keys.c    **** 	const int cat = State2.catalogue;
2509:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2510:src/keys.c    **** #else
2511:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2512:src/keys.c    **** #endif
2513:src/keys.c    **** }
2514:src/keys.c    **** 
2515:src/keys.c    **** 
2516:src/keys.c    **** /* Look up the character position in the given byte array and
2517:src/keys.c    ****  * build the alpha op-code for it.
2518:src/keys.c    ****  */
2519:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2520:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2521:src/keys.c    **** }
2522:src/keys.c    **** 
2523:src/keys.c    **** 
2524:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2525:src/keys.c    ****  */
2526:src/keys.c    **** opcode current_catalogue(int n) {
2527:src/keys.c    **** 	// A quick table of catalogue tables
2528:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2529:src/keys.c    **** 	static const void *catalogues[] =
2530:src/keys.c    **** 	{
2531:src/keys.c    **** 		NULL, // NONE
2532:src/keys.c    **** 		catalogue,
2533:src/keys.c    **** 		cplx_catalogue,
2534:src/keys.c    **** 		stats_catalogue,
2535:src/keys.c    **** 		prob_catalogue,
2536:src/keys.c    **** 		int_catalogue,
2537:src/keys.c    **** 		prog_catalogue,
2538:src/keys.c    **** 		program_xfcn,
2539:src/keys.c    **** 		test_catalogue,
2540:src/keys.c    **** 		mode_catalogue,
2541:src/keys.c    **** 		alpha_catalogue,
2542:src/keys.c    **** 		alpha_symbols,
2543:src/keys.c    **** 		alpha_compares,
2544:src/keys.c    **** 		alpha_arrows,
2545:src/keys.c    **** 		alpha_letters,
2546:src/keys.c    **** 		alpha_subscripts,
ARM GAS  /tmp/cceyv6gL.s 			page 50


2547:src/keys.c    **** 		NULL,
2548:src/keys.c    **** 		NULL,
2549:src/keys.c    **** 		NULL, //CONV
2550:src/keys.c    **** 		sums_catalogue,
2551:src/keys.c    **** 		matrix_catalogue,
2552:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2553:src/keys.c    **** 		internal_catalogue,
2554:src/keys.c    **** #endif
2555:src/keys.c    **** 	};
2556:src/keys.c    **** 	const unsigned char *cat;
2557:src/keys.c    **** 	unsigned int c = State2.catalogue;
2558:src/keys.c    **** 	int m, i;
2559:src/keys.c    **** 	unsigned p, q;
2560:src/keys.c    **** 
2561:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2562:src/keys.c    **** 		if (n == OP_ZERO)
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2564:src/keys.c    **** 		return CONST(n);
2565:src/keys.c    **** 	}
2566:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2567:src/keys.c    **** 		if (n == OP_ZERO)
2568:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2569:src/keys.c    **** 		return CONST_CMPLX(n);
2570:src/keys.c    **** 	}
2571:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2572:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2573:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2574:src/keys.c    **** 			// Monadic conversion routine
2575:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2576:src/keys.c    **** 		else
2577:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2578:src/keys.c    **** 	}
2579:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2580:src/keys.c    **** 	if (c == CATALOGUE_USER)
2581:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2582:src/keys.c    **** #endif
2583:src/keys.c    **** 
2584:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2585:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2586:src/keys.c    **** 	else
2587:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2588:src/keys.c    **** 
2589:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2590:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2591:src/keys.c    **** 	}
2592:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2593:src/keys.c    **** 		return OP_NIL | OP_NOP;
2594:src/keys.c    **** 
2595:src/keys.c    **** 	/* Unpack the opcode */
2596:src/keys.c    **** 	cat += n + (n >> 2);
2597:src/keys.c    **** 	p = cat[0];
2598:src/keys.c    **** 	q = cat[1];
2599:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2600:src/keys.c    **** 
2601:src/keys.c    **** 	/* Now figure out which opcode it really is */
2602:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/cceyv6gL.s 			page 51


2604:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2605:src/keys.c    **** 		m -= opcode_breaks[i];
2606:src/keys.c    **** 	}
2607:src/keys.c    **** 	return RARG_BASEOP(m);
2608:src/keys.c    **** }
2609:src/keys.c    **** 
2610:src/keys.c    **** 
2611:src/keys.c    **** /*
2612:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2613:src/keys.c    ****  *  in multi character commands.
2614:src/keys.c    ****  */
2615:src/keys.c    **** static int forbidden_alpha(int pos) {
2616:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2617:src/keys.c    **** }
2618:src/keys.c    **** 
2619:src/keys.c    **** /*
2620:src/keys.c    ****  *  Catalogue navigation
2621:src/keys.c    ****  */
2622:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2623:src/keys.c    ****    int pos = State.catpos;
2624:src/keys.c    ****    int ch;
2625:src/keys.c    ****    const int ctmax = current_catalogue_max();
2626:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2627:src/keys.c    **** 
2628:src/keys.c    ****    if (shift == SHIFT_N) {
2629:src/keys.c    ****      switch (c) {
2630:src/keys.c    **** #ifdef DM42
2631:src/keys.c    ****      case K05:			// XEQ accepts command
2632:src/keys.c    **** #else	  
2633:src/keys.c    ****      case K30:			// XEQ accepts command
2634:src/keys.c    **** #endif						  
2635:src/keys.c    ****      case K20:			// Enter accepts command
2636:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2638:src/keys.c    **** 
2639:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2640:src/keys.c    **** 
2641:src/keys.c    **** 	 if (isRARG(op)) {
2642:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2643:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2644:src/keys.c    **** 	     return op;
2645:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2646:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2647:src/keys.c    **** 	   else
2648:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2649:src/keys.c    **** 	 }
2650:src/keys.c    **** 	 else {
2651:src/keys.c    **** 	   return check_confirm(op);
2652:src/keys.c    **** 	 }
2653:src/keys.c    ****        } else
2654:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2655:src/keys.c    ****        return STATE_UNFINISHED;
2656:src/keys.c    **** 
2657:src/keys.c    ****      case K24:			// backspace
2658:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2659:src/keys.c    **** 	 if (--CmdLineLength > 0)
2660:src/keys.c    **** 	   goto search;
ARM GAS  /tmp/cceyv6gL.s 			page 52


2661:src/keys.c    **** 	 pos = 0;
2662:src/keys.c    **** 	 goto set_pos;
2663:src/keys.c    ****        } else
2664:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2665:src/keys.c    ****        return STATE_UNFINISHED;
2666:src/keys.c    **** 
2667:src/keys.c    ****      case K60:
2668:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2669:src/keys.c    ****        return STATE_UNFINISHED;
2670:src/keys.c    **** 
2671:src/keys.c    ****      case K_UP:
2672:src/keys.c    ****        CmdLineLength = 0;
2673:src/keys.c    ****        if (pos == 0)
2674:src/keys.c    **** 	 goto set_max;
2675:src/keys.c    ****        else
2676:src/keys.c    **** 	 --pos;
2677:src/keys.c    ****        goto set_pos;
2678:src/keys.c    **** 
2679:src/keys.c    ****      case K_DOWN:
2680:src/keys.c    ****        CmdLineLength = 0;
2681:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2682:src/keys.c    ****        if (pos >= ctmax)
2683:src/keys.c    **** 	 pos = 0;
2684:src/keys.c    ****        goto set_pos;
2685:src/keys.c    **** 
2686:src/keys.c    ****      default:
2687:src/keys.c    ****        break;
2688:src/keys.c    ****      }
2689:src/keys.c    ****    } else if (shift == SHIFT_F) {
2690:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2691:src/keys.c    ****        /*
2692:src/keys.c    **** 	* f 1/x in conversion catalogue
2693:src/keys.c    **** 	*/
2694:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2695:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2696:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2697:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2698:src/keys.c    **** 	*/
2699:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2700:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2701:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2702:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2703:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2704:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2705:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2706:src/keys.c    ****        };
2707:src/keys.c    ****        const opcode op = current_catalogue(pos);
2708:src/keys.c    ****        int i;
2709:src/keys.c    **** 
2710:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2711:src/keys.c    ****        if (isRARG(op))
2712:src/keys.c    **** 	 return op ^ 1;
2713:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
2715:src/keys.c    **** 	   return conv_mapping[i^1];
2716:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2717:src/keys.c    ****      }
ARM GAS  /tmp/cceyv6gL.s 			page 53


2718:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2720:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2721:src/keys.c    ****        return STATE_UNFINISHED;
2722:src/keys.c    ****      }
2723:src/keys.c    ****    } else if (shift == SHIFT_G) {
2724:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2725:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2726:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2727:src/keys.c    ****      }
2728:src/keys.c    ****    }
2729:src/keys.c    **** 
2730:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2731:src/keys.c    ****     * jump to the appropriate catalogue entry.
2732:src/keys.c    ****     */
2733:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2734:src/keys.c    ****    reset_shift();
2735:src/keys.c    ****    if (ch == '\0')
2736:src/keys.c    ****      return STATE_UNFINISHED;
2737:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2738:src/keys.c    ****      // No multi character search in alpha catalogues
2739:src/keys.c    ****      CmdLineLength = 0;
2740:src/keys.c    ****    }
2741:src/keys.c    ****    if (CmdLineLength < 10)
2742:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2743:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2744:src/keys.c    **** 
2745:src/keys.c    ****  search:
2746:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2747:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2748:src/keys.c    ****      char buf[16];
2749:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2750:src/keys.c    ****      int i;
2751:src/keys.c    **** 
2752:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2753:src/keys.c    ****        cmd++;
2754:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2756:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2757:src/keys.c    ****        if (c > cl)
2758:src/keys.c    **** 	 goto set_pos;
2759:src/keys.c    ****        else if (c < cl)
2760:src/keys.c    **** 	 break;
2761:src/keys.c    ****      }
2762:src/keys.c    ****      if (Cmdline[i] == '\0')
2763:src/keys.c    ****        goto set_pos;
2764:src/keys.c    ****    }
2765:src/keys.c    ****  set_max:
2766:src/keys.c    ****    pos = ctmax - 1;
2767:src/keys.c    ****  set_pos:
2768:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2769:src/keys.c    ****      --pos;
2770:src/keys.c    ****    State.catpos = pos;
2771:src/keys.c    ****    return STATE_UNFINISHED;
2772:src/keys.c    ****  }
2773:src/keys.c    **** 
2774:src/keys.c    **** #ifndef REALBUILD
ARM GAS  /tmp/cceyv6gL.s 			page 54


2775:src/keys.c    **** int find_pos(const char* text) {
2776:src/keys.c    **** 	int pos;
2777:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2778:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2779:src/keys.c    **** 		char buf[16];
2780:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2781:src/keys.c    **** 		int i;
2782:src/keys.c    **** 
2783:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2784:src/keys.c    **** 			cmd++;
2785:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2787:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2788:src/keys.c    **** 			if (c > cl)
2789:src/keys.c    **** 				return pos;
2790:src/keys.c    **** 			else if (c < cl)
2791:src/keys.c    **** 				break;
2792:src/keys.c    **** 		}
2793:src/keys.c    **** 		if (text[i] == '\0')
2794:src/keys.c    **** 			return pos;
2795:src/keys.c    **** 	}
2796:src/keys.c    **** 	return pos;
2797:src/keys.c    **** }
2798:src/keys.c    **** 
2799:src/keys.c    **** #endif
2800:src/keys.c    **** 
2801:src/keys.c    **** /* Multi (2) word instruction entry
2802:src/keys.c    ****  */
2803:src/keys.c    **** static void reset_multi(void) {
2804:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2805:src/keys.c    **** 	State2.multi = 0;
2806:src/keys.c    **** 	if (! State2.alphas )
2807:src/keys.c    **** 		State2.alphashift = 0;
2808:src/keys.c    **** }
2809:src/keys.c    **** 
2810:src/keys.c    **** static int process_multi(const keycode c) {
2811:src/keys.c    **** 	enum shifts shift = reset_shift();
2812:src/keys.c    **** 	unsigned int ch = 0;
2813:src/keys.c    **** 	unsigned int opcode;
2814:src/keys.c    **** 
2815:src/keys.c    **** 	if (State2.catalogue) {
2816:src/keys.c    **** 		// Alpha catalogue from within multi character command
2817:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2818:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2819:src/keys.c    **** 			return opcode;
2820:src/keys.c    **** 		ch = (unsigned char) opcode;
2821:src/keys.c    **** 		goto add_char;
2822:src/keys.c    **** 	}
2823:src/keys.c    **** 
2824:src/keys.c    **** 	switch (c) {
2825:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2826:src/keys.c    **** 		if (shift != SHIFT_N)
2827:src/keys.c    **** 				break;
2828:src/keys.c    **** 		reset_multi();
2829:src/keys.c    **** 		if (State2.numdigit == 0)
2830:src/keys.c    **** 			return STATE_UNFINISHED;
2831:src/keys.c    **** 		else if (State2.numdigit == 1)
ARM GAS  /tmp/cceyv6gL.s 			page 55


2832:src/keys.c    **** 			State2.digval2 = 0;
2833:src/keys.c    **** 		goto fin;
2834:src/keys.c    **** 
2835:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2836:src/keys.c    **** 		if (shift != SHIFT_H) {
2837:src/keys.c    **** 			if (State2.numdigit == 0)
2838:src/keys.c    **** 				reset_multi();
2839:src/keys.c    **** 			else
2840:src/keys.c    **** 				State2.numdigit--;
2841:src/keys.c    **** 			return STATE_UNFINISHED;
2842:src/keys.c    **** 		}
2843:src/keys.c    **** 		break;
2844:src/keys.c    **** 
2845:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2846:src/keys.c    **** 		if (shift == SHIFT_F)
2847:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2848:src/keys.c    **** 		else
2849:src/keys.c    **** 			reset_multi();
2850:src/keys.c    **** 		return STATE_UNFINISHED;
2851:src/keys.c    **** 
2852:src/keys.c    **** 	default:
2853:src/keys.c    **** 		break;
2854:src/keys.c    **** 		}
2855:src/keys.c    **** 
2856:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2857:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2858:src/keys.c    **** 	if (ch == 0)
2859:src/keys.c    **** 		return STATE_UNFINISHED;
2860:src/keys.c    **** add_char:
2861:src/keys.c    **** 	if (State2.numdigit == 0) {
2862:src/keys.c    **** 		State2.digval = ch;
2863:src/keys.c    **** 		State2.numdigit = 1;
2864:src/keys.c    **** 		return STATE_UNFINISHED;
2865:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2866:src/keys.c    **** 		State2.digval2 = ch;
2867:src/keys.c    **** 		State2.numdigit = 2;
2868:src/keys.c    **** 		return STATE_UNFINISHED;
2869:src/keys.c    **** 	}
2870:src/keys.c    **** 	reset_multi();
2871:src/keys.c    **** 
2872:src/keys.c    **** fin:
2873:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2875:src/keys.c    **** 	return opcode;
2876:src/keys.c    **** }
2877:src/keys.c    **** 
2878:src/keys.c    **** 
2879:src/keys.c    **** /* Handle YES/NO confirmations
2880:src/keys.c    ****  */
2881:src/keys.c    **** static int process_confirm(const keycode c) {
2882:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2883:src/keys.c    **** 	switch (c) {
2884:src/keys.c    **** #ifdef DM42
2885:src/keys.c    **** 	case K52:
2886:src/keys.c    **** #endif
2887:src/keys.c    **** 	case K63:			// Yes
2888:src/keys.c    **** 	  switch (State2.confirm) {
ARM GAS  /tmp/cceyv6gL.s 			page 56


2889:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2890:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2891:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2892:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2893:src/keys.c    **** 	  }
2894:src/keys.c    **** 	case K24:
2895:src/keys.c    **** #ifdef DM42
2896:src/keys.c    **** 	case K22:
2897:src/keys.c    **** #else
2898:src/keys.c    **** 	case K32:
2899:src/keys.c    **** #endif
2900:src/keys.c    **** 	  // No
2901:src/keys.c    **** 	  State2.confirm = 0;
2902:src/keys.c    **** 	  State2.digval = 0;
2903:src/keys.c    **** 	  break;
2904:src/keys.c    **** 	default:			// No state change
2905:src/keys.c    **** 	  break;
2906:src/keys.c    **** 	}
2907:src/keys.c    **** 	return STATE_UNFINISHED;
2908:src/keys.c    **** }
2909:src/keys.c    **** 
2910:src/keys.c    **** 
2911:src/keys.c    **** /*
2912:src/keys.c    ****  *  STATUS
2913:src/keys.c    ****  */
2914:src/keys.c    **** static int process_status(const keycode c) {
2915:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2916:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2917:src/keys.c    **** 
2918:src/keys.c    **** 	if (c == K_UP) {
2919:src/keys.c    **** 		if (--n < -2)
2920:src/keys.c    **** 			n = max;
2921:src/keys.c    **** 	}
2922:src/keys.c    **** 	else if (c == K_DOWN) {
2923:src/keys.c    **** 		if (++n > max)
2924:src/keys.c    **** 			n = -2;
2925:src/keys.c    **** 	}
2926:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2927:src/keys.c    **** 		State2.status = 0;
2928:src/keys.c    **** 		return STATE_UNFINISHED;
2929:src/keys.c    **** 	} 
2930:src/keys.c    **** 	else {
2931:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2932:src/keys.c    **** 		if (nn <= 9)
2933:src/keys.c    **** 			n = nn;
2934:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2935:src/keys.c    **** 			n = n == max ? 10 : max;
2936:src/keys.c    **** 		else if (nn != NO_REG)
2937:src/keys.c    **** 			n = 10; 
2938:src/keys.c    **** 	}
2939:src/keys.c    **** 	State2.status = n + 3;
2940:src/keys.c    **** 
2941:src/keys.c    **** 	return STATE_UNFINISHED;
2942:src/keys.c    **** }
2943:src/keys.c    **** 
2944:src/keys.c    **** 
2945:src/keys.c    **** /*
ARM GAS  /tmp/cceyv6gL.s 			page 57


2946:src/keys.c    ****  *  CAT helper
2947:src/keys.c    ****  */
2948:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2948 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2949:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2949 2 view .LVU58
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2948 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2948 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2949 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2950:src/keys.c    **** 
2951:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2951 2 is_stmt 1 view .LVU62
 234              		.loc 1 2951 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2951 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2951 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2951 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2952:src/keys.c    **** }
 245              		.loc 1 2952 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2951:src/keys.c    **** }
 249              		.loc 1 2951 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2952 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2951:src/keys.c    **** }
 256              		.loc 1 2951 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2951:src/keys.c    **** }
 259              		.loc 1 2951 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
ARM GAS  /tmp/cceyv6gL.s 			page 58


 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2952 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2952 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2953:src/keys.c    **** 
2954:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2954 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2954 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2954 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2955:src/keys.c    **** 	do {
 294              		.loc 1 2955 2 is_stmt 1 view .LVU77
2956:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2956 3 view .LVU78
2957:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2957 4 view .LVU79
2954:src/keys.c    **** 	do {
 297              		.loc 1 2954 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2957 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
2959:src/keys.c    **** 				if (PcWrapped)
2960:src/keys.c    **** 					break;
2961:src/keys.c    **** 			}
2962:src/keys.c    **** 			else
2963:src/keys.c    **** 				inc = 1;
2964:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2964 4 is_stmt 1 view .LVU82
 304              		.loc 1 2964 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2964 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
ARM GAS  /tmp/cceyv6gL.s 			page 59


 309              	.LVL28:
 310              		.loc 1 2964 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2964 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2958 5 is_stmt 1 view .LVU87
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2958 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2959:src/keys.c    **** 					break;
 323              		.loc 1 2959 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2958 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2959:src/keys.c    **** 					break;
 328              		.loc 1 2959 5 is_stmt 1 view .LVU91
2959:src/keys.c    **** 					break;
 329              		.loc 1 2959 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2965:src/keys.c    **** 				return pc;
2966:src/keys.c    **** 			}
2967:src/keys.c    **** 		}
2968:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2968 3 is_stmt 1 view .LVU93
 333              		.loc 1 2968 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2968 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2969:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2969 10 is_stmt 1 view .LVU96
 342              		.loc 1 2969 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2969 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2970:src/keys.c    **** 	return pc;
2971:src/keys.c    **** }
 351              		.loc 1 2971 1 view .LVU99
 352 0042 2046     		mov	r0, r4
ARM GAS  /tmp/cceyv6gL.s 			page 60


 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2971 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
ARM GAS  /tmp/cceyv6gL.s 			page 61


 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB301:
 432              	.LBI301:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE301:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB318:
 438              	.LBB302:
 439              	.LBI302:
ARM GAS  /tmp/cceyv6gL.s 			page 62


 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB303:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB304:
 444              	.LBI304:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB305:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE305:
 453              	.LBE304:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE303:
 462              	.LBE302:
 463              	.LBE318:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
ARM GAS  /tmp/cceyv6gL.s 			page 63


 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB319:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE319:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB320:
 505              	.LBB315:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB312:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB309:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB306:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE306:
ARM GAS  /tmp/cceyv6gL.s 			page 64


 518              	.LBE309:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE312:
 527              	.LBE315:
 528              	.LBE320:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB321:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
ARM GAS  /tmp/cceyv6gL.s 			page 65


 558              	.LBE321:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB322:
 562              	.LBB316:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB313:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB310:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB307:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE307:
 575              	.LBE310:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE313:
 584              	.LBE316:
 585              	.LBE322:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
ARM GAS  /tmp/cceyv6gL.s 			page 66


 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB323:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE323:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB324:
 612              	.LBB317:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB314:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB311:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB308:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE308:
 625              	.LBE311:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE314:
 634              	.LBE317:
 635              	.LBE324:
 610:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 67


 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
ARM GAS  /tmp/cceyv6gL.s 			page 68


 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2972:src/keys.c    **** 
2973:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2973 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2973 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2973 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2974:src/keys.c    **** 	do {
 717              		.loc 1 2974 2 is_stmt 1 view .LVU239
2975:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2975 3 view .LVU240
2976:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2976 4 view .LVU241
 720              		.loc 1 2976 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2977:src/keys.c    **** 			if (PcWrapped)
2978:src/keys.c    **** 				break;
2979:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2979 4 is_stmt 1 view .LVU243
2980:src/keys.c    **** 				return pc;
ARM GAS  /tmp/cceyv6gL.s 			page 69


2981:src/keys.c    **** 			}
2982:src/keys.c    **** 		}
2983:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2983 3 view .LVU244
 727              		.loc 1 2983 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2977:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2977 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2983 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2984:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2984 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2976:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2976 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2977:src/keys.c    **** 				break;
 739              		.loc 1 2977 4 is_stmt 1 view .LVU250
2983:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2983 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2984 3 is_stmt 1 view .LVU252
2977:src/keys.c    **** 				break;
 744              		.loc 1 2977 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2979:src/keys.c    **** 				return pc;
 746              		.loc 1 2979 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2979:src/keys.c    **** 				return pc;
 750              		.loc 1 2979 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2986:src/keys.c    **** 	return pc;
2987:src/keys.c    **** }
 753              		.loc 1 2987 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2984 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2985 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2984 8 view .LVU259
 765 003e 0446     		mov	r4, r0
ARM GAS  /tmp/cceyv6gL.s 			page 70


 766              	.LVL60:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2985 10 is_stmt 1 view .LVU260
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2985 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2985 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2987 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2987 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 714 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB325:
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 716 3 view .LVU266
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 717 3 view .LVU267
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 716 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 717 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 717 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 725:src/keys.c    **** #endif
 812              		.loc 1 725 7 is_stmt 1 view .LVU271
 725:src/keys.c    **** #endif
 813              		.loc 1 725 29 is_stmt 0 view .LVU272
ARM GAS  /tmp/cceyv6gL.s 			page 71


 814 000a AD3B     		subs	r3, r3, #173
 725:src/keys.c    **** #endif
 815              		.loc 1 725 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 735:src/keys.c    **** 		}
 818              		.loc 1 735 4 is_stmt 1 view .LVU274
 735:src/keys.c    **** 		}
 819              		.loc 1 735 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE325:
 739:src/keys.c    **** 
 825              		.loc 1 739 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB326:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 718 4 is_stmt 1 view .LVU277
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 718 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 718 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 718 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 719:src/keys.c    **** 		}
 839              		.loc 1 719 4 is_stmt 1 view .LVU281
 719:src/keys.c    **** 		}
 840              		.loc 1 719 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 719:src/keys.c    **** 		}
 843              		.loc 1 719 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE326:
 851              		.cfi_endproc
 852              	.LFE64:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cceyv6gL.s 			page 72


 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 552 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 555 2 view .LVU285
 555:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 555 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 560:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 560 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 555 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 556 2 is_stmt 1 view .LVU289
 557:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 557 2 view .LVU290
 560:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 560 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 557 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 560 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 557 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 558 2 is_stmt 1 view .LVU295
 558:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 558 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 559 2 is_stmt 1 view .LVU297
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 2 view .LVU298
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 561 2 view .LVU299
 562:src/keys.c    **** }
 898              		.loc 1 562 2 view .LVU300
 563:src/keys.c    **** 
 899              		.loc 1 563 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
ARM GAS  /tmp/cceyv6gL.s 			page 73


 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE66:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB34:
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1899 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1900:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1900 2 view .LVU303
 923              	.LVL67:
 924              	.LBB327:
 925              	.LBI327:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 552 13 view .LVU304
 927              	.LBB328:
 553:src/keys.c    **** 		return;
 928              		.loc 1 553 2 view .LVU305
 929              	.LBE328:
 930              	.LBE327:
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1899 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB330:
 937              	.LBB329:
 553:src/keys.c    **** 		return;
 938              		.loc 1 553 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 553:src/keys.c    **** 		return;
 941              		.loc 1 553 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 553:src/keys.c    **** 		return;
 946              		.loc 1 553 5 view .LVU309
 947              	.LBE329:
 948              	.LBE330:
1901:src/keys.c    **** }
 949              		.loc 1 1901 2 is_stmt 1 view .LVU310
1901:src/keys.c    **** }
ARM GAS  /tmp/cceyv6gL.s 			page 74


 950              		.loc 1 1901 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1902:src/keys.c    **** 
 955              		.loc 1 1902 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE34:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB35:
1904:src/keys.c    ****    const unsigned int base = CmdBase;
 975              		.loc 1 1904 40 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1905:src/keys.c    ****    int r = RARG(base, val 
 979              		.loc 1 1905 4 view .LVU314
1904:src/keys.c    ****    const unsigned int base = CmdBase;
 980              		.loc 1 1904 40 is_stmt 0 view .LVU315
 981 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 982              		.cfi_def_cfa_offset 24
 983              		.cfi_offset 3, -24
 984              		.cfi_offset 4, -20
 985              		.cfi_offset 5, -16
 986              		.cfi_offset 6, -12
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
1905:src/keys.c    ****    int r = RARG(base, val 
 989              		.loc 1 1905 30 view .LVU316
 990 0002 234B     		ldr	r3, .L109
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 991              		.loc 1 1906 12 view .LVU317
 992 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 993 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1905:src/keys.c    ****    int r = RARG(base, val 
 994              		.loc 1 1905 23 view .LVU318
 995 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 996              	.LVL71:
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 997              		.loc 1 1906 4 is_stmt 1 view .LVU319
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 998              		.loc 1 1906 12 is_stmt 0 view .LVU320
 999 000a EE07     		lsls	r6, r5, #31
ARM GAS  /tmp/cceyv6gL.s 			page 75


1909:src/keys.c    **** 
 1000              		.loc 1 1909 34 view .LVU321
 1001 000c 214E     		ldr	r6, .L109+4
 1002 000e 3668     		ldr	r6, [r6]
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1003              		.loc 1 1906 12 view .LVU322
 1004 0010 01F08003 		and	r3, r1, #128
1909:src/keys.c    **** 
 1005              		.loc 1 1909 32 view .LVU323
 1006 0014 96F8EA77 		ldrb	r7, [r6, #2026]	@ zero_extendqisi2
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1906 12 view .LVU324
 1008 0018 0344     		add	r3, r3, r0
 1009 001a 02F12004 		add	r4, r2, #32
 1010 001e 48BF     		it	mi
 1011 0020 7033     		addmi	r3, r3, #112
 1012 0022 2402     		lsls	r4, r4, #8
1909:src/keys.c    **** 
 1013              		.loc 1 1909 79 view .LVU325
 1014 0024 3F07     		lsls	r7, r7, #28
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1906 12 view .LVU326
 1016 0026 44EA0304 		orr	r4, r4, r3
 1017              	.LVL72:
1909:src/keys.c    **** 
 1018              		.loc 1 1909 4 is_stmt 1 view .LVU327
1909:src/keys.c    **** 
 1019              		.loc 1 1909 79 is_stmt 0 view .LVU328
 1020 002a 25D5     		bpl	.L92
1909:src/keys.c    **** 
 1021              		.loc 1 1909 79 discriminator 2 view .LVU329
 1022 002c 15F0400F 		tst	r5, #64
 1023 0030 0CBF     		ite	eq
 1024 0032 0425     		moveq	r5, #4
 1025 0034 0825     		movne	r5, #8
 1026              	.L87:
 1027              	.LVL73:
1911:src/keys.c    ****      /*
 1028              		.loc 1 1911 4 is_stmt 1 discriminator 6 view .LVU330
1911:src/keys.c    ****      /*
 1029              		.loc 1 1911 7 is_stmt 0 discriminator 6 view .LVU331
 1030 0036 0B06     		lsls	r3, r1, #24
 1031 0038 1AD4     		bmi	.L88
1927:src/keys.c    ****        if (C_LOCKED) {
 1032              		.loc 1 1927 6 is_stmt 1 view .LVU332
1927:src/keys.c    ****        if (C_LOCKED) {
 1033              		.loc 1 1927 23 is_stmt 0 view .LVU333
 1034 003a 174B     		ldr	r3, .L109+8
 1035 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1036 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1927:src/keys.c    ****        if (C_LOCKED) {
 1037              		.loc 1 1927 9 view .LVU334
 1038 0042 DF06     		lsls	r7, r3, #27
 1039 0044 10D5     		bpl	.L89
1927:src/keys.c    ****        if (C_LOCKED) {
 1040              		.loc 1 1927 55 discriminator 1 view .LVU335
 1041 0046 96F8AC37 		ldrb	r3, [r6, #1964]	@ zero_extendqisi2
ARM GAS  /tmp/cceyv6gL.s 			page 76


 1042 004a 03F04103 		and	r3, r3, #65
1927:src/keys.c    ****        if (C_LOCKED) {
 1043              		.loc 1 1927 40 discriminator 1 view .LVU336
 1044 004e 412B     		cmp	r3, #65
 1045 0050 0CBF     		ite	eq
 1046 0052 0021     		moveq	r1, #0
 1047 0054 6221     		movne	r1, #98
1927:src/keys.c    ****        if (C_LOCKED) {
 1048              		.loc 1 1927 30 discriminator 1 view .LVU337
 1049 0056 8142     		cmp	r1, r0
 1050 0058 06D2     		bcs	.L89
1927:src/keys.c    ****        if (C_LOCKED) {
 1051              		.loc 1 1927 86 discriminator 6 view .LVU338
 1052 005a C107     		lsls	r1, r0, #31
 1053 005c 04D5     		bpl	.L89
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1054              		.loc 1 1928 8 is_stmt 1 view .LVU339
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1055              		.loc 1 1928 11 is_stmt 0 view .LVU340
 1056 005e 412B     		cmp	r3, #65
 1057 0060 11D0     		beq	.L107
 1058              	.LVL74:
 1059              	.L96:
1933:src/keys.c    ****        }
 1060              		.loc 1 1933 10 view .LVU341
 1061 0062 3324     		movs	r4, #51
 1062              	.LVL75:
1948:src/keys.c    **** 
 1063              		.loc 1 1948 2 view .LVU342
 1064 0064 2046     		mov	r0, r4
 1065              	.LVL76:
1948:src/keys.c    **** 
 1066              		.loc 1 1948 2 view .LVU343
 1067 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1068              	.LVL77:
 1069              	.L89:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1070              		.loc 1 1941 6 is_stmt 1 view .LVU344
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1071              		.loc 1 1941 31 is_stmt 0 view .LVU345
 1072 0068 A2F12203 		sub	r3, r2, #34
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1941 9 view .LVU346
 1074 006c 012B     		cmp	r3, #1
 1075 006e 05D9     		bls	.L108
 1076              	.LVL78:
 1077              	.L88:
1946:src/keys.c    ****    return r;
 1078              		.loc 1 1946 4 is_stmt 1 view .LVU347
 1079 0070 FFF7FEFF 		bl	reset_arg
 1080              	.LVL79:
1947:src/keys.c    ****  }
 1081              		.loc 1 1947 4 view .LVU348
 1082              	.L85:
1948:src/keys.c    **** 
 1083              		.loc 1 1948 2 is_stmt 0 view .LVU349
 1084 0074 2046     		mov	r0, r4
ARM GAS  /tmp/cceyv6gL.s 			page 77


 1085 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1086              	.LVL80:
 1087              	.L92:
1909:src/keys.c    **** 
 1088              		.loc 1 1909 79 view .LVU350
 1089 0078 0425     		movs	r5, #4
 1090 007a DCE7     		b	.L87
 1091              	.LVL81:
 1092              	.L108:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1093              		.loc 1 1941 76 discriminator 1 view .LVU351
 1094 007c C5F16405 		rsb	r5, r5, #100
 1095              	.LVL82:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1941 55 discriminator 1 view .LVU352
 1097 0080 8542     		cmp	r5, r0
 1098 0082 F5D2     		bcs	.L88
 1099 0084 EDE7     		b	.L96
 1100              	.LVL83:
 1101              	.L107:
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1102              		.loc 1 1929 3 is_stmt 1 view .LVU353
 1103 0086 1920     		movs	r0, #25
 1104              	.LVL84:
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1105              		.loc 1 1929 3 is_stmt 0 view .LVU354
 1106 0088 FFF7FEFF 		bl	error_message
 1107              	.LVL85:
1930:src/keys.c    ****        }
 1108              		.loc 1 1930 3 is_stmt 1 view .LVU355
1930:src/keys.c    ****        }
 1109              		.loc 1 1930 10 is_stmt 0 view .LVU356
 1110 008c 3324     		movs	r4, #51
 1111              	.LVL86:
1930:src/keys.c    ****        }
 1112              		.loc 1 1930 10 view .LVU357
 1113 008e F1E7     		b	.L85
 1114              	.L110:
 1115              		.align	2
 1116              	.L109:
 1117 0090 00000000 		.word	StateWhileOn
 1118 0094 00000000 		.word	main_ram
 1119 0098 00000000 		.word	argcmds
 1120              		.cfi_endproc
 1121              	.LFE35:
 1123              		.section	.text.arg_digit,"ax",%progbits
 1124              		.align	1
 1125              		.p2align 2,,3
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	arg_digit:
 1132              	.LVL87:
 1133              	.LFB36:
1950:src/keys.c    **** 	int lim;
 1134              		.loc 1 1950 29 is_stmt 1 view -0
ARM GAS  /tmp/cceyv6gL.s 			page 78


 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
1951:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1138              		.loc 1 1951 2 view .LVU359
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1139              		.loc 1 1953 2 view .LVU360
1950:src/keys.c    **** 	int lim;
 1140              		.loc 1 1950 29 is_stmt 0 view .LVU361
 1141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1142              		.cfi_def_cfa_offset 20
 1143              		.cfi_offset 4, -20
 1144              		.cfi_offset 5, -16
 1145              		.cfi_offset 6, -12
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
1954:src/keys.c    **** #else
 1148              		.loc 1 1954 29 view .LVU362
 1149 0002 3E4D     		ldr	r5, .L158
1950:src/keys.c    **** 	int lim;
 1150              		.loc 1 1950 29 view .LVU363
 1151 0004 83B0     		sub	sp, sp, #12
 1152              		.cfi_def_cfa_offset 32
1950:src/keys.c    **** 	int lim;
 1153              		.loc 1 1950 29 view .LVU364
 1154 0006 0446     		mov	r4, r0
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1155              		.loc 1 1953 17 view .LVU365
 1156 0008 01A8     		add	r0, sp, #4
 1157              	.LVL88:
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1158              		.loc 1 1953 17 view .LVU366
 1159 000a FFF7FEFF 		bl	get_dispmode_digs
 1160              	.LVL89:
1954:src/keys.c    **** #else
 1161              		.loc 1 1954 29 view .LVU367
 1162 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1163              	.LVL90:
1954:src/keys.c    **** #else
 1164              		.loc 1 1954 2 is_stmt 1 view .LVU368
 1165 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1954:src/keys.c    **** #else
 1166              		.loc 1 1954 130 is_stmt 0 view .LVU369
 1167 0012 11F0400C 		ands	ip, r1, #64
 1168 0016 01D0     		beq	.L114
1954:src/keys.c    **** #else
 1169              		.loc 1 1954 44 discriminator 2 view .LVU370
 1170 0018 502E     		cmp	r6, #80
 1171 001a 64D0     		beq	.L154
 1172              	.LVL91:
 1173              	.L114:
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1174              		.loc 1 1958 2 is_stmt 1 discriminator 8 view .LVU371
1959:src/keys.c    **** 	
 1175              		.loc 1 1959 34 is_stmt 0 discriminator 8 view .LVU372
 1176 001c 384A     		ldr	r2, .L158+4
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
ARM GAS  /tmp/cceyv6gL.s 			page 79


 1177              		.loc 1 1958 33 discriminator 8 view .LVU373
 1178 001e 2B89     		ldrh	r3, [r5, #8]
1959:src/keys.c    **** 	
 1179              		.loc 1 1959 34 discriminator 8 view .LVU374
 1180 0020 02EB0612 		add	r2, r2, r6, lsl #4
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1181              		.loc 1 1958 41 discriminator 8 view .LVU375
 1182 0024 03EB8303 		add	r3, r3, r3, lsl #2
1959:src/keys.c    **** 	
 1183              		.loc 1 1959 34 discriminator 8 view .LVU376
 1184 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1185              		.loc 1 1958 46 discriminator 8 view .LVU377
 1186 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1187              	.LVL92:
1959:src/keys.c    **** 	
 1188              		.loc 1 1959 2 is_stmt 1 discriminator 8 view .LVU378
1959:src/keys.c    **** 	
 1189              		.loc 1 1959 39 is_stmt 0 discriminator 8 view .LVU379
 1190 002e BB07     		lsls	r3, r7, #30
 1191 0030 32D4     		bmi	.L153
1959:src/keys.c    **** 	
 1192              		.loc 1 1959 39 discriminator 2 view .LVU380
 1193 0032 95F91530 		ldrsb	r3, [r5, #21]
 1194 0036 002B     		cmp	r3, #0
 1195 0038 2EDB     		blt	.L153
 1196              	.LVL93:
1961:src/keys.c    **** 		// Handle local registers and flags
 1197              		.loc 1 1961 2 is_stmt 1 view .LVU381
1961:src/keys.c    **** 		// Handle local registers and flags
 1198              		.loc 1 1961 5 is_stmt 0 view .LVU382
 1199 003a C907     		lsls	r1, r1, #31
 1200 003c 4BD5     		bpl	.L120
1963:src/keys.c    **** 		if (State2.runmode) {
 1201              		.loc 1 1963 3 is_stmt 1 view .LVU383
1963:src/keys.c    **** 		if (State2.runmode) {
 1202              		.loc 1 1963 7 is_stmt 0 view .LVU384
 1203 003e 0F23     		movs	r3, #15
 1204 0040 0193     		str	r3, [sp, #4]
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1205              		.loc 1 1964 3 is_stmt 1 view .LVU385
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1206              		.loc 1 1964 6 is_stmt 0 view .LVU386
 1207 0042 BCF1000F 		cmp	ip, #0
 1208 0046 05D0     		beq	.L123
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1209              		.loc 1 1965 4 is_stmt 1 view .LVU387
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1210              		.loc 1 1965 8 is_stmt 0 view .LVU388
 1211 0048 2E4B     		ldr	r3, .L158+8
 1212 004a 1B68     		ldr	r3, [r3]
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1213              		.loc 1 1965 7 view .LVU389
 1214 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1215 0050 002B     		cmp	r3, #0
 1216 0052 3DD0     		beq	.L125
 1217              	.LVL94:
ARM GAS  /tmp/cceyv6gL.s 			page 80


 1218              	.L123:
1975:src/keys.c    **** 	else {
 1219              		.loc 1 1975 65 view .LVU390
 1220 0054 0F20     		movs	r0, #15
 1221              	.L122:
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1222              		.loc 1 1981 2 is_stmt 1 view .LVU391
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1223              		.loc 1 1981 5 is_stmt 0 view .LVU392
 1224 0056 8442     		cmp	r4, r0
 1225 0058 3ADC     		bgt	.L125
 1226              	.L157:
1984:src/keys.c    **** 	++State2.numdigit;
 1227              		.loc 1 1984 2 is_stmt 1 view .LVU393
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1228              		.loc 1 1985 2 is_stmt 0 view .LVU394
 1229 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1984:src/keys.c    **** 	++State2.numdigit;
 1230              		.loc 1 1984 16 view .LVU395
 1231 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1232              		.loc 1 1985 2 is_stmt 1 view .LVU396
 1233 005e 0137     		adds	r7, r7, #1
1986:src/keys.c    **** 		int result = arg_eval(val);
 1234              		.loc 1 1986 16 is_stmt 0 view .LVU397
 1235 0060 04EB8403 		add	r3, r4, r4, lsl #2
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1236              		.loc 1 1985 2 view .LVU398
 1237 0064 FFB2     		uxtb	r7, r7
1986:src/keys.c    **** 		int result = arg_eval(val);
 1238              		.loc 1 1986 5 view .LVU399
 1239 0066 B0EB430F 		cmp	r0, r3, lsl #1
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1240              		.loc 1 1985 2 view .LVU400
 1241 006a EF72     		strb	r7, [r5, #11]
1986:src/keys.c    **** 		int result = arg_eval(val);
 1242              		.loc 1 1986 2 is_stmt 1 view .LVU401
1986:src/keys.c    **** 		int result = arg_eval(val);
 1243              		.loc 1 1986 5 is_stmt 0 view .LVU402
 1244 006c 04DB     		blt	.L131
1986:src/keys.c    **** 		int result = arg_eval(val);
 1245              		.loc 1 1986 49 discriminator 1 view .LVU403
 1246 006e 3046     		mov	r0, r6
 1247 0070 FFF7FEFF 		bl	num_arg_digits
 1248              	.LVL95:
1986:src/keys.c    **** 		int result = arg_eval(val);
 1249              		.loc 1 1986 27 discriminator 1 view .LVU404
 1250 0074 8742     		cmp	r7, r0
 1251 0076 2BDB     		blt	.L125
 1252              	.L131:
 1253              	.LBB331:
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1254              		.loc 1 1987 3 is_stmt 1 view .LVU405
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1255              		.loc 1 1987 16 is_stmt 0 view .LVU406
 1256 0078 2046     		mov	r0, r4
 1257 007a FFF7FEFF 		bl	arg_eval
ARM GAS  /tmp/cceyv6gL.s 			page 81


 1258              	.LVL96:
1988:src/keys.c    **** 			--State2.numdigit;
 1259              		.loc 1 1988 3 is_stmt 1 view .LVU407
1988:src/keys.c    **** 			--State2.numdigit;
 1260              		.loc 1 1988 6 is_stmt 0 view .LVU408
 1261 007e 3328     		cmp	r0, #51
 1262 0080 08D1     		bne	.L111
1989:src/keys.c    **** 			State2.digval /= 10;
 1263              		.loc 1 1989 4 is_stmt 1 view .LVU409
1990:src/keys.c    **** 		}
 1264              		.loc 1 1990 18 is_stmt 0 view .LVU410
 1265 0082 2B89     		ldrh	r3, [r5, #8]
 1266 0084 2049     		ldr	r1, .L158+12
1989:src/keys.c    **** 			State2.digval /= 10;
 1267              		.loc 1 1989 4 view .LVU411
 1268 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1990:src/keys.c    **** 		}
 1269              		.loc 1 1990 18 view .LVU412
 1270 0088 A1FB0313 		umull	r1, r3, r1, r3
 1271 008c DB08     		lsrs	r3, r3, #3
1989:src/keys.c    **** 			State2.digval /= 10;
 1272              		.loc 1 1989 4 view .LVU413
 1273 008e 013A     		subs	r2, r2, #1
1990:src/keys.c    **** 		}
 1274              		.loc 1 1990 18 view .LVU414
 1275 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1989:src/keys.c    **** 			State2.digval /= 10;
 1276              		.loc 1 1989 4 view .LVU415
 1277 0092 EA72     		strb	r2, [r5, #11]
1990:src/keys.c    **** 		}
 1278              		.loc 1 1990 4 is_stmt 1 view .LVU416
 1279              	.L111:
 1280              	.LBE331:
1995:src/keys.c    **** 
 1281              		.loc 1 1995 1 is_stmt 0 view .LVU417
 1282 0094 03B0     		add	sp, sp, #12
 1283              		.cfi_remember_state
 1284              		.cfi_def_cfa_offset 20
 1285              		@ sp needed
 1286 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1287              	.LVL97:
 1288              	.L153:
 1289              		.cfi_restore_state
1961:src/keys.c    **** 		// Handle local registers and flags
 1290              		.loc 1 1961 2 is_stmt 1 view .LVU418
1961:src/keys.c    **** 		// Handle local registers and flags
 1291              		.loc 1 1961 5 is_stmt 0 view .LVU419
 1292 0098 C807     		lsls	r0, r1, #31
 1293 009a 12D5     		bpl	.L155
1963:src/keys.c    **** 		if (State2.runmode) {
 1294              		.loc 1 1963 3 is_stmt 1 view .LVU420
1963:src/keys.c    **** 		if (State2.runmode) {
 1295              		.loc 1 1963 7 is_stmt 0 view .LVU421
 1296 009c 0F23     		movs	r3, #15
 1297 009e 0193     		str	r3, [sp, #4]
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1298              		.loc 1 1964 3 is_stmt 1 view .LVU422
ARM GAS  /tmp/cceyv6gL.s 			page 82


1964:src/keys.c    **** 			if (LocalRegs == 0)
 1299              		.loc 1 1964 6 is_stmt 0 view .LVU423
 1300 00a0 BCF1000F 		cmp	ip, #0
 1301 00a4 D6D0     		beq	.L123
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1302              		.loc 1 1965 4 is_stmt 1 view .LVU424
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1303              		.loc 1 1965 8 is_stmt 0 view .LVU425
 1304 00a6 174B     		ldr	r3, .L158+8
 1305 00a8 1B68     		ldr	r3, [r3]
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1306              		.loc 1 1965 7 view .LVU426
 1307 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1308 00ae 7BB1     		cbz	r3, .L125
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1309              		.loc 1 1968 5 is_stmt 1 view .LVU427
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1310              		.loc 1 1968 11 is_stmt 0 view .LVU428
 1311 00b0 F0B2     		uxtb	r0, r6
 1312 00b2 FFF7FEFF 		bl	local_regs_rarg
 1313              	.LVL98:
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1314              		.loc 1 1968 45 view .LVU429
 1315 00b6 0138     		subs	r0, r0, #1
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1316              		.loc 1 1969 5 is_stmt 1 view .LVU430
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1317              		.loc 1 1969 8 is_stmt 0 view .LVU431
 1318 00b8 0F28     		cmp	r0, #15
 1319 00ba 06DD     		ble	.L152
1970:src/keys.c    **** 			}
 1320              		.loc 1 1970 6 is_stmt 1 view .LVU432
1970:src/keys.c    **** 			}
 1321              		.loc 1 1970 10 is_stmt 0 view .LVU433
 1322 00bc 0F20     		movs	r0, #15
 1323 00be 0190     		str	r0, [sp, #4]
 1324 00c0 C9E7     		b	.L122
 1325              	.L155:
1975:src/keys.c    **** 	else {
 1326              		.loc 1 1975 3 is_stmt 1 view .LVU434
1975:src/keys.c    **** 	else {
 1327              		.loc 1 1975 65 is_stmt 0 view .LVU435
 1328 00c2 BCF1000F 		cmp	ip, #0
 1329 00c6 13D1     		bne	.L156
 1330 00c8 6320     		movs	r0, #99
 1331              	.LVL99:
 1332              	.L152:
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1333              		.loc 1 1981 5 view .LVU436
 1334 00ca 8442     		cmp	r4, r0
1979:src/keys.c    **** 	}
 1335              		.loc 1 1979 8 view .LVU437
 1336 00cc 0190     		str	r0, [sp, #4]
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1981 2 is_stmt 1 view .LVU438
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1338              		.loc 1 1981 5 is_stmt 0 view .LVU439
ARM GAS  /tmp/cceyv6gL.s 			page 83


 1339 00ce C4DD     		ble	.L157
 1340              	.L125:
1966:src/keys.c    **** 			if (is_reg) {
 1341              		.loc 1 1966 12 view .LVU440
 1342 00d0 3320     		movs	r0, #51
1995:src/keys.c    **** 
 1343              		.loc 1 1995 1 view .LVU441
 1344 00d2 03B0     		add	sp, sp, #12
 1345              		.cfi_remember_state
 1346              		.cfi_def_cfa_offset 20
 1347              		@ sp needed
 1348 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1349              	.LVL100:
 1350              	.L120:
 1351              		.cfi_restore_state
1974:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1352              		.loc 1 1974 7 is_stmt 1 view .LVU442
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1353              		.loc 1 1977 3 view .LVU443
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1354              		.loc 1 1977 9 is_stmt 0 view .LVU444
 1355 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1356              		.loc 1 1977 7 view .LVU445
 1357 00d8 0190     		str	r0, [sp, #4]
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1358              		.loc 1 1978 3 is_stmt 1 view .LVU446
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1359              		.loc 1 1978 6 is_stmt 0 view .LVU447
 1360 00da 7F28     		cmp	r0, #127
 1361 00dc BBDD     		ble	.L122
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1362              		.loc 1 1978 23 discriminator 1 view .LVU448
 1363 00de FB07     		lsls	r3, r7, #31
 1364 00e0 B9D5     		bpl	.L122
1979:src/keys.c    **** 	}
 1365              		.loc 1 1979 4 is_stmt 1 view .LVU449
1979:src/keys.c    **** 	}
 1366              		.loc 1 1979 8 is_stmt 0 view .LVU450
 1367 00e2 7F20     		movs	r0, #127
 1368 00e4 F1E7     		b	.L152
 1369              	.LVL101:
 1370              	.L154:
1954:src/keys.c    **** #else
 1371              		.loc 1 1954 93 discriminator 4 view .LVU451
 1372 00e6 0438     		subs	r0, r0, #4
 1373              	.LVL102:
1954:src/keys.c    **** #else
 1374              		.loc 1 1954 68 discriminator 4 view .LVU452
 1375 00e8 0128     		cmp	r0, #1
1954:src/keys.c    **** #else
 1376              		.loc 1 1954 130 discriminator 4 view .LVU453
 1377 00ea 98BF     		it	ls
 1378 00ec 8D26     		movls	r6, #141
 1379 00ee 95E7     		b	.L114
 1380              	.LVL103:
 1381              	.L156:
ARM GAS  /tmp/cceyv6gL.s 			page 84


1975:src/keys.c    **** 	else {
 1382              		.loc 1 1975 26 discriminator 1 view .LVU454
 1383 00f0 F0B2     		uxtb	r0, r6
 1384 00f2 FFF7FEFF 		bl	global_regs_rarg
 1385              	.LVL104:
1975:src/keys.c    **** 	else {
 1386              		.loc 1 1975 61 discriminator 1 view .LVU455
 1387 00f6 0138     		subs	r0, r0, #1
 1388 00f8 E7E7     		b	.L152
 1389              	.L159:
 1390 00fa 00BF     		.align	2
 1391              	.L158:
 1392 00fc 00000000 		.word	StateWhileOn
 1393 0100 00000000 		.word	argcmds
 1394 0104 00000000 		.word	main_ram
 1395 0108 CDCCCCCC 		.word	-858993459
 1396              		.cfi_endproc
 1397              	.LFE36:
 1399              		.section	.text.process_arg_shuffle,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	process_arg_shuffle:
 1408              	.LVL105:
 1409              	.LFB41:
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1410              		.loc 1 2062 39 is_stmt 1 view -0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1415              		.loc 1 2063 2 view .LVU457
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1416              		.loc 1 2062 39 is_stmt 0 view .LVU458
 1417 0000 10B4     		push	{r4}
 1418              		.cfi_def_cfa_offset 4
 1419              		.cfi_offset 4, -4
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1420              		.loc 1 2063 31 view .LVU459
 1421 0002 0A4A     		ldr	r2, .L163
 1422 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1423              		.loc 1 2063 16 view .LVU460
 1424 0006 1189     		ldrh	r1, [r2, #8]
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1425              		.loc 1 2063 43 view .LVU461
 1426 0008 5C00     		lsls	r4, r3, #1
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1427              		.loc 1 2063 21 view .LVU462
 1428 000a A040     		lsls	r0, r0, r4
 1429              	.LVL106:
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1430              		.loc 1 2063 40 view .LVU463
ARM GAS  /tmp/cceyv6gL.s 			page 85


 1431 000c 0133     		adds	r3, r3, #1
 1432 000e DBB2     		uxtb	r3, r3
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1433              		.loc 1 2063 16 view .LVU464
 1434 0010 0844     		add	r0, r0, r1
 1435 0012 80B2     		uxth	r0, r0
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1436              		.loc 1 2064 5 view .LVU465
 1437 0014 032B     		cmp	r3, #3
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1438              		.loc 1 2063 40 view .LVU466
 1439 0016 D372     		strb	r3, [r2, #11]
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2063 16 view .LVU467
 1441 0018 1081     		strh	r0, [r2, #8]	@ movhi
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1442              		.loc 1 2064 2 is_stmt 1 view .LVU468
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1443              		.loc 1 2064 5 is_stmt 0 view .LVU469
 1444 001a 03D9     		bls	.L161
2066:src/keys.c    **** }
 1445              		.loc 1 2066 2 is_stmt 1 view .LVU470
2067:src/keys.c    **** 
 1446              		.loc 1 2067 1 is_stmt 0 view .LVU471
 1447 001c 5DF8044B 		ldr	r4, [sp], #4
 1448              		.cfi_remember_state
 1449              		.cfi_restore 4
 1450              		.cfi_def_cfa_offset 0
2066:src/keys.c    **** }
 1451              		.loc 1 2066 9 view .LVU472
 1452 0020 FFF7FEBF 		b	arg_eval
 1453              	.LVL107:
 1454              	.L161:
 1455              		.cfi_restore_state
2067:src/keys.c    **** 
 1456              		.loc 1 2067 1 view .LVU473
 1457 0024 3320     		movs	r0, #51
 1458 0026 5DF8044B 		ldr	r4, [sp], #4
 1459              		.cfi_restore 4
 1460              		.cfi_def_cfa_offset 0
 1461 002a 7047     		bx	lr
 1462              	.L164:
 1463              		.align	2
 1464              	.L163:
 1465 002c 00000000 		.word	StateWhileOn
 1466              		.cfi_endproc
 1467              	.LFE41:
 1469              		.section	.text.process_h_shifted,"ax",%progbits
 1470              		.align	1
 1471              		.p2align 2,,3
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu fpv4-sp-d16
 1477              	process_h_shifted:
 1478              	.LVL108:
 1479              	.LFB21:
ARM GAS  /tmp/cceyv6gL.s 			page 86


1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1480              		.loc 1 1101 47 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
1104:src/keys.c    **** 		// Row 1
 1484              		.loc 1 1104 2 view .LVU475
1155:src/keys.c    **** 	int op = op_map[lc];
 1485              		.loc 1 1155 2 view .LVU476
 1486              	.LBB332:
 1487              	.LBB333:
 158:src/keys.c    **** }
 1488              		.loc 1 158 23 is_stmt 0 view .LVU477
 1489 0000 314A     		ldr	r2, .L196
 1490              	.LBE333:
 1491              	.LBE332:
1156:src/keys.c    **** 	reset_shift();
 1492              		.loc 1 1156 17 view .LVU478
 1493 0002 324B     		ldr	r3, .L196+4
 1494              	.LBB336:
 1495              	.LBB334:
 158:src/keys.c    **** }
 1496              		.loc 1 158 23 view .LVU479
 1497 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1498              	.LBE334:
 1499              	.LBE336:
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1500              		.loc 1 1101 47 view .LVU480
 1501 0006 70B5     		push	{r4, r5, r6, lr}
 1502              		.cfi_def_cfa_offset 16
 1503              		.cfi_offset 4, -16
 1504              		.cfi_offset 5, -12
 1505              		.cfi_offset 6, -8
 1506              		.cfi_offset 14, -4
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1507              		.loc 1 1101 47 view .LVU481
 1508 0008 0446     		mov	r4, r0
 1509              	.LVL109:
 1510              	.LBB337:
 1511              	.LBI332:
 146:src/keys.c    **** {
 1512              		.loc 1 146 12 is_stmt 1 view .LVU482
 1513              	.LBB335:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1514              		.loc 1 148 2 view .LVU483
 158:src/keys.c    **** }
 1515              		.loc 1 158 2 view .LVU484
 158:src/keys.c    **** }
 1516              		.loc 1 158 2 is_stmt 0 view .LVU485
 1517              	.LBE335:
 1518              	.LBE337:
1156:src/keys.c    **** 	reset_shift();
 1519              		.loc 1 1156 2 is_stmt 1 view .LVU486
 1520              	.LBB338:
 1521              	.LBB339:
 1522              	.LBB340:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/cceyv6gL.s 			page 87


 1523              		.loc 1 106 16 is_stmt 0 view .LVU487
 1524 000a 314E     		ldr	r6, .L196+8
 1525              	.LBE340:
 1526              	.LBE339:
 1527              	.LBE338:
1156:src/keys.c    **** 	reset_shift();
 1528              		.loc 1 1156 17 view .LVU488
 1529 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1530              	.LVL110:
1157:src/keys.c    **** 
 1531              		.loc 1 1157 2 is_stmt 1 view .LVU489
 1532              	.LBB347:
 1533              	.LBI338:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1534              		.loc 1 114 13 view .LVU490
 1535              	.LBE347:
 115:src/keys.c    **** }
 1536              		.loc 1 115 2 view .LVU491
 1537              	.LBB348:
 1538              	.LBB345:
 1539              	.LBI339:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1540              		.loc 1 104 20 view .LVU492
 1541              	.LBB343:
 105:src/keys.c    **** 	State2.shifts = shift;
 1542              		.loc 1 105 2 view .LVU493
 1543              	.LBB341:
 1544              	.LBI341:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1545              		.loc 1 96 13 view .LVU494
 1546              	.LBB342:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1547              		.loc 1 97 2 view .LVU495
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1548              		.loc 1 97 18 is_stmt 0 view .LVU496
 1549 0010 FFF7FEFF 		bl	shift_down
 1550              	.LVL111:
  98:src/keys.c    **** }
 1551              		.loc 1 98 2 is_stmt 1 view .LVU497
 1552              	.LBE342:
 1553              	.LBE341:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1554              		.loc 1 106 2 view .LVU498
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1555              		.loc 1 106 16 is_stmt 0 view .LVU499
 1556 0014 0023     		movs	r3, #0
 1557              	.LBE343:
 1558              	.LBE345:
 1559              	.LBE348:
1160:src/keys.c    **** 	case K62:
 1560              		.loc 1 1160 2 view .LVU500
 1561 0016 262C     		cmp	r4, #38
 1562              	.LBB349:
 1563              	.LBB346:
 1564              	.LBB344:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1565              		.loc 1 106 16 view .LVU501
ARM GAS  /tmp/cceyv6gL.s 			page 88


 1566 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1567              		.loc 1 108 2 is_stmt 1 view .LVU502
 1568              	.LVL112:
 108:src/keys.c    **** }
 1569              		.loc 1 108 2 is_stmt 0 view .LVU503
 1570              	.LBE344:
 1571              	.LBE346:
 1572              	.LBE349:
1160:src/keys.c    **** 	case K62:
 1573              		.loc 1 1160 2 is_stmt 1 view .LVU504
 1574 001a 27D0     		beq	.L166
 1575 001c 272C     		cmp	r4, #39
 1576 001e 19D1     		bne	.L168
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1577              		.loc 1 1173 3 view .LVU505
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1578              		.loc 1 1173 7 is_stmt 0 view .LVU506
 1579 0020 FFF7FEFF 		bl	is_bad_cmdline
 1580              	.LVL113:
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1581              		.loc 1 1173 6 view .LVU507
 1582 0024 00BB     		cbnz	r0, .L178
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1583              		.loc 1 1175 3 is_stmt 1 view .LVU508
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1584              		.loc 1 1175 30 is_stmt 0 view .LVU509
 1585 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1586 0028 C3F38012 		ubfx	r2, r3, #6, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1587              		.loc 1 1175 22 view .LVU510
 1588 002c C2F10102 		rsb	r2, r2, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1589              		.loc 1 1175 18 view .LVU511
 1590 0030 62F38613 		bfi	r3, r2, #6, #1
 1591 0034 B375     		strb	r3, [r6, #22]
1176:src/keys.c    **** 		update_program_bounds(1);
 1592              		.loc 1 1176 3 is_stmt 1 view .LVU512
 1593 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1594              	.LVL114:
1177:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1595              		.loc 1 1177 3 view .LVU513
 1596 003a 0120     		movs	r0, #1
 1597 003c FFF7FEFF 		bl	update_program_bounds
 1598              	.LVL115:
1178:src/keys.c    **** 			set_pc(0);
 1599              		.loc 1 1178 3 view .LVU514
1178:src/keys.c    **** 			set_pc(0);
 1600              		.loc 1 1178 7 is_stmt 0 view .LVU515
 1601 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1178:src/keys.c    **** 			set_pc(0);
 1602              		.loc 1 1178 6 view .LVU516
 1603 0042 10F04000 		ands	r0, r0, #64
 1604 0046 05D1     		bne	.L168
1178:src/keys.c    **** 			set_pc(0);
 1605              		.loc 1 1178 27 discriminator 1 view .LVU517
 1606 0048 224B     		ldr	r3, .L196+12
ARM GAS  /tmp/cceyv6gL.s 			page 89


 1607 004a 1B68     		ldr	r3, [r3]
1178:src/keys.c    **** 			set_pc(0);
 1608              		.loc 1 1178 24 discriminator 1 view .LVU518
 1609 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1610 0050 012A     		cmp	r2, #1
 1611 0052 32D0     		beq	.L192
 1612              	.L168:
1186:src/keys.c    **** 		if (op & _RARG) {
 1613              		.loc 1 1186 2 is_stmt 1 view .LVU519
1186:src/keys.c    **** 		if (op & _RARG) {
 1614              		.loc 1 1186 5 is_stmt 0 view .LVU520
 1615 0054 332D     		cmp	r5, #51
 1616 0056 07D0     		beq	.L178
 1617              	.LVL116:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1618              		.loc 1 1187 3 is_stmt 1 view .LVU521
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1619              		.loc 1 1187 6 is_stmt 0 view .LVU522
 1620 0058 2804     		lsls	r0, r5, #16
 1621 005a 14D5     		bpl	.L193
 1622              	.L176:
1188:src/keys.c    **** 			op = STATE_UNFINISHED;
 1623              		.loc 1 1188 4 is_stmt 1 view .LVU523
 1624              	.LVL117:
 1625              	.LBB350:
 1626              	.LBI350:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1627              		.loc 1 552 13 view .LVU524
 1628              	.LBB351:
 553:src/keys.c    **** 		return;
 1629              		.loc 1 553 2 view .LVU525
 553:src/keys.c    **** 		return;
 1630              		.loc 1 553 6 is_stmt 0 view .LVU526
 1631 005c FFF7FEFF 		bl	is_bad_cmdline
 1632              	.LVL118:
 553:src/keys.c    **** 		return;
 1633              		.loc 1 553 5 view .LVU527
 1634 0060 10B9     		cbnz	r0, .L178
 1635 0062 E8B2     		uxtb	r0, r5
 1636 0064 FFF7FEFF 		bl	init_arg.part.0
 1637              	.LVL119:
 1638              	.L178:
 553:src/keys.c    **** 		return;
 1639              		.loc 1 553 5 view .LVU528
 1640              	.LBE351:
 1641              	.LBE350:
1192:src/keys.c    **** #undef _RARG
 1642              		.loc 1 1192 2 is_stmt 1 view .LVU529
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1643              		.loc 1 1101 47 is_stmt 0 view .LVU530
 1644 0068 3320     		movs	r0, #51
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1645              		.loc 1 1195 1 view .LVU531
 1646 006a 70BD     		pop	{r4, r5, r6, pc}
 1647              	.LVL120:
 1648              	.L166:
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
ARM GAS  /tmp/cceyv6gL.s 			page 90


 1649              		.loc 1 1162 3 is_stmt 1 view .LVU532
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1650              		.loc 1 1162 7 is_stmt 0 view .LVU533
 1651 006c 194B     		ldr	r3, .L196+12
 1652 006e 1B68     		ldr	r3, [r3]
 1653 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1654              		.loc 1 1162 6 view .LVU534
 1655 0074 D607     		lsls	r6, r2, #31
 1656 0076 0FD4     		bmi	.L194
1168:src/keys.c    **** #endif
 1657              		.loc 1 1168 4 is_stmt 1 view .LVU535
1168:src/keys.c    **** #endif
 1658              		.loc 1 1168 8 is_stmt 0 view .LVU536
 1659 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1168:src/keys.c    **** #endif
 1660              		.loc 1 1168 7 view .LVU537
 1661 007c 9C06     		lsls	r4, r3, #26
 1662 007e 14D5     		bpl	.L195
 1663 0080 40F24F10 		movw	r0, #335
 1664              	.LVL121:
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1665              		.loc 1 1195 1 view .LVU538
 1666 0084 70BD     		pop	{r4, r5, r6, pc}
 1667              	.L193:
 1668              	.LVL122:
1192:src/keys.c    **** #undef _RARG
 1669              		.loc 1 1192 2 is_stmt 1 view .LVU539
1192:src/keys.c    **** #undef _RARG
 1670              		.loc 1 1192 9 is_stmt 0 view .LVU540
 1671 0086 134B     		ldr	r3, .L196+12
 1672 0088 1B68     		ldr	r3, [r3]
 1673 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1192:src/keys.c    **** #undef _RARG
 1674              		.loc 1 1192 57 view .LVU541
 1675 008e D907     		lsls	r1, r3, #31
 1676 0090 10D4     		bmi	.L177
 1677              	.LVL123:
 1678              	.L180:
1192:src/keys.c    **** #undef _RARG
 1679              		.loc 1 1192 57 view .LVU542
 1680 0092 25F48040 		bic	r0, r5, #16384
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1681              		.loc 1 1195 1 view .LVU543
 1682 0096 70BD     		pop	{r4, r5, r6, pc}
 1683              	.LVL124:
 1684              	.L194:
1163:src/keys.c    **** 		else
 1685              		.loc 1 1163 4 is_stmt 1 view .LVU544
1163:src/keys.c    **** 		else
 1686              		.loc 1 1163 57 is_stmt 0 view .LVU545
 1687 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1688 009c 002B     		cmp	r3, #0
 1689 009e 40F25315 		movw	r5, #339
 1690              	.LVL125:
1163:src/keys.c    **** 		else
 1691              		.loc 1 1163 57 view .LVU546
ARM GAS  /tmp/cceyv6gL.s 			page 91


 1692 00a2 A8BF     		it	ge
 1693 00a4 4FF4AA75 		movge	r5, #340
 1694 00a8 F3E7     		b	.L180
 1695              	.LVL126:
 1696              	.L195:
1186:src/keys.c    **** 		if (op & _RARG) {
 1697              		.loc 1 1186 2 is_stmt 1 view .LVU547
1186:src/keys.c    **** 		if (op & _RARG) {
 1698              		.loc 1 1186 5 is_stmt 0 view .LVU548
 1699 00aa 332D     		cmp	r5, #51
 1700 00ac DCD0     		beq	.L178
 1701              	.LVL127:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1702              		.loc 1 1187 3 is_stmt 1 view .LVU549
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1703              		.loc 1 1187 6 is_stmt 0 view .LVU550
 1704 00ae 2B04     		lsls	r3, r5, #16
 1705 00b0 D4D4     		bmi	.L176
 1706 00b2 EEE7     		b	.L180
 1707              	.LVL128:
 1708              	.L177:
1192:src/keys.c    **** #undef _RARG
 1709              		.loc 1 1192 21 view .LVU551
 1710 00b4 6A04     		lsls	r2, r5, #17
 1711 00b6 D7D4     		bmi	.L178
 1712 00b8 EBE7     		b	.L180
 1713              	.L192:
1178:src/keys.c    **** 			set_pc(0);
 1714              		.loc 1 1178 43 discriminator 2 view .LVU552
 1715 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1716 00be 012B     		cmp	r3, #1
 1717 00c0 C8D1     		bne	.L168
1179:src/keys.c    **** 		break;
 1718              		.loc 1 1179 4 is_stmt 1 view .LVU553
 1719 00c2 FFF7FEFF 		bl	set_pc
 1720              	.LVL129:
 1721 00c6 C5E7     		b	.L168
 1722              	.L197:
 1723              		.align	2
 1724              	.L196:
 1725 00c8 00000000 		.word	.LANCHOR1
 1726 00cc 00000000 		.word	.LANCHOR0
 1727 00d0 00000000 		.word	StateWhileOn
 1728 00d4 00000000 		.word	main_ram
 1729              		.cfi_endproc
 1730              	.LFE21:
 1732              		.section	.text.intltr,"ax",%progbits
 1733              		.align	1
 1734              		.p2align 2,,3
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu fpv4-sp-d16
 1740              	intltr:
 1741              	.LVL130:
 1742              	.LFB18:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
ARM GAS  /tmp/cceyv6gL.s 			page 92


 1743              		.loc 1 761 26 view -0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 762:src/keys.c    **** }
 1747              		.loc 1 762 2 view .LVU555
 762:src/keys.c    **** }
 1748              		.loc 1 762 10 is_stmt 0 view .LVU556
 1749 0000 0B4B     		ldr	r3, .L207
 1750 0002 1B68     		ldr	r3, [r3]
 1751 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1752              		.loc 1 762 22 view .LVU557
 1753 0008 13F00103 		ands	r3, r3, #1
 1754 000c 05D0     		beq	.L200
 762:src/keys.c    **** }
 1755              		.loc 1 762 26 discriminator 1 view .LVU558
 1756 000e 094B     		ldr	r3, .L207+4
 1757 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1758              		.loc 1 762 22 discriminator 1 view .LVU559
 1759 0012 5B06     		lsls	r3, r3, #25
 1760 0014 03D4     		bmi	.L206
 762:src/keys.c    **** }
 1761              		.loc 1 762 22 view .LVU560
 1762 0016 0120     		movs	r0, #1
 1763              	.LVL131:
 763:src/keys.c    **** 
 1764              		.loc 1 763 1 view .LVU561
 1765 0018 7047     		bx	lr
 1766              	.LVL132:
 1767              	.L200:
 762:src/keys.c    **** }
 1768              		.loc 1 762 22 view .LVU562
 1769 001a 1846     		mov	r0, r3
 1770              	.LVL133:
 762:src/keys.c    **** }
 1771              		.loc 1 762 22 view .LVU563
 1772 001c 7047     		bx	lr
 1773              	.LVL134:
 1774              	.L206:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1775              		.loc 1 761 26 view .LVU564
 1776 001e 10B5     		push	{r4, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 1780 0020 0446     		mov	r4, r0
 1781              	.LVL135:
 1782              	.LBB354:
 1783              	.LBI354:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1784              		.loc 1 761 12 is_stmt 1 view .LVU565
 1785              	.LBB355:
 762:src/keys.c    **** }
 1786              		.loc 1 762 52 is_stmt 0 view .LVU566
 1787 0022 FFF7FEFF 		bl	int_base
ARM GAS  /tmp/cceyv6gL.s 			page 93


 1788              	.LVL136:
 762:src/keys.c    **** }
 1789              		.loc 1 762 43 view .LVU567
 1790 0026 8442     		cmp	r4, r0
 1791 0028 ACBF     		ite	ge
 1792 002a 0020     		movge	r0, #0
 1793 002c 0120     		movlt	r0, #1
 1794              	.LBE355:
 1795              	.LBE354:
 763:src/keys.c    **** 
 1796              		.loc 1 763 1 view .LVU568
 1797 002e 10BD     		pop	{r4, pc}
 1798              	.LVL137:
 1799              	.L208:
 763:src/keys.c    **** 
 1800              		.loc 1 763 1 view .LVU569
 1801              		.align	2
 1802              	.L207:
 1803 0030 00000000 		.word	main_ram
 1804 0034 00000000 		.word	StateWhileOn
 1805              		.cfi_endproc
 1806              	.LFE18:
 1808              		.section	.text.process_normal,"ax",%progbits
 1809              		.align	1
 1810              		.p2align 2,,3
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv4-sp-d16
 1816              	process_normal:
 1817              	.LVL138:
 1818              	.LFB19:
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1819              		.loc 1 769 1 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 770:src/keys.c    **** 		// Row 1
 1823              		.loc 1 770 2 view .LVU571
 817:src/keys.c    **** 	int op = op_map[lc];
 1824              		.loc 1 817 2 view .LVU572
 1825              	.LBB356:
 1826              	.LBI356:
 146:src/keys.c    **** {
 1827              		.loc 1 146 12 view .LVU573
 1828              	.LBB357:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1829              		.loc 1 148 2 view .LVU574
 158:src/keys.c    **** }
 1830              		.loc 1 158 2 view .LVU575
 158:src/keys.c    **** }
 1831              		.loc 1 158 2 is_stmt 0 view .LVU576
 1832              	.LBE357:
 1833              	.LBE356:
 818:src/keys.c    **** 	
 1834              		.loc 1 818 2 is_stmt 1 view .LVU577
 823:src/keys.c    **** 	  switch (c) {
ARM GAS  /tmp/cceyv6gL.s 			page 94


 1835              		.loc 1 823 6 is_stmt 0 view .LVU578
 1836 0000 984B     		ldr	r3, .L240
 1837              	.LBB360:
 1838              	.LBB358:
 158:src/keys.c    **** }
 1839              		.loc 1 158 23 view .LVU579
 1840 0002 994A     		ldr	r2, .L240+4
 1841              	.LBE358:
 1842              	.LBE360:
 823:src/keys.c    **** 	  switch (c) {
 1843              		.loc 1 823 6 view .LVU580
 1844 0004 1B68     		ldr	r3, [r3]
 1845              	.LBB361:
 1846              	.LBB359:
 158:src/keys.c    **** }
 1847              		.loc 1 158 23 view .LVU581
 1848 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1849              	.LBE359:
 1850              	.LBE361:
 818:src/keys.c    **** 	
 1851              		.loc 1 818 17 view .LVU582
 1852 0008 984A     		ldr	r2, .L240+8
 823:src/keys.c    **** 	  switch (c) {
 1853              		.loc 1 823 6 view .LVU583
 1854 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1855              		.loc 1 769 1 view .LVU584
 1856 000e 10B5     		push	{r4, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 4, -8
 1859              		.cfi_offset 14, -4
 818:src/keys.c    **** 	
 1860              		.loc 1 818 17 view .LVU585
 1861 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 823:src/keys.c    **** 	  switch (c) {
 1862              		.loc 1 823 5 view .LVU586
 1863 0014 DB07     		lsls	r3, r3, #31
 818:src/keys.c    **** 	
 1864              		.loc 1 818 6 view .LVU587
 1865 0016 2246     		mov	r2, r4
 1866              	.LVL139:
 822:src/keys.c    **** 	if (UState.intm) {
 1867              		.loc 1 822 2 is_stmt 1 view .LVU588
 823:src/keys.c    **** 	  switch (c) {
 1868              		.loc 1 823 2 view .LVU589
 823:src/keys.c    **** 	  switch (c) {
 1869              		.loc 1 823 5 is_stmt 0 view .LVU590
 1870 0018 42D4     		bmi	.L236
 854:src/keys.c    **** 	  }
 1871              		.loc 1 854 12 is_stmt 1 view .LVU591
 859:src/keys.c    **** #ifdef DM42
 1872              		.loc 1 859 2 view .LVU592
 1873 001a 2D28     		cmp	r0, #45
 1874 001c 3ED8     		bhi	.L209
 1875 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1876              	.L228:
 1877 0022 0801     		.2byte	(.L224-.L228)/2
ARM GAS  /tmp/cceyv6gL.s 			page 95


 1878 0024 0E01     		.2byte	(.L225-.L228)/2
 1879 0026 3D00     		.2byte	(.L209-.L228)/2
 1880 0028 CF00     		.2byte	(.L223-.L228)/2
 1881 002a 3D00     		.2byte	(.L209-.L228)/2
 1882 002c 3D00     		.2byte	(.L209-.L228)/2
 1883 002e 3400     		.2byte	(.L218-.L228)/2
 1884 0030 3400     		.2byte	(.L218-.L228)/2
 1885 0032 3D00     		.2byte	(.L209-.L228)/2
 1886 0034 3D00     		.2byte	(.L209-.L228)/2
 1887 0036 3D00     		.2byte	(.L209-.L228)/2
 1888 0038 3D00     		.2byte	(.L209-.L228)/2
 1889 003a 3D00     		.2byte	(.L209-.L228)/2
 1890 003c 3D00     		.2byte	(.L209-.L228)/2
 1891 003e 3D00     		.2byte	(.L209-.L228)/2
 1892 0040 3D00     		.2byte	(.L209-.L228)/2
 1893 0042 E900     		.2byte	(.L222-.L228)/2
 1894 0044 3D00     		.2byte	(.L209-.L228)/2
 1895 0046 3400     		.2byte	(.L218-.L228)/2
 1896 0048 3D00     		.2byte	(.L209-.L228)/2
 1897 004a 3D00     		.2byte	(.L209-.L228)/2
 1898 004c 3D00     		.2byte	(.L209-.L228)/2
 1899 004e 3D00     		.2byte	(.L209-.L228)/2
 1900 0050 3D00     		.2byte	(.L209-.L228)/2
 1901 0052 3D00     		.2byte	(.L209-.L228)/2
 1902 0054 3D00     		.2byte	(.L209-.L228)/2
 1903 0056 3D00     		.2byte	(.L209-.L228)/2
 1904 0058 3D00     		.2byte	(.L209-.L228)/2
 1905 005a 3D00     		.2byte	(.L209-.L228)/2
 1906 005c 3D00     		.2byte	(.L209-.L228)/2
 1907 005e 3D00     		.2byte	(.L209-.L228)/2
 1908 0060 3D00     		.2byte	(.L209-.L228)/2
 1909 0062 3D00     		.2byte	(.L209-.L228)/2
 1910 0064 3D00     		.2byte	(.L209-.L228)/2
 1911 0066 3D00     		.2byte	(.L209-.L228)/2
 1912 0068 3D00     		.2byte	(.L209-.L228)/2
 1913 006a 3D00     		.2byte	(.L209-.L228)/2
 1914 006c 3D00     		.2byte	(.L209-.L228)/2
 1915 006e 3D00     		.2byte	(.L209-.L228)/2
 1916 0070 3D00     		.2byte	(.L209-.L228)/2
 1917 0072 3D00     		.2byte	(.L209-.L228)/2
 1918 0074 3D00     		.2byte	(.L209-.L228)/2
 1919 0076 3D00     		.2byte	(.L209-.L228)/2
 1920 0078 3D00     		.2byte	(.L209-.L228)/2
 1921 007a F400     		.2byte	(.L221-.L228)/2
 1922 007c C700     		.2byte	(.L227-.L228)/2
 1923              		.p2align 1
 1924              	.L212:
 850:src/keys.c    **** 	    if (intltr(15)) {
 1925              		.loc 1 850 6 view .LVU593
 1926              	.LVL140:
 851:src/keys.c    **** 	      return op_int;
 1927              		.loc 1 851 6 view .LVU594
 851:src/keys.c    **** 	      return op_int;
 1928              		.loc 1 851 10 is_stmt 0 view .LVU595
 1929 007e 0F20     		movs	r0, #15
 1930              	.LVL141:
 851:src/keys.c    **** 	      return op_int;
ARM GAS  /tmp/cceyv6gL.s 			page 96


 1931              		.loc 1 851 10 view .LVU596
 1932 0080 FFF7FEFF 		bl	intltr
 1933              	.LVL142:
 851:src/keys.c    **** 	      return op_int;
 1934              		.loc 1 851 9 view .LVU597
 1935 0084 0028     		cmp	r0, #0
 1936 0086 40F0EB80 		bne	.L237
 1937              	.LVL143:
 1938              	.L218:
 925:src/keys.c    **** 		break;
 1939              		.loc 1 925 3 is_stmt 1 view .LVU598
 1940              	.LBB362:
 1941              	.LBI362:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1942              		.loc 1 552 13 view .LVU599
 1943              	.LBB363:
 553:src/keys.c    **** 		return;
 1944              		.loc 1 553 2 view .LVU600
 553:src/keys.c    **** 		return;
 1945              		.loc 1 553 6 is_stmt 0 view .LVU601
 1946 008a FFF7FEFF 		bl	is_bad_cmdline
 1947              	.LVL144:
 553:src/keys.c    **** 		return;
 1948              		.loc 1 553 5 view .LVU602
 1949 008e 0028     		cmp	r0, #0
 1950 0090 40F09380 		bne	.L235
 1951 0094 E0B2     		uxtb	r0, r4
 1952 0096 FFF7FEFF 		bl	init_arg.part.0
 1953              	.LVL145:
 1954              	.LBE363:
 1955              	.LBE362:
 931:src/keys.c    **** }
 1956              		.loc 1 931 9 view .LVU603
 1957 009a 3322     		movs	r2, #51
 1958              	.LVL146:
 1959              	.L209:
 932:src/keys.c    **** 
 1960              		.loc 1 932 1 view .LVU604
 1961 009c 1046     		mov	r0, r2
 1962 009e 10BD     		pop	{r4, pc}
 1963              	.LVL147:
 1964              	.L236:
 824:src/keys.c    **** 	  case K00:
 1965              		.loc 1 824 4 is_stmt 1 view .LVU605
 1966 00a0 1228     		cmp	r0, #18
 1967 00a2 29D8     		bhi	.L211
 1968 00a4 01A3     		adr	r3, .L213
 1969 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1970 00aa 00BF     		.p2align 2
 1971              	.L213:
 1972 00ac E9010000 		.word	.L216+1
 1973 00b0 DB010000 		.word	.L215+1
 1974 00b4 F9000000 		.word	.L211+1
 1975 00b8 CD010000 		.word	.L214+1
 1976 00bc F9000000 		.word	.L211+1
 1977 00c0 F9000000 		.word	.L211+1
 1978 00c4 F9000000 		.word	.L211+1
ARM GAS  /tmp/cceyv6gL.s 			page 97


 1979 00c8 F9000000 		.word	.L211+1
 1980 00cc F9000000 		.word	.L211+1
 1981 00d0 F9000000 		.word	.L211+1
 1982 00d4 F9000000 		.word	.L211+1
 1983 00d8 F9000000 		.word	.L211+1
 1984 00dc F9000000 		.word	.L211+1
 1985 00e0 F9000000 		.word	.L211+1
 1986 00e4 F9000000 		.word	.L211+1
 1987 00e8 F9000000 		.word	.L211+1
 1988 00ec F9000000 		.word	.L211+1
 1989 00f0 F9000000 		.word	.L211+1
 1990 00f4 7F000000 		.word	.L212+1
 1991              		.p2align 1
 1992              	.L211:
 854:src/keys.c    **** 	  }
 1993              		.loc 1 854 12 view .LVU606
 859:src/keys.c    **** #ifdef DM42
 1994              		.loc 1 859 2 view .LVU607
 1995 00f8 C31E     		subs	r3, r0, #3
 1996 00fa 2A2B     		cmp	r3, #42
 1997 00fc CED8     		bhi	.L209
 1998 00fe 01A1     		adr	r1, .L220
 1999 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2000              		.p2align 2
 2001              	.L220:
 2002 0104 C1010000 		.word	.L223+1
 2003 0108 9D000000 		.word	.L209+1
 2004 010c 9D000000 		.word	.L209+1
 2005 0110 8B000000 		.word	.L218+1
 2006 0114 8B000000 		.word	.L218+1
 2007 0118 9D000000 		.word	.L209+1
 2008 011c 9D000000 		.word	.L209+1
 2009 0120 9D000000 		.word	.L209+1
 2010 0124 9D000000 		.word	.L209+1
 2011 0128 9D000000 		.word	.L209+1
 2012 012c 9D000000 		.word	.L209+1
 2013 0130 9D000000 		.word	.L209+1
 2014 0134 9D000000 		.word	.L209+1
 2015 0138 F5010000 		.word	.L222+1
 2016 013c 9D000000 		.word	.L209+1
 2017 0140 8B000000 		.word	.L218+1
 2018 0144 9D000000 		.word	.L209+1
 2019 0148 9D000000 		.word	.L209+1
 2020 014c 9D000000 		.word	.L209+1
 2021 0150 9D000000 		.word	.L209+1
 2022 0154 9D000000 		.word	.L209+1
 2023 0158 9D000000 		.word	.L209+1
 2024 015c 9D000000 		.word	.L209+1
 2025 0160 9D000000 		.word	.L209+1
 2026 0164 9D000000 		.word	.L209+1
 2027 0168 9D000000 		.word	.L209+1
 2028 016c 9D000000 		.word	.L209+1
 2029 0170 9D000000 		.word	.L209+1
 2030 0174 9D000000 		.word	.L209+1
 2031 0178 9D000000 		.word	.L209+1
 2032 017c 9D000000 		.word	.L209+1
 2033 0180 9D000000 		.word	.L209+1
ARM GAS  /tmp/cceyv6gL.s 			page 98


 2034 0184 9D000000 		.word	.L209+1
 2035 0188 9D000000 		.word	.L209+1
 2036 018c 9D000000 		.word	.L209+1
 2037 0190 9D000000 		.word	.L209+1
 2038 0194 9D000000 		.word	.L209+1
 2039 0198 9D000000 		.word	.L209+1
 2040 019c 9D000000 		.word	.L209+1
 2041 01a0 9D000000 		.word	.L209+1
 2042 01a4 9D000000 		.word	.L209+1
 2043 01a8 0B020000 		.word	.L221+1
 2044 01ac BB010000 		.word	.L235+1
 2045              		.p2align 1
 2046              	.L227:
 907:src/keys.c    **** #else
 2047              		.loc 1 907 4 view .LVU608
 907:src/keys.c    **** #else
 2048              		.loc 1 907 17 is_stmt 0 view .LVU609
 2049 01b0 2F4A     		ldr	r2, .L240+12
 2050              	.LVL148:
 907:src/keys.c    **** #else
 2051              		.loc 1 907 17 view .LVU610
 2052 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2053 01b4 43F00203 		orr	r3, r3, #2
 2054 01b8 5375     		strb	r3, [r2, #21]
 2055              	.LVL149:
 2056              	.L235:
 913:src/keys.c    **** 
 2057              		.loc 1 913 4 is_stmt 1 view .LVU611
 931:src/keys.c    **** }
 2058              		.loc 1 931 9 is_stmt 0 view .LVU612
 2059 01ba 3322     		movs	r2, #51
 932:src/keys.c    **** 
 2060              		.loc 1 932 1 view .LVU613
 2061 01bc 1046     		mov	r0, r2
 2062 01be 10BD     		pop	{r4, pc}
 2063              	.LVL150:
 2064              	.L223:
 866:src/keys.c    **** #else
 2065              		.loc 1 866 3 is_stmt 1 view .LVU614
 866:src/keys.c    **** #else
 2066              		.loc 1 866 10 is_stmt 0 view .LVU615
 2067 01c0 2146     		mov	r1, r4
 2068 01c2 0220     		movs	r0, #2
 932:src/keys.c    **** 
 2069              		.loc 1 932 1 view .LVU616
 2070 01c4 BDE81040 		pop	{r4, lr}
 2071              		.cfi_remember_state
 2072              		.cfi_restore 14
 2073              		.cfi_restore 4
 2074              		.cfi_def_cfa_offset 0
 2075              	.LVL151:
 866:src/keys.c    **** #else
 2076              		.loc 1 866 10 view .LVU617
 2077 01c8 FFF7FEBF 		b	check_f_key
 2078              	.LVL152:
 2079              	.L214:
 2080              		.cfi_restore_state
ARM GAS  /tmp/cceyv6gL.s 			page 99


 842:src/keys.c    **** 	    if (intltr(12)) {
 2081              		.loc 1 842 6 is_stmt 1 view .LVU618
 843:src/keys.c    **** 	      return op_int;
 2082              		.loc 1 843 6 view .LVU619
 843:src/keys.c    **** 	      return op_int;
 2083              		.loc 1 843 10 is_stmt 0 view .LVU620
 2084 01cc 0C20     		movs	r0, #12
 2085              	.LVL153:
 843:src/keys.c    **** 	      return op_int;
 2086              		.loc 1 843 10 view .LVU621
 2087 01ce FFF7FEFF 		bl	intltr
 2088              	.LVL154:
 843:src/keys.c    **** 	      return op_int;
 2089              		.loc 1 843 9 view .LVU622
 2090 01d2 0028     		cmp	r0, #0
 2091 01d4 F4D0     		beq	.L223
 844:src/keys.c    **** 	    }
 2092              		.loc 1 844 15 view .LVU623
 2093 01d6 1122     		movs	r2, #17
 2094 01d8 60E7     		b	.L209
 2095              	.LVL155:
 2096              	.L215:
 834:src/keys.c    **** 	    if (intltr(11)) {
 2097              		.loc 1 834 6 is_stmt 1 view .LVU624
 835:src/keys.c    **** 	      return op;
 2098              		.loc 1 835 6 view .LVU625
 835:src/keys.c    **** 	      return op;
 2099              		.loc 1 835 10 is_stmt 0 view .LVU626
 2100 01da 0B20     		movs	r0, #11
 2101              	.LVL156:
 835:src/keys.c    **** 	      return op;
 2102              		.loc 1 835 10 view .LVU627
 2103 01dc FFF7FEFF 		bl	intltr
 2104              	.LVL157:
 835:src/keys.c    **** 	      return op;
 2105              		.loc 1 835 9 view .LVU628
 2106 01e0 0028     		cmp	r0, #0
 2107 01e2 37D0     		beq	.L238
 836:src/keys.c    **** 	    }
 2108              		.loc 1 836 15 view .LVU629
 2109 01e4 1022     		movs	r2, #16
 2110 01e6 59E7     		b	.L209
 2111              	.LVL158:
 2112              	.L216:
 826:src/keys.c    **** 	    if (intltr(10)) {
 2113              		.loc 1 826 6 is_stmt 1 view .LVU630
 827:src/keys.c    **** 	      return op;
 2114              		.loc 1 827 6 view .LVU631
 827:src/keys.c    **** 	      return op;
 2115              		.loc 1 827 10 is_stmt 0 view .LVU632
 2116 01e8 0A20     		movs	r0, #10
 2117              	.LVL159:
 827:src/keys.c    **** 	      return op;
 2118              		.loc 1 827 10 view .LVU633
 2119 01ea FFF7FEFF 		bl	intltr
 2120              	.LVL160:
 827:src/keys.c    **** 	      return op;
ARM GAS  /tmp/cceyv6gL.s 			page 100


 2121              		.loc 1 827 9 view .LVU634
 2122 01ee 60B3     		cbz	r0, .L239
 828:src/keys.c    **** 	    }
 2123              		.loc 1 828 15 view .LVU635
 2124 01f0 0F22     		movs	r2, #15
 2125 01f2 53E7     		b	.L209
 2126              	.LVL161:
 2127              	.L222:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2128              		.loc 1 916 3 is_stmt 1 view .LVU636
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2129              		.loc 1 916 7 is_stmt 0 view .LVU637
 2130 01f4 1E4B     		ldr	r3, .L240+12
 2131 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2132              	.LVL162:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2133              		.loc 1 916 6 view .LVU638
 2134 01f8 9106     		lsls	r1, r2, #26
 2135 01fa DED4     		bmi	.L235
 918:src/keys.c    **** 			return op;
 2136              		.loc 1 918 3 is_stmt 1 view .LVU639
 918:src/keys.c    **** 			return op;
 2137              		.loc 1 918 7 is_stmt 0 view .LVU640
 2138 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 920:src/keys.c    **** 
 2139              		.loc 1 920 10 view .LVU641
 2140 01fe 13F0400F 		tst	r3, #64
 2141 0202 14BF     		ite	ne
 2142 0204 2246     		movne	r2, r4
 2143 0206 3022     		moveq	r2, #48
 2144 0208 48E7     		b	.L209
 2145              	.LVL163:
 2146              	.L221:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 890 3 is_stmt 1 view .LVU642
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 890 7 is_stmt 0 view .LVU643
 2149 020a FFF7FEFF 		bl	is_bad_cmdline
 2150              	.LVL164:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 890 6 view .LVU644
 2152 020e 0028     		cmp	r0, #0
 2153 0210 D3D1     		bne	.L235
 892:src/keys.c    **** 		State2.arrow = 1;
 2154              		.loc 1 892 3 is_stmt 1 view .LVU645
 2155 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2156              	.LVL165:
 893:src/keys.c    **** #ifdef DM42
 2157              		.loc 1 893 3 view .LVU646
 893:src/keys.c    **** #ifdef DM42
 2158              		.loc 1 893 16 is_stmt 0 view .LVU647
 2159 0216 164A     		ldr	r2, .L240+12
 2160 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2161 021a 43F00403 		orr	r3, r3, #4
 2162 021e 5375     		strb	r3, [r2, #21]
 895:src/keys.c    **** 		display_current_menu ();
 2163              		.loc 1 895 3 is_stmt 1 view .LVU648
ARM GAS  /tmp/cceyv6gL.s 			page 101


 2164 0220 0920     		movs	r0, #9
 2165 0222 FFF7FEFF 		bl	set_menu
 2166              	.LVL166:
 896:src/keys.c    **** 		lcd_refresh ();
 2167              		.loc 1 896 3 view .LVU649
 2168 0226 FFF7FEFF 		bl	display_current_menu
 2169              	.LVL167:
 897:src/keys.c    **** #else
 2170              		.loc 1 897 3 view .LVU650
 2171 022a 124B     		ldr	r3, .L240+16
 2172 022c 9847     		blx	r3
 2173              	.LVL168:
 901:src/keys.c    **** 
 2174              		.loc 1 901 3 view .LVU651
 931:src/keys.c    **** }
 2175              		.loc 1 931 9 is_stmt 0 view .LVU652
 2176 022e 3322     		movs	r2, #51
 901:src/keys.c    **** 
 2177              		.loc 1 901 3 view .LVU653
 2178 0230 34E7     		b	.L209
 2179              	.LVL169:
 2180              	.L224:
 862:src/keys.c    **** 	case K01:
 2181              		.loc 1 862 3 is_stmt 1 view .LVU654
 862:src/keys.c    **** 	case K01:
 2182              		.loc 1 862 10 is_stmt 0 view .LVU655
 2183 0232 2146     		mov	r1, r4
 2184 0234 0020     		movs	r0, #0
 2185              	.LVL170:
 932:src/keys.c    **** 
 2186              		.loc 1 932 1 view .LVU656
 2187 0236 BDE81040 		pop	{r4, lr}
 2188              		.cfi_remember_state
 2189              		.cfi_restore 14
 2190              		.cfi_restore 4
 2191              		.cfi_def_cfa_offset 0
 862:src/keys.c    **** 	case K01:
 2192              		.loc 1 862 10 view .LVU657
 2193 023a FFF7FEBF 		b	check_f_key
 2194              	.LVL171:
 2195              	.L225:
 2196              		.cfi_restore_state
 864:src/keys.c    **** 	case K03:
 2197              		.loc 1 864 3 is_stmt 1 view .LVU658
 864:src/keys.c    **** 	case K03:
 2198              		.loc 1 864 10 is_stmt 0 view .LVU659
 2199 023e 2146     		mov	r1, r4
 2200 0240 0120     		movs	r0, #1
 2201              	.LVL172:
 932:src/keys.c    **** 
 2202              		.loc 1 932 1 view .LVU660
 2203 0242 BDE81040 		pop	{r4, lr}
 2204              		.cfi_remember_state
 2205              		.cfi_restore 14
 2206              		.cfi_restore 4
 2207              		.cfi_def_cfa_offset 0
 864:src/keys.c    **** 	case K03:
ARM GAS  /tmp/cceyv6gL.s 			page 102


 2208              		.loc 1 864 10 view .LVU661
 2209 0246 FFF7FEBF 		b	check_f_key
 2210              	.LVL173:
 2211              	.L239:
 2212              		.cfi_restore_state
 831:src/keys.c    **** 	    }
 2213              		.loc 1 831 8 is_stmt 1 view .LVU662
 932:src/keys.c    **** 
 2214              		.loc 1 932 1 is_stmt 0 view .LVU663
 2215 024a BDE81040 		pop	{r4, lr}
 2216              		.cfi_remember_state
 2217              		.cfi_restore 14
 2218              		.cfi_restore 4
 2219              		.cfi_def_cfa_offset 0
 831:src/keys.c    **** 	    }
 2220              		.loc 1 831 15 view .LVU664
 2221 024e 0F21     		movs	r1, #15
 2222 0250 FFF7FEBF 		b	check_f_key
 2223              	.LVL174:
 2224              	.L238:
 2225              		.cfi_restore_state
 839:src/keys.c    **** 	    }
 2226              		.loc 1 839 8 is_stmt 1 view .LVU665
 932:src/keys.c    **** 
 2227              		.loc 1 932 1 is_stmt 0 view .LVU666
 2228 0254 BDE81040 		pop	{r4, lr}
 2229              		.cfi_remember_state
 2230              		.cfi_restore 14
 2231              		.cfi_restore 4
 2232              		.cfi_def_cfa_offset 0
 839:src/keys.c    **** 	    }
 2233              		.loc 1 839 15 view .LVU667
 2234 0258 1021     		movs	r1, #16
 2235 025a 0120     		movs	r0, #1
 2236 025c FFF7FEBF 		b	check_f_key
 2237              	.LVL175:
 2238              	.L237:
 2239              		.cfi_restore_state
 852:src/keys.c    **** 	    }
 2240              		.loc 1 852 15 view .LVU668
 2241 0260 1422     		movs	r2, #20
 2242 0262 1BE7     		b	.L209
 2243              	.L241:
 2244              		.align	2
 2245              	.L240:
 2246 0264 00000000 		.word	main_ram
 2247 0268 00000000 		.word	.LANCHOR1
 2248 026c 00000000 		.word	.LANCHOR2
 2249 0270 00000000 		.word	StateWhileOn
 2250 0274 31020008 		.word	134218289
 2251              		.cfi_endproc
 2252              	.LFE19:
 2254              		.section	.text.process_fg_shifted,"ax",%progbits
 2255              		.align	1
 2256              		.p2align 2,,3
 2257              		.syntax unified
 2258              		.thumb
ARM GAS  /tmp/cceyv6gL.s 			page 103


 2259              		.thumb_func
 2260              		.fpu fpv4-sp-d16
 2262              	process_fg_shifted:
 2263              	.LVL176:
 2264              	.LFB20:
 938:src/keys.c    **** 
 2265              		.loc 1 938 48 is_stmt 1 view -0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 941:src/keys.c    **** 		// Row 1
 2269              		.loc 1 941 2 view .LVU670
 992:src/keys.c    **** 		STATE_UNFINISHED,
 2270              		.loc 1 992 2 view .LVU671
 999:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2271              		.loc 1 999 2 view .LVU672
 2272              	.LBB364:
 2273              	.LBI364:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2274              		.loc 1 114 13 view .LVU673
 2275              	.LBE364:
 115:src/keys.c    **** }
 2276              		.loc 1 115 2 view .LVU674
 2277              	.LBB381:
 2278              	.LBB365:
 2279              	.LBI365:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2280              		.loc 1 104 20 view .LVU675
 2281              	.LBB366:
 105:src/keys.c    **** 	State2.shifts = shift;
 2282              		.loc 1 105 2 view .LVU676
 2283              	.LBB367:
 2284              	.LBI367:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2285              		.loc 1 96 13 view .LVU677
 2286              	.LBB368:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2287              		.loc 1 97 2 view .LVU678
 2288              	.LBE368:
 2289              	.LBE367:
 2290              	.LBE366:
 2291              	.LBE365:
 2292              	.LBE381:
 938:src/keys.c    **** 
 2293              		.loc 1 938 48 is_stmt 0 view .LVU679
 2294 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2295              		.cfi_def_cfa_offset 24
 2296              		.cfi_offset 4, -24
 2297              		.cfi_offset 5, -20
 2298              		.cfi_offset 6, -16
 2299              		.cfi_offset 7, -12
 2300              		.cfi_offset 8, -8
 2301              		.cfi_offset 14, -4
 938:src/keys.c    **** 
 2302              		.loc 1 938 48 view .LVU680
 2303 0004 0446     		mov	r4, r0
 2304              	.LBB382:
ARM GAS  /tmp/cceyv6gL.s 			page 104


 2305              	.LBB377:
 2306              	.LBB373:
 2307              	.LBB371:
 2308              	.LBB369:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2309              		.loc 1 97 18 view .LVU681
 2310 0006 FFF7FEFF 		bl	shift_down
 2311              	.LVL177:
  98:src/keys.c    **** }
 2312              		.loc 1 98 2 is_stmt 1 view .LVU682
  98:src/keys.c    **** }
 2313              		.loc 1 98 52 is_stmt 0 view .LVU683
 2314 000a 0028     		cmp	r0, #0
 2315 000c 72D0     		beq	.L289
 2316 000e DFF89482 		ldr	r8, .L303+16
 2317 0012 0546     		mov	r5, r0
 2318              	.L243:
 2319              	.LVL178:
  98:src/keys.c    **** }
 2320              		.loc 1 98 52 view .LVU684
 2321              	.LBE369:
 2322              	.LBE371:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2323              		.loc 1 106 2 is_stmt 1 view .LVU685
 2324              	.LBE373:
 2325              	.LBE377:
 2326              	.LBE382:
 2327              	.LBB383:
 2328              	.LBB384:
 158:src/keys.c    **** }
 2329              		.loc 1 158 23 is_stmt 0 view .LVU686
 2330 0014 9F4B     		ldr	r3, .L303
 2331              	.LBE384:
 2332              	.LBE383:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2333              		.loc 1 1001 21 view .LVU687
 2334 0016 A049     		ldr	r1, .L303+4
 2335              	.LBB387:
 2336              	.LBB385:
 158:src/keys.c    **** }
 2337              		.loc 1 158 23 view .LVU688
 2338 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2339              	.LBE385:
 2340              	.LBE387:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2341              		.loc 1 1001 21 view .LVU689
 2342 001a 4300     		lsls	r3, r0, #1
 2343 001c 022D     		cmp	r5, #2
 2344 001e 08BF     		it	eq
 2345 0020 0133     		addeq	r3, r3, #1
 2346              	.LBB388:
 2347              	.LBB378:
 2348              	.LBB374:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2349              		.loc 1 106 16 view .LVU690
 2350 0022 0022     		movs	r2, #0
 2351              	.LBE374:
ARM GAS  /tmp/cceyv6gL.s 			page 105


 2352              	.LBE378:
 2353              	.LBE388:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2354              		.loc 1 1001 21 view .LVU691
 2355 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2356              	.LBB389:
 2357              	.LBB379:
 2358              	.LBB375:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2359              		.loc 1 106 16 view .LVU692
 2360 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2361              		.loc 1 108 2 is_stmt 1 view .LVU693
 2362              	.LVL179:
 108:src/keys.c    **** }
 2363              		.loc 1 108 2 is_stmt 0 view .LVU694
 2364              	.LBE375:
 2365              	.LBE379:
 2366              	.LBE389:
1000:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2367              		.loc 1 1000 2 is_stmt 1 view .LVU695
 2368              	.LBB390:
 2369              	.LBI383:
 146:src/keys.c    **** {
 2370              		.loc 1 146 12 view .LVU696
 2371              	.LBB386:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2372              		.loc 1 148 2 view .LVU697
 158:src/keys.c    **** }
 2373              		.loc 1 158 2 view .LVU698
 158:src/keys.c    **** }
 2374              		.loc 1 158 2 is_stmt 0 view .LVU699
 2375              	.LBE386:
 2376              	.LBE390:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2377              		.loc 1 1001 2 is_stmt 1 view .LVU700
1002:src/keys.c    **** 	if (no_int)
 2378              		.loc 1 1002 2 view .LVU701
 2379 002c 06F47047 		and	r7, r6, #61440
 2380              	.LVL180:
1003:src/keys.c    **** 		op &= ~NO_INT;
 2381              		.loc 1 1003 2 view .LVU702
1003:src/keys.c    **** 		op &= ~NO_INT;
 2382              		.loc 1 1003 5 is_stmt 0 view .LVU703
 2383 0030 B7F5704F 		cmp	r7, #61440
 2384 0034 63D0     		beq	.L297
1006:src/keys.c    **** 	case K00:
 2385              		.loc 1 1006 2 is_stmt 1 view .LVU704
 2386 0036 282C     		cmp	r4, #40
 2387 0038 34D8     		bhi	.L264
 2388 003a DFE804F0 		tbb	[pc, r4]
 2389              	.L265:
 2390 003e D3       		.byte	(.L255-.L265)/2
 2391 003f 39       		.byte	(.L253-.L265)/2
 2392 0040 33       		.byte	(.L264-.L265)/2
 2393 0041 39       		.byte	(.L253-.L265)/2
 2394 0042 33       		.byte	(.L264-.L265)/2
ARM GAS  /tmp/cceyv6gL.s 			page 106


 2395 0043 33       		.byte	(.L264-.L265)/2
 2396 0044 33       		.byte	(.L264-.L265)/2
 2397 0045 33       		.byte	(.L264-.L265)/2
 2398 0046 33       		.byte	(.L264-.L265)/2
 2399 0047 33       		.byte	(.L264-.L265)/2
 2400 0048 33       		.byte	(.L264-.L265)/2
 2401 0049 33       		.byte	(.L264-.L265)/2
 2402 004a 15       		.byte	(.L252-.L265)/2
 2403 004b 33       		.byte	(.L264-.L265)/2
 2404 004c 33       		.byte	(.L264-.L265)/2
 2405 004d 33       		.byte	(.L264-.L265)/2
 2406 004e 33       		.byte	(.L264-.L265)/2
 2407 004f 33       		.byte	(.L264-.L265)/2
 2408 0050 E0       		.byte	(.L251-.L265)/2
 2409 0051 B9       		.byte	(.L250-.L265)/2
 2410 0052 33       		.byte	(.L264-.L265)/2
 2411 0053 33       		.byte	(.L264-.L265)/2
 2412 0054 33       		.byte	(.L264-.L265)/2
 2413 0055 33       		.byte	(.L264-.L265)/2
 2414 0056 33       		.byte	(.L264-.L265)/2
 2415 0057 33       		.byte	(.L264-.L265)/2
 2416 0058 33       		.byte	(.L264-.L265)/2
 2417 0059 33       		.byte	(.L264-.L265)/2
 2418 005a 33       		.byte	(.L264-.L265)/2
 2419 005b 33       		.byte	(.L264-.L265)/2
 2420 005c 44       		.byte	(.L249-.L265)/2
 2421 005d CB       		.byte	(.L248-.L265)/2
 2422 005e 49       		.byte	(.L246-.L265)/2
 2423 005f 49       		.byte	(.L246-.L265)/2
 2424 0060 33       		.byte	(.L264-.L265)/2
 2425 0061 33       		.byte	(.L264-.L265)/2
 2426 0062 33       		.byte	(.L264-.L265)/2
 2427 0063 33       		.byte	(.L264-.L265)/2
 2428 0064 33       		.byte	(.L264-.L265)/2
 2429 0065 49       		.byte	(.L246-.L265)/2
 2430 0066 49       		.byte	(.L246-.L265)/2
 2431 0067 00       		.p2align 1
 2432              	.L252:
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2433              		.loc 1 1039 3 view .LVU705
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2434              		.loc 1 1039 6 is_stmt 0 view .LVU706
 2435 0068 012D     		cmp	r5, #1
 2436 006a 11D1     		bne	.L258
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2437              		.loc 1 1040 4 is_stmt 1 view .LVU707
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2438              		.loc 1 1040 8 is_stmt 0 view .LVU708
 2439 006c FFF7FEFF 		bl	is_bad_cmdline
 2440              	.LVL181:
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2441              		.loc 1 1040 7 view .LVU709
 2442 0070 0028     		cmp	r0, #0
 2443 0072 40F0B380 		bne	.L291
1042:src/keys.c    **** 			State2.alphas = 1;
 2444              		.loc 1 1042 4 is_stmt 1 view .LVU710
 2445 0076 FFF7FEFF 		bl	process_cmdline_set_lift
ARM GAS  /tmp/cceyv6gL.s 			page 107


 2446              	.LVL182:
1043:src/keys.c    **** #ifdef DM42
 2447              		.loc 1 1043 4 view .LVU711
1043:src/keys.c    **** #ifdef DM42
 2448              		.loc 1 1043 18 is_stmt 0 view .LVU712
 2449 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1045:src/keys.c    **** 			display_current_menu();
 2450              		.loc 1 1045 4 view .LVU713
 2451 007e 1020     		movs	r0, #16
1043:src/keys.c    **** #ifdef DM42
 2452              		.loc 1 1043 18 view .LVU714
 2453 0080 43F00803 		orr	r3, r3, #8
 2454 0084 88F81630 		strb	r3, [r8, #22]
1045:src/keys.c    **** 			display_current_menu();
 2455              		.loc 1 1045 4 is_stmt 1 view .LVU715
 2456 0088 FFF7FEFF 		bl	set_menu
 2457              	.LVL183:
1046:src/keys.c    **** #endif
 2458              		.loc 1 1046 4 view .LVU716
 2459 008c FFF7FEFF 		bl	display_current_menu
 2460              	.LVL184:
 2461              	.L258:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2462              		.loc 1 1091 2 view .LVU717
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2463              		.loc 1 1091 5 is_stmt 0 view .LVU718
 2464 0090 B7F5704F 		cmp	r7, #61440
 2465 0094 06D1     		bne	.L264
 2466              	.L245:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2467              		.loc 1 1091 13 discriminator 1 view .LVU719
 2468 0096 814B     		ldr	r3, .L303+8
 2469 0098 1B68     		ldr	r3, [r3]
 2470 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2471 009e DA07     		lsls	r2, r3, #31
 2472 00a0 00F19C80 		bmi	.L291
 2473              	.L264:
1094:src/keys.c    **** #undef NO_INT
 2474              		.loc 1 1094 2 is_stmt 1 view .LVU720
 2475              	.LVL185:
 2476              	.LBB391:
 2477              	.LBI391:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2478              		.loc 1 714 12 view .LVU721
 2479              	.LBB392:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2480              		.loc 1 715 2 view .LVU722
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2481              		.loc 1 715 6 is_stmt 0 view .LVU723
 2482 00a4 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2483              		.loc 1 715 5 view .LVU724
 2484 00a6 012B     		cmp	r3, #1
 2485 00a8 1FD0     		beq	.L267
 2486              	.LVL186:
 2487              	.L242:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/cceyv6gL.s 			page 108


 2488              		.loc 1 715 5 view .LVU725
 2489              	.LBE392:
 2490              	.LBE391:
1096:src/keys.c    **** 
 2491              		.loc 1 1096 1 view .LVU726
 2492 00aa 3046     		mov	r0, r6
 2493 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2494              	.LVL187:
 2495              	.L253:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2496              		.loc 1 1028 4 is_stmt 1 view .LVU727
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2497              		.loc 1 1028 8 is_stmt 0 view .LVU728
 2498 00b0 7A4B     		ldr	r3, .L303+8
 2499 00b2 1B68     		ldr	r3, [r3]
 2500 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2501              		.loc 1 1028 7 view .LVU729
 2502 00b8 DB07     		lsls	r3, r3, #31
 2503 00ba 00F19980 		bmi	.L294
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2504              		.loc 1 1091 2 is_stmt 1 view .LVU730
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2505              		.loc 1 1091 5 is_stmt 0 view .LVU731
 2506 00be B7F5704F 		cmp	r7, #61440
 2507 00c2 EFD1     		bne	.L264
 2508 00c4 E7E7     		b	.L245
 2509              	.L249:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2510              		.loc 1 1071 3 is_stmt 1 view .LVU732
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2511              		.loc 1 1071 18 is_stmt 0 view .LVU733
 2512 00c6 FFF7FEFF 		bl	shift_down
 2513              	.LVL188:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2514              		.loc 1 1071 6 view .LVU734
 2515 00ca 0028     		cmp	r0, #0
 2516 00cc 40F0BA80 		bne	.L298
 2517              	.L246:
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2518              		.loc 1 1080 3 is_stmt 1 view .LVU735
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2519              		.loc 1 1080 6 is_stmt 0 view .LVU736
 2520 00d0 B6F59C7F 		cmp	r6, #312
 2521 00d4 40F0A580 		bne	.L299
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2522              		.loc 1 1091 2 is_stmt 1 view .LVU737
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2523              		.loc 1 1091 5 is_stmt 0 view .LVU738
 2524 00d8 B7F5704F 		cmp	r7, #61440
 2525 00dc 05D1     		bne	.L267
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2526              		.loc 1 1091 13 view .LVU739
 2527 00de 6F4B     		ldr	r3, .L303+8
 2528 00e0 1B68     		ldr	r3, [r3]
 2529 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2530 00e6 DB07     		lsls	r3, r3, #31
ARM GAS  /tmp/cceyv6gL.s 			page 109


 2531 00e8 78D4     		bmi	.L291
 2532              	.LVL189:
 2533              	.L267:
 2534              	.LBB395:
 2535              	.LBB393:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2536              		.loc 1 1091 13 view .LVU740
 2537 00ea 3046     		mov	r0, r6
 2538              	.LBE393:
 2539              	.LBE395:
1096:src/keys.c    **** 
 2540              		.loc 1 1096 1 view .LVU741
 2541 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2542              		.cfi_remember_state
 2543              		.cfi_restore 14
 2544              		.cfi_restore 8
 2545              		.cfi_restore 7
 2546              		.cfi_restore 6
 2547              		.cfi_restore 5
 2548              		.cfi_restore 4
 2549              		.cfi_def_cfa_offset 0
 2550              	.LVL190:
 2551              	.LBB396:
 2552              	.LBB394:
1096:src/keys.c    **** 
 2553              		.loc 1 1096 1 view .LVU742
 2554 00f0 FFF7FEBF 		b	check_confirm.part.0
 2555              	.LVL191:
 2556              	.L289:
 2557              		.cfi_restore_state
1096:src/keys.c    **** 
 2558              		.loc 1 1096 1 view .LVU743
 2559              	.LBE394:
 2560              	.LBE396:
 2561              	.LBB397:
 2562              	.LBB380:
 2563              	.LBB376:
 2564              	.LBB372:
 2565              	.LBB370:
  98:src/keys.c    **** }
 2566              		.loc 1 98 52 view .LVU744
 2567 00f4 DFF8AC81 		ldr	r8, .L303+16
 2568 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2569 00fc 8AE7     		b	.L243
 2570              	.LVL192:
 2571              	.L297:
  98:src/keys.c    **** }
 2572              		.loc 1 98 52 view .LVU745
 2573              	.LBE370:
 2574              	.LBE372:
 2575              	.LBE376:
 2576              	.LBE380:
 2577              	.LBE397:
1004:src/keys.c    **** 
 2578              		.loc 1 1004 3 is_stmt 1 view .LVU746
1004:src/keys.c    **** 
 2579              		.loc 1 1004 6 is_stmt 0 view .LVU747
ARM GAS  /tmp/cceyv6gL.s 			page 110


 2580 00fe 26F47046 		bic	r6, r6, #61440
 2581              	.LVL193:
1006:src/keys.c    **** 	case K00:
 2582              		.loc 1 1006 2 is_stmt 1 view .LVU748
 2583 0102 282C     		cmp	r4, #40
 2584 0104 C7D8     		bhi	.L245
 2585 0106 01A3     		adr	r3, .L247
 2586 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2587              		.p2align 2
 2588              	.L247:
 2589 010c E5010000 		.word	.L255+1
 2590 0110 B1000000 		.word	.L253+1
 2591 0114 97000000 		.word	.L245+1
 2592 0118 B1000000 		.word	.L253+1
 2593 011c 97000000 		.word	.L245+1
 2594 0120 97000000 		.word	.L245+1
 2595 0124 97000000 		.word	.L245+1
 2596 0128 97000000 		.word	.L245+1
 2597 012c 97000000 		.word	.L245+1
 2598 0130 97000000 		.word	.L245+1
 2599 0134 97000000 		.word	.L245+1
 2600 0138 97000000 		.word	.L245+1
 2601 013c 69000000 		.word	.L252+1
 2602 0140 97000000 		.word	.L245+1
 2603 0144 97000000 		.word	.L245+1
 2604 0148 97000000 		.word	.L245+1
 2605 014c 97000000 		.word	.L245+1
 2606 0150 97000000 		.word	.L245+1
 2607 0154 FF010000 		.word	.L251+1
 2608 0158 B1010000 		.word	.L250+1
 2609 015c 97000000 		.word	.L245+1
 2610 0160 97000000 		.word	.L245+1
 2611 0164 97000000 		.word	.L245+1
 2612 0168 97000000 		.word	.L245+1
 2613 016c 97000000 		.word	.L245+1
 2614 0170 97000000 		.word	.L245+1
 2615 0174 97000000 		.word	.L245+1
 2616 0178 97000000 		.word	.L245+1
 2617 017c 97000000 		.word	.L245+1
 2618 0180 97000000 		.word	.L245+1
 2619 0184 C7000000 		.word	.L249+1
 2620 0188 D5010000 		.word	.L248+1
 2621 018c D1000000 		.word	.L246+1
 2622 0190 D1000000 		.word	.L246+1
 2623 0194 97000000 		.word	.L245+1
 2624 0198 97000000 		.word	.L245+1
 2625 019c 97000000 		.word	.L245+1
 2626 01a0 97000000 		.word	.L245+1
 2627 01a4 97000000 		.word	.L245+1
 2628 01a8 D1000000 		.word	.L246+1
 2629 01ac D1000000 		.word	.L246+1
 2630              		.p2align 1
 2631              	.L250:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2632              		.loc 1 1052 4 view .LVU749
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2633              		.loc 1 1052 7 is_stmt 0 view .LVU750
ARM GAS  /tmp/cceyv6gL.s 			page 111


 2634 01b0 022D     		cmp	r5, #2
 2635 01b2 7FF46DAF 		bne	.L258
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2636              		.loc 1 1052 27 discriminator 1 view .LVU751
 2637 01b6 394B     		ldr	r3, .L303+8
 2638 01b8 1B68     		ldr	r3, [r3]
 2639 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2640 01be DC07     		lsls	r4, r3, #31
 2641 01c0 7FF566AF 		bpl	.L258
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2642              		.loc 1 1052 45 discriminator 2 view .LVU752
 2643 01c4 0D20     		movs	r0, #13
 2644              	.LVL194:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2645              		.loc 1 1052 45 discriminator 2 view .LVU753
 2646 01c6 FFF7FEFF 		bl	intltr
 2647              	.LVL195:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2648              		.loc 1 1052 42 discriminator 2 view .LVU754
 2649 01ca 0028     		cmp	r0, #0
 2650 01cc 3FF460AF 		beq	.L258
1053:src/keys.c    **** 	  }
 2651              		.loc 1 1053 13 view .LVU755
 2652 01d0 1226     		movs	r6, #18
 2653              	.LVL196:
1053:src/keys.c    **** 	  }
 2654              		.loc 1 1053 13 view .LVU756
 2655 01d2 6AE7     		b	.L242
 2656              	.LVL197:
 2657              	.L248:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2658              		.loc 1 1063 3 is_stmt 1 view .LVU757
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2659              		.loc 1 1063 7 is_stmt 0 view .LVU758
 2660 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2661              	.LVL198:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2662              		.loc 1 1063 6 view .LVU759
 2663 01d8 0028     		cmp	r0, #0
 2664 01da 40D0     		beq	.L300
 2665              	.LVL199:
 2666              	.L291:
1084:src/keys.c    **** 		}
 2667              		.loc 1 1084 11 view .LVU760
 2668 01dc 3326     		movs	r6, #51
 2669              	.LVL200:
1096:src/keys.c    **** 
 2670              		.loc 1 1096 1 view .LVU761
 2671 01de 3046     		mov	r0, r6
 2672 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2673              	.LVL201:
 2674              	.L255:
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2675              		.loc 1 1008 4 is_stmt 1 view .LVU762
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2676              		.loc 1 1008 8 is_stmt 0 view .LVU763
 2677 01e4 2D4B     		ldr	r3, .L303+8
ARM GAS  /tmp/cceyv6gL.s 			page 112


 2678 01e6 1B68     		ldr	r3, [r3]
 2679 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2680              		.loc 1 1008 7 view .LVU764
 2681 01ec DA07     		lsls	r2, r3, #31
 2682 01ee 3CD5     		bpl	.L301
 2683              	.L294:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2684              		.loc 1 1028 20 discriminator 1 view .LVU765
 2685 01f0 012D     		cmp	r5, #1
 2686 01f2 48D0     		beq	.L302
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2687              		.loc 1 1091 2 is_stmt 1 view .LVU766
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2688              		.loc 1 1091 5 is_stmt 0 view .LVU767
 2689 01f4 B7F5704F 		cmp	r7, #61440
 2690 01f8 7FF454AF 		bne	.L264
 2691 01fc EEE7     		b	.L291
 2692              	.L251:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2693              		.loc 1 1057 4 is_stmt 1 view .LVU768
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2694              		.loc 1 1057 7 is_stmt 0 view .LVU769
 2695 01fe 022D     		cmp	r5, #2
 2696 0200 7FF446AF 		bne	.L258
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2697              		.loc 1 1057 27 discriminator 1 view .LVU770
 2698 0204 254B     		ldr	r3, .L303+8
 2699 0206 1B68     		ldr	r3, [r3]
 2700 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2701 020c D807     		lsls	r0, r3, #31
 2702              	.LVL202:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2703              		.loc 1 1057 27 discriminator 1 view .LVU771
 2704 020e 7FF53FAF 		bpl	.L258
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2705              		.loc 1 1057 45 discriminator 2 view .LVU772
 2706 0212 0E20     		movs	r0, #14
 2707 0214 FFF7FEFF 		bl	intltr
 2708              	.LVL203:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2709              		.loc 1 1057 42 discriminator 2 view .LVU773
 2710 0218 0028     		cmp	r0, #0
 2711 021a 3FF439AF 		beq	.L258
1058:src/keys.c    **** 	  }
 2712              		.loc 1 1058 13 view .LVU774
 2713 021e 1326     		movs	r6, #19
 2714              	.LVL204:
1058:src/keys.c    **** 	  }
 2715              		.loc 1 1058 13 view .LVU775
 2716 0220 43E7     		b	.L242
 2717              	.LVL205:
 2718              	.L299:
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2719              		.loc 1 1081 4 is_stmt 1 view .LVU776
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2720              		.loc 1 1081 7 is_stmt 0 view .LVU777
ARM GAS  /tmp/cceyv6gL.s 			page 113


 2721 0222 B7F5704F 		cmp	r7, #61440
 2722 0226 05D1     		bne	.L263
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2723              		.loc 1 1081 18 discriminator 1 view .LVU778
 2724 0228 1C4B     		ldr	r3, .L303+8
 2725 022a 1B68     		ldr	r3, [r3]
 2726 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2727              		.loc 1 1081 8 discriminator 1 view .LVU779
 2728 0230 D907     		lsls	r1, r3, #31
 2729 0232 D3D4     		bmi	.L291
 2730              	.L263:
1082:src/keys.c    **** 			}
 2731              		.loc 1 1082 5 is_stmt 1 view .LVU780
 2732              	.LVL206:
 2733              	.LBB398:
 2734              	.LBI398:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2735              		.loc 1 552 13 view .LVU781
 2736              	.LBB399:
 553:src/keys.c    **** 		return;
 2737              		.loc 1 553 2 view .LVU782
 553:src/keys.c    **** 		return;
 2738              		.loc 1 553 6 is_stmt 0 view .LVU783
 2739 0234 FFF7FEFF 		bl	is_bad_cmdline
 2740              	.LVL207:
 553:src/keys.c    **** 		return;
 2741              		.loc 1 553 5 view .LVU784
 2742 0238 0028     		cmp	r0, #0
 2743 023a CFD1     		bne	.L291
 2744 023c F0B2     		uxtb	r0, r6
 2745 023e FFF7FEFF 		bl	init_arg.part.0
 2746              	.LVL208:
 2747 0242 CBE7     		b	.L291
 2748              	.LVL209:
 2749              	.L298:
 553:src/keys.c    **** 		return;
 2750              		.loc 1 553 5 view .LVU785
 2751              	.LBE399:
 2752              	.LBE398:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2753              		.loc 1 1072 4 is_stmt 1 view .LVU786
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2754              		.loc 1 1072 26 is_stmt 0 view .LVU787
 2755 0244 A5F10105 		sub	r5, #1
 2756              	.LVL210:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2757              		.loc 1 1072 17 view .LVU788
 2758 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2759              		.loc 1 1072 26 view .LVU789
 2760 024c B5FA85F5 		clz	r5, r5
 2761 0250 6D09     		lsrs	r5, r5, #5
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2762              		.loc 1 1072 17 view .LVU790
 2763 0252 65F3C713 		bfi	r3, r5, #7, #1
 2764 0256 88F81730 		strb	r3, [r8, #23]
ARM GAS  /tmp/cceyv6gL.s 			page 114


1073:src/keys.c    **** 		}
 2765              		.loc 1 1073 4 is_stmt 1 view .LVU791
1073:src/keys.c    **** 		}
 2766              		.loc 1 1073 11 is_stmt 0 view .LVU792
 2767 025a 3326     		movs	r6, #51
 2768              	.LVL211:
1073:src/keys.c    **** 		}
 2769              		.loc 1 1073 11 view .LVU793
 2770 025c 25E7     		b	.L242
 2771              	.LVL212:
 2772              	.L300:
1065:src/keys.c    **** 		State2.test = op;
 2773              		.loc 1 1065 3 is_stmt 1 view .LVU794
 2774 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2775              	.LVL213:
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2776              		.loc 1 1066 3 view .LVU795
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2777              		.loc 1 1066 15 is_stmt 0 view .LVU796
 2778 0262 88F80F60 		strb	r6, [r8, #15]
1067:src/keys.c    **** 
 2779              		.loc 1 1067 3 is_stmt 1 view .LVU797
1067:src/keys.c    **** 
 2780              		.loc 1 1067 10 is_stmt 0 view .LVU798
 2781 0266 3326     		movs	r6, #51
 2782              	.LVL214:
1067:src/keys.c    **** 
 2783              		.loc 1 1067 10 view .LVU799
 2784 0268 1FE7     		b	.L242
 2785              	.LVL215:
 2786              	.L301:
1010:src/keys.c    **** 	    State2.dot = op;
 2787              		.loc 1 1010 6 is_stmt 1 view .LVU800
1011:src/keys.c    **** 	    // State2.cmplx = 0;
 2788              		.loc 1 1011 6 view .LVU801
1010:src/keys.c    **** 	    State2.dot = op;
 2789              		.loc 1 1010 17 is_stmt 0 view .LVU802
 2790 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2791 026e 06F00103 		and	r3, r6, #1
 2792 0272 9B01     		lsls	r3, r3, #6
 2793 0274 43F02003 		orr	r3, r3, #32
 2794 0278 22F06002 		bic	r2, r2, #96
 2795 027c 1343     		orrs	r3, r3, r2
 2796 027e 88F81530 		strb	r3, [r8, #21]
1013:src/keys.c    **** 	  }
 2797              		.loc 1 1013 6 is_stmt 1 view .LVU803
1013:src/keys.c    **** 	  }
 2798              		.loc 1 1013 13 is_stmt 0 view .LVU804
 2799 0282 3326     		movs	r6, #51
 2800              	.LVL216:
1013:src/keys.c    **** 	  }
 2801              		.loc 1 1013 13 view .LVU805
 2802 0284 11E7     		b	.L242
 2803              	.LVL217:
 2804              	.L302:
1029:src/keys.c    **** 		}
 2805              		.loc 1 1029 4 is_stmt 1 view .LVU806
ARM GAS  /tmp/cceyv6gL.s 			page 115


1029:src/keys.c    **** 		}
 2806              		.loc 1 1029 34 is_stmt 0 view .LVU807
 2807 0286 064B     		ldr	r3, .L303+12
1096:src/keys.c    **** 
 2808              		.loc 1 1096 1 view .LVU808
 2809 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2810              		.cfi_restore 14
 2811              		.cfi_restore 8
 2812              		.cfi_restore 7
 2813              		.cfi_restore 6
 2814              		.cfi_restore 5
 2815              		.cfi_restore 4
 2816              		.cfi_def_cfa_offset 0
 2817              	.LVL218:
1029:src/keys.c    **** 		}
 2818              		.loc 1 1029 11 view .LVU809
 2819 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2820 0290 FFF7FEBF 		b	check_f_key
 2821              	.LVL219:
 2822              	.L304:
1029:src/keys.c    **** 		}
 2823              		.loc 1 1029 11 view .LVU810
 2824              		.align	2
 2825              	.L303:
 2826 0294 00000000 		.word	.LANCHOR1
 2827 0298 00000000 		.word	.LANCHOR3
 2828 029c 00000000 		.word	main_ram
 2829 02a0 00000000 		.word	.LANCHOR4
 2830 02a4 00000000 		.word	StateWhileOn
 2831              		.cfi_endproc
 2832              	.LFE20:
 2834              		.section	.text.set_window,"ax",%progbits
 2835              		.align	1
 2836              		.p2align 2,,3
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2840              		.fpu fpv4-sp-d16
 2842              	set_window:
 2843              	.LVL220:
 2844              	.LFB58:
2988:src/keys.c    **** 
2989:src/keys.c    **** 
2990:src/keys.c    **** /*
2991:src/keys.c    ****  *  CAT command
2992:src/keys.c    ****  */
2993:src/keys.c    **** static int process_labellist(const keycode c) {
2994:src/keys.c    **** 	unsigned int pc = State2.digval;
2995:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2996:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2997:src/keys.c    **** 	const int opcode = getprog(pc);
2998:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2999:src/keys.c    **** 	const int direct = State2.runmode;
3000:src/keys.c    **** 	const enum shifts shift = reset_shift();
3001:src/keys.c    **** 	int op = STATE_UNFINISHED;
3002:src/keys.c    **** 
3003:src/keys.c    **** 	if (n < REGION_XROM) {
ARM GAS  /tmp/cceyv6gL.s 			page 116


3004:src/keys.c    **** 		// Digits take you to that segment
3005:src/keys.c    **** 		pc = addrLIB(1, n);
3006:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3007:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
3008:src/keys.c    **** 		State2.digval = pc;
3009:src/keys.c    **** 		return STATE_UNFINISHED;
3010:src/keys.c    **** 	}
3011:src/keys.c    **** 
3012:src/keys.c    **** 	switch (c | (shift << 8)) {
3013:src/keys.c    **** 
3014:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3015:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3016:src/keys.c    **** 		goto next;
3017:src/keys.c    **** 
3018:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3019:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3020:src/keys.c    **** 	case K_DOWN:				// Find next label
3021:src/keys.c    **** 	next:
3022:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3023:src/keys.c    **** 		return STATE_UNFINISHED;
3024:src/keys.c    **** 
3025:src/keys.c    **** 	case K_UP:				// Find previous label
3026:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3027:src/keys.c    **** 		return STATE_UNFINISHED;
3028:src/keys.c    **** 
3029:src/keys.c    **** 	case K24:				// <- exits
3030:src/keys.c    **** 		break;
3031:src/keys.c    **** 
3032:src/keys.c    **** 	case K20:				// ENTER^
3033:src/keys.c    **** 	set_pc_and_exit:
3034:src/keys.c    **** 		set_pc(pc);			// forced branch
3035:src/keys.c    **** 		break;
3036:src/keys.c    **** 
3037:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3038:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3039:src/keys.c    **** 		goto set_pc_and_exit;
3040:src/keys.c    **** 
3041:src/keys.c    **** 	case K10:				// STO
3042:src/keys.c    **** 	case K11:				// RCL
3043:src/keys.c    **** 	  //#ifndef DM42	
3044:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3045:src/keys.c    **** 	  //#endif
3046:src/keys.c    **** /* #ifdef DM42 */
3047:src/keys.c    **** /* 	        op = OP_NIL; */
3048:src/keys.c    **** /* #endif	     */
3049:src/keys.c    **** 	  goto set_pc_and_exit;
3050:src/keys.c    **** #ifdef DM42
3051:src/keys.c    **** 	case K05:				// XEQ
3052:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3053:src/keys.c    **** 		goto xeq_or_gto;
3054:src/keys.c    **** 
3055:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3056:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3057:src/keys.c    **** 	xeq_or_gto:
3058:src/keys.c    **** 		if (label)
3059:src/keys.c    **** 			break;
3060:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/cceyv6gL.s 			page 117


3061:src/keys.c    **** #else
3062:src/keys.c    **** 	case K30:				// XEQ
3063:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3064:src/keys.c    **** 		goto xeq_or_gto;
3065:src/keys.c    **** 
3066:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3067:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3068:src/keys.c    **** 	xeq_or_gto:
3069:src/keys.c    **** 		if (label)
3070:src/keys.c    **** 			break;
3071:src/keys.c    **** 		return STATE_UNFINISHED;
3072:src/keys.c    **** #endif		
3073:src/keys.c    **** 	case K63:				// R/S
3074:src/keys.c    **** 		if (direct && label) {
3075:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3076:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3077:src/keys.c    **** 			break;
3078:src/keys.c    **** 		}
3079:src/keys.c    **** 		return STATE_UNFINISHED;
3080:src/keys.c    **** 
3081:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3082:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3083:src/keys.c    **** 		goto set_pc_and_exit;
3084:src/keys.c    **** 
3085:src/keys.c    **** 	default:
3086:src/keys.c    **** 		return STATE_UNFINISHED;
3087:src/keys.c    **** 	}
3088:src/keys.c    **** 	State2.digval = 0;
3089:src/keys.c    **** 	State2.labellist = 0;
3090:src/keys.c    **** 	return check_confirm(op);
3091:src/keys.c    **** }
3092:src/keys.c    **** 
3093:src/keys.c    **** 
3094:src/keys.c    **** static void set_window(int c) {
 2845              		.loc 1 3094 31 is_stmt 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
3095:src/keys.c    **** 
3096:src/keys.c    **** 	if (State2.runmode) {
 2849              		.loc 1 3096 2 view .LVU812
3094:src/keys.c    **** 
 2850              		.loc 1 3094 31 is_stmt 0 view .LVU813
 2851 0000 38B5     		push	{r3, r4, r5, lr}
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 3, -16
 2854              		.cfi_offset 4, -12
 2855              		.cfi_offset 5, -8
 2856              		.cfi_offset 14, -4
 2857              		.loc 1 3096 6 view .LVU814
 2858 0002 224C     		ldr	r4, .L320
 2859 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2860              		.loc 1 3096 5 view .LVU815
 2861 0006 5A06     		lsls	r2, r3, #25
 2862 0008 00D4     		bmi	.L317
 2863              	.LVL221:
 2864              	.L305:
ARM GAS  /tmp/cceyv6gL.s 			page 118


3097:src/keys.c    **** 		process_cmdline_set_lift();
3098:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3099:src/keys.c    **** 		State2.disp_freeze = 0;
3100:src/keys.c    **** 		display();	
3101:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3102:src/keys.c    **** 			if (UState.intm) {
3103:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3104:src/keys.c    **** 					State2.window--;
3105:src/keys.c    **** 				return;
3106:src/keys.c    **** 			}
3107:src/keys.c    **** 			else 
3108:src/keys.c    **** 				State2.window = is_dblmode();
3109:src/keys.c    **** 		}
3110:src/keys.c    **** 		else {
3111:src/keys.c    **** 			if (UState.intm) {
3112:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3113:src/keys.c    **** 					State2.window++;
3114:src/keys.c    **** 				return;
3115:src/keys.c    **** 			}
3116:src/keys.c    **** 			else
3117:src/keys.c    **** 				State2.window = 0;
3118:src/keys.c    **** 		}
3119:src/keys.c    **** 		set_smode(SDISP_SHOW);
3120:src/keys.c    **** 	}
3121:src/keys.c    **** }
 2865              		.loc 1 3121 1 view .LVU816
 2866 000a 38BD     		pop	{r3, r4, r5, pc}
 2867              	.LVL222:
 2868              	.L317:
3097:src/keys.c    **** 		process_cmdline_set_lift();
 2869              		.loc 1 3097 3 is_stmt 1 view .LVU817
 2870 000c 0546     		mov	r5, r0
 2871 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2872              	.LVL223:
3099:src/keys.c    **** 		display();	
 2873              		.loc 1 3099 3 view .LVU818
3099:src/keys.c    **** 		display();	
 2874              		.loc 1 3099 22 is_stmt 0 view .LVU819
 2875 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2876 0014 6FF30413 		bfc	r3, #4, #1
 2877 0018 E375     		strb	r3, [r4, #23]
3100:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2878              		.loc 1 3100 3 is_stmt 1 view .LVU820
 2879 001a FFF7FEFF 		bl	display
 2880              	.LVL224:
3101:src/keys.c    **** 			if (UState.intm) {
 2881              		.loc 1 3101 3 view .LVU821
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2882              		.loc 1 3102 8 is_stmt 0 view .LVU822
 2883 001e 1C4B     		ldr	r3, .L320+4
 2884 0020 1B68     		ldr	r3, [r3]
3101:src/keys.c    **** 			if (UState.intm) {
 2885              		.loc 1 3101 6 view .LVU823
 2886 0022 2C2D     		cmp	r5, #44
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2887              		.loc 1 3102 8 view .LVU824
 2888 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/cceyv6gL.s 			page 119


3101:src/keys.c    **** 			if (UState.intm) {
 2889              		.loc 1 3101 6 view .LVU825
 2890 0028 18D0     		beq	.L318
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2891              		.loc 1 3111 4 is_stmt 1 view .LVU826
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2892              		.loc 1 3111 7 is_stmt 0 view .LVU827
 2893 002a 13F00103 		ands	r3, r3, #1
 2894 002e 09D1     		bne	.L319
3117:src/keys.c    **** 		}
 2895              		.loc 1 3117 5 is_stmt 1 view .LVU828
3117:src/keys.c    **** 		}
 2896              		.loc 1 3117 19 is_stmt 0 view .LVU829
 2897 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2898 0032 63F3C502 		bfi	r2, r3, #3, #3
 2899 0036 2275     		strb	r2, [r4, #20]
 2900              	.L311:
3119:src/keys.c    **** 	}
 2901              		.loc 1 3119 3 is_stmt 1 view .LVU830
 2902              	.LVL225:
 2903              	.LBB406:
 2904              	.LBI406:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2905              		.loc 1 741 13 view .LVU831
 2906              	.LBB407:
 742:src/keys.c    **** }
 2907              		.loc 1 742 2 view .LVU832
 742:src/keys.c    **** }
 2908              		.loc 1 742 15 is_stmt 0 view .LVU833
 2909 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2910 003a 013B     		subs	r3, r3, #1
 2911 003c 18BF     		it	ne
 2912 003e 0123     		movne	r3, #1
 2913 0040 6374     		strb	r3, [r4, #17]
 2914              	.LVL226:
 742:src/keys.c    **** }
 2915              		.loc 1 742 15 view .LVU834
 2916              	.LBE407:
 2917              	.LBE406:
 2918              		.loc 1 3121 1 view .LVU835
 2919 0042 38BD     		pop	{r3, r4, r5, pc}
 2920              	.LVL227:
 2921              	.L319:
3112:src/keys.c    **** 					State2.window++;
 2922              		.loc 1 3112 5 is_stmt 1 view .LVU836
3112:src/keys.c    **** 					State2.window++;
 2923              		.loc 1 3112 22 is_stmt 0 view .LVU837
 2924 0044 134A     		ldr	r2, .L320+8
3112:src/keys.c    **** 					State2.window++;
 2925              		.loc 1 3112 42 view .LVU838
 2926 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3112:src/keys.c    **** 					State2.window++;
 2927              		.loc 1 3112 8 view .LVU839
 2928 0048 1168     		ldr	r1, [r2]
3112:src/keys.c    **** 					State2.window++;
 2929              		.loc 1 3112 42 view .LVU840
 2930 004a C3F3C202 		ubfx	r2, r3, #3, #3
ARM GAS  /tmp/cceyv6gL.s 			page 120


3112:src/keys.c    **** 					State2.window++;
 2931              		.loc 1 3112 8 view .LVU841
 2932 004e 8A42     		cmp	r2, r1
 2933 0050 DBDA     		bge	.L305
3113:src/keys.c    **** 				return;
 2934              		.loc 1 3113 6 is_stmt 1 view .LVU842
3113:src/keys.c    **** 				return;
 2935              		.loc 1 3113 19 is_stmt 0 view .LVU843
 2936 0052 0132     		adds	r2, r2, #1
 2937 0054 62F3C503 		bfi	r3, r2, #3, #3
 2938 0058 2375     		strb	r3, [r4, #20]
 2939              		.loc 1 3121 1 view .LVU844
 2940 005a 38BD     		pop	{r3, r4, r5, pc}
 2941              	.LVL228:
 2942              	.L318:
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2943              		.loc 1 3102 4 is_stmt 1 view .LVU845
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2944              		.loc 1 3102 7 is_stmt 0 view .LVU846
 2945 005c DB07     		lsls	r3, r3, #31
 2946 005e 0ED5     		bpl	.L309
 2947              	.LBB408:
 2948              	.LBI408:
3094:src/keys.c    **** 
 2949              		.loc 1 3094 13 is_stmt 1 view .LVU847
 2950              	.LVL229:
 2951              	.LBB409:
3103:src/keys.c    **** 					State2.window--;
 2952              		.loc 1 3103 5 view .LVU848
3103:src/keys.c    **** 					State2.window--;
 2953              		.loc 1 3103 22 is_stmt 0 view .LVU849
 2954 0060 0C4B     		ldr	r3, .L320+8
3103:src/keys.c    **** 					State2.window--;
 2955              		.loc 1 3103 8 view .LVU850
 2956 0062 1B68     		ldr	r3, [r3]
 2957 0064 002B     		cmp	r3, #0
 2958 0066 D0DD     		ble	.L305
3103:src/keys.c    **** 					State2.window--;
 2959              		.loc 1 3103 43 view .LVU851
 2960 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3103:src/keys.c    **** 					State2.window--;
 2961              		.loc 1 3103 26 view .LVU852
 2962 006a 13F0380F 		tst	r3, #56
 2963 006e CCD0     		beq	.L305
3104:src/keys.c    **** 				return;
 2964              		.loc 1 3104 6 is_stmt 1 view .LVU853
3104:src/keys.c    **** 				return;
 2965              		.loc 1 3104 12 is_stmt 0 view .LVU854
 2966 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3104:src/keys.c    **** 				return;
 2967              		.loc 1 3104 19 view .LVU855
 2968 0074 0732     		adds	r2, r2, #7
 2969 0076 62F3C503 		bfi	r3, r2, #3, #3
 2970 007a 2375     		strb	r3, [r4, #20]
 2971              	.LBE409:
 2972              	.LBE408:
 2973              		.loc 1 3121 1 view .LVU856
ARM GAS  /tmp/cceyv6gL.s 			page 121


 2974 007c 38BD     		pop	{r3, r4, r5, pc}
 2975              	.LVL230:
 2976              	.L309:
3108:src/keys.c    **** 		}
 2977              		.loc 1 3108 5 is_stmt 1 view .LVU857
3108:src/keys.c    **** 		}
 2978              		.loc 1 3108 21 is_stmt 0 view .LVU858
 2979 007e FFF7FEFF 		bl	is_dblmode
 2980              	.LVL231:
3108:src/keys.c    **** 		}
 2981              		.loc 1 3108 19 view .LVU859
 2982 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2983 0084 60F3C503 		bfi	r3, r0, #3, #3
 2984 0088 2375     		strb	r3, [r4, #20]
 2985 008a D5E7     		b	.L311
 2986              	.L321:
 2987              		.align	2
 2988              	.L320:
 2989 008c 00000000 		.word	StateWhileOn
 2990 0090 00000000 		.word	main_ram
 2991 0094 00000000 		.word	IntMaxWindow
 2992              		.cfi_endproc
 2993              	.LFE58:
 2995              		.section	.text.arg_storcl,"ax",%progbits
 2996              		.align	1
 2997              		.p2align 2,,3
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3001              		.fpu fpv4-sp-d16
 3003              	arg_storcl:
 3004              	.LVL232:
 3005              	.LFB39:
2020:src/keys.c    **** 	unsigned int b = CmdBase;
 3006              		.loc 1 2020 56 is_stmt 1 view -0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 0
 3009              		@ frame_needed = 0, uses_anonymous_args = 0
 3010              		@ link register save eliminated.
2021:src/keys.c    **** 
 3011              		.loc 1 2021 2 view .LVU861
2021:src/keys.c    **** 
 3012              		.loc 1 2021 19 is_stmt 0 view .LVU862
 3013 0000 0F4A     		ldr	r2, .L354
 3014 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3015              	.LVL233:
2023:src/keys.c    **** 		CmdBase += n;
 3016              		.loc 1 2023 2 is_stmt 1 view .LVU863
 3017              	.LBB418:
 3018              	.LBI418:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3019              		.loc 1 2011 12 view .LVU864
 3020              	.LBB419:
2016:src/keys.c    **** #endif
 3021              		.loc 1 2016 2 view .LVU865
2016:src/keys.c    **** #endif
 3022              		.loc 1 2016 41 is_stmt 0 view .LVU866
ARM GAS  /tmp/cceyv6gL.s 			page 122


 3023 0004 032B     		cmp	r3, #3
 3024 0006 14D0     		beq	.L323
2016:src/keys.c    **** #endif
 3025              		.loc 1 2016 24 view .LVU867
 3026 0008 0A2B     		cmp	r3, #10
 3027 000a 12D0     		beq	.L323
 3028              	.LVL234:
 3029              	.LBB420:
 3030              	.LBI420:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3031              		.loc 1 2011 12 is_stmt 1 view .LVU868
 3032              	.LBB421:
2016:src/keys.c    **** #endif
 3033              		.loc 1 2016 41 is_stmt 0 view .LVU869
 3034 000c 19B1     		cbz	r1, .L324
2016:src/keys.c    **** #endif
 3035              		.loc 1 2016 51 view .LVU870
 3036 000e 152B     		cmp	r3, #21
 3037 0010 0FD0     		beq	.L323
2016:src/keys.c    **** #endif
 3038              		.loc 1 2016 70 view .LVU871
 3039 0012 1A2B     		cmp	r3, #26
 3040 0014 0DD0     		beq	.L323
 3041              	.L324:
 3042              	.LVL235:
2016:src/keys.c    **** #endif
 3043              		.loc 1 2016 70 view .LVU872
 3044              	.LBE421:
 3045              	.LBE420:
 3046              	.LBE419:
 3047              	.LBE418:
2028:src/keys.c    **** 		b -= n;
 3048              		.loc 1 2028 2 is_stmt 1 view .LVU873
2028:src/keys.c    **** 		b -= n;
 3049              		.loc 1 2028 5 is_stmt 0 view .LVU874
 3050 0016 8342     		cmp	r3, r0
 3051 0018 09D3     		bcc	.L329
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3052              		.loc 1 2029 3 is_stmt 1 view .LVU875
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3053              		.loc 1 2029 5 is_stmt 0 view .LVU876
 3054 001a 1B1A     		subs	r3, r3, r0
 3055              	.LVL236:
2030:src/keys.c    **** 			CmdBase = b;
 3056              		.loc 1 2030 3 is_stmt 1 view .LVU877
 3057              	.LBB422:
 3058              	.LBI422:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3059              		.loc 1 2011 12 view .LVU878
 3060              	.LBB423:
2016:src/keys.c    **** #endif
 3061              		.loc 1 2016 2 view .LVU879
2016:src/keys.c    **** #endif
 3062              		.loc 1 2016 41 is_stmt 0 view .LVU880
 3063 001c 032B     		cmp	r3, #3
 3064 001e 0CD0     		beq	.L327
2016:src/keys.c    **** #endif
ARM GAS  /tmp/cceyv6gL.s 			page 123


 3065              		.loc 1 2016 24 view .LVU881
 3066 0020 0A2B     		cmp	r3, #10
 3067 0022 0AD0     		beq	.L327
 3068              	.LVL237:
 3069              	.LBB424:
 3070              	.LBI424:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3071              		.loc 1 2011 12 is_stmt 1 view .LVU882
 3072              	.LBB425:
2016:src/keys.c    **** #endif
 3073              		.loc 1 2016 41 is_stmt 0 view .LVU883
 3074 0024 19B1     		cbz	r1, .L329
2016:src/keys.c    **** #endif
 3075              		.loc 1 2016 51 view .LVU884
 3076 0026 152B     		cmp	r3, #21
 3077 0028 07D0     		beq	.L327
2016:src/keys.c    **** #endif
 3078              		.loc 1 2016 70 view .LVU885
 3079 002a 1A2B     		cmp	r3, #26
 3080 002c 05D0     		beq	.L327
 3081              	.LVL238:
 3082              	.L329:
2016:src/keys.c    **** #endif
 3083              		.loc 1 2016 70 view .LVU886
 3084              	.LBE425:
 3085              	.LBE424:
 3086              	.LBE423:
 3087              	.LBE422:
2035:src/keys.c    **** }
 3088              		.loc 1 2035 9 view .LVU887
 3089 002e 0020     		movs	r0, #0
 3090              	.LVL239:
2036:src/keys.c    **** 
 3091              		.loc 1 2036 1 view .LVU888
 3092 0030 7047     		bx	lr
 3093              	.LVL240:
 3094              	.L323:
2024:src/keys.c    **** 		return 1;
 3095              		.loc 1 2024 3 is_stmt 1 view .LVU889
2024:src/keys.c    **** 		return 1;
 3096              		.loc 1 2024 11 is_stmt 0 view .LVU890
 3097 0032 1844     		add	r0, r0, r3
 3098              	.LVL241:
2024:src/keys.c    **** 		return 1;
 3099              		.loc 1 2024 11 view .LVU891
 3100 0034 D077     		strb	r0, [r2, #31]
2025:src/keys.c    **** 	}
 3101              		.loc 1 2025 3 is_stmt 1 view .LVU892
2025:src/keys.c    **** 	}
 3102              		.loc 1 2025 10 is_stmt 0 view .LVU893
 3103 0036 0120     		movs	r0, #1
 3104 0038 7047     		bx	lr
 3105              	.LVL242:
 3106              	.L327:
2031:src/keys.c    **** 			return 1;
 3107              		.loc 1 2031 4 is_stmt 1 view .LVU894
2031:src/keys.c    **** 			return 1;
ARM GAS  /tmp/cceyv6gL.s 			page 124


 3108              		.loc 1 2031 12 is_stmt 0 view .LVU895
 3109 003a D377     		strb	r3, [r2, #31]
2032:src/keys.c    **** 		}
 3110              		.loc 1 2032 4 is_stmt 1 view .LVU896
2032:src/keys.c    **** 		}
 3111              		.loc 1 2032 11 is_stmt 0 view .LVU897
 3112 003c 0120     		movs	r0, #1
 3113              	.LVL243:
2032:src/keys.c    **** 		}
 3114              		.loc 1 2032 11 view .LVU898
 3115 003e 7047     		bx	lr
 3116              	.L355:
 3117              		.align	2
 3118              	.L354:
 3119 0040 00000000 		.word	StateWhileOn
 3120              		.cfi_endproc
 3121              	.LFE39:
 3123              		.section	.text.process_arg,"ax",%progbits
 3124              		.align	1
 3125              		.p2align 2,,3
 3126              		.syntax unified
 3127              		.thumb
 3128              		.thumb_func
 3129              		.fpu fpv4-sp-d16
 3131              	process_arg:
 3132              	.LVL244:
 3133              	.LFB42:
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3134              		.loc 1 2070 41 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 8
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3138              		.loc 1 2071 2 view .LVU900
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3139              		.loc 1 2070 41 is_stmt 0 view .LVU901
 3140 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3141              		.cfi_def_cfa_offset 36
 3142              		.cfi_offset 4, -36
 3143              		.cfi_offset 5, -32
 3144              		.cfi_offset 6, -28
 3145              		.cfi_offset 7, -24
 3146              		.cfi_offset 8, -20
 3147              		.cfi_offset 9, -16
 3148              		.cfi_offset 10, -12
 3149              		.cfi_offset 11, -8
 3150              		.cfi_offset 14, -4
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3151              		.loc 1 2071 22 view .LVU902
 3152 0004 C94C     		ldr	r4, .L500
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3153              		.loc 1 2073 31 view .LVU903
 3154 0006 DFF834A3 		ldr	r10, .L500+16
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3155              		.loc 1 2071 22 view .LVU904
 3156 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3157              	.LBB447:
ARM GAS  /tmp/cceyv6gL.s 			page 125


 3158              	.LBB448:
 3159              	.LBB449:
 3160              	.LBB450:
 143:src/keys.c    **** }
 3161              		.loc 1 143 23 view .LVU905
 3162 000c C84A     		ldr	r2, .L500+4
 3163              	.LBE450:
 3164              	.LBE449:
 234:src/keys.c    **** }
 3165              		.loc 1 234 28 view .LVU906
 3166 000e C94E     		ldr	r6, .L500+8
 3167              	.LBB453:
 3168              	.LBB451:
 143:src/keys.c    **** }
 3169              		.loc 1 143 23 view .LVU907
 3170 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3171              	.LBE451:
 3172              	.LBE453:
 3173              	.LBE448:
 3174              	.LBE447:
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3175              		.loc 1 2074 20 view .LVU908
 3176 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3177              	.LBB457:
 3178              	.LBB455:
 234:src/keys.c    **** }
 3179              		.loc 1 234 28 view .LVU909
 3180 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3181              	.LBE455:
 3182              	.LBE457:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3183              		.loc 1 2073 31 view .LVU910
 3184 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3185              		.loc 1 2070 41 view .LVU911
 3186 001c 83B0     		sub	sp, sp, #12
 3187              		.cfi_def_cfa_offset 48
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3188              		.loc 1 2073 31 view .LVU912
 3189 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3190              		.loc 1 2071 15 view .LVU913
 3191 0020 0095     		str	r5, [sp]
 3192              	.LVL245:
2072:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3193              		.loc 1 2072 2 is_stmt 1 view .LVU914
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3194              		.loc 1 2073 40 is_stmt 0 view .LVU915
 3195 0022 4A07     		lsls	r2, r1, #29
 3196 0024 58BF     		it	pl
 3197 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3198              		.loc 1 2074 20 view .LVU916
 3199 002a 0193     		str	r3, [sp, #4]
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3200              		.loc 1 2073 40 view .LVU917
 3201 002c 54BF     		ite	pl
ARM GAS  /tmp/cceyv6gL.s 			page 126


 3202 002e 4FEAD878 		lsrpl	r8, r8, #31
 3203 0032 4FF00108 		movmi	r8, #1
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3204              		.loc 1 2070 41 view .LVU918
 3205 0036 0746     		mov	r7, r0
 3206              	.LVL246:
 3207              	.LBB458:
 3208              	.LBI447:
 210:src/keys.c    **** {
 3209              		.loc 1 210 14 is_stmt 1 view .LVU919
 3210              	.LBB456:
 212:src/keys.c    ****     // K00 - K05
 3211              		.loc 1 212 3 view .LVU920
 234:src/keys.c    **** }
 3212              		.loc 1 234 3 view .LVU921
 3213              	.LBB454:
 3214              	.LBI449:
 131:src/keys.c    **** {
 3215              		.loc 1 131 12 view .LVU922
 3216              	.LBB452:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3217              		.loc 1 133 2 view .LVU923
 143:src/keys.c    **** }
 3218              		.loc 1 143 2 view .LVU924
 143:src/keys.c    **** }
 3219              		.loc 1 143 2 is_stmt 0 view .LVU925
 3220              	.LBE452:
 3221              	.LBE454:
 234:src/keys.c    **** }
 3222              		.loc 1 234 10 view .LVU926
 3223 0038 4E46     		mov	r6, r9
 3224              	.LVL247:
 234:src/keys.c    **** }
 3225              		.loc 1 234 10 view .LVU927
 3226              	.LBE456:
 3227              	.LBE458:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3228              		.loc 1 2073 2 is_stmt 1 view .LVU928
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3229              		.loc 1 2074 2 view .LVU929
2075:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3230              		.loc 1 2075 2 view .LVU930
 3231              	.LBB459:
 3232              	.LBI459:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3233              		.loc 1 114 13 view .LVU931
 3234              	.LBE459:
 115:src/keys.c    **** }
 3235              		.loc 1 115 2 view .LVU932
 3236              	.LBB472:
 3237              	.LBB460:
 3238              	.LBI460:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3239              		.loc 1 104 20 view .LVU933
 3240              	.LBB461:
 105:src/keys.c    **** 	State2.shifts = shift;
 3241              		.loc 1 105 2 view .LVU934
ARM GAS  /tmp/cceyv6gL.s 			page 127


 3242              	.LBB462:
 3243              	.LBI462:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3244              		.loc 1 96 13 view .LVU935
 3245              	.LBB463:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3246              		.loc 1 97 2 view .LVU936
 3247              	.LBE463:
 3248              	.LBE462:
 3249              	.LBE461:
 3250              	.LBE460:
 3251              	.LBE472:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3252              		.loc 1 2073 31 is_stmt 0 view .LVU937
 3253 003a 4FEA051B 		lsl	fp, r5, #4
 3254              	.LBB473:
 3255              	.LBB469:
 3256              	.LBB466:
 3257              	.LBB465:
 3258              	.LBB464:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3259              		.loc 1 97 18 view .LVU938
 3260 003e FFF7FEFF 		bl	shift_down
 3261              	.LVL248:
  98:src/keys.c    **** }
 3262              		.loc 1 98 2 is_stmt 1 view .LVU939
  98:src/keys.c    **** }
 3263              		.loc 1 98 52 is_stmt 0 view .LVU940
 3264 0042 00B9     		cbnz	r0, .L358
 3265 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3266              	.LVL249:
 3267              	.L358:
  98:src/keys.c    **** }
 3268              		.loc 1 98 52 view .LVU941
 3269              	.LBE464:
 3270              	.LBE465:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3271              		.loc 1 106 2 is_stmt 1 view .LVU942
 3272              	.LBE466:
 3273              	.LBE469:
 3274              	.LBE473:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3275              		.loc 1 2076 38 is_stmt 0 view .LVU943
 3276 0046 D344     		add	fp, fp, r10
 3277              	.LBB474:
 3278              	.LBB470:
 3279              	.LBB467:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3280              		.loc 1 106 16 view .LVU944
 3281 0048 4FF0000E 		mov	lr, #0
 3282              	.LBE467:
 3283              	.LBE470:
 3284              	.LBE474:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3285              		.loc 1 2076 38 view .LVU945
 3286 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3287              	.LBB475:
ARM GAS  /tmp/cceyv6gL.s 			page 128


 3288              	.LBB471:
 3289              	.LBB468:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3290              		.loc 1 106 16 view .LVU946
 3291 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3292              		.loc 1 108 2 is_stmt 1 view .LVU947
 3293              	.LVL250:
 108:src/keys.c    **** }
 3294              		.loc 1 108 2 is_stmt 0 view .LVU948
 3295              	.LBE468:
 3296              	.LBE471:
 3297              	.LBE475:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3298              		.loc 1 2076 2 is_stmt 1 view .LVU949
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3299              		.loc 1 2076 61 is_stmt 0 view .LVU950
 3300 0054 8B06     		lsls	r3, r1, #26
 3301 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3302 005a 19D5     		bpl	.L359
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3303              		.loc 1 2076 61 discriminator 1 view .LVU951
 3304 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3305 005e 11F0C00F 		tst	r1, #192
 3306 0062 1FD0     		beq	.L488
 3307              	.LVL251:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3308              		.loc 1 2080 2 is_stmt 1 view .LVU952
2081:src/keys.c    **** 		reset_arg();
 3309              		.loc 1 2081 5 is_stmt 0 view .LVU953
 3310 0064 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3311              		.loc 1 2080 4 view .LVU954
 3312 0066 29F08006 		bic	r6, r9, #128
 3313              	.LVL252:
2081:src/keys.c    **** 		reset_arg();
 3314              		.loc 1 2081 2 is_stmt 1 view .LVU955
2081:src/keys.c    **** 		reset_arg();
 3315              		.loc 1 2081 5 is_stmt 0 view .LVU956
 3316 006a 15D8     		bhi	.L388
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3317              		.loc 1 2076 61 view .LVU957
 3318 006c F446     		mov	ip, lr
 3319              	.L368:
2086:src/keys.c    **** 	  switch (n) {
 3320              		.loc 1 2086 35 discriminator 1 view .LVU958
 3321 006e 6169     		ldr	r1, [r4, #20]
 3322 0070 11F4103F 		tst	r1, #147456
 3323 0074 2ED1     		bne	.L370
2087:src/keys.c    **** 	  case regX_idx:
 3324              		.loc 1 2087 4 is_stmt 1 view .LVU959
 3325 0076 672E     		cmp	r6, #103
 3326 0078 2CD8     		bhi	.L370
2087:src/keys.c    **** 	  case regX_idx:
 3327              		.loc 1 2087 4 is_stmt 0 view .LVU960
 3328 007a 632E     		cmp	r6, #99
 3329 007c 24D9     		bls	.L430
ARM GAS  /tmp/cceyv6gL.s 			page 129


 3330 007e 653E     		subs	r6, r6, #101
 3331              	.LVL253:
2087:src/keys.c    **** 	  case regX_idx:
 3332              		.loc 1 2087 4 view .LVU961
 3333 0080 022E     		cmp	r6, #2
 3334 0082 00F26082 		bhi	.L373
 3335 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3336              	.L375:
 3337 008a 1101     		.2byte	(.L377-.L375)/2
 3338 008c 0B01     		.2byte	(.L376-.L375)/2
 3339 008e 1301     		.2byte	(.L374-.L375)/2
 3340              	.LVL254:
 3341              		.p2align 1
 3342              	.L359:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3343              		.loc 1 2080 2 is_stmt 1 view .LVU962
2081:src/keys.c    **** 		reset_arg();
 3344              		.loc 1 2081 5 is_stmt 0 view .LVU963
 3345 0090 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3346              		.loc 1 2080 4 view .LVU964
 3347 0092 29F08006 		bic	r6, r9, #128
 3348              	.LVL255:
2081:src/keys.c    **** 		reset_arg();
 3349              		.loc 1 2081 2 is_stmt 1 view .LVU965
2081:src/keys.c    **** 		reset_arg();
 3350              		.loc 1 2081 5 is_stmt 0 view .LVU966
 3351 0096 EAD9     		bls	.L368
 3352              	.LVL256:
 3353              	.L388:
2336:src/keys.c    **** 	default:
 3354              		.loc 1 2336 3 is_stmt 1 view .LVU967
 3355 0098 FFF7FEFF 		bl	reset_arg
 3356              	.LVL257:
 3357              	.L481:
2340:src/keys.c    **** }
 3358              		.loc 1 2340 9 is_stmt 0 view .LVU968
 3359 009c 3320     		movs	r0, #51
 3360              	.L356:
2341:src/keys.c    **** 
 3361              		.loc 1 2341 1 view .LVU969
 3362 009e 03B0     		add	sp, sp, #12
 3363              		.cfi_remember_state
 3364              		.cfi_def_cfa_offset 36
 3365              		@ sp needed
 3366 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3367              	.LVL258:
 3368              	.L488:
 3369              		.cfi_restore_state
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3370              		.loc 1 2077 2 is_stmt 1 view .LVU970
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3371              		.loc 1 2077 35 is_stmt 0 view .LVU971
 3372 00a4 292F     		cmp	r7, #41
 3373 00a6 00F0C080 		beq	.L361
2078:src/keys.c    **** 
 3374              		.loc 1 2078 11 view .LVU972
ARM GAS  /tmp/cceyv6gL.s 			page 130


 3375 00aa 0128     		cmp	r0, #1
 3376 00ac 00F0D180 		beq	.L362
2078:src/keys.c    **** 
 3377              		.loc 1 2078 32 discriminator 3 view .LVU973
 3378 00b0 B9F1090F 		cmp	r9, #9
 3379 00b4 00F2B680 		bhi	.L363
 3380              	.LVL259:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3381              		.loc 1 2080 2 is_stmt 1 view .LVU974
2081:src/keys.c    **** 		reset_arg();
 3382              		.loc 1 2081 2 view .LVU975
2081:src/keys.c    **** 		reset_arg();
 3383              		.loc 1 2081 5 is_stmt 0 view .LVU976
 3384 00b8 8E2D     		cmp	r5, #142
 3385 00ba EDD8     		bhi	.L388
2086:src/keys.c    **** 	  switch (n) {
 3386              		.loc 1 2086 35 view .LVU977
 3387 00bc 6169     		ldr	r1, [r4, #20]
 3388 00be 11F4103F 		tst	r1, #147456
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3389              		.loc 1 2076 61 view .LVU978
 3390 00c2 4FF0010C 		mov	ip, #1
2086:src/keys.c    **** 	  switch (n) {
 3391              		.loc 1 2086 35 view .LVU979
 3392 00c6 05D1     		bne	.L370
 3393              	.L430:
2087:src/keys.c    **** 	  case regX_idx:
 3394              		.loc 1 2087 4 view .LVU980
 3395 00c8 16B1     		cbz	r6, .L372
 3396 00ca 721F     		subs	r2, r6, #5
 3397 00cc 042A     		cmp	r2, #4
 3398 00ce 01D8     		bhi	.L370
 3399              	.L372:
2102:src/keys.c    **** 	  }
 3400              		.loc 1 2102 6 is_stmt 1 view .LVU981
2102:src/keys.c    **** 	  }
 3401              		.loc 1 2102 13 is_stmt 0 view .LVU982
 3402 00d0 3046     		mov	r0, r6
 3403              	.LVL260:
2102:src/keys.c    **** 	  }
 3404              		.loc 1 2102 13 view .LVU983
 3405 00d2 E6E0     		b	.L482
 3406              	.LVL261:
 3407              	.L370:
2109:src/keys.c    **** 		// row column shorthand addressing
 3408              		.loc 1 2109 2 is_stmt 1 view .LVU984
2115:src/keys.c    **** 		switch ((int)c) {
 3409              		.loc 1 2115 2 view .LVU985
2115:src/keys.c    **** 		switch ((int)c) {
 3410              		.loc 1 2115 5 is_stmt 0 view .LVU986
 3411 00d4 4D2D     		cmp	r5, #77
 3412 00d6 00F0B180 		beq	.L489
2115:src/keys.c    **** 		switch ((int)c) {
 3413              		.loc 1 2115 23 discriminator 1 view .LVU987
 3414 00da 05F17302 		add	r2, r5, #115
 3415 00de D2B2     		uxtb	r2, r2
 3416 00e0 012A     		cmp	r2, #1
ARM GAS  /tmp/cceyv6gL.s 			page 131


 3417 00e2 61D9     		bls	.L490
 3418              	.LVL262:
 3419              	.L379:
2146:src/keys.c    **** #else
 3420              		.loc 1 2146 3 is_stmt 1 view .LVU988
2146:src/keys.c    **** #else
 3421              		.loc 1 2146 11 is_stmt 0 view .LVU989
 3422 00e4 E577     		strb	r5, [r4, #31]
2169:src/keys.c    **** 	case K_F:
 3423              		.loc 1 2169 2 is_stmt 1 view .LVU990
 3424 00e6 2D2F     		cmp	r7, #45
 3425 00e8 D8D8     		bhi	.L481
 3426 00ea 01A3     		adr	r3, .L383
 3427 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3428              		.p2align 2
 3429              	.L383:
 3430 00f0 C1010000 		.word	.L400+1
 3431 00f4 C1010000 		.word	.L400+1
 3432 00f8 C1010000 		.word	.L400+1
 3433 00fc C1010000 		.word	.L400+1
 3434 0100 9D000000 		.word	.L481+1
 3435 0104 9D000000 		.word	.L481+1
 3436 0108 9D000000 		.word	.L481+1
 3437 010c 9D000000 		.word	.L481+1
 3438 0110 C1010000 		.word	.L400+1
 3439 0114 C1010000 		.word	.L400+1
 3440 0118 C1010000 		.word	.L400+1
 3441 011c C1010000 		.word	.L400+1
 3442 0120 45040000 		.word	.L399+1
 3443 0124 9D000000 		.word	.L481+1
 3444 0128 9D000000 		.word	.L481+1
 3445 012c 9D000000 		.word	.L481+1
 3446 0130 C7020000 		.word	.L398+1
 3447 0134 9D000000 		.word	.L481+1
 3448 0138 19020000 		.word	.L397+1
 3449 013c 9D000000 		.word	.L481+1
 3450 0140 9D000000 		.word	.L481+1
 3451 0144 9D000000 		.word	.L481+1
 3452 0148 F3020000 		.word	.L396+1
 3453 014c 9D000000 		.word	.L481+1
 3454 0150 FF020000 		.word	.L395+1
 3455 0154 0B030000 		.word	.L394+1
 3456 0158 9D000000 		.word	.L481+1
 3457 015c 9D000000 		.word	.L481+1
 3458 0160 81020000 		.word	.L393+1
 3459 0164 9D000000 		.word	.L481+1
 3460 0168 9D000000 		.word	.L481+1
 3461 016c 1F030000 		.word	.L392+1
 3462 0170 4D040000 		.word	.L391+1
 3463 0174 41030000 		.word	.L390+1
 3464 0178 4D030000 		.word	.L389+1
 3465 017c 9D000000 		.word	.L481+1
 3466 0180 99000000 		.word	.L388+1
 3467 0184 9D000000 		.word	.L481+1
 3468 0188 67030000 		.word	.L387+1
 3469 018c 9D000000 		.word	.L481+1
 3470 0190 AD030000 		.word	.L386+1
ARM GAS  /tmp/cceyv6gL.s 			page 132


 3471 0194 CD030000 		.word	.L385+1
 3472 0198 9D000000 		.word	.L481+1
 3473 019c 9D000000 		.word	.L481+1
 3474 01a0 ED030000 		.word	.L384+1
 3475 01a4 25040000 		.word	.L382+1
 3476              	.LVL263:
 3477              		.p2align 1
 3478              	.L490:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 3479              		.loc 1 2116 3 view .LVU991
 3480 01a8 122F     		cmp	r7, #18
 3481 01aa 2FD0     		beq	.L426
 3482 01ac 182F     		cmp	r7, #24
 3483 01ae 01D0     		beq	.L427
 3484 01b0 012F     		cmp	r7, #1
 3485 01b2 97D1     		bne	.L379
 3486              	.L427:
2132:src/keys.c    **** 		    base = RARG_SIG0;
 3487              		.loc 1 2132 5 view .LVU992
2136:src/keys.c    **** 		    base = RARG_FIX;
 3488              		.loc 1 2136 5 view .LVU993
2136:src/keys.c    **** 		    base = RARG_FIX;
 3489              		.loc 1 2136 8 is_stmt 0 view .LVU994
 3490 01b4 8D2D     		cmp	r5, #141
 3491 01b6 7DD1     		bne	.L491
 3492 01b8 4D23     		movs	r3, #77
 3493 01ba 0093     		str	r3, [sp]
 3494              	.LVL264:
2137:src/keys.c    **** 		    break;
 3495              		.loc 1 2137 12 view .LVU995
 3496 01bc 1D46     		mov	r5, r3
 3497 01be 91E7     		b	.L379
 3498              	.LVL265:
 3499              	.L400:
2224:src/keys.c    **** 			return arg_eval(n);
 3500              		.loc 1 2224 4 is_stmt 1 view .LVU996
2224:src/keys.c    **** 			return arg_eval(n);
 3501              		.loc 1 2224 8 is_stmt 0 view .LVU997
 3502 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2224:src/keys.c    **** 			return arg_eval(n);
 3503              		.loc 1 2224 7 view .LVU998
 3504 01c2 5306     		lsls	r3, r2, #25
 3505 01c4 6AD4     		bmi	.L415
2224:src/keys.c    **** 			return arg_eval(n);
 3506              		.loc 1 2224 19 discriminator 1 view .LVU999
 3507 01c6 B8F1000F 		cmp	r8, #0
 3508 01ca 67D1     		bne	.L415
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3509              		.loc 1 2226 3 is_stmt 1 view .LVU1000
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3510              		.loc 1 2226 6 is_stmt 0 view .LVU1001
 3511 01cc 032F     		cmp	r7, #3
 3512 01ce 3FF665AF 		bhi	.L481
2227:src/keys.c    **** 		break;
 3513              		.loc 1 2227 4 is_stmt 1 view .LVU1002
 3514              	.LVL266:
 3515              	.LBB476:
ARM GAS  /tmp/cceyv6gL.s 			page 133


 3516              	.LBI476:
1997:src/keys.c    **** 	const unsigned int b = CmdBase;
 3517              		.loc 1 1997 12 view .LVU1003
 3518              	.LBB477:
1998:src/keys.c    **** 
 3519              		.loc 1 1998 2 view .LVU1004
2000:src/keys.c    **** 	{
 3520              		.loc 1 2000 2 view .LVU1005
2000:src/keys.c    **** 	{
 3521              		.loc 1 2000 16 is_stmt 0 view .LVU1006
 3522 01d2 009B     		ldr	r3, [sp]
 3523 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3524 01d8 1801     		lsls	r0, r3, #4
 3525 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2000:src/keys.c    **** 	{
 3526              		.loc 1 2000 5 view .LVU1007
 3527 01dc 8D06     		lsls	r5, r1, #26
 3528 01de 05D4     		bmi	.L406
2000:src/keys.c    **** 	{
 3529              		.loc 1 2000 40 view .LVU1008
 3530 01e0 A3F15109 		sub	r9, r3, #81
2000:src/keys.c    **** 	{
 3531              		.loc 1 2000 23 view .LVU1009
 3532 01e4 B9F10A0F 		cmp	r9, #10
 3533 01e8 3FF658AF 		bhi	.L481
 3534              	.L406:
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3535              		.loc 1 2002 3 is_stmt 1 view .LVU1010
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3536              		.loc 1 2002 6 is_stmt 0 view .LVU1011
 3537 01ec 1106     		lsls	r1, r2, #24
 3538 01ee 3FF555AF 		bmi	.L481
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3539              		.loc 1 2002 18 view .LVU1012
 3540 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3541 01f4 002A     		cmp	r2, #0
 3542 01f6 7FF451AF 		bne	.L481
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3543              		.loc 1 2004 3 is_stmt 1 view .LVU1013
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3544              		.loc 1 2004 17 is_stmt 0 view .LVU1014
 3545 01fa 0AEB0003 		add	r3, r10, r0
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3546              		.loc 1 2004 6 view .LVU1015
 3547 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3548 0200 632B     		cmp	r3, #99
 3549 0202 7FF64BAF 		bls	.L481
2006:src/keys.c    **** 	}
 3550              		.loc 1 2006 3 is_stmt 1 view .LVU1016
2006:src/keys.c    **** 	}
 3551              		.loc 1 2006 10 is_stmt 0 view .LVU1017
 3552 0206 07F16400 		add	r0, r7, #100
 3553 020a 34E0     		b	.L483
 3554              	.LVL267:
 3555              	.L426:
2006:src/keys.c    **** 	}
 3556              		.loc 1 2006 10 view .LVU1018
ARM GAS  /tmp/cceyv6gL.s 			page 134


 3557              	.LBE477:
 3558              	.LBE476:
2118:src/keys.c    **** 		    base = RARG_SIG;
 3559              		.loc 1 2118 5 is_stmt 1 view .LVU1019
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3560              		.loc 1 2122 5 view .LVU1020
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3561              		.loc 1 2122 8 is_stmt 0 view .LVU1021
 3562 020c 8D2D     		cmp	r5, #141
 3563 020e 01D0     		beq	.L476
2126:src/keys.c    **** 		    base = RARG_FIX;
 3564              		.loc 1 2126 5 is_stmt 1 view .LVU1022
2126:src/keys.c    **** 		    base = RARG_FIX;
 3565              		.loc 1 2126 8 is_stmt 0 view .LVU1023
 3566 0210 8E2D     		cmp	r5, #142
 3567 0212 56D0     		beq	.L492
 3568              	.L476:
2146:src/keys.c    **** #else
 3569              		.loc 1 2146 3 is_stmt 1 view .LVU1024
2146:src/keys.c    **** #else
 3570              		.loc 1 2146 11 is_stmt 0 view .LVU1025
 3571 0214 8E23     		movs	r3, #142
 3572              	.LVL268:
 3573              	.L480:
2146:src/keys.c    **** #else
 3574              		.loc 1 2146 11 view .LVU1026
 3575 0216 E377     		strb	r3, [r4, #31]
2169:src/keys.c    **** 	case K_F:
 3576              		.loc 1 2169 2 is_stmt 1 view .LVU1027
 3577              	.L397:
2286:src/keys.c    **** 		break;
 3578              		.loc 1 2286 3 view .LVU1028
 3579 0218 0021     		movs	r1, #0
 3580 021a 0620     		movs	r0, #6
 3581              	.LVL269:
2286:src/keys.c    **** 		break;
 3582              		.loc 1 2286 3 is_stmt 0 view .LVU1029
 3583 021c FFF7FEFF 		bl	arg_storcl
 3584              	.LVL270:
2287:src/keys.c    **** 
 3585              		.loc 1 2287 3 is_stmt 1 view .LVU1030
2340:src/keys.c    **** }
 3586              		.loc 1 2340 9 is_stmt 0 view .LVU1031
 3587 0220 3320     		movs	r0, #51
2287:src/keys.c    **** 
 3588              		.loc 1 2287 3 view .LVU1032
 3589 0222 3CE7     		b	.L356
 3590              	.LVL271:
 3591              	.L363:
2078:src/keys.c    **** 
 3592              		.loc 1 2078 42 discriminator 4 view .LVU1033
 3593 0224 19F0800F 		tst	r9, #128
 3594 0228 13D0     		beq	.L362
 3595              	.L361:
 3596              	.LVL272:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3597              		.loc 1 2080 2 is_stmt 1 view .LVU1034
ARM GAS  /tmp/cceyv6gL.s 			page 135


2081:src/keys.c    **** 		reset_arg();
 3598              		.loc 1 2081 5 is_stmt 0 view .LVU1035
 3599 022a 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3600              		.loc 1 2080 4 view .LVU1036
 3601 022c 29F08006 		bic	r6, r9, #128
 3602              	.LVL273:
2081:src/keys.c    **** 		reset_arg();
 3603              		.loc 1 2081 2 is_stmt 1 view .LVU1037
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3604              		.loc 1 2076 61 is_stmt 0 view .LVU1038
 3605 0230 98BF     		it	ls
 3606 0232 4FF0010C 		movls	ip, #1
2081:src/keys.c    **** 		reset_arg();
 3607              		.loc 1 2081 5 view .LVU1039
 3608 0236 7FF61AAF 		bls	.L368
 3609 023a 2DE7     		b	.L388
 3610              	.L489:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 3611              		.loc 1 2116 3 is_stmt 1 view .LVU1040
 3612 023c 122F     		cmp	r7, #18
 3613 023e 00F00B81 		beq	.L438
 3614 0242 182F     		cmp	r7, #24
 3615 0244 02D0     		beq	.L440
 3616 0246 012F     		cmp	r7, #1
 3617 0248 7FF44CAF 		bne	.L379
 3618              	.L440:
 3619 024c 8E25     		movs	r5, #142
 3620              	.LVL274:
2133:src/keys.c    **** 		    break;
 3621              		.loc 1 2133 12 is_stmt 0 view .LVU1041
 3622 024e 0095     		str	r5, [sp]
 3623 0250 48E7     		b	.L379
 3624              	.LVL275:
 3625              	.L362:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3626              		.loc 1 2080 2 is_stmt 1 view .LVU1042
2081:src/keys.c    **** 		reset_arg();
 3627              		.loc 1 2081 2 view .LVU1043
2081:src/keys.c    **** 		reset_arg();
 3628              		.loc 1 2081 5 is_stmt 0 view .LVU1044
 3629 0252 8E2D     		cmp	r5, #142
 3630 0254 3FF620AF 		bhi	.L388
2109:src/keys.c    **** 		// row column shorthand addressing
 3631              		.loc 1 2109 2 is_stmt 1 view .LVU1045
2111:src/keys.c    **** 
 3632              		.loc 1 2111 3 view .LVU1046
 3633              	.LVL276:
 3634              	.LBB478:
 3635              	.LBI478:
 179:src/keys.c    **** {
 3636              		.loc 1 179 5 view .LVU1047
 3637              	.LBB479:
 181:src/keys.c    **** }
 3638              		.loc 1 181 2 view .LVU1048
 181:src/keys.c    **** }
 3639              		.loc 1 181 18 is_stmt 0 view .LVU1049
ARM GAS  /tmp/cceyv6gL.s 			page 136


 3640 0258 374B     		ldr	r3, .L500+12
 3641 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3642              		.loc 1 181 24 view .LVU1050
 3643 025e 03F0FC00 		and	r0, r3, #252
 3644              	.LVL277:
 181:src/keys.c    **** }
 3645              		.loc 1 181 24 view .LVU1051
 3646 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3647              		.loc 1 181 18 view .LVU1052
 3648 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3649              		.loc 1 181 24 view .LVU1053
 3650 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3651              		.loc 1 181 33 view .LVU1054
 3652 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3653              		.loc 1 181 12 view .LVU1055
 3654 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3655              		.loc 1 181 33 view .LVU1056
 3656 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3657              	.LBE479:
 3658              	.LBE478:
2111:src/keys.c    **** 
 3659              		.loc 1 2111 10 view .LVU1057
 3660 0274 3844     		add	r0, r0, r7
 3661              	.LVL278:
 3662              	.L483:
2341:src/keys.c    **** 
 3663              		.loc 1 2341 1 view .LVU1058
 3664 0276 03B0     		add	sp, sp, #12
 3665              		.cfi_remember_state
 3666              		.cfi_def_cfa_offset 36
 3667              		@ sp needed
 3668 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3669              		.cfi_restore 14
 3670              		.cfi_restore 11
 3671              		.cfi_restore 10
 3672              		.cfi_restore 9
 3673              		.cfi_restore 8
 3674              		.cfi_restore 7
 3675              		.cfi_restore 6
 3676              		.cfi_restore 5
 3677              		.cfi_restore 4
 3678              		.cfi_def_cfa_offset 0
 3679              	.LVL279:
2111:src/keys.c    **** 
 3680              		.loc 1 2111 10 view .LVU1059
 3681 027c FFF7FEBF 		b	arg_eval
 3682              	.LVL280:
 3683              	.L393:
 3684              		.cfi_restore_state
2246:src/keys.c    **** 			return arg_eval(n);
 3685              		.loc 1 2246 3 is_stmt 1 view .LVU1060
ARM GAS  /tmp/cceyv6gL.s 			page 137


2246:src/keys.c    **** 			return arg_eval(n);
 3686              		.loc 1 2246 7 is_stmt 0 view .LVU1061
 3687 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2246:src/keys.c    **** 			return arg_eval(n);
 3688              		.loc 1 2246 6 view .LVU1062
 3689 0282 5F06     		lsls	r7, r3, #25
 3690 0284 0AD4     		bmi	.L415
2246:src/keys.c    **** 			return arg_eval(n);
 3691              		.loc 1 2246 25 discriminator 1 view .LVU1063
 3692 0286 0121     		movs	r1, #1
 3693 0288 0320     		movs	r0, #3
 3694              	.LVL281:
2246:src/keys.c    **** 			return arg_eval(n);
 3695              		.loc 1 2246 25 discriminator 1 view .LVU1064
 3696 028a FFF7FEFF 		bl	arg_storcl
 3697              	.LVL282:
2246:src/keys.c    **** 			return arg_eval(n);
 3698              		.loc 1 2246 18 discriminator 1 view .LVU1065
 3699 028e 0028     		cmp	r0, #0
 3700 0290 7FF404AF 		bne	.L481
2246:src/keys.c    **** 			return arg_eval(n);
 3701              		.loc 1 2246 63 discriminator 2 view .LVU1066
 3702 0294 B8F1000F 		cmp	r8, #0
 3703 0298 3FF400AF 		beq	.L481
 3704              	.L415:
2247:src/keys.c    **** 		break;
 3705              		.loc 1 2247 4 is_stmt 1 view .LVU1067
2247:src/keys.c    **** 		break;
 3706              		.loc 1 2247 11 is_stmt 0 view .LVU1068
 3707 029c 3046     		mov	r0, r6
 3708 029e EAE7     		b	.L483
 3709              	.LVL283:
 3710              	.L376:
2093:src/keys.c    **** 	  case regT_idx:
 3711              		.loc 1 2093 6 is_stmt 1 view .LVU1069
2093:src/keys.c    **** 	  case regT_idx:
 3712              		.loc 1 2093 13 is_stmt 0 view .LVU1070
 3713 02a0 0320     		movs	r0, #3
 3714              	.LVL284:
 3715              	.L482:
2341:src/keys.c    **** 
 3716              		.loc 1 2341 1 view .LVU1071
 3717 02a2 03B0     		add	sp, sp, #12
 3718              		.cfi_remember_state
 3719              		.cfi_def_cfa_offset 36
 3720              		@ sp needed
 3721 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3722              		.cfi_restore 14
 3723              		.cfi_restore 11
 3724              		.cfi_restore 10
 3725              		.cfi_restore 9
 3726              		.cfi_restore 8
 3727              		.cfi_restore 7
 3728              		.cfi_restore 6
 3729              		.cfi_restore 5
 3730              		.cfi_restore 4
 3731              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cceyv6gL.s 			page 138


 3732              	.LVL285:
2091:src/keys.c    **** 	  case regZ_idx:
 3733              		.loc 1 2091 13 view .LVU1072
 3734 02a8 FFF7FEBF 		b	arg_digit
 3735              	.LVL286:
 3736              	.L377:
 3737              		.cfi_restore_state
2091:src/keys.c    **** 	  case regZ_idx:
 3738              		.loc 1 2091 6 is_stmt 1 view .LVU1073
2091:src/keys.c    **** 	  case regZ_idx:
 3739              		.loc 1 2091 13 is_stmt 0 view .LVU1074
 3740 02ac 0220     		movs	r0, #2
 3741              	.LVL287:
2091:src/keys.c    **** 	  case regZ_idx:
 3742              		.loc 1 2091 13 view .LVU1075
 3743 02ae F8E7     		b	.L482
 3744              	.LVL288:
 3745              	.L374:
2095:src/keys.c    **** 	  case 5:
 3746              		.loc 1 2095 6 is_stmt 1 view .LVU1076
2095:src/keys.c    **** 	  case 5:
 3747              		.loc 1 2095 13 is_stmt 0 view .LVU1077
 3748 02b0 0420     		movs	r0, #4
 3749              	.LVL289:
2095:src/keys.c    **** 	  case 5:
 3750              		.loc 1 2095 13 view .LVU1078
 3751 02b2 F6E7     		b	.L482
 3752              	.LVL290:
 3753              	.L491:
2140:src/keys.c    **** 		    base = RARG_SIG;
 3754              		.loc 1 2140 5 is_stmt 1 view .LVU1079
2140:src/keys.c    **** 		    base = RARG_SIG;
 3755              		.loc 1 2140 8 is_stmt 0 view .LVU1080
 3756 02b4 8E2D     		cmp	r5, #142
 3757 02b6 40F00B81 		bne	.L436
 3758 02ba 8D23     		movs	r3, #141
 3759 02bc 0093     		str	r3, [sp]
 3760              	.LVL291:
2141:src/keys.c    **** 		    break;
 3761              		.loc 1 2141 12 view .LVU1081
 3762 02be 1D46     		mov	r5, r3
 3763 02c0 10E7     		b	.L379
 3764              	.LVL292:
 3765              	.L492:
2141:src/keys.c    **** 		    break;
 3766              		.loc 1 2141 12 view .LVU1082
 3767 02c2 4D23     		movs	r3, #77
 3768 02c4 A7E7     		b	.L480
 3769              	.LVL293:
 3770              	.L398:
2315:src/keys.c    **** 			if (State2.dot)
 3771              		.loc 1 2315 3 is_stmt 1 view .LVU1083
2315:src/keys.c    **** 			if (State2.dot)
 3772              		.loc 1 2315 13 is_stmt 0 view .LVU1084
 3773 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2315:src/keys.c    **** 			if (State2.dot)
 3774              		.loc 1 2315 6 view .LVU1085
ARM GAS  /tmp/cceyv6gL.s 			page 139


 3775 02c8 002B     		cmp	r3, #0
 3776 02ca 40F0EC80 		bne	.L422
2316:src/keys.c    **** 				State2.dot = 0;
 3777              		.loc 1 2316 4 is_stmt 1 view .LVU1086
2316:src/keys.c    **** 				State2.dot = 0;
 3778              		.loc 1 2316 8 is_stmt 0 view .LVU1087
 3779 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2316:src/keys.c    **** 				State2.dot = 0;
 3780              		.loc 1 2316 7 view .LVU1088
 3781 02d0 13F04001 		ands	r1, r3, #64
 3782 02d4 40F0A080 		bne	.L423
2318:src/keys.c    **** 				State2.local = 0;
 3783              		.loc 1 2318 9 is_stmt 1 view .LVU1089
2318:src/keys.c    **** 				State2.local = 0;
 3784              		.loc 1 2318 13 is_stmt 0 view .LVU1090
 3785 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2318:src/keys.c    **** 				State2.local = 0;
 3786              		.loc 1 2318 12 view .LVU1091
 3787 02da 12F00100 		ands	r0, r2, #1
 3788              	.LVL294:
2318:src/keys.c    **** 				State2.local = 0;
 3789              		.loc 1 2318 12 view .LVU1092
 3790 02de 40F01181 		bne	.L493
2320:src/keys.c    **** 				State2.ind = 0;
 3791              		.loc 1 2320 9 is_stmt 1 view .LVU1093
2320:src/keys.c    **** 				State2.ind = 0;
 3792              		.loc 1 2320 12 is_stmt 0 view .LVU1094
 3793 02e2 1906     		lsls	r1, r3, #24
 3794 02e4 7FF5D8AE 		bpl	.L388
2321:src/keys.c    **** 			else
 3795              		.loc 1 2321 5 is_stmt 1 view .LVU1095
2321:src/keys.c    **** 			else
 3796              		.loc 1 2321 16 is_stmt 0 view .LVU1096
 3797 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3798 02ec 6375     		strb	r3, [r4, #21]
2340:src/keys.c    **** }
 3799              		.loc 1 2340 9 view .LVU1097
 3800 02ee 3320     		movs	r0, #51
 3801 02f0 D5E6     		b	.L356
 3802              	.LVL295:
 3803              	.L396:
2250:src/keys.c    **** 		break;
 3804              		.loc 1 2250 3 is_stmt 1 view .LVU1098
 3805 02f2 0121     		movs	r1, #1
 3806 02f4 0420     		movs	r0, #4
 3807              	.LVL296:
2250:src/keys.c    **** 		break;
 3808              		.loc 1 2250 3 is_stmt 0 view .LVU1099
 3809 02f6 FFF7FEFF 		bl	arg_storcl
 3810              	.LVL297:
2251:src/keys.c    **** #else
 3811              		.loc 1 2251 3 is_stmt 1 view .LVU1100
2340:src/keys.c    **** }
 3812              		.loc 1 2340 9 is_stmt 0 view .LVU1101
 3813 02fa 3320     		movs	r0, #51
2251:src/keys.c    **** #else
 3814              		.loc 1 2251 3 view .LVU1102
ARM GAS  /tmp/cceyv6gL.s 			page 140


 3815 02fc CFE6     		b	.L356
 3816              	.LVL298:
 3817              	.L395:
2290:src/keys.c    **** 		break;
 3818              		.loc 1 2290 3 is_stmt 1 view .LVU1103
 3819 02fe 0021     		movs	r1, #0
 3820 0300 0520     		movs	r0, #5
 3821              	.LVL299:
2290:src/keys.c    **** 		break;
 3822              		.loc 1 2290 3 is_stmt 0 view .LVU1104
 3823 0302 FFF7FEFF 		bl	arg_storcl
 3824              	.LVL300:
2291:src/keys.c    **** 
 3825              		.loc 1 2291 3 is_stmt 1 view .LVU1105
2340:src/keys.c    **** }
 3826              		.loc 1 2340 9 is_stmt 0 view .LVU1106
 3827 0306 3320     		movs	r0, #51
2291:src/keys.c    **** 
 3828              		.loc 1 2291 3 view .LVU1107
 3829 0308 C9E6     		b	.L356
 3830              	.LVL301:
 3831              	.L394:
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3832              		.loc 1 2193 4 is_stmt 1 view .LVU1108
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3833              		.loc 1 2193 8 is_stmt 0 view .LVU1109
 3834 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3835              		.loc 1 2193 7 view .LVU1110
 3836 030c 9507     		lsls	r5, r2, #30
 3837 030e 7FF557AF 		bpl	.L400
2194:src/keys.c    **** 	case K51:       // X
 3838              		.loc 1 2194 6 is_stmt 1 view .LVU1111
2194:src/keys.c    **** 	case K51:       // X
 3839              		.loc 1 2194 13 is_stmt 0 view .LVU1112
 3840 0312 0320     		movs	r0, #3
 3841              	.LVL302:
 3842              	.L484:
2341:src/keys.c    **** 
 3843              		.loc 1 2341 1 view .LVU1113
 3844 0314 03B0     		add	sp, sp, #12
 3845              		.cfi_remember_state
 3846              		.cfi_def_cfa_offset 36
 3847              		@ sp needed
 3848 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3849              		.cfi_restore 14
 3850              		.cfi_restore 11
 3851              		.cfi_restore 10
 3852              		.cfi_restore 9
 3853              		.cfi_restore 8
 3854              		.cfi_restore 7
 3855              		.cfi_restore 6
 3856              		.cfi_restore 5
 3857              		.cfi_restore 4
 3858              		.cfi_def_cfa_offset 0
 3859              	.LVL303:
2203:src/keys.c    **** #else
ARM GAS  /tmp/cceyv6gL.s 			page 141


 3860              		.loc 1 2203 13 view .LVU1114
 3861 031a FFF7FEBF 		b	process_arg_shuffle
 3862              	.LVL304:
 3863              	.L392:
 3864              		.cfi_restore_state
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3865              		.loc 1 2196 4 is_stmt 1 view .LVU1115
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3866              		.loc 1 2196 8 is_stmt 0 view .LVU1116
 3867 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3868              		.loc 1 2196 7 view .LVU1117
 3869 0320 9007     		lsls	r0, r2, #30
 3870              	.LVL305:
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3871              		.loc 1 2196 7 view .LVU1118
 3872 0322 7FF54DAF 		bpl	.L400
2197:src/keys.c    **** 	case K52:	// Y
 3873              		.loc 1 2197 6 is_stmt 1 view .LVU1119
2197:src/keys.c    **** 	case K52:	// Y
 3874              		.loc 1 2197 13 is_stmt 0 view .LVU1120
 3875 0326 0020     		movs	r0, #0
 3876 0328 F4E7     		b	.L484
 3877              	.L501:
 3878 032a 00BF     		.align	2
 3879              	.L500:
 3880 032c 00000000 		.word	StateWhileOn
 3881 0330 00000000 		.word	.LANCHOR6
 3882 0334 00000000 		.word	.LANCHOR5
 3883 0338 ABAAAAAA 		.word	-1431655765
 3884 033c 00000000 		.word	argcmds
 3885              	.LVL306:
 3886              	.L390:
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3887              		.loc 1 2202 4 is_stmt 1 view .LVU1121
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3888              		.loc 1 2202 8 is_stmt 0 view .LVU1122
 3889 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3890              		.loc 1 2202 7 view .LVU1123
 3891 0342 9207     		lsls	r2, r2, #30
 3892 0344 7FF53CAF 		bpl	.L400
2203:src/keys.c    **** #else
 3893              		.loc 1 2203 6 is_stmt 1 view .LVU1124
2203:src/keys.c    **** #else
 3894              		.loc 1 2203 13 is_stmt 0 view .LVU1125
 3895 0348 0220     		movs	r0, #2
 3896              	.LVL307:
2203:src/keys.c    **** #else
 3897              		.loc 1 2203 13 view .LVU1126
 3898 034a E3E7     		b	.L484
 3899              	.LVL308:
 3900              	.L389:
2239:src/keys.c    **** 			reset_arg();
 3901              		.loc 1 2239 3 is_stmt 1 view .LVU1127
2239:src/keys.c    **** 			reset_arg();
 3902              		.loc 1 2239 6 is_stmt 0 view .LVU1128
ARM GAS  /tmp/cceyv6gL.s 			page 142


 3903 034c 009B     		ldr	r3, [sp]
 3904 034e 212B     		cmp	r3, #33
 3905 0350 00F0B980 		beq	.L412
2239:src/keys.c    **** 			reset_arg();
 3906              		.loc 1 2239 25 discriminator 1 view .LVU1129
 3907 0354 732B     		cmp	r3, #115
 3908 0356 00F0B680 		beq	.L412
2243:src/keys.c    **** 		break;
 3909              		.loc 1 2243 3 is_stmt 1 view .LVU1130
 3910 035a 0121     		movs	r1, #1
 3911 035c 0220     		movs	r0, #2
 3912              	.LVL309:
2243:src/keys.c    **** 		break;
 3913              		.loc 1 2243 3 is_stmt 0 view .LVU1131
 3914 035e FFF7FEFF 		bl	arg_storcl
 3915              	.LVL310:
2244:src/keys.c    **** 	case K44:		// multiply
 3916              		.loc 1 2244 3 is_stmt 1 view .LVU1132
2340:src/keys.c    **** }
 3917              		.loc 1 2340 9 is_stmt 0 view .LVU1133
 3918 0362 3320     		movs	r0, #51
2244:src/keys.c    **** 	case K44:		// multiply
 3919              		.loc 1 2244 3 view .LVU1134
 3920 0364 9BE6     		b	.L356
 3921              	.LVL311:
 3922              	.L387:
2231:src/keys.c    **** 
 3923              		.loc 1 2231 3 is_stmt 1 view .LVU1135
 3924              	.LBB480:
 3925              	.LBI480:
2038:src/keys.c    **** 
 3926              		.loc 1 2038 12 view .LVU1136
 3927              	.LBB481:
2040:src/keys.c    **** 		// Only valid at beginning of entry
 3928              		.loc 1 2040 2 view .LVU1137
2040:src/keys.c    **** 		// Only valid at beginning of entry
 3929              		.loc 1 2040 5 is_stmt 0 view .LVU1138
 3930 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3931 0368 002A     		cmp	r2, #0
 3932 036a 7FF497AE 		bne	.L481
2042:src/keys.c    **** 			// '..' or ENTER '.' = X
 3933              		.loc 1 2042 3 is_stmt 1 view .LVU1139
2042:src/keys.c    **** 			// '..' or ENTER '.' = X
 3934              		.loc 1 2042 6 is_stmt 0 view .LVU1140
 3935 036e 11F4A03F 		tst	r1, #81920
 3936 0372 40F0C180 		bne	.L494
2047:src/keys.c    **** 			// local register or flag select
 3937              		.loc 1 2047 3 is_stmt 1 view .LVU1141
2047:src/keys.c    **** 			// local register or flag select
 3938              		.loc 1 2047 20 is_stmt 0 view .LVU1142
 3939 0376 009B     		ldr	r3, [sp]
 3940 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3941 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2047:src/keys.c    **** 			// local register or flag select
 3942              		.loc 1 2047 6 view .LVU1143
 3943 037e 1A07     		lsls	r2, r3, #28
 3944 0380 00F1A880 		bmi	.L408
ARM GAS  /tmp/cceyv6gL.s 			page 143


2047:src/keys.c    **** 			// local register or flag select
 3945              		.loc 1 2047 27 view .LVU1144
 3946 0384 94F91530 		ldrsb	r3, [r4, #21]
 3947 0388 002B     		cmp	r3, #0
 3948 038a C0F2A380 		blt	.L408
2051:src/keys.c    **** 			// Special GTO . sequence
 3949              		.loc 1 2051 8 is_stmt 1 view .LVU1145
2051:src/keys.c    **** 			// Special GTO . sequence
 3950              		.loc 1 2051 29 is_stmt 0 view .LVU1146
 3951 038e 009B     		ldr	r3, [sp]
 3952 0390 A3F14409 		sub	r9, r3, #68
2051:src/keys.c    **** 			// Special GTO . sequence
 3953              		.loc 1 2051 11 view .LVU1147
 3954 0394 B9F1010F 		cmp	r9, #1
 3955 0398 3FF680AE 		bhi	.L481
2053:src/keys.c    **** 				State2.gtodot = 1;
 3956              		.loc 1 2053 4 is_stmt 1 view .LVU1148
2054:src/keys.c    **** 				reset_arg();
 3957              		.loc 1 2054 5 view .LVU1149
2054:src/keys.c    **** 				reset_arg();
 3958              		.loc 1 2054 19 is_stmt 0 view .LVU1150
 3959 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3960 039e 43F00103 		orr	r3, r3, #1
 3961 03a2 6375     		strb	r3, [r4, #21]
2055:src/keys.c    **** 			}
 3962              		.loc 1 2055 5 is_stmt 1 view .LVU1151
 3963 03a4 FFF7FEFF 		bl	reset_arg
 3964              	.LVL312:
2059:src/keys.c    **** }
 3965              		.loc 1 2059 9 is_stmt 0 view .LVU1152
 3966 03a8 3320     		movs	r0, #51
 3967 03aa 78E6     		b	.L356
 3968              	.LVL313:
 3969              	.L386:
2059:src/keys.c    **** }
 3970              		.loc 1 2059 9 view .LVU1153
 3971              	.LBE481:
 3972              	.LBE480:
2235:src/keys.c    **** 			return arg_eval(n);
 3973              		.loc 1 2235 3 is_stmt 1 view .LVU1154
2235:src/keys.c    **** 			return arg_eval(n);
 3974              		.loc 1 2235 7 is_stmt 0 view .LVU1155
 3975 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2235:src/keys.c    **** 			return arg_eval(n);
 3976              		.loc 1 2235 6 view .LVU1156
 3977 03ae 5B06     		lsls	r3, r3, #25
 3978 03b0 3FF574AF 		bmi	.L415
2235:src/keys.c    **** 			return arg_eval(n);
 3979              		.loc 1 2235 25 discriminator 1 view .LVU1157
 3980 03b4 0121     		movs	r1, #1
 3981 03b6 0846     		mov	r0, r1
 3982              	.LVL314:
2235:src/keys.c    **** 			return arg_eval(n);
 3983              		.loc 1 2235 25 discriminator 1 view .LVU1158
 3984 03b8 FFF7FEFF 		bl	arg_storcl
 3985              	.LVL315:
2235:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/cceyv6gL.s 			page 144


 3986              		.loc 1 2235 18 discriminator 1 view .LVU1159
 3987 03bc 0028     		cmp	r0, #0
 3988 03be 7FF46DAE 		bne	.L481
2246:src/keys.c    **** 			return arg_eval(n);
 3989              		.loc 1 2246 63 view .LVU1160
 3990 03c2 B8F1000F 		cmp	r8, #0
 3991 03c6 3FF469AE 		beq	.L481
 3992 03ca 67E7     		b	.L415
 3993              	.LVL316:
 3994              	.L385:
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3995              		.loc 1 2171 3 is_stmt 1 view .LVU1161
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3996              		.loc 1 2171 6 is_stmt 0 view .LVU1162
 3997 03cc BCF1000F 		cmp	ip, #0
 3998 03d0 3FF464AE 		beq	.L481
2172:src/keys.c    **** 		break;
 3999              		.loc 1 2172 4 is_stmt 1 view .LVU1163
 4000              	.LVL317:
 4001              	.LBB484:
 4002              	.LBI484:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4003              		.loc 1 104 20 view .LVU1164
 4004              	.LBB485:
 105:src/keys.c    **** 	State2.shifts = shift;
 4005              		.loc 1 105 2 view .LVU1165
 4006              	.LBB486:
 4007              	.LBI486:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4008              		.loc 1 96 13 view .LVU1166
 4009              	.LBB487:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4010              		.loc 1 97 2 view .LVU1167
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4011              		.loc 1 97 18 is_stmt 0 view .LVU1168
 4012 03d4 FFF7FEFF 		bl	shift_down
 4013              	.LVL318:
  98:src/keys.c    **** }
 4014              		.loc 1 98 2 is_stmt 1 view .LVU1169
 4015              	.LBE487:
 4016              	.LBE486:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4017              		.loc 1 106 2 view .LVU1170
 4018              	.LBE485:
 4019              	.LBE484:
2172:src/keys.c    **** 		break;
 4020              		.loc 1 2172 4 is_stmt 0 view .LVU1171
 4021 03d8 019B     		ldr	r3, [sp, #4]
 4022 03da B3F1010A 		subs	r10, r3, #1
 4023 03de 18BF     		it	ne
 4024 03e0 4FF0010A 		movne	r10, #1
 4025 03e4 84F810A0 		strb	r10, [r4, #16]
 4026              	.LBB490:
 4027              	.LBB488:
 108:src/keys.c    **** }
 4028              		.loc 1 108 2 is_stmt 1 view .LVU1172
 4029              	.LBE488:
ARM GAS  /tmp/cceyv6gL.s 			page 145


 4030              	.LBE490:
2340:src/keys.c    **** }
 4031              		.loc 1 2340 9 is_stmt 0 view .LVU1173
 4032 03e8 3320     		movs	r0, #51
 4033              	.LBB491:
 4034              	.LBB489:
 108:src/keys.c    **** }
 4035              		.loc 1 108 9 view .LVU1174
 4036 03ea 58E6     		b	.L356
 4037              	.LVL319:
 4038              	.L384:
 108:src/keys.c    **** }
 4039              		.loc 1 108 9 view .LVU1175
 4040              	.LBE489:
 4041              	.LBE491:
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4042              		.loc 1 2176 3 is_stmt 1 view .LVU1176
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4043              		.loc 1 2176 7 is_stmt 0 view .LVU1177
 4044 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4045              		.loc 1 2176 6 view .LVU1178
 4046 03ee 5706     		lsls	r7, r2, #25
 4047 03f0 3FF554AE 		bmi	.L481
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4048              		.loc 1 2176 35 discriminator 1 view .LVU1179
 4049 03f4 009B     		ldr	r3, [sp]
 4050 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4051 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4052              		.loc 1 2176 19 discriminator 1 view .LVU1180
 4053 03fe DE07     		lsls	r6, r3, #31
 4054              	.LVL320:
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4055              		.loc 1 2176 19 discriminator 1 view .LVU1181
 4056 0400 7FF54CAE 		bpl	.L481
2177:src/keys.c    **** 			if (! stack_reg)
 4057              		.loc 1 2177 4 is_stmt 1 view .LVU1182
2177:src/keys.c    **** 			if (! stack_reg)
 4058              		.loc 1 2177 17 is_stmt 0 view .LVU1183
 4059 0404 D343     		mvns	r3, r2
 4060 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2177:src/keys.c    **** 			if (! stack_reg)
 4061              		.loc 1 2177 15 view .LVU1184
 4062 040a 63F3C712 		bfi	r2, r3, #7, #1
 4063 040e 6275     		strb	r2, [r4, #21]
2178:src/keys.c    **** 				State2.dot = 0;
 4064              		.loc 1 2178 4 is_stmt 1 view .LVU1185
2178:src/keys.c    **** 				State2.dot = 0;
 4065              		.loc 1 2178 7 is_stmt 0 view .LVU1186
 4066 0410 B8F1000F 		cmp	r8, #0
 4067 0414 7FF442AE 		bne	.L481
 4068              	.L423:
2179:src/keys.c    **** 		}
 4069              		.loc 1 2179 5 is_stmt 1 view .LVU1187
2179:src/keys.c    **** 		}
 4070              		.loc 1 2179 16 is_stmt 0 view .LVU1188
ARM GAS  /tmp/cceyv6gL.s 			page 146


 4071 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4072 041a 6FF38613 		bfc	r3, #6, #1
 4073 041e 6375     		strb	r3, [r4, #21]
2340:src/keys.c    **** }
 4074              		.loc 1 2340 9 view .LVU1189
 4075 0420 3320     		movs	r0, #51
 4076              	.LVL321:
2340:src/keys.c    **** }
 4077              		.loc 1 2340 9 view .LVU1190
 4078 0422 3CE6     		b	.L356
 4079              	.LVL322:
 4080              	.L382:
2184:src/keys.c    **** 			break;
 4081              		.loc 1 2184 3 is_stmt 1 view .LVU1191
2184:src/keys.c    **** 			break;
 4082              		.loc 1 2184 18 is_stmt 0 view .LVU1192
 4083 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2184:src/keys.c    **** 			break;
 4084              		.loc 1 2184 6 view .LVU1193
 4085 0426 13F0C00F 		tst	r3, #192
 4086 042a 7FF437AE 		bne	.L481
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
 4087              		.loc 1 2186 3 is_stmt 1 view .LVU1194
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
 4088              		.loc 1 2186 6 is_stmt 0 view .LVU1195
 4089 042e 009B     		ldr	r3, [sp]
 4090 0430 032B     		cmp	r3, #3
 4091 0432 5DD0     		beq	.L495
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4092              		.loc 1 2188 8 is_stmt 1 view .LVU1196
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4093              		.loc 1 2188 11 is_stmt 0 view .LVU1197
 4094 0434 009B     		ldr	r3, [sp]
 4095 0436 0A2B     		cmp	r3, #10
 4096 0438 7FF430AE 		bne	.L481
2189:src/keys.c    **** 		break;
 4097              		.loc 1 2189 4 is_stmt 1 view .LVU1198
2189:src/keys.c    **** 		break;
 4098              		.loc 1 2189 12 is_stmt 0 view .LVU1199
 4099 043c 7823     		movs	r3, #120
 4100 043e E377     		strb	r3, [r4, #31]
2340:src/keys.c    **** }
 4101              		.loc 1 2340 9 view .LVU1200
 4102 0440 3320     		movs	r0, #51
 4103              	.LVL323:
2340:src/keys.c    **** }
 4104              		.loc 1 2340 9 view .LVU1201
 4105 0442 2CE6     		b	.L356
 4106              	.LVL324:
 4107              	.L399:
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4108              		.loc 1 2294 3 is_stmt 1 view .LVU1202
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4109              		.loc 1 2294 6 is_stmt 0 view .LVU1203
 4110 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4111 0446 4AB1     		cbz	r2, .L496
2308:src/keys.c    **** 			return arg_eval(State2.digval);
ARM GAS  /tmp/cceyv6gL.s 			page 147


 4112              		.loc 1 2308 10 is_stmt 1 view .LVU1204
2309:src/keys.c    **** 		else if (stack_reg)
 4113              		.loc 1 2309 4 view .LVU1205
2309:src/keys.c    **** 		else if (stack_reg)
 4114              		.loc 1 2309 11 is_stmt 0 view .LVU1206
 4115 0448 2089     		ldrh	r0, [r4, #8]
 4116              	.LVL325:
2309:src/keys.c    **** 		else if (stack_reg)
 4117              		.loc 1 2309 11 view .LVU1207
 4118 044a 14E7     		b	.L483
 4119              	.LVL326:
 4120              	.L391:
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4121              		.loc 1 2199 4 is_stmt 1 view .LVU1208
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4122              		.loc 1 2199 8 is_stmt 0 view .LVU1209
 4123 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4124              		.loc 1 2199 7 view .LVU1210
 4125 044e 9107     		lsls	r1, r2, #30
 4126 0450 7FF5B6AE 		bpl	.L400
2200:src/keys.c    **** 	case K53:       // Z
 4127              		.loc 1 2200 6 is_stmt 1 view .LVU1211
2200:src/keys.c    **** 	case K53:       // Z
 4128              		.loc 1 2200 13 is_stmt 0 view .LVU1212
 4129 0454 0120     		movs	r0, #1
 4130              	.LVL327:
2200:src/keys.c    **** 	case K53:       // Z
 4131              		.loc 1 2200 13 view .LVU1213
 4132 0456 5DE7     		b	.L484
 4133              	.LVL328:
 4134              	.L438:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 4135              		.loc 1 2116 3 view .LVU1214
 4136 0458 8D23     		movs	r3, #141
 4137              	.LVL329:
2146:src/keys.c    **** #else
 4138              		.loc 1 2146 3 is_stmt 1 view .LVU1215
 4139 045a DCE6     		b	.L480
 4140              	.L496:
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4141              		.loc 1 2294 43 is_stmt 0 discriminator 1 view .LVU1216
 4142 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4143 045e 12F0C00F 		tst	r2, #192
 4144 0462 13D1     		bne	.L417
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4145              		.loc 1 2295 4 is_stmt 1 view .LVU1217
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4146              		.loc 1 2295 21 is_stmt 0 view .LVU1218
 4147 0464 009B     		ldr	r3, [sp]
 4148 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4149 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4150              		.loc 1 2295 7 view .LVU1219
 4151 046c 9E06     		lsls	r6, r3, #26
 4152              	.LVL330:
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
ARM GAS  /tmp/cceyv6gL.s 			page 148


 4153              		.loc 1 2295 7 view .LVU1220
 4154 046e 4ED4     		bmi	.L497
2300:src/keys.c    **** 				reset_arg();
 4155              		.loc 1 2300 11 is_stmt 1 view .LVU1221
2300:src/keys.c    **** 				reset_arg();
 4156              		.loc 1 2300 14 is_stmt 0 view .LVU1222
 4157 0470 0099     		ldr	r1, [sp]
 4158 0472 4E29     		cmp	r1, #78
 4159 0474 5DD0     		beq	.L498
2303:src/keys.c    **** 				reset_arg();
 4160              		.loc 1 2303 11 is_stmt 1 view .LVU1223
2303:src/keys.c    **** 				reset_arg();
 4161              		.loc 1 2303 14 is_stmt 0 view .LVU1224
 4162 0476 0099     		ldr	r1, [sp]
 4163 0478 4F29     		cmp	r1, #79
 4164 047a 5FD0     		beq	.L499
2306:src/keys.c    **** 				State2.dot = 1;
 4165              		.loc 1 2306 11 is_stmt 1 view .LVU1225
2306:src/keys.c    **** 				State2.dot = 1;
 4166              		.loc 1 2306 14 is_stmt 0 view .LVU1226
 4167 047c 5807     		lsls	r0, r3, #29
 4168              	.LVL331:
2306:src/keys.c    **** 				State2.dot = 1;
 4169              		.loc 1 2306 14 view .LVU1227
 4170 047e 7FF50DAE 		bpl	.L481
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4171              		.loc 1 2307 5 is_stmt 1 view .LVU1228
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4172              		.loc 1 2307 16 is_stmt 0 view .LVU1229
 4173 0482 42F04002 		orr	r2, r2, #64
 4174 0486 6275     		strb	r2, [r4, #21]
2340:src/keys.c    **** }
 4175              		.loc 1 2340 9 view .LVU1230
 4176 0488 3320     		movs	r0, #51
 4177 048a 08E6     		b	.L356
 4178              	.LVL332:
 4179              	.L417:
2308:src/keys.c    **** 			return arg_eval(State2.digval);
 4180              		.loc 1 2308 10 is_stmt 1 view .LVU1231
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4181              		.loc 1 2310 8 view .LVU1232
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4182              		.loc 1 2310 11 is_stmt 0 view .LVU1233
 4183 048c B8F1000F 		cmp	r8, #0
 4184 0490 3FF404AE 		beq	.L481
2311:src/keys.c    **** 		break;
 4185              		.loc 1 2311 4 is_stmt 1 view .LVU1234
2311:src/keys.c    **** 		break;
 4186              		.loc 1 2311 27 is_stmt 0 view .LVU1235
 4187 0494 C2F38013 		ubfx	r3, r2, #6, #1
2311:src/keys.c    **** 		break;
 4188              		.loc 1 2311 19 view .LVU1236
 4189 0498 C3F10103 		rsb	r3, r3, #1
2311:src/keys.c    **** 		break;
 4190              		.loc 1 2311 15 view .LVU1237
 4191 049c 63F38612 		bfi	r2, r3, #6, #1
 4192 04a0 6275     		strb	r2, [r4, #21]
ARM GAS  /tmp/cceyv6gL.s 			page 149


2340:src/keys.c    **** }
 4193              		.loc 1 2340 9 view .LVU1238
 4194 04a2 3320     		movs	r0, #51
 4195              	.LVL333:
2340:src/keys.c    **** }
 4196              		.loc 1 2340 9 view .LVU1239
 4197 04a4 FBE5     		b	.L356
 4198              	.LVL334:
 4199              	.L422:
2326:src/keys.c    **** 			if (State2.shuffle)
 4200              		.loc 1 2326 4 is_stmt 1 view .LVU1240
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4201              		.loc 1 2327 8 is_stmt 0 view .LVU1241
 4202 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2326:src/keys.c    **** 			if (State2.shuffle)
 4203              		.loc 1 2326 4 view .LVU1242
 4204 04a8 013B     		subs	r3, r3, #1
 4205 04aa DBB2     		uxtb	r3, r3
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4206              		.loc 1 2327 7 view .LVU1243
 4207 04ac 9207     		lsls	r2, r2, #30
2326:src/keys.c    **** 			if (State2.shuffle)
 4208              		.loc 1 2326 4 view .LVU1244
 4209 04ae E372     		strb	r3, [r4, #11]
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4210              		.loc 1 2327 4 is_stmt 1 view .LVU1245
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4211              		.loc 1 2327 7 is_stmt 0 view .LVU1246
 4212 04b0 16D5     		bpl	.L425
2328:src/keys.c    **** 			else
 4213              		.loc 1 2328 5 is_stmt 1 view .LVU1247
2328:src/keys.c    **** 			else
 4214              		.loc 1 2328 19 is_stmt 0 view .LVU1248
 4215 04b2 2289     		ldrh	r2, [r4, #8]
2328:src/keys.c    **** 			else
 4216              		.loc 1 2328 46 view .LVU1249
 4217 04b4 5B00     		lsls	r3, r3, #1
2328:src/keys.c    **** 			else
 4218              		.loc 1 2328 26 view .LVU1250
 4219 04b6 0321     		movs	r1, #3
 4220 04b8 01FA03F3 		lsl	r3, r1, r3
2328:src/keys.c    **** 			else
 4221              		.loc 1 2328 19 view .LVU1251
 4222 04bc 22EA0303 		bic	r3, r2, r3
 4223 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2340:src/keys.c    **** }
 4224              		.loc 1 2340 9 view .LVU1252
 4225 04c2 3320     		movs	r0, #51
 4226              	.LVL335:
2340:src/keys.c    **** }
 4227              		.loc 1 2340 9 view .LVU1253
 4228 04c4 EBE5     		b	.L356
 4229              	.LVL336:
 4230              	.L412:
2240:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4231              		.loc 1 2240 4 is_stmt 1 view .LVU1254
 4232 04c6 FFF7FEFF 		bl	reset_arg
ARM GAS  /tmp/cceyv6gL.s 			page 150


 4233              	.LVL337:
2241:src/keys.c    **** 		}
 4234              		.loc 1 2241 4 view .LVU1255
2241:src/keys.c    **** 		}
 4235              		.loc 1 2241 11 is_stmt 0 view .LVU1256
 4236 04ca 40F27510 		movw	r0, #373
 4237 04ce E6E5     		b	.L356
 4238              	.LVL338:
 4239              	.L436:
2241:src/keys.c    **** 		}
 4240              		.loc 1 2241 11 view .LVU1257
 4241 04d0 8E25     		movs	r5, #142
 4242              	.LVL339:
2241:src/keys.c    **** 		}
 4243              		.loc 1 2241 11 view .LVU1258
 4244 04d2 07E6     		b	.L379
 4245              	.LVL340:
 4246              	.L408:
 4247              	.LBB492:
 4248              	.LBB482:
2049:src/keys.c    **** 		}
 4249              		.loc 1 2049 4 is_stmt 1 view .LVU1259
2049:src/keys.c    **** 		}
 4250              		.loc 1 2049 17 is_stmt 0 view .LVU1260
 4251 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4252 04d6 43F00103 		orr	r3, r3, #1
 4253 04da A375     		strb	r3, [r4, #22]
2059:src/keys.c    **** }
 4254              		.loc 1 2059 9 view .LVU1261
 4255 04dc 3320     		movs	r0, #51
 4256              	.LVL341:
2049:src/keys.c    **** 		}
 4257              		.loc 1 2049 17 view .LVU1262
 4258 04de DEE5     		b	.L356
 4259              	.LVL342:
 4260              	.L425:
2049:src/keys.c    **** 		}
 4261              		.loc 1 2049 17 view .LVU1263
 4262              	.LBE482:
 4263              	.LBE492:
2330:src/keys.c    **** 		}
 4264              		.loc 1 2330 5 is_stmt 1 view .LVU1264
2330:src/keys.c    **** 		}
 4265              		.loc 1 2330 19 is_stmt 0 view .LVU1265
 4266 04e0 2389     		ldrh	r3, [r4, #8]
 4267 04e2 1A4A     		ldr	r2, .L502
 4268 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4269 04e8 DB08     		lsrs	r3, r3, #3
 4270 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2340:src/keys.c    **** }
 4271              		.loc 1 2340 9 view .LVU1266
 4272 04ec 3320     		movs	r0, #51
 4273              	.LVL343:
2340:src/keys.c    **** }
 4274              		.loc 1 2340 9 view .LVU1267
 4275 04ee D6E5     		b	.L356
 4276              	.LVL344:
ARM GAS  /tmp/cceyv6gL.s 			page 151


 4277              	.L495:
2187:src/keys.c    **** 		else if (base == RARG_RCL)
 4278              		.loc 1 2187 4 is_stmt 1 view .LVU1268
2187:src/keys.c    **** 		else if (base == RARG_RCL)
 4279              		.loc 1 2187 12 is_stmt 0 view .LVU1269
 4280 04f0 7723     		movs	r3, #119
 4281 04f2 E377     		strb	r3, [r4, #31]
2340:src/keys.c    **** }
 4282              		.loc 1 2340 9 view .LVU1270
 4283 04f4 3320     		movs	r0, #51
 4284              	.LVL345:
2340:src/keys.c    **** }
 4285              		.loc 1 2340 9 view .LVU1271
 4286 04f6 D2E5     		b	.L356
 4287              	.LVL346:
 4288              	.L494:
 4289              	.LBB493:
 4290              	.LBB483:
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4291              		.loc 1 2044 4 is_stmt 1 view .LVU1272
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4292              		.loc 1 2044 17 is_stmt 0 view .LVU1273
 4293 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4294 04fa 62F30003 		bfi	r3, r2, #0, #1
2045:src/keys.c    **** 		}
 4295              		.loc 1 2045 11 view .LVU1274
 4296 04fe 6420     		movs	r0, #100
 4297              	.LVL347:
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4298              		.loc 1 2044 17 view .LVU1275
 4299 0500 A375     		strb	r3, [r4, #22]
2045:src/keys.c    **** 		}
 4300              		.loc 1 2045 4 is_stmt 1 view .LVU1276
 4301 0502 B8E6     		b	.L483
 4302              	.L493:
2045:src/keys.c    **** 		}
 4303              		.loc 1 2045 4 is_stmt 0 view .LVU1277
 4304              	.LBE483:
 4305              	.LBE493:
2319:src/keys.c    **** 			else if (State2.ind)
 4306              		.loc 1 2319 5 is_stmt 1 view .LVU1278
2319:src/keys.c    **** 			else if (State2.ind)
 4307              		.loc 1 2319 18 is_stmt 0 view .LVU1279
 4308 0504 61F30002 		bfi	r2, r1, #0, #1
 4309 0508 A275     		strb	r2, [r4, #22]
2340:src/keys.c    **** }
 4310              		.loc 1 2340 9 view .LVU1280
 4311 050a 3320     		movs	r0, #51
 4312 050c C7E5     		b	.L356
 4313              	.LVL348:
 4314              	.L497:
2296:src/keys.c    **** 				State2.multi = 1;
 4315              		.loc 1 2296 5 is_stmt 1 view .LVU1281
 4316              	.LBB494:
 4317              	.LBI494:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4318              		.loc 1 552 13 view .LVU1282
ARM GAS  /tmp/cceyv6gL.s 			page 152


 4319              	.LBB495:
 553:src/keys.c    **** 		return;
 4320              		.loc 1 553 2 view .LVU1283
 553:src/keys.c    **** 		return;
 4321              		.loc 1 553 6 is_stmt 0 view .LVU1284
 4322 050e FFF7FEFF 		bl	is_bad_cmdline
 4323              	.LVL349:
 553:src/keys.c    **** 		return;
 4324              		.loc 1 553 5 view .LVU1285
 4325 0512 20B9     		cbnz	r0, .L419
 4326              	.LBE495:
 4327              	.LBE494:
2296:src/keys.c    **** 				State2.multi = 1;
 4328              		.loc 1 2296 31 view .LVU1286
 4329 0514 A5F14200 		sub	r0, r5, #66
 4330              	.LBB497:
 4331              	.LBB496:
 4332 0518 C0B2     		uxtb	r0, r0
 4333 051a FFF7FEFF 		bl	init_arg.part.0
 4334              	.LVL350:
 4335              	.L419:
2296:src/keys.c    **** 				State2.multi = 1;
 4336              		.loc 1 2296 31 view .LVU1287
 4337              	.LBE496:
 4338              	.LBE497:
2297:src/keys.c    **** 				State2.alphashift = 0;
 4339              		.loc 1 2297 5 is_stmt 1 view .LVU1288
2298:src/keys.c    **** 				State2.rarg = 0;
 4340              		.loc 1 2298 5 view .LVU1289
2299:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4341              		.loc 1 2299 5 view .LVU1290
2297:src/keys.c    **** 				State2.alphashift = 0;
 4342              		.loc 1 2297 18 is_stmt 0 view .LVU1291
 4343 051e 6369     		ldr	r3, [r4, #20]
 4344 0520 23F44013 		bic	r3, r3, #3145728
 4345 0524 23F40063 		bic	r3, r3, #2048
 4346 0528 43F40063 		orr	r3, r3, #2048
 4347 052c 6361     		str	r3, [r4, #20]
2340:src/keys.c    **** }
 4348              		.loc 1 2340 9 view .LVU1292
 4349 052e 3320     		movs	r0, #51
 4350 0530 B5E5     		b	.L356
 4351              	.LVL351:
 4352              	.L498:
2301:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4353              		.loc 1 2301 5 is_stmt 1 view .LVU1293
 4354 0532 FFF7FEFF 		bl	reset_arg
 4355              	.LVL352:
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4356              		.loc 1 2302 5 view .LVU1294
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4357              		.loc 1 2302 12 is_stmt 0 view .LVU1295
 4358 0536 40F25510 		movw	r0, #341
 4359 053a B0E5     		b	.L356
 4360              	.LVL353:
 4361              	.L499:
2304:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
ARM GAS  /tmp/cceyv6gL.s 			page 153


 4362              		.loc 1 2304 5 is_stmt 1 view .LVU1296
 4363 053c FFF7FEFF 		bl	reset_arg
 4364              	.LVL354:
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4365              		.loc 1 2305 5 view .LVU1297
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4366              		.loc 1 2305 12 is_stmt 0 view .LVU1298
 4367 0540 4FF4AB70 		mov	r0, #342
 4368 0544 ABE5     		b	.L356
 4369              	.LVL355:
 4370              	.L373:
2089:src/keys.c    **** 	  case regY_idx:
 4371              		.loc 1 2089 6 is_stmt 1 view .LVU1299
2089:src/keys.c    **** 	  case regY_idx:
 4372              		.loc 1 2089 13 is_stmt 0 view .LVU1300
 4373 0546 0120     		movs	r0, #1
 4374              	.LVL356:
2089:src/keys.c    **** 	  case regY_idx:
 4375              		.loc 1 2089 13 view .LVU1301
 4376 0548 ABE6     		b	.L482
 4377              	.L503:
 4378 054a 00BF     		.align	2
 4379              	.L502:
 4380 054c CDCCCCCC 		.word	-858993459
 4381              		.cfi_endproc
 4382              	.LFE42:
 4384              		.section	.text.cur_shift,"ax",%progbits
 4385              		.align	1
 4386              		.p2align 2,,3
 4387              		.global	cur_shift
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv4-sp-d16
 4393              	cur_shift:
 4394              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4395              		.loc 1 96 29 is_stmt 1 view -0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4399              		.loc 1 97 2 view .LVU1303
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4400              		.loc 1 96 29 is_stmt 0 view .LVU1304
 4401 0000 08B5     		push	{r3, lr}
 4402              		.cfi_def_cfa_offset 8
 4403              		.cfi_offset 3, -8
 4404              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4405              		.loc 1 97 18 view .LVU1305
 4406 0002 FFF7FEFF 		bl	shift_down
 4407              	.LVL357:
  98:src/keys.c    **** }
 4408              		.loc 1 98 2 is_stmt 1 view .LVU1306
  98:src/keys.c    **** }
 4409              		.loc 1 98 52 is_stmt 0 view .LVU1307
ARM GAS  /tmp/cceyv6gL.s 			page 154


 4410 0006 08B9     		cbnz	r0, .L505
  98:src/keys.c    **** }
 4411              		.loc 1 98 52 discriminator 1 view .LVU1308
 4412 0008 014B     		ldr	r3, .L507
 4413 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4414              	.LVL358:
 4415              	.L505:
  99:src/keys.c    **** 
 4416              		.loc 1 99 1 discriminator 4 view .LVU1309
 4417 000c 08BD     		pop	{r3, pc}
 4418              	.L508:
 4419 000e 00BF     		.align	2
 4420              	.L507:
 4421 0010 00000000 		.word	StateWhileOn
 4422              		.cfi_endproc
 4423              	.LFE0:
 4425              		.section	.text.reset_shift,"ax",%progbits
 4426              		.align	1
 4427              		.p2align 2,,3
 4428              		.global	reset_shift
 4429              		.syntax unified
 4430              		.thumb
 4431              		.thumb_func
 4432              		.fpu fpv4-sp-d16
 4434              	reset_shift:
 4435              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4436              		.loc 1 114 31 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 0
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4440              		.loc 1 115 2 view .LVU1311
 4441              	.LVL359:
 4442              	.LBB498:
 4443              	.LBI498:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4444              		.loc 1 104 20 view .LVU1312
 4445              	.LBB499:
 105:src/keys.c    **** 	State2.shifts = shift;
 4446              		.loc 1 105 2 view .LVU1313
 4447              	.LBB500:
 4448              	.LBI500:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4449              		.loc 1 96 13 view .LVU1314
 4450              	.LBB501:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4451              		.loc 1 97 2 view .LVU1315
 4452              	.LBE501:
 4453              	.LBE500:
 4454              	.LBE499:
 4455              	.LBE498:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4456              		.loc 1 114 31 is_stmt 0 view .LVU1316
 4457 0000 08B5     		push	{r3, lr}
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 3, -8
ARM GAS  /tmp/cceyv6gL.s 			page 155


 4460              		.cfi_offset 14, -4
 4461              	.LBB505:
 4462              	.LBB504:
 4463              	.LBB503:
 4464              	.LBB502:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4465              		.loc 1 97 18 view .LVU1317
 4466 0002 FFF7FEFF 		bl	shift_down
 4467              	.LVL360:
  98:src/keys.c    **** }
 4468              		.loc 1 98 2 is_stmt 1 view .LVU1318
  98:src/keys.c    **** }
 4469              		.loc 1 98 52 is_stmt 0 view .LVU1319
 4470 0006 034B     		ldr	r3, .L514
 4471 0008 00B9     		cbnz	r0, .L510
 4472 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4473              	.LVL361:
 4474              	.L510:
  98:src/keys.c    **** }
 4475              		.loc 1 98 52 view .LVU1320
 4476              	.LBE502:
 4477              	.LBE503:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4478              		.loc 1 106 2 is_stmt 1 view .LVU1321
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4479              		.loc 1 106 16 is_stmt 0 view .LVU1322
 4480 000c 0022     		movs	r2, #0
 4481 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4482              		.loc 1 108 2 is_stmt 1 view .LVU1323
 4483              	.LVL362:
 108:src/keys.c    **** }
 4484              		.loc 1 108 2 is_stmt 0 view .LVU1324
 4485              	.LBE504:
 4486              	.LBE505:
 116:src/keys.c    **** 
 4487              		.loc 1 116 1 view .LVU1325
 4488 0010 08BD     		pop	{r3, pc}
 4489              	.L515:
 4490 0012 00BF     		.align	2
 4491              	.L514:
 4492 0014 00000000 		.word	StateWhileOn
 4493              		.cfi_endproc
 4494              	.LFE2:
 4496              		.section	.text.keycode_to_row_column,"ax",%progbits
 4497              		.align	1
 4498              		.p2align 2,,3
 4499              		.global	keycode_to_row_column
 4500              		.syntax unified
 4501              		.thumb
 4502              		.thumb_func
 4503              		.fpu fpv4-sp-d16
 4505              	keycode_to_row_column:
 4506              	.LVL363:
 4507              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4508              		.loc 1 180 1 is_stmt 1 view -0
ARM GAS  /tmp/cceyv6gL.s 			page 156


 4509              		.cfi_startproc
 4510              		@ args = 0, pretend = 0, frame = 0
 4511              		@ frame_needed = 0, uses_anonymous_args = 0
 4512              		@ link register save eliminated.
 181:src/keys.c    **** }
 4513              		.loc 1 181 2 view .LVU1327
 181:src/keys.c    **** }
 4514              		.loc 1 181 18 is_stmt 0 view .LVU1328
 4515 0000 074A     		ldr	r2, .L517
 4516 0002 82FB0032 		smull	r3, r2, r2, r0
 4517 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4518              		.loc 1 181 24 view .LVU1329
 4519 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4520 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4521              		.loc 1 181 33 view .LVU1330
 4522 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4523 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4524              		.loc 1 181 12 view .LVU1331
 4525 0018 02F10B00 		add	r0, r2, #11
 4526              	.LVL364:
 182:src/keys.c    **** 
 4527              		.loc 1 182 1 view .LVU1332
 4528 001c 1844     		add	r0, r0, r3
 4529 001e 7047     		bx	lr
 4530              	.L518:
 4531              		.align	2
 4532              	.L517:
 4533 0020 ABAAAA2A 		.word	715827883
 4534              		.cfi_endproc
 4535              	.LFE6:
 4537              		.section	.text.row_column_to_keycode,"ax",%progbits
 4538              		.align	1
 4539              		.p2align 2,,3
 4540              		.global	row_column_to_keycode
 4541              		.syntax unified
 4542              		.thumb
 4543              		.thumb_func
 4544              		.fpu fpv4-sp-d16
 4546              	row_column_to_keycode:
 4547              	.LVL365:
 4548              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4549              		.loc 1 190 1 is_stmt 1 view -0
 4550              		.cfi_startproc
 4551              		@ args = 0, pretend = 0, frame = 0
 4552              		@ frame_needed = 0, uses_anonymous_args = 0
 4553              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4554              		.loc 1 191 2 view .LVU1334
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4555              		.loc 1 191 14 is_stmt 0 view .LVU1335
 4556 0000 0E4A     		ldr	r2, .L525
 4557 0002 82FB0032 		smull	r3, r2, r2, r0
 4558 0006 C317     		asrs	r3, r0, #31
ARM GAS  /tmp/cceyv6gL.s 			page 157


 4559 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4560              		.loc 1 192 14 view .LVU1336
 4561 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4562              		.loc 1 191 6 view .LVU1337
 4563 0010 013B     		subs	r3, r3, #1
 4564              	.LVL366:
 192:src/keys.c    **** 
 4565              		.loc 1 192 2 is_stmt 1 view .LVU1338
 192:src/keys.c    **** 
 4566              		.loc 1 192 14 is_stmt 0 view .LVU1339
 4567 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4568              	.LVL367:
 194:src/keys.c    **** 		return -1;
 4569              		.loc 1 194 5 view .LVU1340
 4570 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4571              		.loc 1 192 6 view .LVU1341
 4572 0018 00F1FF30 		add	r0, r0, #-1
 4573              	.LVL368:
 194:src/keys.c    **** 		return -1;
 4574              		.loc 1 194 2 is_stmt 1 view .LVU1342
 194:src/keys.c    **** 		return -1;
 4575              		.loc 1 194 5 is_stmt 0 view .LVU1343
 4576 001c 0AD8     		bhi	.L524
 194:src/keys.c    **** 		return -1;
 4577              		.loc 1 194 36 discriminator 1 view .LVU1344
 4578 001e 012B     		cmp	r3, #1
 4579 0020 CCBF     		ite	gt
 4580 0022 0422     		movgt	r2, #4
 4581 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4582              		.loc 1 194 25 discriminator 1 view .LVU1345
 4583 0026 8242     		cmp	r2, r0
 4584 0028 04DB     		blt	.L524
 196:src/keys.c    **** }
 4585              		.loc 1 196 2 is_stmt 1 view .LVU1346
 196:src/keys.c    **** }
 4586              		.loc 1 196 13 is_stmt 0 view .LVU1347
 4587 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4588              	.LVL369:
 196:src/keys.c    **** }
 4589              		.loc 1 196 17 view .LVU1348
 4590 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4591              	.LVL370:
 196:src/keys.c    **** }
 4592              		.loc 1 196 17 view .LVU1349
 4593 0032 7047     		bx	lr
 4594              	.LVL371:
 4595              	.L524:
 195:src/keys.c    **** 	return row * 6 + col;
 4596              		.loc 1 195 10 view .LVU1350
 4597 0034 4FF0FF30 		mov	r0, #-1
 4598              	.LVL372:
 197:src/keys.c    **** 
 4599              		.loc 1 197 1 view .LVU1351
ARM GAS  /tmp/cceyv6gL.s 			page 158


 4600 0038 7047     		bx	lr
 4601              	.L526:
 4602 003a 00BF     		.align	2
 4603              	.L525:
 4604 003c 67666666 		.word	1717986919
 4605              		.cfi_endproc
 4606              	.LFE7:
 4608              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4609              		.align	1
 4610              		.p2align 2,,3
 4611              		.global	keycode_to_digit_or_register
 4612              		.syntax unified
 4613              		.thumb
 4614              		.thumb_func
 4615              		.fpu fpv4-sp-d16
 4617              	keycode_to_digit_or_register:
 4618              	.LVL373:
 4619              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4620              		.loc 1 211 1 is_stmt 1 view -0
 4621              		.cfi_startproc
 4622              		@ args = 0, pretend = 0, frame = 0
 4623              		@ frame_needed = 0, uses_anonymous_args = 0
 4624              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4625              		.loc 1 212 3 view .LVU1353
 234:src/keys.c    **** }
 4626              		.loc 1 234 3 view .LVU1354
 4627              	.LBB506:
 4628              	.LBI506:
 131:src/keys.c    **** {
 4629              		.loc 1 131 12 view .LVU1355
 4630              	.LBB507:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4631              		.loc 1 133 2 view .LVU1356
 143:src/keys.c    **** }
 4632              		.loc 1 143 2 view .LVU1357
 143:src/keys.c    **** }
 4633              		.loc 1 143 23 is_stmt 0 view .LVU1358
 4634 0000 024B     		ldr	r3, .L528
 4635              	.LBE507:
 4636              	.LBE506:
 234:src/keys.c    **** }
 4637              		.loc 1 234 28 view .LVU1359
 4638 0002 034A     		ldr	r2, .L528+4
 4639              	.LBB509:
 4640              	.LBB508:
 143:src/keys.c    **** }
 4641              		.loc 1 143 23 view .LVU1360
 4642 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4643              	.LBE508:
 4644              	.LBE509:
 235:src/keys.c    **** #else
 4645              		.loc 1 235 1 view .LVU1361
 4646 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4647              	.LVL374:
 235:src/keys.c    **** #else
ARM GAS  /tmp/cceyv6gL.s 			page 159


 4648              		.loc 1 235 1 view .LVU1362
 4649 0008 7047     		bx	lr
 4650              	.L529:
 4651 000a 00BF     		.align	2
 4652              	.L528:
 4653 000c 00000000 		.word	.LANCHOR6
 4654 0010 00000000 		.word	.LANCHOR5
 4655              		.cfi_endproc
 4656              	.LFE8:
 4658              		.section	.text.init_state,"ax",%progbits
 4659              		.align	1
 4660              		.p2align 2,,3
 4661              		.global	init_state
 4662              		.syntax unified
 4663              		.thumb
 4664              		.thumb_func
 4665              		.fpu fpv4-sp-d16
 4667              	init_state:
 4668              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4669              		.loc 1 615 23 is_stmt 1 view -0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4673              		.loc 1 617 2 view .LVU1364
 615:src/keys.c    **** #ifndef REALBUILD
 4674              		.loc 1 615 23 is_stmt 0 view .LVU1365
 4675 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4676              		.cfi_def_cfa_offset 32
 4677              		.cfi_offset 3, -32
 4678              		.cfi_offset 4, -28
 4679              		.cfi_offset 5, -24
 4680              		.cfi_offset 6, -20
 4681              		.cfi_offset 7, -16
 4682              		.cfi_offset 8, -12
 4683              		.cfi_offset 9, -8
 4684              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4685              		.loc 1 617 25 view .LVU1366
 4686 0004 1B4C     		ldr	r4, .L532
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4687              		.loc 1 625 10 view .LVU1367
 4688 0006 4FF00008 		mov	r8, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4689              		.loc 1 629 2 view .LVU1368
 4690 000a 4146     		mov	r1, r8
 4691 000c 1422     		movs	r2, #20
 4692 000e 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4693              		.loc 1 617 25 view .LVU1369
 4694 0012 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4695              		.loc 1 618 25 view .LVU1370
 4696 0014 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4697              		.loc 1 622 10 view .LVU1371
ARM GAS  /tmp/cceyv6gL.s 			page 160


 4698 0016 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4699              		.loc 1 623 10 view .LVU1372
 4700 0018 94F91390 		ldrsb	r9, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4701              		.loc 1 625 10 view .LVU1373
 4702 001c 84F81F80 		strb	r8, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4703              		.loc 1 629 2 view .LVU1374
 4704 0020 FFF7FEFF 		bl	xset
 4705              	.LVL375:
 667:src/keys.c    **** #endif
 4706              		.loc 1 667 2 view .LVU1375
 4707 0024 144B     		ldr	r3, .L532+4
 4708 0026 1B68     		ldr	r3, [r3]
 4709 0028 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 4710 002c 68F34102 		bfi	r2, r8, #1, #1
 4711 0030 83F8AD27 		strb	r2, [r3, #1965]
 675:src/keys.c    **** 	update_program_bounds(1);
 4712              		.loc 1 675 17 view .LVU1376
 4713 0034 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 674:src/keys.c    **** 	State2.runmode = 1;
 4714              		.loc 1 674 14 view .LVU1377
 4715 0036 0722     		movs	r2, #7
 675:src/keys.c    **** 	update_program_bounds(1);
 4716              		.loc 1 675 17 view .LVU1378
 4717 0038 43F04003 		orr	r3, r3, #64
 676:src/keys.c    **** 	set_lift();
 4718              		.loc 1 676 2 view .LVU1379
 4719 003c 0120     		movs	r0, #1
 674:src/keys.c    **** 	State2.runmode = 1;
 4720              		.loc 1 674 14 view .LVU1380
 4721 003e E273     		strb	r2, [r4, #15]
 675:src/keys.c    **** 	update_program_bounds(1);
 4722              		.loc 1 675 17 view .LVU1381
 4723 0040 A375     		strb	r3, [r4, #22]
 676:src/keys.c    **** 	set_lift();
 4724              		.loc 1 676 2 view .LVU1382
 4725 0042 FFF7FEFF 		bl	update_program_bounds
 4726              	.LVL376:
 677:src/keys.c    **** 
 4727              		.loc 1 677 2 view .LVU1383
 4728 0046 FFF7FEFF 		bl	set_lift
 4729              	.LVL377:
 684:src/keys.c    **** 	State2.flags = a;
 4730              		.loc 1 684 15 view .LVU1384
 4731 004a E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 685:src/keys.c    **** #else
 4732              		.loc 1 685 15 view .LVU1385
 4733 004c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 689:src/keys.c    **** }
 4734              		.loc 1 689 15 view .LVU1386
 4735 004e 0B49     		ldr	r1, .L532+8
 682:src/keys.c    **** #ifndef REALBUILD
 4736              		.loc 1 682 10 view .LVU1387
 4737 0050 84F81390 		strb	r9, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
ARM GAS  /tmp/cceyv6gL.s 			page 161


 4738              		.loc 1 617 25 view .LVU1388
 4739 0054 05F00105 		and	r5, r5, #1
 4740              	.LVL378:
 618:src/keys.c    **** #else
 4741              		.loc 1 618 2 is_stmt 1 view .LVU1389
 618:src/keys.c    **** #else
 4742              		.loc 1 618 25 is_stmt 0 view .LVU1390
 4743 0058 F609     		lsrs	r6, r6, #7
 4744              	.LVL379:
 622:src/keys.c    **** 	int k = LastKey;
 4745              		.loc 1 622 2 is_stmt 1 view .LVU1391
 622:src/keys.c    **** 	int k = LastKey;
 4746              		.loc 1 622 10 is_stmt 0 view .LVU1392
 4747 005a FFB2     		uxtb	r7, r7
 4748              	.LVL380:
 623:src/keys.c    **** 
 4749              		.loc 1 623 2 is_stmt 1 view .LVU1393
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4750              		.loc 1 625 2 view .LVU1394
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4751              		.loc 1 629 2 view .LVU1395
 667:src/keys.c    **** #endif
 4752              		.loc 1 667 2 view .LVU1396
 674:src/keys.c    **** 	State2.runmode = 1;
 4753              		.loc 1 674 2 view .LVU1397
 675:src/keys.c    **** 	update_program_bounds(1);
 4754              		.loc 1 675 2 view .LVU1398
 676:src/keys.c    **** 	set_lift();
 4755              		.loc 1 676 2 view .LVU1399
 677:src/keys.c    **** 
 4756              		.loc 1 677 2 view .LVU1400
 681:src/keys.c    **** 	LastKey = k;
 4757              		.loc 1 681 2 view .LVU1401
 684:src/keys.c    **** 	State2.flags = a;
 4758              		.loc 1 684 15 is_stmt 0 view .LVU1402
 4759 005c 66F3C712 		bfi	r2, r6, #7, #1
 685:src/keys.c    **** #else
 4760              		.loc 1 685 15 view .LVU1403
 4761 0060 65F30003 		bfi	r3, r5, #0, #1
 689:src/keys.c    **** }
 4762              		.loc 1 689 15 view .LVU1404
 4763 0064 6420     		movs	r0, #100
 684:src/keys.c    **** 	State2.flags = a;
 4764              		.loc 1 684 15 view .LVU1405
 4765 0066 E275     		strb	r2, [r4, #23]
 685:src/keys.c    **** #else
 4766              		.loc 1 685 15 view .LVU1406
 4767 0068 2376     		strb	r3, [r4, #24]
 681:src/keys.c    **** 	LastKey = k;
 4768              		.loc 1 681 10 view .LVU1407
 4769 006a A774     		strb	r7, [r4, #18]
 682:src/keys.c    **** #ifndef REALBUILD
 4770              		.loc 1 682 2 is_stmt 1 view .LVU1408
 684:src/keys.c    **** 	State2.flags = a;
 4771              		.loc 1 684 2 view .LVU1409
 685:src/keys.c    **** #else
 4772              		.loc 1 685 2 view .LVU1410
ARM GAS  /tmp/cceyv6gL.s 			page 162


 689:src/keys.c    **** }
 4773              		.loc 1 689 2 view .LVU1411
 689:src/keys.c    **** }
 4774              		.loc 1 689 15 is_stmt 0 view .LVU1412
 4775 006c 0860     		str	r0, [r1]
 690:src/keys.c    **** 
 4776              		.loc 1 690 1 view .LVU1413
 4777 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4778              	.LVL381:
 4779              	.L533:
 690:src/keys.c    **** 
 4780              		.loc 1 690 1 view .LVU1414
 4781 0072 00BF     		.align	2
 4782              	.L532:
 4783 0074 00000000 		.word	StateWhileOn
 4784 0078 00000000 		.word	main_ram
 4785 007c 00000000 		.word	ShowRegister
 4786              		.cfi_endproc
 4787              	.LFE13:
 4789              		.section	.text.process_cmplx,"ax",%progbits
 4790              		.align	1
 4791              		.p2align 2,,3
 4792              		.syntax unified
 4793              		.thumb
 4794              		.thumb_func
 4795              		.fpu fpv4-sp-d16
 4797              	process_cmplx:
 4798              	.LVL382:
 4799              	.LFB27:
1469:src/keys.c    **** #define _RARG   0xFF00
 4800              		.loc 1 1469 43 is_stmt 1 view -0
 4801              		.cfi_startproc
 4802              		@ args = 0, pretend = 0, frame = 0
 4803              		@ frame_needed = 0, uses_anonymous_args = 0
1474:src/keys.c    **** 		// Row 1
 4804              		.loc 1 1474 2 view .LVU1416
1525:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4805              		.loc 1 1525 2 view .LVU1417
 4806              	.LBB510:
 4807              	.LBI510:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4808              		.loc 1 114 13 view .LVU1418
 4809              	.LBE510:
 115:src/keys.c    **** }
 4810              		.loc 1 115 2 view .LVU1419
 4811              	.LBB527:
 4812              	.LBB511:
 4813              	.LBI511:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4814              		.loc 1 104 20 view .LVU1420
 4815              	.LBB512:
 105:src/keys.c    **** 	State2.shifts = shift;
 4816              		.loc 1 105 2 view .LVU1421
 4817              	.LBB513:
 4818              	.LBI513:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4819              		.loc 1 96 13 view .LVU1422
ARM GAS  /tmp/cceyv6gL.s 			page 163


 4820              	.LBB514:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4821              		.loc 1 97 2 view .LVU1423
 4822              	.LBE514:
 4823              	.LBE513:
 4824              	.LBE512:
 4825              	.LBE511:
 4826              	.LBE527:
1469:src/keys.c    **** #define _RARG   0xFF00
 4827              		.loc 1 1469 43 is_stmt 0 view .LVU1424
 4828 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4829              		.cfi_def_cfa_offset 24
 4830              		.cfi_offset 3, -24
 4831              		.cfi_offset 4, -20
 4832              		.cfi_offset 5, -16
 4833              		.cfi_offset 6, -12
 4834              		.cfi_offset 7, -8
 4835              		.cfi_offset 14, -4
1469:src/keys.c    **** #define _RARG   0xFF00
 4836              		.loc 1 1469 43 view .LVU1425
 4837 0002 0546     		mov	r5, r0
 4838              	.LBB528:
 4839              	.LBB523:
 4840              	.LBB519:
 4841              	.LBB517:
 4842              	.LBB515:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4843              		.loc 1 97 18 view .LVU1426
 4844 0004 FFF7FEFF 		bl	shift_down
 4845              	.LVL383:
  98:src/keys.c    **** }
 4846              		.loc 1 98 2 is_stmt 1 view .LVU1427
  98:src/keys.c    **** }
 4847              		.loc 1 98 52 is_stmt 0 view .LVU1428
 4848 0008 E8B1     		cbz	r0, .L551
 4849 000a 294E     		ldr	r6, .L558
 4850 000c 0446     		mov	r4, r0
 4851              	.L535:
 4852              	.LVL384:
  98:src/keys.c    **** }
 4853              		.loc 1 98 52 view .LVU1429
 4854              	.LBE515:
 4855              	.LBE517:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4856              		.loc 1 106 2 is_stmt 1 view .LVU1430
 4857              	.LBE519:
 4858              	.LBE523:
 4859              	.LBE528:
 4860              	.LBB529:
 4861              	.LBB530:
 158:src/keys.c    **** }
 4862              		.loc 1 158 23 is_stmt 0 view .LVU1431
 4863 000e 294B     		ldr	r3, .L558+4
 4864              	.LBE530:
 4865              	.LBE529:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4866              		.loc 1 1527 21 view .LVU1432
ARM GAS  /tmp/cceyv6gL.s 			page 164


 4867 0010 2948     		ldr	r0, .L558+8
 4868              	.LBB533:
 4869              	.LBB531:
 158:src/keys.c    **** }
 4870              		.loc 1 158 23 view .LVU1433
 4871 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4872              	.LBE531:
 4873              	.LBE533:
1528:src/keys.c    **** 
 4874              		.loc 1 1528 15 view .LVU1434
 4875 0014 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
1527:src/keys.c    **** 	State2.cmplx = 0;
 4876              		.loc 1 1527 21 view .LVU1435
 4877 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4878              	.LBB534:
 4879              	.LBB524:
 4880              	.LBB520:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4881              		.loc 1 106 16 view .LVU1436
 4882 001a 0021     		movs	r1, #0
 4883              	.LBE520:
 4884              	.LBE524:
 4885              	.LBE534:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4886              		.loc 1 1527 21 view .LVU1437
 4887 001c 30F81370 		ldrh	r7, [r0, r3, lsl #1]
 4888              	.LBB535:
 4889              	.LBB525:
 4890              	.LBB521:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4891              		.loc 1 106 16 view .LVU1438
 4892 0020 3174     		strb	r1, [r6, #16]
 108:src/keys.c    **** }
 4893              		.loc 1 108 2 is_stmt 1 view .LVU1439
 4894              	.LVL385:
 108:src/keys.c    **** }
 4895              		.loc 1 108 2 is_stmt 0 view .LVU1440
 4896              	.LBE521:
 4897              	.LBE525:
 4898              	.LBE535:
1526:src/keys.c    **** 	int op = op_map[lc][shift];
 4899              		.loc 1 1526 2 is_stmt 1 view .LVU1441
 4900              	.LBB536:
 4901              	.LBI529:
 146:src/keys.c    **** {
 4902              		.loc 1 146 12 view .LVU1442
 4903              	.LBB532:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4904              		.loc 1 148 2 view .LVU1443
 158:src/keys.c    **** }
 4905              		.loc 1 158 2 view .LVU1444
 158:src/keys.c    **** }
 4906              		.loc 1 158 2 is_stmt 0 view .LVU1445
 4907              	.LBE532:
 4908              	.LBE536:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4909              		.loc 1 1527 2 is_stmt 1 view .LVU1446
ARM GAS  /tmp/cceyv6gL.s 			page 165


1528:src/keys.c    **** 
 4910              		.loc 1 1528 2 view .LVU1447
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4911              		.loc 1 1530 5 is_stmt 0 view .LVU1448
 4912 0022 07F47F43 		and	r3, r7, #65280
1528:src/keys.c    **** 
 4913              		.loc 1 1528 15 view .LVU1449
 4914 0026 61F34102 		bfi	r2, r1, #1, #1
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4915              		.loc 1 1530 5 view .LVU1450
 4916 002a B3F57F4F 		cmp	r3, #65280
1528:src/keys.c    **** 
 4917              		.loc 1 1528 15 view .LVU1451
 4918 002e 7275     		strb	r2, [r6, #21]
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4919              		.loc 1 1530 2 is_stmt 1 view .LVU1452
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4920              		.loc 1 1530 5 is_stmt 0 view .LVU1453
 4921 0030 2CD0     		beq	.L554
1534:src/keys.c    **** 		// HYP
 4922              		.loc 1 1534 2 is_stmt 1 view .LVU1454
1534:src/keys.c    **** 		// HYP
 4923              		.loc 1 1534 5 is_stmt 0 view .LVU1455
 4924 0032 9DB1     		cbz	r5, .L555
1544:src/keys.c    **** 		switch (c) {
 4925              		.loc 1 1544 2 is_stmt 1 view .LVU1456
1544:src/keys.c    **** 		switch (c) {
 4926              		.loc 1 1544 5 is_stmt 0 view .LVU1457
 4927 0034 2CB1     		cbz	r4, .L534
1545:src/keys.c    **** 		case K_CMPLX:
 4928              		.loc 1 1545 3 is_stmt 1 view .LVU1458
 4929 0036 242D     		cmp	r5, #36
 4930 0038 24D0     		beq	.L540
 4931 003a 2D2D     		cmp	r5, #45
 4932 003c 1DD0     		beq	.L541
 4933 003e 1F2D     		cmp	r5, #31
 4934 0040 04D0     		beq	.L556
 4935              	.LVL386:
 4936              	.L534:
1577:src/keys.c    **** 
 4937              		.loc 1 1577 1 is_stmt 0 view .LVU1459
 4938 0042 3846     		mov	r0, r7
 4939 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4940              	.LVL387:
 4941              	.L551:
 4942              	.LBB537:
 4943              	.LBB526:
 4944              	.LBB522:
 4945              	.LBB518:
 4946              	.LBB516:
  98:src/keys.c    **** }
 4947              		.loc 1 98 52 view .LVU1460
 4948 0046 1A4E     		ldr	r6, .L558
 4949 0048 347C     		ldrb	r4, [r6, #16]	@ zero_extendqisi2
 4950 004a E0E7     		b	.L535
 4951              	.LVL388:
 4952              	.L556:
ARM GAS  /tmp/cceyv6gL.s 			page 166


  98:src/keys.c    **** }
 4953              		.loc 1 98 52 view .LVU1461
 4954              	.LBE516:
 4955              	.LBE518:
 4956              	.LBE522:
 4957              	.LBE526:
 4958              	.LBE537:
1551:src/keys.c    **** 				if (is_bad_cmdline())
 4959              		.loc 1 1551 4 is_stmt 1 view .LVU1462
1551:src/keys.c    **** 				if (is_bad_cmdline())
 4960              		.loc 1 1551 7 is_stmt 0 view .LVU1463
 4961 004c 332F     		cmp	r7, #51
 4962 004e 02D0     		beq	.L553
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 4963              		.loc 1 1552 5 is_stmt 1 view .LVU1464
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 4964              		.loc 1 1552 9 is_stmt 0 view .LVU1465
 4965 0050 FFF7FEFF 		bl	is_bad_cmdline
 4966              	.LVL389:
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 4967              		.loc 1 1552 8 view .LVU1466
 4968 0054 10B3     		cbz	r0, .L557
 4969              	.L553:
1532:src/keys.c    **** 	}
 4970              		.loc 1 1532 10 view .LVU1467
 4971 0056 3327     		movs	r7, #51
 4972              	.LVL390:
1577:src/keys.c    **** 
 4973              		.loc 1 1577 1 view .LVU1468
 4974 0058 3846     		mov	r0, r7
 4975 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4976              	.LVL391:
 4977              	.L555:
1536:src/keys.c    **** 		//		print_debug(100,1);
 4978              		.loc 1 1536 3 is_stmt 1 view .LVU1469
 4979 005c FFF7FEFF 		bl	process_cmdline_set_lift
 4980              	.LVL392:
1538:src/keys.c    **** 		State2.dot = op;
 4981              		.loc 1 1538 3 view .LVU1470
1539:src/keys.c    **** 		State2.cmplx = 1;
 4982              		.loc 1 1539 3 view .LVU1471
1540:src/keys.c    **** 		return STATE_UNFINISHED;
 4983              		.loc 1 1540 3 view .LVU1472
1540:src/keys.c    **** 		return STATE_UNFINISHED;
 4984              		.loc 1 1540 16 is_stmt 0 view .LVU1473
 4985 0060 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 4986 0062 07F00103 		and	r3, r7, #1
 4987 0066 9B01     		lsls	r3, r3, #6
 4988 0068 22F06202 		bic	r2, r2, #98
 4989 006c 43F02203 		orr	r3, r3, #34
 4990 0070 1343     		orrs	r3, r3, r2
1541:src/keys.c    **** 	}
 4991              		.loc 1 1541 10 view .LVU1474
 4992 0072 3327     		movs	r7, #51
 4993              	.LVL393:
1540:src/keys.c    **** 		return STATE_UNFINISHED;
 4994              		.loc 1 1540 16 view .LVU1475
ARM GAS  /tmp/cceyv6gL.s 			page 167


 4995 0074 7375     		strb	r3, [r6, #21]
1541:src/keys.c    **** 	}
 4996              		.loc 1 1541 3 is_stmt 1 view .LVU1476
1577:src/keys.c    **** 
 4997              		.loc 1 1577 1 is_stmt 0 view .LVU1477
 4998 0076 3846     		mov	r0, r7
 4999 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5000              	.LVL394:
 5001              	.L541:
1547:src/keys.c    **** 			break;
 5002              		.loc 1 1547 4 is_stmt 1 view .LVU1478
 5003              	.LBB538:
 5004              	.LBI538:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5005              		.loc 1 104 20 view .LVU1479
 5006              	.LBB539:
 105:src/keys.c    **** 	State2.shifts = shift;
 5007              		.loc 1 105 2 view .LVU1480
 5008              	.LBB540:
 5009              	.LBI540:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5010              		.loc 1 96 13 view .LVU1481
 5011              	.LBB541:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5012              		.loc 1 97 2 view .LVU1482
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5013              		.loc 1 97 18 is_stmt 0 view .LVU1483
 5014 007a FFF7FEFF 		bl	shift_down
 5015              	.LVL395:
  98:src/keys.c    **** }
 5016              		.loc 1 98 2 is_stmt 1 view .LVU1484
 5017              	.LBE541:
 5018              	.LBE540:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5019              		.loc 1 106 2 view .LVU1485
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5020              		.loc 1 106 16 is_stmt 0 view .LVU1486
 5021 007e 3474     		strb	r4, [r6, #16]
 108:src/keys.c    **** }
 5022              		.loc 1 108 2 is_stmt 1 view .LVU1487
 5023              	.LBE539:
 5024              	.LBE538:
1577:src/keys.c    **** 
 5025              		.loc 1 1577 1 is_stmt 0 view .LVU1488
 5026 0080 3846     		mov	r0, r7
 5027 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5028              	.LVL396:
 5029              	.L540:
1561:src/keys.c    **** 			break;
 5030              		.loc 1 1561 4 is_stmt 1 view .LVU1489
 5031 0084 FFF7FEFF 		bl	init_state
 5032              	.LVL397:
1562:src/keys.c    **** 
 5033              		.loc 1 1562 4 view .LVU1490
1577:src/keys.c    **** 
 5034              		.loc 1 1577 1 is_stmt 0 view .LVU1491
 5035 0088 3846     		mov	r0, r7
ARM GAS  /tmp/cceyv6gL.s 			page 168


 5036 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5037              	.LVL398:
 5038              	.L554:
1531:src/keys.c    **** 		return STATE_UNFINISHED;
 5039              		.loc 1 1531 3 is_stmt 1 view .LVU1492
 5040              	.LBB542:
 5041              	.LBI542:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5042              		.loc 1 552 13 view .LVU1493
 5043              	.LBB543:
 553:src/keys.c    **** 		return;
 5044              		.loc 1 553 2 view .LVU1494
 553:src/keys.c    **** 		return;
 5045              		.loc 1 553 6 is_stmt 0 view .LVU1495
 5046 008c FFF7FEFF 		bl	is_bad_cmdline
 5047              	.LVL399:
 553:src/keys.c    **** 		return;
 5048              		.loc 1 553 5 view .LVU1496
 5049 0090 0028     		cmp	r0, #0
 5050 0092 E0D1     		bne	.L553
 5051 0094 F8B2     		uxtb	r0, r7
 5052 0096 FFF7FEFF 		bl	init_arg.part.0
 5053              	.LVL400:
 5054 009a DCE7     		b	.L553
 5055              	.LVL401:
 5056              	.L557:
 553:src/keys.c    **** 		return;
 5057              		.loc 1 553 5 view .LVU1497
 5058              	.LBE543:
 5059              	.LBE542:
1554:src/keys.c    **** 				State2.cmplx = 1;
 5060              		.loc 1 1554 5 is_stmt 1 view .LVU1498
 5061 009c FFF7FEFF 		bl	process_cmdline_set_lift
 5062              	.LVL402:
1555:src/keys.c    **** 				State2.test = op;
 5063              		.loc 1 1555 5 view .LVU1499
1555:src/keys.c    **** 				State2.test = op;
 5064              		.loc 1 1555 18 is_stmt 0 view .LVU1500
 5065 00a0 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1556:src/keys.c    **** 			}
 5066              		.loc 1 1556 17 view .LVU1501
 5067 00a2 F773     		strb	r7, [r6, #15]
1555:src/keys.c    **** 				State2.test = op;
 5068              		.loc 1 1555 18 view .LVU1502
 5069 00a4 43F00203 		orr	r3, r3, #2
 5070 00a8 7375     		strb	r3, [r6, #21]
1556:src/keys.c    **** 			}
 5071              		.loc 1 1556 5 is_stmt 1 view .LVU1503
1558:src/keys.c    **** 
 5072              		.loc 1 1558 11 is_stmt 0 view .LVU1504
 5073 00aa 3327     		movs	r7, #51
 5074              	.LVL403:
1558:src/keys.c    **** 
 5075              		.loc 1 1558 11 view .LVU1505
 5076 00ac C9E7     		b	.L534
 5077              	.L559:
 5078 00ae 00BF     		.align	2
ARM GAS  /tmp/cceyv6gL.s 			page 169


 5079              	.L558:
 5080 00b0 00000000 		.word	StateWhileOn
 5081 00b4 00000000 		.word	.LANCHOR1
 5082 00b8 00000000 		.word	.LANCHOR7
 5083              		.cfi_endproc
 5084              	.LFE27:
 5086              		.section	.text.soft_init_state,"ax",%progbits
 5087              		.align	1
 5088              		.p2align 2,,3
 5089              		.global	soft_init_state
 5090              		.syntax unified
 5091              		.thumb
 5092              		.thumb_func
 5093              		.fpu fpv4-sp-d16
 5095              	soft_init_state:
 5096              	.LFB14:
 692:src/keys.c    **** 	int soft;
 5097              		.loc 1 692 28 is_stmt 1 view -0
 5098              		.cfi_startproc
 5099              		@ args = 0, pretend = 0, frame = 0
 5100              		@ frame_needed = 0, uses_anonymous_args = 0
 693:src/keys.c    **** 	unsigned int runmode;
 5101              		.loc 1 693 2 view .LVU1507
 694:src/keys.c    **** 	unsigned int alphas;
 5102              		.loc 1 694 2 view .LVU1508
 695:src/keys.c    **** 
 5103              		.loc 1 695 2 view .LVU1509
 697:src/keys.c    **** 		CmdLineLength = 0;
 5104              		.loc 1 697 2 view .LVU1510
 692:src/keys.c    **** 	int soft;
 5105              		.loc 1 692 28 is_stmt 0 view .LVU1511
 5106 0000 38B5     		push	{r3, r4, r5, lr}
 5107              		.cfi_def_cfa_offset 16
 5108              		.cfi_offset 3, -16
 5109              		.cfi_offset 4, -12
 5110              		.cfi_offset 5, -8
 5111              		.cfi_offset 14, -4
 697:src/keys.c    **** 		CmdLineLength = 0;
 5112              		.loc 1 697 6 view .LVU1512
 5113 0002 114C     		ldr	r4, .L567
 697:src/keys.c    **** 		CmdLineLength = 0;
 5114              		.loc 1 697 5 view .LVU1513
 5115 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5116 0006 D3B9     		cbnz	r3, .L566
 703:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5117              		.loc 1 703 2 is_stmt 1 view .LVU1514
 704:src/keys.c    **** 	runmode = State2.runmode;
 5118              		.loc 1 704 17 is_stmt 0 view .LVU1515
 5119 0008 104A     		ldr	r2, .L567+4
 5120 000a 6369     		ldr	r3, [r4, #20]
 704:src/keys.c    **** 	runmode = State2.runmode;
 5121              		.loc 1 704 60 view .LVU1516
 5122 000c 1A42     		tst	r2, r3
 5123 000e 0AD0     		beq	.L563
 5124              	.L564:
 5125              	.LVL404:
 705:src/keys.c    **** 	alphas = State2.alphas;
ARM GAS  /tmp/cceyv6gL.s 			page 170


 5126              		.loc 1 705 2 is_stmt 1 view .LVU1517
 706:src/keys.c    **** 	init_state();
 5127              		.loc 1 706 17 is_stmt 0 view .LVU1518
 5128 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5129              	.LVL405:
 706:src/keys.c    **** 	init_state();
 5130              		.loc 1 706 2 is_stmt 1 view .LVU1519
 707:src/keys.c    **** 	if (soft) {
 5131              		.loc 1 707 2 view .LVU1520
 5132 0012 FFF7FEFF 		bl	init_state
 5133              	.LVL406:
 708:src/keys.c    **** 		State2.runmode = runmode;
 5134              		.loc 1 708 2 view .LVU1521
 709:src/keys.c    **** 		State2.alphas = alphas;
 5135              		.loc 1 709 3 view .LVU1522
 710:src/keys.c    **** 	}
 5136              		.loc 1 710 3 view .LVU1523
 710:src/keys.c    **** 	}
 5137              		.loc 1 710 17 is_stmt 0 view .LVU1524
 5138 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5139 0018 05F04805 		and	r5, r5, #72
 5140 001c 23F04803 		bic	r3, r3, #72
 5141 0020 2B43     		orrs	r3, r3, r5
 5142 0022 A375     		strb	r3, [r4, #22]
 712:src/keys.c    **** 
 5143              		.loc 1 712 1 view .LVU1525
 5144 0024 38BD     		pop	{r3, r4, r5, pc}
 5145              	.LVL407:
 5146              	.L563:
 704:src/keys.c    **** 	runmode = State2.runmode;
 5147              		.loc 1 704 60 discriminator 2 view .LVU1526
 5148 0026 E368     		ldr	r3, [r4, #12]
 5149 0028 23F47F03 		bic	r3, r3, #16711680
 5150 002c 23F47F43 		bic	r3, r3, #65280
 5151 0030 B3F1E06F 		cmp	r3, #117440512
 5152 0034 ECD1     		bne	.L564
 5153              	.LVL408:
 705:src/keys.c    **** 	alphas = State2.alphas;
 5154              		.loc 1 705 2 is_stmt 1 view .LVU1527
 706:src/keys.c    **** 	init_state();
 5155              		.loc 1 706 2 view .LVU1528
 707:src/keys.c    **** 	if (soft) {
 5156              		.loc 1 707 2 view .LVU1529
 712:src/keys.c    **** 
 5157              		.loc 1 712 1 is_stmt 0 view .LVU1530
 5158 0036 BDE83840 		pop	{r3, r4, r5, lr}
 5159              		.cfi_remember_state
 5160              		.cfi_restore 14
 5161              		.cfi_restore 5
 5162              		.cfi_restore 4
 5163              		.cfi_restore 3
 5164              		.cfi_def_cfa_offset 0
 707:src/keys.c    **** 	if (soft) {
 5165              		.loc 1 707 2 view .LVU1531
 5166 003a FFF7FEBF 		b	init_state
 5167              	.LVL409:
 5168              	.L566:
ARM GAS  /tmp/cceyv6gL.s 			page 171


 5169              		.cfi_restore_state
 5170              	.LBB546:
 5171              	.LBI546:
 692:src/keys.c    **** 	int soft;
 5172              		.loc 1 692 6 is_stmt 1 view .LVU1532
 5173              	.LBB547:
 698:src/keys.c    **** 		CmdLineEex = 0;
 5174              		.loc 1 698 3 view .LVU1533
 699:src/keys.c    **** 		CmdLineDot = 0;
 5175              		.loc 1 699 3 view .LVU1534
 700:src/keys.c    **** 		return;
 5176              		.loc 1 700 3 view .LVU1535
 698:src/keys.c    **** 		CmdLineEex = 0;
 5177              		.loc 1 698 17 is_stmt 0 view .LVU1536
 5178 003e 0023     		movs	r3, #0
 5179 0040 A383     		strh	r3, [r4, #28]	@ movhi
 700:src/keys.c    **** 		return;
 5180              		.loc 1 700 14 view .LVU1537
 5181 0042 A377     		strb	r3, [r4, #30]
 701:src/keys.c    **** 	}
 5182              		.loc 1 701 3 is_stmt 1 view .LVU1538
 5183              	.LBE547:
 5184              	.LBE546:
 712:src/keys.c    **** 
 5185              		.loc 1 712 1 is_stmt 0 view .LVU1539
 5186 0044 38BD     		pop	{r3, r4, r5, pc}
 5187              	.L568:
 5188 0046 00BF     		.align	2
 5189              	.L567:
 5190 0048 00000000 		.word	StateWhileOn
 5191 004c 002F2004 		.word	69218048
 5192              		.cfi_endproc
 5193              	.LFE14:
 5195              		.section	.text.finish_cpx_entry,"ax",%progbits
 5196              		.align	1
 5197              		.p2align 2,,3
 5198              		.global	finish_cpx_entry
 5199              		.syntax unified
 5200              		.thumb
 5201              		.thumb_func
 5202              		.fpu fpv4-sp-d16
 5204              	finish_cpx_entry:
 5205              	.LVL410:
 5206              	.LFB23:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5207              		.loc 1 1207 36 is_stmt 1 view -0
 5208              		.cfi_startproc
 5209              		@ args = 0, pretend = 0, frame = 0
 5210              		@ frame_needed = 0, uses_anonymous_args = 0
1212:src/keys.c    **** 
 5211              		.loc 1 1212 2 view .LVU1541
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5212              		.loc 1 1207 36 is_stmt 0 view .LVU1542
 5213 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5214              		.cfi_def_cfa_offset 24
 5215              		.cfi_offset 3, -24
 5216              		.cfi_offset 4, -20
ARM GAS  /tmp/cceyv6gL.s 			page 172


 5217              		.cfi_offset 5, -16
 5218              		.cfi_offset 6, -12
 5219              		.cfi_offset 7, -8
 5220              		.cfi_offset 14, -4
1212:src/keys.c    **** 
 5221              		.loc 1 1212 10 view .LVU1543
 5222 0002 2E4E     		ldr	r6, .L585
 5223 0004 3368     		ldr	r3, [r6]
1212:src/keys.c    **** 
 5224              		.loc 1 1212 7 view .LVU1544
 5225 0006 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
1212:src/keys.c    **** 
 5226              		.loc 1 1212 5 view .LVU1545
 5227 000a 12F0060F 		tst	r2, #6
 5228 000e 16D0     		beq	.L569
1224:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5229              		.loc 1 1224 2 is_stmt 1 view .LVU1546
 5230              	.LBB554:
 5231              	.LBI554:
1200:src/keys.c    **** 	if (CmdLineLength) {
 5232              		.loc 1 1200 13 view .LVU1547
 5233              	.LBB555:
1201:src/keys.c    **** 		State2.state_lift = 0;
 5234              		.loc 1 1201 2 view .LVU1548
1201:src/keys.c    **** 		State2.state_lift = 0;
 5235              		.loc 1 1201 6 is_stmt 0 view .LVU1549
 5236 0010 2B4C     		ldr	r4, .L585+4
1201:src/keys.c    **** 		State2.state_lift = 0;
 5237              		.loc 1 1201 5 view .LVU1550
 5238 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5239 0014 0546     		mov	r5, r0
 5240 0016 01BB     		cbnz	r1, .L582
 5241              	.LBE555:
 5242              	.LBE554:
1225:src/keys.c    **** 	CLEAR_REAL;
 5243              		.loc 1 1225 2 is_stmt 1 view .LVU1551
1225:src/keys.c    **** 	CLEAR_REAL;
 5244              		.loc 1 1225 5 is_stmt 0 view .LVU1552
 5245 0018 5207     		lsls	r2, r2, #29
 5246 001a 11D4     		bmi	.L583
 5247              	.LVL411:
 5248              	.L573:
1226:src/keys.c    **** 	CLEAR_IMAG;
 5249              		.loc 1 1226 2 is_stmt 1 view .LVU1553
1227:src/keys.c    **** 
 5250              		.loc 1 1227 2 view .LVU1554
1226:src/keys.c    **** 	CLEAR_IMAG;
 5251              		.loc 1 1226 2 is_stmt 0 view .LVU1555
 5252 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5253 0020 22F00602 		bic	r2, r2, #6
 5254 0024 83F8AC27 		strb	r2, [r3, #1964]
1229:src/keys.c    **** 
 5255              		.loc 1 1229 2 is_stmt 1 view .LVU1556
1229:src/keys.c    **** 
 5256              		.loc 1 1229 20 is_stmt 0 view .LVU1557
 5257 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5258 002a 65F38612 		bfi	r2, r5, #6, #1
ARM GAS  /tmp/cceyv6gL.s 			page 173


 5259              	.LVL412:
1229:src/keys.c    **** 
 5260              		.loc 1 1229 20 view .LVU1558
 5261 002e E275     		strb	r2, [r4, #23]
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5262              		.loc 1 1231 2 is_stmt 1 view .LVU1559
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5263              		.loc 1 1231 21 is_stmt 0 view .LVU1560
 5264 0030 B3F8AC37 		ldrh	r3, [r3, #1964]
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5265              		.loc 1 1231 5 view .LVU1561
 5266 0034 03F4C073 		and	r3, r3, #384
 5267 0038 B3F5C07F 		cmp	r3, #384
 5268 003c 19D0     		beq	.L584
 5269              	.L569:
1243:src/keys.c    **** 
 5270              		.loc 1 1243 1 view .LVU1562
 5271 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5272              	.LVL413:
 5273              	.L583:
1225:src/keys.c    **** 	CLEAR_REAL;
 5274              		.loc 1 1225 17 is_stmt 1 discriminator 1 view .LVU1563
 5275 0040 6420     		movs	r0, #100
 5276 0042 FFF7FEFF 		bl	get_reg_n
 5277              	.LVL414:
 5278 0046 0746     		mov	r7, r0
 5279 0048 6520     		movs	r0, #101
 5280 004a FFF7FEFF 		bl	get_reg_n
 5281              	.LVL415:
 5282 004e 0146     		mov	r1, r0
 5283 0050 3846     		mov	r0, r7
 5284 0052 FFF7FEFF 		bl	swap_reg
 5285              	.LVL416:
 5286 0056 3368     		ldr	r3, [r6]
 5287 0058 E0E7     		b	.L573
 5288              	.LVL417:
 5289              	.L582:
 5290              	.LBB557:
 5291              	.LBB556:
1202:src/keys.c    **** 		process_cmdline();
 5292              		.loc 1 1202 3 view .LVU1564
1202:src/keys.c    **** 		process_cmdline();
 5293              		.loc 1 1202 21 is_stmt 0 view .LVU1565
 5294 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5295 005c 6FF38613 		bfc	r3, #6, #1
 5296 0060 E375     		strb	r3, [r4, #23]
1203:src/keys.c    **** 	}
 5297              		.loc 1 1203 3 is_stmt 1 view .LVU1566
 5298 0062 FFF7FEFF 		bl	process_cmdline
 5299              	.LVL418:
1203:src/keys.c    **** 	}
 5300              		.loc 1 1203 3 is_stmt 0 view .LVU1567
 5301 0066 3368     		ldr	r3, [r6]
 5302 0068 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5303              	.LBE556:
 5304              	.LBE557:
1225:src/keys.c    **** 	CLEAR_REAL;
ARM GAS  /tmp/cceyv6gL.s 			page 174


 5305              		.loc 1 1225 2 is_stmt 1 view .LVU1568
1225:src/keys.c    **** 	CLEAR_REAL;
 5306              		.loc 1 1225 5 is_stmt 0 view .LVU1569
 5307 006c 5207     		lsls	r2, r2, #29
 5308 006e D5D5     		bpl	.L573
 5309 0070 E6E7     		b	.L583
 5310              	.LVL419:
 5311              	.L584:
 5312              	.LBB558:
 5313              	.LBI558:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5314              		.loc 1 1207 6 is_stmt 1 view .LVU1570
 5315              	.LBB559:
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5316              		.loc 1 1233 3 view .LVU1571
 5317 0072 6E20     		movs	r0, #110
 5318 0074 FFF7FEFF 		bl	get_reg_n
 5319              	.LVL420:
 5320 0078 0446     		mov	r4, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5321              		.loc 1 1233 33 is_stmt 0 view .LVU1572
 5322 007a 6420     		movs	r0, #100
 5323 007c FFF7FEFF 		bl	get_reg_n
 5324              	.LVL421:
 5325 0080 0146     		mov	r1, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5326              		.loc 1 1233 3 view .LVU1573
 5327 0082 2046     		mov	r0, r4
 5328 0084 FFF7FEFF 		bl	copyreg
 5329              	.LVL422:
1234:src/keys.c    **** 		//call p2r
 5330              		.loc 1 1234 3 is_stmt 1 view .LVU1574
 5331 0088 6F20     		movs	r0, #111
 5332 008a FFF7FEFF 		bl	get_reg_n
 5333              	.LVL423:
 5334 008e 0446     		mov	r4, r0
1234:src/keys.c    **** 		//call p2r
 5335              		.loc 1 1234 33 is_stmt 0 view .LVU1575
 5336 0090 6520     		movs	r0, #101
 5337 0092 FFF7FEFF 		bl	get_reg_n
 5338              	.LVL424:
 5339 0096 0146     		mov	r1, r0
1234:src/keys.c    **** 		//call p2r
 5340              		.loc 1 1234 3 view .LVU1576
 5341 0098 2046     		mov	r0, r4
 5342 009a FFF7FEFF 		bl	copyreg
 5343              	.LVL425:
1236:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5344              		.loc 1 1236 18 is_stmt 1 view .LVU1577
1237:src/keys.c    **** #ifdef RP_PREFIX
 5345              		.loc 1 1237 3 view .LVU1578
 5346 009e 0020     		movs	r0, #0
 5347 00a0 FFF7FEFF 		bl	op_p2r
 5348              	.LVL426:
1239:src/keys.c    **** #endif
 5349              		.loc 1 1239 3 view .LVU1579
1239:src/keys.c    **** #endif
ARM GAS  /tmp/cceyv6gL.s 			page 175


 5350              		.loc 1 1239 15 is_stmt 0 view .LVU1580
 5351 00a4 074A     		ldr	r2, .L585+8
1241:src/keys.c    **** 	}
 5352              		.loc 1 1241 3 view .LVU1581
 5353 00a6 3368     		ldr	r3, [r6]
1239:src/keys.c    **** #endif
 5354              		.loc 1 1239 15 view .LVU1582
 5355 00a8 0121     		movs	r1, #1
 5356 00aa 1160     		str	r1, [r2]
1241:src/keys.c    **** 	}
 5357              		.loc 1 1241 3 is_stmt 1 view .LVU1583
 5358 00ac 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5359 00b0 6FF30002 		bfc	r2, #0, #1
 5360 00b4 83F8AD27 		strb	r2, [r3, #1965]
 5361              	.LVL427:
1241:src/keys.c    **** 	}
 5362              		.loc 1 1241 3 is_stmt 0 view .LVU1584
 5363              	.LBE559:
 5364              	.LBE558:
1243:src/keys.c    **** 
 5365              		.loc 1 1243 1 view .LVU1585
 5366 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5367              	.L586:
 5368 00ba 00BF     		.align	2
 5369              	.L585:
 5370 00bc 00000000 		.word	main_ram
 5371 00c0 00000000 		.word	StateWhileOn
 5372 00c4 00000000 		.word	RectPolConv
 5373              		.cfi_endproc
 5374              	.LFE23:
 5376              		.section	.text.stack_begin,"ax",%progbits
 5377              		.align	1
 5378              		.p2align 2,,3
 5379              		.global	stack_begin
 5380              		.syntax unified
 5381              		.thumb
 5382              		.thumb_func
 5383              		.fpu fpv4-sp-d16
 5385              	stack_begin:
 5386              	.LVL428:
 5387              	.LFB25:
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5388              		.loc 1 1264 33 is_stmt 1 view -0
 5389              		.cfi_startproc
 5390              		@ args = 0, pretend = 0, frame = 0
 5391              		@ frame_needed = 0, uses_anonymous_args = 0
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5392              		.loc 1 1267 2 view .LVU1587
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5393              		.loc 1 1264 33 is_stmt 0 view .LVU1588
 5394 0000 38B5     		push	{r3, r4, r5, lr}
 5395              		.cfi_def_cfa_offset 16
 5396              		.cfi_offset 3, -16
 5397              		.cfi_offset 4, -12
 5398              		.cfi_offset 5, -8
 5399              		.cfi_offset 14, -4
1267:src/keys.c    **** 	if ( State2.state_lift ){
ARM GAS  /tmp/cceyv6gL.s 			page 176


 5400              		.loc 1 1267 2 view .LVU1589
 5401 0002 2C4B     		ldr	r3, .L594
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5402              		.loc 1 1268 7 view .LVU1590
 5403 0004 2C4C     		ldr	r4, .L594+4
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5404              		.loc 1 1267 2 view .LVU1591
 5405 0006 1B68     		ldr	r3, [r3]
 5406 0008 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5407 000c 42F00102 		orr	r2, r2, #1
 5408 0010 83F8AD27 		strb	r2, [r3, #1965]
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5409              		.loc 1 1268 2 is_stmt 1 view .LVU1592
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5410              		.loc 1 1268 7 is_stmt 0 view .LVU1593
 5411 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5412              		.loc 1 1268 5 view .LVU1594
 5413 0016 12F04002 		ands	r2, r2, #64
 5414 001a 26D0     		beq	.L588
1269:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5415              		.loc 1 1269 3 is_stmt 1 view .LVU1595
 5416 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5417 0020 42F01002 		orr	r2, r2, #16
 5418 0024 83F8AC27 		strb	r2, [r3, #1964]
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5419              		.loc 1 1270 3 view .LVU1596
 5420 0028 6E20     		movs	r0, #110
 5421              	.LVL429:
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5422              		.loc 1 1270 3 is_stmt 0 view .LVU1597
 5423 002a FFF7FEFF 		bl	get_reg_n
 5424              	.LVL430:
 5425 002e 0546     		mov	r5, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5426              		.loc 1 1270 33 view .LVU1598
 5427 0030 6A20     		movs	r0, #106
 5428 0032 FFF7FEFF 		bl	get_reg_n
 5429              	.LVL431:
 5430 0036 0146     		mov	r1, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5431              		.loc 1 1270 3 view .LVU1599
 5432 0038 2846     		mov	r0, r5
 5433 003a FFF7FEFF 		bl	copyreg
 5434              	.LVL432:
1271:src/keys.c    **** 		lift();
 5435              		.loc 1 1271 3 is_stmt 1 view .LVU1600
 5436 003e 6F20     		movs	r0, #111
 5437 0040 FFF7FEFF 		bl	get_reg_n
 5438              	.LVL433:
 5439 0044 0546     		mov	r5, r0
1271:src/keys.c    **** 		lift();
 5440              		.loc 1 1271 33 is_stmt 0 view .LVU1601
 5441 0046 6B20     		movs	r0, #107
 5442 0048 FFF7FEFF 		bl	get_reg_n
 5443              	.LVL434:
 5444 004c 0146     		mov	r1, r0
ARM GAS  /tmp/cceyv6gL.s 			page 177


1271:src/keys.c    **** 		lift();
 5445              		.loc 1 1271 3 view .LVU1602
 5446 004e 2846     		mov	r0, r5
 5447 0050 FFF7FEFF 		bl	copyreg
 5448              	.LVL435:
1272:src/keys.c    **** 		zero_X();
 5449              		.loc 1 1272 3 is_stmt 1 view .LVU1603
 5450 0054 FFF7FEFF 		bl	lift
 5451              	.LVL436:
1273:src/keys.c    **** 		lift();
 5452              		.loc 1 1273 3 view .LVU1604
 5453 0058 FFF7FEFF 		bl	zero_X
 5454              	.LVL437:
1274:src/keys.c    **** 		State2.state_lift = 0;
 5455              		.loc 1 1274 3 view .LVU1605
 5456 005c FFF7FEFF 		bl	lift
 5457              	.LVL438:
1275:src/keys.c    **** 	}
 5458              		.loc 1 1275 3 view .LVU1606
1275:src/keys.c    **** 	}
 5459              		.loc 1 1275 21 is_stmt 0 view .LVU1607
 5460 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5461 0062 6FF38613 		bfc	r3, #6, #1
 5462 0066 E375     		strb	r3, [r4, #23]
 5463              	.L587:
1284:src/keys.c    **** 
 5464              		.loc 1 1284 1 view .LVU1608
 5465 0068 38BD     		pop	{r3, r4, r5, pc}
 5466              	.LVL439:
 5467              	.L588:
1278:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5468              		.loc 1 1278 3 is_stmt 1 view .LVU1609
 5469 006a 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 5470 006e 62F30411 		bfi	r1, r2, #4, #1
 5471 0072 83F8AC17 		strb	r1, [r3, #1964]
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5472              		.loc 1 1279 3 view .LVU1610
 5473 0076 0546     		mov	r5, r0
 5474 0078 6E20     		movs	r0, #110
 5475              	.LVL440:
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5476              		.loc 1 1279 3 is_stmt 0 view .LVU1611
 5477 007a FFF7FEFF 		bl	get_reg_n
 5478              	.LVL441:
 5479 007e 0446     		mov	r4, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5480              		.loc 1 1279 33 view .LVU1612
 5481 0080 6420     		movs	r0, #100
 5482 0082 FFF7FEFF 		bl	get_reg_n
 5483              	.LVL442:
 5484 0086 0146     		mov	r1, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5485              		.loc 1 1279 3 view .LVU1613
 5486 0088 2046     		mov	r0, r4
 5487 008a FFF7FEFF 		bl	copyreg
 5488              	.LVL443:
1280:src/keys.c    **** 		zero_X();
ARM GAS  /tmp/cceyv6gL.s 			page 178


 5489              		.loc 1 1280 3 is_stmt 1 view .LVU1614
 5490 008e 6F20     		movs	r0, #111
 5491 0090 FFF7FEFF 		bl	get_reg_n
 5492              	.LVL444:
 5493 0094 0446     		mov	r4, r0
1280:src/keys.c    **** 		zero_X();
 5494              		.loc 1 1280 33 is_stmt 0 view .LVU1615
 5495 0096 6520     		movs	r0, #101
 5496 0098 FFF7FEFF 		bl	get_reg_n
 5497              	.LVL445:
 5498 009c 0146     		mov	r1, r0
1280:src/keys.c    **** 		zero_X();
 5499              		.loc 1 1280 3 view .LVU1616
 5500 009e 2046     		mov	r0, r4
 5501 00a0 FFF7FEFF 		bl	copyreg
 5502              	.LVL446:
1281:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5503              		.loc 1 1281 3 is_stmt 1 view .LVU1617
 5504 00a4 FFF7FEFF 		bl	zero_X
 5505              	.LVL447:
1282:src/keys.c    **** 	}
 5506              		.loc 1 1282 3 view .LVU1618
1282:src/keys.c    **** 	}
 5507              		.loc 1 1282 6 is_stmt 0 view .LVU1619
 5508 00a8 002D     		cmp	r5, #0
 5509 00aa DDD0     		beq	.L587
1282:src/keys.c    **** 	}
 5510              		.loc 1 1282 17 is_stmt 1 discriminator 1 view .LVU1620
1284:src/keys.c    **** 
 5511              		.loc 1 1284 1 is_stmt 0 discriminator 1 view .LVU1621
 5512 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5513              		.cfi_restore 14
 5514              		.cfi_restore 5
 5515              		.cfi_restore 4
 5516              		.cfi_restore 3
 5517              		.cfi_def_cfa_offset 0
 5518              	.LVL448:
1282:src/keys.c    **** 	}
 5519              		.loc 1 1282 17 discriminator 1 view .LVU1622
 5520 00b0 FFF7FEBF 		b	zero_Y
 5521              	.LVL449:
 5522              	.L595:
 5523              		.align	2
 5524              	.L594:
 5525 00b4 00000000 		.word	main_ram
 5526 00b8 00000000 		.word	StateWhileOn
 5527              		.cfi_endproc
 5528              	.LFE25:
 5530              		.section	.text.current_catalogue_max,"ax",%progbits
 5531              		.align	1
 5532              		.p2align 2,,3
 5533              		.global	current_catalogue_max
 5534              		.syntax unified
 5535              		.thumb
 5536              		.thumb_func
 5537              		.fpu fpv4-sp-d16
 5539              	current_catalogue_max:
ARM GAS  /tmp/cceyv6gL.s 			page 179


 5540              	.LFB44:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 5541              		.loc 1 2477 33 is_stmt 1 view -0
 5542              		.cfi_startproc
 5543              		@ args = 0, pretend = 0, frame = 0
 5544              		@ frame_needed = 0, uses_anonymous_args = 0
 5545              		@ link register save eliminated.
2480:src/keys.c    **** 	{
 5546              		.loc 1 2480 2 view .LVU1624
2511:src/keys.c    **** #endif
 5547              		.loc 1 2511 2 view .LVU1625
2511:src/keys.c    **** #endif
 5548              		.loc 1 2511 31 is_stmt 0 view .LVU1626
 5549 0000 024B     		ldr	r3, .L597
2511:src/keys.c    **** #endif
 5550              		.loc 1 2511 24 view .LVU1627
 5551 0002 034A     		ldr	r2, .L597+4
2511:src/keys.c    **** #endif
 5552              		.loc 1 2511 31 view .LVU1628
 5553 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2513:src/keys.c    **** 
 5554              		.loc 1 2513 1 view .LVU1629
 5555 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5556 0008 7047     		bx	lr
 5557              	.L598:
 5558 000a 00BF     		.align	2
 5559              	.L597:
 5560 000c 00000000 		.word	StateWhileOn
 5561 0010 00000000 		.word	.LANCHOR8
 5562              		.cfi_endproc
 5563              	.LFE44:
 5565              		.section	.text.current_catalogue,"ax",%progbits
 5566              		.align	1
 5567              		.p2align 2,,3
 5568              		.global	current_catalogue
 5569              		.syntax unified
 5570              		.thumb
 5571              		.thumb_func
 5572              		.fpu fpv4-sp-d16
 5574              	current_catalogue:
 5575              	.LVL450:
 5576              	.LFB46:
2526:src/keys.c    **** 	// A quick table of catalogue tables
 5577              		.loc 1 2526 33 is_stmt 1 view -0
 5578              		.cfi_startproc
 5579              		@ args = 0, pretend = 0, frame = 0
 5580              		@ frame_needed = 0, uses_anonymous_args = 0
 5581              		@ link register save eliminated.
2529:src/keys.c    **** 	{
 5582              		.loc 1 2529 2 view .LVU1631
2556:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5583              		.loc 1 2556 2 view .LVU1632
2557:src/keys.c    **** 	int m, i;
 5584              		.loc 1 2557 2 view .LVU1633
2557:src/keys.c    **** 	int m, i;
 5585              		.loc 1 2557 25 is_stmt 0 view .LVU1634
 5586 0000 314A     		ldr	r2, .L626
ARM GAS  /tmp/cceyv6gL.s 			page 180


2557:src/keys.c    **** 	int m, i;
 5587              		.loc 1 2557 15 view .LVU1635
 5588 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5589              	.LVL451:
2558:src/keys.c    **** 	unsigned p, q;
 5590              		.loc 1 2558 2 is_stmt 1 view .LVU1636
2559:src/keys.c    **** 
 5591              		.loc 1 2559 2 view .LVU1637
2561:src/keys.c    **** 		if (n == OP_ZERO)
 5592              		.loc 1 2561 2 view .LVU1638
2561:src/keys.c    **** 		if (n == OP_ZERO)
 5593              		.loc 1 2561 5 is_stmt 0 view .LVU1639
 5594 0004 102B     		cmp	r3, #16
 5595 0006 39D0     		beq	.L620
2566:src/keys.c    **** 		if (n == OP_ZERO)
 5596              		.loc 1 2566 2 is_stmt 1 view .LVU1640
2566:src/keys.c    **** 		if (n == OP_ZERO)
 5597              		.loc 1 2566 5 is_stmt 0 view .LVU1641
 5598 0008 112B     		cmp	r3, #17
 5599 000a 32D0     		beq	.L621
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5600              		.loc 1 2571 2 is_stmt 1 view .LVU1642
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5601              		.loc 1 2571 5 is_stmt 0 view .LVU1643
 5602 000c 122B     		cmp	r3, #18
 5603 000e 45D0     		beq	.L622
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5604              		.loc 1 2584 2 is_stmt 1 view .LVU1644
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5605              		.loc 1 2584 5 is_stmt 0 view .LVU1645
 5606 0010 0E2B     		cmp	r3, #14
 5607 0012 38D0     		beq	.L623
2587:src/keys.c    **** 
 5608              		.loc 1 2587 3 is_stmt 1 view .LVU1646
2587:src/keys.c    **** 
 5609              		.loc 1 2587 7 is_stmt 0 view .LVU1647
 5610 0014 2D4A     		ldr	r2, .L626+4
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5611              		.loc 1 2589 35 view .LVU1648
 5612 0016 A3F10B01 		sub	r1, r3, #11
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5613              		.loc 1 2589 5 view .LVU1649
 5614 001a 0429     		cmp	r1, #4
2587:src/keys.c    **** 
 5615              		.loc 1 2587 7 view .LVU1650
 5616 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5617              	.LVL452:
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5618              		.loc 1 2589 2 is_stmt 1 view .LVU1651
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5619              		.loc 1 2589 5 is_stmt 0 view .LVU1652
 5620 0020 38D9     		bls	.L606
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5621              		.loc 1 2592 2 is_stmt 1 view .LVU1653
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5622              		.loc 1 2592 5 is_stmt 0 view .LVU1654
 5623 0022 142B     		cmp	r3, #20
ARM GAS  /tmp/cceyv6gL.s 			page 181


 5624 0024 4DD8     		bhi	.L614
2596:src/keys.c    **** 	p = cat[0];
 5625              		.loc 1 2596 2 is_stmt 1 view .LVU1655
2526:src/keys.c    **** 	// A quick table of catalogue tables
 5626              		.loc 1 2526 33 is_stmt 0 view .LVU1656
 5627 0026 10B4     		push	{r4}
 5628              		.cfi_def_cfa_offset 4
 5629              		.cfi_offset 4, -4
2596:src/keys.c    **** 	p = cat[0];
 5630              		.loc 1 2596 11 view .LVU1657
 5631 0028 00EBA001 		add	r1, r0, r0, asr #2
2596:src/keys.c    **** 	p = cat[0];
 5632              		.loc 1 2596 6 view .LVU1658
 5633 002c 5318     		adds	r3, r2, r1
 5634              	.LVL453:
2597:src/keys.c    **** 	q = cat[1];
 5635              		.loc 1 2597 2 is_stmt 1 view .LVU1659
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5636              		.loc 1 2598 2 view .LVU1660
2599:src/keys.c    **** 
 5637              		.loc 1 2599 2 view .LVU1661
2599:src/keys.c    **** 
 5638              		.loc 1 2599 35 is_stmt 0 view .LVU1662
 5639 002e 4000     		lsls	r0, r0, #1
 5640              	.LVL454:
2597:src/keys.c    **** 	q = cat[1];
 5641              		.loc 1 2597 4 view .LVU1663
 5642 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5643              	.LVL455:
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5644              		.loc 1 2598 4 view .LVU1664
 5645 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5646              	.LVL456:
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5647              		.loc 1 2598 4 view .LVU1665
 5648 0034 2649     		ldr	r1, .L626+8
 5649              	.LVL457:
2599:src/keys.c    **** 
 5650              		.loc 1 2599 54 view .LVU1666
 5651 0036 C443     		mvns	r4, r0
2599:src/keys.c    **** 
 5652              		.loc 1 2599 35 view .LVU1667
 5653 0038 00F00600 		and	r0, r0, #6
2599:src/keys.c    **** 
 5654              		.loc 1 2599 54 view .LVU1668
 5655 003c 04F00604 		and	r4, r4, #6
2599:src/keys.c    **** 
 5656              		.loc 1 2599 24 view .LVU1669
 5657 0040 0230     		adds	r0, r0, #2
2599:src/keys.c    **** 
 5658              		.loc 1 2599 48 view .LVU1670
 5659 0042 E340     		lsrs	r3, r3, r4
 5660              	.LVL458:
2599:src/keys.c    **** 
 5661              		.loc 1 2599 18 view .LVU1671
 5662 0044 02FA00F0 		lsl	r0, r2, r0
2599:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 182


 5663              		.loc 1 2599 43 view .LVU1672
 5664 0048 1843     		orrs	r0, r0, r3
2599:src/keys.c    **** 
 5665              		.loc 1 2599 4 view .LVU1673
 5666 004a C0F30903 		ubfx	r3, r0, #0, #10
 5667              	.LVL459:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5668              		.loc 1 2602 2 is_stmt 1 view .LVU1674
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5669              		.loc 1 2602 12 view .LVU1675
2599:src/keys.c    **** 
 5670              		.loc 1 2599 4 is_stmt 0 view .LVU1676
 5671 004e 3422     		movs	r2, #52
 5672              	.LVL460:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5673              		.loc 1 2602 8 view .LVU1677
 5674 0050 0020     		movs	r0, #0
 5675 0052 01E0     		b	.L610
 5676              	.LVL461:
 5677              	.L625:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5678              		.loc 1 2602 8 view .LVU1678
 5679 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5680              	.LVL462:
 5681              	.L610:
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5682              		.loc 1 2603 3 is_stmt 1 view .LVU1679
2605:src/keys.c    **** 	}
 5683              		.loc 1 2605 3 view .LVU1680
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5684              		.loc 1 2603 6 is_stmt 0 view .LVU1681
 5685 0058 9A42     		cmp	r2, r3
 5686 005a 2FDC     		bgt	.L624
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5687              		.loc 1 2602 25 discriminator 2 view .LVU1682
 5688 005c 0130     		adds	r0, r0, #1
 5689              	.LVL463:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5690              		.loc 1 2602 2 discriminator 2 view .LVU1683
 5691 005e 0728     		cmp	r0, #7
2605:src/keys.c    **** 	}
 5692              		.loc 1 2605 5 discriminator 2 view .LVU1684
 5693 0060 A3EB0203 		sub	r3, r3, r2
 5694              	.LVL464:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5695              		.loc 1 2602 24 is_stmt 1 discriminator 2 view .LVU1685
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5696              		.loc 1 2602 12 discriminator 2 view .LVU1686
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5697              		.loc 1 2602 2 is_stmt 0 discriminator 2 view .LVU1687
 5698 0064 F6D1     		bne	.L625
2607:src/keys.c    **** }
 5699              		.loc 1 2607 2 is_stmt 1 view .LVU1688
2607:src/keys.c    **** }
 5700              		.loc 1 2607 9 is_stmt 0 view .LVU1689
 5701 0066 03F12000 		add	r0, r3, #32
 5702              	.LVL465:
ARM GAS  /tmp/cceyv6gL.s 			page 183


2607:src/keys.c    **** }
 5703              		.loc 1 2607 9 view .LVU1690
 5704 006a 0002     		lsls	r0, r0, #8
 5705              	.L599:
2608:src/keys.c    **** 
 5706              		.loc 1 2608 1 view .LVU1691
 5707 006c 5DF8044B 		ldr	r4, [sp], #4
 5708              		.cfi_restore 4
 5709              		.cfi_def_cfa_offset 0
 5710 0070 7047     		bx	lr
 5711              	.LVL466:
 5712              	.L621:
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5713              		.loc 1 2567 3 is_stmt 1 view .LVU1692
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5714              		.loc 1 2567 6 is_stmt 0 view .LVU1693
 5715 0072 4B28     		cmp	r0, #75
 5716 0074 1FD0     		beq	.L612
2569:src/keys.c    **** 	}
 5717              		.loc 1 2569 3 is_stmt 1 view .LVU1694
2569:src/keys.c    **** 	}
 5718              		.loc 1 2569 10 is_stmt 0 view .LVU1695
 5719 0076 40F40450 		orr	r0, r0, #8448
 5720              	.LVL467:
2569:src/keys.c    **** 	}
 5721              		.loc 1 2569 10 view .LVU1696
 5722 007a 7047     		bx	lr
 5723              	.LVL468:
 5724              	.L620:
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5725              		.loc 1 2562 3 is_stmt 1 view .LVU1697
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5726              		.loc 1 2562 6 is_stmt 0 view .LVU1698
 5727 007c 4B28     		cmp	r0, #75
 5728 007e 17D0     		beq	.L611
2564:src/keys.c    **** 	}
 5729              		.loc 1 2564 3 is_stmt 1 view .LVU1699
2564:src/keys.c    **** 	}
 5730              		.loc 1 2564 10 is_stmt 0 view .LVU1700
 5731 0080 40F40050 		orr	r0, r0, #8192
 5732              	.LVL469:
2564:src/keys.c    **** 	}
 5733              		.loc 1 2564 10 view .LVU1701
 5734 0084 7047     		bx	lr
 5735              	.LVL470:
 5736              	.L623:
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5737              		.loc 1 2584 35 discriminator 1 view .LVU1702
 5738 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2585:src/keys.c    **** 	else
 5739              		.loc 1 2585 7 discriminator 1 view .LVU1703
 5740 0088 124B     		ldr	r3, .L626+12
 5741              	.LVL471:
2585:src/keys.c    **** 	else
 5742              		.loc 1 2585 7 discriminator 1 view .LVU1704
 5743 008a 134A     		ldr	r2, .L626+16
 5744              	.LVL472:
ARM GAS  /tmp/cceyv6gL.s 			page 184


2585:src/keys.c    **** 	else
 5745              		.loc 1 2585 7 discriminator 1 view .LVU1705
 5746 008c 11F0100F 		tst	r1, #16
 5747 0090 18BF     		it	ne
 5748 0092 1A46     		movne	r2, r3
 5749              	.L606:
 5750              	.LVL473:
2590:src/keys.c    **** 	}
 5751              		.loc 1 2590 3 is_stmt 1 view .LVU1706
 5752              	.LBB560:
 5753              	.LBI560:
2519:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5754              		.loc 1 2519 15 view .LVU1707
 5755              	.LBB561:
2520:src/keys.c    **** }
 5756              		.loc 1 2520 2 view .LVU1708
2520:src/keys.c    **** }
 5757              		.loc 1 2520 9 is_stmt 0 view .LVU1709
 5758 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5759              	.LVL474:
2520:src/keys.c    **** }
 5760              		.loc 1 2520 9 view .LVU1710
 5761 0096 40F48840 		orr	r0, r0, #17408
 5762              	.LVL475:
2520:src/keys.c    **** }
 5763              		.loc 1 2520 9 view .LVU1711
 5764              	.LBE561:
 5765              	.LBE560:
2590:src/keys.c    **** 	}
 5766              		.loc 1 2590 10 view .LVU1712
 5767 009a 7047     		bx	lr
 5768              	.LVL476:
 5769              	.L622:
 5770              	.LBB562:
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5771              		.loc 1 2572 3 is_stmt 1 view .LVU1713
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5772              		.loc 1 2572 33 is_stmt 0 view .LVU1714
 5773 009c 0F4B     		ldr	r3, .L626+20
 5774              	.LVL477:
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5775              		.loc 1 2572 13 view .LVU1715
 5776 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5777              	.LVL478:
2573:src/keys.c    **** 			// Monadic conversion routine
 5778              		.loc 1 2573 3 is_stmt 1 view .LVU1716
2573:src/keys.c    **** 			// Monadic conversion routine
 5779              		.loc 1 2573 6 is_stmt 0 view .LVU1717
 5780 00a0 5728     		cmp	r0, #87
2575:src/keys.c    **** 		else
 5781              		.loc 1 2575 4 is_stmt 1 view .LVU1718
2575:src/keys.c    **** 		else
 5782              		.loc 1 2575 25 is_stmt 0 view .LVU1719
 5783 00a2 C6BF     		itte	gt
 5784 00a4 5838     		subgt	r0, r0, #88
 5785              	.LVL479:
2575:src/keys.c    **** 		else
ARM GAS  /tmp/cceyv6gL.s 			page 185


 5786              		.loc 1 2575 18 view .LVU1720
 5787 00a6 40F40070 		orrgt	r0, r0, #512
2577:src/keys.c    **** 	}
 5788              		.loc 1 2577 4 is_stmt 1 view .LVU1721
2577:src/keys.c    **** 	}
 5789              		.loc 1 2577 11 is_stmt 0 view .LVU1722
 5790 00aa 40F40C40 		orrle	r0, r0, #35840
 5791 00ae 7047     		bx	lr
 5792              	.LVL480:
 5793              	.L611:
2577:src/keys.c    **** 	}
 5794              		.loc 1 2577 11 view .LVU1723
 5795              	.LBE562:
2563:src/keys.c    **** 		return CONST(n);
 5796              		.loc 1 2563 11 view .LVU1724
 5797 00b0 4FF42740 		mov	r0, #42752
 5798              	.LVL481:
2563:src/keys.c    **** 		return CONST(n);
 5799              		.loc 1 2563 11 view .LVU1725
 5800 00b4 7047     		bx	lr
 5801              	.LVL482:
 5802              	.L612:
2568:src/keys.c    **** 		return CONST_CMPLX(n);
 5803              		.loc 1 2568 11 view .LVU1726
 5804 00b6 4FF42840 		mov	r0, #43008
 5805              	.LVL483:
2568:src/keys.c    **** 		return CONST_CMPLX(n);
 5806              		.loc 1 2568 11 view .LVU1727
 5807 00ba 7047     		bx	lr
 5808              	.LVL484:
 5809              	.L624:
 5810              		.cfi_def_cfa_offset 4
 5811              		.cfi_offset 4, -4
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5812              		.loc 1 2604 4 is_stmt 1 view .LVU1728
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5813              		.loc 1 2604 29 is_stmt 0 view .LVU1729
 5814 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5815              	.LVL485:
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5816              		.loc 1 2604 29 view .LVU1730
 5817 00c0 D4E7     		b	.L599
 5818              	.LVL486:
 5819              	.L614:
 5820              		.cfi_def_cfa_offset 0
 5821              		.cfi_restore 4
2593:src/keys.c    **** 
 5822              		.loc 1 2593 10 view .LVU1731
 5823 00c2 4FF48070 		mov	r0, #256
 5824              	.LVL487:
2608:src/keys.c    **** 
 5825              		.loc 1 2608 1 view .LVU1732
 5826 00c6 7047     		bx	lr
 5827              	.L627:
 5828              		.align	2
 5829              	.L626:
 5830 00c8 00000000 		.word	StateWhileOn
ARM GAS  /tmp/cceyv6gL.s 			page 186


 5831 00cc 00000000 		.word	.LANCHOR12
 5832 00d0 01000000 		.word	.LANCHOR13+1
 5833 00d4 00000000 		.word	.LANCHOR10
 5834 00d8 00000000 		.word	.LANCHOR9
 5835 00dc 00000000 		.word	.LANCHOR11
 5836              		.cfi_endproc
 5837              	.LFE46:
 5839              		.section	.text.process_catalogue,"ax",%progbits
 5840              		.align	1
 5841              		.p2align 2,,3
 5842              		.syntax unified
 5843              		.thumb
 5844              		.thumb_func
 5845              		.fpu fpv4-sp-d16
 5847              	process_catalogue:
 5848              	.LVL488:
 5849              	.LFB48:
2622:src/keys.c    ****    int pos = State.catpos;
 5850              		.loc 1 2622 93 is_stmt 1 view -0
 5851              		.cfi_startproc
 5852              		@ args = 0, pretend = 0, frame = 16
 5853              		@ frame_needed = 0, uses_anonymous_args = 0
2622:src/keys.c    ****    int pos = State.catpos;
 5854              		.loc 1 2622 93 is_stmt 0 view .LVU1734
 5855 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5856              		.cfi_def_cfa_offset 36
 5857              		.cfi_offset 4, -36
 5858              		.cfi_offset 5, -32
 5859              		.cfi_offset 6, -28
 5860              		.cfi_offset 7, -24
 5861              		.cfi_offset 8, -20
 5862              		.cfi_offset 9, -16
 5863              		.cfi_offset 10, -12
 5864              		.cfi_offset 11, -8
 5865              		.cfi_offset 14, -4
2623:src/keys.c    ****    int ch;
 5866              		.loc 1 2623 14 view .LVU1735
 5867 0004 DFF8EC92 		ldr	r9, .L742+24
 5868              	.LBB563:
 5869              	.LBB564:
2511:src/keys.c    **** #endif
 5870              		.loc 1 2511 31 view .LVU1736
 5871 0008 B44F     		ldr	r7, .L742
 5872              	.LBE564:
 5873              	.LBE563:
2623:src/keys.c    ****    int ch;
 5874              		.loc 1 2623 14 view .LVU1737
 5875 000a D9F80040 		ldr	r4, [r9]
 5876              	.LBB569:
 5877              	.LBB565:
2511:src/keys.c    **** #endif
 5878              		.loc 1 2511 31 view .LVU1738
 5879 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5880              	.LBE565:
 5881              	.LBE569:
2623:src/keys.c    ****    int ch;
 5882              		.loc 1 2623 19 view .LVU1739
ARM GAS  /tmp/cceyv6gL.s 			page 187


 5883 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5884              	.LBB570:
 5885              	.LBB566:
2511:src/keys.c    **** #endif
 5886              		.loc 1 2511 24 view .LVU1740
 5887 0016 B24B     		ldr	r3, .L742+4
 5888              	.LBE566:
 5889              	.LBE570:
2623:src/keys.c    ****    int ch;
 5890              		.loc 1 2623 4 is_stmt 1 view .LVU1741
2622:src/keys.c    ****    int pos = State.catpos;
 5891              		.loc 1 2622 93 is_stmt 0 view .LVU1742
 5892 0018 85B0     		sub	sp, sp, #20
 5893              		.cfi_def_cfa_offset 56
 5894              	.LBB571:
 5895              	.LBB567:
2511:src/keys.c    **** #endif
 5896              		.loc 1 2511 24 view .LVU1743
 5897 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 5898              	.LBE567:
 5899              	.LBE571:
2622:src/keys.c    ****    int pos = State.catpos;
 5900              		.loc 1 2622 93 view .LVU1744
 5901 001e 1646     		mov	r6, r2
2623:src/keys.c    ****    int ch;
 5902              		.loc 1 2623 8 view .LVU1745
 5903 0020 C5F34615 		ubfx	r5, r5, #5, #7
 5904              	.LVL489:
2624:src/keys.c    ****    const int ctmax = current_catalogue_max();
 5905              		.loc 1 2624 4 is_stmt 1 view .LVU1746
2625:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 5906              		.loc 1 2625 4 view .LVU1747
 5907              	.LBB572:
 5908              	.LBI563:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 5909              		.loc 1 2477 5 view .LVU1748
 5910              	.LBB568:
2480:src/keys.c    **** 	{
 5911              		.loc 1 2480 2 view .LVU1749
2511:src/keys.c    **** #endif
 5912              		.loc 1 2511 2 view .LVU1750
2511:src/keys.c    **** #endif
 5913              		.loc 1 2511 2 is_stmt 0 view .LVU1751
 5914              	.LBE568:
 5915              	.LBE572:
2626:src/keys.c    **** 
 5916              		.loc 1 2626 4 is_stmt 1 view .LVU1752
2628:src/keys.c    ****      switch (c) {
 5917              		.loc 1 2628 4 view .LVU1753
2628:src/keys.c    ****      switch (c) {
 5918              		.loc 1 2628 7 is_stmt 0 view .LVU1754
 5919 0024 0029     		cmp	r1, #0
 5920 0026 65D0     		beq	.L727
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5921              		.loc 1 2689 11 is_stmt 1 view .LVU1755
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5922              		.loc 1 2689 14 is_stmt 0 view .LVU1756
ARM GAS  /tmp/cceyv6gL.s 			page 188


 5923 0028 0129     		cmp	r1, #1
 5924 002a 00F0ED80 		beq	.L728
2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5925              		.loc 1 2723 11 is_stmt 1 view .LVU1757
2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5926              		.loc 1 2723 14 is_stmt 0 view .LVU1758
 5927 002e 0229     		cmp	r1, #2
 5928 0030 00F00B81 		beq	.L729
 5929              	.LVL490:
 5930              	.L664:
 5931              	.LBB573:
 5932              	.LBB574:
 491:src/keys.c    **** }
 5933              		.loc 1 491 2 is_stmt 1 view .LVU1759
 5934              	.LBB575:
 5935              	.LBI575:
 131:src/keys.c    **** {
 5936              		.loc 1 131 12 view .LVU1760
 5937              	.LBB576:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5938              		.loc 1 133 2 view .LVU1761
 143:src/keys.c    **** }
 5939              		.loc 1 143 2 view .LVU1762
 143:src/keys.c    **** }
 5940              		.loc 1 143 23 is_stmt 0 view .LVU1763
 5941 0034 AB4B     		ldr	r3, .L742+8
 5942              	.LBE576:
 5943              	.LBE575:
 491:src/keys.c    **** }
 5944              		.loc 1 491 49 view .LVU1764
 5945 0036 AC4A     		ldr	r2, .L742+12
 5946              	.LBB578:
 5947              	.LBB577:
 143:src/keys.c    **** }
 5948              		.loc 1 143 23 view .LVU1765
 5949 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 5950              	.LBE577:
 5951              	.LBE578:
 491:src/keys.c    **** }
 5952              		.loc 1 491 49 view .LVU1766
 5953 003a 03EB4303 		add	r3, r3, r3, lsl #1
 5954 003e 02EB4303 		add	r3, r2, r3, lsl #1
 5955              	.LBE574:
 5956              	.LBE573:
 5957              	.LBB582:
 5958              	.LBB583:
 5959              	.LBB584:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5960              		.loc 1 106 16 view .LVU1767
 5961 0042 0025     		movs	r5, #0
 5962              	.LVL491:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5963              		.loc 1 106 16 view .LVU1768
 5964              	.LBE584:
 5965              	.LBE583:
 5966              	.LBE582:
2733:src/keys.c    ****    reset_shift();
ARM GAS  /tmp/cceyv6gL.s 			page 189


 5967              		.loc 1 2733 9 view .LVU1769
 5968 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 5969              	.LVL492:
2733:src/keys.c    ****    reset_shift();
 5970              		.loc 1 2733 9 view .LVU1770
 5971 0046 FFF7FEFF 		bl	remap_chars
 5972              	.LVL493:
2733:src/keys.c    ****    reset_shift();
 5973              		.loc 1 2733 9 view .LVU1771
 5974 004a 0446     		mov	r4, r0
 5975              	.LVL494:
2734:src/keys.c    ****    if (ch == '\0')
 5976              		.loc 1 2734 4 is_stmt 1 view .LVU1772
 5977              	.LBB589:
 5978              	.LBI582:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 5979              		.loc 1 114 13 view .LVU1773
 5980              	.LBE589:
 115:src/keys.c    **** }
 5981              		.loc 1 115 2 view .LVU1774
 5982              	.LBB590:
 5983              	.LBB588:
 5984              	.LBI583:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5985              		.loc 1 104 20 view .LVU1775
 5986              	.LBB587:
 105:src/keys.c    **** 	State2.shifts = shift;
 5987              		.loc 1 105 2 view .LVU1776
 5988              	.LBB585:
 5989              	.LBI585:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5990              		.loc 1 96 13 view .LVU1777
 5991              	.LBB586:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5992              		.loc 1 97 2 view .LVU1778
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5993              		.loc 1 97 18 is_stmt 0 view .LVU1779
 5994 004c FFF7FEFF 		bl	shift_down
 5995              	.LVL495:
  98:src/keys.c    **** }
 5996              		.loc 1 98 2 is_stmt 1 view .LVU1780
 5997              	.LBE586:
 5998              	.LBE585:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5999              		.loc 1 106 2 view .LVU1781
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6000              		.loc 1 106 16 is_stmt 0 view .LVU1782
 6001 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6002              		.loc 1 108 2 is_stmt 1 view .LVU1783
 6003              	.LVL496:
 108:src/keys.c    **** }
 6004              		.loc 1 108 2 is_stmt 0 view .LVU1784
 6005              	.LBE587:
 6006              	.LBE588:
 6007              	.LBE590:
2735:src/keys.c    ****      return STATE_UNFINISHED;
ARM GAS  /tmp/cceyv6gL.s 			page 190


 6008              		.loc 1 2735 4 is_stmt 1 view .LVU1785
2735:src/keys.c    ****      return STATE_UNFINISHED;
 6009              		.loc 1 2735 7 is_stmt 0 view .LVU1786
 6010 0052 002C     		cmp	r4, #0
 6011 0054 6FD0     		beq	.L726
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6012              		.loc 1 2737 4 is_stmt 1 view .LVU1787
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6013              		.loc 1 2737 7 is_stmt 0 view .LVU1788
 6014 0056 AAF10B0A 		sub	r10, r10, #11
 6015              	.LVL497:
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6016              		.loc 1 2737 7 view .LVU1789
 6017 005a BAF1040F 		cmp	r10, #4
 6018 005e 40F2CB80 		bls	.L678
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6019              		.loc 1 2741 4 is_stmt 1 view .LVU1790
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6020              		.loc 1 2741 8 is_stmt 0 view .LVU1791
 6021 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6022              		.loc 1 2741 7 view .LVU1792
 6023 0064 092D     		cmp	r5, #9
 6024 0066 40F2C780 		bls	.L678
 6025              	.LVL498:
 6026              	.L646:
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6027              		.loc 1 2746 4 is_stmt 1 view .LVU1793
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6028              		.loc 1 2746 27 is_stmt 0 view .LVU1794
 6029 006a 7B19     		adds	r3, r7, r5
 6030 006c 0025     		movs	r5, #0
 6031 006e 83F82050 		strb	r5, [r3, #32]
2747:src/keys.c    ****      char buf[16];
 6032              		.loc 1 2747 4 is_stmt 1 view .LVU1795
 6033              	.LVL499:
2747:src/keys.c    ****      char buf[16];
 6034              		.loc 1 2747 18 view .LVU1796
2747:src/keys.c    ****      char buf[16];
 6035              		.loc 1 2747 4 is_stmt 0 view .LVU1797
 6036 0072 B8F1000F 		cmp	r8, #0
 6037 0076 00F0D780 		beq	.L724
 6038              	.LVL500:
 6039              	.L666:
 6040              	.LBB591:
2748:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6041              		.loc 1 2748 6 is_stmt 1 view .LVU1798
2749:src/keys.c    ****      int i;
 6042              		.loc 1 2749 6 view .LVU1799
2749:src/keys.c    ****      int i;
 6043              		.loc 1 2749 24 is_stmt 0 view .LVU1800
 6044 007a 2846     		mov	r0, r5
 6045 007c FFF7FEFF 		bl	current_catalogue
 6046              	.LVL501:
 6047 0080 6946     		mov	r1, sp
 6048 0082 FFF7FEFF 		bl	catcmd
 6049              	.LVL502:
ARM GAS  /tmp/cceyv6gL.s 			page 191


 6050 0086 0446     		mov	r4, r0
 6051              	.LVL503:
2750:src/keys.c    **** 
 6052              		.loc 1 2750 6 is_stmt 1 view .LVU1801
2752:src/keys.c    ****        cmd++;
 6053              		.loc 1 2752 6 view .LVU1802
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6054              		.loc 1 2753 8 view .LVU1803
2752:src/keys.c    ****        cmd++;
 6055              		.loc 1 2752 10 is_stmt 0 view .LVU1804
 6056 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6057              	.LVL504:
2752:src/keys.c    ****        cmd++;
 6058              		.loc 1 2752 9 view .LVU1805
 6059 008a 1428     		cmp	r0, #20
 6060 008c 04BF     		itt	eq
 6061 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6062              		.loc 1 2753 11 view .LVU1806
 6063 0090 0134     		addeq	r4, r4, #1
 6064              	.LVL505:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6065              		.loc 1 2754 6 is_stmt 1 view .LVU1807
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6066              		.loc 1 2754 16 view .LVU1808
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6067              		.loc 1 2754 6 is_stmt 0 view .LVU1809
 6068 0092 0028     		cmp	r0, #0
 6069 0094 00F0BF80 		beq	.L668
 6070 0098 DFF85CB2 		ldr	fp, .L742+28
 6071 009c C4F1010A 		rsb	r10, r4, #1
 6072 00a0 06E0     		b	.L671
 6073              	.LVL506:
 6074              	.L731:
 6075              	.LBB592:
2759:src/keys.c    **** 	 break;
 6076              		.loc 1 2759 16 view .LVU1810
 6077 00a2 C0F2BA80 		blt	.L670
 6078              	.LBE592:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6079              		.loc 1 2754 19 discriminator 2 view .LVU1811
 6080 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6081              	.LVL507:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6082              		.loc 1 2754 6 discriminator 2 view .LVU1812
 6083 00aa 0028     		cmp	r0, #0
 6084 00ac 00F0BF80 		beq	.L730
 6085              	.LVL508:
 6086              	.L671:
 6087              	.LBB593:
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6088              		.loc 1 2755 8 is_stmt 1 view .LVU1813
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6089              		.loc 1 2755 22 is_stmt 0 view .LVU1814
 6090 00b0 FFF7FEFF 		bl	remap_chars
 6091              	.LVL509:
2759:src/keys.c    **** 	 break;
ARM GAS  /tmp/cceyv6gL.s 			page 192


 6092              		.loc 1 2759 13 is_stmt 1 view .LVU1815
 6093              	.LBE593:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6094              		.loc 1 2754 32 view .LVU1816
 6095              	.LBB594:
2756:src/keys.c    ****        if (c > cl)
 6096              		.loc 1 2756 8 view .LVU1817
2756:src/keys.c    ****        if (c > cl)
 6097              		.loc 1 2756 46 is_stmt 0 view .LVU1818
 6098 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6099              	.LVL510:
2757:src/keys.c    **** 	 goto set_pos;
 6100              		.loc 1 2757 8 is_stmt 1 view .LVU1819
2757:src/keys.c    **** 	 goto set_pos;
 6101              		.loc 1 2757 11 is_stmt 0 view .LVU1820
 6102 00b8 9842     		cmp	r0, r3
 6103 00ba 0AEB0402 		add	r2, r10, r4
 6104              	.LVL511:
2757:src/keys.c    **** 	 goto set_pos;
 6105              		.loc 1 2757 11 view .LVU1821
 6106              	.LBE594:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6107              		.loc 1 2754 16 is_stmt 1 view .LVU1822
 6108              	.LBB595:
2757:src/keys.c    **** 	 goto set_pos;
 6109              		.loc 1 2757 11 is_stmt 0 view .LVU1823
 6110 00be F0DD     		ble	.L731
 6111              	.LVL512:
 6112              	.L669:
2757:src/keys.c    **** 	 goto set_pos;
 6113              		.loc 1 2757 11 view .LVU1824
 6114 00c0 D9F80040 		ldr	r4, [r9]
 6115              	.L649:
2757:src/keys.c    **** 	 goto set_pos;
 6116              		.loc 1 2757 11 view .LVU1825
 6117              	.LBE595:
 6118              	.LBE591:
2768:src/keys.c    ****      --pos;
 6119              		.loc 1 2768 10 is_stmt 1 view .LVU1826
 6120 00c4 002E     		cmp	r6, #0
 6121 00c6 00F0B680 		beq	.L653
2768:src/keys.c    ****      --pos;
 6122              		.loc 1 2768 20 is_stmt 0 view .LVU1827
 6123 00ca 4DB1     		cbz	r5, .L647
 6124              	.LVL513:
 6125              	.L725:
2768:src/keys.c    ****      --pos;
 6126              		.loc 1 2768 20 view .LVU1828
 6127 00cc 2846     		mov	r0, r5
 6128 00ce FFF7FEFF 		bl	current_catalogue
 6129              	.LVL514:
2769:src/keys.c    ****    State.catpos = pos;
 6130              		.loc 1 2769 6 is_stmt 1 view .LVU1829
2768:src/keys.c    ****      --pos;
 6131              		.loc 1 2768 10 view .LVU1830
 6132              	.LBB596:
 6133              	.LBI596:
ARM GAS  /tmp/cceyv6gL.s 			page 193


2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6134              		.loc 1 2615 12 view .LVU1831
 6135              	.LBB597:
2616:src/keys.c    **** }
 6136              		.loc 1 2616 2 view .LVU1832
2616:src/keys.c    **** }
 6137              		.loc 1 2616 33 is_stmt 0 view .LVU1833
 6138 00d2 00F0F000 		and	r0, r0, #240
 6139              	.LBE597:
 6140              	.LBE596:
2768:src/keys.c    ****      --pos;
 6141              		.loc 1 2768 27 view .LVU1834
 6142 00d6 F028     		cmp	r0, #240
 6143 00d8 40F0AD80 		bne	.L653
2768:src/keys.c    ****      --pos;
 6144              		.loc 1 2768 20 view .LVU1835
 6145 00dc 013D     		subs	r5, r5, #1
 6146              	.LVL515:
2768:src/keys.c    ****      --pos;
 6147              		.loc 1 2768 20 view .LVU1836
 6148 00de F5D1     		bne	.L725
 6149              	.LVL516:
 6150              	.L647:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6151              		.loc 1 2770 4 is_stmt 1 view .LVU1837
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6152              		.loc 1 2770 17 is_stmt 0 view .LVU1838
 6153 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6154 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6155 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2771:src/keys.c    ****  }
 6156              		.loc 1 2771 4 is_stmt 1 view .LVU1839
2771:src/keys.c    ****  }
 6157              		.loc 1 2771 11 is_stmt 0 view .LVU1840
 6158 00ec 3320     		movs	r0, #51
 6159              	.L738:
2772:src/keys.c    **** 
 6160              		.loc 1 2772 2 view .LVU1841
 6161 00ee 05B0     		add	sp, sp, #20
 6162              		.cfi_remember_state
 6163              		.cfi_def_cfa_offset 36
 6164              		@ sp needed
 6165 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6166              	.LVL517:
 6167              	.L727:
 6168              		.cfi_restore_state
2629:src/keys.c    **** #ifdef DM42
 6169              		.loc 1 2629 6 is_stmt 1 view .LVU1842
 6170 00f4 431F     		subs	r3, r0, #5
 6171 00f6 1F2B     		cmp	r3, #31
 6172 00f8 2FD8     		bhi	.L630
 6173 00fa DFE803F0 		tbb	[pc, r3]
 6174              	.LVL518:
 6175              	.L632:
 6176 00fe 35       		.byte	(.L636-.L632)/2
 6177 00ff 2E       		.byte	(.L630-.L632)/2
 6178 0100 2E       		.byte	(.L630-.L632)/2
ARM GAS  /tmp/cceyv6gL.s 			page 194


 6179 0101 2E       		.byte	(.L630-.L632)/2
 6180 0102 2E       		.byte	(.L630-.L632)/2
 6181 0103 2E       		.byte	(.L630-.L632)/2
 6182 0104 2E       		.byte	(.L630-.L632)/2
 6183 0105 35       		.byte	(.L636-.L632)/2
 6184 0106 2E       		.byte	(.L630-.L632)/2
 6185 0107 2E       		.byte	(.L630-.L632)/2
 6186 0108 2E       		.byte	(.L630-.L632)/2
 6187 0109 20       		.byte	(.L635-.L632)/2
 6188 010a 2E       		.byte	(.L630-.L632)/2
 6189 010b 64       		.byte	(.L634-.L632)/2
 6190 010c 2E       		.byte	(.L630-.L632)/2
 6191 010d 2E       		.byte	(.L630-.L632)/2
 6192 010e 2E       		.byte	(.L630-.L632)/2
 6193 010f 2E       		.byte	(.L630-.L632)/2
 6194 0110 2E       		.byte	(.L630-.L632)/2
 6195 0111 6B       		.byte	(.L633-.L632)/2
 6196 0112 2E       		.byte	(.L630-.L632)/2
 6197 0113 2E       		.byte	(.L630-.L632)/2
 6198 0114 2E       		.byte	(.L630-.L632)/2
 6199 0115 2E       		.byte	(.L630-.L632)/2
 6200 0116 2E       		.byte	(.L630-.L632)/2
 6201 0117 2E       		.byte	(.L630-.L632)/2
 6202 0118 2E       		.byte	(.L630-.L632)/2
 6203 0119 2E       		.byte	(.L630-.L632)/2
 6204 011a 2E       		.byte	(.L630-.L632)/2
 6205 011b 2E       		.byte	(.L630-.L632)/2
 6206 011c 2E       		.byte	(.L630-.L632)/2
 6207 011d 27       		.byte	(.L631-.L632)/2
 6208              		.p2align 1
 6209              	.L737:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6210              		.loc 1 2718 42 is_stmt 0 discriminator 1 view .LVU1843
 6211 011e 734A     		ldr	r2, .L742+16
 6212              	.LVL519:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6213              		.loc 1 2718 42 discriminator 1 view .LVU1844
 6214 0120 7B69     		ldr	r3, [r7, #20]
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6215              		.loc 1 2718 24 discriminator 1 view .LVU1845
 6216 0122 1A42     		tst	r2, r3
 6217 0124 75D0     		beq	.L661
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6218              		.loc 1 2720 8 is_stmt 1 view .LVU1846
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6219              		.loc 1 2720 38 is_stmt 0 view .LVU1847
 6220 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6221 0128 C3F30012 		ubfx	r2, r3, #4, #1
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6222              		.loc 1 2720 30 view .LVU1848
 6223 012c C2F10102 		rsb	r2, r2, #1
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6224              		.loc 1 2720 26 view .LVU1849
 6225 0130 62F30413 		bfi	r3, r2, #4, #1
 6226 0134 BB75     		strb	r3, [r7, #22]
 6227              	.LVL520:
 6228              	.L726:
ARM GAS  /tmp/cceyv6gL.s 			page 195


2721:src/keys.c    ****      }
 6229              		.loc 1 2721 8 is_stmt 1 view .LVU1850
2721:src/keys.c    ****      }
 6230              		.loc 1 2721 15 is_stmt 0 view .LVU1851
 6231 0136 3320     		movs	r0, #51
 6232              	.L628:
2772:src/keys.c    **** 
 6233              		.loc 1 2772 2 view .LVU1852
 6234 0138 05B0     		add	sp, sp, #20
 6235              		.cfi_remember_state
 6236              		.cfi_def_cfa_offset 36
 6237              		@ sp needed
 6238 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6239              	.LVL521:
 6240              	.L635:
 6241              		.cfi_restore_state
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6242              		.loc 1 2658 8 is_stmt 1 view .LVU1853
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6243              		.loc 1 2658 11 is_stmt 0 view .LVU1854
 6244 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6245 0140 23B1     		cbz	r3, .L631
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6246              		.loc 1 2658 33 discriminator 1 view .LVU1855
 6247 0142 FFF7FEFF 		bl	keyticks
 6248              	.LVL522:
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6249              		.loc 1 2658 30 discriminator 1 view .LVU1856
 6250 0146 1D28     		cmp	r0, #29
 6251 0148 40F39580 		ble	.L732
 6252              	.L631:
2668:src/keys.c    ****        return STATE_UNFINISHED;
 6253              		.loc 1 2668 8 is_stmt 1 view .LVU1857
 6254 014c 0020     		movs	r0, #0
 6255 014e FFF7FEFF 		bl	init_cat
 6256              	.LVL523:
2669:src/keys.c    **** 
 6257              		.loc 1 2669 8 view .LVU1858
2669:src/keys.c    **** 
 6258              		.loc 1 2669 15 is_stmt 0 view .LVU1859
 6259 0152 3320     		movs	r0, #51
2772:src/keys.c    **** 
 6260              		.loc 1 2772 2 view .LVU1860
 6261 0154 05B0     		add	sp, sp, #20
 6262              		.cfi_remember_state
 6263              		.cfi_def_cfa_offset 36
 6264              		@ sp needed
 6265 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6266              	.LVL524:
 6267              	.L630:
 6268              		.cfi_restore_state
 6269              	.LBB598:
 6270              	.LBI573:
 435:src/keys.c    **** {
 6271              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1861
 6272              	.LBB579:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
ARM GAS  /tmp/cceyv6gL.s 			page 196


 6273              		.loc 1 437 2 discriminator 4 view .LVU1862
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6274              		.loc 1 485 2 discriminator 4 view .LVU1863
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6275              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1864
 6276 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6277              		.loc 1 485 5 discriminator 4 view .LVU1865
 6278 015c 13F0100F 		tst	r3, #16
 6279 0160 14BF     		ite	ne
 6280 0162 0421     		movne	r1, #4
 6281              	.LVL525:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6282              		.loc 1 485 5 discriminator 4 view .LVU1866
 6283 0164 0021     		moveq	r1, #0
 6284 0166 65E7     		b	.L664
 6285              	.LVL526:
 6286              	.L636:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6287              		.loc 1 485 5 discriminator 4 view .LVU1867
 6288              	.LBE579:
 6289              	.LBE598:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6290              		.loc 1 2636 8 is_stmt 1 view .LVU1868
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6291              		.loc 1 2636 11 is_stmt 0 view .LVU1869
 6292 0168 4545     		cmp	r5, r8
 6293 016a EFDA     		bge	.L631
 6294 016c 2846     		mov	r0, r5
 6295              	.LVL527:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6296              		.loc 1 2636 24 discriminator 1 view .LVU1870
 6297 016e 002E     		cmp	r6, #0
 6298 0170 00F08D80 		beq	.L733
 6299              	.LVL528:
 6300              	.LBB599:
 6301              	.LBI599:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6302              		.loc 1 2615 12 is_stmt 1 view .LVU1871
 6303              	.LBB600:
2616:src/keys.c    **** }
 6304              		.loc 1 2616 2 view .LVU1872
2616:src/keys.c    **** }
 6305              		.loc 1 2616 10 is_stmt 0 view .LVU1873
 6306 0174 FFF7FEFF 		bl	current_catalogue
 6307              	.LVL529:
2616:src/keys.c    **** }
 6308              		.loc 1 2616 33 view .LVU1874
 6309 0178 00F0F003 		and	r3, r0, #240
 6310              	.LBE600:
 6311              	.LBE599:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6312              		.loc 1 2636 27 view .LVU1875
 6313 017c F02B     		cmp	r3, #240
 6314              	.LBB602:
 6315              	.LBB601:
2616:src/keys.c    **** }
ARM GAS  /tmp/cceyv6gL.s 			page 197


 6316              		.loc 1 2616 10 view .LVU1876
 6317 017e 0446     		mov	r4, r0
 6318              	.LBE601:
 6319              	.LBE602:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6320              		.loc 1 2636 27 view .LVU1877
 6321 0180 E4D0     		beq	.L631
 6322              	.L639:
 6323              	.LBB603:
2637:src/keys.c    **** 
 6324              		.loc 1 2637 3 is_stmt 1 view .LVU1878
2639:src/keys.c    **** 
 6325              		.loc 1 2639 3 view .LVU1879
 6326 0182 0020     		movs	r0, #0
 6327 0184 FFF7FEFF 		bl	init_cat
 6328              	.LVL530:
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6329              		.loc 1 2641 3 view .LVU1880
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6330              		.loc 1 2641 6 is_stmt 0 view .LVU1881
 6331 0188 14F47043 		ands	r3, r4, #61440
 6332 018c 00F08C80 		beq	.L640
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6333              		.loc 1 2641 7 discriminator 1 view .LVU1882
 6334 0190 B3F5704F 		cmp	r3, #61440
 6335 0194 00F08880 		beq	.L640
 6336              	.LBB604:
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6337              		.loc 1 2642 5 is_stmt 1 view .LVU1883
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6338              		.loc 1 2642 31 is_stmt 0 view .LVU1884
 6339 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6340 019c A3F12005 		sub	r5, r3, #32
 6341              	.LVL531:
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6342              		.loc 1 2642 31 view .LVU1885
 6343 01a0 EDB2     		uxtb	r5, r5
 6344              	.LVL532:
2643:src/keys.c    **** 	     return op;
 6345              		.loc 1 2643 5 is_stmt 1 view .LVU1886
2643:src/keys.c    **** 	     return op;
 6346              		.loc 1 2643 8 is_stmt 0 view .LVU1887
 6347 01a2 012D     		cmp	r5, #1
 6348 01a4 40F28980 		bls	.L641
2643:src/keys.c    **** 	     return op;
 6349              		.loc 1 2643 56 discriminator 1 view .LVU1888
 6350 01a8 6C2D     		cmp	r5, #108
 6351 01aa 00F08680 		beq	.L641
2643:src/keys.c    **** 	     return op;
 6352              		.loc 1 2643 77 discriminator 2 view .LVU1889
 6353 01ae 242D     		cmp	r5, #36
 6354 01b0 00F08380 		beq	.L641
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6355              		.loc 1 2645 5 is_stmt 1 view .LVU1890
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6356              		.loc 1 2645 30 is_stmt 0 view .LVU1891
 6357 01b4 A5F12D02 		sub	r2, r5, #45
ARM GAS  /tmp/cceyv6gL.s 			page 198


2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6358              		.loc 1 2645 8 view .LVU1892
 6359 01b8 062A     		cmp	r2, #6
 6360 01ba 00F29F80 		bhi	.L644
2646:src/keys.c    **** 	   else
 6361              		.loc 1 2646 7 is_stmt 1 view .LVU1893
2646:src/keys.c    **** 	   else
 6362              		.loc 1 2646 28 is_stmt 0 view .LVU1894
 6363 01be 4D3B     		subs	r3, r3, #77
2646:src/keys.c    **** 	   else
 6364              		.loc 1 2646 19 view .LVU1895
 6365 01c0 FB73     		strb	r3, [r7, #15]
 6366              	.LBE604:
 6367              	.LBE603:
2655:src/keys.c    **** 
 6368              		.loc 1 2655 15 view .LVU1896
 6369 01c2 3320     		movs	r0, #51
 6370              	.LBB614:
 6371              	.LBB607:
 6372 01c4 B8E7     		b	.L628
 6373              	.LVL533:
 6374              	.L634:
2655:src/keys.c    **** 
 6375              		.loc 1 2655 15 view .LVU1897
 6376              	.LBE607:
 6377              	.LBE614:
2672:src/keys.c    ****        if (pos == 0)
 6378              		.loc 1 2672 8 is_stmt 1 view .LVU1898
2672:src/keys.c    ****        if (pos == 0)
 6379              		.loc 1 2672 22 is_stmt 0 view .LVU1899
 6380 01c6 0023     		movs	r3, #0
 6381 01c8 3B77     		strb	r3, [r7, #28]
2673:src/keys.c    **** 	 goto set_max;
 6382              		.loc 1 2673 8 is_stmt 1 view .LVU1900
2673:src/keys.c    **** 	 goto set_max;
 6383              		.loc 1 2673 11 is_stmt 0 view .LVU1901
 6384 01ca 002D     		cmp	r5, #0
 6385 01cc 5DD1     		bne	.L734
 6386              	.LVL534:
 6387              	.L648:
2766:src/keys.c    ****  set_pos:
 6388              		.loc 1 2766 4 is_stmt 1 view .LVU1902
2766:src/keys.c    ****  set_pos:
 6389              		.loc 1 2766 8 is_stmt 0 view .LVU1903
 6390 01ce 08F1FF35 		add	r5, r8, #-1
 6391              	.LVL535:
2766:src/keys.c    ****  set_pos:
 6392              		.loc 1 2766 8 view .LVU1904
 6393 01d2 77E7     		b	.L649
 6394              	.LVL536:
 6395              	.L633:
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6396              		.loc 1 2680 8 is_stmt 1 view .LVU1905
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6397              		.loc 1 2680 22 is_stmt 0 view .LVU1906
 6398 01d4 0023     		movs	r3, #0
 6399 01d6 3B77     		strb	r3, [r7, #28]
ARM GAS  /tmp/cceyv6gL.s 			page 199


2681:src/keys.c    ****        if (pos >= ctmax)
 6400              		.loc 1 2681 8 is_stmt 1 view .LVU1907
2681:src/keys.c    ****        if (pos >= ctmax)
 6401              		.loc 1 2681 14 is_stmt 0 view .LVU1908
 6402 01d8 06E0     		b	.L652
 6403              	.LVL537:
 6404              	.L735:
2681:src/keys.c    ****        if (pos >= ctmax)
 6405              		.loc 1 2681 29 discriminator 1 view .LVU1909
 6406 01da 66B3     		cbz	r6, .L653
 6407              	.LBB615:
 6408              	.LBB616:
2616:src/keys.c    **** }
 6409              		.loc 1 2616 10 view .LVU1910
 6410 01dc FFF7FEFF 		bl	current_catalogue
 6411              	.LVL538:
2616:src/keys.c    **** }
 6412              		.loc 1 2616 33 view .LVU1911
 6413 01e0 00F0F000 		and	r0, r0, #240
 6414              	.LBE616:
 6415              	.LBE615:
2681:src/keys.c    ****        if (pos >= ctmax)
 6416              		.loc 1 2681 41 view .LVU1912
 6417 01e4 F028     		cmp	r0, #240
 6418 01e6 26D1     		bne	.L653
 6419              	.L652:
2681:src/keys.c    ****        if (pos >= ctmax)
 6420              		.loc 1 2681 65 is_stmt 1 discriminator 3 view .LVU1913
2681:src/keys.c    ****        if (pos >= ctmax)
 6421              		.loc 1 2681 14 discriminator 3 view .LVU1914
 6422 01e8 0135     		adds	r5, r5, #1
 6423              	.LVL539:
 6424              	.LBB619:
 6425              	.LBI615:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6426              		.loc 1 2615 12 discriminator 3 view .LVU1915
 6427              	.LBB617:
2616:src/keys.c    **** }
 6428              		.loc 1 2616 2 discriminator 3 view .LVU1916
 6429              	.LBE617:
 6430              	.LBE619:
2681:src/keys.c    ****        if (pos >= ctmax)
 6431              		.loc 1 2681 14 is_stmt 0 discriminator 3 view .LVU1917
 6432 01ea A845     		cmp	r8, r5
 6433              	.LBB620:
 6434              	.LBB618:
2616:src/keys.c    **** }
 6435              		.loc 1 2616 10 discriminator 3 view .LVU1918
 6436 01ec 2846     		mov	r0, r5
 6437              	.LBE618:
 6438              	.LBE620:
2681:src/keys.c    ****        if (pos >= ctmax)
 6439              		.loc 1 2681 14 discriminator 3 view .LVU1919
 6440 01ee F4DC     		bgt	.L735
 6441              	.LVL540:
2768:src/keys.c    ****      --pos;
 6442              		.loc 1 2768 10 is_stmt 1 view .LVU1920
ARM GAS  /tmp/cceyv6gL.s 			page 200


2683:src/keys.c    ****        goto set_pos;
 6443              		.loc 1 2683 7 is_stmt 0 view .LVU1921
 6444 01f0 3546     		mov	r5, r6
 6445              	.LVL541:
2768:src/keys.c    ****      --pos;
 6446              		.loc 1 2768 10 view .LVU1922
 6447 01f2 06B3     		cbz	r6, .L653
 6448              	.LVL542:
2768:src/keys.c    ****      --pos;
 6449              		.loc 1 2768 10 view .LVU1923
 6450 01f4 0025     		movs	r5, #0
 6451              	.LVL543:
2768:src/keys.c    ****      --pos;
 6452              		.loc 1 2768 10 view .LVU1924
 6453 01f6 73E7     		b	.L647
 6454              	.LVL544:
 6455              	.L678:
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6456              		.loc 1 2741 8 view .LVU1925
 6457 01f8 2B46     		mov	r3, r5
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6458              		.loc 1 2742 6 is_stmt 1 view .LVU1926
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6459              		.loc 1 2742 31 is_stmt 0 view .LVU1927
 6460 01fa 3B44     		add	r3, r3, r7
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6461              		.loc 1 2742 27 view .LVU1928
 6462 01fc 0135     		adds	r5, r5, #1
 6463 01fe EDB2     		uxtb	r5, r5
 6464 0200 3D77     		strb	r5, [r7, #28]
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6465              		.loc 1 2742 31 view .LVU1929
 6466 0202 83F82040 		strb	r4, [r3, #32]
 6467 0206 30E7     		b	.L646
 6468              	.LVL545:
 6469              	.L728:
2690:src/keys.c    ****        /*
 6470              		.loc 1 2690 6 is_stmt 1 view .LVU1930
2690:src/keys.c    ****        /*
 6471              		.loc 1 2690 9 is_stmt 0 view .LVU1931
 6472 0208 BAF1120F 		cmp	r10, #18
 6473 020c 21D0     		beq	.L736
 6474              	.L655:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6475              		.loc 1 2718 11 is_stmt 1 view .LVU1932
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6476              		.loc 1 2718 14 is_stmt 0 view .LVU1933
 6477 020e 2428     		cmp	r0, #36
 6478 0210 85D0     		beq	.L737
 6479              	.LVL546:
 6480              	.L661:
2733:src/keys.c    ****    reset_shift();
 6481              		.loc 1 2733 4 is_stmt 1 view .LVU1934
 6482              	.LBB621:
 435:src/keys.c    **** {
 6483              		.loc 1 435 12 view .LVU1935
 6484              	.LBB580:
ARM GAS  /tmp/cceyv6gL.s 			page 201


 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6485              		.loc 1 437 2 view .LVU1936
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6486              		.loc 1 485 2 view .LVU1937
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6487              		.loc 1 485 5 is_stmt 0 view .LVU1938
 6488 0212 0121     		movs	r1, #1
 6489              	.LVL547:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6490              		.loc 1 485 5 view .LVU1939
 6491 0214 0EE7     		b	.L664
 6492              	.LVL548:
 6493              	.L668:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6494              		.loc 1 485 5 view .LVU1940
 6495 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6496              	.LVL549:
 6497              	.L670:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6498              		.loc 1 485 5 view .LVU1941
 6499              	.LBE580:
 6500              	.LBE621:
 6501              	.LBB622:
2762:src/keys.c    ****        goto set_pos;
 6502              		.loc 1 2762 6 is_stmt 1 view .LVU1942
2762:src/keys.c    ****        goto set_pos;
 6503              		.loc 1 2762 9 is_stmt 0 view .LVU1943
 6504 021a 002B     		cmp	r3, #0
 6505 021c 3FF450AF 		beq	.L669
 6506              	.LBE622:
2747:src/keys.c    ****      char buf[16];
 6507              		.loc 1 2747 31 is_stmt 1 view .LVU1944
 6508 0220 0135     		adds	r5, r5, #1
 6509              	.LVL550:
2747:src/keys.c    ****      char buf[16];
 6510              		.loc 1 2747 18 view .LVU1945
2747:src/keys.c    ****      char buf[16];
 6511              		.loc 1 2747 4 is_stmt 0 view .LVU1946
 6512 0222 A845     		cmp	r8, r5
 6513 0224 7FF429AF 		bne	.L666
 6514              	.LVL551:
 6515              	.L724:
2747:src/keys.c    ****      char buf[16];
 6516              		.loc 1 2747 4 view .LVU1947
 6517 0228 D9F80040 		ldr	r4, [r9]
 6518 022c CFE7     		b	.L648
 6519              	.LVL552:
 6520              	.L730:
2747:src/keys.c    ****      char buf[16];
 6521              		.loc 1 2747 4 view .LVU1948
 6522 022e 3A44     		add	r2, r2, r7
 6523              	.LVL553:
2747:src/keys.c    ****      char buf[16];
 6524              		.loc 1 2747 4 view .LVU1949
 6525 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6526              	.LVL554:
2747:src/keys.c    ****      char buf[16];
ARM GAS  /tmp/cceyv6gL.s 			page 202


 6527              		.loc 1 2747 4 view .LVU1950
 6528 0234 F1E7     		b	.L670
 6529              	.LVL555:
 6530              	.L653:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6531              		.loc 1 2770 17 view .LVU1951
 6532 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6533 023a 05F07F05 		and	r5, r5, #127
 6534              	.LVL556:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6535              		.loc 1 2770 4 is_stmt 1 view .LVU1952
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6536              		.loc 1 2770 17 is_stmt 0 view .LVU1953
 6537 023e 65F34B13 		bfi	r3, r5, #5, #7
 6538 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2771:src/keys.c    ****  }
 6539              		.loc 1 2771 4 is_stmt 1 view .LVU1954
2771:src/keys.c    ****  }
 6540              		.loc 1 2771 11 is_stmt 0 view .LVU1955
 6541 0246 3320     		movs	r0, #51
 6542 0248 51E7     		b	.L738
 6543              	.LVL557:
 6544              	.L729:
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6545              		.loc 1 2724 6 is_stmt 1 view .LVU1956
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6546              		.loc 1 2724 9 is_stmt 0 view .LVU1957
 6547 024a 1028     		cmp	r0, #16
 6548 024c 23D0     		beq	.L739
 6549              	.L663:
2733:src/keys.c    ****    reset_shift();
 6550              		.loc 1 2733 4 is_stmt 1 view .LVU1958
 6551              	.LVL558:
 6552              	.LBB623:
 435:src/keys.c    **** {
 6553              		.loc 1 435 12 view .LVU1959
 6554              	.LBB581:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6555              		.loc 1 437 2 view .LVU1960
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6556              		.loc 1 485 2 view .LVU1961
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6557              		.loc 1 485 5 is_stmt 0 view .LVU1962
 6558 024e 0521     		movs	r1, #5
 6559              	.LVL559:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6560              		.loc 1 485 5 view .LVU1963
 6561 0250 F0E6     		b	.L664
 6562              	.LVL560:
 6563              	.L736:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6564              		.loc 1 485 5 view .LVU1964
 6565              	.LBE581:
 6566              	.LBE623:
2690:src/keys.c    ****        /*
 6567              		.loc 1 2690 32 discriminator 1 view .LVU1965
 6568 0252 0128     		cmp	r0, #1
ARM GAS  /tmp/cceyv6gL.s 			page 203


 6569 0254 DBD1     		bne	.L655
 6570              	.LBB624:
2699:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6571              		.loc 1 2699 8 is_stmt 1 view .LVU1966
2707:src/keys.c    ****        int i;
 6572              		.loc 1 2707 8 view .LVU1967
2707:src/keys.c    ****        int i;
 6573              		.loc 1 2707 26 is_stmt 0 view .LVU1968
 6574 0256 2846     		mov	r0, r5
 6575              	.LVL561:
2707:src/keys.c    ****        int i;
 6576              		.loc 1 2707 26 view .LVU1969
 6577 0258 FFF7FEFF 		bl	current_catalogue
 6578              	.LVL562:
2707:src/keys.c    ****        int i;
 6579              		.loc 1 2707 26 view .LVU1970
 6580 025c 0446     		mov	r4, r0
 6581              	.LVL563:
2708:src/keys.c    **** 
 6582              		.loc 1 2708 8 is_stmt 1 view .LVU1971
2710:src/keys.c    ****        if (isRARG(op))
 6583              		.loc 1 2710 8 view .LVU1972
 6584 025e 0020     		movs	r0, #0
 6585              	.LVL564:
2710:src/keys.c    ****        if (isRARG(op))
 6586              		.loc 1 2710 8 is_stmt 0 view .LVU1973
 6587 0260 FFF7FEFF 		bl	init_cat
 6588              	.LVL565:
2711:src/keys.c    **** 	 return op ^ 1;
 6589              		.loc 1 2711 8 is_stmt 1 view .LVU1974
2711:src/keys.c    **** 	 return op ^ 1;
 6590              		.loc 1 2711 11 is_stmt 0 view .LVU1975
 6591 0264 14F47043 		ands	r3, r4, #61440
 6592 0268 29D0     		beq	.L656
2711:src/keys.c    **** 	 return op ^ 1;
 6593              		.loc 1 2711 12 discriminator 1 view .LVU1976
 6594 026a B3F5704F 		cmp	r3, #61440
 6595 026e 26D0     		beq	.L656
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6596              		.loc 1 2712 3 is_stmt 1 view .LVU1977
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6597              		.loc 1 2712 13 is_stmt 0 view .LVU1978
 6598 0270 84F00100 		eor	r0, r4, #1
 6599 0274 60E7     		b	.L628
 6600              	.LVL566:
 6601              	.L732:
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6602              		.loc 1 2712 13 view .LVU1979
 6603              	.LBE624:
2659:src/keys.c    **** 	   goto search;
 6604              		.loc 1 2659 3 is_stmt 1 view .LVU1980
2659:src/keys.c    **** 	   goto search;
 6605              		.loc 1 2659 7 is_stmt 0 view .LVU1981
 6606 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6607              	.LVL567:
2659:src/keys.c    **** 	   goto search;
 6608              		.loc 1 2659 7 view .LVU1982
ARM GAS  /tmp/cceyv6gL.s 			page 204


 6609 0278 013D     		subs	r5, r5, #1
 6610 027a EDB2     		uxtb	r5, r5
2659:src/keys.c    **** 	   goto search;
 6611              		.loc 1 2659 6 view .LVU1983
 6612 027c 3D77     		strb	r5, [r7, #28]
 6613 027e 002D     		cmp	r5, #0
 6614 0280 7FF4F3AE 		bne	.L646
 6615 0284 D9F80040 		ldr	r4, [r9]
 6616 0288 2AE7     		b	.L647
 6617              	.LVL568:
 6618              	.L734:
2676:src/keys.c    ****        goto set_pos;
 6619              		.loc 1 2676 3 is_stmt 1 view .LVU1984
 6620 028a 013D     		subs	r5, r5, #1
 6621              	.LVL569:
2677:src/keys.c    **** 
 6622              		.loc 1 2677 8 view .LVU1985
 6623 028c 1AE7     		b	.L649
 6624              	.LVL570:
 6625              	.L733:
2677:src/keys.c    **** 
 6626              		.loc 1 2677 8 is_stmt 0 view .LVU1986
 6627 028e FFF7FEFF 		bl	current_catalogue
 6628              	.LVL571:
2677:src/keys.c    **** 
 6629              		.loc 1 2677 8 view .LVU1987
 6630 0292 0446     		mov	r4, r0
 6631 0294 75E7     		b	.L639
 6632              	.LVL572:
 6633              	.L739:
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6634              		.loc 1 2724 19 discriminator 1 view .LVU1988
 6635 0296 BAF1130F 		cmp	r10, #19
 6636 029a D8D1     		bne	.L663
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6637              		.loc 1 2725 8 is_stmt 1 view .LVU1989
 6638 029c 0020     		movs	r0, #0
 6639              	.LVL573:
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6640              		.loc 1 2725 8 is_stmt 0 view .LVU1990
 6641 029e FFF7FEFF 		bl	init_cat
 6642              	.LVL574:
2726:src/keys.c    ****      }
 6643              		.loc 1 2726 8 is_stmt 1 view .LVU1991
2726:src/keys.c    ****      }
 6644              		.loc 1 2726 15 is_stmt 0 view .LVU1992
 6645 02a2 40F23D10 		movw	r0, #317
 6646 02a6 47E7     		b	.L628
 6647              	.L640:
 6648              	.LBB625:
2651:src/keys.c    **** 	 }
 6649              		.loc 1 2651 5 is_stmt 1 view .LVU1993
 6650              	.LBB608:
 6651              	.LBB609:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6652              		.loc 1 715 5 is_stmt 0 view .LVU1994
 6653 02a8 C4F30723 		ubfx	r3, r4, #8, #8
ARM GAS  /tmp/cceyv6gL.s 			page 205


 6654 02ac 012B     		cmp	r3, #1
 6655              	.LBE609:
 6656              	.LBE608:
2651:src/keys.c    **** 	 }
 6657              		.loc 1 2651 12 view .LVU1995
 6658 02ae 2046     		mov	r0, r4
 6659              	.LVL575:
 6660              	.LBB611:
 6661              	.LBI608:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6662              		.loc 1 714 12 is_stmt 1 view .LVU1996
 6663              	.LBB610:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6664              		.loc 1 715 2 view .LVU1997
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6665              		.loc 1 715 5 is_stmt 0 view .LVU1998
 6666 02b0 7FF442AF 		bne	.L628
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6667              		.loc 1 715 5 view .LVU1999
 6668 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6669              	.LVL576:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6670              		.loc 1 715 5 view .LVU2000
 6671 02b8 3EE7     		b	.L628
 6672              	.LVL577:
 6673              	.L641:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6674              		.loc 1 715 5 view .LVU2001
 6675              	.LBE610:
 6676              	.LBE611:
 6677              	.LBB612:
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6678              		.loc 1 2644 7 is_stmt 1 view .LVU2002
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6679              		.loc 1 2644 14 is_stmt 0 view .LVU2003
 6680 02ba 2046     		mov	r0, r4
 6681 02bc 3CE7     		b	.L628
 6682              	.LVL578:
 6683              	.L656:
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6684              		.loc 1 2644 14 view .LVU2004
 6685 02be 0C48     		ldr	r0, .L742+20
 6686              	.LBE612:
 6687              	.LBE625:
2622:src/keys.c    ****    int pos = State.catpos;
 6688              		.loc 1 2622 93 view .LVU2005
 6689 02c0 40F28522 		movw	r2, #645
 6690 02c4 0146     		mov	r1, r0
 6691 02c6 0023     		movs	r3, #0
 6692 02c8 01E0     		b	.L658
 6693              	.LVL579:
 6694              	.L741:
2622:src/keys.c    ****    int pos = State.catpos;
 6695              		.loc 1 2622 93 view .LVU2006
 6696 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6697              	.LVL580:
 6698              	.L658:
ARM GAS  /tmp/cceyv6gL.s 			page 206


 6699              	.LBB626:
2714:src/keys.c    **** 	   return conv_mapping[i^1];
 6700              		.loc 1 2714 3 is_stmt 1 view .LVU2007
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6701              		.loc 1 2713 72 view .LVU2008
2714:src/keys.c    **** 	   return conv_mapping[i^1];
 6702              		.loc 1 2714 6 is_stmt 0 view .LVU2009
 6703 02ce A242     		cmp	r2, r4
 6704 02d0 1ED0     		beq	.L740
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6705              		.loc 1 2713 72 discriminator 2 view .LVU2010
 6706 02d2 0133     		adds	r3, r3, #1
 6707              	.LVL581:
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6708              		.loc 1 2713 20 is_stmt 1 discriminator 2 view .LVU2011
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6709              		.loc 1 2713 8 is_stmt 0 discriminator 2 view .LVU2012
 6710 02d4 0C2B     		cmp	r3, #12
 6711 02d6 F8D1     		bne	.L741
 6712 02d8 2DE7     		b	.L726
 6713              	.L743:
 6714 02da 00BF     		.align	2
 6715              	.L742:
 6716 02dc 00000000 		.word	StateWhileOn
 6717 02e0 00000000 		.word	.LANCHOR8
 6718 02e4 00000000 		.word	.LANCHOR6
 6719 02e8 00000000 		.word	.LANCHOR15
 6720 02ec 00080800 		.word	526336
 6721 02f0 00000000 		.word	.LANCHOR14
 6722 02f4 00000000 		.word	main_ram
 6723 02f8 1F000000 		.word	StateWhileOn+31
 6724              	.LVL582:
 6725              	.L644:
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6726              		.loc 1 2713 8 discriminator 2 view .LVU2013
 6727              	.LBE626:
 6728              	.LBB627:
 6729              	.LBB613:
2648:src/keys.c    **** 	 }
 6730              		.loc 1 2648 7 is_stmt 1 view .LVU2014
 6731              	.LBB605:
 6732              	.LBI605:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6733              		.loc 1 552 13 view .LVU2015
 6734              	.LBB606:
 553:src/keys.c    **** 		return;
 6735              		.loc 1 553 2 view .LVU2016
 553:src/keys.c    **** 		return;
 6736              		.loc 1 553 6 is_stmt 0 view .LVU2017
 6737 02fc FFF7FEFF 		bl	is_bad_cmdline
 6738              	.LVL583:
 553:src/keys.c    **** 		return;
 6739              		.loc 1 553 5 view .LVU2018
 6740 0300 0028     		cmp	r0, #0
 6741 0302 7FF418AF 		bne	.L726
 6742 0306 2846     		mov	r0, r5
 6743 0308 FFF7FEFF 		bl	init_arg.part.0
ARM GAS  /tmp/cceyv6gL.s 			page 207


 6744              	.LVL584:
 6745              	.LBE606:
 6746              	.LBE605:
 6747              	.LBE613:
 6748              	.LBE627:
2655:src/keys.c    **** 
 6749              		.loc 1 2655 15 view .LVU2019
 6750 030c 3320     		movs	r0, #51
 6751 030e 13E7     		b	.L628
 6752              	.LVL585:
 6753              	.L740:
 6754              	.LBB628:
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6755              		.loc 1 2715 5 is_stmt 1 view .LVU2020
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6756              		.loc 1 2715 26 is_stmt 0 view .LVU2021
 6757 0310 83F00103 		eor	r3, r3, #1
 6758              	.LVL586:
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6759              		.loc 1 2715 24 view .LVU2022
 6760 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6761 0318 0EE7     		b	.L628
 6762              	.LBE628:
 6763              		.cfi_endproc
 6764              	.LFE48:
 6766              		.section	.text.find_pos,"ax",%progbits
 6767              		.align	1
 6768              		.p2align 2,,3
 6769              		.global	find_pos
 6770              		.syntax unified
 6771              		.thumb
 6772              		.thumb_func
 6773              		.fpu fpv4-sp-d16
 6775              	find_pos:
 6776              	.LVL587:
 6777              	.LFB49:
2775:src/keys.c    **** 	int pos;
 6778              		.loc 1 2775 32 is_stmt 1 view -0
 6779              		.cfi_startproc
 6780              		@ args = 0, pretend = 0, frame = 16
 6781              		@ frame_needed = 0, uses_anonymous_args = 0
2776:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6782              		.loc 1 2776 2 view .LVU2024
2777:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6783              		.loc 1 2777 2 view .LVU2025
 6784              	.LBB629:
 6785              	.LBI629:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 6786              		.loc 1 2477 5 view .LVU2026
 6787              	.LBB630:
2480:src/keys.c    **** 	{
 6788              		.loc 1 2480 2 view .LVU2027
2511:src/keys.c    **** #endif
 6789              		.loc 1 2511 2 view .LVU2028
 6790              	.LBE630:
 6791              	.LBE629:
2775:src/keys.c    **** 	int pos;
ARM GAS  /tmp/cceyv6gL.s 			page 208


 6792              		.loc 1 2775 32 is_stmt 0 view .LVU2029
 6793 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6794              		.cfi_def_cfa_offset 32
 6795              		.cfi_offset 4, -32
 6796              		.cfi_offset 5, -28
 6797              		.cfi_offset 6, -24
 6798              		.cfi_offset 7, -20
 6799              		.cfi_offset 8, -16
 6800              		.cfi_offset 9, -12
 6801              		.cfi_offset 10, -8
 6802              		.cfi_offset 14, -4
 6803              	.LBB632:
 6804              	.LBB631:
2511:src/keys.c    **** #endif
 6805              		.loc 1 2511 31 view .LVU2030
 6806 0004 1E4B     		ldr	r3, .L761
2511:src/keys.c    **** #endif
 6807              		.loc 1 2511 24 view .LVU2031
 6808 0006 1F4A     		ldr	r2, .L761+4
2511:src/keys.c    **** #endif
 6809              		.loc 1 2511 31 view .LVU2032
 6810 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2511:src/keys.c    **** #endif
 6811              		.loc 1 2511 24 view .LVU2033
 6812 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6813              	.LVL588:
2511:src/keys.c    **** #endif
 6814              		.loc 1 2511 24 view .LVU2034
 6815              	.LBE631:
 6816              	.LBE632:
2778:src/keys.c    **** 		char buf[16];
 6817              		.loc 1 2778 2 is_stmt 1 view .LVU2035
2778:src/keys.c    **** 		char buf[16];
 6818              		.loc 1 2778 16 view .LVU2036
2775:src/keys.c    **** 	int pos;
 6819              		.loc 1 2775 32 is_stmt 0 view .LVU2037
 6820 000e 84B0     		sub	sp, sp, #16
 6821              		.cfi_def_cfa_offset 48
2778:src/keys.c    **** 		char buf[16];
 6822              		.loc 1 2778 2 view .LVU2038
 6823 0010 BAF1000F 		cmp	r10, #0
 6824 0014 32D0     		beq	.L751
 6825 0016 8146     		mov	r9, r0
2778:src/keys.c    **** 		char buf[16];
 6826              		.loc 1 2778 11 view .LVU2039
 6827 0018 4FF00008 		mov	r8, #0
 6828 001c C0F10107 		rsb	r7, r0, #1
 6829              	.LVL589:
 6830              	.L750:
 6831              	.LBB633:
2779:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6832              		.loc 1 2779 3 is_stmt 1 view .LVU2040
2780:src/keys.c    **** 		int i;
 6833              		.loc 1 2780 3 view .LVU2041
2780:src/keys.c    **** 		int i;
 6834              		.loc 1 2780 21 is_stmt 0 view .LVU2042
 6835 0020 4046     		mov	r0, r8
ARM GAS  /tmp/cceyv6gL.s 			page 209


 6836 0022 FFF7FEFF 		bl	current_catalogue
 6837              	.LVL590:
 6838 0026 6946     		mov	r1, sp
 6839 0028 FFF7FEFF 		bl	catcmd
 6840              	.LVL591:
 6841 002c 0646     		mov	r6, r0
 6842              	.LVL592:
2781:src/keys.c    **** 
 6843              		.loc 1 2781 3 is_stmt 1 view .LVU2043
2783:src/keys.c    **** 			cmd++;
 6844              		.loc 1 2783 3 view .LVU2044
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6845              		.loc 1 2784 4 view .LVU2045
2783:src/keys.c    **** 			cmd++;
 6846              		.loc 1 2783 7 is_stmt 0 view .LVU2046
 6847 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6848              	.LVL593:
2783:src/keys.c    **** 			cmd++;
 6849              		.loc 1 2783 6 view .LVU2047
 6850 0030 1428     		cmp	r0, #20
 6851 0032 04BF     		itt	eq
 6852 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6853              		.loc 1 2784 7 view .LVU2048
 6854 0036 0136     		addeq	r6, r6, #1
 6855              	.LVL594:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6856              		.loc 1 2785 3 is_stmt 1 view .LVU2049
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6857              		.loc 1 2785 13 view .LVU2050
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6858              		.loc 1 2785 3 is_stmt 0 view .LVU2051
 6859 0038 A8B1     		cbz	r0, .L752
 6860 003a 09F1FF33 		add	r3, r9, #-1
 6861 003e 04E0     		b	.L749
 6862              	.LVL595:
 6863              	.L760:
 6864              	.LBB634:
2790:src/keys.c    **** 				break;
 6865              		.loc 1 2790 12 view .LVU2052
 6866 0040 12DB     		blt	.L747
 6867              	.LBE634:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6868              		.loc 1 2785 16 discriminator 2 view .LVU2053
 6869 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6870              	.LVL596:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6871              		.loc 1 2785 16 discriminator 2 view .LVU2054
 6872 0046 3C44     		add	r4, r4, r7
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6873              		.loc 1 2785 3 discriminator 2 view .LVU2055
 6874 0048 B0B1     		cbz	r0, .L759
 6875              	.LVL597:
 6876              	.L749:
 6877              	.LBB635:
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6878              		.loc 1 2786 4 is_stmt 1 view .LVU2056
ARM GAS  /tmp/cceyv6gL.s 			page 210


 6879 004a 5C1C     		adds	r4, r3, #1
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6880              		.loc 1 2786 18 is_stmt 0 view .LVU2057
 6881 004c FFF7FEFF 		bl	remap_chars
 6882              	.LVL598:
 6883 0050 0546     		mov	r5, r0
2787:src/keys.c    **** 			if (c > cl)
 6884              		.loc 1 2787 19 view .LVU2058
 6885 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6886              	.LVL599:
2787:src/keys.c    **** 			if (c > cl)
 6887              		.loc 1 2787 4 is_stmt 1 view .LVU2059
2787:src/keys.c    **** 			if (c > cl)
 6888              		.loc 1 2787 19 is_stmt 0 view .LVU2060
 6889 0054 FFF7FEFF 		bl	remap_chars
 6890              	.LVL600:
2790:src/keys.c    **** 				break;
 6891              		.loc 1 2790 9 is_stmt 1 view .LVU2061
 6892              	.LBE635:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6893              		.loc 1 2785 29 view .LVU2062
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6894              		.loc 1 2785 13 view .LVU2063
 6895              	.LBB636:
2788:src/keys.c    **** 				return pos;
 6896              		.loc 1 2788 4 view .LVU2064
2788:src/keys.c    **** 				return pos;
 6897              		.loc 1 2788 7 is_stmt 0 view .LVU2065
 6898 0058 8542     		cmp	r5, r0
 6899 005a 2346     		mov	r3, r4
 6900 005c F0DD     		ble	.L760
 6901              	.LVL601:
 6902              	.L744:
2788:src/keys.c    **** 				return pos;
 6903              		.loc 1 2788 7 view .LVU2066
 6904              	.LBE636:
 6905              	.LBE633:
2797:src/keys.c    **** 
 6906              		.loc 1 2797 1 view .LVU2067
 6907 005e 4046     		mov	r0, r8
 6908 0060 04B0     		add	sp, sp, #16
 6909              		.cfi_remember_state
 6910              		.cfi_def_cfa_offset 32
 6911              		@ sp needed
 6912 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6913              	.LVL602:
 6914              	.L752:
 6915              		.cfi_restore_state
 6916              	.LBB637:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6917              		.loc 1 2785 3 view .LVU2068
 6918 0066 4C46     		mov	r4, r9
 6919              	.LVL603:
 6920              	.L747:
2793:src/keys.c    **** 			return pos;
 6921              		.loc 1 2793 3 is_stmt 1 view .LVU2069
2793:src/keys.c    **** 			return pos;
ARM GAS  /tmp/cceyv6gL.s 			page 211


 6922              		.loc 1 2793 6 is_stmt 0 view .LVU2070
 6923 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6924 006a 002B     		cmp	r3, #0
 6925 006c F7D0     		beq	.L744
 6926              	.LBE637:
2778:src/keys.c    **** 		char buf[16];
 6927              		.loc 1 2778 29 is_stmt 1 view .LVU2071
 6928 006e 08F10108 		add	r8, r8, #1
 6929              	.LVL604:
2778:src/keys.c    **** 		char buf[16];
 6930              		.loc 1 2778 16 view .LVU2072
2778:src/keys.c    **** 		char buf[16];
 6931              		.loc 1 2778 2 is_stmt 0 view .LVU2073
 6932 0072 D045     		cmp	r8, r10
 6933 0074 D4D1     		bne	.L750
 6934 0076 F2E7     		b	.L744
 6935              	.LVL605:
 6936              	.L759:
2778:src/keys.c    **** 		char buf[16];
 6937              		.loc 1 2778 2 view .LVU2074
 6938 0078 4C44     		add	r4, r4, r9
 6939 007a F5E7     		b	.L747
 6940              	.LVL606:
 6941              	.L751:
2778:src/keys.c    **** 		char buf[16];
 6942              		.loc 1 2778 11 view .LVU2075
 6943 007c D046     		mov	r8, r10
 6944 007e EEE7     		b	.L744
 6945              	.L762:
 6946              		.align	2
 6947              	.L761:
 6948 0080 00000000 		.word	StateWhileOn
 6949 0084 00000000 		.word	.LANCHOR8
 6950              		.cfi_endproc
 6951              	.LFE49:
 6953              		.section	.text.get_alpha_state,"ax",%progbits
 6954              		.align	1
 6955              		.p2align 2,,3
 6956              		.global	get_alpha_state
 6957              		.syntax unified
 6958              		.thumb
 6959              		.thumb_func
 6960              		.fpu fpv4-sp-d16
 6962              	get_alpha_state:
 6963              	.LFB61:
3122:src/keys.c    **** 
3123:src/keys.c    **** 
3124:src/keys.c    **** static int process_registerlist(const keycode c) {
3125:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3126:src/keys.c    **** 	enum shifts shift = reset_shift();
3127:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3128:src/keys.c    **** 	const int g_max = global_regs();
3129:src/keys.c    **** 
3130:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3131:src/keys.c    **** 		if (local_regs())
3132:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
ARM GAS  /tmp/cceyv6gL.s 			page 212


3134:src/keys.c    **** 		goto reset_window;
3135:src/keys.c    **** 	}
3136:src/keys.c    **** 	else if (n <= 9) {
3137:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3139:src/keys.c    **** 			dv = n;
3140:src/keys.c    **** 		State2.digval = dv;
3141:src/keys.c    **** 		goto reset_window;
3142:src/keys.c    **** 	}
3143:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3144:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3145:src/keys.c    **** 		set_smode(SDISP_SHOW);
3146:src/keys.c    **** 	}
3147:src/keys.c    **** 	else if (n != NO_REG) {
3148:src/keys.c    **** 		State2.digval = n;
3149:src/keys.c    **** 		goto reset_window;
3150:src/keys.c    **** 	}
3151:src/keys.c    **** 
3152:src/keys.c    **** 	switch (c) {
3153:src/keys.c    **** 	case K_DOWN:
3154:src/keys.c    **** 		if (State2.digval > 0) {
3155:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3156:src/keys.c    **** 				State2.digval = global_regs();
3157:src/keys.c    **** 			--State2.digval;
3158:src/keys.c    **** 		}
3159:src/keys.c    **** 		else
3160:src/keys.c    **** 			State2.digval = max - 1;
3161:src/keys.c    **** 		goto reset_window;
3162:src/keys.c    **** 
3163:src/keys.c    **** 	case K_UP:
3164:src/keys.c    **** 		if (State2.digval < max - 1) {
3165:src/keys.c    **** 			State2.digval++;
3166:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3167:src/keys.c    **** 				State2.digval = regX_idx;
3168:src/keys.c    **** 		}
3169:src/keys.c    **** 		else	
3170:src/keys.c    **** 			State2.digval = 0;
3171:src/keys.c    **** 		goto reset_window;
3172:src/keys.c    **** 
3173:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3174:src/keys.c    **** 	case K04:
3175:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3176:src/keys.c    **** 		goto reset_window;
3177:src/keys.c    **** #endif
3178:src/keys.c    **** 
3179:src/keys.c    **** 	case K24:			
3180:src/keys.c    **** 	//case K60:
3181:src/keys.c    **** 		if (State2.disp_temp)
3182:src/keys.c    **** 			return STATE_UNFINISHED;
3183:src/keys.c    **** 		break;		// Exit doing nothing
3184:src/keys.c    **** 
3185:src/keys.c    **** 	case K20:		// ENTER
3186:src/keys.c    **** 		if (shift == SHIFT_F) {
3187:src/keys.c    **** 			State2.disp_as_alpha = 1;
3188:src/keys.c    **** 			goto reset_window;
3189:src/keys.c    **** 		}
3190:src/keys.c    **** 	case K11:		// RCL
ARM GAS  /tmp/cceyv6gL.s 			page 213


3191:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3192:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3193:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3194:src/keys.c    **** #else
3195:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3196:src/keys.c    **** #endif
3197:src/keys.c    **** 			State2.registerlist = 0;
3198:src/keys.c    **** 			State2.digval = 0;
3199:src/keys.c    **** 			State2.digval2 = 0;
3200:src/keys.c    **** 			return n;
3201:src/keys.c    **** 		}
3202:src/keys.c    **** 	default:
3203:src/keys.c    **** 		return STATE_UNFINISHED;
3204:src/keys.c    **** 	}
3205:src/keys.c    **** 	State2.registerlist = 0;
3206:src/keys.c    **** 	State2.digval = 0;
3207:src/keys.c    **** 	State2.digval2 = 0;
3208:src/keys.c    **** reset_window:
3209:src/keys.c    **** 	State2.window = 0;
3210:src/keys.c    **** 	return STATE_UNFINISHED;
3211:src/keys.c    **** }
3212:src/keys.c    **** 
3213:src/keys.c    **** 
3214:src/keys.c    **** static int process(const int c) {
3215:src/keys.c    ****   const enum shifts shift = cur_shift();
3216:src/keys.c    ****   enum catalogues cat;
3217:src/keys.c    **** 
3218:src/keys.c    ****   if (Running || Pause) {
3219:src/keys.c    ****     /*
3220:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3221:src/keys.c    ****      */
3222:src/keys.c    ****     if (c == K60 || c == K63) {
3223:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3224:src/keys.c    **** 	set_pc(0);
3225:src/keys.c    ****       Pause = 0;
3226:src/keys.c    ****       xeq_xrom();
3227:src/keys.c    ****       set_running_off();
3228:src/keys.c    ****       DispMsg = "Stopped";
3229:src/keys.c    ****       State2.disp_freeze = 0;
3230:src/keys.c    ****       return STATE_UNFINISHED;
3231:src/keys.c    ****     }
3232:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3233:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3234:src/keys.c    ****       Pause = 0;			// leave PSE statement
3235:src/keys.c    ****       GoFast = 1;
3236:src/keys.c    ****     }
3237:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3238:src/keys.c    ****     return STATE_RUNNING;
3239:src/keys.c    ****   }
3240:src/keys.c    **** 
3241:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3242:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3243:src/keys.c    ****    * if required.
3244:src/keys.c    ****    */
3245:src/keys.c    **** #ifdef DM42
3246:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3247:src/keys.c    **** #else
ARM GAS  /tmp/cceyv6gL.s 			page 214


3248:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3249:src/keys.c    **** #endif
3250:src/keys.c    ****     {
3251:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3252:src/keys.c    ****       if (C_LOCKED) {
3253:src/keys.c    **** 	stack_restore();
3254:src/keys.c    **** 	CLEAR_REAL;
3255:src/keys.c    **** 	CLEAR_IMAG;
3256:src/keys.c    ****       }
3257:src/keys.c    **** #endif
3258:src/keys.c    ****       soft_init_state();
3259:src/keys.c    ****       return STATE_UNFINISHED;
3260:src/keys.c    ****     }
3261:src/keys.c    **** 
3262:src/keys.c    **** #ifndef CONSOLE
3263:src/keys.c    **** 	if (c == K63 && JustStopped) {
3264:src/keys.c    **** 		// Avoid an accidental restart with R/S
3265:src/keys.c    **** 		JustStopped = 0;
3266:src/keys.c    **** 		return STATE_IGNORE;
3267:src/keys.c    **** 	}
3268:src/keys.c    **** #endif
3269:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3270:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3271:src/keys.c    **** 	 */
3272:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3273:src/keys.c    **** 		CmdLineLength = 0;
3274:src/keys.c    **** 	/*
3275:src/keys.c    **** 	 *  Process the various cases
3276:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3277:src/keys.c    **** 	 */
3278:src/keys.c    **** 	if (State2.confirm)
3279:src/keys.c    **** 		return process_confirm((const keycode)c);
3280:src/keys.c    **** 
3281:src/keys.c    **** 	if (State2.rarg)
3282:src/keys.c    **** 		return process_arg((const keycode)c);
3283:src/keys.c    **** 
3284:src/keys.c    **** 	if (State2.gtodot)
3285:src/keys.c    **** 		return process_gtodot((const keycode)c);
3286:src/keys.c    **** 
3287:src/keys.c    **** 	if (State2.hyp)
3288:src/keys.c    **** 		return process_hyp((const keycode)c);
3289:src/keys.c    **** 
3290:src/keys.c    **** 	if (State2.test != TST_NONE)
3291:src/keys.c    **** 		return process_test((const keycode)c);
3292:src/keys.c    **** 
3293:src/keys.c    **** 	if (State2.status)
3294:src/keys.c    **** 		return process_status((const keycode)c);
3295:src/keys.c    **** 
3296:src/keys.c    **** 	/*
3297:src/keys.c    **** 	 *  Process shift keys directly
3298:src/keys.c    **** 	 */
3299:src/keys.c    **** 	if (c == K_F) {
3300:src/keys.c    **** 		toggle_shift(SHIFT_F);
3301:src/keys.c    **** 		return STATE_UNFINISHED;
3302:src/keys.c    **** 	}
3303:src/keys.c    **** 	if (c == K_G) {
3304:src/keys.c    **** 		toggle_shift(SHIFT_G);
ARM GAS  /tmp/cceyv6gL.s 			page 215


3305:src/keys.c    **** 		return STATE_UNFINISHED;
3306:src/keys.c    **** 	}
3307:src/keys.c    **** 	if (c == K_H) {
3308:src/keys.c    **** 		toggle_shift(SHIFT_H);
3309:src/keys.c    **** 		State2.arrow = 0;
3310:src/keys.c    **** 		return STATE_UNFINISHED;
3311:src/keys.c    **** 	}
3312:src/keys.c    **** 	/*
3313:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3314:src/keys.c    **** 	 */
3315:src/keys.c    **** 	// print_debug (2, c);
3316:src/keys.c    **** 	if (State2.arrow)
3317:src/keys.c    **** 		return process_arrow((const keycode)c);
3318:src/keys.c    **** 
3319:src/keys.c    **** 	/*
3320:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3321:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3322:src/keys.c    **** 	 * works and were not
3323:src/keys.c    **** 	 */
3324:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3325:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3326:src/keys.c    **** 		if (is_bad_cmdline())
3327:src/keys.c    **** 			return STATE_UNFINISHED;
3328:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3329:src/keys.c    **** 		init_cat( cat );
3330:src/keys.c    **** 		return STATE_UNFINISHED;
3331:src/keys.c    **** 	}
3332:src/keys.c    **** 
3333:src/keys.c    **** 	/*
3334:src/keys.c    **** 	 *  More handlers...
3335:src/keys.c    **** 	 */
3336:src/keys.c    **** 	if (State2.multi)
3337:src/keys.c    **** 		return process_multi((const keycode)c);
3338:src/keys.c    **** 
3339:src/keys.c    **** 	if (State2.labellist)
3340:src/keys.c    **** 		return process_labellist((const keycode)c);
3341:src/keys.c    **** 
3342:src/keys.c    **** 	if (State2.registerlist)
3343:src/keys.c    **** 		return process_registerlist((const keycode)c);
3344:src/keys.c    **** 
3345:src/keys.c    **** 	if (State2.catalogue)
3346:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3347:src/keys.c    **** 
3348:src/keys.c    **** 	if (State2.alphas) {
3349:src/keys.c    **** #ifndef INFRARED
3350:src/keys.c    **** 		return process_alpha((const keycode)c);
3351:src/keys.c    **** #else
3352:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3353:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3354:src/keys.c    **** 			print_tab(0);
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3356:src/keys.c    **** 		}
3357:src/keys.c    **** 		return i;
3358:src/keys.c    **** #endif
3359:src/keys.c    **** 	}
3360:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3361:src/keys.c    **** 	if (C_LOCKED) {
ARM GAS  /tmp/cceyv6gL.s 			page 216


3362:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3363:src/keys.c    **** 	}
3364:src/keys.c    **** #endif
3365:src/keys.c    **** 	if (State2.cmplx) {
3366:src/keys.c    **** 		return process_cmplx((const keycode)c);
3367:src/keys.c    **** 	} else {
3368:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3369:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3370:src/keys.c    **** 		if (shift == SHIFT_H)
3371:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3372:src/keys.c    **** 		// print_debug (3, c);
3373:src/keys.c    **** 		return process_normal((const keycode)c);
3374:src/keys.c    **** 	}
3375:src/keys.c    **** }
3376:src/keys.c    **** 
3377:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 6964              		.loc 1 3377 40 is_stmt 1 view -0
 6965              		.cfi_startproc
 6966              		@ args = 0, pretend = 0, frame = 0
 6967              		@ frame_needed = 0, uses_anonymous_args = 0
 6968              		@ link register save eliminated.
3378:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 6969              		.loc 1 3378 4 view .LVU2077
 6970              		.loc 1 3378 53 is_stmt 0 view .LVU2078
 6971 0000 074B     		ldr	r3, .L768
 6972              		.loc 1 3378 44 view .LVU2079
 6973 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 6974 0004 1AB9     		cbnz	r2, .L766
3379:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3380:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 6975              		.loc 1 3380 5 discriminator 2 view .LVU2080
 6976 0006 5969     		ldr	r1, [r3, #20]
 6977 0008 064A     		ldr	r2, .L768+4
 6978 000a 0A40     		ands	r2, r2, r1
 6979 000c 0AB1     		cbz	r2, .L767
 6980              	.L766:
 6981 000e 0120     		movs	r0, #1
3381:src/keys.c    ****  }
 6982              		.loc 1 3381 2 view .LVU2081
 6983 0010 7047     		bx	lr
 6984              	.L767:
3380:src/keys.c    ****  }
 6985              		.loc 1 3380 42 discriminator 3 view .LVU2082
 6986 0012 D889     		ldrh	r0, [r3, #14]
 6987 0014 B0F5E060 		subs	r0, r0, #1792
 6988 0018 18BF     		it	ne
 6989 001a 0120     		movne	r0, #1
 6990 001c 7047     		bx	lr
 6991              	.L769:
 6992 001e 00BF     		.align	2
 6993              	.L768:
 6994 0020 00000000 		.word	StateWhileOn
 6995 0024 0709280C 		.word	203950343
 6996              		.cfi_endproc
 6997              	.LFE61:
 6999              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7000              		.align	2
ARM GAS  /tmp/cceyv6gL.s 			page 217


 7001              	.LC0:
 7002 0000 52554E00 		.ascii	"RUN\000"
 7003              		.align	2
 7004              	.LC1:
 7005 0004 4E554C4C 		.ascii	"NULL\000"
 7005      00
 7006 0009 000000   		.align	2
 7007              	.LC2:
 7008 000c 53746F70 		.ascii	"Stopped\000"
 7008      70656400 
 7009              		.section	.text.process_keycode,"ax",%progbits
 7010              		.align	1
 7011              		.p2align 2,,3
 7012              		.global	process_keycode
 7013              		.syntax unified
 7014              		.thumb
 7015              		.thumb_func
 7016              		.fpu fpv4-sp-d16
 7018              	process_keycode:
 7019              	.LVL607:
 7020              	.LFB63:
3382:src/keys.c    **** 
3383:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3384:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3385:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3386:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3387:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3388:src/keys.c    ****        // Was error just wait for confirmation
3389:src/keys.c    ****        wait_for_key_press();
3390:src/keys.c    ****      }
3391:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3392:src/keys.c    ****      return;
3393:src/keys.c    ****    }
3394:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3395:src/keys.c    ****      nd_opcode = remapped.shift;
3396:src/keys.c    ****      set_shift(SHIFT_N);
3397:src/keys.c    ****    }
3398:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3399:src/keys.c    ****    process_keycode ( remapped.key_34s );
3400:src/keys.c    ****  }
3401:src/keys.c    ****  
3402:src/keys.c    **** /*
3403:src/keys.c    ****  *  Fed with key codes by the event loop
3404:src/keys.c    ****  */
3405:src/keys.c    **** void process_keycode(int c)
3406:src/keys.c    **** {
 7021              		.loc 1 3406 1 is_stmt 1 view -0
 7022              		.cfi_startproc
 7023              		@ args = 0, pretend = 0, frame = 8
 7024              		@ frame_needed = 0, uses_anonymous_args = 0
3407:src/keys.c    ****   static int was_paused;
 7025              		.loc 1 3407 3 view .LVU2084
3408:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3409:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7026              		.loc 1 3409 3 view .LVU2085
3410:src/keys.c    ****   //print_debug(60,c);
3411:src/keys.c    ****   if (was_paused && Pause == 0)
ARM GAS  /tmp/cceyv6gL.s 			page 218


 7027              		.loc 1 3411 3 view .LVU2086
3406:src/keys.c    ****   static int was_paused;
 7028              		.loc 1 3406 1 is_stmt 0 view .LVU2087
 7029 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7030              		.cfi_def_cfa_offset 36
 7031              		.cfi_offset 4, -36
 7032              		.cfi_offset 5, -32
 7033              		.cfi_offset 6, -28
 7034              		.cfi_offset 7, -24
 7035              		.cfi_offset 8, -20
 7036              		.cfi_offset 9, -16
 7037              		.cfi_offset 10, -12
 7038              		.cfi_offset 11, -8
 7039              		.cfi_offset 14, -4
 7040              		.loc 1 3411 7 view .LVU2088
 7041 0004 B64D     		ldr	r5, .L1401
 7042              		.loc 1 3411 27 view .LVU2089
 7043 0006 B74F     		ldr	r7, .L1401+4
 7044              		.loc 1 3411 6 view .LVU2090
 7045 0008 2B68     		ldr	r3, [r5]
3406:src/keys.c    ****   static int was_paused;
 7046              		.loc 1 3406 1 view .LVU2091
 7047 000a 83B0     		sub	sp, sp, #12
 7048              		.cfi_def_cfa_offset 48
3406:src/keys.c    ****   static int was_paused;
 7049              		.loc 1 3406 1 view .LVU2092
 7050 000c 0446     		mov	r4, r0
 7051              		.loc 1 3411 6 view .LVU2093
 7052 000e 1BB1     		cbz	r3, .L771
 7053              		.loc 1 3411 27 discriminator 1 view .LVU2094
 7054 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7055              		.loc 1 3411 18 discriminator 1 view .LVU2095
 7056 0012 002B     		cmp	r3, #0
 7057 0014 00F0DB81 		beq	.L1312
 7058              	.LVL608:
 7059              	.L771:
3412:src/keys.c    ****     {
3413:src/keys.c    ****     /*
3414:src/keys.c    ****      *  Continue XROM execution after a pause
3415:src/keys.c    ****      */
3416:src/keys.c    ****       xeq_xrom();
3417:src/keys.c    ****     }
3418:src/keys.c    ****   was_paused = Pause;
 7060              		.loc 1 3418 3 is_stmt 1 view .LVU2096
 7061              		.loc 1 3418 14 is_stmt 0 view .LVU2097
 7062 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7063 001a 2B60     		str	r3, [r5]
3419:src/keys.c    ****   if (c == K_NOP)
 7064              		.loc 1 3419 3 is_stmt 1 view .LVU2098
 7065              		.loc 1 3419 6 is_stmt 0 view .LVU2099
 7066 001c 2E2C     		cmp	r4, #46
 7067 001e 00F09B81 		beq	.L1313
3420:src/keys.c    ****     {
3421:src/keys.c    ****       OpCode = 0;
3422:src/keys.c    ****     }
3423:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7068              		.loc 1 3423 8 is_stmt 1 view .LVU2100
ARM GAS  /tmp/cceyv6gL.s 			page 219


 7069              		.loc 1 3423 11 is_stmt 0 view .LVU2101
 7070 0022 622C     		cmp	r4, #98
 7071 0024 70D0     		beq	.L1314
3424:src/keys.c    ****     {
3425:src/keys.c    ****     /*
3426:src/keys.c    ****      *  Heartbeat processing goes here.
3427:src/keys.c    ****      *  This is totally thread safe!
3428:src/keys.c    ****      */
3429:src/keys.c    ****     if (Keyticks >= 2) {
3430:src/keys.c    ****       /*
3431:src/keys.c    ****        *  Some time has passed after last key press
3432:src/keys.c    ****        */
3433:src/keys.c    ****       if (OpCode != 0) {
3434:src/keys.c    **** 	/*
3435:src/keys.c    **** 	 *  Handle command display and NULL here
3436:src/keys.c    **** 	 */
3437:src/keys.c    **** 	if (OpCodeDisplayPending) {
3438:src/keys.c    **** 	  /*
3439:src/keys.c    **** 	   *  Show command to the user
3440:src/keys.c    **** 	   */
3441:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3442:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3443:src/keys.c    **** 	    DispMsg = "RUN";
3444:src/keys.c    **** 	  }
3445:src/keys.c    **** 	  else {
3446:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3447:src/keys.c    **** 	    DispMsg = TraceBuffer;
3448:src/keys.c    **** 	  }
3449:src/keys.c    **** 	  display();
3450:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3451:src/keys.c    **** 	}
3452:src/keys.c    ****     else if (Keyticks > 12) {
3453:src/keys.c    **** 	  /*
3454:src/keys.c    **** 	   *  Key is too long held down
3455:src/keys.c    **** 	   */
3456:src/keys.c    **** 	  OpCode = 0;
3457:src/keys.c    **** 	  message("NULL", CNULL);
3458:src/keys.c    **** 	  // Force display update on key-up
3459:src/keys.c    **** 	  State2.disp_temp = 0;
3460:src/keys.c    **** 	}
3461:src/keys.c    ****       }
3462:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3463:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3464:src/keys.c    **** 	State2.shifts = SHIFT_N;
3465:src/keys.c    ****       }
3466:src/keys.c    ****     }
3467:src/keys.c    **** 
3468:src/keys.c    ****     /*
3469:src/keys.c    ****      *  Serve the watchdog
3470:src/keys.c    ****      */
3471:src/keys.c    ****     watchdog();
3472:src/keys.c    **** 
3473:src/keys.c    **** #ifndef CONSOLE
3474:src/keys.c    ****     /*
3475:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3476:src/keys.c    ****      */
3477:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
ARM GAS  /tmp/cceyv6gL.s 			page 220


3478:src/keys.c    ****       JustStopped = 0;
3479:src/keys.c    ****     }
3480:src/keys.c    **** #endif
3481:src/keys.c    **** 
3482:src/keys.c    ****     /*
3483:src/keys.c    ****      *  Do nothing if not running a program
3484:src/keys.c    ****      */
3485:src/keys.c    ****     if (!Running && ! Pause)
3486:src/keys.c    ****       return;
3487:src/keys.c    ****   }
3488:src/keys.c    ****   else {
3489:src/keys.c    ****     /*
3490:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3491:src/keys.c    ****      */
3492:src/keys.c    ****     xeq_init_contexts();
 7072              		.loc 1 3492 5 is_stmt 1 view .LVU2102
3493:src/keys.c    ****     State2.wascomplex = 0;
 7073              		.loc 1 3493 23 is_stmt 0 view .LVU2103
 7074 0026 DFF8D882 		ldr	r8, .L1401+32
3492:src/keys.c    ****     State2.wascomplex = 0;
 7075              		.loc 1 3492 5 view .LVU2104
 7076 002a FFF7FEFF 		bl	xeq_init_contexts
 7077              	.LVL609:
 7078              		.loc 1 3493 5 is_stmt 1 view .LVU2105
 7079              		.loc 1 3493 23 is_stmt 0 view .LVU2106
 7080 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3494:src/keys.c    **** 
3495:src/keys.c    ****     if (is_dot(RPN)) {
 7081              		.loc 1 3495 9 view .LVU2107
 7082 0032 8D20     		movs	r0, #141
3493:src/keys.c    **** 
 7083              		.loc 1 3493 23 view .LVU2108
 7084 0034 6FF38713 		bfc	r3, #6, #2
 7085 0038 88F81430 		strb	r3, [r8, #20]
 7086              		.loc 1 3495 5 is_stmt 1 view .LVU2109
 7087              		.loc 1 3495 9 is_stmt 0 view .LVU2110
 7088 003c FFF7FEFF 		bl	is_dot
 7089              	.LVL610:
 7090              		.loc 1 3495 8 view .LVU2111
 7091 0040 0028     		cmp	r0, #0
 7092 0042 40F04C82 		bne	.L1315
 7093              	.L789:
3496:src/keys.c    ****       /*
3497:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3498:src/keys.c    ****        */
3499:src/keys.c    ****       clr_dot(RPN);
3500:src/keys.c    ****       finish_RPN(); // RPN
3501:src/keys.c    ****     }
3502:src/keys.c    **** 
3503:src/keys.c    **** #ifndef CONSOLE
3504:src/keys.c    ****     /*
3505:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3506:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3507:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3508:src/keys.c    ****      *  an accidental restart of the program.
3509:src/keys.c    ****      */
3510:src/keys.c    ****     if (c != K63)
ARM GAS  /tmp/cceyv6gL.s 			page 221


 7094              		.loc 1 3510 5 is_stmt 1 view .LVU2112
 7095              		.loc 1 3510 8 is_stmt 0 view .LVU2113
 7096 0046 272C     		cmp	r4, #39
 7097 0048 00F04682 		beq	.L1316
3511:src/keys.c    ****       JustStopped = 0;
 7098              		.loc 1 3511 7 is_stmt 1 view .LVU2114
 7099              		.loc 1 3511 19 is_stmt 0 view .LVU2115
 7100 004c A64B     		ldr	r3, .L1401+8
 7101 004e 0025     		movs	r5, #0
3512:src/keys.c    **** #endif
3513:src/keys.c    ****   }
3514:src/keys.c    **** 
3515:src/keys.c    ****   /*
3516:src/keys.c    ****    *  Handle key release
3517:src/keys.c    ****    */
3518:src/keys.c    ****   if (c == K_RELEASE)
 7102              		.loc 1 3518 6 view .LVU2116
 7103 0050 632C     		cmp	r4, #99
3511:src/keys.c    ****       JustStopped = 0;
 7104              		.loc 1 3511 19 view .LVU2117
 7105 0052 1D60     		str	r5, [r3]
 7106              		.loc 1 3518 3 is_stmt 1 view .LVU2118
 7107              		.loc 1 3518 6 is_stmt 0 view .LVU2119
 7108 0054 40F08F81 		bne	.L791
3519:src/keys.c    ****     {
3520:src/keys.c    ****       //      print_debug (80,c);
3521:src/keys.c    ****     if (OpCode != 0) {
 7109              		.loc 1 3521 5 is_stmt 1 view .LVU2120
 7110              		.loc 1 3521 16 is_stmt 0 view .LVU2121
 7111 0058 A44A     		ldr	r2, .L1401+12
 7112 005a 1368     		ldr	r3, [r2]
 7113              		.loc 1 3521 8 view .LVU2122
 7114 005c 002B     		cmp	r3, #0
 7115 005e 00F05282 		beq	.L792
3522:src/keys.c    ****       /*
3523:src/keys.c    ****        * Execute the key on release
3524:src/keys.c    ****        */
3525:src/keys.c    ****       GoFast = 1;
 7116              		.loc 1 3525 7 is_stmt 1 view .LVU2123
 7117              		.loc 1 3525 14 is_stmt 0 view .LVU2124
 7118 0062 A349     		ldr	r1, .L1401+16
3526:src/keys.c    ****       c = OpCode;
3527:src/keys.c    ****       //      print_debug(81,c);
3528:src/keys.c    ****       OpCode = 0;
 7119              		.loc 1 3528 14 view .LVU2125
 7120 0064 1560     		str	r5, [r2]
3525:src/keys.c    ****       c = OpCode;
 7121              		.loc 1 3525 14 view .LVU2126
 7122 0066 0120     		movs	r0, #1
3529:src/keys.c    **** 
3530:src/keys.c    ****       if (c == STATE_SST)
 7123              		.loc 1 3530 10 view .LVU2127
 7124 0068 2E2B     		cmp	r3, #46
3526:src/keys.c    ****       //      print_debug(81,c);
 7125              		.loc 1 3526 9 view .LVU2128
 7126 006a 1C46     		mov	r4, r3
 7127              	.LVL611:
ARM GAS  /tmp/cceyv6gL.s 			page 222


3525:src/keys.c    ****       c = OpCode;
 7128              		.loc 1 3525 14 view .LVU2129
 7129 006c 0860     		str	r0, [r1]
3526:src/keys.c    ****       //      print_debug(81,c);
 7130              		.loc 1 3526 7 is_stmt 1 view .LVU2130
 7131              	.LVL612:
3528:src/keys.c    **** 
 7132              		.loc 1 3528 7 view .LVU2131
 7133              		.loc 1 3530 7 view .LVU2132
 7134              		.loc 1 3530 10 is_stmt 0 view .LVU2133
 7135 006e 00F05D82 		beq	.L1317
3531:src/keys.c    **** 	xeq_sst_bst(1);
3532:src/keys.c    ****       else {
3533:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7136              		.loc 1 3533 2 is_stmt 1 view .LVU2134
 7137              		.loc 1 3533 5 is_stmt 0 view .LVU2135
 7138 0072 B3F5817F 		cmp	r3, #258
 7139 0076 0AD0     		beq	.L798
 7140              		.loc 1 3533 29 discriminator 1 view .LVU2136
 7141 0078 40F23F12 		movw	r2, #319
 7142 007c 9342     		cmp	r3, r2
 7143 007e 06D0     		beq	.L798
 7144 0080 0093     		str	r3, [sp]
 7145              		.loc 1 3533 60 discriminator 2 view .LVU2137
 7146 0082 FFF7FEFF 		bl	is_bad_cmdline
 7147              	.LVL613:
 7148              		.loc 1 3533 56 discriminator 2 view .LVU2138
 7149 0086 009B     		ldr	r3, [sp]
 7150 0088 0028     		cmp	r0, #0
 7151 008a 40F05C82 		bne	.L1318
 7152              	.L798:
3534:src/keys.c    **** 	  xeq(c);
 7153              		.loc 1 3534 4 is_stmt 1 view .LVU2139
3535:src/keys.c    **** 	  if (Running || Pause)
 7154              		.loc 1 3535 8 is_stmt 0 view .LVU2140
 7155 008e 994E     		ldr	r6, .L1401+20
3534:src/keys.c    **** 	  xeq(c);
 7156              		.loc 1 3534 4 view .LVU2141
 7157 0090 1846     		mov	r0, r3
 7158 0092 FFF7FEFF 		bl	xeq
 7159              	.LVL614:
 7160              		.loc 1 3535 4 is_stmt 1 view .LVU2142
 7161              		.loc 1 3535 7 is_stmt 0 view .LVU2143
 7162 0096 3368     		ldr	r3, [r6]
 7163 0098 0BB9     		cbnz	r3, .L796
 7164              		.loc 1 3535 16 discriminator 1 view .LVU2144
 7165 009a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7166 009c 0BB1     		cbz	r3, .L794
 7167              	.L796:
3536:src/keys.c    **** 	    xeqprog();
 7168              		.loc 1 3536 6 is_stmt 1 view .LVU2145
 7169 009e FFF7FEFF 		bl	xeqprog
 7170              	.LVL615:
 7171              	.L794:
3537:src/keys.c    **** 	}
3538:src/keys.c    ****       }
3539:src/keys.c    ****       dot(RPN, ShowRPN);
ARM GAS  /tmp/cceyv6gL.s 			page 223


 7172              		.loc 1 3539 7 view .LVU2146
 7173 00a2 954D     		ldr	r5, .L1401+24
 7174 00a4 8D20     		movs	r0, #141
 7175 00a6 2968     		ldr	r1, [r5]
 7176 00a8 FFF7FEFF 		bl	dot
 7177              	.LVL616:
3540:src/keys.c    ****     }
3541:src/keys.c    ****     else {
3542:src/keys.c    ****       // Ignore key-up if no operation was pending
3543:src/keys.c    ****       dot(RPN, ShowRPN);
3544:src/keys.c    **** #ifndef CONSOLE
3545:src/keys.c    ****       if (! State2.disp_temp ) {
3546:src/keys.c    **** 	if (!WasDataEntry) {
3547:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3548:src/keys.c    **** 	  display();
3549:src/keys.c    **** 	}
3550:src/keys.c    **** 	else {
3551:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3552:src/keys.c    **** 	}
3553:src/keys.c    ****       }
3554:src/keys.c    **** #endif
3555:src/keys.c    ****       return;
3556:src/keys.c    ****     }
3557:src/keys.c    **** 
3558:src/keys.c    ****     /*
3559:src/keys.c    ****      *  Turn on the RPN symbol if desired
3560:src/keys.c    ****      */
3561:src/keys.c    ****     if (ShowRPN) {
 7178              		.loc 1 3561 5 view .LVU2147
 7179              		.loc 1 3561 9 is_stmt 0 view .LVU2148
 7180 00ac 2D68     		ldr	r5, [r5]
 7181              		.loc 1 3561 8 view .LVU2149
 7182 00ae 002D     		cmp	r5, #0
 7183 00b0 40F01B82 		bne	.L800
 7184              	.LVL617:
 7185              	.L1304:
3562:src/keys.c    ****       finish_RPN(); // RPN
3563:src/keys.c    ****     }
3564:src/keys.c    ****   }
3565:src/keys.c    ****   else {
3566:src/keys.c    ****     /*
3567:src/keys.c    ****      *  Decode the key 
3568:src/keys.c    ****      */
3569:src/keys.c    ****     //    print_debug (90, cur_shift());
3570:src/keys.c    ****     WasDataEntry = 0;
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3572:src/keys.c    **** #ifdef DM42
3573:src/keys.c    ****     if (c != K_OP) {
3574:src/keys.c    ****       c = process(c);
3575:src/keys.c    ****       //print_debug (91,cur_shift());
3576:src/keys.c    ****       // returns an op-code or state
3577:src/keys.c    ****     }
3578:src/keys.c    ****     else {
3579:src/keys.c    ****       if (isRARG(nd_opcode)) {
3580:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3581:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3582:src/keys.c    **** 	  c = nd_opcode;
ARM GAS  /tmp/cceyv6gL.s 			page 224


3583:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3584:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3585:src/keys.c    **** 	  c = STATE_UNFINISHED;
3586:src/keys.c    **** 	}
3587:src/keys.c    **** 	else {
3588:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3589:src/keys.c    **** 	  c = STATE_UNFINISHED;
3590:src/keys.c    **** 	}
3591:src/keys.c    ****       }
3592:src/keys.c    ****       else {
3593:src/keys.c    **** 	c = check_confirm(nd_opcode);
3594:src/keys.c    ****       }      
3595:src/keys.c    ****     }
3596:src/keys.c    **** #else
3597:src/keys.c    ****     c = process(c);		// returns an op-code or state
3598:src/keys.c    **** #endif
3599:src/keys.c    ****     switch (c) {
3600:src/keys.c    ****     case STATE_SST:
3601:src/keys.c    ****       OpCode = c;
3602:src/keys.c    ****       OpCodeDisplayPending = 0;
3603:src/keys.c    ****       xeq_sst_bst(0);
3604:src/keys.c    ****       break;
 7186              		.loc 1 3604 7 is_stmt 1 view .LVU2150
 7187 00b4 3368     		ldr	r3, [r6]
 7188              	.LVL618:
 7189              	.L801:
3605:src/keys.c    **** 
3606:src/keys.c    ****     case STATE_BST:
3607:src/keys.c    ****       xeq_sst_bst(-1);
3608:src/keys.c    ****       break;
3609:src/keys.c    **** 
3610:src/keys.c    ****     case STATE_BACKSPACE:
3611:src/keys.c    ****       if (! State2.runmode)
3612:src/keys.c    **** 	delprog();
3613:src/keys.c    ****       else if (State2.alphas) {
3614:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3615:src/keys.c    **** 	if (p > Alpha)
3616:src/keys.c    **** 	  *--p = '\0';
3617:src/keys.c    ****       }
3618:src/keys.c    ****       break;
3619:src/keys.c    **** 
3620:src/keys.c    ****     case STATE_RUNNING:
3621:src/keys.c    ****       xeqprog();  // continue execution
3622:src/keys.c    ****       break;
3623:src/keys.c    **** 
3624:src/keys.c    ****     case STATE_WINDOWRIGHT:
3625:src/keys.c    ****     case STATE_WINDOWLEFT:
3626:src/keys.c    ****       if (!is_bad_cmdline())
3627:src/keys.c    **** 	set_window(c);
3628:src/keys.c    ****       break;
3629:src/keys.c    **** 
3630:src/keys.c    ****     case STATE_UNFINISHED:
3631:src/keys.c    ****     case STATE_IGNORE:
3632:src/keys.c    ****       break;
3633:src/keys.c    **** 
3634:src/keys.c    ****     default:
3635:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
ARM GAS  /tmp/cceyv6gL.s 			page 225


3636:src/keys.c    **** 	NonProgrammable = 0;
3637:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3638:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3639:src/keys.c    **** 	    // Data entry key
3640:src/keys.c    **** #ifndef CONSOLE
3641:src/keys.c    **** 	    WasDataEntry = 1;
3642:src/keys.c    **** #endif
3643:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3644:src/keys.c    **** 	    xeq(c);
3645:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3646:src/keys.c    **** 	  }
3647:src/keys.c    **** 	}
3648:src/keys.c    **** 	else {
3649:src/keys.c    **** 	  // Save the op-code for execution on key-up
3650:src/keys.c    **** 	  //print_debug(70,c);
3651:src/keys.c    **** 	  OpCode = c;
3652:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3653:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3654:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3655:src/keys.c    **** 	}
3656:src/keys.c    ****       }
3657:src/keys.c    ****       else {
3658:src/keys.c    **** 	stoprog(c);
3659:src/keys.c    ****       }
3660:src/keys.c    ****     }
3661:src/keys.c    ****   }
3662:src/keys.c    ****   if (! Running && ! Pause
 7190              		.loc 1 3662 3 view .LVU2151
 7191              		.loc 1 3662 6 is_stmt 0 view .LVU2152
 7192 00b6 002B     		cmp	r3, #0
 7193 00b8 40F04A81 		bne	.L1311
 7194              	.LVL619:
 7195              	.L821:
 7196              		.loc 1 3662 20 discriminator 1 view .LVU2153
 7197 00bc 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7198              		.loc 1 3662 17 discriminator 1 view .LVU2154
 7199 00be 002B     		cmp	r3, #0
 7200 00c0 40F04681 		bne	.L1311
3663:src/keys.c    **** #ifndef CONSOLE
3664:src/keys.c    ****       && ! JustStopped
 7201              		.loc 1 3664 10 view .LVU2155
 7202 00c4 884B     		ldr	r3, .L1401+8
3665:src/keys.c    **** #endif
3666:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7203              		.loc 1 3666 10 view .LVU2156
 7204 00c6 8D4E     		ldr	r6, .L1401+28
 7205 00c8 1B68     		ldr	r3, [r3]
 7206 00ca 3268     		ldr	r2, [r6]
 7207              		.loc 1 3666 7 view .LVU2157
 7208 00cc 1343     		orrs	r3, r3, r2
 7209 00ce 16D1     		bne	.L1108
 7210              		.loc 1 3666 26 discriminator 1 view .LVU2158
 7211 00d0 322C     		cmp	r4, #50
 7212 00d2 14D0     		beq	.L1108
 7213              	.LBB821:
3667:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7214              		.loc 1 3667 5 is_stmt 1 view .LVU2159
ARM GAS  /tmp/cceyv6gL.s 			page 226


 7215              		.loc 1 3667 15 is_stmt 0 view .LVU2160
 7216 00d4 DFF84092 		ldr	r9, .L1401+56
 7217 00d8 D9F80070 		ldr	r7, [r9]
 7218              	.LVL620:
3668:src/keys.c    **** 
3669:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7219              		.loc 1 3669 5 is_stmt 1 view .LVU2161
 7220              		.loc 1 3669 21 is_stmt 0 view .LVU2162
 7221 00dc 4CB1     		cbz	r4, .L1110
 7222              		.loc 1 3669 49 discriminator 1 view .LVU2163
 7223 00de 002D     		cmp	r5, #0
 7224 00e0 40F0E583 		bne	.L1163
 7225              		.loc 1 3669 66 discriminator 3 view .LVU2164
 7226 00e4 864B     		ldr	r3, .L1401+32
 7227 00e6 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7228              		.loc 1 3669 21 discriminator 3 view .LVU2165
 7229 00e8 9807     		lsls	r0, r3, #30
 7230 00ea 00F13384 		bmi	.L1164
 7231 00ee 07F00104 		and	r4, r7, #1
 7232              	.LVL621:
 7233              	.L1110:
 7234              		.loc 1 3669 18 discriminator 8 view .LVU2166
 7235 00f2 C9F80040 		str	r4, [r9]
3670:src/keys.c    ****     display();
 7236              		.loc 1 3670 5 is_stmt 1 discriminator 8 view .LVU2167
 7237 00f6 FFF7FEFF 		bl	display
 7238              	.LVL622:
3671:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7239              		.loc 1 3671 5 discriminator 8 view .LVU2168
 7240              		.loc 1 3671 18 is_stmt 0 discriminator 8 view .LVU2169
 7241 00fa C9F80070 		str	r7, [r9]
 7242              	.LVL623:
 7243              	.L1108:
 7244              		.loc 1 3671 18 discriminator 8 view .LVU2170
 7245              	.LBE821:
3672:src/keys.c    ****   }
3673:src/keys.c    **** 
3674:src/keys.c    ****  no_display:
3675:src/keys.c    ****   JustDisplayed = 0;
 7246              		.loc 1 3675 3 is_stmt 1 view .LVU2171
 7247              		.loc 1 3675 17 is_stmt 0 view .LVU2172
 7248 00fe 0023     		movs	r3, #0
 7249 0100 3360     		str	r3, [r6]
3676:src/keys.c    ****   watchdog();
 7250              		.loc 1 3676 13 is_stmt 1 view .LVU2173
 7251              	.L770:
3677:src/keys.c    **** }
 7252              		.loc 1 3677 1 is_stmt 0 view .LVU2174
 7253 0102 03B0     		add	sp, sp, #12
 7254              		.cfi_remember_state
 7255              		.cfi_def_cfa_offset 36
 7256              		@ sp needed
 7257 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7258              	.LVL624:
 7259              	.L1314:
 7260              		.cfi_restore_state
3429:src/keys.c    ****       /*
ARM GAS  /tmp/cceyv6gL.s 			page 227


 7261              		.loc 1 3429 5 is_stmt 1 view .LVU2175
3429:src/keys.c    ****       /*
 7262              		.loc 1 3429 9 is_stmt 0 view .LVU2176
 7263 0108 FFF7FEFF 		bl	keyticks
 7264              	.LVL625:
3429:src/keys.c    ****       /*
 7265              		.loc 1 3429 8 view .LVU2177
 7266 010c 0128     		cmp	r0, #1
 7267 010e 1BDD     		ble	.L776
3433:src/keys.c    **** 	/*
 7268              		.loc 1 3433 7 is_stmt 1 view .LVU2178
3433:src/keys.c    **** 	/*
 7269              		.loc 1 3433 18 is_stmt 0 view .LVU2179
 7270 0110 764D     		ldr	r5, .L1401+12
 7271 0112 2868     		ldr	r0, [r5]
3433:src/keys.c    **** 	/*
 7272              		.loc 1 3433 10 view .LVU2180
 7273 0114 98B1     		cbz	r0, .L778
3437:src/keys.c    **** 	  /*
 7274              		.loc 1 3437 2 is_stmt 1 view .LVU2181
3437:src/keys.c    **** 	  /*
 7275              		.loc 1 3437 6 is_stmt 0 view .LVU2182
 7276 0116 7B4B     		ldr	r3, .L1401+36
3437:src/keys.c    **** 	  /*
 7277              		.loc 1 3437 5 view .LVU2183
 7278 0118 1E68     		ldr	r6, [r3]
 7279 011a 002E     		cmp	r6, #0
 7280 011c 00F01582 		beq	.L779
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7281              		.loc 1 3441 4 is_stmt 1 view .LVU2184
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7282              		.loc 1 3442 7 is_stmt 0 view .LVU2185
 7283 0120 40F23B12 		movw	r2, #315
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7284              		.loc 1 3441 25 view .LVU2186
 7285 0124 0025     		movs	r5, #0
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7286              		.loc 1 3442 7 view .LVU2187
 7287 0126 9042     		cmp	r0, r2
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7288              		.loc 1 3441 25 view .LVU2188
 7289 0128 1D60     		str	r5, [r3]
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7290              		.loc 1 3442 4 is_stmt 1 view .LVU2189
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7291              		.loc 1 3442 7 is_stmt 0 view .LVU2190
 7292 012a 40F05F82 		bne	.L780
3443:src/keys.c    **** 	  }
 7293              		.loc 1 3443 6 is_stmt 1 view .LVU2191
3443:src/keys.c    **** 	  }
 7294              		.loc 1 3443 14 is_stmt 0 view .LVU2192
 7295 012e 764B     		ldr	r3, .L1401+40
 7296 0130 764A     		ldr	r2, .L1401+44
 7297 0132 1A60     		str	r2, [r3]
 7298              	.L781:
3449:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 7299              		.loc 1 3449 4 is_stmt 1 view .LVU2193
ARM GAS  /tmp/cceyv6gL.s 			page 228


 7300 0134 FFF7FEFF 		bl	display
 7301              	.LVL626:
3450:src/keys.c    **** 	}
 7302              		.loc 1 3450 4 view .LVU2194
3450:src/keys.c    **** 	}
 7303              		.loc 1 3450 12 is_stmt 0 view .LVU2195
 7304 0138 6F4B     		ldr	r3, .L1401+24
 7305 013a 0122     		movs	r2, #1
 7306 013c 1A60     		str	r2, [r3]
 7307              	.L778:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7308              		.loc 1 3462 7 is_stmt 1 view .LVU2196
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7309              		.loc 1 3462 11 is_stmt 0 view .LVU2197
 7310 013e FFF7FEFF 		bl	keyticks
 7311              	.LVL627:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7312              		.loc 1 3462 10 view .LVU2198
 7313 0142 0C28     		cmp	r0, #12
 7314 0144 00F3F681 		bgt	.L1319
 7315              	.L776:
3471:src/keys.c    **** 
 7316              		.loc 1 3471 15 is_stmt 1 view .LVU2199
3477:src/keys.c    ****       JustStopped = 0;
 7317              		.loc 1 3477 5 view .LVU2200
3477:src/keys.c    ****       JustStopped = 0;
 7318              		.loc 1 3477 9 is_stmt 0 view .LVU2201
 7319 0148 674D     		ldr	r5, .L1401+8
3477:src/keys.c    ****       JustStopped = 0;
 7320              		.loc 1 3477 8 view .LVU2202
 7321 014a 2B68     		ldr	r3, [r5]
 7322 014c 002B     		cmp	r3, #0
 7323 014e 40F08081 		bne	.L1320
 7324              	.L785:
3485:src/keys.c    ****       return;
 7325              		.loc 1 3485 5 is_stmt 1 view .LVU2203
3485:src/keys.c    ****       return;
 7326              		.loc 1 3485 9 is_stmt 0 view .LVU2204
 7327 0152 684E     		ldr	r6, .L1401+20
 7328 0154 3368     		ldr	r3, [r6]
3485:src/keys.c    ****       return;
 7329              		.loc 1 3485 8 view .LVU2205
 7330 0156 002B     		cmp	r3, #0
 7331 0158 00F05C81 		beq	.L1321
 7332              	.L787:
3518:src/keys.c    ****     {
 7333              		.loc 1 3518 3 is_stmt 1 view .LVU2206
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7334              		.loc 1 3570 5 view .LVU2207
3571:src/keys.c    **** #ifdef DM42
 7335              		.loc 1 3571 13 is_stmt 0 view .LVU2208
 7336 015c 664A     		ldr	r2, .L1401+24
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7337              		.loc 1 3570 18 view .LVU2209
 7338 015e DFF8B891 		ldr	r9, .L1401+56
3571:src/keys.c    **** #ifdef DM42
 7339              		.loc 1 3571 15 view .LVU2210
ARM GAS  /tmp/cceyv6gL.s 			page 229


 7340 0162 B3FA83F3 		clz	r3, r3
 7341 0166 5B09     		lsrs	r3, r3, #5
3571:src/keys.c    **** #ifdef DM42
 7342              		.loc 1 3571 13 view .LVU2211
 7343 0168 1360     		str	r3, [r2]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7344              		.loc 1 3570 18 view .LVU2212
 7345 016a 0023     		movs	r3, #0
 7346 016c C9F80030 		str	r3, [r9]
3571:src/keys.c    **** #ifdef DM42
 7347              		.loc 1 3571 5 is_stmt 1 view .LVU2213
3573:src/keys.c    ****       c = process(c);
 7348              		.loc 1 3573 5 view .LVU2214
 7349              	.L773:
3574:src/keys.c    ****       //print_debug (91,cur_shift());
 7350              		.loc 1 3574 7 view .LVU2215
 7351              	.LVL628:
 7352              	.LBB822:
 7353              	.LBI822:
3214:src/keys.c    ****   const enum shifts shift = cur_shift();
 7354              		.loc 1 3214 12 view .LVU2216
 7355              	.LBB823:
3215:src/keys.c    ****   enum catalogues cat;
 7356              		.loc 1 3215 3 view .LVU2217
 7357              	.LBB824:
 7358              	.LBI824:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7359              		.loc 1 96 13 view .LVU2218
 7360              	.LBB825:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7361              		.loc 1 97 2 view .LVU2219
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7362              		.loc 1 97 18 is_stmt 0 view .LVU2220
 7363 0170 FFF7FEFF 		bl	shift_down
 7364              	.LVL629:
  98:src/keys.c    **** }
 7365              		.loc 1 98 2 is_stmt 1 view .LVU2221
  98:src/keys.c    **** }
 7366              		.loc 1 98 52 is_stmt 0 view .LVU2222
 7367 0174 8346     		mov	fp, r0
 7368 0176 10B9     		cbnz	r0, .L805
 7369 0178 614B     		ldr	r3, .L1401+32
 7370 017a 93F810B0 		ldrb	fp, [r3, #16]	@ zero_extendqisi2
 7371              	.L805:
 7372              	.LVL630:
  98:src/keys.c    **** }
 7373              		.loc 1 98 52 view .LVU2223
 7374              	.LBE825:
 7375              	.LBE824:
3216:src/keys.c    **** 
 7376              		.loc 1 3216 3 is_stmt 1 view .LVU2224
3218:src/keys.c    ****     /*
 7377              		.loc 1 3218 3 view .LVU2225
3218:src/keys.c    ****     /*
 7378              		.loc 1 3218 7 is_stmt 0 view .LVU2226
 7379 017e 3568     		ldr	r5, [r6]
3218:src/keys.c    ****     /*
ARM GAS  /tmp/cceyv6gL.s 			page 230


 7380              		.loc 1 3218 6 view .LVU2227
 7381 0180 002D     		cmp	r5, #0
 7382 0182 40F0CD80 		bne	.L806
3218:src/keys.c    ****     /*
 7383              		.loc 1 3218 15 view .LVU2228
 7384 0186 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7385 0188 002B     		cmp	r3, #0
 7386 018a 40F0C980 		bne	.L806
3246:src/keys.c    **** #else
 7387              		.loc 1 3246 3 is_stmt 1 view .LVU2229
3246:src/keys.c    **** #else
 7388              		.loc 1 3246 6 is_stmt 0 view .LVU2230
 7389 018e 242C     		cmp	r4, #36
 7390 0190 00F0D582 		beq	.L1322
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7391              		.loc 1 3263 2 is_stmt 1 view .LVU2231
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7392              		.loc 1 3263 5 is_stmt 0 view .LVU2232
 7393 0194 272C     		cmp	r4, #39
 7394 0196 04D1     		bne	.L820
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7395              		.loc 1 3263 15 view .LVU2233
 7396 0198 534B     		ldr	r3, .L1401+8
 7397 019a 1A68     		ldr	r2, [r3]
 7398 019c 002A     		cmp	r2, #0
 7399 019e 40F0C783 		bne	.L1323
 7400              	.L820:
 7401 01a2 DFF85C81 		ldr	r8, .L1401+32
 7402 01a6 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7403              	.L813:
3272:src/keys.c    **** 		CmdLineLength = 0;
 7404              		.loc 1 3272 2 is_stmt 1 view .LVU2234
3272:src/keys.c    **** 		CmdLineLength = 0;
 7405              		.loc 1 3272 5 is_stmt 0 view .LVU2235
 7406 01aa 33B1     		cbz	r3, .L823
3272:src/keys.c    **** 		CmdLineLength = 0;
 7407              		.loc 1 3272 26 view .LVU2236
 7408 01ac FFF7FEFF 		bl	keyticks
 7409              	.LVL631:
3272:src/keys.c    **** 		CmdLineLength = 0;
 7410              		.loc 1 3272 23 view .LVU2237
 7411 01b0 1E28     		cmp	r0, #30
3273:src/keys.c    **** 	/*
 7412              		.loc 1 3273 3 is_stmt 1 view .LVU2238
3273:src/keys.c    **** 	/*
 7413              		.loc 1 3273 17 is_stmt 0 view .LVU2239
 7414 01b2 C4BF     		itt	gt
 7415 01b4 0023     		movgt	r3, #0
 7416 01b6 88F81C30 		strbgt	r3, [r8, #28]
 7417              	.L823:
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7418              		.loc 1 3278 2 is_stmt 1 view .LVU2240
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7419              		.loc 1 3278 6 is_stmt 0 view .LVU2241
 7420 01ba 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7421              		.loc 1 3278 5 view .LVU2242
ARM GAS  /tmp/cceyv6gL.s 			page 231


 7422 01be 5A07     		lsls	r2, r3, #29
 7423 01c0 40F05082 		bne	.L1324
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7424              		.loc 1 3281 2 is_stmt 1 view .LVU2243
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7425              		.loc 1 3281 6 is_stmt 0 view .LVU2244
 7426 01c4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7427              		.loc 1 3281 5 view .LVU2245
 7428 01c8 8B06     		lsls	r3, r1, #26
 7429 01ca 00F1D882 		bmi	.L1325
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7430              		.loc 1 3284 2 is_stmt 1 view .LVU2246
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7431              		.loc 1 3284 6 is_stmt 0 view .LVU2247
 7432 01ce 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7433              		.loc 1 3284 5 view .LVU2248
 7434 01d2 12F0010A 		ands	r10, r2, #1
 7435 01d6 40F01683 		bne	.L1326
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
 7436              		.loc 1 3287 2 is_stmt 1 view .LVU2249
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
 7437              		.loc 1 3287 5 is_stmt 0 view .LVU2250
 7438 01da 12F02000 		ands	r0, r2, #32
 7439 01de 40F06883 		bne	.L1327
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7440              		.loc 1 3290 2 is_stmt 1 view .LVU2251
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7441              		.loc 1 3290 12 is_stmt 0 view .LVU2252
 7442 01e2 98F80F30 		ldrb	r3, [r8, #15]	@ zero_extendqisi2
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7443              		.loc 1 3290 5 view .LVU2253
 7444 01e6 072B     		cmp	r3, #7
 7445 01e8 40F0D282 		bne	.L1328
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7446              		.loc 1 3293 2 is_stmt 1 view .LVU2254
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7447              		.loc 1 3293 12 is_stmt 0 view .LVU2255
 7448 01ec 98F80C10 		ldrb	r1, [r8, #12]	@ zero_extendqisi2
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7449              		.loc 1 3293 5 view .LVU2256
 7450 01f0 0029     		cmp	r1, #0
 7451 01f2 40F0C783 		bne	.L1329
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7452              		.loc 1 3299 2 is_stmt 1 view .LVU2257
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7453              		.loc 1 3299 5 is_stmt 0 view .LVU2258
 7454 01f6 292C     		cmp	r4, #41
 7455 01f8 00F0D384 		beq	.L1330
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7456              		.loc 1 3303 2 is_stmt 1 view .LVU2259
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7457              		.loc 1 3303 5 is_stmt 0 view .LVU2260
 7458 01fc 2A2C     		cmp	r4, #42
 7459 01fe 00F0DB84 		beq	.L1331
3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
ARM GAS  /tmp/cceyv6gL.s 			page 232


 7460              		.loc 1 3307 2 is_stmt 1 view .LVU2261
3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7461              		.loc 1 3307 5 is_stmt 0 view .LVU2262
 7462 0202 2B2C     		cmp	r4, #43
 7463 0204 00F03D85 		beq	.L1332
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
 7464              		.loc 1 3316 2 is_stmt 1 view .LVU2263
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
 7465              		.loc 1 3316 5 is_stmt 0 view .LVU2264
 7466 0208 5107     		lsls	r1, r2, #29
 7467 020a 00F1E683 		bmi	.L1333
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7468              		.loc 1 3324 2 is_stmt 1 view .LVU2265
 7469              	.LBB826:
 7470              	.LBB827:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7471              		.loc 1 276 6 is_stmt 0 view .LVU2266
 7472 020e DFF80CA1 		ldr	r10, .L1401+60
 7473 0212 DAF80000 		ldr	r0, [r10]
 7474 0216 90F8AC17 		ldrb	r1, [r0, #1964]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7475              		.loc 1 276 5 view .LVU2267
 7476 021a 01F0410C 		and	ip, r1, #65
 7477 021e BCF1410F 		cmp	ip, #65
 7478              	.LBE827:
 7479              	.LBE826:
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7480              		.loc 1 3324 8 view .LVU2268
 7481 0222 E4B2     		uxtb	r4, r4
 7482              	.LVL632:
 7483              	.LBB849:
 7484              	.LBI826:
 267:src/keys.c    **** {
 7485              		.loc 1 267 24 is_stmt 1 view .LVU2269
 7486              	.LBB834:
 269:src/keys.c    ****   int i, col, max;
 7487              		.loc 1 269 3 view .LVU2270
 270:src/keys.c    ****   const struct _map {
 7488              		.loc 1 270 3 view .LVU2271
 271:src/keys.c    ****     unsigned char key, cat[3];
 7489              		.loc 1 271 3 view .LVU2272
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7490              		.loc 1 276 2 view .LVU2273
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7491              		.loc 1 276 5 is_stmt 0 view .LVU2274
 7492 0224 00F03282 		beq	.L1334
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7493              		.loc 1 312 3 is_stmt 1 view .LVU2275
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7494              		.loc 1 312 6 is_stmt 0 view .LVU2276
 7495 0228 212C     		cmp	r4, #33
 7496 022a 00F03985 		beq	.L1335
 315:src/keys.c    ****     /*
 7497              		.loc 1 315 3 is_stmt 1 view .LVU2277
 315:src/keys.c    ****     /*
 7498              		.loc 1 315 23 is_stmt 0 view .LVU2278
 7499 022e 3849     		ldr	r1, .L1401+48
ARM GAS  /tmp/cceyv6gL.s 			page 233


 7500 0230 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 7501              		.loc 1 315 6 view .LVU2279
 7502 0234 1942     		tst	r1, r3
 7503 0236 40F0A184 		bne	.L914
 7504              	.LBB828:
 319:src/keys.c    **** #ifdef DM42
 7505              		.loc 1 319 5 is_stmt 1 view .LVU2280
 346:src/keys.c    ****       /*
 7506              		.loc 1 346 5 view .LVU2281
 346:src/keys.c    ****       /*
 7507              		.loc 1 346 8 is_stmt 0 view .LVU2282
 7508 023a 242C     		cmp	r4, #36
 7509 023c 03D1     		bne	.L915
 346:src/keys.c    ****       /*
 7510              		.loc 1 346 18 view .LVU2283
 7511 023e BBF1020F 		cmp	fp, #2
 7512 0242 00F0DE87 		beq	.L1140
 7513              	.L915:
 361:src/keys.c    ****       /*
 7514              		.loc 1 361 5 is_stmt 1 view .LVU2284
 361:src/keys.c    ****       /*
 7515              		.loc 1 361 8 is_stmt 0 view .LVU2285
 7516 0246 BBF1030F 		cmp	fp, #3
 7517 024a 18D1     		bne	.L921
 7518              	.L1120:
 371:src/keys.c    **** #ifndef WINGUI
 7519              		.loc 1 371 5 is_stmt 1 view .LVU2286
 7520              	.LVL633:
 373:src/keys.c    **** #else
 7521              		.loc 1 373 5 view .LVU2287
 373:src/keys.c    **** #else
 7522              		.loc 1 373 23 is_stmt 0 view .LVU2288
 7523 024c 90F8E837 		ldrb	r3, [r0, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7524              		.loc 1 373 27 view .LVU2289
 7525 0250 D807     		lsls	r0, r3, #31
 7526 0252 00F1B687 		bmi	.L1141
 373:src/keys.c    **** #else
 7527              		.loc 1 373 73 view .LVU2290
 7528 0256 12F00203 		ands	r3, r2, #2
 7529 025a 01F01E81 		beq	.L1336
 371:src/keys.c    **** #ifndef WINGUI
 7530              		.loc 1 371 8 view .LVU2291
 7531 025e 2D4B     		ldr	r3, .L1401+52
 377:src/keys.c    ****   }
 7532              		.loc 1 377 9 view .LVU2292
 7533 0260 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 7534              		.loc 1 373 73 view .LVU2293
 7535 0262 4FF0020C 		mov	ip, #2
 7536              	.LVL634:
 7537              	.L916:
 373:src/keys.c    **** #else
 7538              		.loc 1 373 73 view .LVU2294
 7539              	.LBE828:
 421:src/keys.c    ****     if (cp->key == c) {
ARM GAS  /tmp/cceyv6gL.s 			page 234


 7540              		.loc 1 421 3 is_stmt 1 view .LVU2295
 421:src/keys.c    ****     if (cp->key == c) {
 7541              		.loc 1 421 15 view .LVU2296
 7542 0266 181F     		subs	r0, r3, #4
 7543 0268 00EB8100 		add	r0, r0, r1, lsl #2
 7544              	.LBB829:
 373:src/keys.c    **** #else
 7545              		.loc 1 373 73 is_stmt 0 view .LVU2297
 7546 026c 0421     		movs	r1, #4
 7547              	.LVL635:
 373:src/keys.c    **** #else
 7548              		.loc 1 373 73 view .LVU2298
 7549 026e 01E0     		b	.L922
 7550              	.LVL636:
 7551              	.L1338:
 373:src/keys.c    **** #else
 7552              		.loc 1 373 73 view .LVU2299
 7553 0270 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 7554              	.LVL637:
 7555              	.L922:
 373:src/keys.c    **** #else
 7556              		.loc 1 373 73 view .LVU2300
 7557              	.LBE829:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7558              		.loc 1 422 5 is_stmt 1 view .LVU2301
 421:src/keys.c    ****     if (cp->key == c) {
 7559              		.loc 1 421 24 view .LVU2302
 421:src/keys.c    ****     if (cp->key == c) {
 7560              		.loc 1 421 15 view .LVU2303
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7561              		.loc 1 422 8 is_stmt 0 view .LVU2304
 7562 0274 8C42     		cmp	r4, r1
 7563 0276 00F0AA84 		beq	.L1337
 421:src/keys.c    ****     if (cp->key == c) {
 7564              		.loc 1 421 3 view .LVU2305
 7565 027a 8342     		cmp	r3, r0
 7566 027c F8D1     		bne	.L1338
 7567              	.LVL638:
 7568              	.L921:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7569              		.loc 1 427 3 is_stmt 1 view .LVU2306
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7570              		.loc 1 427 6 is_stmt 0 view .LVU2307
 7571 027e 1107     		lsls	r1, r2, #28
 7572 0280 00F1AF84 		bmi	.L927
 7573              	.LVL639:
 7574              	.L925:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7575              		.loc 1 427 6 view .LVU2308
 7576              	.LBE834:
 7577              	.LBE849:
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7578              		.loc 1 3339 2 is_stmt 1 view .LVU2309
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7579              		.loc 1 3339 6 is_stmt 0 view .LVU2310
 7580 0284 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
ARM GAS  /tmp/cceyv6gL.s 			page 235


 7581              		.loc 1 3339 5 view .LVU2311
 7582 0288 5907     		lsls	r1, r3, #29
 7583 028a 00F16C85 		bmi	.L1339
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7584              		.loc 1 3342 2 is_stmt 1 view .LVU2312
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7585              		.loc 1 3342 5 is_stmt 0 view .LVU2313
 7586 028e 1807     		lsls	r0, r3, #28
 7587 0290 00F1B286 		bmi	.L1340
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7588              		.loc 1 3345 2 is_stmt 1 view .LVU2314
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7589              		.loc 1 3345 5 is_stmt 0 view .LVU2315
 7590 0294 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7591 0298 002B     		cmp	r3, #0
 7592 029a 40F09887 		bne	.L1341
3348:src/keys.c    **** #ifndef INFRARED
 7593              		.loc 1 3348 2 is_stmt 1 view .LVU2316
3348:src/keys.c    **** #ifndef INFRARED
 7594              		.loc 1 3348 6 is_stmt 0 view .LVU2317
 7595 029e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3348:src/keys.c    **** #ifndef INFRARED
 7596              		.loc 1 3348 5 view .LVU2318
 7597 02a2 1907     		lsls	r1, r3, #28
 7598 02a4 00F1B687 		bmi	.L1342
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7599              		.loc 1 3361 2 is_stmt 1 view .LVU2319
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7600              		.loc 1 3361 6 is_stmt 0 view .LVU2320
 7601 02a8 DAF80030 		ldr	r3, [r10]
 7602 02ac 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7603              		.loc 1 3361 5 view .LVU2321
 7604 02b0 03F04103 		and	r3, r3, #65
 7605 02b4 412B     		cmp	r3, #65
 7606 02b6 01F06081 		beq	.L1343
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7607              		.loc 1 3365 2 is_stmt 1 view .LVU2322
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7608              		.loc 1 3365 5 is_stmt 0 view .LVU2323
 7609 02ba 9507     		lsls	r5, r2, #30
 7610 02bc 01F10980 		bmi	.L1303
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7611              		.loc 1 3368 3 is_stmt 1 view .LVU2324
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7612              		.loc 1 3368 24 is_stmt 0 view .LVU2325
 7613 02c0 0BF1FF33 		add	r3, fp, #-1
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7614              		.loc 1 3368 6 view .LVU2326
 7615 02c4 DBB2     		uxtb	r3, r3
 7616 02c6 012B     		cmp	r3, #1
 7617 02c8 41F20481 		bls	.L1301
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7618              		.loc 1 3370 3 is_stmt 1 view .LVU2327
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7619              		.loc 1 3370 6 is_stmt 0 view .LVU2328
 7620 02cc BBF1030F 		cmp	fp, #3
ARM GAS  /tmp/cceyv6gL.s 			page 236


3371:src/keys.c    **** 		// print_debug (3, c);
 7621              		.loc 1 3371 11 view .LVU2329
 7622 02d0 2046     		mov	r0, r4
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7623              		.loc 1 3370 6 view .LVU2330
 7624 02d2 01F08180 		beq	.L1344
 7625              	.LVL640:
 7626              	.L1300:
 7627              	.LBB850:
 7628              	.LBB851:
1440:src/keys.c    ****    case (K_CMPLX):
 7629              		.loc 1 1440 13 view .LVU2331
 7630 02d6 FFF7FEFF 		bl	process_normal
 7631              	.LVL641:
 7632 02da 0446     		mov	r4, r0
 7633 02dc 80E0     		b	.L835
 7634              	.L1402:
 7635 02de 00BF     		.align	2
 7636              	.L1401:
 7637 02e0 00000000 		.word	.LANCHOR18
 7638 02e4 00000000 		.word	Pause
 7639 02e8 00000000 		.word	JustStopped
 7640 02ec 00000000 		.word	OpCode
 7641 02f0 00000000 		.word	GoFast
 7642 02f4 00000000 		.word	Running
 7643 02f8 00000000 		.word	ShowRPN
 7644 02fc 00000000 		.word	JustDisplayed
 7645 0300 00000000 		.word	StateWhileOn
 7646 0304 00000000 		.word	OpCodeDisplayPending
 7647 0308 00000000 		.word	DispMsg
 7648 030c 00000000 		.word	.LC0
 7649 0310 00080800 		.word	526336
 7650 0314 00000000 		.word	.LANCHOR17
 7651 0318 00000000 		.word	WasDataEntry
 7652 031c 00000000 		.word	main_ram
 7653              	.LVL642:
 7654              	.L806:
1440:src/keys.c    ****    case (K_CMPLX):
 7655              		.loc 1 1440 13 view .LVU2332
 7656              	.LBE851:
 7657              	.LBE850:
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7658              		.loc 1 3222 5 is_stmt 1 view .LVU2333
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7659              		.loc 1 3222 8 is_stmt 0 view .LVU2334
 7660 0320 242C     		cmp	r4, #36
 7661 0322 00F09D80 		beq	.L808
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7662              		.loc 1 3222 18 view .LVU2335
 7663 0326 272C     		cmp	r4, #39
 7664 0328 00F09A80 		beq	.L808
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7665              		.loc 1 3232 5 is_stmt 1 view .LVU2336
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7666              		.loc 1 3232 8 is_stmt 0 view .LVU2337
 7667 032c 622C     		cmp	r4, #98
 7668 032e 07D0     		beq	.L811
ARM GAS  /tmp/cceyv6gL.s 			page 237


3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7669              		.loc 1 3233 7 is_stmt 1 view .LVU2338
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7670              		.loc 1 3233 15 is_stmt 0 view .LVU2339
 7671 0330 B74B     		ldr	r3, .L1403
3235:src/keys.c    ****     }
 7672              		.loc 1 3235 14 view .LVU2340
 7673 0332 B84A     		ldr	r2, .L1403+4
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7674              		.loc 1 3233 17 view .LVU2341
 7675 0334 0134     		adds	r4, r4, #1
 7676              	.LVL643:
3235:src/keys.c    ****     }
 7677              		.loc 1 3235 14 view .LVU2342
 7678 0336 0121     		movs	r1, #1
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7679              		.loc 1 3233 15 view .LVU2343
 7680 0338 DC74     		strb	r4, [r3, #19]
3234:src/keys.c    ****       GoFast = 1;
 7681              		.loc 1 3234 7 is_stmt 1 view .LVU2344
3234:src/keys.c    ****       GoFast = 1;
 7682              		.loc 1 3234 13 is_stmt 0 view .LVU2345
 7683 033a 0023     		movs	r3, #0
3235:src/keys.c    ****     }
 7684              		.loc 1 3235 14 view .LVU2346
 7685 033c 1160     		str	r1, [r2]
3234:src/keys.c    ****       GoFast = 1;
 7686              		.loc 1 3234 13 view .LVU2347
 7687 033e 3B70     		strb	r3, [r7]
3235:src/keys.c    ****     }
 7688              		.loc 1 3235 7 is_stmt 1 view .LVU2348
 7689              	.LVL644:
 7690              	.L811:
3235:src/keys.c    ****     }
 7691              		.loc 1 3235 7 is_stmt 0 view .LVU2349
 7692              	.LBE823:
 7693              	.LBE822:
3621:src/keys.c    ****       break;
 7694              		.loc 1 3621 7 is_stmt 1 view .LVU2350
 7695 0340 FFF7FEFF 		bl	xeqprog
 7696              	.LVL645:
3622:src/keys.c    **** 
 7697              		.loc 1 3622 7 view .LVU2351
 7698 0344 3368     		ldr	r3, [r6]
3409:src/keys.c    ****   //print_debug(60,c);
 7699              		.loc 1 3409 7 is_stmt 0 view .LVU2352
 7700 0346 0025     		movs	r5, #0
3622:src/keys.c    **** 
 7701              		.loc 1 3622 7 view .LVU2353
 7702 0348 3124     		movs	r4, #49
 7703              	.LVL646:
3662:src/keys.c    **** #ifndef CONSOLE
 7704              		.loc 1 3662 3 is_stmt 1 view .LVU2354
3662:src/keys.c    **** #ifndef CONSOLE
 7705              		.loc 1 3662 6 is_stmt 0 view .LVU2355
 7706 034a 002B     		cmp	r3, #0
 7707 034c 3FF4B6AE 		beq	.L821
ARM GAS  /tmp/cceyv6gL.s 			page 238


 7708              	.L1311:
3662:src/keys.c    **** #ifndef CONSOLE
 7709              		.loc 1 3662 6 view .LVU2356
 7710 0350 B14E     		ldr	r6, .L1403+8
3675:src/keys.c    ****   watchdog();
 7711              		.loc 1 3675 3 is_stmt 1 view .LVU2357
3675:src/keys.c    ****   watchdog();
 7712              		.loc 1 3675 17 is_stmt 0 view .LVU2358
 7713 0352 0023     		movs	r3, #0
 7714 0354 3360     		str	r3, [r6]
3676:src/keys.c    **** }
 7715              		.loc 1 3676 13 is_stmt 1 view .LVU2359
 7716 0356 D4E6     		b	.L770
 7717              	.LVL647:
 7718              	.L1313:
3421:src/keys.c    ****     }
 7719              		.loc 1 3421 7 view .LVU2360
3571:src/keys.c    **** #ifdef DM42
 7720              		.loc 1 3571 15 is_stmt 0 view .LVU2361
 7721 0358 B04E     		ldr	r6, .L1403+12
3571:src/keys.c    **** #ifdef DM42
 7722              		.loc 1 3571 13 view .LVU2362
 7723 035a B149     		ldr	r1, .L1403+16
3571:src/keys.c    **** #ifdef DM42
 7724              		.loc 1 3571 15 view .LVU2363
 7725 035c 3368     		ldr	r3, [r6]
3421:src/keys.c    ****     }
 7726              		.loc 1 3421 14 view .LVU2364
 7727 035e B14A     		ldr	r2, .L1403+20
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7728              		.loc 1 3570 18 view .LVU2365
 7729 0360 DFF8DC92 		ldr	r9, .L1403+48
3571:src/keys.c    **** #ifdef DM42
 7730              		.loc 1 3571 15 view .LVU2366
 7731 0364 B3FA83F3 		clz	r3, r3
 7732 0368 5B09     		lsrs	r3, r3, #5
3571:src/keys.c    **** #ifdef DM42
 7733              		.loc 1 3571 13 view .LVU2367
 7734 036a 0B60     		str	r3, [r1]
3421:src/keys.c    ****     }
 7735              		.loc 1 3421 14 view .LVU2368
 7736 036c 0023     		movs	r3, #0
 7737 036e 1360     		str	r3, [r2]
3518:src/keys.c    ****     {
 7738              		.loc 1 3518 3 is_stmt 1 view .LVU2369
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7739              		.loc 1 3570 5 view .LVU2370
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7740              		.loc 1 3570 18 is_stmt 0 view .LVU2371
 7741 0370 C9F80030 		str	r3, [r9]
3571:src/keys.c    **** #ifdef DM42
 7742              		.loc 1 3571 5 is_stmt 1 view .LVU2372
3573:src/keys.c    ****       c = process(c);
 7743              		.loc 1 3573 5 view .LVU2373
 7744 0374 FCE6     		b	.L773
 7745              	.L791:
3573:src/keys.c    ****       c = process(c);
ARM GAS  /tmp/cceyv6gL.s 			page 239


 7746              		.loc 1 3573 5 is_stmt 0 view .LVU2374
 7747 0376 A94E     		ldr	r6, .L1403+12
3571:src/keys.c    **** #ifdef DM42
 7748              		.loc 1 3571 13 view .LVU2375
 7749 0378 A949     		ldr	r1, .L1403+16
 7750 037a 3368     		ldr	r3, [r6]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7751              		.loc 1 3570 5 is_stmt 1 view .LVU2376
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7752              		.loc 1 3570 18 is_stmt 0 view .LVU2377
 7753 037c DFF8C092 		ldr	r9, .L1403+48
3571:src/keys.c    **** #ifdef DM42
 7754              		.loc 1 3571 15 view .LVU2378
 7755 0380 B3FA83F2 		clz	r2, r3
 7756 0384 5209     		lsrs	r2, r2, #5
3573:src/keys.c    ****       c = process(c);
 7757              		.loc 1 3573 8 view .LVU2379
 7758 0386 342C     		cmp	r4, #52
3571:src/keys.c    **** #ifdef DM42
 7759              		.loc 1 3571 13 view .LVU2380
 7760 0388 0A60     		str	r2, [r1]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7761              		.loc 1 3570 18 view .LVU2381
 7762 038a C9F80050 		str	r5, [r9]
3571:src/keys.c    **** #ifdef DM42
 7763              		.loc 1 3571 5 is_stmt 1 view .LVU2382
3573:src/keys.c    ****       c = process(c);
 7764              		.loc 1 3573 5 view .LVU2383
3573:src/keys.c    ****       c = process(c);
 7765              		.loc 1 3573 8 is_stmt 0 view .LVU2384
 7766 038e 7FF4EFAE 		bne	.L773
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7767              		.loc 1 3579 7 is_stmt 1 view .LVU2385
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7768              		.loc 1 3579 11 is_stmt 0 view .LVU2386
 7769 0392 A54A     		ldr	r2, .L1403+24
 7770 0394 1068     		ldr	r0, [r2]
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7771              		.loc 1 3579 10 view .LVU2387
 7772 0396 10F47042 		ands	r2, r0, #61440
 7773 039a 1BD0     		beq	.L1087
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7774              		.loc 1 3579 11 discriminator 1 view .LVU2388
 7775 039c B2F5704F 		cmp	r2, #61440
 7776 03a0 00F0A880 		beq	.L1088
 7777              	.LBB1446:
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7778              		.loc 1 3580 2 is_stmt 1 view .LVU2389
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7779              		.loc 1 3580 28 is_stmt 0 view .LVU2390
 7780 03a4 C0F30722 		ubfx	r2, r0, #8, #8
 7781 03a8 A2F12004 		sub	r4, r2, #32
 7782              	.LVL648:
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7783              		.loc 1 3580 28 view .LVU2391
 7784 03ac E4B2     		uxtb	r4, r4
 7785              	.LVL649:
ARM GAS  /tmp/cceyv6gL.s 			page 240


3581:src/keys.c    **** 	  c = nd_opcode;
 7786              		.loc 1 3581 2 is_stmt 1 view .LVU2392
3581:src/keys.c    **** 	  c = nd_opcode;
 7787              		.loc 1 3581 5 is_stmt 0 view .LVU2393
 7788 03ae 012C     		cmp	r4, #1
 7789 03b0 35D9     		bls	.L1089
3581:src/keys.c    **** 	  c = nd_opcode;
 7790              		.loc 1 3581 53 discriminator 1 view .LVU2394
 7791 03b2 6C2C     		cmp	r4, #108
 7792 03b4 33D0     		beq	.L1089
3581:src/keys.c    **** 	  c = nd_opcode;
 7793              		.loc 1 3581 74 discriminator 2 view .LVU2395
 7794 03b6 242C     		cmp	r4, #36
 7795 03b8 31D0     		beq	.L1089
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7796              		.loc 1 3583 7 is_stmt 1 view .LVU2396
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7797              		.loc 1 3583 32 is_stmt 0 view .LVU2397
 7798 03ba A4F12D01 		sub	r1, r4, #45
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7799              		.loc 1 3583 10 view .LVU2398
 7800 03be 0629     		cmp	r1, #6
 7801 03c0 00F26982 		bhi	.L1091
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7802              		.loc 1 3584 4 is_stmt 1 view .LVU2399
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7803              		.loc 1 3584 25 is_stmt 0 view .LVU2400
 7804 03c4 4D3A     		subs	r2, r2, #77
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7805              		.loc 1 3584 16 view .LVU2401
 7806 03c6 88F80F20 		strb	r2, [r8, #15]
3585:src/keys.c    **** 	}
 7807              		.loc 1 3585 4 is_stmt 1 view .LVU2402
 7808              	.LVL650:
3585:src/keys.c    **** 	}
 7809              		.loc 1 3585 4 is_stmt 0 view .LVU2403
 7810              	.LBE1446:
3599:src/keys.c    ****     case STATE_SST:
 7811              		.loc 1 3599 5 is_stmt 1 view .LVU2404
 7812              	.LBB1449:
3585:src/keys.c    **** 	}
 7813              		.loc 1 3585 6 is_stmt 0 view .LVU2405
 7814 03ca 3324     		movs	r4, #51
 7815              	.LVL651:
3585:src/keys.c    **** 	}
 7816              		.loc 1 3585 6 view .LVU2406
 7817 03cc 73E6     		b	.L801
 7818              	.LVL652:
 7819              	.L1312:
3585:src/keys.c    **** 	}
 7820              		.loc 1 3585 6 view .LVU2407
 7821              	.LBE1449:
3416:src/keys.c    ****     }
 7822              		.loc 1 3416 7 is_stmt 1 view .LVU2408
 7823 03ce FFF7FEFF 		bl	xeq_xrom
 7824              	.LVL653:
3416:src/keys.c    ****     }
ARM GAS  /tmp/cceyv6gL.s 			page 241


 7825              		.loc 1 3416 7 is_stmt 0 view .LVU2409
 7826 03d2 21E6     		b	.L771
 7827              	.L1087:
3593:src/keys.c    ****       }      
 7828              		.loc 1 3593 2 is_stmt 1 view .LVU2410
 7829              	.LBB1450:
 7830              	.LBB1451:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7831              		.loc 1 715 5 is_stmt 0 view .LVU2411
 7832 03d4 C0F30723 		ubfx	r3, r0, #8, #8
 7833 03d8 012B     		cmp	r3, #1
 7834              	.LBE1451:
 7835              	.LBE1450:
3593:src/keys.c    ****       }      
 7836              		.loc 1 3593 6 view .LVU2412
 7837 03da 0446     		mov	r4, r0
 7838              	.LVL654:
 7839              	.LBB1455:
 7840              	.LBI1450:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7841              		.loc 1 714 12 is_stmt 1 view .LVU2413
 7842              	.LBB1452:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7843              		.loc 1 715 2 view .LVU2414
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7844              		.loc 1 715 5 is_stmt 0 view .LVU2415
 7845 03dc 00F08F80 		beq	.L1121
 7846              	.LVL655:
 7847              	.L835:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7848              		.loc 1 715 5 view .LVU2416
 7849              	.LBE1452:
 7850              	.LBE1455:
3599:src/keys.c    ****     case STATE_SST:
 7851              		.loc 1 3599 5 is_stmt 1 view .LVU2417
 7852 03e0 A4F12B03 		sub	r3, r4, #43
 7853 03e4 082B     		cmp	r3, #8
 7854 03e6 00F2C080 		bhi	.L1093
 7855 03ea 01A2     		adr	r2, .L1095
 7856 03ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7857              		.p2align 2
 7858              	.L1095:
 7859 03f0 3F040000 		.word	.L1096+1
 7860 03f4 3F040000 		.word	.L1096+1
 7861 03f8 6B050000 		.word	.L1093+1
 7862 03fc C5040000 		.word	.L1025+1
 7863 0400 B5040000 		.word	.L1021+1
 7864 0404 9B040000 		.word	.L1018+1
 7865 0408 41030000 		.word	.L811+1
 7866 040c 39040000 		.word	.L1305+1
 7867 0410 39040000 		.word	.L1305+1
 7868              		.p2align 1
 7869              	.L1321:
3485:src/keys.c    ****       return;
 7870              		.loc 1 3485 21 is_stmt 0 discriminator 1 view .LVU2418
 7871 0414 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3485:src/keys.c    ****       return;
ARM GAS  /tmp/cceyv6gL.s 			page 242


 7872              		.loc 1 3485 18 discriminator 1 view .LVU2419
 7873 0416 002A     		cmp	r2, #0
 7874 0418 7FF4A0AE 		bne	.L787
 7875 041c 71E6     		b	.L770
 7876              	.LVL656:
 7877              	.L1089:
 7878              	.LBB1456:
3582:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7879              		.loc 1 3582 4 is_stmt 1 view .LVU2420
 7880 041e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3582:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7881              		.loc 1 3582 6 is_stmt 0 view .LVU2421
 7882 0422 0446     		mov	r4, r0
 7883              	.LVL657:
 7884              	.L862:
3582:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7885              		.loc 1 3582 6 view .LVU2422
 7886              	.LBE1456:
3635:src/keys.c    **** 	NonProgrammable = 0;
 7887              		.loc 1 3635 7 is_stmt 1 view .LVU2423
3635:src/keys.c    **** 	NonProgrammable = 0;
 7888              		.loc 1 3635 10 is_stmt 0 view .LVU2424
 7889 0424 4A06     		lsls	r2, r1, #25
 7890 0426 00F11181 		bmi	.L1345
 7891              	.L1116:
3635:src/keys.c    **** 	NonProgrammable = 0;
 7892              		.loc 1 3635 26 view .LVU2425
 7893 042a 804B     		ldr	r3, .L1403+28
 7894 042c 1A68     		ldr	r2, [r3]
 7895 042e 002A     		cmp	r2, #0
 7896 0430 41F0A381 		bne	.L1346
 7897              	.LVL658:
 7898              	.L1105:
3658:src/keys.c    ****       }
 7899              		.loc 1 3658 2 is_stmt 1 view .LVU2426
 7900 0434 FFF7FEFF 		bl	stoprog
 7901              	.LVL659:
 7902              	.L1305:
 7903 0438 3368     		ldr	r3, [r6]
3409:src/keys.c    ****   //print_debug(60,c);
 7904              		.loc 1 3409 7 is_stmt 0 view .LVU2427
 7905 043a 0025     		movs	r5, #0
 7906 043c 3BE6     		b	.L801
 7907              	.LVL660:
 7908              	.L1096:
3626:src/keys.c    **** 	set_window(c);
 7909              		.loc 1 3626 7 is_stmt 1 view .LVU2428
3626:src/keys.c    **** 	set_window(c);
 7910              		.loc 1 3626 12 is_stmt 0 view .LVU2429
 7911 043e FFF7FEFF 		bl	is_bad_cmdline
 7912              	.LVL661:
3626:src/keys.c    **** 	set_window(c);
 7913              		.loc 1 3626 10 view .LVU2430
 7914 0442 0546     		mov	r5, r0
 7915 0444 0028     		cmp	r0, #0
 7916 0446 F7D1     		bne	.L1305
3627:src/keys.c    ****       break;
ARM GAS  /tmp/cceyv6gL.s 			page 243


 7917              		.loc 1 3627 2 is_stmt 1 view .LVU2431
 7918 0448 2046     		mov	r0, r4
 7919 044a FFF7FEFF 		bl	set_window
 7920              	.LVL662:
 7921 044e 3368     		ldr	r3, [r6]
 7922 0450 31E6     		b	.L801
 7923              	.L1320:
3477:src/keys.c    ****       JustStopped = 0;
 7924              		.loc 1 3477 25 is_stmt 0 discriminator 1 view .LVU2432
 7925 0452 FFF7FEFF 		bl	is_key_pressed
 7926              	.LVL663:
3477:src/keys.c    ****       JustStopped = 0;
 7927              		.loc 1 3477 21 discriminator 1 view .LVU2433
 7928 0456 0028     		cmp	r0, #0
 7929 0458 7FF47BAE 		bne	.L785
3478:src/keys.c    ****     }
 7930              		.loc 1 3478 7 is_stmt 1 view .LVU2434
3478:src/keys.c    ****     }
 7931              		.loc 1 3478 19 is_stmt 0 view .LVU2435
 7932 045c 2860     		str	r0, [r5]
 7933 045e 78E6     		b	.L785
 7934              	.LVL664:
 7935              	.L808:
 7936              	.LBB1457:
 7937              	.LBB1394:
3223:src/keys.c    **** 	set_pc(0);
 7938              		.loc 1 3223 7 is_stmt 1 view .LVU2436
3223:src/keys.c    **** 	set_pc(0);
 7939              		.loc 1 3223 11 is_stmt 0 view .LVU2437
 7940 0460 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
3223:src/keys.c    **** 	set_pc(0);
 7941              		.loc 1 3223 10 view .LVU2438
 7942 0462 4BB1     		cbz	r3, .L810
3223:src/keys.c    **** 	set_pc(0);
 7943              		.loc 1 3223 20 view .LVU2439
 7944 0464 724B     		ldr	r3, .L1403+32
 7945 0466 1B68     		ldr	r3, [r3]
 7946 0468 B3F8E037 		ldrh	r3, [r3, #2016]
3223:src/keys.c    **** 	set_pc(0);
 7947              		.loc 1 3223 17 view .LVU2440
 7948 046c 9B0B     		lsrs	r3, r3, #14
 7949 046e 032B     		cmp	r3, #3
 7950 0470 02D1     		bne	.L810
3224:src/keys.c    ****       Pause = 0;
 7951              		.loc 1 3224 2 is_stmt 1 view .LVU2441
 7952 0472 0020     		movs	r0, #0
 7953 0474 FFF7FEFF 		bl	set_pc
 7954              	.LVL665:
 7955              	.L810:
3225:src/keys.c    ****       xeq_xrom();
 7956              		.loc 1 3225 7 view .LVU2442
3225:src/keys.c    ****       xeq_xrom();
 7957              		.loc 1 3225 13 is_stmt 0 view .LVU2443
 7958 0478 0025     		movs	r5, #0
 7959 047a 3D70     		strb	r5, [r7]
3226:src/keys.c    ****       set_running_off();
 7960              		.loc 1 3226 7 is_stmt 1 view .LVU2444
ARM GAS  /tmp/cceyv6gL.s 			page 244


 7961 047c FFF7FEFF 		bl	xeq_xrom
 7962              	.LVL666:
3227:src/keys.c    ****       DispMsg = "Stopped";
 7963              		.loc 1 3227 7 view .LVU2445
 7964 0480 FFF7FEFF 		bl	set_running_off
 7965              	.LVL667:
3228:src/keys.c    ****       State2.disp_freeze = 0;
 7966              		.loc 1 3228 7 view .LVU2446
3229:src/keys.c    ****       return STATE_UNFINISHED;
 7967              		.loc 1 3229 26 is_stmt 0 view .LVU2447
 7968 0484 624A     		ldr	r2, .L1403
3228:src/keys.c    ****       State2.disp_freeze = 0;
 7969              		.loc 1 3228 15 view .LVU2448
 7970 0486 6B48     		ldr	r0, .L1403+36
3229:src/keys.c    ****       return STATE_UNFINISHED;
 7971              		.loc 1 3229 26 view .LVU2449
 7972 0488 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3228:src/keys.c    ****       State2.disp_freeze = 0;
 7973              		.loc 1 3228 15 view .LVU2450
 7974 048a 6B4C     		ldr	r4, .L1403+40
 7975              	.LVL668:
3228:src/keys.c    ****       State2.disp_freeze = 0;
 7976              		.loc 1 3228 15 view .LVU2451
 7977 048c 0460     		str	r4, [r0]
3229:src/keys.c    ****       return STATE_UNFINISHED;
 7978              		.loc 1 3229 7 is_stmt 1 view .LVU2452
3229:src/keys.c    ****       return STATE_UNFINISHED;
 7979              		.loc 1 3229 26 is_stmt 0 view .LVU2453
 7980 048e 65F30411 		bfi	r1, r5, #4, #1
 7981 0492 3368     		ldr	r3, [r6]
 7982 0494 D175     		strb	r1, [r2, #23]
3230:src/keys.c    ****     }
 7983              		.loc 1 3230 7 is_stmt 1 view .LVU2454
3230:src/keys.c    ****     }
 7984              		.loc 1 3230 14 is_stmt 0 view .LVU2455
 7985 0496 3324     		movs	r4, #51
 7986 0498 0DE6     		b	.L801
 7987              	.LVL669:
 7988              	.L1018:
3230:src/keys.c    ****     }
 7989              		.loc 1 3230 14 view .LVU2456
 7990              	.LBE1394:
 7991              	.LBE1457:
3611:src/keys.c    **** 	delprog();
 7992              		.loc 1 3611 7 is_stmt 1 view .LVU2457
3611:src/keys.c    **** 	delprog();
 7993              		.loc 1 3611 11 is_stmt 0 view .LVU2458
 7994 049a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3611:src/keys.c    **** 	delprog();
 7995              		.loc 1 3611 10 view .LVU2459
 7996 049e 13F04005 		ands	r5, r3, #64
 7997 04a2 00F09E80 		beq	.L1347
3613:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 7998              		.loc 1 3613 12 is_stmt 1 view .LVU2460
3613:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 7999              		.loc 1 3613 15 is_stmt 0 view .LVU2461
 8000 04a6 13F00805 		ands	r5, r3, #8
ARM GAS  /tmp/cceyv6gL.s 			page 245


 8001 04aa 40F08180 		bne	.L1098
 8002              	.L1306:
 8003 04ae 3368     		ldr	r3, [r6]
 8004              	.LBB1458:
3616:src/keys.c    ****       }
 8005              		.loc 1 3616 9 view .LVU2462
 8006 04b0 3024     		movs	r4, #48
 8007 04b2 00E6     		b	.L801
 8008              	.L1021:
 8009              	.LBE1458:
3607:src/keys.c    ****       break;
 8010              		.loc 1 3607 7 is_stmt 1 view .LVU2463
 8011 04b4 4FF0FF30 		mov	r0, #-1
 8012 04b8 FFF7FEFF 		bl	xeq_sst_bst
 8013              	.LVL670:
3608:src/keys.c    **** 
 8014              		.loc 1 3608 7 view .LVU2464
3409:src/keys.c    ****   //print_debug(60,c);
 8015              		.loc 1 3409 7 is_stmt 0 view .LVU2465
 8016 04bc 0025     		movs	r5, #0
 8017 04be 3368     		ldr	r3, [r6]
3608:src/keys.c    **** 
 8018              		.loc 1 3608 7 view .LVU2466
 8019 04c0 2F24     		movs	r4, #47
 8020 04c2 F8E5     		b	.L801
 8021              	.L1025:
3601:src/keys.c    ****       OpCodeDisplayPending = 0;
 8022              		.loc 1 3601 7 is_stmt 1 view .LVU2467
3601:src/keys.c    ****       OpCodeDisplayPending = 0;
 8023              		.loc 1 3601 14 is_stmt 0 view .LVU2468
 8024 04c4 574A     		ldr	r2, .L1403+20
3602:src/keys.c    ****       xeq_sst_bst(0);
 8025              		.loc 1 3602 28 view .LVU2469
 8026 04c6 5D4B     		ldr	r3, .L1403+44
 8027 04c8 0020     		movs	r0, #0
3601:src/keys.c    ****       OpCodeDisplayPending = 0;
 8028              		.loc 1 3601 14 view .LVU2470
 8029 04ca 2E24     		movs	r4, #46
 8030 04cc 1460     		str	r4, [r2]
3602:src/keys.c    ****       xeq_sst_bst(0);
 8031              		.loc 1 3602 7 is_stmt 1 view .LVU2471
3602:src/keys.c    ****       xeq_sst_bst(0);
 8032              		.loc 1 3602 28 is_stmt 0 view .LVU2472
 8033 04ce 1860     		str	r0, [r3]
3603:src/keys.c    ****       break;
 8034              		.loc 1 3603 7 is_stmt 1 view .LVU2473
3409:src/keys.c    ****   //print_debug(60,c);
 8035              		.loc 1 3409 7 is_stmt 0 view .LVU2474
 8036 04d0 0546     		mov	r5, r0
3603:src/keys.c    ****       break;
 8037              		.loc 1 3603 7 view .LVU2475
 8038 04d2 FFF7FEFF 		bl	xeq_sst_bst
 8039              	.LVL671:
 8040 04d6 EDE5     		b	.L1304
 8041              	.LVL672:
 8042              	.L1316:
3603:src/keys.c    ****       break;
ARM GAS  /tmp/cceyv6gL.s 			page 246


 8043              		.loc 1 3603 7 view .LVU2476
 8044 04d8 504E     		ldr	r6, .L1403+12
 8045 04da 3368     		ldr	r3, [r6]
 8046 04dc 3EE6     		b	.L787
 8047              	.L1315:
3499:src/keys.c    ****       finish_RPN(); // RPN
 8048              		.loc 1 3499 7 is_stmt 1 view .LVU2477
 8049 04de 8D20     		movs	r0, #141
 8050 04e0 FFF7FEFF 		bl	clr_dot
 8051              	.LVL673:
3500:src/keys.c    ****     }
 8052              		.loc 1 3500 7 view .LVU2478
 8053 04e4 FFF7FEFF 		bl	finish_RPN
 8054              	.LVL674:
 8055 04e8 ADE5     		b	.L789
 8056              	.L800:
3562:src/keys.c    ****     }
 8057              		.loc 1 3562 7 view .LVU2479
 8058 04ea FFF7FEFF 		bl	finish_RPN
 8059              	.LVL675:
3409:src/keys.c    ****   //print_debug(60,c);
 8060              		.loc 1 3409 7 is_stmt 0 view .LVU2480
 8061 04ee 0025     		movs	r5, #0
 8062 04f0 3368     		ldr	r3, [r6]
 8063 04f2 E0E5     		b	.L801
 8064              	.L1088:
3593:src/keys.c    ****       }      
 8065              		.loc 1 3593 2 is_stmt 1 view .LVU2481
 8066              	.LBB1459:
 8067              	.LBB1453:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8068              		.loc 1 715 5 is_stmt 0 view .LVU2482
 8069 04f4 C0F30723 		ubfx	r3, r0, #8, #8
 8070 04f8 012B     		cmp	r3, #1
 8071              	.LBE1453:
 8072              	.LBE1459:
3593:src/keys.c    ****       }      
 8073              		.loc 1 3593 6 view .LVU2483
 8074 04fa 0446     		mov	r4, r0
 8075              	.LVL676:
 8076              	.LBB1460:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8077              		.loc 1 714 12 is_stmt 1 view .LVU2484
 8078              	.LBB1454:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8079              		.loc 1 715 2 view .LVU2485
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8080              		.loc 1 715 5 is_stmt 0 view .LVU2486
 8081 04fc 69D1     		bne	.L1348
 8082              	.LVL677:
 8083              	.L1121:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8084              		.loc 1 715 5 view .LVU2487
 8085 04fe FFF7FEFF 		bl	check_confirm.part.0
 8086              	.LVL678:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8087              		.loc 1 715 5 view .LVU2488
ARM GAS  /tmp/cceyv6gL.s 			page 247


 8088 0502 0446     		mov	r4, r0
 8089              	.LVL679:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8090              		.loc 1 715 5 view .LVU2489
 8091 0504 6CE7     		b	.L835
 8092              	.LVL680:
 8093              	.L792:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8094              		.loc 1 715 5 view .LVU2490
 8095              	.LBE1454:
 8096              	.LBE1460:
3543:src/keys.c    **** #ifndef CONSOLE
 8097              		.loc 1 3543 7 is_stmt 1 view .LVU2491
 8098 0506 464B     		ldr	r3, .L1403+16
 8099 0508 8D20     		movs	r0, #141
 8100 050a 1968     		ldr	r1, [r3]
 8101 050c FFF7FEFF 		bl	dot
 8102              	.LVL681:
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8103              		.loc 1 3545 7 view .LVU2492
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8104              		.loc 1 3545 11 is_stmt 0 view .LVU2493
 8105 0510 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8106              		.loc 1 3545 10 view .LVU2494
 8107 0514 9806     		lsls	r0, r3, #26
 8108 0516 3FF5F4AD 		bmi	.L770
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8109              		.loc 1 3546 2 is_stmt 1 view .LVU2495
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8110              		.loc 1 3546 6 is_stmt 0 view .LVU2496
 8111 051a 494B     		ldr	r3, .L1403+48
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8112              		.loc 1 3546 5 view .LVU2497
 8113 051c 1B68     		ldr	r3, [r3]
 8114 051e 002B     		cmp	r3, #0
 8115 0520 70D1     		bne	.L803
3548:src/keys.c    **** 	}
 8116              		.loc 1 3548 4 is_stmt 1 view .LVU2498
 8117              		.loc 1 3677 1 is_stmt 0 view .LVU2499
 8118 0522 03B0     		add	sp, sp, #12
 8119              		.cfi_remember_state
 8120              		.cfi_def_cfa_offset 36
 8121              		@ sp needed
 8122 0524 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8123              		.cfi_restore 14
 8124              		.cfi_restore 11
 8125              		.cfi_restore 10
 8126              		.cfi_restore 9
 8127              		.cfi_restore 8
 8128              		.cfi_restore 7
 8129              		.cfi_restore 6
 8130              		.cfi_restore 5
 8131              		.cfi_restore 4
 8132              		.cfi_def_cfa_offset 0
 8133              	.LVL682:
3548:src/keys.c    **** 	}
ARM GAS  /tmp/cceyv6gL.s 			page 248


 8134              		.loc 1 3548 4 view .LVU2500
 8135 0528 FFF7FEBF 		b	display
 8136              	.LVL683:
 8137              	.L1317:
 8138              		.cfi_restore_state
3531:src/keys.c    ****       else {
 8139              		.loc 1 3531 2 is_stmt 1 view .LVU2501
 8140 052c FFF7FEFF 		bl	xeq_sst_bst
 8141              	.LVL684:
3531:src/keys.c    ****       else {
 8142              		.loc 1 3531 2 is_stmt 0 view .LVU2502
 8143 0530 3A4E     		ldr	r6, .L1403+12
 8144 0532 B6E5     		b	.L794
 8145              	.L1319:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8146              		.loc 1 3462 28 discriminator 1 view .LVU2503
 8147 0534 FFF7FEFF 		bl	shift_down
 8148              	.LVL685:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8149              		.loc 1 3462 25 discriminator 1 view .LVU2504
 8150 0538 0028     		cmp	r0, #0
 8151 053a 3FF405AE 		beq	.L776
3464:src/keys.c    ****       }
 8152              		.loc 1 3464 2 is_stmt 1 view .LVU2505
3464:src/keys.c    ****       }
 8153              		.loc 1 3464 16 is_stmt 0 view .LVU2506
 8154 053e 344B     		ldr	r3, .L1403
 8155 0540 0022     		movs	r2, #0
 8156 0542 1A74     		strb	r2, [r3, #16]
 8157 0544 00E6     		b	.L776
 8158              	.L1318:
3464:src/keys.c    ****       }
 8159              		.loc 1 3464 16 view .LVU2507
 8160 0546 354E     		ldr	r6, .L1403+12
 8161 0548 ABE5     		b	.L794
 8162              	.L779:
3452:src/keys.c    **** 	  /*
 8163              		.loc 1 3452 10 is_stmt 1 view .LVU2508
3452:src/keys.c    **** 	  /*
 8164              		.loc 1 3452 14 is_stmt 0 view .LVU2509
 8165 054a FFF7FEFF 		bl	keyticks
 8166              	.LVL686:
3452:src/keys.c    **** 	  /*
 8167              		.loc 1 3452 13 view .LVU2510
 8168 054e 0C28     		cmp	r0, #12
 8169 0550 7FF7F5AD 		ble	.L778
3456:src/keys.c    **** 	  message("NULL", CNULL);
 8170              		.loc 1 3456 4 is_stmt 1 view .LVU2511
3457:src/keys.c    **** 	  // Force display update on key-up
 8171              		.loc 1 3457 4 is_stmt 0 view .LVU2512
 8172 0554 3B48     		ldr	r0, .L1403+52
3456:src/keys.c    **** 	  message("NULL", CNULL);
 8173              		.loc 1 3456 11 view .LVU2513
 8174 0556 2E60     		str	r6, [r5]
3457:src/keys.c    **** 	  // Force display update on key-up
 8175              		.loc 1 3457 4 is_stmt 1 view .LVU2514
 8176 0558 3146     		mov	r1, r6
ARM GAS  /tmp/cceyv6gL.s 			page 249


 8177 055a FFF7FEFF 		bl	message
 8178              	.LVL687:
3459:src/keys.c    **** 	}
 8179              		.loc 1 3459 4 view .LVU2515
3459:src/keys.c    **** 	}
 8180              		.loc 1 3459 21 is_stmt 0 view .LVU2516
 8181 055e 2C4B     		ldr	r3, .L1403
 8182 0560 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8183 0562 66F34512 		bfi	r2, r6, #5, #1
 8184 0566 DA75     		strb	r2, [r3, #23]
 8185 0568 E9E5     		b	.L778
 8186              	.L1093:
3635:src/keys.c    **** 	NonProgrammable = 0;
 8187              		.loc 1 3635 11 view .LVU2517
 8188 056a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8189 056e 2F4A     		ldr	r2, .L1403+28
3635:src/keys.c    **** 	NonProgrammable = 0;
 8190              		.loc 1 3635 10 view .LVU2518
 8191 0570 5D06     		lsls	r5, r3, #25
 8192 0572 2046     		mov	r0, r4
 8193              	.LVL688:
3635:src/keys.c    **** 	NonProgrammable = 0;
 8194              		.loc 1 3635 7 is_stmt 1 view .LVU2519
3635:src/keys.c    **** 	NonProgrammable = 0;
 8195              		.loc 1 3635 10 is_stmt 0 view .LVU2520
 8196 0574 41F1CD80 		bpl	.L1291
 8197              	.L1104:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8198              		.loc 1 3636 2 is_stmt 1 view .LVU2521
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8199              		.loc 1 3636 18 is_stmt 0 view .LVU2522
 8200 0578 0023     		movs	r3, #0
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8201              		.loc 1 3637 5 view .LVU2523
 8202 057a 142C     		cmp	r4, #20
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8203              		.loc 1 3636 18 view .LVU2524
 8204 057c 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8205              		.loc 1 3637 2 is_stmt 1 view .LVU2525
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8206              		.loc 1 3637 5 is_stmt 0 view .LVU2526
 8207 057e 68D8     		bhi	.L1101
3638:src/keys.c    **** 	    // Data entry key
 8208              		.loc 1 3638 4 is_stmt 1 view .LVU2527
3638:src/keys.c    **** 	    // Data entry key
 8209              		.loc 1 3638 7 is_stmt 0 view .LVU2528
 8210 0580 24B9     		cbnz	r4, .L1107
3638:src/keys.c    **** 	    // Data entry key
 8211              		.loc 1 3638 38 discriminator 1 view .LVU2529
 8212 0582 FFF7FEFF 		bl	is_bad_cmdline
 8213              	.LVL689:
3638:src/keys.c    **** 	    // Data entry key
 8214              		.loc 1 3638 34 discriminator 1 view .LVU2530
 8215 0586 0028     		cmp	r0, #0
 8216 0588 7FF456AF 		bne	.L1305
 8217              	.L1107:
ARM GAS  /tmp/cceyv6gL.s 			page 250


3641:src/keys.c    **** #endif
 8218              		.loc 1 3641 6 is_stmt 1 view .LVU2531
3643:src/keys.c    **** 	    xeq(c);
 8219              		.loc 1 3643 37 is_stmt 0 view .LVU2532
 8220 058c 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3641:src/keys.c    **** #endif
 8221              		.loc 1 3641 19 view .LVU2533
 8222 0590 0123     		movs	r3, #1
3644:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8223              		.loc 1 3644 6 view .LVU2534
 8224 0592 2046     		mov	r0, r4
3641:src/keys.c    **** #endif
 8225              		.loc 1 3641 19 view .LVU2535
 8226 0594 C9F80030 		str	r3, [r9]
3643:src/keys.c    **** 	    xeq(c);
 8227              		.loc 1 3643 6 is_stmt 1 view .LVU2536
3643:src/keys.c    **** 	    xeq(c);
 8228              		.loc 1 3643 37 is_stmt 0 view .LVU2537
 8229 0598 B5FA85F5 		clz	r5, r5
3644:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8230              		.loc 1 3644 6 view .LVU2538
 8231 059c FFF7FEFF 		bl	xeq
 8232              	.LVL690:
3645:src/keys.c    **** 	  }
 8233              		.loc 1 3645 38 view .LVU2539
 8234 05a0 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8235 05a4 3368     		ldr	r3, [r6]
3643:src/keys.c    **** 	    xeq(c);
 8236              		.loc 1 3643 37 view .LVU2540
 8237 05a6 6D09     		lsrs	r5, r5, #5
 8238              	.LVL691:
3644:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8239              		.loc 1 3644 6 is_stmt 1 view .LVU2541
3645:src/keys.c    **** 	  }
 8240              		.loc 1 3645 6 view .LVU2542
3645:src/keys.c    **** 	  }
 8241              		.loc 1 3645 20 is_stmt 0 view .LVU2543
 8242 05a8 0028     		cmp	r0, #0
 8243 05aa 08BF     		it	eq
 8244 05ac 0125     		moveq	r5, #1
 8245              	.LVL692:
3645:src/keys.c    **** 	  }
 8246              		.loc 1 3645 20 view .LVU2544
 8247 05ae 82E5     		b	.L801
 8248              	.LVL693:
 8249              	.L1098:
 8250              	.LBB1461:
3614:src/keys.c    **** 	if (p > Alpha)
 8251              		.loc 1 3614 2 is_stmt 1 view .LVU2545
3614:src/keys.c    **** 	if (p > Alpha)
 8252              		.loc 1 3614 22 is_stmt 0 view .LVU2546
 8253 05b0 1F4C     		ldr	r4, .L1403+32
 8254 05b2 2068     		ldr	r0, [r4]
3614:src/keys.c    **** 	if (p > Alpha)
 8255              		.loc 1 3614 12 view .LVU2547
 8256 05b4 0021     		movs	r1, #0
 8257 05b6 00F5F660 		add	r0, r0, #1968
ARM GAS  /tmp/cceyv6gL.s 			page 251


 8258 05ba FFF7FEFF 		bl	find_char
 8259              	.LVL694:
3615:src/keys.c    **** 	  *--p = '\0';
 8260              		.loc 1 3615 8 view .LVU2548
 8261 05be 2368     		ldr	r3, [r4]
 8262              	.LVL695:
3615:src/keys.c    **** 	  *--p = '\0';
 8263              		.loc 1 3615 2 is_stmt 1 view .LVU2549
3615:src/keys.c    **** 	  *--p = '\0';
 8264              		.loc 1 3615 8 is_stmt 0 view .LVU2550
 8265 05c0 03F5F663 		add	r3, r3, #1968
3615:src/keys.c    **** 	  *--p = '\0';
 8266              		.loc 1 3615 5 view .LVU2551
 8267 05c4 9842     		cmp	r0, r3
 8268 05c6 00F2DF80 		bhi	.L1099
 8269 05ca 3368     		ldr	r3, [r6]
 8270              	.LBE1461:
3409:src/keys.c    ****   //print_debug(60,c);
 8271              		.loc 1 3409 7 view .LVU2552
 8272 05cc 0025     		movs	r5, #0
 8273              	.LBB1462:
3615:src/keys.c    **** 	  *--p = '\0';
 8274              		.loc 1 3615 5 view .LVU2553
 8275 05ce 3024     		movs	r4, #48
 8276 05d0 71E5     		b	.L801
 8277              	.LVL696:
 8278              	.L1348:
3615:src/keys.c    **** 	  *--p = '\0';
 8279              		.loc 1 3615 5 view .LVU2554
 8280              	.LBE1462:
3635:src/keys.c    **** 	NonProgrammable = 0;
 8281              		.loc 1 3635 7 is_stmt 1 view .LVU2555
3635:src/keys.c    **** 	NonProgrammable = 0;
 8282              		.loc 1 3635 11 is_stmt 0 view .LVU2556
 8283 05d2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 8284              		.loc 1 3635 10 view .LVU2557
 8285 05d6 5B06     		lsls	r3, r3, #25
 8286 05d8 7FF527AF 		bpl	.L1116
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8287              		.loc 1 3636 2 is_stmt 1 view .LVU2558
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8288              		.loc 1 3636 18 is_stmt 0 view .LVU2559
 8289 05dc 134B     		ldr	r3, .L1403+28
 8290 05de 1D60     		str	r5, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8291              		.loc 1 3637 2 is_stmt 1 view .LVU2560
 8292 05e0 37E0     		b	.L1101
 8293              	.LVL697:
 8294              	.L1347:
3612:src/keys.c    ****       else if (State2.alphas) {
 8295              		.loc 1 3612 2 view .LVU2561
 8296 05e2 FFF7FEFF 		bl	delprog
 8297              	.LVL698:
 8298 05e6 3024     		movs	r4, #48
 8299 05e8 3368     		ldr	r3, [r6]
 8300 05ea 64E5     		b	.L801
ARM GAS  /tmp/cceyv6gL.s 			page 252


 8301              	.LVL699:
 8302              	.L780:
3446:src/keys.c    **** 	    DispMsg = TraceBuffer;
 8303              		.loc 1 3446 6 view .LVU2562
 8304 05ec 164E     		ldr	r6, .L1403+56
 8305 05ee 3146     		mov	r1, r6
 8306 05f0 FFF7FEFF 		bl	prt
 8307              	.LVL700:
 8308 05f4 2A46     		mov	r2, r5
 8309 05f6 0146     		mov	r1, r0
 8310 05f8 3046     		mov	r0, r6
 8311 05fa FFF7FEFF 		bl	scopy_char
 8312              	.LVL701:
3447:src/keys.c    **** 	  }
 8313              		.loc 1 3447 6 view .LVU2563
3447:src/keys.c    **** 	  }
 8314              		.loc 1 3447 14 is_stmt 0 view .LVU2564
 8315 05fe 0D4B     		ldr	r3, .L1403+36
 8316 0600 1E60     		str	r6, [r3]
 8317 0602 97E5     		b	.L781
 8318              	.L803:
3551:src/keys.c    **** 	}
 8319              		.loc 1 3551 4 is_stmt 1 view .LVU2565
 8320              		.loc 1 3677 1 is_stmt 0 view .LVU2566
 8321 0604 03B0     		add	sp, sp, #12
 8322              		.cfi_remember_state
 8323              		.cfi_def_cfa_offset 36
 8324              		@ sp needed
 8325 0606 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8326              		.cfi_restore 14
 8327              		.cfi_restore 11
 8328              		.cfi_restore 10
 8329              		.cfi_restore 9
 8330              		.cfi_restore 8
 8331              		.cfi_restore 7
 8332              		.cfi_restore 6
 8333              		.cfi_restore 5
 8334              		.cfi_restore 4
 8335              		.cfi_def_cfa_offset 0
 8336              	.LVL702:
3551:src/keys.c    **** 	}
 8337              		.loc 1 3551 4 view .LVU2567
 8338 060a FFF7FEBF 		b	finish_RPN
 8339              	.LVL703:
 8340              	.L1404:
 8341 060e 00BF     		.align	2
 8342              	.L1403:
 8343 0610 00000000 		.word	StateWhileOn
 8344 0614 00000000 		.word	GoFast
 8345 0618 00000000 		.word	JustDisplayed
 8346 061c 00000000 		.word	Running
 8347 0620 00000000 		.word	ShowRPN
 8348 0624 00000000 		.word	OpCode
 8349 0628 00000000 		.word	nd_opcode
 8350 062c 00000000 		.word	NonProgrammable
 8351 0630 00000000 		.word	main_ram
 8352 0634 00000000 		.word	DispMsg
ARM GAS  /tmp/cceyv6gL.s 			page 253


 8353 0638 0C000000 		.word	.LC2
 8354 063c 00000000 		.word	OpCodeDisplayPending
 8355 0640 00000000 		.word	WasDataEntry
 8356 0644 04000000 		.word	.LC1
 8357 0648 00000000 		.word	TraceBuffer
 8358              	.LVL704:
 8359              	.L1345:
 8360              		.cfi_restore_state
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8361              		.loc 1 3636 2 is_stmt 1 view .LVU2568
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8362              		.loc 1 3636 18 is_stmt 0 view .LVU2569
 8363 064c C34B     		ldr	r3, .L1405
 8364 064e 0022     		movs	r2, #0
 8365 0650 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8366              		.loc 1 3637 2 is_stmt 1 view .LVU2570
 8367              	.LVL705:
 8368              	.L1101:
3651:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8369              		.loc 1 3651 4 view .LVU2571
3651:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8370              		.loc 1 3651 11 is_stmt 0 view .LVU2572
 8371 0652 C34A     		ldr	r2, .L1405+4
3652:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8372              		.loc 1 3652 25 view .LVU2573
 8373 0654 C34B     		ldr	r3, .L1405+8
3651:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8374              		.loc 1 3651 11 view .LVU2574
 8375 0656 1060     		str	r0, [r2]
3652:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8376              		.loc 1 3652 4 is_stmt 1 view .LVU2575
3652:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8377              		.loc 1 3652 25 is_stmt 0 view .LVU2576
 8378 0658 0122     		movs	r2, #1
 8379 065a C34E     		ldr	r6, .L1405+12
 8380 065c 1A60     		str	r2, [r3]
3653:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8381              		.loc 1 3653 4 is_stmt 1 view .LVU2577
 8382 065e FFF7FEFF 		bl	finish_RPN
 8383              	.LVL706:
3654:src/keys.c    **** 	}
 8384              		.loc 1 3654 4 view .LVU2578
 8385 0662 4CE5     		b	.L1108
 8386              	.LVL707:
 8387              	.L1324:
 8388              	.LBB1463:
 8389              	.LBB1395:
3279:src/keys.c    **** 
 8390              		.loc 1 3279 3 view .LVU2579
 8391              	.LBB968:
 8392              	.LBI968:
2881:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8393              		.loc 1 2881 12 view .LVU2580
 8394              	.LBB969:
2883:src/keys.c    **** #ifdef DM42
 8395              		.loc 1 2883 2 view .LVU2581
ARM GAS  /tmp/cceyv6gL.s 			page 254


 8396 0664 E4B2     		uxtb	r4, r4
 8397              	.LVL708:
2883:src/keys.c    **** #ifdef DM42
 8398              		.loc 1 2883 2 is_stmt 0 view .LVU2582
 8399 0666 A4F10E03 		sub	r3, r4, #14
 8400 066a 192B     		cmp	r3, #25
 8401 066c 3AD8     		bhi	.L1309
 8402 066e DFE803F0 		tbb	[pc, r3]
 8403              	.L827:
 8404 0672 3E       		.byte	(.L828-.L827)/2
 8405 0673 39       		.byte	(.L1309-.L827)/2
 8406 0674 3E       		.byte	(.L828-.L827)/2
 8407 0675 39       		.byte	(.L1309-.L827)/2
 8408 0676 39       		.byte	(.L1309-.L827)/2
 8409 0677 39       		.byte	(.L1309-.L827)/2
 8410 0678 39       		.byte	(.L1309-.L827)/2
 8411 0679 39       		.byte	(.L1309-.L827)/2
 8412 067a 39       		.byte	(.L1309-.L827)/2
 8413 067b 39       		.byte	(.L1309-.L827)/2
 8414 067c 39       		.byte	(.L1309-.L827)/2
 8415 067d 39       		.byte	(.L1309-.L827)/2
 8416 067e 39       		.byte	(.L1309-.L827)/2
 8417 067f 39       		.byte	(.L1309-.L827)/2
 8418 0680 39       		.byte	(.L1309-.L827)/2
 8419 0681 39       		.byte	(.L1309-.L827)/2
 8420 0682 39       		.byte	(.L1309-.L827)/2
 8421 0683 39       		.byte	(.L1309-.L827)/2
 8422 0684 4A       		.byte	(.L826-.L827)/2
 8423 0685 39       		.byte	(.L1309-.L827)/2
 8424 0686 39       		.byte	(.L1309-.L827)/2
 8425 0687 39       		.byte	(.L1309-.L827)/2
 8426 0688 39       		.byte	(.L1309-.L827)/2
 8427 0689 39       		.byte	(.L1309-.L827)/2
 8428 068a 39       		.byte	(.L1309-.L827)/2
 8429 068b 4A       		.byte	(.L826-.L827)/2
 8430              	.LVL709:
 8431              		.p2align 1
 8432              	.L1334:
2883:src/keys.c    **** #ifdef DM42
 8433              		.loc 1 2883 2 view .LVU2583
 8434              	.LBE969:
 8435              	.LBE968:
 8436              	.LBB972:
 8437              	.LBB835:
 277:src/keys.c    **** 			switch (c) {
 8438              		.loc 1 277 3 is_stmt 1 view .LVU2584
 277:src/keys.c    **** 			switch (c) {
 8439              		.loc 1 277 6 is_stmt 0 view .LVU2585
 8440 068c BBF1030F 		cmp	fp, #3
 8441 0690 00F01982 		beq	.L1349
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8442              		.loc 1 294 3 is_stmt 1 view .LVU2586
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8443              		.loc 1 294 6 is_stmt 0 view .LVU2587
 8444 0694 BBF1020F 		cmp	fp, #2
 8445 0698 00F0B085 		beq	.L1350
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
ARM GAS  /tmp/cceyv6gL.s 			page 255


 8446              		.loc 1 296 3 is_stmt 1 view .LVU2588
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8447              		.loc 1 296 6 is_stmt 0 view .LVU2589
 8448 069c BBF1010F 		cmp	fp, #1
 8449 06a0 7FF4EDAD 		bne	.L921
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8450              		.loc 1 296 27 view .LVU2590
 8451 06a4 0C2C     		cmp	r4, #12
 8452 06a6 7FF4EAAD 		bne	.L921
 297:src/keys.c    **** 				SET_REAL;
 8453              		.loc 1 297 4 is_stmt 1 view .LVU2591
 297:src/keys.c    **** 				SET_REAL;
 8454              		.loc 1 297 7 is_stmt 0 view .LVU2592
 8455 06aa 11F0060F 		tst	r1, #6
 8456 06ae 01F02680 		beq	.L1351
 301:src/keys.c    **** 				CmdLineLength = 0;
 8457              		.loc 1 301 9 is_stmt 1 view .LVU2593
 301:src/keys.c    **** 				CmdLineLength = 0;
 8458              		.loc 1 301 12 is_stmt 0 view .LVU2594
 8459 06b2 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 8460 06b6 002B     		cmp	r3, #0
 8461 06b8 00F0D787 		beq	.L1139
 302:src/keys.c    **** 				CmdLineEex = 0;
 8462              		.loc 1 302 5 is_stmt 1 view .LVU2595
 303:src/keys.c    **** 				CmdLineDot = 0;
 8463              		.loc 1 303 5 view .LVU2596
 304:src/keys.c    **** 			}
 8464              		.loc 1 304 5 view .LVU2597
 302:src/keys.c    **** 				CmdLineEex = 0;
 8465              		.loc 1 302 19 is_stmt 0 view .LVU2598
 8466 06bc 0023     		movs	r3, #0
 8467 06be A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 8468              		.loc 1 304 16 view .LVU2599
 8469 06c2 88F81E30 		strb	r3, [r8, #30]
 8470              	.LVL710:
 304:src/keys.c    **** 			}
 8471              		.loc 1 304 16 view .LVU2600
 8472              	.LBE835:
 8473              	.LBE972:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 8474              		.loc 1 3325 2 is_stmt 1 view .LVU2601
 8475              	.LBB973:
 8476              	.LBB836:
 306:src/keys.c    **** 		}
 8477              		.loc 1 306 11 is_stmt 0 view .LVU2602
 8478 06c6 1023     		movs	r3, #16
 8479              	.LVL711:
 8480              	.L904:
 306:src/keys.c    **** 		}
 8481              		.loc 1 306 11 view .LVU2603
 8482              	.LBE836:
 8483              	.LBE973:
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 8484              		.loc 1 3326 3 is_stmt 1 view .LVU2604
 8485 06c8 0093     		str	r3, [sp]
3326:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cceyv6gL.s 			page 256


 8486              		.loc 1 3326 7 is_stmt 0 view .LVU2605
 8487 06ca FFF7FEFF 		bl	is_bad_cmdline
 8488              	.LVL712:
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 8489              		.loc 1 3326 6 view .LVU2606
 8490 06ce 009B     		ldr	r3, [sp]
 8491 06d0 0446     		mov	r4, r0
 8492 06d2 38B9     		cbnz	r0, .L1309
 8493 06d4 0093     		str	r3, [sp]
3328:src/keys.c    **** 		init_cat( cat );
 8494              		.loc 1 3328 3 is_stmt 1 view .LVU2607
 8495 06d6 FFF7FEFF 		bl	init_cat
 8496              	.LVL713:
3329:src/keys.c    **** 		return STATE_UNFINISHED;
 8497              		.loc 1 3329 3 view .LVU2608
 8498 06da 009B     		ldr	r3, [sp]
 8499 06dc 1846     		mov	r0, r3
 8500 06de FFF7FEFF 		bl	init_cat
 8501              	.LVL714:
3330:src/keys.c    **** 	}
 8502              		.loc 1 3330 3 view .LVU2609
 8503              	.LBE1395:
 8504              	.LBE1463:
3409:src/keys.c    ****   //print_debug(60,c);
 8505              		.loc 1 3409 7 is_stmt 0 view .LVU2610
 8506 06e2 2546     		mov	r5, r4
 8507              	.LVL715:
 8508              	.L1309:
3409:src/keys.c    ****   //print_debug(60,c);
 8509              		.loc 1 3409 7 view .LVU2611
 8510 06e4 3368     		ldr	r3, [r6]
 8511              	.LBB1464:
 8512              	.LBB1396:
3330:src/keys.c    **** 	}
 8513              		.loc 1 3330 10 view .LVU2612
 8514 06e6 3324     		movs	r4, #51
 8515 06e8 E5E4     		b	.L801
 8516              	.LVL716:
 8517              	.L829:
 8518              	.LBB974:
 8519              	.LBB970:
2892:src/keys.c    **** 	  }
 8520              		.loc 1 2892 26 is_stmt 1 view .LVU2613
 8521 06ea FFF7FEFF 		bl	clpall
 8522              	.LVL717:
2892:src/keys.c    **** 	  }
 8523              		.loc 1 2892 36 view .LVU2614
 8524              	.L828:
2901:src/keys.c    **** 	  State2.digval = 0;
 8525              		.loc 1 2901 4 view .LVU2615
2901:src/keys.c    **** 	  State2.digval = 0;
 8526              		.loc 1 2901 19 is_stmt 0 view .LVU2616
 8527 06ee 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8528 06f2 3368     		ldr	r3, [r6]
 8529 06f4 6FF30202 		bfc	r2, #0, #3
2902:src/keys.c    **** 	  break;
 8530              		.loc 1 2902 18 view .LVU2617
ARM GAS  /tmp/cceyv6gL.s 			page 257


 8531 06f8 0021     		movs	r1, #0
2901:src/keys.c    **** 	  State2.digval = 0;
 8532              		.loc 1 2901 19 view .LVU2618
 8533 06fa 88F81420 		strb	r2, [r8, #20]
2902:src/keys.c    **** 	  break;
 8534              		.loc 1 2902 4 is_stmt 1 view .LVU2619
2902:src/keys.c    **** 	  break;
 8535              		.loc 1 2902 18 is_stmt 0 view .LVU2620
 8536 06fe A8F80810 		strh	r1, [r8, #8]	@ movhi
2903:src/keys.c    **** 	default:			// No state change
 8537              		.loc 1 2903 4 is_stmt 1 view .LVU2621
 8538              	.LBE970:
 8539              	.LBE974:
3279:src/keys.c    **** 
 8540              		.loc 1 3279 10 is_stmt 0 view .LVU2622
 8541 0702 3324     		movs	r4, #51
 8542              	.LVL718:
 8543              	.LBB975:
 8544              	.LBB971:
2903:src/keys.c    **** 	default:			// No state change
 8545              		.loc 1 2903 4 view .LVU2623
 8546 0704 D7E4     		b	.L801
 8547              	.LVL719:
 8548              	.L826:
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8549              		.loc 1 2888 4 is_stmt 1 view .LVU2624
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8550              		.loc 1 2888 18 is_stmt 0 view .LVU2625
 8551 0706 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8552 070a 03F00703 		and	r3, r3, #7
 8553 070e 013B     		subs	r3, r3, #1
 8554 0710 032B     		cmp	r3, #3
 8555 0712 ECD8     		bhi	.L828
 8556 0714 01A2     		adr	r2, .L830
 8557 0716 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8558 071a 00BF     		.p2align 2
 8559              	.L830:
 8560 071c 39070000 		.word	.L833+1
 8561 0720 33070000 		.word	.L832+1
 8562 0724 2D070000 		.word	.L831+1
 8563 0728 EB060000 		.word	.L829+1
 8564              		.p2align 1
 8565              	.L831:
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8566              		.loc 1 2891 26 is_stmt 1 view .LVU2626
 8567 072c FFF7FEFF 		bl	clrprog
 8568              	.LVL720:
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8569              		.loc 1 2891 37 view .LVU2627
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8570              		.loc 1 2891 4 is_stmt 0 view .LVU2628
 8571 0730 DDE7     		b	.L828
 8572              	.L832:
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8573              		.loc 1 2890 25 is_stmt 1 view .LVU2629
 8574 0732 FFF7FEFF 		bl	reset
 8575              	.LVL721:
ARM GAS  /tmp/cceyv6gL.s 			page 258


2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8576              		.loc 1 2890 34 view .LVU2630
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8577              		.loc 1 2890 4 is_stmt 0 view .LVU2631
 8578 0736 DAE7     		b	.L828
 8579              	.L833:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8580              		.loc 1 2889 25 is_stmt 1 view .LVU2632
 8581 0738 FFF7FEFF 		bl	clrall
 8582              	.LVL722:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8583              		.loc 1 2889 35 view .LVU2633
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8584              		.loc 1 2889 4 is_stmt 0 view .LVU2634
 8585 073c D7E7     		b	.L828
 8586              	.LVL723:
 8587              	.L1322:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8588              		.loc 1 2889 4 view .LVU2635
 8589              	.LBE971:
 8590              	.LBE975:
3246:src/keys.c    **** #else
 8591              		.loc 1 3246 47 view .LVU2636
 8592 073e DFF84082 		ldr	r8, .L1405+36
 8593 0742 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
3246:src/keys.c    **** #else
 8594              		.loc 1 3246 36 view .LVU2637
 8595 0746 4BEA0302 		orr	r2, fp, r3
 8596 074a 12F0FF0F 		tst	r2, #255
 8597 074e 7FF42CAD 		bne	.L813
3246:src/keys.c    **** #else
 8598              		.loc 1 3246 76 view .LVU2638
 8599 0752 864A     		ldr	r2, .L1405+16
 8600 0754 D8F81430 		ldr	r3, [r8, #20]
 8601 0758 1A42     		tst	r2, r3
 8602 075a 7FF42EAD 		bne	.L823
3252:src/keys.c    **** 	stack_restore();
 8603              		.loc 1 3252 7 is_stmt 1 view .LVU2639
3252:src/keys.c    **** 	stack_restore();
 8604              		.loc 1 3252 11 is_stmt 0 view .LVU2640
 8605 075e DFF818A2 		ldr	r10, .L1405+28
 8606 0762 DAF80030 		ldr	r3, [r10]
 8607 0766 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3252:src/keys.c    **** 	stack_restore();
 8608              		.loc 1 3252 10 view .LVU2641
 8609 076a 03F04102 		and	r2, r3, #65
 8610 076e 412A     		cmp	r2, #65
 8611 0770 00F03786 		beq	.L1352
 8612              	.LVL724:
 8613              	.L815:
3258:src/keys.c    ****       return STATE_UNFINISHED;
 8614              		.loc 1 3258 7 is_stmt 1 view .LVU2642
 8615 0774 FFF7FEFF 		bl	soft_init_state
 8616              	.LVL725:
3259:src/keys.c    ****     }
 8617              		.loc 1 3259 7 view .LVU2643
3259:src/keys.c    ****     }
ARM GAS  /tmp/cceyv6gL.s 			page 259


 8618              		.loc 1 3259 14 is_stmt 0 view .LVU2644
 8619 0778 3324     		movs	r4, #51
 8620 077a 3368     		ldr	r3, [r6]
 8621 077c 9BE4     		b	.L801
 8622              	.LVL726:
 8623              	.L1325:
3282:src/keys.c    **** 
 8624              		.loc 1 3282 3 is_stmt 1 view .LVU2645
3282:src/keys.c    **** 
 8625              		.loc 1 3282 10 is_stmt 0 view .LVU2646
 8626 077e E0B2     		uxtb	r0, r4
 8627 0780 FFF7FEFF 		bl	process_arg
 8628              	.LVL727:
 8629 0784 0446     		mov	r4, r0
 8630              	.LVL728:
3282:src/keys.c    **** 
 8631              		.loc 1 3282 10 view .LVU2647
 8632 0786 2BE6     		b	.L835
 8633              	.LVL729:
 8634              	.L1099:
3282:src/keys.c    **** 
 8635              		.loc 1 3282 10 view .LVU2648
 8636              	.LBE1396:
 8637              	.LBE1464:
 8638              	.LBB1465:
3616:src/keys.c    ****       }
 8639              		.loc 1 3616 4 is_stmt 1 view .LVU2649
3616:src/keys.c    ****       }
 8640              		.loc 1 3616 9 is_stmt 0 view .LVU2650
 8641 0788 0025     		movs	r5, #0
 8642 078a 00F8015C 		strb	r5, [r0, #-1]
 8643 078e 8EE6     		b	.L1306
 8644              	.LVL730:
 8645              	.L1328:
3616:src/keys.c    ****       }
 8646              		.loc 1 3616 9 view .LVU2651
 8647              	.LBE1465:
 8648              	.LBB1466:
 8649              	.LBB1397:
3291:src/keys.c    **** 
 8650              		.loc 1 3291 3 is_stmt 1 view .LVU2652
 8651              	.LBB976:
 8652              	.LBI976:
2347:src/keys.c    **** 	int r = State2.test;
 8653              		.loc 1 2347 12 view .LVU2653
 8654              	.LBB977:
2348:src/keys.c    **** 	int cmpx = State2.cmplx;
 8655              		.loc 1 2348 2 view .LVU2654
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8656              		.loc 1 2349 2 view .LVU2655
 8657              	.LBB978:
 8658              	.LBB979:
 8659              	.LBB980:
 8660              	.LBB981:
 143:src/keys.c    **** }
 8661              		.loc 1 143 23 is_stmt 0 view .LVU2656
 8662 0790 DFF8DCC1 		ldr	ip, .L1405+20
ARM GAS  /tmp/cceyv6gL.s 			page 260


 8663              	.LBE981:
 8664              	.LBE980:
 234:src/keys.c    **** }
 8665              		.loc 1 234 28 view .LVU2657
 8666 0794 DFF8DCE1 		ldr	lr, .L1405+24
 8667              	.LBB985:
 8668              	.LBB982:
 143:src/keys.c    **** }
 8669              		.loc 1 143 23 view .LVU2658
 8670 0798 E4B2     		uxtb	r4, r4
 8671              	.LVL731:
 143:src/keys.c    **** }
 8672              		.loc 1 143 23 view .LVU2659
 8673              	.LBE982:
 8674              	.LBE985:
 8675              	.LBE979:
 8676              	.LBE978:
2351:src/keys.c    **** 
 8677              		.loc 1 2351 44 view .LVU2660
 8678 079a 12F0020F 		tst	r2, #2
 8679              	.LBB990:
 8680              	.LBB988:
 8681              	.LBB986:
 8682              	.LBB983:
 143:src/keys.c    **** }
 8683              		.loc 1 143 23 view .LVU2661
 8684 079e 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 8685              	.LBE983:
 8686              	.LBE986:
 234:src/keys.c    **** }
 8687              		.loc 1 234 28 view .LVU2662
 8688 07a2 1EF80CE0 		ldrb	lr, [lr, ip]	@ zero_extendqisi2
 8689              	.LBE988:
 8690              	.LBE990:
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8691              		.loc 1 2349 19 view .LVU2663
 8692 07a6 C2F3400B 		ubfx	fp, r2, #1, #1
 8693              	.LVL732:
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8694              		.loc 1 2350 2 is_stmt 1 view .LVU2664
 8695              	.LBB991:
 8696              	.LBI978:
 210:src/keys.c    **** {
 8697              		.loc 1 210 14 view .LVU2665
 8698              	.LBB989:
 212:src/keys.c    ****     // K00 - K05
 8699              		.loc 1 212 3 view .LVU2666
 234:src/keys.c    **** }
 8700              		.loc 1 234 3 view .LVU2667
 8701              	.LBB987:
 8702              	.LBI980:
 131:src/keys.c    **** {
 8703              		.loc 1 131 12 view .LVU2668
 8704              	.LBB984:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8705              		.loc 1 133 2 view .LVU2669
 143:src/keys.c    **** }
ARM GAS  /tmp/cceyv6gL.s 			page 261


 8706              		.loc 1 143 2 view .LVU2670
 143:src/keys.c    **** }
 8707              		.loc 1 143 2 is_stmt 0 view .LVU2671
 8708              	.LBE984:
 8709              	.LBE987:
 8710              	.LBE989:
 8711              	.LBE991:
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8712              		.loc 1 2350 15 view .LVU2672
 8713 07aa 2EF0800C 		bic	ip, lr, #128
 8714              	.LVL733:
2351:src/keys.c    **** 
 8715              		.loc 1 2351 2 is_stmt 1 view .LVU2673
2351:src/keys.c    **** 
 8716              		.loc 1 2351 44 is_stmt 0 view .LVU2674
 8717 07ae 00F0C380 		beq	.L1353
 8718              	.LVL734:
2353:src/keys.c    **** 	State2.cmplx = 0;
 8719              		.loc 1 2353 2 is_stmt 1 view .LVU2675
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8720              		.loc 1 2354 15 is_stmt 0 view .LVU2676
 8721 07b2 60F34102 		bfi	r2, r0, #1, #1
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8722              		.loc 1 2355 5 view .LVU2677
 8723 07b6 BCF1640F 		cmp	ip, #100
2353:src/keys.c    **** 	State2.cmplx = 0;
 8724              		.loc 1 2353 14 view .LVU2678
 8725 07ba 4FF00700 		mov	r0, #7
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8726              		.loc 1 2354 15 view .LVU2679
 8727 07be 88F81520 		strb	r2, [r8, #21]
2353:src/keys.c    **** 	State2.cmplx = 0;
 8728              		.loc 1 2353 14 view .LVU2680
 8729 07c2 88F80F00 		strb	r0, [r8, #15]
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8730              		.loc 1 2354 2 is_stmt 1 view .LVU2681
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8731              		.loc 1 2355 2 view .LVU2682
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8732              		.loc 1 2355 5 is_stmt 0 view .LVU2683
 8733 07c6 00F01185 		beq	.L1165
2351:src/keys.c    **** 
 8734              		.loc 1 2351 44 view .LVU2684
 8735 07ca 4FF0340A 		mov	r10, #52
 8736              	.LVL735:
 8737              	.L1124:
2356:src/keys.c    **** 		// Lettered register
 8738              		.loc 1 2356 5 view .LVU2685
 8739 07ce BCF17F0F 		cmp	ip, #127
2351:src/keys.c    **** 
 8740              		.loc 1 2351 60 view .LVU2686
 8741 07d2 9A44     		add	r10, r10, r3
2356:src/keys.c    **** 		// Lettered register
 8742              		.loc 1 2356 2 is_stmt 1 view .LVU2687
2356:src/keys.c    **** 		// Lettered register
 8743              		.loc 1 2356 5 is_stmt 0 view .LVU2688
 8744 07d4 00F04981 		beq	.L867
ARM GAS  /tmp/cceyv6gL.s 			page 262


 8745              	.LVL736:
2356:src/keys.c    **** 		// Lettered register
 8746              		.loc 1 2356 18 view .LVU2689
 8747 07d8 BCF1630F 		cmp	ip, #99
 8748 07dc 40F26881 		bls	.L868
2356:src/keys.c    **** 		// Lettered register
 8749              		.loc 1 2356 37 view .LVU2690
 8750 07e0 BCF16F0F 		cmp	ip, #111
 8751 07e4 00F24181 		bhi	.L867
2358:src/keys.c    **** 			if (n == regI_idx)
 8752              		.loc 1 2358 3 is_stmt 1 view .LVU2691
2358:src/keys.c    **** 			if (n == regI_idx)
 8753              		.loc 1 2358 6 is_stmt 0 view .LVU2692
 8754 07e8 BBF1000F 		cmp	fp, #0
 8755 07ec 00F09182 		beq	.L869
2358:src/keys.c    **** 			if (n == regI_idx)
 8756              		.loc 1 2358 12 view .LVU2693
 8757 07f0 1EF0010F 		tst	lr, #1
 8758 07f4 00F08D82 		beq	.L869
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8759              		.loc 1 2359 4 is_stmt 1 view .LVU2694
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8760              		.loc 1 2359 7 is_stmt 0 view .LVU2695
 8761 07f8 BCF16D0F 		cmp	ip, #109
 8762 07fc 40F04481 		bne	.L870
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8763              		.loc 1 2360 5 is_stmt 1 view .LVU2696
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8764              		.loc 1 2360 30 is_stmt 0 view .LVU2697
 8765 0800 03F12904 		add	r4, r3, #41
 8766              	.LVL737:
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8767              		.loc 1 2360 30 view .LVU2698
 8768 0804 ECE5     		b	.L835
 8769              	.LVL738:
 8770              	.L1326:
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8771              		.loc 1 2360 30 view .LVU2699
 8772              	.LBE977:
 8773              	.LBE976:
3285:src/keys.c    **** 
 8774              		.loc 1 3285 3 is_stmt 1 view .LVU2700
 8775              	.LBB1005:
 8776              	.LBI1005:
1709:src/keys.c    **** 	int pc = -1;
 8777              		.loc 1 1709 12 view .LVU2701
 8778              	.LBB1006:
1710:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 8779              		.loc 1 1710 2 view .LVU2702
1711:src/keys.c    **** 
 8780              		.loc 1 1711 2 view .LVU2703
 8781              	.LBB1007:
 8782              	.LBI1007:
 210:src/keys.c    **** {
 8783              		.loc 1 210 14 view .LVU2704
 8784              	.LBB1008:
 212:src/keys.c    ****     // K00 - K05
ARM GAS  /tmp/cceyv6gL.s 			page 263


 8785              		.loc 1 212 3 view .LVU2705
 234:src/keys.c    **** }
 8786              		.loc 1 234 3 view .LVU2706
 8787              	.LBB1009:
 8788              	.LBI1009:
 131:src/keys.c    **** {
 8789              		.loc 1 131 12 view .LVU2707
 8790              	.LBB1010:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8791              		.loc 1 133 2 view .LVU2708
 143:src/keys.c    **** }
 8792              		.loc 1 143 2 view .LVU2709
 143:src/keys.c    **** }
 8793              		.loc 1 143 23 is_stmt 0 view .LVU2710
 8794 0806 5A4B     		ldr	r3, .L1405+20
 8795              	.LBE1010:
 8796              	.LBE1009:
 234:src/keys.c    **** }
 8797              		.loc 1 234 28 view .LVU2711
 8798 0808 5A4A     		ldr	r2, .L1405+24
 8799 080a E4B2     		uxtb	r4, r4
 8800              	.LVL739:
 8801              	.LBB1012:
 8802              	.LBB1011:
 143:src/keys.c    **** }
 8803              		.loc 1 143 23 view .LVU2712
 8804 080c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8805              	.LBE1011:
 8806              	.LBE1012:
 234:src/keys.c    **** }
 8807              		.loc 1 234 28 view .LVU2713
 8808 080e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 8809              	.LVL740:
 234:src/keys.c    **** }
 8810              		.loc 1 234 28 view .LVU2714
 8811              	.LBE1008:
 8812              	.LBE1007:
1713:src/keys.c    **** 		// Digit 0 - 9
 8813              		.loc 1 1713 2 is_stmt 1 view .LVU2715
1713:src/keys.c    **** 		// Digit 0 - 9
 8814              		.loc 1 1713 5 is_stmt 0 view .LVU2716
 8815 0810 0928     		cmp	r0, #9
 8816 0812 40F24581 		bls	.L1354
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8817              		.loc 1 1718 7 is_stmt 1 view .LVU2717
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8818              		.loc 1 1718 18 is_stmt 0 view .LVU2718
 8819 0816 20F08000 		bic	r0, r0, #128
 8820              	.LVL741:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8821              		.loc 1 1718 10 view .LVU2719
 8822 081a 6428     		cmp	r0, #100
 8823 081c 00F07282 		beq	.L1355
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8824              		.loc 1 1719 7 is_stmt 1 view .LVU2720
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8825              		.loc 1 1719 10 is_stmt 0 view .LVU2721
ARM GAS  /tmp/cceyv6gL.s 			page 264


 8826 0820 6528     		cmp	r0, #101
 8827 0822 00F07D82 		beq	.L1356
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8828              		.loc 1 1720 7 is_stmt 1 view .LVU2722
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8829              		.loc 1 1720 10 is_stmt 0 view .LVU2723
 8830 0826 6628     		cmp	r0, #102
 8831 0828 00F08882 		beq	.L1357
1721:src/keys.c    **** #endif
 8832              		.loc 1 1721 7 is_stmt 1 view .LVU2724
1721:src/keys.c    **** #endif
 8833              		.loc 1 1721 10 is_stmt 0 view .LVU2725
 8834 082c 6728     		cmp	r0, #103
 8835 082e 00F0A684 		beq	.L1358
1723:src/keys.c    **** 		// A - D
 8836              		.loc 1 1723 7 is_stmt 1 view .LVU2726
1723:src/keys.c    **** 		// A - D
 8837              		.loc 1 1723 10 is_stmt 0 view .LVU2727
 8838 0832 032C     		cmp	r4, #3
 8839 0834 40F2AA84 		bls	.L1359
1728:src/keys.c    **** 		// .
 8840              		.loc 1 1728 7 is_stmt 1 view .LVU2728
1728:src/keys.c    **** 		// .
 8841              		.loc 1 1728 10 is_stmt 0 view .LVU2729
 8842 0838 262C     		cmp	r4, #38
 8843 083a 00F03B85 		beq	.L1360
1733:src/keys.c    **** 		// ENTER - short circuit processing
 8844              		.loc 1 1733 7 is_stmt 1 view .LVU2730
1733:src/keys.c    **** 		// ENTER - short circuit processing
 8845              		.loc 1 1733 10 is_stmt 0 view .LVU2731
 8846 083e 0C2C     		cmp	r4, #12
 8847 0840 00F0BC84 		beq	.L1361
1737:src/keys.c    **** 		// backspace
 8848              		.loc 1 1737 7 is_stmt 1 view .LVU2732
1737:src/keys.c    **** 		// backspace
 8849              		.loc 1 1737 10 is_stmt 0 view .LVU2733
 8850 0844 102C     		cmp	r4, #16
 8851 0846 00F0A385 		beq	.L1362
1746:src/keys.c    **** 		// up
 8852              		.loc 1 1746 7 is_stmt 1 view .LVU2734
1746:src/keys.c    **** 		// up
 8853              		.loc 1 1746 10 is_stmt 0 view .LVU2735
 8854 084a 122C     		cmp	r4, #18
 8855 084c 00F0F686 		beq	.L1363
1756:src/keys.c    **** 		// down
 8856              		.loc 1 1756 7 is_stmt 1 view .LVU2736
1756:src/keys.c    **** 		// down
 8857              		.loc 1 1756 10 is_stmt 0 view .LVU2737
 8858 0850 182C     		cmp	r4, #24
 8859 0852 7FF447AF 		bne	.L1309
1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8860              		.loc 1 1758 3 is_stmt 1 view .LVU2738
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8861              		.loc 1 1759 18 is_stmt 0 view .LVU2739
 8862 0856 484C     		ldr	r4, .L1405+28
 8863              	.LVL742:
1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
ARM GAS  /tmp/cceyv6gL.s 			page 265


 8864              		.loc 1 1758 3 view .LVU2740
 8865 0858 0120     		movs	r0, #1
 8866 085a FFF7FEFF 		bl	update_program_bounds
 8867              	.LVL743:
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8868              		.loc 1 1759 3 is_stmt 1 view .LVU2741
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8869              		.loc 1 1759 18 is_stmt 0 view .LVU2742
 8870 085e 2368     		ldr	r3, [r4]
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8871              		.loc 1 1759 11 view .LVU2743
 8872 0860 0021     		movs	r1, #0
 8873 0862 B3F8EE07 		ldrh	r0, [r3, #2030]
 8874 0866 FFF7FEFF 		bl	do_inc
 8875              	.LVL744:
1760:src/keys.c    **** 			rawpc = 1;
 8876              		.loc 1 1760 3 is_stmt 1 view .LVU2744
1760:src/keys.c    **** 			rawpc = 1;
 8877              		.loc 1 1760 6 is_stmt 0 view .LVU2745
 8878 086a 20B9     		cbnz	r0, .L847
1760:src/keys.c    **** 			rawpc = 1;
 8879              		.loc 1 1760 21 view .LVU2746
 8880 086c 2368     		ldr	r3, [r4]
1760:src/keys.c    **** 			rawpc = 1;
 8881              		.loc 1 1760 18 view .LVU2747
 8882 086e 5888     		ldrh	r0, [r3, #2]
 8883              	.LVL745:
1760:src/keys.c    **** 			rawpc = 1;
 8884              		.loc 1 1760 18 view .LVU2748
 8885 0870 0038     		subs	r0, r0, #0
 8886 0872 18BF     		it	ne
 8887 0874 0120     		movne	r0, #1
 8888              	.LVL746:
 8889              	.L847:
1766:src/keys.c    **** fin2:		State2.gtodot = 0;
 8890              		.loc 1 1766 7 is_stmt 1 view .LVU2749
 8891 0876 FFF7FEFF 		bl	set_pc
 8892              	.LVL747:
 8893              	.L851:
1767:src/keys.c    **** 		State2.digval = 0;
 8894              		.loc 1 1767 8 view .LVU2750
1767:src/keys.c    **** 		State2.digval = 0;
 8895              		.loc 1 1767 22 is_stmt 0 view .LVU2751
 8896 087a 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 8897 087e 3368     		ldr	r3, [r6]
1768:src/keys.c    **** 		State2.numdigit = 0;
 8898              		.loc 1 1768 17 view .LVU2752
 8899 0880 0022     		movs	r2, #0
1767:src/keys.c    **** 		State2.digval = 0;
 8900              		.loc 1 1767 22 view .LVU2753
 8901 0882 6FF30001 		bfc	r1, #0, #1
 8902 0886 88F81510 		strb	r1, [r8, #21]
1768:src/keys.c    **** 		State2.numdigit = 0;
 8903              		.loc 1 1768 3 is_stmt 1 view .LVU2754
1768:src/keys.c    **** 		State2.numdigit = 0;
 8904              		.loc 1 1768 17 is_stmt 0 view .LVU2755
 8905 088a A8F80820 		strh	r2, [r8, #8]	@ movhi
ARM GAS  /tmp/cceyv6gL.s 			page 266


1769:src/keys.c    **** 	}
 8906              		.loc 1 1769 3 is_stmt 1 view .LVU2756
1769:src/keys.c    **** 	}
 8907              		.loc 1 1769 19 is_stmt 0 view .LVU2757
 8908 088e 88F80B20 		strb	r2, [r8, #11]
 8909              	.LBE1006:
 8910              	.LBE1005:
3285:src/keys.c    **** 
 8911              		.loc 1 3285 10 view .LVU2758
 8912 0892 3324     		movs	r4, #51
 8913 0894 0FE4     		b	.L801
 8914              	.LVL748:
 8915              	.L1091:
3285:src/keys.c    **** 
 8916              		.loc 1 3285 10 view .LVU2759
 8917              	.LBE1397:
 8918              	.LBE1466:
 8919              	.LBB1467:
3588:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8920              		.loc 1 3588 4 is_stmt 1 view .LVU2760
 8921              	.LBB1447:
 8922              	.LBI1447:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8923              		.loc 1 552 13 view .LVU2761
 8924              	.LBB1448:
 553:src/keys.c    **** 		return;
 8925              		.loc 1 553 2 view .LVU2762
 553:src/keys.c    **** 		return;
 8926              		.loc 1 553 6 is_stmt 0 view .LVU2763
 8927 0896 FFF7FEFF 		bl	is_bad_cmdline
 8928              	.LVL749:
 553:src/keys.c    **** 		return;
 8929              		.loc 1 553 5 view .LVU2764
 8930 089a 0546     		mov	r5, r0
 8931 089c 0028     		cmp	r0, #0
 8932 089e 40F0DB80 		bne	.L1307
 8933 08a2 2046     		mov	r0, r4
 8934 08a4 FFF7FEFF 		bl	init_arg.part.0
 8935              	.LVL750:
 8936              	.LBE1448:
 8937              	.LBE1447:
3589:src/keys.c    **** 	}
 8938              		.loc 1 3589 6 view .LVU2765
 8939 08a8 3324     		movs	r4, #51
 8940              	.LVL751:
3589:src/keys.c    **** 	}
 8941              		.loc 1 3589 6 view .LVU2766
 8942 08aa 3368     		ldr	r3, [r6]
 8943 08ac 03E4     		b	.L801
 8944              	.LVL752:
 8945              	.L1163:
3589:src/keys.c    **** 	}
 8946              		.loc 1 3589 6 view .LVU2767
 8947              	.LBE1467:
 8948              	.LBB1468:
 8949 08ae 1C46     		mov	r4, r3
 8950              	.LVL753:
ARM GAS  /tmp/cceyv6gL.s 			page 267


3589:src/keys.c    **** 	}
 8951              		.loc 1 3589 6 view .LVU2768
 8952 08b0 1FE4     		b	.L1110
 8953              	.LVL754:
 8954              	.L1327:
3589:src/keys.c    **** 	}
 8955              		.loc 1 3589 6 view .LVU2769
 8956              	.LBE1468:
 8957              	.LBB1469:
 8958              	.LBB1398:
3288:src/keys.c    **** 
 8959              		.loc 1 3288 3 is_stmt 1 view .LVU2770
 8960              	.LBB1025:
 8961              	.LBB1026:
1599:src/keys.c    **** 	State2.dot = 0;
 8962              		.loc 1 1599 15 is_stmt 0 view .LVU2771
 8963 08b2 22F06203 		bic	r3, r2, #98
 8964              	.LBE1026:
 8965              	.LBE1025:
3288:src/keys.c    **** 
 8966              		.loc 1 3288 10 view .LVU2772
 8967 08b6 E4B2     		uxtb	r4, r4
 8968              	.LVL755:
 8969              	.LBB1039:
 8970              	.LBI1025:
1589:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 8971              		.loc 1 1589 12 is_stmt 1 view .LVU2773
 8972              	.LBB1036:
1590:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 8973              		.loc 1 1590 2 view .LVU2774
1595:src/keys.c    **** 	int f = State2.dot;
 8974              		.loc 1 1595 2 view .LVU2775
1599:src/keys.c    **** 	State2.dot = 0;
 8975              		.loc 1 1599 15 is_stmt 0 view .LVU2776
 8976 08b8 88F81530 		strb	r3, [r8, #21]
1595:src/keys.c    **** 	int f = State2.dot;
 8977              		.loc 1 1595 20 view .LVU2777
 8978 08bc C2F34009 		ubfx	r9, r2, #1, #1
 8979              	.LVL756:
1596:src/keys.c    **** 
 8980              		.loc 1 1596 2 is_stmt 1 view .LVU2778
1596:src/keys.c    **** 
 8981              		.loc 1 1596 16 is_stmt 0 view .LVU2779
 8982 08c0 C2F3801B 		ubfx	fp, r2, #6, #1
 8983              	.LVL757:
1598:src/keys.c    **** 	State2.cmplx = 0;
 8984              		.loc 1 1598 2 is_stmt 1 view .LVU2780
1599:src/keys.c    **** 	State2.dot = 0;
 8985              		.loc 1 1599 2 view .LVU2781
1600:src/keys.c    **** #ifdef DM42
 8986              		.loc 1 1600 2 view .LVU2782
1602:src/keys.c    **** #endif
 8987              		.loc 1 1602 2 view .LVU2783
 8988              	.LBB1027:
 8989              	.LBI1027:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 8990              		.loc 1 114 13 view .LVU2784
ARM GAS  /tmp/cceyv6gL.s 			page 268


 8991              	.LBE1027:
 8992              	.LBE1036:
 8993              	.LBE1039:
 8994              	.LBE1398:
 8995              	.LBE1469:
 115:src/keys.c    **** }
 8996              		.loc 1 115 2 view .LVU2785
 8997              	.LBB1470:
 8998              	.LBB1399:
 8999              	.LBB1040:
 9000              	.LBB1037:
 9001              	.LBB1034:
 9002              	.LBB1028:
 9003              	.LBI1028:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9004              		.loc 1 104 20 view .LVU2786
 9005              	.LBB1029:
 105:src/keys.c    **** 	State2.shifts = shift;
 9006              		.loc 1 105 2 view .LVU2787
 9007              	.LBB1030:
 9008              	.LBI1030:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9009              		.loc 1 96 13 view .LVU2788
 9010              	.LBB1031:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9011              		.loc 1 97 2 view .LVU2789
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9012              		.loc 1 97 18 is_stmt 0 view .LVU2790
 9013 08c4 FFF7FEFF 		bl	shift_down
 9014              	.LVL758:
  98:src/keys.c    **** }
 9015              		.loc 1 98 2 is_stmt 1 view .LVU2791
 9016              	.LBE1031:
 9017              	.LBE1030:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9018              		.loc 1 106 2 view .LVU2792
 9019              	.LBE1029:
 9020              	.LBE1028:
 9021              	.LBE1034:
1604:src/keys.c    **** 
 9022              		.loc 1 1604 2 is_stmt 0 view .LVU2793
 9023 08c8 292C     		cmp	r4, #41
 9024              	.LBB1035:
 9025              	.LBB1033:
 9026              	.LBB1032:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9027              		.loc 1 106 16 view .LVU2794
 9028 08ca 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 9029              		.loc 1 108 2 is_stmt 1 view .LVU2795
 9030              	.LVL759:
 108:src/keys.c    **** }
 9031              		.loc 1 108 2 is_stmt 0 view .LVU2796
 9032              	.LBE1032:
 9033              	.LBE1033:
 9034              	.LBE1035:
1604:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 269


 9035              		.loc 1 1604 2 is_stmt 1 view .LVU2797
 9036 08ce 00F05284 		beq	.L856
 9037 08d2 15D8     		bhi	.L857
 9038 08d4 013C     		subs	r4, r4, #1
 9039              	.LVL760:
1604:src/keys.c    **** 
 9040              		.loc 1 1604 2 is_stmt 0 view .LVU2798
 9041 08d6 E3B2     		uxtb	r3, r4
 9042 08d8 022B     		cmp	r3, #2
 9043 08da 3FF603AF 		bhi	.L1309
1609:src/keys.c    **** 
 9044              		.loc 1 1609 3 is_stmt 1 view .LVU2799
1609:src/keys.c    **** 
 9045              		.loc 1 1609 54 is_stmt 0 view .LVU2800
 9046 08de 274B     		ldr	r3, .L1405+32
 9047 08e0 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 9048 08e4 03EB4404 		add	r4, r3, r4, lsl #1
 9049              	.LVL761:
1609:src/keys.c    **** 
 9050              		.loc 1 1609 27 view .LVU2801
 9051 08e8 B9F1000F 		cmp	r9, #0
1609:src/keys.c    **** 
 9052              		.loc 1 1609 54 view .LVU2802
 9053 08ec 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1609:src/keys.c    **** 
 9054              		.loc 1 1609 27 view .LVU2803
 9055 08f0 14BF     		ite	ne
 9056 08f2 4FF4A063 		movne	r3, #1280
 9057 08f6 4FF40073 		moveq	r3, #512
1609:src/keys.c    **** 
 9058              		.loc 1 1609 37 view .LVU2804
 9059 08fa 1C43     		orrs	r4, r4, r3
 9060 08fc 2046     		mov	r0, r4
 9061 08fe 91E5     		b	.L862
 9062              	.LVL762:
 9063              	.L857:
1604:src/keys.c    **** 
 9064              		.loc 1 1604 2 view .LVU2805
 9065 0900 2D2C     		cmp	r4, #45
 9066 0902 7FF4EFAE 		bne	.L1309
1612:src/keys.c    **** 		goto stay;
 9067              		.loc 1 1612 3 is_stmt 1 view .LVU2806
 9068 0906 89F00109 		eor	r9, r9, #1
 9069              	.LVL763:
1613:src/keys.c    **** 
 9070              		.loc 1 1613 3 view .LVU2807
 9071              	.L863:
1628:src/keys.c    **** 		State2.cmplx = cmplx;
 9072              		.loc 1 1628 4 view .LVU2808
1629:src/keys.c    **** 		State2.dot = f;
 9073              		.loc 1 1629 3 view .LVU2809
1630:src/keys.c    **** 		break;
 9074              		.loc 1 1630 3 view .LVU2810
1629:src/keys.c    **** 		State2.dot = f;
 9075              		.loc 1 1629 16 is_stmt 0 view .LVU2811
 9076 090a 4FEA4902 		lsl	r2, r9, #1
 9077 090e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/cceyv6gL.s 			page 270


 9078 0912 3368     		ldr	r3, [r6]
 9079 0914 42F02002 		orr	r2, r2, #32
 9080 0918 42EA8B12 		orr	r2, r2, fp, lsl #6
 9081 091c 02F06202 		and	r2, r2, #98
 9082 0920 21F06201 		bic	r1, r1, #98
 9083 0924 0A43     		orrs	r2, r2, r1
 9084 0926 88F81520 		strb	r2, [r8, #21]
1631:src/keys.c    **** 
 9085              		.loc 1 1631 3 is_stmt 1 view .LVU2812
1636:src/keys.c    **** }
 9086              		.loc 1 1636 9 is_stmt 0 view .LVU2813
 9087 092a 3324     		movs	r4, #51
 9088              	.LVL764:
1631:src/keys.c    **** 
 9089              		.loc 1 1631 3 view .LVU2814
 9090 092c FFF7C3BB 		b	.L801
 9091              	.LVL765:
 9092              	.L1323:
1631:src/keys.c    **** 
 9093              		.loc 1 1631 3 view .LVU2815
 9094              	.LBE1037:
 9095              	.LBE1040:
3265:src/keys.c    **** 		return STATE_IGNORE;
 9096              		.loc 1 3265 3 is_stmt 1 view .LVU2816
3265:src/keys.c    **** 		return STATE_IGNORE;
 9097              		.loc 1 3265 15 is_stmt 0 view .LVU2817
 9098 0930 1D60     		str	r5, [r3]
3266:src/keys.c    **** 	}
 9099              		.loc 1 3266 3 is_stmt 1 view .LVU2818
 9100              	.LVL766:
3266:src/keys.c    **** 	}
 9101              		.loc 1 3266 3 is_stmt 0 view .LVU2819
 9102              	.LBE1399:
 9103              	.LBE1470:
3662:src/keys.c    **** #ifndef CONSOLE
 9104              		.loc 1 3662 3 is_stmt 1 view .LVU2820
 9105              	.LBB1471:
 9106              	.LBB1400:
3266:src/keys.c    **** 	}
 9107              		.loc 1 3266 10 is_stmt 0 view .LVU2821
 9108 0932 3224     		movs	r4, #50
 9109 0934 FFF7C2BB 		b	.L821
 9110              	.LVL767:
 9111              	.L1353:
 9112              	.LBB1041:
 9113              	.LBB996:
2353:src/keys.c    **** 	State2.cmplx = 0;
 9114              		.loc 1 2353 2 is_stmt 1 view .LVU2822
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9115              		.loc 1 2354 15 is_stmt 0 view .LVU2823
 9116 0938 6BF34102 		bfi	r2, fp, #1, #1
2353:src/keys.c    **** 	State2.cmplx = 0;
 9117              		.loc 1 2353 14 view .LVU2824
 9118 093c 0720     		movs	r0, #7
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9119              		.loc 1 2355 5 view .LVU2825
 9120 093e BCF1640F 		cmp	ip, #100
ARM GAS  /tmp/cceyv6gL.s 			page 271


2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9121              		.loc 1 2354 15 view .LVU2826
 9122 0942 88F81520 		strb	r2, [r8, #21]
2353:src/keys.c    **** 	State2.cmplx = 0;
 9123              		.loc 1 2353 14 view .LVU2827
 9124 0946 88F80F00 		strb	r0, [r8, #15]
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9125              		.loc 1 2354 2 is_stmt 1 view .LVU2828
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9126              		.loc 1 2355 2 view .LVU2829
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9127              		.loc 1 2355 5 is_stmt 0 view .LVU2830
 9128 094a 00F05384 		beq	.L1166
2351:src/keys.c    **** 
 9129              		.loc 1 2351 44 view .LVU2831
 9130 094e 4FF02D0A 		mov	r10, #45
 9131 0952 3CE7     		b	.L1124
 9132              	.LVL768:
 9133              	.L1164:
2351:src/keys.c    **** 
 9134              		.loc 1 2351 44 view .LVU2832
 9135              	.LBE996:
 9136              	.LBE1041:
 9137              	.LBE1400:
 9138              	.LBE1471:
 9139              	.LBB1472:
 9140 0954 2C46     		mov	r4, r5
 9141              	.LVL769:
2351:src/keys.c    **** 
 9142              		.loc 1 2351 44 view .LVU2833
 9143 0956 FFF7CCBB 		b	.L1110
 9144              	.L1406:
 9145 095a 00BF     		.align	2
 9146              	.L1405:
 9147 095c 00000000 		.word	NonProgrammable
 9148 0960 00000000 		.word	OpCode
 9149 0964 00000000 		.word	OpCodeDisplayPending
 9150 0968 00000000 		.word	JustDisplayed
 9151 096c 00040800 		.word	525312
 9152 0970 00000000 		.word	.LANCHOR6
 9153 0974 00000000 		.word	.LANCHOR5
 9154 0978 00000000 		.word	main_ram
 9155 097c 00000000 		.word	.LANCHOR19
 9156 0980 00000000 		.word	StateWhileOn
 9157              	.LVL770:
 9158              	.L1329:
2351:src/keys.c    **** 
 9159              		.loc 1 2351 44 view .LVU2834
 9160              	.LBE1472:
 9161              	.LBB1473:
 9162              	.LBB1401:
3294:src/keys.c    **** 
 9163              		.loc 1 3294 3 is_stmt 1 view .LVU2835
 9164              	.LBB1042:
 9165              	.LBB1043:
2916:src/keys.c    **** 
 9166              		.loc 1 2916 12 is_stmt 0 view .LVU2836
ARM GAS  /tmp/cceyv6gL.s 			page 272


 9167 0984 D64B     		ldr	r3, .L1407
 9168 0986 1B68     		ldr	r3, [r3]
2916:src/keys.c    **** 
 9169              		.loc 1 2916 31 view .LVU2837
 9170 0988 B3F9DE37 		ldrsh	r3, [r3, #2014]
 9171              	.LBE1043:
 9172              	.LBE1042:
3294:src/keys.c    **** 
 9173              		.loc 1 3294 10 view .LVU2838
 9174 098c E4B2     		uxtb	r4, r4
 9175              	.LVL771:
 9176              	.LBB1062:
 9177              	.LBI1042:
2914:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9178              		.loc 1 2914 12 is_stmt 1 view .LVU2839
 9179              	.LBB1054:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9180              		.loc 1 2915 2 view .LVU2840
2916:src/keys.c    **** 
 9181              		.loc 1 2916 2 view .LVU2841
2916:src/keys.c    **** 
 9182              		.loc 1 2916 31 is_stmt 0 view .LVU2842
 9183 098e 002B     		cmp	r3, #0
 9184 0990 B4BF     		ite	lt
 9185 0992 0B23     		movlt	r3, #11
 9186 0994 0A23     		movge	r3, #10
 9187              	.LVL772:
2918:src/keys.c    **** 		if (--n < -2)
 9188              		.loc 1 2918 2 is_stmt 1 view .LVU2843
2918:src/keys.c    **** 		if (--n < -2)
 9189              		.loc 1 2918 5 is_stmt 0 view .LVU2844
 9190 0996 122C     		cmp	r4, #18
 9191 0998 00F08D81 		beq	.L1364
2922:src/keys.c    **** 		if (++n > max)
 9192              		.loc 1 2922 7 is_stmt 1 view .LVU2845
2922:src/keys.c    **** 		if (++n > max)
 9193              		.loc 1 2922 10 is_stmt 0 view .LVU2846
 9194 099c 182C     		cmp	r4, #24
 9195 099e 00F0C681 		beq	.L1365
2926:src/keys.c    **** 		State2.status = 0;
 9196              		.loc 1 2926 7 is_stmt 1 view .LVU2847
2926:src/keys.c    **** 		State2.status = 0;
 9197              		.loc 1 2926 10 is_stmt 0 view .LVU2848
 9198 09a2 102C     		cmp	r4, #16
 9199 09a4 00F03084 		beq	.L1366
 9200              	.LBB1044:
2931:src/keys.c    **** 		if (nn <= 9)
 9201              		.loc 1 2931 3 is_stmt 1 view .LVU2849
 9202              	.LVL773:
 9203              	.LBB1045:
 9204              	.LBI1045:
 210:src/keys.c    **** {
 9205              		.loc 1 210 14 view .LVU2850
 9206              	.LBB1046:
 212:src/keys.c    ****     // K00 - K05
 9207              		.loc 1 212 3 view .LVU2851
 234:src/keys.c    **** }
ARM GAS  /tmp/cceyv6gL.s 			page 273


 9208              		.loc 1 234 3 view .LVU2852
 9209              	.LBB1047:
 9210              	.LBI1047:
 131:src/keys.c    **** {
 9211              		.loc 1 131 12 view .LVU2853
 9212              	.LBB1048:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9213              		.loc 1 133 2 view .LVU2854
 143:src/keys.c    **** }
 9214              		.loc 1 143 2 view .LVU2855
 143:src/keys.c    **** }
 9215              		.loc 1 143 23 is_stmt 0 view .LVU2856
 9216 09a8 CE4A     		ldr	r2, .L1407+4
 9217              	.LBE1048:
 9218              	.LBE1047:
 234:src/keys.c    **** }
 9219              		.loc 1 234 28 view .LVU2857
 9220 09aa CF48     		ldr	r0, .L1407+8
 9221              	.LBB1050:
 9222              	.LBB1049:
 143:src/keys.c    **** }
 9223              		.loc 1 143 23 view .LVU2858
 9224 09ac 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9225 09ae 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 9226 09b0 02F07F02 		and	r2, r2, #127
 9227              	.LVL774:
 143:src/keys.c    **** }
 9228              		.loc 1 143 23 view .LVU2859
 9229              	.LBE1049:
 9230              	.LBE1050:
 9231              	.LBE1046:
 9232              	.LBE1045:
2932:src/keys.c    **** 			n = nn;
 9233              		.loc 1 2932 3 is_stmt 1 view .LVU2860
2932:src/keys.c    **** 			n = nn;
 9234              		.loc 1 2932 6 is_stmt 0 view .LVU2861
 9235 09b4 092A     		cmp	r2, #9
 9236 09b6 40F2D481 		bls	.L1132
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9237              		.loc 1 2934 11 view .LVU2862
 9238 09ba 702A     		cmp	r2, #112
 9239              	.LBE1044:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9240              		.loc 1 2915 6 view .LVU2863
 9241 09bc A1F10301 		sub	r1, r1, #3
 9242              	.LVL775:
 9243              	.LBB1051:
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9244              		.loc 1 2934 8 is_stmt 1 view .LVU2864
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9245              		.loc 1 2934 11 is_stmt 0 view .LVU2865
 9246 09c0 00F07985 		beq	.L1367
2936:src/keys.c    **** 			n = 10; 
 9247              		.loc 1 2936 8 is_stmt 1 view .LVU2866
 9248              	.LBE1051:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9249              		.loc 1 2915 6 is_stmt 0 view .LVU2867
ARM GAS  /tmp/cceyv6gL.s 			page 274


 9250 09c4 7F2A     		cmp	r2, #127
 9251 09c6 0CBF     		ite	eq
 9252 09c8 0B46     		moveq	r3, r1
 9253              	.LVL776:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9254              		.loc 1 2915 6 view .LVU2868
 9255 09ca 0A23     		movne	r3, #10
 9256              	.LVL777:
 9257              	.L884:
2939:src/keys.c    **** 
 9258              		.loc 1 2939 2 is_stmt 1 view .LVU2869
2939:src/keys.c    **** 
 9259              		.loc 1 2939 20 is_stmt 0 view .LVU2870
 9260 09cc 0333     		adds	r3, r3, #3
 9261              	.LVL778:
2939:src/keys.c    **** 
 9262              		.loc 1 2939 16 view .LVU2871
 9263 09ce 88F80C30 		strb	r3, [r8, #12]
2941:src/keys.c    **** }
 9264              		.loc 1 2941 2 is_stmt 1 view .LVU2872
 9265              	.LBE1054:
 9266              	.LBE1062:
3294:src/keys.c    **** 
 9267              		.loc 1 3294 10 is_stmt 0 view .LVU2873
 9268 09d2 3324     		movs	r4, #51
 9269              	.LVL779:
3294:src/keys.c    **** 
 9270              		.loc 1 3294 10 view .LVU2874
 9271 09d4 3368     		ldr	r3, [r6]
 9272              	.LVL780:
 9273              	.LBB1063:
 9274              	.LBB1055:
2941:src/keys.c    **** }
 9275              		.loc 1 2941 9 view .LVU2875
 9276 09d6 FFF76EBB 		b	.L801
 9277              	.LVL781:
 9278              	.L1333:
2941:src/keys.c    **** }
 9279              		.loc 1 2941 9 view .LVU2876
 9280              	.LBE1055:
 9281              	.LBE1063:
3317:src/keys.c    **** 
 9282              		.loc 1 3317 3 is_stmt 1 view .LVU2877
 9283              	.LBB1064:
 9284              	.LBB1065:
 9285              	.LBB1066:
 9286              	.LBB1067:
 9287              	.LBB1068:
 9288              	.LBB1069:
 9289              	.LBB1070:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9290              		.loc 1 97 18 is_stmt 0 view .LVU2878
 9291 09da FFF7FEFF 		bl	shift_down
 9292              	.LVL782:
 9293              	.LBE1070:
 9294              	.LBE1069:
 9295              	.LBE1068:
ARM GAS  /tmp/cceyv6gL.s 			page 275


 9296              	.LBE1067:
 9297              	.LBE1066:
 9298              	.LBE1065:
 9299              	.LBE1064:
3317:src/keys.c    **** 
 9300              		.loc 1 3317 10 view .LVU2879
 9301 09de E4B2     		uxtb	r4, r4
 9302              	.LVL783:
 9303              	.LBB1091:
 9304              	.LBI1064:
1643:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 9305              		.loc 1 1643 12 is_stmt 1 view .LVU2880
 9306              	.LBB1087:
1644:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9307              		.loc 1 1644 2 view .LVU2881
1649:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9308              		.loc 1 1649 2 view .LVU2882
1653:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9309              		.loc 1 1653 2 view .LVU2883
 9310              	.LBB1079:
 9311              	.LBI1066:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9312              		.loc 1 114 13 view .LVU2884
 9313              	.LBE1079:
 9314              	.LBE1087:
 9315              	.LBE1091:
 9316              	.LBE1401:
 9317              	.LBE1473:
 115:src/keys.c    **** }
 9318              		.loc 1 115 2 view .LVU2885
 9319              	.LBB1474:
 9320              	.LBB1402:
 9321              	.LBB1092:
 9322              	.LBB1088:
 9323              	.LBB1080:
 9324              	.LBB1076:
 9325              	.LBI1067:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9326              		.loc 1 104 20 view .LVU2886
 9327              	.LBB1073:
 105:src/keys.c    **** 	State2.shifts = shift;
 9328              		.loc 1 105 2 view .LVU2887
 9329              	.LBB1072:
 9330              	.LBI1069:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9331              		.loc 1 96 13 view .LVU2888
 9332              	.LBB1071:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9333              		.loc 1 97 2 view .LVU2889
  98:src/keys.c    **** }
 9334              		.loc 1 98 2 view .LVU2890
  98:src/keys.c    **** }
 9335              		.loc 1 98 52 is_stmt 0 view .LVU2891
 9336 09e0 8346     		mov	fp, r0
 9337              	.LVL784:
  98:src/keys.c    **** }
 9338              		.loc 1 98 52 view .LVU2892
ARM GAS  /tmp/cceyv6gL.s 			page 276


 9339 09e2 08B9     		cbnz	r0, .L894
 9340 09e4 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9341              	.L894:
 9342              	.LVL785:
  98:src/keys.c    **** }
 9343              		.loc 1 98 52 view .LVU2893
 9344              	.LBE1071:
 9345              	.LBE1072:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9346              		.loc 1 106 2 is_stmt 1 view .LVU2894
 9347              	.LBE1073:
 9348              	.LBE1076:
 9349              	.LBE1080:
1656:src/keys.c    **** #ifdef DM42
 9350              		.loc 1 1656 15 is_stmt 0 view .LVU2895
 9351 09e8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9352              	.LBB1081:
 9353              	.LBB1077:
 9354              	.LBB1074:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9355              		.loc 1 106 16 view .LVU2896
 9356 09ec 0023     		movs	r3, #0
 9357              	.LBE1074:
 9358              	.LBE1077:
 9359              	.LBE1081:
1656:src/keys.c    **** #ifdef DM42
 9360              		.loc 1 1656 15 view .LVU2897
 9361 09ee 63F38202 		bfi	r2, r3, #2, #1
1654:src/keys.c    **** 
 9362              		.loc 1 1654 23 view .LVU2898
 9363 09f2 ABF1010A 		sub	r10, fp, #1
1656:src/keys.c    **** #ifdef DM42
 9364              		.loc 1 1656 15 view .LVU2899
 9365 09f6 88F81520 		strb	r2, [r8, #21]
 9366              	.LBB1082:
 9367              	.LBB1078:
 9368              	.LBB1075:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9369              		.loc 1 106 16 view .LVU2900
 9370 09fa 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9371              		.loc 1 108 2 is_stmt 1 view .LVU2901
 9372              	.LVL786:
 108:src/keys.c    **** }
 9373              		.loc 1 108 2 is_stmt 0 view .LVU2902
 9374              	.LBE1075:
 9375              	.LBE1078:
 9376              	.LBE1082:
1654:src/keys.c    **** 
 9377              		.loc 1 1654 2 is_stmt 1 view .LVU2903
1654:src/keys.c    **** 
 9378              		.loc 1 1654 23 is_stmt 0 view .LVU2904
 9379 09fe BAFA8AFA 		clz	r10, r10
1658:src/keys.c    **** 	display_current_menu ();
 9380              		.loc 1 1658 2 view .LVU2905
 9381 0a02 FFF7FEFF 		bl	set_last_menu
 9382              	.LVL787:
ARM GAS  /tmp/cceyv6gL.s 			page 277


1659:src/keys.c    **** #endif
 9383              		.loc 1 1659 2 view .LVU2906
 9384 0a06 FFF7FEFF 		bl	display_current_menu
 9385              	.LVL788:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9386              		.loc 1 1662 5 view .LVU2907
 9387 0a0a 2D2C     		cmp	r4, #45
1654:src/keys.c    **** 
 9388              		.loc 1 1654 23 view .LVU2908
 9389 0a0c 4FEA5A1A 		lsr	r10, r10, #5
 9390              	.LVL789:
1656:src/keys.c    **** #ifdef DM42
 9391              		.loc 1 1656 2 is_stmt 1 view .LVU2909
1658:src/keys.c    **** 	display_current_menu ();
 9392              		.loc 1 1658 2 view .LVU2910
1659:src/keys.c    **** #endif
 9393              		.loc 1 1659 2 view .LVU2911
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9394              		.loc 1 1662 2 view .LVU2912
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9395              		.loc 1 1662 5 is_stmt 0 view .LVU2913
 9396 0a10 00F05681 		beq	.L1368
1671:src/keys.c    **** 	
 9397              		.loc 1 1671 2 is_stmt 1 view .LVU2914
1671:src/keys.c    **** 	
 9398              		.loc 1 1671 5 is_stmt 0 view .LVU2915
 9399 0a14 BBF1000F 		cmp	fp, #0
 9400 0a18 3FF464AE 		beq	.L1309
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9401              		.loc 1 1673 2 is_stmt 1 view .LVU2916
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9402              		.loc 1 1673 15 is_stmt 0 view .LVU2917
 9403 0a1c A31F     		subs	r3, r4, #6
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9404              		.loc 1 1673 5 view .LVU2918
 9405 0a1e DAB2     		uxtb	r2, r3
 9406 0a20 022A     		cmp	r2, #2
 9407 0a22 40F29281 		bls	.L1369
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9408              		.loc 1 1676 2 is_stmt 1 view .LVU2919
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9409              		.loc 1 1676 15 is_stmt 0 view .LVU2920
 9410 0a26 0E3C     		subs	r4, r4, #14
 9411              	.LVL790:
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9412              		.loc 1 1676 5 view .LVU2921
 9413 0a28 E3B2     		uxtb	r3, r4
 9414 0a2a 012B     		cmp	r3, #1
 9415 0a2c 3FF65AAE 		bhi	.L1309
1677:src/keys.c    **** 
 9416              		.loc 1 1677 3 is_stmt 1 view .LVU2922
 9417 0a30 AE4A     		ldr	r2, .L1407+12
 9418              	.LBB1083:
 9419              	.LBB1084:
 742:src/keys.c    **** }
 9420              		.loc 1 742 15 is_stmt 0 view .LVU2923
 9421 0a32 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
ARM GAS  /tmp/cceyv6gL.s 			page 278


 9422 0a36 3368     		ldr	r3, [r6]
 9423              	.LBE1084:
 9424              	.LBE1083:
1677:src/keys.c    **** 
 9425              		.loc 1 1677 3 view .LVU2924
 9426 0a38 02EB4402 		add	r2, r2, r4, lsl #1
1679:src/keys.c    **** }
 9427              		.loc 1 1679 9 view .LVU2925
 9428 0a3c 3324     		movs	r4, #51
 9429              	.LVL791:
1677:src/keys.c    **** 
 9430              		.loc 1 1677 3 view .LVU2926
 9431 0a3e 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9432              	.LVL792:
 9433              	.LBB1086:
 9434              	.LBI1083:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9435              		.loc 1 741 13 is_stmt 1 view .LVU2927
 9436              	.LBB1085:
 742:src/keys.c    **** }
 9437              		.loc 1 742 2 view .LVU2928
 742:src/keys.c    **** }
 9438              		.loc 1 742 15 is_stmt 0 view .LVU2929
 9439 0a42 9142     		cmp	r1, r2
 9440 0a44 08BF     		it	eq
 9441 0a46 0022     		moveq	r2, #0
 9442              	.LVL793:
 742:src/keys.c    **** }
 9443              		.loc 1 742 15 view .LVU2930
 9444 0a48 88F81120 		strb	r2, [r8, #17]
 743:src/keys.c    **** 
 9445              		.loc 1 743 1 view .LVU2931
 9446 0a4c FFF733BB 		b	.L801
 9447              	.L896:
 743:src/keys.c    **** 
 9448              		.loc 1 743 1 view .LVU2932
 9449              	.LBE1085:
 9450              	.LBE1086:
1671:src/keys.c    **** 	
 9451              		.loc 1 1671 2 is_stmt 1 view .LVU2933
1671:src/keys.c    **** 	
 9452              		.loc 1 1671 5 is_stmt 0 view .LVU2934
 9453 0a50 BBF1000F 		cmp	fp, #0
 9454 0a54 7FF446AE 		bne	.L1309
 9455              	.LVL794:
 9456              	.L1307:
1671:src/keys.c    **** 	
 9457              		.loc 1 1671 5 view .LVU2935
 9458 0a58 3368     		ldr	r3, [r6]
 9459              	.LBE1088:
 9460              	.LBE1092:
 9461              	.LBE1402:
 9462              	.LBE1474:
3409:src/keys.c    ****   //print_debug(60,c);
 9463              		.loc 1 3409 7 view .LVU2936
 9464 0a5a 0025     		movs	r5, #0
 9465              	.LBB1475:
ARM GAS  /tmp/cceyv6gL.s 			page 279


3589:src/keys.c    **** 	}
 9466              		.loc 1 3589 6 view .LVU2937
 9467 0a5c 3324     		movs	r4, #51
 9468 0a5e FFF72ABB 		b	.L801
 9469              	.LVL795:
 9470              	.L873:
3589:src/keys.c    **** 	}
 9471              		.loc 1 3589 6 view .LVU2938
 9472              	.LBE1475:
 9473              	.LBB1476:
 9474              	.LBB1403:
 9475              	.LBB1093:
 9476              	.LBB997:
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9477              		.loc 1 2375 7 is_stmt 1 view .LVU2939
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9478              		.loc 1 2375 10 is_stmt 0 view .LVU2940
 9479 0a62 BCF1090F 		cmp	ip, #9
 9480 0a66 40F29080 		bls	.L875
 9481              	.L867:
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9482              		.loc 1 2375 19 view .LVU2941
 9483 0a6a 2C2C     		cmp	r4, #44
 9484 0a6c 00F08D80 		beq	.L875
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9485              		.loc 1 2375 35 view .LVU2942
 9486 0a70 262C     		cmp	r4, #38
 9487 0a72 00F08A80 		beq	.L875
2381:src/keys.c    **** 	case K11:					// tests vs register
 9488              		.loc 1 2381 2 is_stmt 1 view .LVU2943
 9489 0a76 0C2C     		cmp	r4, #12
 9490 0a78 00F05782 		beq	.L878
 9491 0a7c 102C     		cmp	r4, #16
 9492 0a7e 3FF431AE 		beq	.L1309
 9493 0a82 072C     		cmp	r4, #7
 9494 0a84 00F05182 		beq	.L878
 9495              	.L870:
2395:src/keys.c    **** 	State2.cmplx = cmpx;
 9496              		.loc 1 2395 2 view .LVU2944
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9497              		.loc 1 2396 15 is_stmt 0 view .LVU2945
 9498 0a88 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2395:src/keys.c    **** 	State2.cmplx = cmpx;
 9499              		.loc 1 2395 14 view .LVU2946
 9500 0a8c 88F80F30 		strb	r3, [r8, #15]
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9501              		.loc 1 2396 2 is_stmt 1 view .LVU2947
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9502              		.loc 1 2396 15 is_stmt 0 view .LVU2948
 9503 0a90 6BF34102 		bfi	r2, fp, #1, #1
 9504 0a94 3368     		ldr	r3, [r6]
 9505              	.LVL796:
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9506              		.loc 1 2396 15 view .LVU2949
 9507 0a96 88F81520 		strb	r2, [r8, #21]
2397:src/keys.c    **** }
 9508              		.loc 1 2397 2 is_stmt 1 view .LVU2950
ARM GAS  /tmp/cceyv6gL.s 			page 280


2397:src/keys.c    **** }
 9509              		.loc 1 2397 9 is_stmt 0 view .LVU2951
 9510 0a9a 3324     		movs	r4, #51
 9511              	.LVL797:
2397:src/keys.c    **** }
 9512              		.loc 1 2397 9 view .LVU2952
 9513 0a9c FFF70BBB 		b	.L801
 9514              	.LVL798:
 9515              	.L1354:
2397:src/keys.c    **** }
 9516              		.loc 1 2397 9 view .LVU2953
 9517              	.LBE997:
 9518              	.LBE1093:
 9519              	.LBB1094:
 9520              	.LBB1015:
1715:src/keys.c    **** 	}
 9521              		.loc 1 1715 3 is_stmt 1 view .LVU2954
1715:src/keys.c    **** 	}
 9522              		.loc 1 1715 8 is_stmt 0 view .LVU2955
 9523 0aa0 FFF7FEFF 		bl	gtodot_digit
 9524              	.LVL799:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9525              		.loc 1 1764 2 is_stmt 1 view .LVU2956
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9526              		.loc 1 1764 5 is_stmt 0 view .LVU2957
 9527 0aa4 0028     		cmp	r0, #0
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9528              		.loc 1 1764 5 view .LVU2958
 9529 0aa6 FFF61DAE 		blt	.L1309
 9530              	.L838:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9531              		.loc 1 1765 3 is_stmt 1 view .LVU2959
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9532              		.loc 1 1765 11 is_stmt 0 view .LVU2960
 9533 0aaa FFF7FEFF 		bl	find_user_pc
 9534              	.LVL800:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9535              		.loc 1 1765 11 view .LVU2961
 9536 0aae E2E6     		b	.L847
 9537              	.LVL801:
 9538              	.L868:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9539              		.loc 1 1765 11 view .LVU2962
 9540              	.LBE1015:
 9541              	.LBE1094:
 9542              	.LBB1095:
 9543              	.LBB998:
2367:src/keys.c    **** 		// Special 0
 9544              		.loc 1 2367 7 is_stmt 1 view .LVU2963
2367:src/keys.c    **** 		// Special 0
 9545              		.loc 1 2367 10 is_stmt 0 view .LVU2964
 9546 0ab0 BCF1000F 		cmp	ip, #0
 9547 0ab4 40F07086 		bne	.L871
2369:src/keys.c    **** 	}
 9548              		.loc 1 2369 3 is_stmt 1 view .LVU2965
2369:src/keys.c    **** 	}
 9549              		.loc 1 2369 18 is_stmt 0 view .LVU2966
ARM GAS  /tmp/cceyv6gL.s 			page 281


 9550 0ab8 BBF1000F 		cmp	fp, #0
 9551 0abc 14BF     		ite	ne
 9552 0abe 2524     		movne	r4, #37
 9553              	.LVL802:
2369:src/keys.c    **** 	}
 9554              		.loc 1 2369 18 view .LVU2967
 9555 0ac0 1724     		moveq	r4, #23
2369:src/keys.c    **** 	}
 9556              		.loc 1 2369 47 view .LVU2968
 9557 0ac2 1C44     		add	r4, r4, r3
 9558 0ac4 8CE4     		b	.L835
 9559              	.LVL803:
 9560              	.L1349:
2369:src/keys.c    **** 	}
 9561              		.loc 1 2369 47 view .LVU2969
 9562              	.LBE998:
 9563              	.LBE1095:
 9564              	.LBB1096:
 9565              	.LBB837:
 278:src/keys.c    **** 				case K53:
 9566              		.loc 1 278 4 is_stmt 1 view .LVU2970
 9567 0ac6 231F     		subs	r3, r4, #4
 9568 0ac8 1D2B     		cmp	r3, #29
 9569 0aca 3FF6D8AB 		bhi	.L921
 9570 0ace 01A0     		adr	r0, .L905
 9571 0ad0 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 9572              		.p2align 2
 9573              	.L905:
 9574 0ad4 510B0000 		.word	.L908+1
 9575 0ad8 610B0000 		.word	.L907+1
 9576 0adc 7F020000 		.word	.L921+1
 9577 0ae0 7F020000 		.word	.L921+1
 9578 0ae4 7F020000 		.word	.L921+1
 9579 0ae8 7F020000 		.word	.L921+1
 9580 0aec 7F020000 		.word	.L921+1
 9581 0af0 7F020000 		.word	.L921+1
 9582 0af4 550B0000 		.word	.L906+1
 9583 0af8 7F020000 		.word	.L921+1
 9584 0afc 7F020000 		.word	.L921+1
 9585 0b00 7F020000 		.word	.L921+1
 9586 0b04 7F020000 		.word	.L921+1
 9587 0b08 7F020000 		.word	.L921+1
 9588 0b0c 7F020000 		.word	.L921+1
 9589 0b10 7F020000 		.word	.L921+1
 9590 0b14 7F020000 		.word	.L921+1
 9591 0b18 7F020000 		.word	.L921+1
 9592 0b1c 7F020000 		.word	.L921+1
 9593 0b20 7F020000 		.word	.L921+1
 9594 0b24 7F020000 		.word	.L921+1
 9595 0b28 7F020000 		.word	.L921+1
 9596 0b2c 7F020000 		.word	.L921+1
 9597 0b30 7F020000 		.word	.L921+1
 9598 0b34 7F020000 		.word	.L921+1
 9599 0b38 7F020000 		.word	.L921+1
 9600 0b3c 7F020000 		.word	.L921+1
 9601 0b40 7F020000 		.word	.L921+1
 9602 0b44 7F020000 		.word	.L921+1
ARM GAS  /tmp/cceyv6gL.s 			page 282


 9603 0b48 4D0B0000 		.word	.L1136+1
 9604              		.p2align 1
 9605              	.L1136:
 280:src/keys.c    **** 				case K04:
 9606              		.loc 1 280 13 is_stmt 0 view .LVU2971
 9607 0b4c 0223     		movs	r3, #2
 9608 0b4e BBE5     		b	.L904
 9609              	.L908:
 277:src/keys.c    **** 			switch (c) {
 9610              		.loc 1 277 6 view .LVU2972
 9611 0b50 1223     		movs	r3, #18
 9612 0b52 B9E5     		b	.L904
 9613              	.L906:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9614              		.loc 1 286 6 is_stmt 1 view .LVU2973
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9615              		.loc 1 286 9 is_stmt 0 view .LVU2974
 9616 0b54 11F0060F 		tst	r1, #6
 9617 0b58 40F0CB85 		bne	.L1370
 289:src/keys.c    **** 				default:
 9618              		.loc 1 289 13 view .LVU2975
 9619 0b5c 1123     		movs	r3, #17
 9620 0b5e B3E5     		b	.L904
 9621              	.L907:
 284:src/keys.c    **** 				case K20:
 9622              		.loc 1 284 6 is_stmt 1 view .LVU2976
 9623              	.LVL804:
 284:src/keys.c    **** 				case K20:
 9624              		.loc 1 284 6 is_stmt 0 view .LVU2977
 9625              	.LBE837:
 9626              	.LBE1096:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 9627              		.loc 1 3325 2 is_stmt 1 view .LVU2978
 9628              	.LBB1097:
 9629              	.LBB838:
 284:src/keys.c    **** 				case K20:
 9630              		.loc 1 284 13 is_stmt 0 view .LVU2979
 9631 0b60 0923     		movs	r3, #9
 9632 0b62 B1E5     		b	.L904
 9633              	.LVL805:
 9634              	.L1377:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9635              		.loc 1 312 74 view .LVU2980
 9636 0b64 D8F81410 		ldr	r1, [r8, #20]
 9637 0b68 DFF894C1 		ldr	ip, .L1407+32
 9638 0b6c 11EA0C0F 		tst	r1, ip
 9639 0b70 3FF4AAAD 		beq	.L904
 315:src/keys.c    ****     /*
 9640              		.loc 1 315 3 is_stmt 1 view .LVU2981
 315:src/keys.c    ****     /*
 9641              		.loc 1 315 23 is_stmt 0 view .LVU2982
 9642 0b74 5E4B     		ldr	r3, .L1407+16
 315:src/keys.c    ****     /*
 9643              		.loc 1 315 6 view .LVU2983
 9644 0b76 1942     		tst	r1, r3
 9645 0b78 3FF468AB 		beq	.L1120
 9646              	.L914:
ARM GAS  /tmp/cceyv6gL.s 			page 283


 9647              	.LBB830:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 9648              		.loc 1 384 5 is_stmt 1 view .LVU2984
 408:src/keys.c    **** 
 9649              		.loc 1 408 5 view .LVU2985
 413:src/keys.c    ****     col = smap[shift];
 9650              		.loc 1 413 5 view .LVU2986
 9651              	.LVL806:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9652              		.loc 1 414 5 view .LVU2987
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9653              		.loc 1 414 15 is_stmt 0 view .LVU2988
 9654 0b7c 5D49     		ldr	r1, .L1407+20
 413:src/keys.c    ****     col = smap[shift];
 9655              		.loc 1 413 8 view .LVU2989
 9656 0b7e 5E4B     		ldr	r3, .L1407+24
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9657              		.loc 1 414 9 view .LVU2990
 9658 0b80 11F80BC0 		ldrb	ip, [r1, fp]	@ zero_extendqisi2
 9659              	.LVL807:
 415:src/keys.c    ****   }
 9660              		.loc 1 415 5 is_stmt 1 view .LVU2991
 415:src/keys.c    ****   }
 9661              		.loc 1 415 9 is_stmt 0 view .LVU2992
 9662 0b84 0821     		movs	r1, #8
 9663 0b86 FFF76EBB 		b	.L916
 9664              	.LVL808:
 9665              	.L875:
 415:src/keys.c    ****   }
 9666              		.loc 1 415 9 view .LVU2993
 9667              	.LBE830:
 9668              	.LBE838:
 9669              	.LBE1097:
 9670              	.LBB1098:
 9671              	.LBB999:
2377:src/keys.c    **** 		return process_arg(c);
 9672              		.loc 1 2377 3 is_stmt 1 view .LVU2994
 9673              	.LBB992:
 9674              	.LBI992:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 9675              		.loc 1 552 13 view .LVU2995
 9676              	.LBB993:
 553:src/keys.c    **** 		return;
 9677              		.loc 1 553 2 view .LVU2996
 553:src/keys.c    **** 		return;
 9678              		.loc 1 553 6 is_stmt 0 view .LVU2997
 9679 0b8a FFF7FEFF 		bl	is_bad_cmdline
 9680              	.LVL809:
 553:src/keys.c    **** 		return;
 9681              		.loc 1 553 5 view .LVU2998
 9682 0b8e 18B9     		cbnz	r0, .L877
 9683 0b90 5FFA8AF0 		uxtb	r0, r10
 9684 0b94 FFF7FEFF 		bl	init_arg.part.0
 9685              	.LVL810:
 9686              	.L877:
 553:src/keys.c    **** 		return;
 9687              		.loc 1 553 5 view .LVU2999
ARM GAS  /tmp/cceyv6gL.s 			page 284


 9688              	.LBE993:
 9689              	.LBE992:
2378:src/keys.c    **** 	}
 9690              		.loc 1 2378 3 is_stmt 1 view .LVU3000
2378:src/keys.c    **** 	}
 9691              		.loc 1 2378 10 is_stmt 0 view .LVU3001
 9692 0b98 2046     		mov	r0, r4
 9693 0b9a FFF7FEFF 		bl	process_arg
 9694              	.LVL811:
 9695 0b9e 0446     		mov	r4, r0
 9696              	.LVL812:
2378:src/keys.c    **** 	}
 9697              		.loc 1 2378 10 view .LVU3002
 9698 0ba0 1EE4     		b	.L835
 9699              	.LVL813:
 9700              	.L1330:
2378:src/keys.c    **** 	}
 9701              		.loc 1 2378 10 view .LVU3003
 9702              	.LBE999:
 9703              	.LBE1098:
3300:src/keys.c    **** 		return STATE_UNFINISHED;
 9704              		.loc 1 3300 3 is_stmt 1 view .LVU3004
 9705              	.LBB1099:
 9706              	.LBI1099:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9707              		.loc 1 121 13 view .LVU3005
 9708              	.LBB1100:
 122:src/keys.c    **** }
 9709              		.loc 1 122 2 view .LVU3006
 122:src/keys.c    **** }
 9710              		.loc 1 122 16 is_stmt 0 view .LVU3007
 9711 0ba2 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9712 0ba6 3368     		ldr	r3, [r6]
 9713 0ba8 013A     		subs	r2, r2, #1
 9714 0baa 18BF     		it	ne
 9715 0bac 0122     		movne	r2, #1
 9716 0bae 88F81020 		strb	r2, [r8, #16]
 9717              	.LVL814:
 122:src/keys.c    **** }
 9718              		.loc 1 122 16 view .LVU3008
 9719              	.LBE1100:
 9720              	.LBE1099:
3301:src/keys.c    **** 	}
 9721              		.loc 1 3301 3 is_stmt 1 view .LVU3009
3301:src/keys.c    **** 	}
 9722              		.loc 1 3301 10 is_stmt 0 view .LVU3010
 9723 0bb2 3324     		movs	r4, #51
 9724              	.LVL815:
3301:src/keys.c    **** 	}
 9725              		.loc 1 3301 10 view .LVU3011
 9726 0bb4 FFF77FBA 		b	.L801
 9727              	.LVL816:
 9728              	.L1331:
3304:src/keys.c    **** 		return STATE_UNFINISHED;
 9729              		.loc 1 3304 3 is_stmt 1 view .LVU3012
 9730              	.LBB1101:
 9731              	.LBI1101:
ARM GAS  /tmp/cceyv6gL.s 			page 285


 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9732              		.loc 1 121 13 view .LVU3013
 9733              	.LBB1102:
 122:src/keys.c    **** }
 9734              		.loc 1 122 2 view .LVU3014
 122:src/keys.c    **** }
 9735              		.loc 1 122 16 is_stmt 0 view .LVU3015
 9736 0bb8 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9737 0bbc 3368     		ldr	r3, [r6]
 9738 0bbe 022A     		cmp	r2, #2
 9739 0bc0 18BF     		it	ne
 9740 0bc2 0221     		movne	r1, #2
 9741 0bc4 88F81010 		strb	r1, [r8, #16]
 9742              	.LVL817:
 122:src/keys.c    **** }
 9743              		.loc 1 122 16 view .LVU3016
 9744              	.LBE1102:
 9745              	.LBE1101:
3305:src/keys.c    **** 	}
 9746              		.loc 1 3305 3 is_stmt 1 view .LVU3017
3305:src/keys.c    **** 	}
 9747              		.loc 1 3305 10 is_stmt 0 view .LVU3018
 9748 0bc8 3324     		movs	r4, #51
 9749              	.LVL818:
3305:src/keys.c    **** 	}
 9750              		.loc 1 3305 10 view .LVU3019
 9751 0bca FFF774BA 		b	.L801
 9752              	.LVL819:
 9753              	.L1337:
 9754              	.LBB1103:
 9755              	.LBB839:
 423:src/keys.c    ****       break;
 9756              		.loc 1 423 7 is_stmt 1 view .LVU3020
 423:src/keys.c    ****       break;
 9757              		.loc 1 423 11 is_stmt 0 view .LVU3021
 9758 0bce 6344     		add	r3, r3, ip
 9759              	.LVL820:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9760              		.loc 1 427 6 view .LVU3022
 9761 0bd0 1107     		lsls	r1, r2, #28
 423:src/keys.c    ****       break;
 9762              		.loc 1 423 11 view .LVU3023
 9763 0bd2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9764              	.LVL821:
 424:src/keys.c    ****     }
 9765              		.loc 1 424 7 is_stmt 1 view .LVU3024
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9766              		.loc 1 427 3 view .LVU3025
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9767              		.loc 1 427 6 is_stmt 0 view .LVU3026
 9768 0bd4 40F1C080 		bpl	.L1371
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9769              		.loc 1 427 20 view .LVU3027
 9770 0bd8 A3F10B02 		sub	r2, r3, #11
 9771 0bdc 042A     		cmp	r2, #4
 9772 0bde 7FF673AD 		bls	.L904
 9773              	.LVL822:
ARM GAS  /tmp/cceyv6gL.s 			page 286


 9774              	.L927:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9775              		.loc 1 427 20 view .LVU3028
 9776              	.LBE839:
 9777              	.LBE1103:
3337:src/keys.c    **** 
 9778              		.loc 1 3337 3 is_stmt 1 view .LVU3029
 9779              	.LBB1104:
 9780              	.LBI1104:
2810:src/keys.c    **** 	enum shifts shift = reset_shift();
 9781              		.loc 1 2810 12 view .LVU3030
 9782              	.LBB1105:
2811:src/keys.c    **** 	unsigned int ch = 0;
 9783              		.loc 1 2811 2 view .LVU3031
 9784              	.LBB1106:
 9785              	.LBI1106:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9786              		.loc 1 114 13 view .LVU3032
 9787              	.LBE1106:
 9788              	.LBE1105:
 9789              	.LBE1104:
 9790              	.LBE1403:
 9791              	.LBE1476:
 115:src/keys.c    **** }
 9792              		.loc 1 115 2 view .LVU3033
 9793              	.LBB1477:
 9794              	.LBB1404:
 9795              	.LBB1142:
 9796              	.LBB1134:
 9797              	.LBB1113:
 9798              	.LBB1107:
 9799              	.LBI1107:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9800              		.loc 1 104 20 view .LVU3034
 9801              	.LBB1108:
 105:src/keys.c    **** 	State2.shifts = shift;
 9802              		.loc 1 105 2 view .LVU3035
 9803              	.LBB1109:
 9804              	.LBI1109:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9805              		.loc 1 96 13 view .LVU3036
 9806              	.LBB1110:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9807              		.loc 1 97 2 view .LVU3037
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9808              		.loc 1 97 18 is_stmt 0 view .LVU3038
 9809 0be2 FFF7FEFF 		bl	shift_down
 9810              	.LVL823:
  98:src/keys.c    **** }
 9811              		.loc 1 98 2 is_stmt 1 view .LVU3039
  98:src/keys.c    **** }
 9812              		.loc 1 98 52 is_stmt 0 view .LVU3040
 9813 0be6 0146     		mov	r1, r0
 9814 0be8 08B9     		cbnz	r0, .L924
 9815 0bea 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9816              	.L924:
 9817              	.LVL824:
ARM GAS  /tmp/cceyv6gL.s 			page 287


  98:src/keys.c    **** }
 9818              		.loc 1 98 52 view .LVU3041
 9819              	.LBE1110:
 9820              	.LBE1109:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9821              		.loc 1 106 2 is_stmt 1 view .LVU3042
 9822              	.LBE1108:
 9823              	.LBE1107:
 9824              	.LBE1113:
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9825              		.loc 1 2815 5 is_stmt 0 view .LVU3043
 9826 0bee 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9827              	.LBB1114:
 9828              	.LBB1112:
 9829              	.LBB1111:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9830              		.loc 1 106 16 view .LVU3044
 9831 0bf2 0023     		movs	r3, #0
 9832 0bf4 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9833              		.loc 1 108 2 is_stmt 1 view .LVU3045
 9834              	.LVL825:
 108:src/keys.c    **** }
 9835              		.loc 1 108 2 is_stmt 0 view .LVU3046
 9836              	.LBE1111:
 9837              	.LBE1112:
 9838              	.LBE1114:
2812:src/keys.c    **** 	unsigned int opcode;
 9839              		.loc 1 2812 2 is_stmt 1 view .LVU3047
2813:src/keys.c    **** 
 9840              		.loc 1 2813 2 view .LVU3048
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9841              		.loc 1 2815 2 view .LVU3049
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9842              		.loc 1 2815 5 is_stmt 0 view .LVU3050
 9843 0bf8 0028     		cmp	r0, #0
 9844 0bfa 40F0DC83 		bne	.L1372
2824:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 9845              		.loc 1 2824 2 is_stmt 1 view .LVU3051
 9846 0bfe 102C     		cmp	r4, #16
 9847 0c00 00F0A684 		beq	.L931
 9848 0c04 242C     		cmp	r4, #36
 9849 0c06 00F08C84 		beq	.L932
 9850 0c0a 0C2C     		cmp	r4, #12
 9851 0c0c 00F02684 		beq	.L1373
 9852              	.L933:
2857:src/keys.c    **** 	if (ch == 0)
 9853              		.loc 1 2857 2 view .LVU3052
 9854              	.LBB1115:
 9855              	.LBB1116:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9856              		.loc 1 485 6 is_stmt 0 view .LVU3053
 9857 0c10 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9858              	.LVL826:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9859              		.loc 1 485 6 view .LVU3054
 9860              	.LBE1116:
ARM GAS  /tmp/cceyv6gL.s 			page 288


 9861              	.LBI1115:
 435:src/keys.c    **** {
 9862              		.loc 1 435 12 is_stmt 1 view .LVU3055
 9863              	.LBB1121:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9864              		.loc 1 437 2 view .LVU3056
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9865              		.loc 1 485 2 view .LVU3057
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9866              		.loc 1 485 5 is_stmt 0 view .LVU3058
 9867 0c14 D806     		lsls	r0, r3, #27
 9868 0c16 03D5     		bpl	.L937
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9869              		.loc 1 486 3 is_stmt 1 view .LVU3059
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9870              		.loc 1 486 6 is_stmt 0 view .LVU3060
 9871 0c18 0029     		cmp	r1, #0
 9872 0c1a 41F00E80 		bne	.L1374
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 9873              		.loc 1 487 10 view .LVU3061
 9874 0c1e 0421     		movs	r1, #4
 9875              	.LVL827:
 9876              	.L937:
 491:src/keys.c    **** }
 9877              		.loc 1 491 2 is_stmt 1 view .LVU3062
 9878              	.LBB1117:
 9879              	.LBI1117:
 131:src/keys.c    **** {
 9880              		.loc 1 131 12 view .LVU3063
 9881              	.LBB1118:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9882              		.loc 1 133 2 view .LVU3064
 143:src/keys.c    **** }
 9883              		.loc 1 143 2 view .LVU3065
 143:src/keys.c    **** }
 9884              		.loc 1 143 23 is_stmt 0 view .LVU3066
 9885 0c20 304B     		ldr	r3, .L1407+4
 9886              	.LBE1118:
 9887              	.LBE1117:
 491:src/keys.c    **** }
 9888              		.loc 1 491 49 view .LVU3067
 9889 0c22 364A     		ldr	r2, .L1407+28
 9890              	.LBB1120:
 9891              	.LBB1119:
 143:src/keys.c    **** }
 9892              		.loc 1 143 23 view .LVU3068
 9893 0c24 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9894              	.LBE1119:
 9895              	.LBE1120:
 491:src/keys.c    **** }
 9896              		.loc 1 491 49 view .LVU3069
 9897 0c26 0620     		movs	r0, #6
 9898 0c28 00FB0323 		mla	r3, r0, r3, r2
 9899              	.LBE1121:
 9900              	.LBE1115:
2857:src/keys.c    **** 	if (ch == 0)
 9901              		.loc 1 2857 5 view .LVU3070
ARM GAS  /tmp/cceyv6gL.s 			page 289


 9902 0c2c 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 9903              	.LVL828:
2858:src/keys.c    **** 		return STATE_UNFINISHED;
 9904              		.loc 1 2858 2 is_stmt 1 view .LVU3071
2858:src/keys.c    **** 		return STATE_UNFINISHED;
 9905              		.loc 1 2858 5 is_stmt 0 view .LVU3072
 9906 0c2e 002C     		cmp	r4, #0
 9907 0c30 3FF458AD 		beq	.L1309
 9908              	.L930:
2861:src/keys.c    **** 		State2.digval = ch;
 9909              		.loc 1 2861 2 is_stmt 1 view .LVU3073
2861:src/keys.c    **** 		State2.digval = ch;
 9910              		.loc 1 2861 12 is_stmt 0 view .LVU3074
 9911 0c34 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2861:src/keys.c    **** 		State2.digval = ch;
 9912              		.loc 1 2861 5 view .LVU3075
 9913 0c38 002B     		cmp	r3, #0
 9914 0c3a 00F0F684 		beq	.L1375
2865:src/keys.c    **** 		State2.digval2 = ch;
 9915              		.loc 1 2865 9 is_stmt 1 view .LVU3076
2865:src/keys.c    **** 		State2.digval2 = ch;
 9916              		.loc 1 2865 12 is_stmt 0 view .LVU3077
 9917 0c3e 012B     		cmp	r3, #1
 9918 0c40 01F05780 		beq	.L1376
2870:src/keys.c    **** 
 9919              		.loc 1 2870 2 is_stmt 1 view .LVU3078
 9920              	.LBB1123:
 9921              	.LBI1123:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 9922              		.loc 1 2803 13 view .LVU3079
 9923              	.LBB1124:
2805:src/keys.c    **** 	if (! State2.alphas )
 9924              		.loc 1 2805 2 view .LVU3080
2805:src/keys.c    **** 	if (! State2.alphas )
 9925              		.loc 1 2805 15 is_stmt 0 view .LVU3081
 9926 0c44 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 9927              		.loc 1 2806 6 view .LVU3082
 9928 0c48 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 9929              		.loc 1 2805 15 view .LVU3083
 9930 0c4c 6FF3C302 		bfc	r2, #3, #1
 9931 0c50 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 9932              		.loc 1 2806 2 is_stmt 1 view .LVU3084
2806:src/keys.c    **** 		State2.alphashift = 0;
 9933              		.loc 1 2806 5 is_stmt 0 view .LVU3085
 9934 0c54 13F00802 		ands	r2, r3, #8
2807:src/keys.c    **** }
 9935              		.loc 1 2807 3 is_stmt 1 view .LVU3086
2807:src/keys.c    **** }
 9936              		.loc 1 2807 21 is_stmt 0 view .LVU3087
 9937 0c58 04BF     		itt	eq
 9938 0c5a 62F30413 		bfieq	r3, r2, #4, #1
 9939 0c5e 88F81630 		strbeq	r3, [r8, #22]
 9940              	.LVL829:
 9941              	.L936:
ARM GAS  /tmp/cceyv6gL.s 			page 290


2807:src/keys.c    **** }
 9942              		.loc 1 2807 21 view .LVU3088
 9943              	.LBE1124:
 9944              	.LBE1123:
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9945              		.loc 1 2873 2 is_stmt 1 view .LVU3089
2875:src/keys.c    **** }
 9946              		.loc 1 2875 2 view .LVU3090
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9947              		.loc 1 2873 21 is_stmt 0 view .LVU3091
 9948 0c62 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2874:src/keys.c    **** 	return opcode;
 9949              		.loc 1 2874 17 view .LVU3092
 9950 0c66 B8F80810 		ldrh	r1, [r8, #8]
2874:src/keys.c    **** 	return opcode;
 9951              		.loc 1 2874 34 view .LVU3093
 9952 0c6a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9953              		.loc 1 2873 29 view .LVU3094
 9954 0c6e 1B02     		lsls	r3, r3, #8
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9955              		.loc 1 2873 18 view .LVU3095
 9956 0c70 03F57043 		add	r3, r3, #61440
2874:src/keys.c    **** 	return opcode;
 9957              		.loc 1 2874 9 view .LVU3096
 9958 0c74 0B44     		add	r3, r3, r1
2874:src/keys.c    **** 	return opcode;
 9959              		.loc 1 2874 25 view .LVU3097
 9960 0c76 03EB0243 		add	r3, r3, r2, lsl #16
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9961              		.loc 1 2873 9 view .LVU3098
 9962 0c7a 03EB0464 		add	r4, r3, r4, lsl #24
 9963              	.LVL830:
2875:src/keys.c    **** }
 9964              		.loc 1 2875 9 view .LVU3099
 9965 0c7e FFF7AFBB 		b	.L835
 9966              	.LVL831:
 9967              	.L1332:
2875:src/keys.c    **** }
 9968              		.loc 1 2875 9 view .LVU3100
 9969              	.LBE1134:
 9970              	.LBE1142:
3308:src/keys.c    **** 		State2.arrow = 0;
 9971              		.loc 1 3308 3 is_stmt 1 view .LVU3101
 9972              	.LBB1143:
 9973              	.LBI1143:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9974              		.loc 1 121 13 view .LVU3102
 9975              	.LBB1144:
 122:src/keys.c    **** }
 9976              		.loc 1 122 2 view .LVU3103
 122:src/keys.c    **** }
 9977              		.loc 1 122 16 is_stmt 0 view .LVU3104
 9978 0c82 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 9979              	.LVL832:
 122:src/keys.c    **** }
 9980              		.loc 1 122 16 view .LVU3105
ARM GAS  /tmp/cceyv6gL.s 			page 291


 9981 0c86 3368     		ldr	r3, [r6]
 9982 0c88 032C     		cmp	r4, #3
 9983              	.LBE1144:
 9984              	.LBE1143:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 9985              		.loc 1 3309 16 view .LVU3106
 9986 0c8a 60F38202 		bfi	r2, r0, #2, #1
 9987              	.LBB1147:
 9988              	.LBB1145:
 122:src/keys.c    **** }
 9989              		.loc 1 122 16 view .LVU3107
 9990 0c8e 18BF     		it	ne
 9991 0c90 0321     		movne	r1, #3
 9992              	.LBE1145:
 9993              	.LBE1147:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 9994              		.loc 1 3309 16 view .LVU3108
 9995 0c92 88F81520 		strb	r2, [r8, #21]
 9996              	.LBB1148:
 9997              	.LBB1146:
 122:src/keys.c    **** }
 9998              		.loc 1 122 16 view .LVU3109
 9999 0c96 88F81010 		strb	r1, [r8, #16]
 10000              	.LVL833:
 122:src/keys.c    **** }
 10001              		.loc 1 122 16 view .LVU3110
 10002              	.LBE1146:
 10003              	.LBE1148:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10004              		.loc 1 3309 3 is_stmt 1 view .LVU3111
3310:src/keys.c    **** 	}
 10005              		.loc 1 3310 3 view .LVU3112
3310:src/keys.c    **** 	}
 10006              		.loc 1 3310 10 is_stmt 0 view .LVU3113
 10007 0c9a 3324     		movs	r4, #51
 10008 0c9c FFF70BBA 		b	.L801
 10009              	.LVL834:
 10010              	.L1335:
 10011              	.LBB1149:
 10012              	.LBB840:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10013              		.loc 1 312 16 view .LVU3114
 10014 0ca0 BBF1030F 		cmp	fp, #3
 10015 0ca4 3FF45EAF 		beq	.L1377
 315:src/keys.c    ****     /*
 10016              		.loc 1 315 3 is_stmt 1 view .LVU3115
 315:src/keys.c    ****     /*
 10017              		.loc 1 315 23 is_stmt 0 view .LVU3116
 10018 0ca8 1149     		ldr	r1, .L1407+16
 10019 0caa D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 10020              		.loc 1 315 6 view .LVU3117
 10021 0cae 1942     		tst	r1, r3
 10022 0cb0 3FF4E5AA 		beq	.L921
 10023 0cb4 62E7     		b	.L914
 10024              	.LVL835:
 10025              	.L1364:
ARM GAS  /tmp/cceyv6gL.s 			page 292


 315:src/keys.c    ****     /*
 10026              		.loc 1 315 6 view .LVU3118
 10027              	.LBE840:
 10028              	.LBE1149:
 10029              	.LBB1150:
 10030              	.LBB1056:
2919:src/keys.c    **** 			n = max;
 10031              		.loc 1 2919 3 is_stmt 1 view .LVU3119
2919:src/keys.c    **** 			n = max;
 10032              		.loc 1 2919 6 is_stmt 0 view .LVU3120
 10033 0cb6 0A1F     		subs	r2, r1, #4
 10034              	.LVL836:
2919:src/keys.c    **** 			n = max;
 10035              		.loc 1 2919 6 view .LVU3121
 10036 0cb8 0129     		cmp	r1, #1
 10037 0cba 18BF     		it	ne
 10038 0cbc 1346     		movne	r3, r2
 10039              	.LVL837:
2919:src/keys.c    **** 			n = max;
 10040              		.loc 1 2919 6 view .LVU3122
 10041 0cbe 85E6     		b	.L884
 10042              	.LVL838:
 10043              	.L1368:
2919:src/keys.c    **** 			n = max;
 10044              		.loc 1 2919 6 view .LVU3123
 10045              	.LBE1056:
 10046              	.LBE1150:
 10047              	.LBB1151:
 10048              	.LBB1089:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10049              		.loc 1 1662 19 view .LVU3124
 10050 0cc0 074B     		ldr	r3, .L1407
 10051 0cc2 1B68     		ldr	r3, [r3]
 10052 0cc4 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 10053 0cc8 5C06     		lsls	r4, r3, #25
 10054              	.LVL839:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10055              		.loc 1 1662 19 view .LVU3125
 10056 0cca 7FF5C1AE 		bpl	.L896
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10057              		.loc 1 1663 4 is_stmt 1 view .LVU3126
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10058              		.loc 1 1663 7 is_stmt 0 view .LVU3127
 10059 0cce 03F00103 		and	r3, r3, #1
 10060 0cd2 03F2C114 		addw	r4, r3, #449
 10061 0cd6 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 10062 0cda 2046     		mov	r0, r4
 10063 0cdc FFF7A2BB 		b	.L862
 10064              	.L1408:
 10065              		.align	2
 10066              	.L1407:
 10067 0ce0 00000000 		.word	main_ram
 10068 0ce4 00000000 		.word	.LANCHOR6
 10069 0ce8 00000000 		.word	.LANCHOR5
 10070 0cec 00000000 		.word	.LANCHOR21
 10071 0cf0 00080800 		.word	526336
 10072 0cf4 00000000 		.word	.LANCHOR22
ARM GAS  /tmp/cceyv6gL.s 			page 293


 10073 0cf8 00000000 		.word	.LANCHOR16
 10074 0cfc 00000000 		.word	.LANCHOR15
 10075 0d00 000A4000 		.word	4196864
 10076              	.LVL840:
 10077              	.L1355:
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10078              		.loc 1 1663 7 view .LVU3128
 10079              	.LBE1089:
 10080              	.LBE1151:
 10081              	.LBB1152:
 10082              	.LBB1016:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10083              		.loc 1 1718 44 is_stmt 1 view .LVU3129
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10084              		.loc 1 1718 52 is_stmt 0 view .LVU3130
 10085 0d04 0120     		movs	r0, #1
 10086 0d06 FFF7FEFF 		bl	gtodot_digit
 10087              	.LVL841:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10088              		.loc 1 1764 2 is_stmt 1 view .LVU3131
 10089              	.LBE1016:
 10090              	.LBE1152:
3285:src/keys.c    **** 
 10091              		.loc 1 3285 10 is_stmt 0 view .LVU3132
 10092 0d0a 3324     		movs	r4, #51
 10093              	.LVL842:
3285:src/keys.c    **** 
 10094              		.loc 1 3285 10 view .LVU3133
 10095 0d0c 3368     		ldr	r3, [r6]
 10096 0d0e FFF7D2B9 		b	.L801
 10097              	.LVL843:
 10098              	.L869:
 10099              	.LBB1153:
 10100              	.LBB1000:
2365:src/keys.c    **** 	}
 10101              		.loc 1 2365 3 is_stmt 1 view .LVU3134
2365:src/keys.c    **** 	}
 10102              		.loc 1 2365 10 is_stmt 0 view .LVU3135
 10103 0d12 0AF12000 		add	r0, r10, #32
 10104 0d16 4CEA0020 		orr	r0, ip, r0, lsl #8
 10105 0d1a 0446     		mov	r4, r0
 10106              	.LVL844:
2365:src/keys.c    **** 	}
 10107              		.loc 1 2365 10 view .LVU3136
 10108 0d1c FFF782BB 		b	.L862
 10109              	.LVL845:
 10110              	.L1356:
2365:src/keys.c    **** 	}
 10111              		.loc 1 2365 10 view .LVU3137
 10112              	.LBE1000:
 10113              	.LBE1153:
 10114              	.LBB1154:
 10115              	.LBB1017:
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10116              		.loc 1 1719 44 is_stmt 1 view .LVU3138
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10117              		.loc 1 1719 52 is_stmt 0 view .LVU3139
ARM GAS  /tmp/cceyv6gL.s 			page 294


 10118 0d20 0220     		movs	r0, #2
 10119 0d22 FFF7FEFF 		bl	gtodot_digit
 10120              	.LVL846:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10121              		.loc 1 1764 2 is_stmt 1 view .LVU3140
 10122              	.LBE1017:
 10123              	.LBE1154:
3285:src/keys.c    **** 
 10124              		.loc 1 3285 10 is_stmt 0 view .LVU3141
 10125 0d26 3324     		movs	r4, #51
 10126              	.LVL847:
3285:src/keys.c    **** 
 10127              		.loc 1 3285 10 view .LVU3142
 10128 0d28 3368     		ldr	r3, [r6]
 10129 0d2a FFF7C4B9 		b	.L801
 10130              	.LVL848:
 10131              	.L1365:
 10132              	.LBB1155:
 10133              	.LBB1057:
2923:src/keys.c    **** 			n = -2;
 10134              		.loc 1 2923 3 is_stmt 1 view .LVU3143
2923:src/keys.c    **** 			n = -2;
 10135              		.loc 1 2923 6 is_stmt 0 view .LVU3144
 10136 0d2e 0239     		subs	r1, r1, #2
 10137              	.LVL849:
2924:src/keys.c    **** 	}
 10138              		.loc 1 2924 6 view .LVU3145
 10139 0d30 9942     		cmp	r1, r3
 10140 0d32 D4BF     		ite	le
 10141 0d34 0B46     		movle	r3, r1
 10142              	.LVL850:
2924:src/keys.c    **** 	}
 10143              		.loc 1 2924 6 view .LVU3146
 10144 0d36 6FF00103 		mvngt	r3, #1
 10145 0d3a 47E6     		b	.L884
 10146              	.LVL851:
 10147              	.L1357:
2924:src/keys.c    **** 	}
 10148              		.loc 1 2924 6 view .LVU3147
 10149              	.LBE1057:
 10150              	.LBE1155:
 10151              	.LBB1156:
 10152              	.LBB1018:
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10153              		.loc 1 1720 44 is_stmt 1 view .LVU3148
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10154              		.loc 1 1720 52 is_stmt 0 view .LVU3149
 10155 0d3c 0320     		movs	r0, #3
 10156 0d3e FFF7FEFF 		bl	gtodot_digit
 10157              	.LVL852:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10158              		.loc 1 1764 2 is_stmt 1 view .LVU3150
 10159              	.LBE1018:
 10160              	.LBE1156:
3285:src/keys.c    **** 
 10161              		.loc 1 3285 10 is_stmt 0 view .LVU3151
 10162 0d42 3324     		movs	r4, #51
ARM GAS  /tmp/cceyv6gL.s 			page 295


 10163              	.LVL853:
3285:src/keys.c    **** 
 10164              		.loc 1 3285 10 view .LVU3152
 10165 0d44 3368     		ldr	r3, [r6]
 10166 0d46 FFF7B6B9 		b	.L801
 10167              	.LVL854:
 10168              	.L1369:
 10169              	.LBB1157:
 10170              	.LBB1090:
1674:src/keys.c    **** 
 10171              		.loc 1 1674 3 is_stmt 1 view .LVU3153
1674:src/keys.c    **** 
 10172              		.loc 1 1674 25 is_stmt 0 view .LVU3154
 10173 0d4a E24A     		ldr	r2, .L1409
 10174 0d4c 0AEB4303 		add	r3, r10, r3, lsl #1
 10175 0d50 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10176              	.LVL855:
1674:src/keys.c    **** 
 10177              		.loc 1 1674 25 view .LVU3155
 10178 0d54 FFF744BB 		b	.L835
 10179              	.LVL856:
 10180              	.L1371:
1674:src/keys.c    **** 
 10181              		.loc 1 1674 25 view .LVU3156
 10182              	.LBE1090:
 10183              	.LBE1157:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10184              		.loc 1 3325 2 is_stmt 1 view .LVU3157
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10185              		.loc 1 3325 5 is_stmt 0 view .LVU3158
 10186 0d58 002B     		cmp	r3, #0
 10187 0d5a 7FF4B5AC 		bne	.L904
 10188 0d5e FFF791BA 		b	.L925
 10189              	.LVL857:
 10190              	.L1132:
 10191              	.LBB1158:
 10192              	.LBB1058:
 10193              	.LBB1052:
2931:src/keys.c    **** 		if (nn <= 9)
 10194              		.loc 1 2931 7 view .LVU3159
 10195 0d62 1346     		mov	r3, r2
 10196              	.LVL858:
2931:src/keys.c    **** 		if (nn <= 9)
 10197              		.loc 1 2931 7 view .LVU3160
 10198 0d64 32E6     		b	.L884
 10199              	.LVL859:
 10200              	.L1339:
2931:src/keys.c    **** 		if (nn <= 9)
 10201              		.loc 1 2931 7 view .LVU3161
 10202              	.LBE1052:
 10203              	.LBE1058:
 10204              	.LBE1158:
3340:src/keys.c    **** 
 10205              		.loc 1 3340 3 is_stmt 1 view .LVU3162
 10206              	.LBB1159:
 10207              	.LBI1159:
2993:src/keys.c    **** 	unsigned int pc = State2.digval;
ARM GAS  /tmp/cceyv6gL.s 			page 296


 10208              		.loc 1 2993 12 view .LVU3163
 10209              	.LBB1160:
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10210              		.loc 1 2994 2 view .LVU3164
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10211              		.loc 1 2996 27 is_stmt 0 view .LVU3165
 10212 0d66 262C     		cmp	r4, #38
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10213              		.loc 1 2994 15 view .LVU3166
 10214 0d68 B8F808A0 		ldrh	r10, [r8, #8]
 10215              	.LVL860:
2995:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10216              		.loc 1 2995 2 is_stmt 1 view .LVU3167
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10217              		.loc 1 2996 27 is_stmt 0 view .LVU3168
 10218 0d6c 00F05284 		beq	.L1146
 10219              	.LVL861:
 10220              	.LBB1161:
 10221              	.LBI1161:
 210:src/keys.c    **** {
 10222              		.loc 1 210 14 is_stmt 1 view .LVU3169
 10223              	.LBB1162:
 212:src/keys.c    ****     // K00 - K05
 10224              		.loc 1 212 3 view .LVU3170
 234:src/keys.c    **** }
 10225              		.loc 1 234 3 view .LVU3171
 10226              	.LBB1163:
 10227              	.LBI1163:
 131:src/keys.c    **** {
 10228              		.loc 1 131 12 view .LVU3172
 10229              	.LBB1164:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10230              		.loc 1 133 2 view .LVU3173
 143:src/keys.c    **** }
 10231              		.loc 1 143 2 view .LVU3174
 143:src/keys.c    **** }
 10232              		.loc 1 143 23 is_stmt 0 view .LVU3175
 10233 0d70 D94B     		ldr	r3, .L1409+4
 10234              	.LBE1164:
 10235              	.LBE1163:
 234:src/keys.c    **** }
 10236              		.loc 1 234 28 view .LVU3176
 10237 0d72 DA4A     		ldr	r2, .L1409+8
 10238              	.LBB1166:
 10239              	.LBB1165:
 143:src/keys.c    **** }
 10240              		.loc 1 143 23 view .LVU3177
 10241 0d74 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10242              	.LBE1165:
 10243              	.LBE1166:
 234:src/keys.c    **** }
 10244              		.loc 1 234 10 view .LVU3178
 10245 0d76 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10246              	.LVL862:
 234:src/keys.c    **** }
 10247              		.loc 1 234 10 view .LVU3179
 10248              	.LBE1162:
ARM GAS  /tmp/cceyv6gL.s 			page 297


 10249              	.LBE1161:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10250              		.loc 1 2996 27 view .LVU3180
 10251 0d7a 2BF0800B 		bic	fp, fp, #128
 10252              	.L945:
 10253              	.LVL863:
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10254              		.loc 1 2997 2 is_stmt 1 view .LVU3181
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10255              		.loc 1 2997 21 is_stmt 0 view .LVU3182
 10256 0d7e 5046     		mov	r0, r10
 10257 0d80 FFF7FEFF 		bl	getprog
 10258              	.LVL864:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10259              		.loc 1 2998 2 is_stmt 1 view .LVU3183
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10260              		.loc 1 2998 20 is_stmt 0 view .LVU3184
 10261 0d84 00F47040 		and	r0, r0, #61440
 10262              	.LVL865:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10263              		.loc 1 2998 63 view .LVU3185
 10264 0d88 B0F5704F 		cmp	r0, #61440
 10265 0d8c 00F04684 		beq	.L1378
 10266 0d90 0022     		movs	r2, #0
 10267              	.L946:
 10268              	.LVL866:
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10269              		.loc 1 2999 2 is_stmt 1 view .LVU3186
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10270              		.loc 1 2999 27 is_stmt 0 view .LVU3187
 10271 0d92 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10272 0d96 0192     		str	r2, [sp, #4]
 10273              	.LVL867:
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10274              		.loc 1 2999 27 view .LVU3188
 10275 0d98 C3F38013 		ubfx	r3, r3, #6, #1
 10276 0d9c 0093     		str	r3, [sp]
 10277              	.LVL868:
3000:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10278              		.loc 1 3000 2 is_stmt 1 view .LVU3189
 10279              	.LBB1167:
 10280              	.LBI1167:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10281              		.loc 1 114 13 view .LVU3190
 10282              	.LBE1167:
 10283              	.LBE1160:
 10284              	.LBE1159:
 10285              	.LBE1404:
 10286              	.LBE1477:
 115:src/keys.c    **** }
 10287              		.loc 1 115 2 view .LVU3191
 10288              	.LBB1478:
 10289              	.LBB1405:
 10290              	.LBB1193:
 10291              	.LBB1186:
 10292              	.LBB1174:
 10293              	.LBB1168:
ARM GAS  /tmp/cceyv6gL.s 			page 298


 10294              	.LBI1168:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10295              		.loc 1 104 20 view .LVU3192
 10296              	.LBB1169:
 105:src/keys.c    **** 	State2.shifts = shift;
 10297              		.loc 1 105 2 view .LVU3193
 10298              	.LBB1170:
 10299              	.LBI1170:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10300              		.loc 1 96 13 view .LVU3194
 10301              	.LBB1171:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10302              		.loc 1 97 2 view .LVU3195
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10303              		.loc 1 97 18 is_stmt 0 view .LVU3196
 10304 0d9e FFF7FEFF 		bl	shift_down
 10305              	.LVL869:
  98:src/keys.c    **** }
 10306              		.loc 1 98 2 is_stmt 1 view .LVU3197
  98:src/keys.c    **** }
 10307              		.loc 1 98 52 is_stmt 0 view .LVU3198
 10308 0da2 019A     		ldr	r2, [sp, #4]
 10309 0da4 0346     		mov	r3, r0
 10310 0da6 08B9     		cbnz	r0, .L947
 10311 0da8 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10312              	.L947:
 10313              	.LVL870:
  98:src/keys.c    **** }
 10314              		.loc 1 98 52 view .LVU3199
 10315              	.LBE1171:
 10316              	.LBE1170:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10317              		.loc 1 106 2 is_stmt 1 view .LVU3200
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10318              		.loc 1 106 16 is_stmt 0 view .LVU3201
 10319 0dac 0021     		movs	r1, #0
 10320              	.LBE1169:
 10321              	.LBE1168:
 10322              	.LBE1174:
3003:src/keys.c    **** 		// Digits take you to that segment
 10323              		.loc 1 3003 5 view .LVU3202
 10324 0dae BBF1020F 		cmp	fp, #2
 10325              	.LBB1175:
 10326              	.LBB1173:
 10327              	.LBB1172:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10328              		.loc 1 106 16 view .LVU3203
 10329 0db2 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10330              		.loc 1 108 2 is_stmt 1 view .LVU3204
 10331              	.LVL871:
 108:src/keys.c    **** }
 10332              		.loc 1 108 2 is_stmt 0 view .LVU3205
 10333              	.LBE1172:
 10334              	.LBE1173:
 10335              	.LBE1175:
3001:src/keys.c    **** 
ARM GAS  /tmp/cceyv6gL.s 			page 299


 10336              		.loc 1 3001 2 is_stmt 1 view .LVU3206
3003:src/keys.c    **** 		// Digits take you to that segment
 10337              		.loc 1 3003 2 view .LVU3207
3003:src/keys.c    **** 		// Digits take you to that segment
 10338              		.loc 1 3003 5 is_stmt 0 view .LVU3208
 10339 0db6 40F28B84 		bls	.L1379
3012:src/keys.c    **** 
 10340              		.loc 1 3012 2 is_stmt 1 view .LVU3209
3012:src/keys.c    **** 
 10341              		.loc 1 3012 12 is_stmt 0 view .LVU3210
 10342 0dba 44EA0323 		orr	r3, r4, r3, lsl #8
 10343              	.LVL872:
3012:src/keys.c    **** 
 10344              		.loc 1 3012 2 view .LVU3211
 10345 0dbe 272B     		cmp	r3, #39
 10346 0dc0 00F3C280 		bgt	.L950
 10347 0dc4 042B     		cmp	r3, #4
 10348 0dc6 7FF78DAC 		ble	.L1309
 10349 0dca 053B     		subs	r3, r3, #5
 10350 0dcc 222B     		cmp	r3, #34
 10351 0dce 3FF689AC 		bhi	.L1309
 10352 0dd2 01A1     		adr	r1, .L959
 10353 0dd4 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10354              		.p2align 2
 10355              	.L959:
 10356 0dd8 F10E0000 		.word	.L964+1
 10357 0ddc E30E0000 		.word	.L963+1
 10358 0de0 E30E0000 		.word	.L963+1
 10359 0de4 E5060000 		.word	.L1309+1
 10360 0de8 E5060000 		.word	.L1309+1
 10361 0dec E5060000 		.word	.L1309+1
 10362 0df0 E5060000 		.word	.L1309+1
 10363 0df4 650E0000 		.word	.L1149+1
 10364 0df8 E5060000 		.word	.L1309+1
 10365 0dfc E5060000 		.word	.L1309+1
 10366 0e00 E5060000 		.word	.L1309+1
 10367 0e04 110F0000 		.word	.L962+1
 10368 0e08 E5060000 		.word	.L1309+1
 10369 0e0c FD0E0000 		.word	.L961+1
 10370 0e10 E5060000 		.word	.L1309+1
 10371 0e14 E5060000 		.word	.L1309+1
 10372 0e18 E5060000 		.word	.L1309+1
 10373 0e1c E5060000 		.word	.L1309+1
 10374 0e20 E5060000 		.word	.L1309+1
 10375 0e24 A10E0000 		.word	.L960+1
 10376 0e28 E5060000 		.word	.L1309+1
 10377 0e2c E5060000 		.word	.L1309+1
 10378 0e30 E5060000 		.word	.L1309+1
 10379 0e34 E5060000 		.word	.L1309+1
 10380 0e38 E5060000 		.word	.L1309+1
 10381 0e3c E5060000 		.word	.L1309+1
 10382 0e40 E5060000 		.word	.L1309+1
 10383 0e44 E5060000 		.word	.L1309+1
 10384 0e48 E5060000 		.word	.L1309+1
 10385 0e4c E5060000 		.word	.L1309+1
 10386 0e50 E5060000 		.word	.L1309+1
 10387 0e54 E5060000 		.word	.L1309+1
ARM GAS  /tmp/cceyv6gL.s 			page 300


 10388 0e58 E5060000 		.word	.L1309+1
 10389 0e5c E5060000 		.word	.L1309+1
 10390 0e60 B70E0000 		.word	.L958+1
 10391              		.p2align 1
 10392              	.L1149:
3001:src/keys.c    **** 
 10393              		.loc 1 3001 6 view .LVU3212
 10394 0e64 3324     		movs	r4, #51
 10395              	.LVL873:
 10396              	.L956:
3034:src/keys.c    **** 		break;
 10397              		.loc 1 3034 3 is_stmt 1 view .LVU3213
 10398 0e66 5046     		mov	r0, r10
 10399 0e68 FFF7FEFF 		bl	set_pc
 10400              	.LVL874:
3035:src/keys.c    **** 
 10401              		.loc 1 3035 3 view .LVU3214
 10402              	.L968:
3088:src/keys.c    **** 	State2.labellist = 0;
 10403              		.loc 1 3088 2 view .LVU3215
3089:src/keys.c    **** 	return check_confirm(op);
 10404              		.loc 1 3089 19 is_stmt 0 view .LVU3216
 10405 0e6c 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3088:src/keys.c    **** 	State2.labellist = 0;
 10406              		.loc 1 3088 16 view .LVU3217
 10407 0e70 0022     		movs	r2, #0
 10408              	.LBB1176:
 10409              	.LBB1177:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10410              		.loc 1 715 5 view .LVU3218
 10411 0e72 C4F30723 		ubfx	r3, r4, #8, #8
 10412              	.LBE1177:
 10413              	.LBE1176:
3089:src/keys.c    **** 	return check_confirm(op);
 10414              		.loc 1 3089 19 view .LVU3219
 10415 0e76 62F38201 		bfi	r1, r2, #2, #1
 10416              	.LBB1182:
 10417              	.LBB1178:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10418              		.loc 1 715 5 view .LVU3220
 10419 0e7a 012B     		cmp	r3, #1
 10420              	.LBE1178:
 10421              	.LBE1182:
3089:src/keys.c    **** 	return check_confirm(op);
 10422              		.loc 1 3089 19 view .LVU3221
 10423 0e7c 88F81710 		strb	r1, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10424              		.loc 1 3088 16 view .LVU3222
 10425 0e80 A8F80820 		strh	r2, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10426              		.loc 1 3089 2 is_stmt 1 view .LVU3223
3090:src/keys.c    **** }
 10427              		.loc 1 3090 2 view .LVU3224
 10428              	.LVL875:
 10429              	.LBB1183:
 10430              	.LBI1176:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
ARM GAS  /tmp/cceyv6gL.s 			page 301


 10431              		.loc 1 714 12 view .LVU3225
 10432              	.LBB1179:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10433              		.loc 1 715 2 view .LVU3226
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10434              		.loc 1 715 5 is_stmt 0 view .LVU3227
 10435 0e84 7FF4ACAA 		bne	.L835
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10436              		.loc 1 715 5 view .LVU3228
 10437 0e88 2046     		mov	r0, r4
 10438 0e8a FFF7FEFF 		bl	check_confirm.part.0
 10439              	.LVL876:
 10440 0e8e 0446     		mov	r4, r0
 10441              	.LVL877:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10442              		.loc 1 715 5 view .LVU3229
 10443 0e90 FFF7A6BA 		b	.L835
 10444              	.LVL878:
 10445              	.L953:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10446              		.loc 1 715 5 view .LVU3230
 10447              	.LBE1179:
 10448              	.LBE1183:
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
 10449              		.loc 1 3019 3 is_stmt 1 view .LVU3231
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
 10450              		.loc 1 3019 8 is_stmt 0 view .LVU3232
 10451 0e94 5046     		mov	r0, r10
 10452 0e96 0122     		movs	r2, #1
 10453 0e98 0021     		movs	r1, #0
 10454 0e9a FFF7FEFF 		bl	advance_to_next_label
 10455              	.LVL879:
 10456 0e9e 8246     		mov	r10, r0
 10457              	.LVL880:
 10458              	.L960:
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10459              		.loc 1 3022 3 is_stmt 1 view .LVU3233
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10460              		.loc 1 3022 19 is_stmt 0 view .LVU3234
 10461 0ea0 5046     		mov	r0, r10
 10462 0ea2 0022     		movs	r2, #0
 10463 0ea4 0121     		movs	r1, #1
 10464 0ea6 FFF7FEFF 		bl	advance_to_next_label
 10465              	.LVL881:
3023:src/keys.c    **** 
 10466              		.loc 1 3023 10 view .LVU3235
 10467 0eaa 3324     		movs	r4, #51
 10468 0eac 3368     		ldr	r3, [r6]
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10469              		.loc 1 3022 17 view .LVU3236
 10470 0eae A8F80800 		strh	r0, [r8, #8]	@ movhi
3023:src/keys.c    **** 
 10471              		.loc 1 3023 3 is_stmt 1 view .LVU3237
3023:src/keys.c    **** 
 10472              		.loc 1 3023 10 is_stmt 0 view .LVU3238
 10473 0eb2 FFF700B9 		b	.L801
 10474              	.LVL882:
ARM GAS  /tmp/cceyv6gL.s 			page 302


 10475              	.L958:
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10476              		.loc 1 3074 3 is_stmt 1 view .LVU3239
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10477              		.loc 1 3074 6 is_stmt 0 view .LVU3240
 10478 0eb6 009B     		ldr	r3, [sp]
 10479 0eb8 002B     		cmp	r3, #0
 10480 0eba 3FF413AC 		beq	.L1309
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10481              		.loc 1 3074 14 view .LVU3241
 10482 0ebe 002A     		cmp	r2, #0
 10483 0ec0 3FF410AC 		beq	.L1309
3075:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10484              		.loc 1 3075 4 is_stmt 1 view .LVU3242
 10485 0ec4 5146     		mov	r1, r10
 10486 0ec6 0120     		movs	r0, #1
 10487 0ec8 FFF7FEFF 		bl	cmdgtocommon
 10488              	.LVL883:
3076:src/keys.c    **** 			break;
 10489              		.loc 1 3076 4 view .LVU3243
3077:src/keys.c    **** 		}
 10490              		.loc 1 3077 4 view .LVU3244
3088:src/keys.c    **** 	State2.labellist = 0;
 10491              		.loc 1 3088 2 view .LVU3245
3089:src/keys.c    **** 	return check_confirm(op);
 10492              		.loc 1 3089 19 is_stmt 0 view .LVU3246
 10493 0ecc 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3088:src/keys.c    **** 	State2.labellist = 0;
 10494              		.loc 1 3088 16 view .LVU3247
 10495 0ed0 0023     		movs	r3, #0
3089:src/keys.c    **** 	return check_confirm(op);
 10496              		.loc 1 3089 19 view .LVU3248
 10497 0ed2 63F38202 		bfi	r2, r3, #2, #1
 10498 0ed6 88F81720 		strb	r2, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10499              		.loc 1 3088 16 view .LVU3249
 10500 0eda A8F80830 		strh	r3, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10501              		.loc 1 3089 2 is_stmt 1 view .LVU3250
3090:src/keys.c    **** }
 10502              		.loc 1 3090 2 view .LVU3251
 10503              	.LVL884:
 10504              	.LBB1184:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10505              		.loc 1 714 12 view .LVU3252
 10506              	.LBB1180:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10507              		.loc 1 715 2 view .LVU3253
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10508              		.loc 1 715 2 is_stmt 0 view .LVU3254
 10509              	.LBE1180:
 10510              	.LBE1184:
 10511              	.LBE1186:
 10512              	.LBE1193:
 10513              	.LBE1405:
 10514              	.LBE1478:
3599:src/keys.c    ****     case STATE_SST:
ARM GAS  /tmp/cceyv6gL.s 			page 303


 10515              		.loc 1 3599 5 is_stmt 1 view .LVU3255
 10516 0ede FFF72FBA 		b	.L811
 10517              	.LVL885:
 10518              	.L963:
 10519              	.LBB1479:
 10520              	.LBB1406:
 10521              	.LBB1194:
 10522              	.LBB1187:
3044:src/keys.c    **** 	  //#endif
 10523              		.loc 1 3044 3 view .LVU3256
3044:src/keys.c    **** 	  //#endif
 10524              		.loc 1 3044 38 is_stmt 0 view .LVU3257
 10525 0ee2 062C     		cmp	r4, #6
 10526 0ee4 40F2B114 		movw	r4, #433
 10527              	.LVL886:
3044:src/keys.c    **** 	  //#endif
 10528              		.loc 1 3044 38 view .LVU3258
 10529 0ee8 08BF     		it	eq
 10530 0eea 4FF4D974 		moveq	r4, #434
 10531 0eee BAE7     		b	.L956
 10532              	.LVL887:
 10533              	.L964:
 10534              	.L969:
3052:src/keys.c    **** 		goto xeq_or_gto;
 10535              		.loc 1 3052 3 is_stmt 1 view .LVU3259
3052:src/keys.c    **** 		goto xeq_or_gto;
 10536              		.loc 1 3052 6 is_stmt 0 view .LVU3260
 10537 0ef0 02F50074 		add	r4, r2, #512
 10538              	.LVL888:
3053:src/keys.c    **** 
 10539              		.loc 1 3053 3 is_stmt 1 view .LVU3261
3058:src/keys.c    **** 			break;
 10540              		.loc 1 3058 3 view .LVU3262
3058:src/keys.c    **** 			break;
 10541              		.loc 1 3058 6 is_stmt 0 view .LVU3263
 10542 0ef4 002A     		cmp	r2, #0
 10543 0ef6 B9D1     		bne	.L968
 10544 0ef8 FFF7F4BB 		b	.L1309
 10545              	.LVL889:
 10546              	.L961:
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10547              		.loc 1 3026 3 is_stmt 1 view .LVU3264
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10548              		.loc 1 3026 19 is_stmt 0 view .LVU3265
 10549 0efc 5046     		mov	r0, r10
 10550 0efe 0021     		movs	r1, #0
 10551 0f00 FFF7FEFF 		bl	advance_to_previous_label
 10552              	.LVL890:
3027:src/keys.c    **** 
 10553              		.loc 1 3027 10 view .LVU3266
 10554 0f04 3324     		movs	r4, #51
 10555              	.LVL891:
3027:src/keys.c    **** 
 10556              		.loc 1 3027 10 view .LVU3267
 10557 0f06 3368     		ldr	r3, [r6]
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10558              		.loc 1 3026 17 view .LVU3268
ARM GAS  /tmp/cceyv6gL.s 			page 304


 10559 0f08 A8F80800 		strh	r0, [r8, #8]	@ movhi
3027:src/keys.c    **** 
 10560              		.loc 1 3027 3 is_stmt 1 view .LVU3269
3027:src/keys.c    **** 
 10561              		.loc 1 3027 10 is_stmt 0 view .LVU3270
 10562 0f0c FFF7D3B8 		b	.L801
 10563              	.LVL892:
 10564              	.L962:
3088:src/keys.c    **** 	State2.labellist = 0;
 10565              		.loc 1 3088 2 is_stmt 1 view .LVU3271
3089:src/keys.c    **** 	return check_confirm(op);
 10566              		.loc 1 3089 19 is_stmt 0 view .LVU3272
 10567 0f10 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10568 0f14 3368     		ldr	r3, [r6]
3088:src/keys.c    **** 	State2.labellist = 0;
 10569              		.loc 1 3088 16 view .LVU3273
 10570 0f16 0022     		movs	r2, #0
3089:src/keys.c    **** 	return check_confirm(op);
 10571              		.loc 1 3089 19 view .LVU3274
 10572 0f18 62F38201 		bfi	r1, r2, #2, #1
 10573 0f1c 88F81710 		strb	r1, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10574              		.loc 1 3088 16 view .LVU3275
 10575 0f20 A8F80820 		strh	r2, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10576              		.loc 1 3089 2 is_stmt 1 view .LVU3276
3090:src/keys.c    **** }
 10577              		.loc 1 3090 2 view .LVU3277
 10578              	.LVL893:
 10579              	.LBB1185:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10580              		.loc 1 714 12 view .LVU3278
 10581              	.LBB1181:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10582              		.loc 1 715 2 view .LVU3279
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10583              		.loc 1 715 2 is_stmt 0 view .LVU3280
 10584              	.LBE1181:
 10585              	.LBE1185:
 10586              	.LBE1187:
 10587              	.LBE1194:
 10588              	.LBE1406:
 10589              	.LBE1479:
3599:src/keys.c    ****     case STATE_SST:
 10590              		.loc 1 3599 5 is_stmt 1 view .LVU3281
 10591              	.LBB1480:
 10592              	.LBB1407:
 10593              	.LBB1195:
 10594              	.LBB1188:
3001:src/keys.c    **** 
 10595              		.loc 1 3001 6 is_stmt 0 view .LVU3282
 10596 0f24 3324     		movs	r4, #51
 10597 0f26 FFF7C6B8 		b	.L801
 10598              	.LVL894:
 10599              	.L878:
3001:src/keys.c    **** 
 10600              		.loc 1 3001 6 view .LVU3283
ARM GAS  /tmp/cceyv6gL.s 			page 305


 10601              	.LBE1188:
 10602              	.LBE1195:
 10603              	.LBB1196:
 10604              	.LBB1001:
2384:src/keys.c    **** 		return STATE_UNFINISHED;
 10605              		.loc 1 2384 3 is_stmt 1 view .LVU3284
 10606              	.LBB994:
 10607              	.LBI994:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10608              		.loc 1 552 13 view .LVU3285
 10609              	.LBB995:
 553:src/keys.c    **** 		return;
 10610              		.loc 1 553 2 view .LVU3286
 553:src/keys.c    **** 		return;
 10611              		.loc 1 553 6 is_stmt 0 view .LVU3287
 10612 0f2a FFF7FEFF 		bl	is_bad_cmdline
 10613              	.LVL895:
 553:src/keys.c    **** 		return;
 10614              		.loc 1 553 5 view .LVU3288
 10615 0f2e 0446     		mov	r4, r0
 10616              	.LVL896:
 553:src/keys.c    **** 		return;
 10617              		.loc 1 553 5 view .LVU3289
 10618 0f30 0028     		cmp	r0, #0
 10619 0f32 7FF4D7AB 		bne	.L1309
 10620 0f36 5FFA8AF0 		uxtb	r0, r10
 10621 0f3a FFF7FEFF 		bl	init_arg.part.0
 10622              	.LVL897:
 10623              	.LBE995:
 10624              	.LBE994:
 10625              	.LBE1001:
 10626              	.LBE1196:
 10627              	.LBE1407:
 10628              	.LBE1480:
3409:src/keys.c    ****   //print_debug(60,c);
 10629              		.loc 1 3409 7 view .LVU3290
 10630 0f3e 2546     		mov	r5, r4
 10631 0f40 3368     		ldr	r3, [r6]
 10632              	.LBB1481:
 10633              	.LBB1408:
 10634              	.LBB1197:
 10635              	.LBB1002:
2385:src/keys.c    **** 
 10636              		.loc 1 2385 10 view .LVU3291
 10637 0f42 3324     		movs	r4, #51
 10638 0f44 FFF7B7B8 		b	.L801
 10639              	.LVL898:
 10640              	.L950:
2385:src/keys.c    **** 
 10641              		.loc 1 2385 10 view .LVU3292
 10642              	.LBE1002:
 10643              	.LBE1197:
 10644              	.LBB1198:
 10645              	.LBB1189:
3012:src/keys.c    **** 
 10646              		.loc 1 3012 2 view .LVU3293
 10647 0f48 B3F58C7F 		cmp	r3, #280
ARM GAS  /tmp/cceyv6gL.s 			page 306


 10648 0f4c 47DC     		bgt	.L965
 10649 0f4e B3F5827F 		cmp	r3, #260
 10650 0f52 7FF7C7AB 		ble	.L1309
 10651 0f56 6FF48274 		mvn	r4, #260
 10652              	.LVL899:
3012:src/keys.c    **** 
 10653              		.loc 1 3012 2 view .LVU3294
 10654 0f5a 2344     		add	r3, r3, r4
 10655 0f5c 132B     		cmp	r3, #19
 10656 0f5e 3FF6C1AB 		bhi	.L1309
 10657 0f62 01A1     		adr	r1, .L954
 10658 0f64 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10659              		.p2align 2
 10660              	.L954:
 10661 0f68 BF0F0000 		.word	.L957+1
 10662 0f6c E5060000 		.word	.L1309+1
 10663 0f70 E5060000 		.word	.L1309+1
 10664 0f74 E5060000 		.word	.L1309+1
 10665 0f78 E5060000 		.word	.L1309+1
 10666 0f7c E5060000 		.word	.L1309+1
 10667 0f80 E5060000 		.word	.L1309+1
 10668 0f84 E5060000 		.word	.L1309+1
 10669 0f88 E5060000 		.word	.L1309+1
 10670 0f8c E5060000 		.word	.L1309+1
 10671 0f90 E5060000 		.word	.L1309+1
 10672 0f94 B90F0000 		.word	.L1148+1
 10673 0f98 E5060000 		.word	.L1309+1
 10674 0f9c CD0F0000 		.word	.L955+1
 10675 0fa0 E5060000 		.word	.L1309+1
 10676 0fa4 E5060000 		.word	.L1309+1
 10677 0fa8 E5060000 		.word	.L1309+1
 10678 0fac E5060000 		.word	.L1309+1
 10679 0fb0 E5060000 		.word	.L1309+1
 10680 0fb4 950E0000 		.word	.L953+1
 10681              		.p2align 1
 10682              	.L1148:
 10683 0fb8 40F24314 		movw	r4, #323
 10684 0fbc 53E7     		b	.L956
 10685              	.L957:
3056:src/keys.c    **** 	xeq_or_gto:
 10686              		.loc 1 3056 3 is_stmt 1 view .LVU3295
3056:src/keys.c    **** 	xeq_or_gto:
 10687              		.loc 1 3056 6 is_stmt 0 view .LVU3296
 10688 0fbe 02F54074 		add	r4, r2, #768
 10689              	.LVL900:
3058:src/keys.c    **** 			break;
 10690              		.loc 1 3058 3 is_stmt 1 view .LVU3297
3058:src/keys.c    **** 			break;
 10691              		.loc 1 3058 6 is_stmt 0 view .LVU3298
 10692 0fc2 002A     		cmp	r2, #0
 10693 0fc4 7FF452AF 		bne	.L968
 10694 0fc8 FFF78CBB 		b	.L1309
 10695              	.LVL901:
 10696              	.L955:
3015:src/keys.c    **** 		goto next;
 10697              		.loc 1 3015 3 is_stmt 1 view .LVU3299
3015:src/keys.c    **** 		goto next;
ARM GAS  /tmp/cceyv6gL.s 			page 307


 10698              		.loc 1 3015 8 is_stmt 0 view .LVU3300
 10699 0fcc 5046     		mov	r0, r10
 10700 0fce 0121     		movs	r1, #1
 10701 0fd0 FFF7FEFF 		bl	advance_to_previous_label
 10702              	.LVL902:
 10703 0fd4 0121     		movs	r1, #1
 10704 0fd6 FFF7FEFF 		bl	advance_to_previous_label
 10705              	.LVL903:
 10706 0fda 8246     		mov	r10, r0
 10707              	.LVL904:
3016:src/keys.c    **** 
 10708              		.loc 1 3016 3 is_stmt 1 view .LVU3301
 10709 0fdc 60E7     		b	.L960
 10710              	.LVL905:
 10711              	.L965:
3012:src/keys.c    **** 
 10712              		.loc 1 3012 2 is_stmt 0 view .LVU3302
 10713 0fde 40F22732 		movw	r2, #807
 10714 0fe2 9342     		cmp	r3, r2
 10715 0fe4 7FF47EAB 		bne	.L1309
3082:src/keys.c    **** 		goto set_pc_and_exit;
 10716              		.loc 1 3082 3 is_stmt 1 view .LVU3303
3082:src/keys.c    **** 		goto set_pc_and_exit;
 10717              		.loc 1 3082 18 is_stmt 0 view .LVU3304
 10718 0fe8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10719 0fec 61F38613 		bfi	r3, r1, #6, #1
 10720 0ff0 88F81630 		strb	r3, [r8, #22]
3083:src/keys.c    **** 
 10721              		.loc 1 3083 3 is_stmt 1 view .LVU3305
3001:src/keys.c    **** 
 10722              		.loc 1 3001 6 is_stmt 0 view .LVU3306
 10723 0ff4 3324     		movs	r4, #51
 10724              	.LVL906:
3083:src/keys.c    **** 
 10725              		.loc 1 3083 3 view .LVU3307
 10726 0ff6 36E7     		b	.L956
 10727              	.LVL907:
 10728              	.L1340:
3083:src/keys.c    **** 
 10729              		.loc 1 3083 3 view .LVU3308
 10730              	.LBE1189:
 10731              	.LBE1198:
3343:src/keys.c    **** 
 10732              		.loc 1 3343 3 is_stmt 1 view .LVU3309
 10733              	.LBB1199:
 10734              	.LBI1199:
3124:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 10735              		.loc 1 3124 12 view .LVU3310
 10736              	.LBB1200:
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
 10737              		.loc 1 3125 2 view .LVU3311
 10738              	.LBB1201:
 10739              	.LBI1201:
 210:src/keys.c    **** {
 10740              		.loc 1 210 14 view .LVU3312
 10741              	.LBB1202:
 212:src/keys.c    ****     // K00 - K05
ARM GAS  /tmp/cceyv6gL.s 			page 308


 10742              		.loc 1 212 3 view .LVU3313
 234:src/keys.c    **** }
 10743              		.loc 1 234 3 view .LVU3314
 10744              	.LBB1203:
 10745              	.LBI1203:
 131:src/keys.c    **** {
 10746              		.loc 1 131 12 view .LVU3315
 10747              	.LBB1204:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10748              		.loc 1 133 2 view .LVU3316
 143:src/keys.c    **** }
 10749              		.loc 1 143 2 view .LVU3317
 143:src/keys.c    **** }
 10750              		.loc 1 143 23 is_stmt 0 view .LVU3318
 10751 0ff8 374B     		ldr	r3, .L1409+4
 10752              	.LBE1204:
 10753              	.LBE1203:
 234:src/keys.c    **** }
 10754              		.loc 1 234 28 view .LVU3319
 10755 0ffa 384A     		ldr	r2, .L1409+8
 10756              	.LBB1206:
 10757              	.LBB1205:
 143:src/keys.c    **** }
 10758              		.loc 1 143 23 view .LVU3320
 10759 0ffc 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10760              	.LBE1205:
 10761              	.LBE1206:
 234:src/keys.c    **** }
 10762              		.loc 1 234 10 view .LVU3321
 10763 0ffe 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10764              	.LVL908:
 234:src/keys.c    **** }
 10765              		.loc 1 234 10 view .LVU3322
 10766              	.LBE1202:
 10767              	.LBE1201:
 10768              	.LBB1207:
 10769              	.LBB1208:
 10770              	.LBB1209:
 10771              	.LBB1210:
 10772              	.LBB1211:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10773              		.loc 1 97 18 view .LVU3323
 10774 1002 FFF7FEFF 		bl	shift_down
 10775              	.LVL909:
 10776              	.LBE1211:
 10777              	.LBE1210:
 10778              	.LBE1209:
 10779              	.LBE1208:
 10780              	.LBE1207:
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
 10781              		.loc 1 3125 15 view .LVU3324
 10782 1006 2BF0800B 		bic	fp, fp, #128
 10783              	.LVL910:
3126:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 10784              		.loc 1 3126 2 is_stmt 1 view .LVU3325
 10785              	.LBB1220:
 10786              	.LBI1207:
ARM GAS  /tmp/cceyv6gL.s 			page 309


 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10787              		.loc 1 114 13 view .LVU3326
 10788              	.LBE1220:
 10789              	.LBE1200:
 10790              	.LBE1199:
 10791              	.LBE1408:
 10792              	.LBE1481:
 115:src/keys.c    **** }
 10793              		.loc 1 115 2 view .LVU3327
 10794              	.LBB1482:
 10795              	.LBB1409:
 10796              	.LBB1235:
 10797              	.LBB1227:
 10798              	.LBB1221:
 10799              	.LBB1217:
 10800              	.LBI1208:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10801              		.loc 1 104 20 view .LVU3328
 10802              	.LBB1214:
 105:src/keys.c    **** 	State2.shifts = shift;
 10803              		.loc 1 105 2 view .LVU3329
 10804              	.LBB1213:
 10805              	.LBI1210:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10806              		.loc 1 96 13 view .LVU3330
 10807              	.LBB1212:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10808              		.loc 1 97 2 view .LVU3331
  98:src/keys.c    **** }
 10809              		.loc 1 98 2 view .LVU3332
  98:src/keys.c    **** }
 10810              		.loc 1 98 52 is_stmt 0 view .LVU3333
 10811 100a 8146     		mov	r9, r0
 10812 100c 08B9     		cbnz	r0, .L972
 10813 100e 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 10814              	.L972:
 10815              	.LVL911:
  98:src/keys.c    **** }
 10816              		.loc 1 98 52 view .LVU3334
 10817              	.LBE1212:
 10818              	.LBE1213:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10819              		.loc 1 106 2 is_stmt 1 view .LVU3335
 10820              	.LBE1214:
 10821              	.LBE1217:
 10822              	.LBE1221:
3127:src/keys.c    **** 	const int g_max = global_regs();
 10823              		.loc 1 3127 31 is_stmt 0 view .LVU3336
 10824 1012 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10825              	.LBB1222:
 10826              	.LBB1218:
 10827              	.LBB1215:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10828              		.loc 1 106 16 view .LVU3337
 10829 1016 0022     		movs	r2, #0
 10830              	.LBE1215:
 10831              	.LBE1218:
ARM GAS  /tmp/cceyv6gL.s 			page 310


 10832              	.LBE1222:
3127:src/keys.c    **** 	const int g_max = global_regs();
 10833              		.loc 1 3127 46 view .LVU3338
 10834 1018 D907     		lsls	r1, r3, #31
 10835              	.LBB1223:
 10836              	.LBB1219:
 10837              	.LBB1216:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10838              		.loc 1 106 16 view .LVU3339
 10839 101a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 10840              		.loc 1 108 2 is_stmt 1 view .LVU3340
 10841              	.LVL912:
 108:src/keys.c    **** }
 10842              		.loc 1 108 2 is_stmt 0 view .LVU3341
 10843              	.LBE1216:
 10844              	.LBE1219:
 10845              	.LBE1223:
3127:src/keys.c    **** 	const int g_max = global_regs();
 10846              		.loc 1 3127 2 is_stmt 1 view .LVU3342
3127:src/keys.c    **** 	const int g_max = global_regs();
 10847              		.loc 1 3127 46 is_stmt 0 view .LVU3343
 10848 101e 00F15F82 		bmi	.L1380
 10849 1022 4FF0700A 		mov	r10, #112
 10850              	.L973:
 10851              	.LVL913:
3128:src/keys.c    **** 
 10852              		.loc 1 3128 2 is_stmt 1 view .LVU3344
3128:src/keys.c    **** 
 10853              		.loc 1 3128 20 is_stmt 0 view .LVU3345
 10854 1026 FFF7FEFF 		bl	global_regs
 10855              	.LVL914:
3130:src/keys.c    **** 		if (local_regs())
 10856              		.loc 1 3130 2 is_stmt 1 view .LVU3346
3130:src/keys.c    **** 		if (local_regs())
 10857              		.loc 1 3130 5 is_stmt 0 view .LVU3347
 10858 102a BBF1700F 		cmp	fp, #112
 10859 102e 00F07683 		beq	.L1381
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10860              		.loc 1 3136 7 is_stmt 1 view .LVU3348
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10861              		.loc 1 3136 10 is_stmt 0 view .LVU3349
 10862 1032 BBF1090F 		cmp	fp, #9
 10863 1036 40F23383 		bls	.L1382
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10864              		.loc 1 3143 7 is_stmt 1 view .LVU3350
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10865              		.loc 1 3143 29 is_stmt 0 view .LVU3351
 10866 103a 09F1FF33 		add	r3, r9, #-1
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10867              		.loc 1 3143 10 view .LVU3352
 10868 103e DBB2     		uxtb	r3, r3
 10869 1040 012B     		cmp	r3, #1
 10870 1042 40F25982 		bls	.L1383
 10871              	.L981:
3147:src/keys.c    **** 		State2.digval = n;
 10872              		.loc 1 3147 7 is_stmt 1 view .LVU3353
ARM GAS  /tmp/cceyv6gL.s 			page 311


3147:src/keys.c    **** 		State2.digval = n;
 10873              		.loc 1 3147 10 is_stmt 0 view .LVU3354
 10874 1046 BBF17F0F 		cmp	fp, #127
 10875 104a 40F01183 		bne	.L1384
3152:src/keys.c    **** 	case K_DOWN:
 10876              		.loc 1 3152 2 is_stmt 1 view .LVU3355
 10877 104e 073C     		subs	r4, r4, #7
 10878              	.LVL915:
3152:src/keys.c    **** 	case K_DOWN:
 10879              		.loc 1 3152 2 is_stmt 0 view .LVU3356
 10880 1050 112C     		cmp	r4, #17
 10881 1052 3FF647AB 		bhi	.L1309
 10882 1056 01A3     		adr	r3, .L1112
 10883 1058 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 10884              		.p2align 2
 10885              	.L1112:
 10886 105c A5100000 		.word	.L994+1
 10887 1060 E5060000 		.word	.L1309+1
 10888 1064 E5060000 		.word	.L1309+1
 10889 1068 E5060000 		.word	.L1309+1
 10890 106c E5060000 		.word	.L1309+1
 10891 1070 63110000 		.word	.L993+1
 10892 1074 E5060000 		.word	.L1309+1
 10893 1078 E5060000 		.word	.L1309+1
 10894 107c E5060000 		.word	.L1309+1
 10895 1080 45110000 		.word	.L991+1
 10896 1084 E5060000 		.word	.L1309+1
 10897 1088 17110000 		.word	.L987+1
 10898 108c E5060000 		.word	.L1309+1
 10899 1090 E5060000 		.word	.L1309+1
 10900 1094 E5060000 		.word	.L1309+1
 10901 1098 E5060000 		.word	.L1309+1
 10902 109c E5060000 		.word	.L1309+1
 10903 10a0 E1100000 		.word	.L984+1
 10904              		.p2align 1
 10905              	.L994:
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10906              		.loc 1 3191 3 is_stmt 1 view .LVU3357
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10907              		.loc 1 3191 6 is_stmt 0 view .LVU3358
 10908 10a4 B9F1000F 		cmp	r9, #0
 10909 10a8 7FF41CAB 		bne	.L1309
3195:src/keys.c    **** #endif
 10910              		.loc 1 3195 4 is_stmt 1 view .LVU3359
3195:src/keys.c    **** #endif
 10911              		.loc 1 3195 8 is_stmt 0 view .LVU3360
 10912 10ac B8F80840 		ldrh	r4, [r8, #8]
 10913              	.LVL916:
3197:src/keys.c    **** 			State2.digval = 0;
 10914              		.loc 1 3197 4 is_stmt 1 view .LVU3361
3197:src/keys.c    **** 			State2.digval = 0;
 10915              		.loc 1 3197 24 is_stmt 0 view .LVU3362
 10916 10b0 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 10917 10b4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3199:src/keys.c    **** 			return n;
 10918              		.loc 1 3199 19 view .LVU3363
 10919 10b8 88F80A90 		strb	r9, [r8, #10]
ARM GAS  /tmp/cceyv6gL.s 			page 312


3200:src/keys.c    **** 		}
 10920              		.loc 1 3200 11 view .LVU3364
 10921 10bc 44F42854 		orr	r4, r4, #10752
 10922              	.LVL917:
3197:src/keys.c    **** 			State2.digval = 0;
 10923              		.loc 1 3197 24 view .LVU3365
 10924 10c0 69F3C303 		bfi	r3, r9, #3, #1
3198:src/keys.c    **** 			State2.digval2 = 0;
 10925              		.loc 1 3198 18 view .LVU3366
 10926 10c4 A8F80890 		strh	r9, [r8, #8]	@ movhi
 10927 10c8 2046     		mov	r0, r4
 10928              	.LVL918:
3197:src/keys.c    **** 			State2.digval = 0;
 10929              		.loc 1 3197 24 view .LVU3367
 10930 10ca 88F81730 		strb	r3, [r8, #23]
3198:src/keys.c    **** 			State2.digval2 = 0;
 10931              		.loc 1 3198 4 is_stmt 1 view .LVU3368
3199:src/keys.c    **** 			return n;
 10932              		.loc 1 3199 4 view .LVU3369
3200:src/keys.c    **** 		}
 10933              		.loc 1 3200 4 view .LVU3370
3200:src/keys.c    **** 		}
 10934              		.loc 1 3200 11 is_stmt 0 view .LVU3371
 10935 10ce FFF7A9B9 		b	.L862
 10936              	.L1410:
 10937 10d2 00BF     		.align	2
 10938              	.L1409:
 10939 10d4 00000000 		.word	.LANCHOR20
 10940 10d8 00000000 		.word	.LANCHOR6
 10941 10dc 00000000 		.word	.LANCHOR5
 10942              	.LVL919:
 10943              	.L984:
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 10944              		.loc 1 3154 3 is_stmt 1 view .LVU3372
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 10945              		.loc 1 3154 13 is_stmt 0 view .LVU3373
 10946 10e0 B8F80830 		ldrh	r3, [r8, #8]
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 10947              		.loc 1 3154 6 view .LVU3374
 10948 10e4 002B     		cmp	r3, #0
 10949 10e6 00F0F885 		beq	.L985
3155:src/keys.c    **** 				State2.digval = global_regs();
 10950              		.loc 1 3155 4 is_stmt 1 view .LVU3375
3155:src/keys.c    **** 				State2.digval = global_regs();
 10951              		.loc 1 3155 8 is_stmt 0 view .LVU3376
 10952 10ea 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3155:src/keys.c    **** 				State2.digval = global_regs();
 10953              		.loc 1 3155 7 view .LVU3377
 10954 10ee D407     		lsls	r4, r2, #31
 10955              	.LVL920:
3155:src/keys.c    **** 				State2.digval = global_regs();
 10956              		.loc 1 3155 7 view .LVU3378
 10957 10f0 02D4     		bmi	.L986
3155:src/keys.c    **** 				State2.digval = global_regs();
 10958              		.loc 1 3155 23 view .LVU3379
 10959 10f2 642B     		cmp	r3, #100
 10960 10f4 00F0F785 		beq	.L1385
ARM GAS  /tmp/cceyv6gL.s 			page 313


 10961              	.LVL921:
 10962              	.L986:
3157:src/keys.c    **** 		}
 10963              		.loc 1 3157 4 is_stmt 1 view .LVU3380
 10964 10f8 B8F80830 		ldrh	r3, [r8, #8]
 10965 10fc 013B     		subs	r3, r3, #1
 10966              	.L1299:
3157:src/keys.c    **** 		}
 10967              		.loc 1 3157 4 is_stmt 0 view .LVU3381
 10968 10fe A8F80830 		strh	r3, [r8, #8]	@ movhi
 10969              	.LVL922:
 10970              	.L977:
3209:src/keys.c    **** 	return STATE_UNFINISHED;
 10971              		.loc 1 3209 2 is_stmt 1 view .LVU3382
3209:src/keys.c    **** 	return STATE_UNFINISHED;
 10972              		.loc 1 3209 16 is_stmt 0 view .LVU3383
 10973 1102 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 10974 1106 3368     		ldr	r3, [r6]
 10975 1108 6FF3C502 		bfc	r2, #3, #3
 10976 110c 88F81420 		strb	r2, [r8, #20]
3210:src/keys.c    **** }
 10977              		.loc 1 3210 2 is_stmt 1 view .LVU3384
3210:src/keys.c    **** }
 10978              		.loc 1 3210 9 is_stmt 0 view .LVU3385
 10979 1110 3324     		movs	r4, #51
 10980 1112 FEF7D0BF 		b	.L801
 10981              	.LVL923:
 10982              	.L987:
3164:src/keys.c    **** 			State2.digval++;
 10983              		.loc 1 3164 3 is_stmt 1 view .LVU3386
3164:src/keys.c    **** 			State2.digval++;
 10984              		.loc 1 3164 13 is_stmt 0 view .LVU3387
 10985 1116 B8F80830 		ldrh	r3, [r8, #8]
3164:src/keys.c    **** 			State2.digval++;
 10986              		.loc 1 3164 27 view .LVU3388
 10987 111a 0AF1FF3A 		add	r10, r10, #-1
 10988              	.LVL924:
3164:src/keys.c    **** 			State2.digval++;
 10989              		.loc 1 3164 6 view .LVU3389
 10990 111e 5345     		cmp	r3, r10
 10991 1120 80F22783 		bge	.L988
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 10992              		.loc 1 3165 4 is_stmt 1 view .LVU3390
3166:src/keys.c    **** 				State2.digval = regX_idx;
 10993              		.loc 1 3166 8 is_stmt 0 view .LVU3391
 10994 1124 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 10995              		.loc 1 3165 17 view .LVU3392
 10996 1128 0133     		adds	r3, r3, #1
 10997 112a 9CB2     		uxth	r4, r3
 10998              	.LVL925:
3166:src/keys.c    **** 				State2.digval = regX_idx;
 10999              		.loc 1 3166 7 view .LVU3393
 11000 112c D007     		lsls	r0, r2, #31
 11001              	.LVL926:
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11002              		.loc 1 3165 17 view .LVU3394
ARM GAS  /tmp/cceyv6gL.s 			page 314


 11003 112e A8F80840 		strh	r4, [r8, #8]	@ movhi
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11004              		.loc 1 3166 4 is_stmt 1 view .LVU3395
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11005              		.loc 1 3166 7 is_stmt 0 view .LVU3396
 11006 1132 E6D4     		bmi	.L977
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11007              		.loc 1 3166 43 view .LVU3397
 11008 1134 FFF7FEFF 		bl	global_regs
 11009              	.LVL927:
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11010              		.loc 1 3166 23 view .LVU3398
 11011 1138 8442     		cmp	r4, r0
 11012 113a E2D1     		bne	.L977
3167:src/keys.c    **** 		}
 11013              		.loc 1 3167 5 is_stmt 1 view .LVU3399
3167:src/keys.c    **** 		}
 11014              		.loc 1 3167 19 is_stmt 0 view .LVU3400
 11015 113c 6423     		movs	r3, #100
 11016 113e A8F80830 		strh	r3, [r8, #8]	@ movhi
 11017 1142 DEE7     		b	.L977
 11018              	.LVL928:
 11019              	.L991:
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11020              		.loc 1 3181 3 is_stmt 1 view .LVU3401
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11021              		.loc 1 3181 7 is_stmt 0 view .LVU3402
 11022 1144 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11023              		.loc 1 3181 6 view .LVU3403
 11024 1148 13F02002 		ands	r2, r3, #32
 11025 114c 7FF4CAAA 		bne	.L1309
3183:src/keys.c    **** 
 11026              		.loc 1 3183 3 is_stmt 1 view .LVU3404
3205:src/keys.c    **** 	State2.digval = 0;
 11027              		.loc 1 3205 2 view .LVU3405
3205:src/keys.c    **** 	State2.digval = 0;
 11028              		.loc 1 3205 22 is_stmt 0 view .LVU3406
 11029 1150 62F3C303 		bfi	r3, r2, #3, #1
 11030 1154 88F81730 		strb	r3, [r8, #23]
3206:src/keys.c    **** 	State2.digval2 = 0;
 11031              		.loc 1 3206 2 is_stmt 1 view .LVU3407
3206:src/keys.c    **** 	State2.digval2 = 0;
 11032              		.loc 1 3206 16 is_stmt 0 view .LVU3408
 11033 1158 A8F80820 		strh	r2, [r8, #8]	@ movhi
3207:src/keys.c    **** reset_window:
 11034              		.loc 1 3207 2 is_stmt 1 view .LVU3409
3207:src/keys.c    **** reset_window:
 11035              		.loc 1 3207 17 is_stmt 0 view .LVU3410
 11036 115c 88F80A20 		strb	r2, [r8, #10]
 11037 1160 CFE7     		b	.L977
 11038              	.L993:
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11039              		.loc 1 3186 3 is_stmt 1 view .LVU3411
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11040              		.loc 1 3186 6 is_stmt 0 view .LVU3412
 11041 1162 B9F1010F 		cmp	r9, #1
ARM GAS  /tmp/cceyv6gL.s 			page 315


 11042 1166 9DD1     		bne	.L994
3187:src/keys.c    **** 			goto reset_window;
 11043              		.loc 1 3187 4 is_stmt 1 view .LVU3413
3187:src/keys.c    **** 			goto reset_window;
 11044              		.loc 1 3187 25 is_stmt 0 view .LVU3414
 11045 1168 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11046 116c 43F00403 		orr	r3, r3, #4
 11047 1170 88F81630 		strb	r3, [r8, #22]
3188:src/keys.c    **** 		}
 11048              		.loc 1 3188 4 is_stmt 1 view .LVU3415
 11049 1174 C5E7     		b	.L977
 11050              	.LVL929:
 11051              	.L856:
3188:src/keys.c    **** 		}
 11052              		.loc 1 3188 4 is_stmt 0 view .LVU3416
 11053              	.LBE1227:
 11054              	.LBE1235:
 11055              	.LBB1236:
 11056              	.LBB1038:
1622:src/keys.c    **** #endif
 11057              		.loc 1 1622 4 is_stmt 1 view .LVU3417
1622:src/keys.c    **** #endif
 11058              		.loc 1 1622 18 view .LVU3418
1622:src/keys.c    **** #endif
 11059              		.loc 1 1622 18 is_stmt 0 view .LVU3419
 11060 1176 8BF0010B 		eor	fp, fp, #1
 11061              	.LVL930:
1622:src/keys.c    **** #endif
 11062              		.loc 1 1622 18 view .LVU3420
 11063 117a FFF7C6BB 		b	.L863
 11064              	.LVL931:
 11065              	.L1358:
1622:src/keys.c    **** #endif
 11066              		.loc 1 1622 18 view .LVU3421
 11067              	.LBE1038:
 11068              	.LBE1236:
 11069              	.LBB1237:
 11070              	.LBB1019:
1721:src/keys.c    **** #endif
 11071              		.loc 1 1721 44 is_stmt 1 view .LVU3422
1721:src/keys.c    **** #endif
 11072              		.loc 1 1721 52 is_stmt 0 view .LVU3423
 11073 117e 0420     		movs	r0, #4
 11074 1180 FFF7FEFF 		bl	gtodot_digit
 11075              	.LVL932:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11076              		.loc 1 1764 2 is_stmt 1 view .LVU3424
 11077              	.LBE1019:
 11078              	.LBE1237:
3285:src/keys.c    **** 
 11079              		.loc 1 3285 10 is_stmt 0 view .LVU3425
 11080 1184 3324     		movs	r4, #51
 11081              	.LVL933:
3285:src/keys.c    **** 
 11082              		.loc 1 3285 10 view .LVU3426
 11083 1186 3368     		ldr	r3, [r6]
 11084 1188 FEF795BF 		b	.L801
ARM GAS  /tmp/cceyv6gL.s 			page 316


 11085              	.LVL934:
 11086              	.L1359:
 11087              	.LBB1238:
 11088              	.LBB1020:
1725:src/keys.c    **** 		goto fin;
 11089              		.loc 1 1725 3 is_stmt 1 view .LVU3427
 11090              	.LBB1013:
 11091              	.LBI1013:
1697:src/keys.c    **** 	const int code = 100 + n;
 11092              		.loc 1 1697 12 view .LVU3428
 11093              	.LBB1014:
1698:src/keys.c    **** 	unsigned int pc = state_pc();
 11094              		.loc 1 1698 2 view .LVU3429
1699:src/keys.c    **** 
 11095              		.loc 1 1699 2 view .LVU3430
1699:src/keys.c    **** 
 11096              		.loc 1 1699 20 is_stmt 0 view .LVU3431
 11097 118c DFF864A3 		ldr	r10, .L1411+12
 11098 1190 DAF80030 		ldr	r3, [r10]
 11099              	.LVL935:
1699:src/keys.c    **** 
 11100              		.loc 1 1699 15 view .LVU3432
 11101 1194 B3F8E007 		ldrh	r0, [r3, #2016]
 11102              	.LVL936:
1701:src/keys.c    **** 		pc = 1;
 11103              		.loc 1 1701 2 is_stmt 1 view .LVU3433
1701:src/keys.c    **** 		pc = 1;
 11104              		.loc 1 1701 5 is_stmt 0 view .LVU3434
 11105 1198 830B     		lsrs	r3, r0, #14
1702:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11106              		.loc 1 1702 6 view .LVU3435
 11107 119a 032B     		cmp	r3, #3
 11108              	.LVL937:
1703:src/keys.c    **** 	if (pc > 0)
 11109              		.loc 1 1703 2 is_stmt 1 view .LVU3436
1703:src/keys.c    **** 	if (pc > 0)
 11110              		.loc 1 1703 7 is_stmt 0 view .LVU3437
 11111 119c 08BF     		it	eq
 11112 119e 0120     		moveq	r0, #1
 11113              	.LVL938:
1703:src/keys.c    **** 	if (pc > 0)
 11114              		.loc 1 1703 7 view .LVU3438
 11115 11a0 04F16401 		add	r1, r4, #100
 11116              	.LVL939:
1703:src/keys.c    **** 	if (pc > 0)
 11117              		.loc 1 1703 7 view .LVU3439
 11118 11a4 0322     		movs	r2, #3
 11119              	.LVL940:
1703:src/keys.c    **** 	if (pc > 0)
 11120              		.loc 1 1703 7 view .LVU3440
 11121 11a6 FFF7FEFF 		bl	find_label_from
 11122              	.LVL941:
1704:src/keys.c    **** 		return pc;
 11123              		.loc 1 1704 2 is_stmt 1 view .LVU3441
1704:src/keys.c    **** 		return pc;
 11124              		.loc 1 1704 5 is_stmt 0 view .LVU3442
 11125 11aa 0028     		cmp	r0, #0
ARM GAS  /tmp/cceyv6gL.s 			page 317


 11126 11ac 7FF463AB 		bne	.L847
1706:src/keys.c    **** }
 11127              		.loc 1 1706 2 is_stmt 1 view .LVU3443
1706:src/keys.c    **** }
 11128              		.loc 1 1706 9 is_stmt 0 view .LVU3444
 11129 11b0 DAF80030 		ldr	r3, [r10]
 11130 11b4 B3F8E007 		ldrh	r0, [r3, #2016]
 11131              	.LVL942:
1706:src/keys.c    **** }
 11132              		.loc 1 1706 9 view .LVU3445
 11133              	.LBE1014:
 11134              	.LBE1013:
1726:src/keys.c    **** 	}
 11135              		.loc 1 1726 3 is_stmt 1 view .LVU3446
 11136 11b8 FFF75DBB 		b	.L847
 11137              	.LVL943:
 11138              	.L1361:
1735:src/keys.c    **** 	}
 11139              		.loc 1 1735 3 view .LVU3447
1735:src/keys.c    **** 	}
 11140              		.loc 1 1735 6 is_stmt 0 view .LVU3448
 11141 11bc B8F80800 		ldrh	r0, [r8, #8]
 11142              	.LVL944:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11143              		.loc 1 1764 2 is_stmt 1 view .LVU3449
 11144 11c0 73E4     		b	.L838
 11145              	.LVL945:
 11146              	.L1141:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11147              		.loc 1 1764 2 is_stmt 0 view .LVU3450
 11148              	.LBE1020:
 11149              	.LBE1238:
 11150              	.LBB1239:
 11151              	.LBB841:
 11152              	.LBB831:
 371:src/keys.c    **** #ifndef WINGUI
 11153              		.loc 1 371 8 view .LVU3451
 11154 11c2 C94B     		ldr	r3, .L1411
 377:src/keys.c    ****   }
 11155              		.loc 1 377 9 view .LVU3452
 11156 11c4 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 11157              		.loc 1 373 27 view .LVU3453
 11158 11c6 4FF0010C 		mov	ip, #1
 11159 11ca FFF74CB8 		b	.L916
 11160              	.LVL946:
 11161              	.L1341:
 373:src/keys.c    **** #else
 11162              		.loc 1 373 27 view .LVU3454
 11163              	.LBE831:
 11164              	.LBE841:
 11165              	.LBE1239:
3346:src/keys.c    **** 
 11166              		.loc 1 3346 3 is_stmt 1 view .LVU3455
 11167              	.LBB1240:
 11168              	.LBI1240:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
ARM GAS  /tmp/cceyv6gL.s 			page 318


 11169              		.loc 1 114 13 view .LVU3456
 11170              	.LBE1240:
 11171              	.LBE1409:
 11172              	.LBE1482:
 115:src/keys.c    **** }
 11173              		.loc 1 115 2 view .LVU3457
 11174              	.LBB1483:
 11175              	.LBB1410:
 11176              	.LBB1247:
 11177              	.LBB1241:
 11178              	.LBI1241:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11179              		.loc 1 104 20 view .LVU3458
 11180              	.LBB1242:
 105:src/keys.c    **** 	State2.shifts = shift;
 11181              		.loc 1 105 2 view .LVU3459
 11182              	.LBB1243:
 11183              	.LBI1243:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11184              		.loc 1 96 13 view .LVU3460
 11185              	.LBB1244:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11186              		.loc 1 97 2 view .LVU3461
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11187              		.loc 1 97 18 is_stmt 0 view .LVU3462
 11188 11ce FFF7FEFF 		bl	shift_down
 11189              	.LVL947:
  98:src/keys.c    **** }
 11190              		.loc 1 98 2 is_stmt 1 view .LVU3463
  98:src/keys.c    **** }
 11191              		.loc 1 98 52 is_stmt 0 view .LVU3464
 11192 11d2 0146     		mov	r1, r0
 11193 11d4 08B9     		cbnz	r0, .L997
 11194 11d6 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11195              	.L997:
 11196              	.LVL948:
  98:src/keys.c    **** }
 11197              		.loc 1 98 52 view .LVU3465
 11198              	.LBE1244:
 11199              	.LBE1243:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11200              		.loc 1 106 2 is_stmt 1 view .LVU3466
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11201              		.loc 1 106 16 is_stmt 0 view .LVU3467
 11202 11da 0022     		movs	r2, #0
 11203              	.LBE1242:
 11204              	.LBE1241:
 11205              	.LBE1247:
3346:src/keys.c    **** 
 11206              		.loc 1 3346 10 view .LVU3468
 11207 11dc 2046     		mov	r0, r4
 11208              	.LBB1248:
 11209              	.LBB1246:
 11210              	.LBB1245:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11211              		.loc 1 106 16 view .LVU3469
 11212 11de 88F81020 		strb	r2, [r8, #16]
ARM GAS  /tmp/cceyv6gL.s 			page 319


 108:src/keys.c    **** }
 11213              		.loc 1 108 2 is_stmt 1 view .LVU3470
 11214              	.LVL949:
 108:src/keys.c    **** }
 11215              		.loc 1 108 2 is_stmt 0 view .LVU3471
 11216              	.LBE1245:
 11217              	.LBE1246:
 11218              	.LBE1248:
3346:src/keys.c    **** 
 11219              		.loc 1 3346 10 view .LVU3472
 11220 11e2 FFF7FEFF 		bl	process_catalogue
 11221              	.LVL950:
3346:src/keys.c    **** 
 11222              		.loc 1 3346 10 view .LVU3473
 11223 11e6 0446     		mov	r4, r0
 11224 11e8 FFF7FAB8 		b	.L835
 11225              	.LVL951:
 11226              	.L1165:
 11227              	.LBB1249:
 11228              	.LBB1003:
2373:src/keys.c    **** 	}
 11229              		.loc 1 2373 18 view .LVU3474
 11230 11ec 2724     		movs	r4, #39
 11231              	.LVL952:
2373:src/keys.c    **** 	}
 11232              		.loc 1 2373 47 view .LVU3475
 11233 11ee 1C44     		add	r4, r4, r3
 11234 11f0 FFF7F6B8 		b	.L835
 11235              	.LVL953:
 11236              	.L1166:
2373:src/keys.c    **** 	}
 11237              		.loc 1 2373 18 view .LVU3476
 11238 11f4 1E24     		movs	r4, #30
 11239              	.LVL954:
2373:src/keys.c    **** 	}
 11240              		.loc 1 2373 47 view .LVU3477
 11241 11f6 1C44     		add	r4, r4, r3
 11242 11f8 FFF7F2B8 		b	.L835
 11243              	.LVL955:
 11244              	.L1350:
2373:src/keys.c    **** 	}
 11245              		.loc 1 2373 47 view .LVU3478
 11246              	.LBE1003:
 11247              	.LBE1249:
 11248              	.LBB1250:
 11249              	.LBB842:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11250              		.loc 1 294 27 view .LVU3479
 11251 11fc 242C     		cmp	r4, #36
 11252 11fe 7FF43EA8 		bne	.L921
 11253              	.L1140:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11254              		.loc 1 295 11 view .LVU3480
 11255 1202 1623     		movs	r3, #22
 11256 1204 FFF760BA 		b	.L904
 11257              	.LVL956:
 11258              	.L1366:
ARM GAS  /tmp/cceyv6gL.s 			page 320


 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11259              		.loc 1 295 11 view .LVU3481
 11260              	.LBE842:
 11261              	.LBE1250:
 11262              	.LBB1251:
 11263              	.LBB1059:
2927:src/keys.c    **** 		return STATE_UNFINISHED;
 11264              		.loc 1 2927 3 is_stmt 1 view .LVU3482
 11265 1208 3368     		ldr	r3, [r6]
 11266              	.LVL957:
2927:src/keys.c    **** 		return STATE_UNFINISHED;
 11267              		.loc 1 2927 17 is_stmt 0 view .LVU3483
 11268 120a 88F80C00 		strb	r0, [r8, #12]
2928:src/keys.c    **** 	} 
 11269              		.loc 1 2928 3 is_stmt 1 view .LVU3484
 11270              	.LBE1059:
 11271              	.LBE1251:
3294:src/keys.c    **** 
 11272              		.loc 1 3294 10 is_stmt 0 view .LVU3485
 11273 120e 3324     		movs	r4, #51
 11274              	.LVL958:
 11275              	.LBB1252:
 11276              	.LBB1060:
2928:src/keys.c    **** 	} 
 11277              		.loc 1 2928 10 view .LVU3486
 11278 1210 FEF751BF 		b	.L801
 11279              	.LVL959:
 11280              	.L1342:
2928:src/keys.c    **** 	} 
 11281              		.loc 1 2928 10 view .LVU3487
 11282              	.LBE1060:
 11283              	.LBE1252:
3350:src/keys.c    **** #else
 11284              		.loc 1 3350 3 is_stmt 1 view .LVU3488
 11285              	.LBB1253:
 11286              	.LBI1253:
1777:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11287              		.loc 1 1777 12 view .LVU3489
 11288              	.LBB1254:
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11289              		.loc 1 1778 2 view .LVU3490
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11290              		.loc 1 1778 33 is_stmt 0 view .LVU3491
 11291 1214 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 11292              	.LBB1255:
 11293              	.LBB1256:
 11294              	.LBB1257:
 11295              	.LBB1258:
 11296              	.LBB1259:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11297              		.loc 1 97 18 view .LVU3492
 11298 1218 FFF7FEFF 		bl	shift_down
 11299              	.LVL960:
 11300              	.LBE1259:
 11301              	.LBE1258:
 11302              	.LBE1257:
 11303              	.LBE1256:
ARM GAS  /tmp/cceyv6gL.s 			page 321


 11304              	.LBE1255:
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11305              		.loc 1 1778 15 view .LVU3493
 11306 121c CA46     		mov	r10, r9
 11307              	.LVL961:
1779:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11308              		.loc 1 1779 9 is_stmt 1 view .LVU3494
1780:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11309              		.loc 1 1780 2 view .LVU3495
 11310              	.LBB1268:
 11311              	.LBI1255:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11312              		.loc 1 114 13 view .LVU3496
 11313              	.LBE1268:
 11314              	.LBE1254:
 11315              	.LBE1253:
 11316              	.LBE1410:
 11317              	.LBE1483:
 115:src/keys.c    **** }
 11318              		.loc 1 115 2 view .LVU3497
 11319              	.LBB1484:
 11320              	.LBB1411:
 11321              	.LBB1318:
 11322              	.LBB1306:
 11323              	.LBB1269:
 11324              	.LBB1265:
 11325              	.LBI1256:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11326              		.loc 1 104 20 view .LVU3498
 11327              	.LBB1262:
 105:src/keys.c    **** 	State2.shifts = shift;
 11328              		.loc 1 105 2 view .LVU3499
 11329              	.LBB1261:
 11330              	.LBI1258:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11331              		.loc 1 96 13 view .LVU3500
 11332              	.LBB1260:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11333              		.loc 1 97 2 view .LVU3501
  98:src/keys.c    **** }
 11334              		.loc 1 98 2 view .LVU3502
  98:src/keys.c    **** }
 11335              		.loc 1 98 52 is_stmt 0 view .LVU3503
 11336 121e 08B9     		cbnz	r0, .L999
 11337 1220 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 11338              	.LVL962:
 11339              	.L999:
  98:src/keys.c    **** }
 11340              		.loc 1 98 52 view .LVU3504
 11341              	.LBE1260:
 11342              	.LBE1261:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11343              		.loc 1 106 2 is_stmt 1 view .LVU3505
 11344              	.LBE1262:
 11345              	.LBE1265:
 11346              	.LBE1269:
 11347              	.LBB1270:
ARM GAS  /tmp/cceyv6gL.s 			page 322


 11348              	.LBB1271:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11349              		.loc 1 485 6 is_stmt 0 view .LVU3506
 11350 1224 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 11351              	.LBE1271:
 11352              	.LBE1270:
 11353              	.LBB1287:
 11354              	.LBB1266:
 11355              	.LBB1263:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11356              		.loc 1 106 16 view .LVU3507
 11357 1228 4FF0000C 		mov	ip, #0
 11358              	.LBE1263:
 11359              	.LBE1266:
 11360              	.LBE1287:
 11361              	.LBB1288:
 11362              	.LBB1282:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11363              		.loc 1 485 5 view .LVU3508
 11364 122c CA06     		lsls	r2, r1, #27
 11365              	.LBE1282:
 11366              	.LBE1288:
 11367              	.LBB1289:
 11368              	.LBB1267:
 11369              	.LBB1264:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11370              		.loc 1 106 16 view .LVU3509
 11371 122e 88F810C0 		strb	ip, [r8, #16]
 108:src/keys.c    **** }
 11372              		.loc 1 108 2 is_stmt 1 view .LVU3510
 11373              	.LVL963:
 108:src/keys.c    **** }
 11374              		.loc 1 108 2 is_stmt 0 view .LVU3511
 11375              	.LBE1264:
 11376              	.LBE1267:
 11377              	.LBE1289:
1781:src/keys.c    **** 	State2.alpha_pos = 0;
 11378              		.loc 1 1781 2 is_stmt 1 view .LVU3512
1781:src/keys.c    **** 	State2.alpha_pos = 0;
 11379              		.loc 1 1781 11 is_stmt 0 view .LVU3513
 11380 1232 0346     		mov	r3, r0
 11381              	.LVL964:
 11382              	.LBB1290:
 11383              	.LBI1270:
 435:src/keys.c    **** {
 11384              		.loc 1 435 12 is_stmt 1 view .LVU3514
 11385              	.LBB1283:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11386              		.loc 1 437 2 view .LVU3515
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11387              		.loc 1 485 2 view .LVU3516
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11388              		.loc 1 485 5 is_stmt 0 view .LVU3517
 11389 1234 54D5     		bpl	.L1000
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11390              		.loc 1 486 3 is_stmt 1 view .LVU3518
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
ARM GAS  /tmp/cceyv6gL.s 			page 323


 11391              		.loc 1 486 6 is_stmt 0 view .LVU3519
 11392 1236 0028     		cmp	r0, #0
 11393 1238 51D0     		beq	.L1154
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11394              		.loc 1 488 8 is_stmt 1 view .LVU3520
 11395              	.LBB1272:
 11396              	.LBB1273:
 143:src/keys.c    **** }
 11397              		.loc 1 143 23 is_stmt 0 view .LVU3521
 11398 123a AC4A     		ldr	r2, .L1411+4
 11399              	.LBE1273:
 11400              	.LBE1272:
 491:src/keys.c    **** }
 11401              		.loc 1 491 49 view .LVU3522
 11402 123c AC4B     		ldr	r3, .L1411+8
 11403              	.LBB1278:
 11404              	.LBB1274:
 143:src/keys.c    **** }
 11405              		.loc 1 143 23 view .LVU3523
 11406 123e 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11407              	.LBE1274:
 11408              	.LBE1278:
 11409              	.LBE1283:
 11410              	.LBE1290:
1782:src/keys.c    **** 
 11411              		.loc 1 1782 19 view .LVU3524
 11412 1240 88F80DC0 		strb	ip, [r8, #13]
 11413              	.LBB1291:
 11414              	.LBB1284:
 489:src/keys.c    **** 	}
 11415              		.loc 1 489 10 view .LVU3525
 11416 1244 0228     		cmp	r0, #2
 491:src/keys.c    **** }
 11417              		.loc 1 491 49 view .LVU3526
 11418 1246 4FF0060C 		mov	ip, #6
 11419 124a 0CFB0232 		mla	r2, ip, r2, r3
 489:src/keys.c    **** 	}
 11420              		.loc 1 489 10 view .LVU3527
 11421 124e 14BF     		ite	ne
 11422 1250 0346     		movne	r3, r0
 11423 1252 0523     		moveq	r3, #5
 11424              	.LVL965:
 491:src/keys.c    **** }
 11425              		.loc 1 491 2 is_stmt 1 view .LVU3528
 11426              	.LBB1279:
 11427              	.LBI1272:
 131:src/keys.c    **** {
 11428              		.loc 1 131 12 view .LVU3529
 11429              	.LBB1275:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11430              		.loc 1 133 2 view .LVU3530
 143:src/keys.c    **** }
 11431              		.loc 1 143 2 view .LVU3531
 143:src/keys.c    **** }
 11432              		.loc 1 143 2 is_stmt 0 view .LVU3532
 11433 1254 063C     		subs	r4, r4, #6
 11434              	.LVL966:
ARM GAS  /tmp/cceyv6gL.s 			page 324


 143:src/keys.c    **** }
 11435              		.loc 1 143 2 view .LVU3533
 11436              	.LBE1275:
 11437              	.LBE1279:
 491:src/keys.c    **** }
 11438              		.loc 1 491 49 view .LVU3534
 11439 1256 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11440              	.LVL967:
 491:src/keys.c    **** }
 11441              		.loc 1 491 49 view .LVU3535
 11442              	.LBE1284:
 11443              	.LBE1291:
1782:src/keys.c    **** 
 11444              		.loc 1 1782 2 is_stmt 1 view .LVU3536
1784:src/keys.c    **** 	case K10:	// STO
 11445              		.loc 1 1784 2 view .LVU3537
 11446 1258 212C     		cmp	r4, #33
 11447 125a 23D8     		bhi	.L1003
 11448 125c DFE814F0 		tbh	[pc, r4, lsl #1]
 11449              	.L1113:
 11450 1260 E402     		.2byte	(.L1012-.L1113)/2
 11451 1262 A802     		.2byte	(.L1011-.L1113)/2
 11452 1264 2200     		.2byte	(.L1003-.L1113)/2
 11453 1266 2200     		.2byte	(.L1003-.L1113)/2
 11454 1268 2200     		.2byte	(.L1003-.L1113)/2
 11455 126a 2200     		.2byte	(.L1003-.L1113)/2
 11456 126c BB02     		.2byte	(.L1010-.L1113)/2
 11457 126e 2200     		.2byte	(.L1003-.L1113)/2
 11458 1270 2200     		.2byte	(.L1003-.L1113)/2
 11459 1272 2200     		.2byte	(.L1003-.L1113)/2
 11460 1274 7D02     		.2byte	(.L1019-.L1113)/2
 11461 1276 2200     		.2byte	(.L1003-.L1113)/2
 11462 1278 2C05     		.2byte	(.L1008-.L1113)/2
 11463 127a 2200     		.2byte	(.L1003-.L1113)/2
 11464 127c 2200     		.2byte	(.L1003-.L1113)/2
 11465 127e 2200     		.2byte	(.L1003-.L1113)/2
 11466 1280 2200     		.2byte	(.L1003-.L1113)/2
 11467 1282 2200     		.2byte	(.L1003-.L1113)/2
 11468 1284 1A05     		.2byte	(.L1007-.L1113)/2
 11469 1286 2200     		.2byte	(.L1003-.L1113)/2
 11470 1288 2200     		.2byte	(.L1003-.L1113)/2
 11471 128a 2200     		.2byte	(.L1003-.L1113)/2
 11472 128c 2200     		.2byte	(.L1003-.L1113)/2
 11473 128e 2200     		.2byte	(.L1003-.L1113)/2
 11474 1290 2200     		.2byte	(.L1003-.L1113)/2
 11475 1292 2200     		.2byte	(.L1003-.L1113)/2
 11476 1294 2200     		.2byte	(.L1003-.L1113)/2
 11477 1296 2200     		.2byte	(.L1003-.L1113)/2
 11478 1298 2200     		.2byte	(.L1003-.L1113)/2
 11479 129a 2200     		.2byte	(.L1003-.L1113)/2
 11480 129c 0405     		.2byte	(.L1006-.L1113)/2
 11481 129e 2200     		.2byte	(.L1003-.L1113)/2
 11482 12a0 2200     		.2byte	(.L1003-.L1113)/2
 11483 12a2 F804     		.2byte	(.L1004-.L1113)/2
 11484              	.LVL968:
 11485              		.p2align 1
 11486              	.L1003:
ARM GAS  /tmp/cceyv6gL.s 			page 325


1891:src/keys.c    **** 		return STATE_UNFINISHED;
 11487              		.loc 1 1891 2 view .LVU3538
1891:src/keys.c    **** 		return STATE_UNFINISHED;
 11488              		.loc 1 1891 5 is_stmt 0 view .LVU3539
 11489 12a4 002A     		cmp	r2, #0
 11490 12a6 3FF4D7AB 		beq	.L1307
1893:src/keys.c    **** }
 11491              		.loc 1 1893 2 is_stmt 1 view .LVU3540
1893:src/keys.c    **** }
 11492              		.loc 1 1893 9 is_stmt 0 view .LVU3541
 11493 12aa 42F48844 		orr	r4, r2, #17408
 11494 12ae 2046     		mov	r0, r4
 11495              	.LVL969:
1893:src/keys.c    **** }
 11496              		.loc 1 1893 9 view .LVU3542
 11497 12b0 FFF7B8B8 		b	.L862
 11498              	.LVL970:
 11499              	.L1360:
1893:src/keys.c    **** }
 11500              		.loc 1 1893 9 view .LVU3543
 11501              	.LBE1306:
 11502              	.LBE1318:
 11503              	.LBB1319:
 11504              	.LBB1021:
1730:src/keys.c    **** 		goto fin;
 11505              		.loc 1 1730 3 is_stmt 1 view .LVU3544
1730:src/keys.c    **** 		goto fin;
 11506              		.loc 1 1730 11 is_stmt 0 view .LVU3545
 11507 12b4 8F4B     		ldr	r3, .L1411+12
 11508              	.LVL971:
1730:src/keys.c    **** 		goto fin;
 11509              		.loc 1 1730 11 view .LVU3546
 11510 12b6 1B68     		ldr	r3, [r3]
1730:src/keys.c    **** 		goto fin;
 11511              		.loc 1 1730 9 view .LVU3547
 11512 12b8 5888     		ldrh	r0, [r3, #2]
 11513              	.LVL972:
1731:src/keys.c    **** 	}
 11514              		.loc 1 1731 3 is_stmt 1 view .LVU3548
 11515 12ba FFF7DCBA 		b	.L847
 11516              	.LVL973:
 11517              	.L1037:
1731:src/keys.c    **** 	}
 11518              		.loc 1 1731 3 is_stmt 0 view .LVU3549
 11519              	.LBE1021:
 11520              	.LBE1319:
 11521              	.LBB1320:
 11522              	.LBB937:
1300:src/keys.c    ****      return process_fg_shifted (c);
 11523              		.loc 1 1300 4 is_stmt 1 view .LVU3550
1300:src/keys.c    ****      return process_fg_shifted (c);
 11524              		.loc 1 1300 7 is_stmt 0 view .LVU3551
 11525 12be 631F     		subs	r3, r4, #5
 11526 12c0 032B     		cmp	r3, #3
 11527 12c2 40F20781 		bls	.L1301
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 11528              		.loc 1 1304 4 is_stmt 1 view .LVU3552
ARM GAS  /tmp/cceyv6gL.s 			page 326


1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 11529              		.loc 1 1304 7 is_stmt 0 view .LVU3553
 11530 12c6 0F2C     		cmp	r4, #15
 11531 12c8 40F00483 		bne	.L1295
 11532              	.L1118:
 11533              	.LVL974:
1331:src/keys.c    ****      switch (c) {
 11534              		.loc 1 1331 6 is_stmt 1 view .LVU3554
 11535 12cc 0020     		movs	r0, #0
 11536 12ce FFF7FEFF 		bl	finish_cpx_entry
 11537              	.LVL975:
1332:src/keys.c    ****      case (K60):
 11538              		.loc 1 1332 6 view .LVU3555
 11539              	.L1303:
1332:src/keys.c    ****      case (K60):
 11540              		.loc 1 1332 6 is_stmt 0 view .LVU3556
 11541              	.LBE937:
 11542              	.LBE1320:
3366:src/keys.c    **** 	} else {
 11543              		.loc 1 3366 3 is_stmt 1 view .LVU3557
3366:src/keys.c    **** 	} else {
 11544              		.loc 1 3366 10 is_stmt 0 view .LVU3558
 11545 12d2 2046     		mov	r0, r4
 11546              	.L1302:
 11547 12d4 FFF7FEFF 		bl	process_cmplx
 11548              	.LVL976:
 11549 12d8 0446     		mov	r4, r0
 11550 12da FFF781B8 		b	.L835
 11551              	.LVL977:
 11552              	.L1154:
 11553              	.LBB1321:
 11554              	.LBB1307:
 11555              	.LBB1292:
 11556              	.LBB1285:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11557              		.loc 1 487 10 view .LVU3559
 11558 12de 0423     		movs	r3, #4
 11559              	.L1000:
 11560              	.LVL978:
 491:src/keys.c    **** }
 11561              		.loc 1 491 2 is_stmt 1 view .LVU3560
 11562              	.LBB1280:
 131:src/keys.c    **** {
 11563              		.loc 1 131 12 view .LVU3561
 11564              	.LBB1276:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11565              		.loc 1 133 2 view .LVU3562
 143:src/keys.c    **** }
 11566              		.loc 1 143 2 view .LVU3563
 143:src/keys.c    **** }
 11567              		.loc 1 143 23 is_stmt 0 view .LVU3564
 11568 12e0 824A     		ldr	r2, .L1411+4
 11569              	.LBE1276:
 11570              	.LBE1280:
 491:src/keys.c    **** }
 11571              		.loc 1 491 49 view .LVU3565
 11572 12e2 DFF80CC2 		ldr	ip, .L1411+8
ARM GAS  /tmp/cceyv6gL.s 			page 327


 11573              	.LBB1281:
 11574              	.LBB1277:
 143:src/keys.c    **** }
 11575              		.loc 1 143 23 view .LVU3566
 11576 12e6 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11577              	.LBE1277:
 11578              	.LBE1281:
 491:src/keys.c    **** }
 11579              		.loc 1 491 49 view .LVU3567
 11580 12e8 4FF0060E 		mov	lr, #6
 11581 12ec 0EFB02C2 		mla	r2, lr, r2, ip
 11582 12f0 063C     		subs	r4, r4, #6
 11583              	.LVL979:
 491:src/keys.c    **** }
 11584              		.loc 1 491 49 view .LVU3568
 11585              	.LBE1285:
 11586              	.LBE1292:
1782:src/keys.c    **** 
 11587              		.loc 1 1782 19 view .LVU3569
 11588 12f2 4FF0000C 		mov	ip, #0
 11589              	.LBB1293:
 11590              	.LBB1286:
 491:src/keys.c    **** }
 11591              		.loc 1 491 49 view .LVU3570
 11592 12f6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11593              	.LVL980:
 491:src/keys.c    **** }
 11594              		.loc 1 491 49 view .LVU3571
 11595              	.LBE1286:
 11596              	.LBE1293:
1782:src/keys.c    **** 
 11597              		.loc 1 1782 2 is_stmt 1 view .LVU3572
1782:src/keys.c    **** 
 11598              		.loc 1 1782 19 is_stmt 0 view .LVU3573
 11599 12f8 88F80DC0 		strb	ip, [r8, #13]
1784:src/keys.c    **** 	case K10:	// STO
 11600              		.loc 1 1784 2 is_stmt 1 view .LVU3574
 11601 12fc 212C     		cmp	r4, #33
 11602 12fe D1D8     		bhi	.L1003
 11603 1300 01A3     		adr	r3, .L1005
 11604 1302 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11605 1306 00BF     		.p2align 2
 11606              	.L1005:
 11607 1308 29180000 		.word	.L1012+1
 11608 130c B1170000 		.word	.L1011+1
 11609 1310 A5120000 		.word	.L1003+1
 11610 1314 A5120000 		.word	.L1003+1
 11611 1318 A5120000 		.word	.L1003+1
 11612 131c A5120000 		.word	.L1003+1
 11613 1320 D7170000 		.word	.L1010+1
 11614 1324 A5120000 		.word	.L1003+1
 11615 1328 A5120000 		.word	.L1003+1
 11616 132c A5120000 		.word	.L1003+1
 11617 1330 55170000 		.word	.L1009+1
 11618 1334 A5120000 		.word	.L1003+1
 11619 1338 B91C0000 		.word	.L1008+1
 11620 133c A5120000 		.word	.L1003+1
ARM GAS  /tmp/cceyv6gL.s 			page 328


 11621 1340 A5120000 		.word	.L1003+1
 11622 1344 A5120000 		.word	.L1003+1
 11623 1348 A5120000 		.word	.L1003+1
 11624 134c A5120000 		.word	.L1003+1
 11625 1350 951C0000 		.word	.L1007+1
 11626 1354 A5120000 		.word	.L1003+1
 11627 1358 A5120000 		.word	.L1003+1
 11628 135c A5120000 		.word	.L1003+1
 11629 1360 A5120000 		.word	.L1003+1
 11630 1364 A5120000 		.word	.L1003+1
 11631 1368 A5120000 		.word	.L1003+1
 11632 136c A5120000 		.word	.L1003+1
 11633 1370 A5120000 		.word	.L1003+1
 11634 1374 A5120000 		.word	.L1003+1
 11635 1378 A5120000 		.word	.L1003+1
 11636 137c A5120000 		.word	.L1003+1
 11637 1380 691C0000 		.word	.L1006+1
 11638 1384 A5120000 		.word	.L1003+1
 11639 1388 A5120000 		.word	.L1003+1
 11640 138c 511C0000 		.word	.L1004+1
 11641              	.LVL981:
 11642              		.p2align 1
 11643              	.L1362:
1784:src/keys.c    **** 	case K10:	// STO
 11644              		.loc 1 1784 2 is_stmt 0 view .LVU3575
 11645              	.LBE1307:
 11646              	.LBE1321:
 11647              	.LBB1322:
 11648              	.LBB1022:
1739:src/keys.c    **** 			goto fin2;
 11649              		.loc 1 1739 3 is_stmt 1 view .LVU3576
1739:src/keys.c    **** 			goto fin2;
 11650              		.loc 1 1739 13 is_stmt 0 view .LVU3577
 11651 1390 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11652              	.LVL982:
1739:src/keys.c    **** 			goto fin2;
 11653              		.loc 1 1739 6 view .LVU3578
 11654 1394 002B     		cmp	r3, #0
 11655 1396 3FF470AA 		beq	.L851
1742:src/keys.c    **** 			State2.digval /= 10;
 11656              		.loc 1 1742 4 is_stmt 1 view .LVU3579
1742:src/keys.c    **** 			State2.digval /= 10;
 11657              		.loc 1 1742 19 is_stmt 0 view .LVU3580
 11658 139a 013B     		subs	r3, r3, #1
1743:src/keys.c    **** 		}
 11659              		.loc 1 1743 18 view .LVU3581
 11660 139c B8F80820 		ldrh	r2, [r8, #8]
 11661              	.LVL983:
1742:src/keys.c    **** 			State2.digval /= 10;
 11662              		.loc 1 1742 19 view .LVU3582
 11663 13a0 88F80B30 		strb	r3, [r8, #11]
1743:src/keys.c    **** 		}
 11664              		.loc 1 1743 4 is_stmt 1 view .LVU3583
1743:src/keys.c    **** 		}
 11665              		.loc 1 1743 18 is_stmt 0 view .LVU3584
 11666 13a4 0A21     		movs	r1, #10
 11667 13a6 3368     		ldr	r3, [r6]
ARM GAS  /tmp/cceyv6gL.s 			page 329


 11668 13a8 B2FBF1F2 		udiv	r2, r2, r1
 11669              	.LBE1022:
 11670              	.LBE1322:
3285:src/keys.c    **** 
 11671              		.loc 1 3285 10 view .LVU3585
 11672 13ac 3324     		movs	r4, #51
 11673              	.LVL984:
 11674              	.LBB1323:
 11675              	.LBB1023:
1743:src/keys.c    **** 		}
 11676              		.loc 1 1743 18 view .LVU3586
 11677 13ae A8F80820 		strh	r2, [r8, #8]	@ movhi
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11678              		.loc 1 1764 2 is_stmt 1 view .LVU3587
 11679 13b2 FEF780BE 		b	.L801
 11680              	.LVL985:
 11681              	.L1372:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11682              		.loc 1 1764 2 is_stmt 0 view .LVU3588
 11683              	.LBE1023:
 11684              	.LBE1323:
 11685              	.LBB1324:
 11686              	.LBB1135:
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11687              		.loc 1 2817 3 is_stmt 1 view .LVU3589
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11688              		.loc 1 2817 12 is_stmt 0 view .LVU3590
 11689 13b6 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 11690 13ba A2F1020C 		sub	ip, r2, #2
 11691 13be DCF10002 		rsbs	r2, ip, #0
 11692 13c2 2046     		mov	r0, r4
 11693 13c4 42EB0C02 		adc	r2, r2, ip
 11694 13c8 FFF7FEFF 		bl	process_catalogue
 11695              	.LVL986:
2818:src/keys.c    **** 			return opcode;
 11696              		.loc 1 2818 6 view .LVU3591
 11697 13cc 3328     		cmp	r0, #51
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11698              		.loc 1 2817 12 view .LVU3592
 11699 13ce 0446     		mov	r4, r0
 11700              	.LVL987:
2818:src/keys.c    **** 			return opcode;
 11701              		.loc 1 2818 3 is_stmt 1 view .LVU3593
2818:src/keys.c    **** 			return opcode;
 11702              		.loc 1 2818 6 is_stmt 0 view .LVU3594
 11703 13d0 3EF470AE 		beq	.L1304
2820:src/keys.c    **** 		goto add_char;
 11704              		.loc 1 2820 3 is_stmt 1 view .LVU3595
2820:src/keys.c    **** 		goto add_char;
 11705              		.loc 1 2820 6 is_stmt 0 view .LVU3596
 11706 13d4 C4B2     		uxtb	r4, r0
 11707              	.LVL988:
2821:src/keys.c    **** 	}
 11708              		.loc 1 2821 3 is_stmt 1 view .LVU3597
 11709 13d6 2DE4     		b	.L930
 11710              	.LVL989:
 11711              	.L1344:
ARM GAS  /tmp/cceyv6gL.s 			page 330


2821:src/keys.c    **** 	}
 11712              		.loc 1 2821 3 is_stmt 0 view .LVU3598
 11713              	.LBE1135:
 11714              	.LBE1324:
3371:src/keys.c    **** 		// print_debug (3, c);
 11715              		.loc 1 3371 4 is_stmt 1 view .LVU3599
3371:src/keys.c    **** 		// print_debug (3, c);
 11716              		.loc 1 3371 11 is_stmt 0 view .LVU3600
 11717 13d8 FFF7FEFF 		bl	process_h_shifted
 11718              	.LVL990:
 11719 13dc 0446     		mov	r4, r0
 11720 13de FEF7FFBF 		b	.L835
 11721              	.LVL991:
 11722              	.L1352:
3253:src/keys.c    **** 	CLEAR_REAL;
 11723              		.loc 1 3253 2 is_stmt 1 view .LVU3601
 11724              	.LBB1325:
 11725              	.LBI1325:
1245:src/keys.c    **** 	// called if number entry terminated by EXIT key
 11726              		.loc 1 1245 13 view .LVU3602
 11727              	.LBB1326:
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11728              		.loc 1 1249 2 view .LVU3603
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11729              		.loc 1 1249 5 is_stmt 0 view .LVU3604
 11730 13e2 13F0060F 		tst	r3, #6
 11731 13e6 2FD0     		beq	.L816
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 11732              		.loc 1 1250 2 is_stmt 1 view .LVU3605
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 11733              		.loc 1 1250 5 is_stmt 0 view .LVU3606
 11734 13e8 D906     		lsls	r1, r3, #27
 11735 13ea 40F14C81 		bpl	.L817
1251:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 11736              		.loc 1 1251 3 is_stmt 1 view .LVU3607
 11737 13ee 0F20     		movs	r0, #15
 11738 13f0 FFF7FEFF 		bl	drop
 11739              	.LVL992:
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11740              		.loc 1 1252 3 view .LVU3608
 11741 13f4 6A20     		movs	r0, #106
 11742 13f6 FFF7FEFF 		bl	get_reg_n
 11743              	.LVL993:
 11744 13fa 0446     		mov	r4, r0
 11745              	.LVL994:
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11746              		.loc 1 1252 33 is_stmt 0 view .LVU3609
 11747 13fc 6E20     		movs	r0, #110
 11748 13fe FFF7FEFF 		bl	get_reg_n
 11749              	.LVL995:
 11750 1402 0146     		mov	r1, r0
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11751              		.loc 1 1252 3 view .LVU3610
 11752 1404 2046     		mov	r0, r4
 11753 1406 FFF7FEFF 		bl	copyreg
 11754              	.LVL996:
1253:src/keys.c    **** 	}
ARM GAS  /tmp/cceyv6gL.s 			page 331


 11755              		.loc 1 1253 3 is_stmt 1 view .LVU3611
 11756 140a 6B20     		movs	r0, #107
 11757              	.L1297:
1257:src/keys.c    **** 	}
 11758              		.loc 1 1257 3 is_stmt 0 view .LVU3612
 11759 140c FFF7FEFF 		bl	get_reg_n
 11760              	.LVL997:
 11761 1410 0446     		mov	r4, r0
1257:src/keys.c    **** 	}
 11762              		.loc 1 1257 33 view .LVU3613
 11763 1412 6F20     		movs	r0, #111
 11764 1414 FFF7FEFF 		bl	get_reg_n
 11765              	.LVL998:
 11766 1418 0146     		mov	r1, r0
1257:src/keys.c    **** 	}
 11767              		.loc 1 1257 3 view .LVU3614
 11768 141a 2046     		mov	r0, r4
 11769 141c FFF7FEFF 		bl	copyreg
 11770              	.LVL999:
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11771              		.loc 1 1259 2 is_stmt 1 view .LVU3615
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11772              		.loc 1 1259 22 is_stmt 0 view .LVU3616
 11773 1420 DAF80020 		ldr	r2, [r10]
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11774              		.loc 1 1259 20 view .LVU3617
 11775 1424 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11776              		.loc 1 1259 22 view .LVU3618
 11777 1428 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11778 142c C3F30013 		ubfx	r3, r3, #4, #1
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11779              		.loc 1 1259 20 view .LVU3619
 11780 1430 63F38611 		bfi	r1, r3, #6, #1
 11781 1434 88F81710 		strb	r1, [r8, #23]
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 11782              		.loc 1 1260 2 is_stmt 1 view .LVU3620
1261:src/keys.c    **** }
 11783              		.loc 1 1261 2 view .LVU3621
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 11784              		.loc 1 1260 2 is_stmt 0 view .LVU3622
 11785 1438 B2F8AC37 		ldrh	r3, [r2, #1964]
 11786 143c 23F48873 		bic	r3, r3, #272
 11787 1440 43F48073 		orr	r3, r3, #256
 11788 1444 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 11789              	.L816:
 11790              	.LBE1326:
 11791              	.LBE1325:
3254:src/keys.c    **** 	CLEAR_IMAG;
 11792              		.loc 1 3254 2 is_stmt 1 view .LVU3623
 11793 1448 DAF80020 		ldr	r2, [r10]
3255:src/keys.c    ****       }
 11794              		.loc 1 3255 2 view .LVU3624
3254:src/keys.c    **** 	CLEAR_IMAG;
 11795              		.loc 1 3254 2 is_stmt 0 view .LVU3625
 11796 144c 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11797 1450 23F00603 		bic	r3, r3, #6
ARM GAS  /tmp/cceyv6gL.s 			page 332


 11798 1454 82F8AC37 		strb	r3, [r2, #1964]
 11799 1458 FFF78CB9 		b	.L815
 11800              	.LVL1000:
 11801              	.L1373:
 11802              	.LBB1328:
 11803              	.LBB1136:
2826:src/keys.c    **** 				break;
 11804              		.loc 1 2826 3 is_stmt 1 view .LVU3626
2826:src/keys.c    **** 				break;
 11805              		.loc 1 2826 6 is_stmt 0 view .LVU3627
 11806 145c 0029     		cmp	r1, #0
 11807 145e 7FF4D7AB 		bne	.L933
2828:src/keys.c    **** 		if (State2.numdigit == 0)
 11808              		.loc 1 2828 3 is_stmt 1 view .LVU3628
 11809              	.LBB1125:
 11810              	.LBI1125:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 11811              		.loc 1 2803 13 view .LVU3629
 11812              	.LBB1126:
2805:src/keys.c    **** 	if (! State2.alphas )
 11813              		.loc 1 2805 2 view .LVU3630
2806:src/keys.c    **** 		State2.alphashift = 0;
 11814              		.loc 1 2806 6 is_stmt 0 view .LVU3631
 11815 1462 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 11816              		.loc 1 2805 15 view .LVU3632
 11817 1466 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 11818              		.loc 1 2806 5 view .LVU3633
 11819 146a 1C07     		lsls	r4, r3, #28
 11820              	.LVL1001:
2807:src/keys.c    **** }
 11821              		.loc 1 2807 21 view .LVU3634
 11822 146c 5CBF     		itt	pl
 11823 146e 61F30413 		bfipl	r3, r1, #4, #1
 11824 1472 88F81630 		strbpl	r3, [r8, #22]
 11825              	.LBE1126:
 11826              	.LBE1125:
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 11827              		.loc 1 2829 13 view .LVU3635
 11828 1476 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11829              	.LBB1128:
 11830              	.LBB1127:
2805:src/keys.c    **** 	if (! State2.alphas )
 11831              		.loc 1 2805 15 view .LVU3636
 11832 147a 61F3C302 		bfi	r2, r1, #3, #1
 11833 147e 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 11834              		.loc 1 2806 2 is_stmt 1 view .LVU3637
2807:src/keys.c    **** }
 11835              		.loc 1 2807 3 view .LVU3638
 11836              	.LBE1127:
 11837              	.LBE1128:
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 11838              		.loc 1 2829 3 view .LVU3639
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 11839              		.loc 1 2829 6 is_stmt 0 view .LVU3640
ARM GAS  /tmp/cceyv6gL.s 			page 333


 11840 1482 002B     		cmp	r3, #0
 11841 1484 3FF42EA9 		beq	.L1309
2831:src/keys.c    **** 			State2.digval2 = 0;
 11842              		.loc 1 2831 8 is_stmt 1 view .LVU3641
2831:src/keys.c    **** 			State2.digval2 = 0;
 11843              		.loc 1 2831 11 is_stmt 0 view .LVU3642
 11844 1488 012B     		cmp	r3, #1
2832:src/keys.c    **** 		goto fin;
 11845              		.loc 1 2832 19 view .LVU3643
 11846 148a 4FF00004 		mov	r4, #0
2831:src/keys.c    **** 			State2.digval2 = 0;
 11847              		.loc 1 2831 11 view .LVU3644
 11848 148e 7FF4E8AB 		bne	.L936
2832:src/keys.c    **** 		goto fin;
 11849              		.loc 1 2832 4 is_stmt 1 view .LVU3645
2832:src/keys.c    **** 		goto fin;
 11850              		.loc 1 2832 19 is_stmt 0 view .LVU3646
 11851 1492 88F80A40 		strb	r4, [r8, #10]
 11852 1496 FFF7E4BB 		b	.L936
 11853              	.LVL1002:
 11854              	.L1336:
2832:src/keys.c    **** 		goto fin;
 11855              		.loc 1 2832 19 view .LVU3647
 11856 149a 0093     		str	r3, [sp]
 11857              	.LBE1136:
 11858              	.LBE1328:
 11859              	.LBB1329:
 11860              	.LBB843:
 11861              	.LBB832:
 373:src/keys.c    **** #else
 11862              		.loc 1 373 45 view .LVU3648
 11863 149c FFF7FEFF 		bl	shift_down
 11864              	.LVL1003:
 373:src/keys.c    **** #else
 11865              		.loc 1 373 42 view .LVU3649
 11866 14a0 0328     		cmp	r0, #3
 11867 14a2 00F0E880 		beq	.L917
 373:src/keys.c    **** #else
 11868              		.loc 1 373 73 view .LVU3650
 11869 14a6 009B     		ldr	r3, [sp]
 11870 14a8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 11871 14ac 9C46     		mov	ip, r3
 377:src/keys.c    ****   }
 11872              		.loc 1 377 9 view .LVU3651
 11873 14ae 0C21     		movs	r1, #12
 371:src/keys.c    **** #ifndef WINGUI
 11874              		.loc 1 371 8 view .LVU3652
 11875 14b0 0D4B     		ldr	r3, .L1411
 11876 14b2 FEF7D8BE 		b	.L916
 11877              	.LVL1004:
 11878              	.L1367:
 371:src/keys.c    **** #ifndef WINGUI
 11879              		.loc 1 371 8 view .LVU3653
 11880              	.LBE832:
 11881              	.LBE843:
 11882              	.LBE1329:
 11883              	.LBB1330:
ARM GAS  /tmp/cceyv6gL.s 			page 334


 11884              	.LBB1061:
 11885              	.LBB1053:
2935:src/keys.c    **** 		else if (nn != NO_REG)
 11886              		.loc 1 2935 4 is_stmt 1 view .LVU3654
2937:src/keys.c    **** 	}
 11887              		.loc 1 2937 6 is_stmt 0 view .LVU3655
 11888 14b6 9942     		cmp	r1, r3
 11889 14b8 08BF     		it	eq
 11890 14ba 0A23     		moveq	r3, #10
 11891              	.LVL1005:
2937:src/keys.c    **** 	}
 11892              		.loc 1 2937 6 view .LVU3656
 11893 14bc FFF786BA 		b	.L884
 11894              	.LVL1006:
 11895              	.L1034:
2937:src/keys.c    **** 	}
 11896              		.loc 1 2937 6 view .LVU3657
 11897              	.LBE1053:
 11898              	.LBE1061:
 11899              	.LBE1330:
 11900              	.LBB1331:
 11901              	.LBB938:
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 11902              		.loc 1 1297 4 is_stmt 1 view .LVU3658
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 11903              		.loc 1 1297 7 is_stmt 0 view .LVU3659
 11904 14c0 BBF1020F 		cmp	fp, #2
 11905 14c4 69D1     		bne	.L1036
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 11906              		.loc 1 1297 28 view .LVU3660
 11907 14c6 A01F     		subs	r0, r4, #6
 11908 14c8 C0B2     		uxtb	r0, r0
 11909 14ca 0228     		cmp	r0, #2
 11910 14cc 3FF6F7AE 		bhi	.L1037
1298:src/keys.c    ****    }
 11911              		.loc 1 1298 6 is_stmt 1 view .LVU3661
 11912 14d0 FFF7FEFF 		bl	convert_regK
 11913              	.LVL1007:
1300:src/keys.c    ****      return process_fg_shifted (c);
 11914              		.loc 1 1300 4 view .LVU3662
 11915              	.L1301:
1300:src/keys.c    ****      return process_fg_shifted (c);
 11916              		.loc 1 1300 4 is_stmt 0 view .LVU3663
 11917              	.LBE938:
 11918              	.LBE1331:
3369:src/keys.c    **** 		if (shift == SHIFT_H)
 11919              		.loc 1 3369 4 is_stmt 1 view .LVU3664
3369:src/keys.c    **** 		if (shift == SHIFT_H)
 11920              		.loc 1 3369 11 is_stmt 0 view .LVU3665
 11921 14d4 2046     		mov	r0, r4
 11922 14d6 FFF7FEFF 		bl	process_fg_shifted
 11923              	.LVL1008:
 11924 14da 0446     		mov	r4, r0
 11925 14dc FEF780BF 		b	.L835
 11926              	.LVL1009:
 11927              	.L1380:
 11928              	.LBB1332:
ARM GAS  /tmp/cceyv6gL.s 			page 335


 11929              	.LBB1228:
3127:src/keys.c    **** 	const int g_max = global_regs();
 11930              		.loc 1 3127 33 view .LVU3666
 11931 14e0 FFF7FEFF 		bl	local_regs
 11932              	.LVL1010:
 11933 14e4 8246     		mov	r10, r0
 11934 14e6 9EE5     		b	.L973
 11935              	.L1412:
 11936              		.align	2
 11937              	.L1411:
 11938 14e8 00000000 		.word	.LANCHOR17
 11939 14ec 00000000 		.word	.LANCHOR6
 11940 14f0 00000000 		.word	.LANCHOR15
 11941 14f4 00000000 		.word	main_ram
 11942              	.LVL1011:
 11943              	.L1383:
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11944              		.loc 1 3143 50 view .LVU3667
 11945 14f8 0D2C     		cmp	r4, #13
 11946 14fa 7FF4A4AD 		bne	.L981
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
 11947              		.loc 1 3144 3 is_stmt 1 view .LVU3668
 11948 14fe B9F1010F 		cmp	r9, #1
 11949 1502 14BF     		ite	ne
 11950 1504 2C20     		movne	r0, #44
 11951              	.LVL1012:
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
 11952              		.loc 1 3144 3 is_stmt 0 view .LVU3669
 11953 1506 2B20     		moveq	r0, #43
 11954 1508 FFF7FEFF 		bl	set_window
 11955              	.LVL1013:
3145:src/keys.c    **** 	}
 11956              		.loc 1 3145 3 is_stmt 1 view .LVU3670
 11957              	.LBB1224:
 11958              	.LBI1224:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 11959              		.loc 1 741 13 view .LVU3671
 11960              	.LBB1225:
 742:src/keys.c    **** }
 11961              		.loc 1 742 2 view .LVU3672
 742:src/keys.c    **** }
 11962              		.loc 1 742 15 is_stmt 0 view .LVU3673
 11963 150c 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 11964 1510 3368     		ldr	r3, [r6]
 11965 1512 013A     		subs	r2, r2, #1
 11966 1514 18BF     		it	ne
 11967 1516 0122     		movne	r2, #1
 11968 1518 88F81120 		strb	r2, [r8, #17]
 11969              	.LVL1014:
 742:src/keys.c    **** }
 11970              		.loc 1 742 15 view .LVU3674
 11971              	.LBE1225:
 11972              	.LBE1224:
3152:src/keys.c    **** 	case K_DOWN:
 11973              		.loc 1 3152 2 is_stmt 1 view .LVU3675
3152:src/keys.c    **** 	case K_DOWN:
 11974              		.loc 1 3152 2 is_stmt 0 view .LVU3676
ARM GAS  /tmp/cceyv6gL.s 			page 336


 11975              	.LBE1228:
 11976              	.LBE1332:
 11977              	.LBE1411:
 11978              	.LBE1484:
3599:src/keys.c    ****     case STATE_SST:
 11979              		.loc 1 3599 5 is_stmt 1 view .LVU3677
 11980              	.LBB1485:
 11981              	.LBB1412:
 11982              	.LBB1333:
 11983              	.LBB1229:
3203:src/keys.c    **** 	}
 11984              		.loc 1 3203 10 is_stmt 0 view .LVU3678
 11985 151c 3324     		movs	r4, #51
 11986 151e FEF7CABD 		b	.L801
 11987              	.LVL1015:
 11988              	.L932:
3203:src/keys.c    **** 	}
 11989              		.loc 1 3203 10 view .LVU3679
 11990              	.LBE1229:
 11991              	.LBE1333:
 11992              	.LBB1334:
 11993              	.LBB1137:
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11994              		.loc 1 2846 3 is_stmt 1 view .LVU3680
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11995              		.loc 1 2846 6 is_stmt 0 view .LVU3681
 11996 1522 0129     		cmp	r1, #1
 11997 1524 00F07B83 		beq	.L1310
2849:src/keys.c    **** 		return STATE_UNFINISHED;
 11998              		.loc 1 2849 4 is_stmt 1 view .LVU3682
 11999              	.LBB1129:
 12000              	.LBI1129:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12001              		.loc 1 2803 13 view .LVU3683
 12002              	.LBB1130:
2805:src/keys.c    **** 	if (! State2.alphas )
 12003              		.loc 1 2805 2 view .LVU3684
2805:src/keys.c    **** 	if (! State2.alphas )
 12004              		.loc 1 2805 15 is_stmt 0 view .LVU3685
 12005 1528 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 12006              		.loc 1 2806 6 view .LVU3686
 12007 152c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 12008              		.loc 1 2805 15 view .LVU3687
 12009 1530 60F3C302 		bfi	r2, r0, #3, #1
 12010 1534 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 12011              		.loc 1 2806 2 is_stmt 1 view .LVU3688
2806:src/keys.c    **** 		State2.alphashift = 0;
 12012              		.loc 1 2806 5 is_stmt 0 view .LVU3689
 12013 1538 13F00802 		ands	r2, r3, #8
 12014 153c 7FF4D2A8 		bne	.L1309
 12015              	.LVL1016:
 12016              	.L941:
2807:src/keys.c    **** }
 12017              		.loc 1 2807 3 is_stmt 1 view .LVU3690
ARM GAS  /tmp/cceyv6gL.s 			page 337


2807:src/keys.c    **** }
 12018              		.loc 1 2807 21 is_stmt 0 view .LVU3691
 12019 1540 62F30413 		bfi	r3, r2, #4, #1
 12020 1544 88F81630 		strb	r3, [r8, #22]
 12021 1548 3368     		ldr	r3, [r6]
 12022              	.LBE1130:
 12023              	.LBE1129:
2850:src/keys.c    **** 
 12024              		.loc 1 2850 10 view .LVU3692
 12025 154a 3324     		movs	r4, #51
 12026              	.LVL1017:
2850:src/keys.c    **** 
 12027              		.loc 1 2850 10 view .LVU3693
 12028 154c FEF7B3BD 		b	.L801
 12029              	.LVL1018:
 12030              	.L931:
2836:src/keys.c    **** 			if (State2.numdigit == 0)
 12031              		.loc 1 2836 3 is_stmt 1 view .LVU3694
2836:src/keys.c    **** 			if (State2.numdigit == 0)
 12032              		.loc 1 2836 6 is_stmt 0 view .LVU3695
 12033 1550 0329     		cmp	r1, #3
 12034 1552 3FF465AB 		beq	.L937
2837:src/keys.c    **** 				reset_multi();
 12035              		.loc 1 2837 4 is_stmt 1 view .LVU3696
2837:src/keys.c    **** 				reset_multi();
 12036              		.loc 1 2837 14 is_stmt 0 view .LVU3697
 12037 1556 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2837:src/keys.c    **** 				reset_multi();
 12038              		.loc 1 2837 7 view .LVU3698
 12039 155a 002A     		cmp	r2, #0
 12040 155c 40F03282 		bne	.L938
2838:src/keys.c    **** 			else
 12041              		.loc 1 2838 5 is_stmt 1 view .LVU3699
 12042              	.LBB1131:
 12043              	.LBI1131:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12044              		.loc 1 2803 13 view .LVU3700
 12045              	.LBB1132:
2805:src/keys.c    **** 	if (! State2.alphas )
 12046              		.loc 1 2805 2 view .LVU3701
2805:src/keys.c    **** 	if (! State2.alphas )
 12047              		.loc 1 2805 15 is_stmt 0 view .LVU3702
 12048 1560 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12049              	.LVL1019:
2806:src/keys.c    **** 		State2.alphashift = 0;
 12050              		.loc 1 2806 6 view .LVU3703
 12051 1564 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 12052              		.loc 1 2805 15 view .LVU3704
 12053 1568 62F3C301 		bfi	r1, r2, #3, #1
2806:src/keys.c    **** 		State2.alphashift = 0;
 12054              		.loc 1 2806 5 view .LVU3705
 12055 156c 13F00802 		ands	r2, r3, #8
2805:src/keys.c    **** 	if (! State2.alphas )
 12056              		.loc 1 2805 15 view .LVU3706
 12057 1570 88F81510 		strb	r1, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
ARM GAS  /tmp/cceyv6gL.s 			page 338


 12058              		.loc 1 2806 2 is_stmt 1 view .LVU3707
2806:src/keys.c    **** 		State2.alphashift = 0;
 12059              		.loc 1 2806 5 is_stmt 0 view .LVU3708
 12060 1574 E4D0     		beq	.L941
 12061 1576 FFF7B5B8 		b	.L1309
 12062              	.LVL1020:
 12063              	.L1343:
2806:src/keys.c    **** 		State2.alphashift = 0;
 12064              		.loc 1 2806 5 view .LVU3709
 12065              	.LBE1132:
 12066              	.LBE1131:
 12067              	.LBE1137:
 12068              	.LBE1334:
3362:src/keys.c    **** 	}
 12069              		.loc 1 3362 3 is_stmt 1 view .LVU3710
 12070              	.LBB1335:
 12071              	.LBI850:
1286:src/keys.c    **** 
 12072              		.loc 1 1286 13 view .LVU3711
 12073              	.LBB939:
1288:src/keys.c    **** 
 12074              		.loc 1 1288 4 view .LVU3712
 12075              	.LBB852:
 12076              	.LBI852:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12077              		.loc 1 96 13 view .LVU3713
 12078              	.LBB853:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12079              		.loc 1 97 2 view .LVU3714
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12080              		.loc 1 97 18 is_stmt 0 view .LVU3715
 12081 157a FFF7FEFF 		bl	shift_down
 12082              	.LVL1021:
  98:src/keys.c    **** }
 12083              		.loc 1 98 2 is_stmt 1 view .LVU3716
  98:src/keys.c    **** }
 12084              		.loc 1 98 52 is_stmt 0 view .LVU3717
 12085 157e 8346     		mov	fp, r0
 12086              	.LVL1022:
  98:src/keys.c    **** }
 12087              		.loc 1 98 52 view .LVU3718
 12088 1580 08B9     		cbnz	r0, .L1033
 12089 1582 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 12090              	.L1033:
 12091              	.LVL1023:
  98:src/keys.c    **** }
 12092              		.loc 1 98 52 view .LVU3719
 12093              	.LBE853:
 12094              	.LBE852:
1292:src/keys.c    ****      return process_h_shifted (c);
 12095              		.loc 1 1292 4 is_stmt 1 view .LVU3720
1292:src/keys.c    ****      return process_h_shifted (c);
 12096              		.loc 1 1292 7 is_stmt 0 view .LVU3721
 12097 1586 042C     		cmp	r4, #4
 12098 1588 9AD8     		bhi	.L1034
1292:src/keys.c    ****      return process_h_shifted (c);
 12099              		.loc 1 1292 19 view .LVU3722
ARM GAS  /tmp/cceyv6gL.s 			page 339


 12100 158a BBF1030F 		cmp	fp, #3
 12101 158e 00F05983 		beq	.L1386
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12102              		.loc 1 1297 4 is_stmt 1 view .LVU3723
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12103              		.loc 1 1297 7 is_stmt 0 view .LVU3724
 12104 1592 BBF1020F 		cmp	fp, #2
 12105 1596 3FF492AE 		beq	.L1037
 12106              	.L1036:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12107              		.loc 1 1300 4 is_stmt 1 view .LVU3725
1300:src/keys.c    ****      return process_fg_shifted (c);
 12108              		.loc 1 1300 7 is_stmt 0 view .LVU3726
 12109 159a 631F     		subs	r3, r4, #5
 12110 159c 032B     		cmp	r3, #3
 12111 159e 00F27081 		bhi	.L1039
1300:src/keys.c    ****      return process_fg_shifted (c);
 12112              		.loc 1 1300 55 view .LVU3727
 12113 15a2 0BF1FF33 		add	r3, fp, #-1
1300:src/keys.c    ****      return process_fg_shifted (c);
 12114              		.loc 1 1300 34 view .LVU3728
 12115 15a6 DBB2     		uxtb	r3, r3
 12116 15a8 012B     		cmp	r3, #1
 12117 15aa 93D9     		bls	.L1301
 12118              	.L1040:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12119              		.loc 1 1330 4 is_stmt 1 view .LVU3729
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12120              		.loc 1 1330 7 is_stmt 0 view .LVU3730
 12121 15ac BBF1000F 		cmp	fp, #0
 12122 15b0 40F09081 		bne	.L1295
1411:src/keys.c    ****    case (K61):
 12123              		.loc 1 1411 4 is_stmt 1 view .LVU3731
 12124 15b4 231F     		subs	r3, r4, #4
 12125 15b6 292B     		cmp	r3, #41
 12126 15b8 00F28381 		bhi	.L1073
 12127 15bc DFE813F0 		tbh	[pc, r3, lsl #1]
 12128              	.L1075:
 12129 15c0 7E01     		.2byte	(.L1076-.L1075)/2
 12130 15c2 8101     		.2byte	(.L1073-.L1075)/2
 12131 15c4 8101     		.2byte	(.L1073-.L1075)/2
 12132 15c6 8101     		.2byte	(.L1073-.L1075)/2
 12133 15c8 8101     		.2byte	(.L1073-.L1075)/2
 12134 15ca 8101     		.2byte	(.L1073-.L1075)/2
 12135 15cc 8101     		.2byte	(.L1073-.L1075)/2
 12136 15ce 8101     		.2byte	(.L1073-.L1075)/2
 12137 15d0 8101     		.2byte	(.L1073-.L1075)/2
 12138 15d2 8101     		.2byte	(.L1073-.L1075)/2
 12139 15d4 5601     		.2byte	(.L1078-.L1075)/2
 12140 15d6 7001     		.2byte	(.L1077-.L1075)/2
 12141 15d8 7E01     		.2byte	(.L1076-.L1075)/2
 12142 15da 8101     		.2byte	(.L1073-.L1075)/2
 12143 15dc 8101     		.2byte	(.L1073-.L1075)/2
 12144 15de 7001     		.2byte	(.L1077-.L1075)/2
 12145 15e0 7001     		.2byte	(.L1077-.L1075)/2
 12146 15e2 7001     		.2byte	(.L1077-.L1075)/2
 12147 15e4 8101     		.2byte	(.L1073-.L1075)/2
ARM GAS  /tmp/cceyv6gL.s 			page 340


 12148 15e6 8101     		.2byte	(.L1073-.L1075)/2
 12149 15e8 8101     		.2byte	(.L1073-.L1075)/2
 12150 15ea 7001     		.2byte	(.L1077-.L1075)/2
 12151 15ec 7001     		.2byte	(.L1077-.L1075)/2
 12152 15ee 7001     		.2byte	(.L1077-.L1075)/2
 12153 15f0 8101     		.2byte	(.L1073-.L1075)/2
 12154 15f2 8101     		.2byte	(.L1073-.L1075)/2
 12155 15f4 8101     		.2byte	(.L1073-.L1075)/2
 12156 15f6 7001     		.2byte	(.L1077-.L1075)/2
 12157 15f8 7001     		.2byte	(.L1077-.L1075)/2
 12158 15fa 7001     		.2byte	(.L1077-.L1075)/2
 12159 15fc 8101     		.2byte	(.L1073-.L1075)/2
 12160 15fe 8101     		.2byte	(.L1073-.L1075)/2
 12161 1600 8101     		.2byte	(.L1073-.L1075)/2
 12162 1602 7001     		.2byte	(.L1077-.L1075)/2
 12163 1604 7001     		.2byte	(.L1077-.L1075)/2
 12164 1606 8101     		.2byte	(.L1073-.L1075)/2
 12165 1608 8101     		.2byte	(.L1073-.L1075)/2
 12166 160a 8101     		.2byte	(.L1073-.L1075)/2
 12167 160c 8101     		.2byte	(.L1073-.L1075)/2
 12168 160e 8101     		.2byte	(.L1073-.L1075)/2
 12169 1610 7E01     		.2byte	(.L1076-.L1075)/2
 12170 1612 CA01     		.2byte	(.L1074-.L1075)/2
 12171              	.LVL1024:
 12172              		.p2align 1
 12173              	.L1146:
1411:src/keys.c    ****    case (K61):
 12174              		.loc 1 1411 4 is_stmt 0 view .LVU3732
 12175              	.LBE939:
 12176              	.LBE1335:
 12177              	.LBB1336:
 12178              	.LBB1190:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12179              		.loc 1 2996 27 view .LVU3733
 12180 1614 4FF0030B 		mov	fp, #3
 12181              	.LVL1025:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12182              		.loc 1 2996 27 view .LVU3734
 12183 1618 FFF7B1BB 		b	.L945
 12184              	.LVL1026:
 12185              	.L1378:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12186              		.loc 1 2998 37 view .LVU3735
 12187 161c 5046     		mov	r0, r10
 12188 161e FFF7FEFF 		bl	getprog
 12189              	.LVL1027:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12190              		.loc 1 2998 63 view .LVU3736
 12191 1622 20F47062 		bic	r2, r0, #3840
 12192 1626 FFF7B4BB 		b	.L946
 12193              	.LVL1028:
 12194              	.L1375:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12195              		.loc 1 2998 63 view .LVU3737
 12196              	.LBE1190:
 12197              	.LBE1336:
 12198              	.LBB1337:
ARM GAS  /tmp/cceyv6gL.s 			page 341


 12199              	.LBB1138:
2862:src/keys.c    **** 		State2.numdigit = 1;
 12200              		.loc 1 2862 3 is_stmt 1 view .LVU3738
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12201              		.loc 1 2863 19 is_stmt 0 view .LVU3739
 12202 162a 0122     		movs	r2, #1
2862:src/keys.c    **** 		State2.numdigit = 1;
 12203              		.loc 1 2862 17 view .LVU3740
 12204 162c A8F80840 		strh	r4, [r8, #8]	@ movhi
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12205              		.loc 1 2863 3 is_stmt 1 view .LVU3741
 12206 1630 3368     		ldr	r3, [r6]
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12207              		.loc 1 2863 19 is_stmt 0 view .LVU3742
 12208 1632 88F80B20 		strb	r2, [r8, #11]
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12209              		.loc 1 2864 3 is_stmt 1 view .LVU3743
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12210              		.loc 1 2864 10 is_stmt 0 view .LVU3744
 12211 1636 3324     		movs	r4, #51
 12212              	.LVL1029:
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12213              		.loc 1 2864 10 view .LVU3745
 12214 1638 FEF73DBD 		b	.L801
 12215              	.LVL1030:
 12216              	.L1363:
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12217              		.loc 1 2864 10 view .LVU3746
 12218              	.LBE1138:
 12219              	.LBE1337:
 12220              	.LBB1338:
 12221              	.LBB1024:
1748:src/keys.c    **** 		if (rawpc == 1)
 12222              		.loc 1 1748 3 is_stmt 1 view .LVU3747
1748:src/keys.c    **** 		if (rawpc == 1)
 12223              		.loc 1 1748 11 is_stmt 0 view .LVU3748
 12224 163c DFF8B8A3 		ldr	r10, .L1413+8
 12225 1640 DAF80030 		ldr	r3, [r10]
 12226              	.LVL1031:
1748:src/keys.c    **** 		if (rawpc == 1)
 12227              		.loc 1 1748 9 view .LVU3749
 12228 1644 B3F8E007 		ldrh	r0, [r3, #2016]
 12229              	.LVL1032:
1749:src/keys.c    **** 			rawpc = 0;
 12230              		.loc 1 1749 3 is_stmt 1 view .LVU3750
1750:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12231              		.loc 1 1750 10 is_stmt 0 view .LVU3751
 12232 1648 0128     		cmp	r0, #1
 12233              	.LVL1033:
1751:src/keys.c    **** 		update_program_bounds(1);
 12234              		.loc 1 1751 3 is_stmt 1 view .LVU3752
 12235 164a 08BF     		it	eq
 12236 164c 0020     		moveq	r0, #0
 12237              	.LVL1034:
1751:src/keys.c    **** 		update_program_bounds(1);
 12238              		.loc 1 1751 3 is_stmt 0 view .LVU3753
 12239 164e 0021     		movs	r1, #0
ARM GAS  /tmp/cceyv6gL.s 			page 342


 12240 1650 FFF7FEFF 		bl	do_dec
 12241              	.LVL1035:
1751:src/keys.c    **** 		update_program_bounds(1);
 12242              		.loc 1 1751 3 view .LVU3754
 12243 1654 FFF7FEFF 		bl	set_pc
 12244              	.LVL1036:
1752:src/keys.c    **** 		rawpc = ProgBegin;
 12245              		.loc 1 1752 3 is_stmt 1 view .LVU3755
 12246 1658 0120     		movs	r0, #1
 12247 165a FFF7FEFF 		bl	update_program_bounds
 12248              	.LVL1037:
1753:src/keys.c    **** 		goto fin;
 12249              		.loc 1 1753 3 view .LVU3756
1753:src/keys.c    **** 		goto fin;
 12250              		.loc 1 1753 11 is_stmt 0 view .LVU3757
 12251 165e DAF80030 		ldr	r3, [r10]
1753:src/keys.c    **** 		goto fin;
 12252              		.loc 1 1753 9 view .LVU3758
 12253 1662 B3F8EC07 		ldrh	r0, [r3, #2028]
 12254              	.LVL1038:
1754:src/keys.c    **** 	}
 12255              		.loc 1 1754 3 is_stmt 1 view .LVU3759
 12256 1666 FFF706B9 		b	.L847
 12257              	.LVL1039:
 12258              	.L1139:
1754:src/keys.c    **** 	}
 12259              		.loc 1 1754 3 is_stmt 0 view .LVU3760
 12260              	.LBE1024:
 12261              	.LBE1338:
 12262              	.LBB1339:
 12263              	.LBB844:
 306:src/keys.c    **** 		}
 12264              		.loc 1 306 11 view .LVU3761
 12265 166a 1023     		movs	r3, #16
 12266 166c FFF72CB8 		b	.L904
 12267              	.LVL1040:
 12268              	.L1384:
 306:src/keys.c    **** 		}
 12269              		.loc 1 306 11 view .LVU3762
 12270              	.LBE844:
 12271              	.LBE1339:
 12272              	.LBB1340:
 12273              	.LBB1230:
3148:src/keys.c    **** 		goto reset_window;
 12274              		.loc 1 3148 3 is_stmt 1 view .LVU3763
3148:src/keys.c    **** 		goto reset_window;
 12275              		.loc 1 3148 17 is_stmt 0 view .LVU3764
 12276 1670 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3149:src/keys.c    **** 	}
 12277              		.loc 1 3149 3 is_stmt 1 view .LVU3765
 12278 1674 45E5     		b	.L977
 12279              	.LVL1041:
 12280              	.L917:
3149:src/keys.c    **** 	}
 12281              		.loc 1 3149 3 is_stmt 0 view .LVU3766
 12282 1676 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12283              	.LBE1230:
ARM GAS  /tmp/cceyv6gL.s 			page 343


 12284              	.LBE1340:
 12285              	.LBB1341:
 12286              	.LBB845:
 12287              	.LBB833:
 371:src/keys.c    **** #ifndef WINGUI
 12288              		.loc 1 371 8 view .LVU3767
 12289 167a DD4B     		ldr	r3, .L1413
 377:src/keys.c    ****   }
 12290              		.loc 1 377 9 view .LVU3768
 12291 167c 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 12292              		.loc 1 373 73 view .LVU3769
 12293 167e 4FF0020C 		mov	ip, #2
 12294 1682 FEF7F0BD 		b	.L916
 12295              	.LVL1042:
 12296              	.L817:
 373:src/keys.c    **** #else
 12297              		.loc 1 373 73 view .LVU3770
 12298              	.LBE833:
 12299              	.LBE845:
 12300              	.LBE1341:
 12301              	.LBB1342:
 12302              	.LBB1327:
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12303              		.loc 1 1256 3 is_stmt 1 view .LVU3771
 12304 1686 6420     		movs	r0, #100
 12305 1688 FFF7FEFF 		bl	get_reg_n
 12306              	.LVL1043:
 12307 168c 0446     		mov	r4, r0
 12308              	.LVL1044:
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12309              		.loc 1 1256 33 is_stmt 0 view .LVU3772
 12310 168e 6E20     		movs	r0, #110
 12311 1690 FFF7FEFF 		bl	get_reg_n
 12312              	.LVL1045:
 12313 1694 0146     		mov	r1, r0
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12314              		.loc 1 1256 3 view .LVU3773
 12315 1696 2046     		mov	r0, r4
 12316 1698 FFF7FEFF 		bl	copyreg
 12317              	.LVL1046:
1257:src/keys.c    **** 	}
 12318              		.loc 1 1257 3 is_stmt 1 view .LVU3774
 12319 169c 6520     		movs	r0, #101
 12320 169e B5E6     		b	.L1297
 12321              	.LVL1047:
 12322              	.L1382:
1257:src/keys.c    **** 	}
 12323              		.loc 1 1257 3 is_stmt 0 view .LVU3775
 12324              	.LBE1327:
 12325              	.LBE1342:
 12326              	.LBB1343:
 12327              	.LBB1231:
 12328              	.LBB1226:
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12329              		.loc 1 3137 3 is_stmt 1 view .LVU3776
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
ARM GAS  /tmp/cceyv6gL.s 			page 344


 12330              		.loc 1 3137 19 is_stmt 0 view .LVU3777
 12331 16a0 B8F80810 		ldrh	r1, [r8, #8]
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12332              		.loc 1 3137 27 view .LVU3778
 12333 16a4 0A23     		movs	r3, #10
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12334              		.loc 1 3137 32 view .LVU3779
 12335 16a6 03FB01B2 		mla	r2, r3, r1, fp
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12336              		.loc 1 3137 37 view .LVU3780
 12337 16aa 6424     		movs	r4, #100
 12338              	.LVL1048:
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12339              		.loc 1 3137 37 view .LVU3781
 12340 16ac B2FBF4F3 		udiv	r3, r2, r4
 12341 16b0 04FB1323 		mls	r3, r4, r3, r2
 12342              	.LVL1049:
3138:src/keys.c    **** 			dv = n;
 12343              		.loc 1 3138 3 is_stmt 1 view .LVU3782
3138:src/keys.c    **** 			dv = n;
 12344              		.loc 1 3138 6 is_stmt 0 view .LVU3783
 12345 16b4 5345     		cmp	r3, r10
 12346 16b6 09DA     		bge	.L979
3138:src/keys.c    **** 			dv = n;
 12347              		.loc 1 3138 21 view .LVU3784
 12348 16b8 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3138:src/keys.c    **** 			dv = n;
 12349              		.loc 1 3138 17 view .LVU3785
 12350 16bc D207     		lsls	r2, r2, #31
 12351 16be 3FF51EAD 		bmi	.L1299
3138:src/keys.c    **** 			dv = n;
 12352              		.loc 1 3138 36 view .LVU3786
 12353 16c2 8842     		cmp	r0, r1
 12354 16c4 02DD     		ble	.L979
3138:src/keys.c    **** 			dv = n;
 12355              		.loc 1 3138 63 view .LVU3787
 12356 16c6 9842     		cmp	r0, r3
 12357 16c8 3FF719AD 		bgt	.L1299
 12358              	.L979:
3139:src/keys.c    **** 		State2.digval = dv;
 12359              		.loc 1 3139 4 is_stmt 1 view .LVU3788
3139:src/keys.c    **** 		State2.digval = dv;
 12360              		.loc 1 3139 7 is_stmt 0 view .LVU3789
 12361 16cc 5B46     		mov	r3, fp
 12362              	.LVL1050:
3140:src/keys.c    **** 		goto reset_window;
 12363              		.loc 1 3140 3 is_stmt 1 view .LVU3790
 12364 16ce 16E5     		b	.L1299
 12365              	.LVL1051:
 12366              	.L1379:
3140:src/keys.c    **** 		goto reset_window;
 12367              		.loc 1 3140 3 is_stmt 0 view .LVU3791
 12368              	.LBE1226:
 12369              	.LBE1231:
 12370              	.LBE1343:
 12371              	.LBB1344:
 12372              	.LBB1191:
ARM GAS  /tmp/cceyv6gL.s 			page 345


3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12373              		.loc 1 3005 3 is_stmt 1 view .LVU3792
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12374              		.loc 1 3005 8 is_stmt 0 view .LVU3793
 12375 16d0 4FEA8B34 		lsl	r4, fp, #14
 12376              	.LVL1052:
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12377              		.loc 1 3005 6 view .LVU3794
 12378 16d4 44F00104 		orr	r4, r4, #1
 12379              	.LVL1053:
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12380              		.loc 1 3006 3 is_stmt 1 view .LVU3795
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12381              		.loc 1 3006 9 is_stmt 0 view .LVU3796
 12382 16d8 2046     		mov	r0, r4
 12383 16da FFF7FEFF 		bl	is_label_or_end_at
 12384              	.LVL1054:
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12385              		.loc 1 3006 6 view .LVU3797
 12386 16de 0246     		mov	r2, r0
 12387 16e0 0028     		cmp	r0, #0
 12388 16e2 00F07681 		beq	.L1387
 12389              	.L949:
3008:src/keys.c    **** 		return STATE_UNFINISHED;
 12390              		.loc 1 3008 3 is_stmt 1 view .LVU3798
3008:src/keys.c    **** 		return STATE_UNFINISHED;
 12391              		.loc 1 3008 17 is_stmt 0 view .LVU3799
 12392 16e6 A8F80840 		strh	r4, [r8, #8]	@ movhi
3009:src/keys.c    **** 	}
 12393              		.loc 1 3009 3 is_stmt 1 view .LVU3800
 12394 16ea 3368     		ldr	r3, [r6]
3009:src/keys.c    **** 	}
 12395              		.loc 1 3009 10 is_stmt 0 view .LVU3801
 12396 16ec 3324     		movs	r4, #51
 12397              	.LVL1055:
3009:src/keys.c    **** 	}
 12398              		.loc 1 3009 10 view .LVU3802
 12399 16ee FEF7E2BC 		b	.L801
 12400              	.LVL1056:
 12401              	.L1370:
3009:src/keys.c    **** 	}
 12402              		.loc 1 3009 10 view .LVU3803
 12403              	.LBE1191:
 12404              	.LBE1344:
 12405              	.LBB1345:
 12406              	.LBB846:
 287:src/keys.c    **** 					}
 12407              		.loc 1 287 7 is_stmt 1 view .LVU3804
 12408 16f2 0120     		movs	r0, #1
 12409 16f4 FFF7FEFF 		bl	finish_cpx_entry
 12410              	.LVL1057:
 287:src/keys.c    **** 					}
 12411              		.loc 1 287 7 is_stmt 0 view .LVU3805
 12412              	.LBE846:
 12413              	.LBE1345:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 12414              		.loc 1 3325 2 is_stmt 1 view .LVU3806
ARM GAS  /tmp/cceyv6gL.s 			page 346


 12415              	.LBB1346:
 12416              	.LBB847:
 289:src/keys.c    **** 				default:
 12417              		.loc 1 289 13 is_stmt 0 view .LVU3807
 12418 16f8 1123     		movs	r3, #17
 12419 16fa FEF7E5BF 		b	.L904
 12420              	.LVL1058:
 12421              	.L1351:
 298:src/keys.c    **** 				stack_begin (1);
 12422              		.loc 1 298 5 is_stmt 1 view .LVU3808
 12423 16fe 41F00201 		orr	r1, r1, #2
 12424 1702 80F8AC17 		strb	r1, [r0, #1964]
 299:src/keys.c    **** 			}
 12425              		.loc 1 299 5 view .LVU3809
 12426 1706 5846     		mov	r0, fp
 12427 1708 FFF7FEFF 		bl	stack_begin
 12428              	.LVL1059:
 299:src/keys.c    **** 			}
 12429              		.loc 1 299 5 is_stmt 0 view .LVU3810
 12430              	.LBE847:
 12431              	.LBE1346:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 12432              		.loc 1 3325 2 is_stmt 1 view .LVU3811
 12433              	.LBB1347:
 12434              	.LBB848:
 306:src/keys.c    **** 		}
 12435              		.loc 1 306 11 is_stmt 0 view .LVU3812
 12436 170c 1023     		movs	r3, #16
 12437 170e FEF7DBBF 		b	.L904
 12438              	.LVL1060:
 12439              	.L1291:
 306:src/keys.c    **** 		}
 12440              		.loc 1 306 11 view .LVU3813
 12441              	.LBE848:
 12442              	.LBE1347:
 12443              	.LBE1412:
 12444              	.LBE1485:
3635:src/keys.c    **** 	NonProgrammable = 0;
 12445              		.loc 1 3635 26 discriminator 1 view .LVU3814
 12446 1712 1368     		ldr	r3, [r2]
 12447 1714 002B     		cmp	r3, #0
 12448 1716 7EF42FAF 		bne	.L1104
 12449 171a FEF78BBE 		b	.L1105
 12450              	.LVL1061:
 12451              	.L1381:
 12452              	.LBB1486:
 12453              	.LBB1413:
 12454              	.LBB1348:
 12455              	.LBB1232:
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12456              		.loc 1 3131 3 is_stmt 1 view .LVU3815
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12457              		.loc 1 3131 7 is_stmt 0 view .LVU3816
 12458 171e FFF7FEFF 		bl	local_regs
 12459              	.LVL1062:
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12460              		.loc 1 3131 6 view .LVU3817
ARM GAS  /tmp/cceyv6gL.s 			page 347


 12461 1722 68B1     		cbz	r0, .L975
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12462              		.loc 1 3132 4 is_stmt 1 view .LVU3818
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12463              		.loc 1 3132 19 is_stmt 0 view .LVU3819
 12464 1724 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12465              		.loc 1 3132 34 view .LVU3820
 12466 1728 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12467              		.loc 1 3132 19 view .LVU3821
 12468 172c 03F00101 		and	r1, r3, #1
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12469              		.loc 1 3132 34 view .LVU3822
 12470 1730 0A43     		orrs	r2, r1, r2
 12471 1732 0CBF     		ite	eq
 12472 1734 0122     		moveq	r2, #1
 12473 1736 0022     		movne	r2, #0
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12474              		.loc 1 3132 17 view .LVU3823
 12475 1738 62F30003 		bfi	r3, r2, #0, #1
 12476 173c 88F81630 		strb	r3, [r8, #22]
 12477              	.L975:
3133:src/keys.c    **** 		goto reset_window;
 12478              		.loc 1 3133 3 is_stmt 1 view .LVU3824
3133:src/keys.c    **** 		goto reset_window;
 12479              		.loc 1 3133 32 is_stmt 0 view .LVU3825
 12480 1740 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3133:src/keys.c    **** 		goto reset_window;
 12481              		.loc 1 3133 17 view .LVU3826
 12482 1744 13F0010F 		tst	r3, #1
 12483 1748 14BF     		ite	ne
 12484 174a 0023     		movne	r3, #0
 12485 174c 6423     		moveq	r3, #100
 12486 174e A8F80830 		strh	r3, [r8, #8]	@ movhi
3134:src/keys.c    **** 	}
 12487              		.loc 1 3134 3 is_stmt 1 view .LVU3827
 12488 1752 D6E4     		b	.L977
 12489              	.LVL1063:
 12490              	.L1009:
3134:src/keys.c    **** 	}
 12491              		.loc 1 3134 3 is_stmt 0 view .LVU3828
 12492              	.LBE1232:
 12493              	.LBE1348:
 12494              	.LBB1349:
 12495              	.LBB1308:
1820:src/keys.c    **** 			return STATE_BACKSPACE;
 12496              		.loc 1 1820 3 is_stmt 1 view .LVU3829
1820:src/keys.c    **** 			return STATE_BACKSPACE;
 12497              		.loc 1 1820 6 is_stmt 0 view .LVU3830
 12498 1754 0028     		cmp	r0, #0
 12499 1756 3EF4A0AE 		beq	.L1018
 12500              	.LVL1064:
 12501              	.L1019:
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12502              		.loc 1 1822 3 is_stmt 1 view .LVU3831
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
ARM GAS  /tmp/cceyv6gL.s 			page 348


 12503              		.loc 1 1822 6 is_stmt 0 view .LVU3832
 12504 175a 0328     		cmp	r0, #3
 12505 175c 7FF4A2AD 		bne	.L1003
 12506              	.LVL1065:
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12507              		.loc 1 1822 6 view .LVU3833
 12508              	.LBE1308:
 12509              	.LBE1349:
 12510              	.LBE1413:
 12511              	.LBE1486:
3635:src/keys.c    **** 	NonProgrammable = 0;
 12512              		.loc 1 3635 7 is_stmt 1 view .LVU3834
3635:src/keys.c    **** 	NonProgrammable = 0;
 12513              		.loc 1 3635 10 is_stmt 0 view .LVU3835
 12514 1760 4A06     		lsls	r2, r1, #25
 12515              	.LVL1066:
3635:src/keys.c    **** 	NonProgrammable = 0;
 12516              		.loc 1 3635 10 view .LVU3836
 12517 1762 0ED5     		bpl	.L1161
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12518              		.loc 1 3636 2 is_stmt 1 view .LVU3837
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12519              		.loc 1 3636 18 is_stmt 0 view .LVU3838
 12520 1764 A34B     		ldr	r3, .L1413+4
 12521 1766 0022     		movs	r2, #0
 12522 1768 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12523              		.loc 1 3637 2 is_stmt 1 view .LVU3839
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12524              		.loc 1 3637 32 is_stmt 0 view .LVU3840
 12525 176a 4FF4BA70 		mov	r0, #372
 12526              	.LVL1067:
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12527              		.loc 1 3637 32 view .LVU3841
 12528 176e FEF770BF 		b	.L1101
 12529              	.LVL1068:
 12530              	.L988:
 12531              	.LBB1487:
 12532              	.LBB1414:
 12533              	.LBB1350:
 12534              	.LBB1233:
3170:src/keys.c    **** 		goto reset_window;
 12535              		.loc 1 3170 4 is_stmt 1 view .LVU3842
3170:src/keys.c    **** 		goto reset_window;
 12536              		.loc 1 3170 18 is_stmt 0 view .LVU3843
 12537 1772 0023     		movs	r3, #0
 12538 1774 A8F80830 		strh	r3, [r8, #8]	@ movhi
 12539 1778 C3E4     		b	.L977
 12540              	.LVL1069:
 12541              	.L1346:
3170:src/keys.c    **** 		goto reset_window;
 12542              		.loc 1 3170 18 view .LVU3844
 12543              	.LBE1233:
 12544              	.LBE1350:
 12545              	.LBE1414:
 12546              	.LBE1487:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/cceyv6gL.s 			page 349


 12547              		.loc 1 3636 2 is_stmt 1 view .LVU3845
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12548              		.loc 1 3636 18 is_stmt 0 view .LVU3846
 12549 177a 0022     		movs	r2, #0
 12550 177c 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12551              		.loc 1 3637 2 is_stmt 1 view .LVU3847
 12552 177e FEF768BF 		b	.L1101
 12553              	.LVL1070:
 12554              	.L1161:
 12555              	.LBB1488:
 12556              	.LBB1415:
 12557              	.LBB1351:
 12558              	.LBB1309:
1823:src/keys.c    **** 		break;
 12559              		.loc 1 1823 11 is_stmt 0 view .LVU3848
 12560 1782 4FF4BA74 		mov	r4, #372
 12561              	.LVL1071:
 12562              	.L1044:
1823:src/keys.c    **** 		break;
 12563              		.loc 1 1823 11 view .LVU3849
 12564              	.LBE1309:
 12565              	.LBE1351:
 12566              	.LBE1415:
 12567              	.LBE1488:
3635:src/keys.c    **** 	NonProgrammable = 0;
 12568              		.loc 1 3635 26 view .LVU3850
 12569 1786 9B4B     		ldr	r3, .L1413+4
 12570 1788 1A68     		ldr	r2, [r3]
 12571 178a 002A     		cmp	r2, #0
 12572 178c 5DD0     		beq	.L1388
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12573              		.loc 1 3636 2 is_stmt 1 view .LVU3851
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12574              		.loc 1 3636 18 is_stmt 0 view .LVU3852
 12575 178e 0022     		movs	r2, #0
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12576              		.loc 1 3637 32 view .LVU3853
 12577 1790 2046     		mov	r0, r4
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12578              		.loc 1 3636 18 view .LVU3854
 12579 1792 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12580              		.loc 1 3637 2 is_stmt 1 view .LVU3855
 12581 1794 FEF75DBF 		b	.L1101
 12582              	.LVL1072:
 12583              	.L871:
 12584              	.LBB1489:
 12585              	.LBB1416:
 12586              	.LBB1352:
 12587              	.LBB1004:
2371:src/keys.c    **** 		// Special 1
 12588              		.loc 1 2371 7 view .LVU3856
2371:src/keys.c    **** 		// Special 1
 12589              		.loc 1 2371 10 is_stmt 0 view .LVU3857
 12590 1798 BCF1010F 		cmp	ip, #1
 12591 179c 7FF461A9 		bne	.L873
ARM GAS  /tmp/cceyv6gL.s 			page 350


2373:src/keys.c    **** 	}
 12592              		.loc 1 2373 3 is_stmt 1 view .LVU3858
2373:src/keys.c    **** 	}
 12593              		.loc 1 2373 18 is_stmt 0 view .LVU3859
 12594 17a0 BBF1000F 		cmp	fp, #0
 12595 17a4 14BF     		ite	ne
 12596 17a6 2724     		movne	r4, #39
 12597              	.LVL1073:
2373:src/keys.c    **** 	}
 12598              		.loc 1 2373 18 view .LVU3860
 12599 17a8 1E24     		moveq	r4, #30
2373:src/keys.c    **** 	}
 12600              		.loc 1 2373 47 view .LVU3861
 12601 17aa 1C44     		add	r4, r4, r3
 12602 17ac FEF718BE 		b	.L835
 12603              	.LVL1074:
 12604              	.L1011:
2373:src/keys.c    **** 	}
 12605              		.loc 1 2373 47 view .LVU3862
 12606              	.LBE1004:
 12607              	.LBE1352:
 12608              	.LBB1353:
 12609              	.LBB1310:
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
 12610              		.loc 1 1793 3 is_stmt 1 view .LVU3863
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
 12611              		.loc 1 1793 6 is_stmt 0 view .LVU3864
 12612 17b0 0128     		cmp	r0, #1
 12613 17b2 4DD0     		beq	.L1389
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12614              		.loc 1 1796 10 is_stmt 1 view .LVU3865
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12615              		.loc 1 1796 13 is_stmt 0 view .LVU3866
 12616 17b4 0328     		cmp	r0, #3
 12617 17b6 7FF475AD 		bne	.L1003
1797:src/keys.c    **** 			return STATE_UNFINISHED;
 12618              		.loc 1 1797 4 is_stmt 1 view .LVU3867
 12619              	.LVL1075:
 12620              	.LBB1294:
 12621              	.LBI1294:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12622              		.loc 1 552 13 view .LVU3868
 12623              	.LBB1295:
 553:src/keys.c    **** 		return;
 12624              		.loc 1 553 2 view .LVU3869
 553:src/keys.c    **** 		return;
 12625              		.loc 1 553 6 is_stmt 0 view .LVU3870
 12626 17ba FFF7FEFF 		bl	is_bad_cmdline
 12627              	.LVL1076:
 553:src/keys.c    **** 		return;
 12628              		.loc 1 553 5 view .LVU3871
 12629 17be 0346     		mov	r3, r0
 12630 17c0 0028     		cmp	r0, #0
 12631 17c2 7EF48FAF 		bne	.L1309
 12632 17c6 7320     		movs	r0, #115
 12633              	.LBE1295:
 12634              	.LBE1294:
ARM GAS  /tmp/cceyv6gL.s 			page 351


 12635              	.LBE1310:
 12636              	.LBE1353:
 12637              	.LBE1416:
 12638              	.LBE1489:
3409:src/keys.c    ****   //print_debug(60,c);
 12639              		.loc 1 3409 7 view .LVU3872
 12640 17c8 1D46     		mov	r5, r3
 12641              	.LBB1490:
 12642              	.LBB1417:
 12643              	.LBB1354:
 12644              	.LBB1311:
1798:src/keys.c    **** 		}
 12645              		.loc 1 1798 11 view .LVU3873
 12646 17ca 3324     		movs	r4, #51
 12647              	.LBB1297:
 12648              	.LBB1296:
 12649 17cc FFF7FEFF 		bl	init_arg.part.0
 12650              	.LVL1077:
 12651 17d0 3368     		ldr	r3, [r6]
 12652 17d2 FEF770BC 		b	.L801
 12653              	.LVL1078:
 12654              	.L1010:
1798:src/keys.c    **** 		}
 12655              		.loc 1 1798 11 view .LVU3874
 12656              	.LBE1296:
 12657              	.LBE1297:
1803:src/keys.c    **** 			break;
 12658              		.loc 1 1803 3 is_stmt 1 view .LVU3875
1803:src/keys.c    **** 			break;
 12659              		.loc 1 1803 24 is_stmt 0 view .LVU3876
 12660 17d6 831E     		subs	r3, r0, #2
1803:src/keys.c    **** 			break;
 12661              		.loc 1 1803 6 view .LVU3877
 12662 17d8 DBB2     		uxtb	r3, r3
 12663 17da 012B     		cmp	r3, #1
 12664 17dc 7FF662AD 		bls	.L1003
1805:src/keys.c    **** 			State2.multi = 1;
 12665              		.loc 1 1805 3 is_stmt 1 view .LVU3878
1805:src/keys.c    **** 			State2.multi = 1;
 12666              		.loc 1 1805 6 is_stmt 0 view .LVU3879
 12667 17e0 0128     		cmp	r0, #1
 12668 17e2 02D1     		bne	.L1017
1805:src/keys.c    **** 			State2.multi = 1;
 12669              		.loc 1 1805 24 view .LVU3880
 12670 17e4 11F04001 		ands	r1, r1, #64
 12671 17e8 0FD0     		beq	.L1390
 12672              	.L1017:
1811:src/keys.c    **** 		State2.alphashift = 0;
 12673              		.loc 1 1811 3 is_stmt 1 view .LVU3881
1812:src/keys.c    **** #ifdef DM42
 12674              		.loc 1 1812 3 view .LVU3882
1811:src/keys.c    **** 		State2.alphashift = 0;
 12675              		.loc 1 1811 17 is_stmt 0 view .LVU3883
 12676 17ea 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1814:src/keys.c    **** 		display_current_menu();
 12677              		.loc 1 1814 3 view .LVU3884
 12678 17ee 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/cceyv6gL.s 			page 352


 12679              	.LVL1079:
1811:src/keys.c    **** 		State2.alphashift = 0;
 12680              		.loc 1 1811 17 view .LVU3885
 12681 17f2 23F01803 		bic	r3, r3, #24
 12682 17f6 88F81630 		strb	r3, [r8, #22]
1814:src/keys.c    **** 		display_current_menu();
 12683              		.loc 1 1814 3 is_stmt 1 view .LVU3886
1817:src/keys.c    **** 
 12684              		.loc 1 1817 10 is_stmt 0 view .LVU3887
 12685 17fa 3324     		movs	r4, #51
1814:src/keys.c    **** 		display_current_menu();
 12686              		.loc 1 1814 3 view .LVU3888
 12687 17fc FFF7FEFF 		bl	set_menu
 12688              	.LVL1080:
1815:src/keys.c    **** #endif
 12689              		.loc 1 1815 3 is_stmt 1 view .LVU3889
 12690 1800 FFF7FEFF 		bl	display_current_menu
 12691              	.LVL1081:
1817:src/keys.c    **** 
 12692              		.loc 1 1817 3 view .LVU3890
 12693 1804 3368     		ldr	r3, [r6]
1817:src/keys.c    **** 
 12694              		.loc 1 1817 10 is_stmt 0 view .LVU3891
 12695 1806 FEF756BC 		b	.L801
 12696              	.LVL1082:
 12697              	.L1390:
1806:src/keys.c    **** 			State2.numdigit = 0;
 12698              		.loc 1 1806 4 is_stmt 1 view .LVU3892
1806:src/keys.c    **** 			State2.numdigit = 0;
 12699              		.loc 1 1806 17 is_stmt 0 view .LVU3893
 12700 180a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12701              	.LVL1083:
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12702              		.loc 1 1807 20 view .LVU3894
 12703 180e 88F80B10 		strb	r1, [r8, #11]
1806:src/keys.c    **** 			State2.numdigit = 0;
 12704              		.loc 1 1806 17 view .LVU3895
 12705 1812 42F00802 		orr	r2, r2, #8
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 12706              		.loc 1 1808 12 view .LVU3896
 12707 1816 0A21     		movs	r1, #10
 12708 1818 3368     		ldr	r3, [r6]
 12709 181a 88F81F10 		strb	r1, [r8, #31]
1806:src/keys.c    **** 			State2.numdigit = 0;
 12710              		.loc 1 1806 17 view .LVU3897
 12711 181e 88F81520 		strb	r2, [r8, #21]
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12712              		.loc 1 1807 4 is_stmt 1 view .LVU3898
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 12713              		.loc 1 1808 4 view .LVU3899
1809:src/keys.c    **** 		}
 12714              		.loc 1 1809 4 view .LVU3900
1809:src/keys.c    **** 		}
 12715              		.loc 1 1809 11 is_stmt 0 view .LVU3901
 12716 1822 3324     		movs	r4, #51
 12717 1824 FEF747BC 		b	.L801
 12718              	.LVL1084:
ARM GAS  /tmp/cceyv6gL.s 			page 353


 12719              	.L1012:
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
 12720              		.loc 1 1786 3 is_stmt 1 view .LVU3902
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
 12721              		.loc 1 1786 6 is_stmt 0 view .LVU3903
 12722 1828 0128     		cmp	r0, #1
 12723 182a 7FF43BAD 		bne	.L1003
1787:src/keys.c    **** 			return STATE_UNFINISHED;
 12724              		.loc 1 1787 4 is_stmt 1 view .LVU3904
 12725              	.LVL1085:
 12726              	.LBB1298:
 12727              	.LBI1298:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12728              		.loc 1 552 13 view .LVU3905
 12729              	.LBB1299:
 553:src/keys.c    **** 		return;
 12730              		.loc 1 553 2 view .LVU3906
 553:src/keys.c    **** 		return;
 12731              		.loc 1 553 6 is_stmt 0 view .LVU3907
 12732 182e FFF7FEFF 		bl	is_bad_cmdline
 12733              	.LVL1086:
 553:src/keys.c    **** 		return;
 12734              		.loc 1 553 5 view .LVU3908
 12735 1832 0346     		mov	r3, r0
 12736 1834 0028     		cmp	r0, #0
 12737 1836 7EF455AF 		bne	.L1309
 12738 183a 2620     		movs	r0, #38
 12739              	.LBE1299:
 12740              	.LBE1298:
 12741              	.LBE1311:
 12742              	.LBE1354:
 12743              	.LBE1417:
 12744              	.LBE1490:
3409:src/keys.c    ****   //print_debug(60,c);
 12745              		.loc 1 3409 7 view .LVU3909
 12746 183c 1D46     		mov	r5, r3
 12747              	.LBB1491:
 12748              	.LBB1418:
 12749              	.LBB1355:
 12750              	.LBB1312:
1788:src/keys.c    **** 		}
 12751              		.loc 1 1788 11 view .LVU3910
 12752 183e 3324     		movs	r4, #51
 12753              	.LBB1301:
 12754              	.LBB1300:
 12755 1840 FFF7FEFF 		bl	init_arg.part.0
 12756              	.LVL1087:
 12757 1844 3368     		ldr	r3, [r6]
 12758 1846 FEF736BC 		b	.L801
 12759              	.LVL1088:
 12760              	.L1388:
1788:src/keys.c    **** 		}
 12761              		.loc 1 1788 11 view .LVU3911
 12762 184a 2046     		mov	r0, r4
 12763 184c FEF7F2BD 		b	.L1105
 12764              	.LVL1089:
 12765              	.L1389:
ARM GAS  /tmp/cceyv6gL.s 			page 354


1788:src/keys.c    **** 		}
 12766              		.loc 1 1788 11 view .LVU3912
 12767              	.LBE1300:
 12768              	.LBE1301:
1794:src/keys.c    **** 			return STATE_UNFINISHED;
 12769              		.loc 1 1794 4 is_stmt 1 view .LVU3913
 12770              	.LBB1302:
 12771              	.LBI1302:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12772              		.loc 1 552 13 view .LVU3914
 12773              	.LBB1303:
 553:src/keys.c    **** 		return;
 12774              		.loc 1 553 2 view .LVU3915
 553:src/keys.c    **** 		return;
 12775              		.loc 1 553 6 is_stmt 0 view .LVU3916
 12776 1850 FFF7FEFF 		bl	is_bad_cmdline
 12777              	.LVL1090:
 553:src/keys.c    **** 		return;
 12778              		.loc 1 553 5 view .LVU3917
 12779 1854 0346     		mov	r3, r0
 12780 1856 0028     		cmp	r0, #0
 12781 1858 7EF444AF 		bne	.L1309
 12782 185c 2720     		movs	r0, #39
 12783              	.LBE1303:
 12784              	.LBE1302:
 12785              	.LBE1312:
 12786              	.LBE1355:
 12787              	.LBE1418:
 12788              	.LBE1491:
3409:src/keys.c    ****   //print_debug(60,c);
 12789              		.loc 1 3409 7 view .LVU3918
 12790 185e 1D46     		mov	r5, r3
 12791              	.LBB1492:
 12792              	.LBB1419:
 12793              	.LBB1356:
 12794              	.LBB1313:
1795:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12795              		.loc 1 1795 11 view .LVU3919
 12796 1860 3324     		movs	r4, #51
 12797              	.LBB1305:
 12798              	.LBB1304:
 12799 1862 FFF7FEFF 		bl	init_arg.part.0
 12800              	.LVL1091:
 12801 1866 3368     		ldr	r3, [r6]
 12802 1868 FEF725BC 		b	.L801
 12803              	.LVL1092:
 12804              	.L1078:
1795:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12805              		.loc 1 1795 11 view .LVU3920
 12806              	.LBE1304:
 12807              	.LBE1305:
 12808              	.LBE1313:
 12809              	.LBE1356:
 12810              	.LBB1357:
 12811              	.LBB940:
1431:src/keys.c    ****        return process_cmplx(c);
 12812              		.loc 1 1431 6 is_stmt 1 view .LVU3921
ARM GAS  /tmp/cceyv6gL.s 			page 355


1431:src/keys.c    ****        return process_cmplx(c);
 12813              		.loc 1 1431 21 is_stmt 0 view .LVU3922
 12814 186c DAF80030 		ldr	r3, [r10]
 12815 1870 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
1431:src/keys.c    ****        return process_cmplx(c);
 12816              		.loc 1 1431 9 view .LVU3923
 12817 1874 13F0060F 		tst	r3, #6
1432:src/keys.c    ****      }
 12818              		.loc 1 1432 15 view .LVU3924
 12819 1878 4FF00E00 		mov	r0, #14
1431:src/keys.c    ****        return process_cmplx(c);
 12820              		.loc 1 1431 9 view .LVU3925
 12821 187c 7EF42BAD 		bne	.L1300
 12822 1880 28E5     		b	.L1302
 12823              	.L1039:
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12824              		.loc 1 1304 4 is_stmt 1 view .LVU3926
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12825              		.loc 1 1304 7 is_stmt 0 view .LVU3927
 12826 1882 0F2C     		cmp	r4, #15
 12827 1884 7FF492AE 		bne	.L1040
1305:src/keys.c    ****        reset_shift();
 12828              		.loc 1 1305 6 is_stmt 1 view .LVU3928
1305:src/keys.c    ****        reset_shift();
 12829              		.loc 1 1305 9 is_stmt 0 view .LVU3929
 12830 1888 BBF1010F 		cmp	fp, #1
 12831 188c 00F04C82 		beq	.L1391
 12832              	.LBB854:
1321:src/keys.c    **** #endif
 12833              		.loc 1 1321 8 is_stmt 1 view .LVU3930
 12834              	.LVL1093:
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 12835              		.loc 1 1323 8 view .LVU3931
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 12836              		.loc 1 1323 11 is_stmt 0 view .LVU3932
 12837 1890 BBF1030F 		cmp	fp, #3
 12838 1894 00F03F82 		beq	.L1392
 12839              	.LBE854:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12840              		.loc 1 1330 4 is_stmt 1 view .LVU3933
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12841              		.loc 1 1330 7 is_stmt 0 view .LVU3934
 12842 1898 BBF1000F 		cmp	fp, #0
 12843 189c 7FF416AD 		bne	.L1118
 12844              	.LVL1094:
 12845              	.L1077:
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12846              		.loc 1 1424 6 is_stmt 1 view .LVU3935
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12847              		.loc 1 1424 11 is_stmt 0 view .LVU3936
 12848 18a0 DAF80020 		ldr	r2, [r10]
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12849              		.loc 1 1424 21 view .LVU3937
 12850 18a4 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12851              		.loc 1 1424 9 view .LVU3938
 12852 18a8 13F0060F 		tst	r3, #6
ARM GAS  /tmp/cceyv6gL.s 			page 356


 12853 18ac 06D1     		bne	.L1076
1425:src/keys.c    ****        stack_begin (1);
 12854              		.loc 1 1425 8 is_stmt 1 view .LVU3939
 12855 18ae 43F00203 		orr	r3, r3, #2
 12856 18b2 82F8AC37 		strb	r3, [r2, #1964]
1426:src/keys.c    ****      }
 12857              		.loc 1 1426 8 view .LVU3940
 12858 18b6 0120     		movs	r0, #1
 12859 18b8 FFF7FEFF 		bl	stack_begin
 12860              	.LVL1095:
1428:src/keys.c    ****    case (K22): // CHS
 12861              		.loc 1 1428 6 view .LVU3941
 12862              	.L1076:
1440:src/keys.c    ****    case (K_CMPLX):
 12863              		.loc 1 1440 6 view .LVU3942
1440:src/keys.c    ****    case (K_CMPLX):
 12864              		.loc 1 1440 13 is_stmt 0 view .LVU3943
 12865 18bc 2046     		mov	r0, r4
 12866 18be FEF70ABD 		b	.L1300
 12867              	.L1073:
1457:src/keys.c    ****    }
 12868              		.loc 1 1457 12 is_stmt 1 view .LVU3944
1459:src/keys.c    ****    return process_cmplx(c);
 12869              		.loc 1 1459 4 view .LVU3945
 12870 18c2 0020     		movs	r0, #0
 12871 18c4 FFF7FEFF 		bl	finish_cpx_entry
 12872              	.LVL1096:
1460:src/keys.c    **** 
 12873              		.loc 1 1460 4 view .LVU3946
1460:src/keys.c    **** 
 12874              		.loc 1 1460 11 is_stmt 0 view .LVU3947
 12875 18c8 2046     		mov	r0, r4
 12876 18ca FFF7FEFF 		bl	process_cmplx
 12877              	.LVL1097:
 12878 18ce 0446     		mov	r4, r0
 12879              	.LVL1098:
1460:src/keys.c    **** 
 12880              		.loc 1 1460 11 view .LVU3948
 12881 18d0 FEF786BD 		b	.L835
 12882              	.LVL1099:
 12883              	.L1295:
1331:src/keys.c    ****      switch (c) {
 12884              		.loc 1 1331 6 is_stmt 1 view .LVU3949
 12885 18d4 0020     		movs	r0, #0
 12886 18d6 FFF7FEFF 		bl	finish_cpx_entry
 12887              	.LVL1100:
1332:src/keys.c    ****      case (K60):
 12888              		.loc 1 1332 6 view .LVU3950
 12889 18da A4F10D03 		sub	r3, r4, #13
 12890 18de 192B     		cmp	r3, #25
 12891 18e0 3FF6F7AC 		bhi	.L1303
 12892 18e4 01A2     		adr	r2, .L1049
 12893 18e6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 12894 18ea 00BF     		.p2align 2
 12895              	.L1049:
 12896 18ec 2F1B0000 		.word	.L1056+1
 12897 18f0 031B0000 		.word	.L1055+1
ARM GAS  /tmp/cceyv6gL.s 			page 357


 12898 18f4 D3120000 		.word	.L1303+1
 12899 18f8 B11A0000 		.word	.L1054+1
 12900 18fc D3120000 		.word	.L1303+1
 12901 1900 D3120000 		.word	.L1303+1
 12902 1904 D3120000 		.word	.L1303+1
 12903 1908 D3120000 		.word	.L1303+1
 12904 190c D3120000 		.word	.L1303+1
 12905 1910 9F1A0000 		.word	.L1053+1
 12906 1914 D3120000 		.word	.L1303+1
 12907 1918 911B0000 		.word	.L1052+1
 12908 191c D3120000 		.word	.L1303+1
 12909 1920 D3120000 		.word	.L1303+1
 12910 1924 D3120000 		.word	.L1303+1
 12911 1928 731B0000 		.word	.L1051+1
 12912 192c D3120000 		.word	.L1303+1
 12913 1930 D3120000 		.word	.L1303+1
 12914 1934 D3120000 		.word	.L1303+1
 12915 1938 D3120000 		.word	.L1303+1
 12916 193c D3120000 		.word	.L1303+1
 12917 1940 D3120000 		.word	.L1303+1
 12918 1944 D3120000 		.word	.L1303+1
 12919 1948 251A0000 		.word	.L1050+1
 12920 194c D3120000 		.word	.L1303+1
 12921 1950 FD190000 		.word	.L1048+1
 12922              		.p2align 1
 12923              	.L1074:
1442:src/keys.c    ****        CLEAR_REAL;
 12924              		.loc 1 1442 6 view .LVU3951
1442:src/keys.c    ****        CLEAR_REAL;
 12925              		.loc 1 1442 10 is_stmt 0 view .LVU3952
 12926 1954 DAF80020 		ldr	r2, [r10]
 12927 1958 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1442:src/keys.c    ****        CLEAR_REAL;
 12928              		.loc 1 1442 9 view .LVU3953
 12929 195c 9807     		lsls	r0, r3, #30
 12930 195e 13D4     		bmi	.L1393
1449:src/keys.c    ****        finish_cpx_entry (1);
 12931              		.loc 1 1449 11 is_stmt 1 view .LVU3954
1449:src/keys.c    ****        finish_cpx_entry (1);
 12932              		.loc 1 1449 14 is_stmt 0 view .LVU3955
 12933 1960 5907     		lsls	r1, r3, #29
 12934 1962 06D5     		bpl	.L1083
1450:src/keys.c    ****      }
 12935              		.loc 1 1450 8 is_stmt 1 view .LVU3956
 12936 1964 0120     		movs	r0, #1
 12937 1966 FFF7FEFF 		bl	finish_cpx_entry
 12938              	.LVL1101:
1456:src/keys.c    ****    default:;
 12939              		.loc 1 1456 13 is_stmt 0 view .LVU3957
 12940 196a 3324     		movs	r4, #51
 12941              	.LVL1102:
1456:src/keys.c    ****    default:;
 12942              		.loc 1 1456 13 view .LVU3958
 12943 196c 3368     		ldr	r3, [r6]
 12944 196e FEF7A2BB 		b	.L801
 12945              	.LVL1103:
 12946              	.L1083:
ARM GAS  /tmp/cceyv6gL.s 			page 358


1453:src/keys.c    ****        stack_begin (1);
 12947              		.loc 1 1453 8 is_stmt 1 view .LVU3959
 12948 1972 43F00403 		orr	r3, r3, #4
 12949 1976 82F8AC37 		strb	r3, [r2, #1964]
1454:src/keys.c    ****      }
 12950              		.loc 1 1454 8 view .LVU3960
 12951 197a 0120     		movs	r0, #1
 12952 197c FFF7FEFF 		bl	stack_begin
 12953              	.LVL1104:
1456:src/keys.c    ****    default:;
 12954              		.loc 1 1456 13 is_stmt 0 view .LVU3961
 12955 1980 3324     		movs	r4, #51
 12956              	.LVL1105:
1456:src/keys.c    ****    default:;
 12957              		.loc 1 1456 13 view .LVU3962
 12958 1982 3368     		ldr	r3, [r6]
 12959 1984 FEF797BB 		b	.L801
 12960              	.LVL1106:
 12961              	.L1393:
1443:src/keys.c    ****        SET_IMAG;
 12962              		.loc 1 1443 8 is_stmt 1 view .LVU3963
1444:src/keys.c    ****        do_command_line();
 12963              		.loc 1 1444 8 view .LVU3964
1443:src/keys.c    ****        SET_IMAG;
 12964              		.loc 1 1443 8 is_stmt 0 view .LVU3965
 12965 1988 23F00603 		bic	r3, r3, #6
 12966              	.LBB855:
 12967              	.LBB856:
1201:src/keys.c    **** 		State2.state_lift = 0;
 12968              		.loc 1 1201 5 view .LVU3966
 12969 198c 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 12970              	.LBE856:
 12971              	.LBE855:
1443:src/keys.c    ****        SET_IMAG;
 12972              		.loc 1 1443 8 view .LVU3967
 12973 1990 43F00403 		orr	r3, r3, #4
 12974 1994 82F8AC37 		strb	r3, [r2, #1964]
1445:src/keys.c    ****        State2.state_lift = 0;
 12975              		.loc 1 1445 8 is_stmt 1 view .LVU3968
 12976              	.LBB859:
 12977              	.LBI855:
1200:src/keys.c    **** 	if (CmdLineLength) {
 12978              		.loc 1 1200 13 view .LVU3969
 12979              	.LBB857:
1201:src/keys.c    **** 		State2.state_lift = 0;
 12980              		.loc 1 1201 2 view .LVU3970
1201:src/keys.c    **** 		State2.state_lift = 0;
 12981              		.loc 1 1201 5 is_stmt 0 view .LVU3971
 12982 1998 09BB     		cbnz	r1, .L1394
 12983              	.L1082:
 12984              	.LBE857:
 12985              	.LBE859:
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12986              		.loc 1 1446 8 is_stmt 1 view .LVU3972
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12987              		.loc 1 1446 26 is_stmt 0 view .LVU3973
 12988 199a 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
ARM GAS  /tmp/cceyv6gL.s 			page 359


1447:src/keys.c    ****      }
 12989              		.loc 1 1447 8 view .LVU3974
 12990 199e 6420     		movs	r0, #100
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12991              		.loc 1 1446 26 view .LVU3975
 12992 19a0 6FF38613 		bfc	r3, #6, #1
 12993 19a4 88F81730 		strb	r3, [r8, #23]
1447:src/keys.c    ****      }
 12994              		.loc 1 1447 8 is_stmt 1 view .LVU3976
 12995 19a8 FFF7FEFF 		bl	get_reg_n
 12996              	.LVL1107:
 12997 19ac 0446     		mov	r4, r0
 12998              	.LVL1108:
1447:src/keys.c    ****      }
 12999              		.loc 1 1447 8 is_stmt 0 view .LVU3977
 13000 19ae 6520     		movs	r0, #101
 13001 19b0 FFF7FEFF 		bl	get_reg_n
 13002              	.LVL1109:
 13003 19b4 0146     		mov	r1, r0
 13004 19b6 2046     		mov	r0, r4
 13005 19b8 FFF7FEFF 		bl	swap_reg
 13006              	.LVL1110:
1456:src/keys.c    ****    default:;
 13007              		.loc 1 1456 13 view .LVU3978
 13008 19bc 3324     		movs	r4, #51
 13009 19be 3368     		ldr	r3, [r6]
 13010 19c0 FEF779BB 		b	.L801
 13011              	.LVL1111:
 13012              	.L938:
1456:src/keys.c    ****    default:;
 13013              		.loc 1 1456 13 view .LVU3979
 13014              	.LBE940:
 13015              	.LBE1357:
 13016              	.LBB1358:
 13017              	.LBB1139:
2840:src/keys.c    **** 			return STATE_UNFINISHED;
 13018              		.loc 1 2840 5 is_stmt 1 view .LVU3980
2840:src/keys.c    **** 			return STATE_UNFINISHED;
 13019              		.loc 1 2840 20 is_stmt 0 view .LVU3981
 13020 19c4 013A     		subs	r2, r2, #1
 13021 19c6 3368     		ldr	r3, [r6]
 13022 19c8 88F80B20 		strb	r2, [r8, #11]
2841:src/keys.c    **** 		}
 13023              		.loc 1 2841 11 view .LVU3982
 13024 19cc 3324     		movs	r4, #51
 13025              	.LVL1112:
2841:src/keys.c    **** 		}
 13026              		.loc 1 2841 11 view .LVU3983
 13027 19ce FEF772BB 		b	.L801
 13028              	.LVL1113:
 13029              	.L1387:
2841:src/keys.c    **** 		}
 13030              		.loc 1 2841 11 view .LVU3984
 13031              	.LBE1139:
 13032              	.LBE1358:
 13033              	.LBB1359:
 13034              	.LBB1192:
ARM GAS  /tmp/cceyv6gL.s 			page 360


3007:src/keys.c    **** 		State2.digval = pc;
 13035              		.loc 1 3007 4 is_stmt 1 view .LVU3985
3007:src/keys.c    **** 		State2.digval = pc;
 13036              		.loc 1 3007 9 is_stmt 0 view .LVU3986
 13037 19d2 2046     		mov	r0, r4
 13038 19d4 0121     		movs	r1, #1
 13039 19d6 FFF7FEFF 		bl	advance_to_next_label
 13040              	.LVL1114:
 13041 19da 0446     		mov	r4, r0
 13042              	.LVL1115:
3007:src/keys.c    **** 		State2.digval = pc;
 13043              		.loc 1 3007 9 view .LVU3987
 13044 19dc 83E6     		b	.L949
 13045              	.LVL1116:
 13046              	.L1394:
3007:src/keys.c    **** 		State2.digval = pc;
 13047              		.loc 1 3007 9 view .LVU3988
 13048              	.LBE1192:
 13049              	.LBE1359:
 13050              	.LBB1360:
 13051              	.LBB941:
 13052              	.LBB860:
 13053              	.LBB858:
1202:src/keys.c    **** 		process_cmdline();
 13054              		.loc 1 1202 3 is_stmt 1 view .LVU3989
1202:src/keys.c    **** 		process_cmdline();
 13055              		.loc 1 1202 21 is_stmt 0 view .LVU3990
 13056 19de 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 13057 19e2 6FF38613 		bfc	r3, #6, #1
 13058 19e6 88F81730 		strb	r3, [r8, #23]
1203:src/keys.c    **** 	}
 13059              		.loc 1 1203 3 is_stmt 1 view .LVU3991
 13060 19ea FFF7FEFF 		bl	process_cmdline
 13061              	.LVL1117:
 13062 19ee D4E7     		b	.L1082
 13063              	.L1414:
 13064              		.align	2
 13065              	.L1413:
 13066 19f0 00000000 		.word	.LANCHOR17
 13067 19f4 00000000 		.word	NonProgrammable
 13068 19f8 00000000 		.word	main_ram
 13069              	.L1048:
1203:src/keys.c    **** 	}
 13070              		.loc 1 1203 3 is_stmt 0 view .LVU3992
 13071              	.LBE858:
 13072              	.LBE860:
1369:src/keys.c    ****        if (shift == SHIFT_F) {
 13073              		.loc 1 1369 8 is_stmt 1 view .LVU3993
 13074              	.LBB861:
 13075              	.LBI861:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13076              		.loc 1 114 13 view .LVU3994
 13077              	.LBE861:
 13078              	.LBE941:
 13079              	.LBE1360:
 13080              	.LBE1419:
 13081              	.LBE1492:
ARM GAS  /tmp/cceyv6gL.s 			page 361


 115:src/keys.c    **** }
 13082              		.loc 1 115 2 view .LVU3995
 13083              	.LVL1118:
 13084              	.LBB1493:
 13085              	.LBB1420:
 13086              	.LBB1361:
 13087              	.LBB942:
 13088              	.LBB868:
 13089              	.LBB862:
 13090              	.LBI862:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13091              		.loc 1 104 20 view .LVU3996
 13092              	.LBB863:
 105:src/keys.c    **** 	State2.shifts = shift;
 13093              		.loc 1 105 2 view .LVU3997
 13094              	.LBB864:
 13095              	.LBI864:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13096              		.loc 1 96 13 view .LVU3998
 13097              	.LBB865:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13098              		.loc 1 97 2 view .LVU3999
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13099              		.loc 1 97 18 is_stmt 0 view .LVU4000
 13100 19fc FFF7FEFF 		bl	shift_down
 13101              	.LVL1119:
  98:src/keys.c    **** }
 13102              		.loc 1 98 2 is_stmt 1 view .LVU4001
 13103              	.LBE865:
 13104              	.LBE864:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13105              		.loc 1 106 2 view .LVU4002
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13106              		.loc 1 106 16 is_stmt 0 view .LVU4003
 13107 1a00 0023     		movs	r3, #0
 13108              	.LBE863:
 13109              	.LBE862:
 13110              	.LBE868:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13111              		.loc 1 1370 11 view .LVU4004
 13112 1a02 BBF1010F 		cmp	fp, #1
 13113              	.LBB869:
 13114              	.LBB867:
 13115              	.LBB866:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13116              		.loc 1 106 16 view .LVU4005
 13117 1a06 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13118              		.loc 1 108 2 is_stmt 1 view .LVU4006
 13119              	.LVL1120:
 108:src/keys.c    **** }
 13120              		.loc 1 108 2 is_stmt 0 view .LVU4007
 13121              	.LBE866:
 13122              	.LBE867:
 13123              	.LBE869:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13124              		.loc 1 1370 8 is_stmt 1 view .LVU4008
ARM GAS  /tmp/cceyv6gL.s 			page 362


1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13125              		.loc 1 1370 11 is_stmt 0 view .LVU4009
 13126 1a0a 38D0     		beq	.L1067
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13127              		.loc 1 1373 13 is_stmt 1 view .LVU4010
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13128              		.loc 1 1373 16 is_stmt 0 view .LVU4011
 13129 1a0c BBF1020F 		cmp	fp, #2
 13130 1a10 2BD0     		beq	.L1395
 13131              	.L1063:
1407:src/keys.c    ****      return STATE_UNFINISHED;
 13132              		.loc 1 1407 6 is_stmt 1 view .LVU4012
 13133              	.LBB870:
 13134              	.LBI870:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13135              		.loc 1 114 13 view .LVU4013
 13136              	.LBE870:
 13137              	.LBE942:
 13138              	.LBE1361:
 13139              	.LBE1420:
 13140              	.LBE1493:
 115:src/keys.c    **** }
 13141              		.loc 1 115 2 view .LVU4014
 13142              	.LVL1121:
 13143              	.LBB1494:
 13144              	.LBB1421:
 13145              	.LBB1362:
 13146              	.LBB943:
 13147              	.LBB875:
 13148              	.LBB871:
 13149              	.LBI871:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13150              		.loc 1 104 20 view .LVU4015
 13151              	.LBB872:
 105:src/keys.c    **** 	State2.shifts = shift;
 13152              		.loc 1 105 2 view .LVU4016
 13153              	.LBB873:
 13154              	.LBI873:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13155              		.loc 1 96 13 view .LVU4017
 13156              	.LBB874:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13157              		.loc 1 97 2 view .LVU4018
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13158              		.loc 1 97 18 is_stmt 0 view .LVU4019
 13159 1a12 FFF7FEFF 		bl	shift_down
 13160              	.LVL1122:
  98:src/keys.c    **** }
 13161              		.loc 1 98 2 is_stmt 1 view .LVU4020
 13162              	.LBE874:
 13163              	.LBE873:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13164              		.loc 1 106 2 view .LVU4021
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13165              		.loc 1 106 16 is_stmt 0 view .LVU4022
 13166 1a16 0022     		movs	r2, #0
 13167 1a18 3368     		ldr	r3, [r6]
ARM GAS  /tmp/cceyv6gL.s 			page 363


 13168 1a1a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13169              		.loc 1 108 2 is_stmt 1 view .LVU4023
 13170              	.LVL1123:
 108:src/keys.c    **** }
 13171              		.loc 1 108 2 is_stmt 0 view .LVU4024
 13172              	.LBE872:
 13173              	.LBE871:
 13174              	.LBE875:
1408:src/keys.c    ****    }
 13175              		.loc 1 1408 6 is_stmt 1 view .LVU4025
1408:src/keys.c    ****    }
 13176              		.loc 1 1408 13 is_stmt 0 view .LVU4026
 13177 1a1e 3324     		movs	r4, #51
 13178              	.LVL1124:
1408:src/keys.c    ****    }
 13179              		.loc 1 1408 13 view .LVU4027
 13180 1a20 FEF749BB 		b	.L801
 13181              	.LVL1125:
 13182              	.L1050:
1334:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 13183              		.loc 1 1334 8 is_stmt 1 view .LVU4028
 13184              	.LBB876:
 13185              	.LBI876:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13186              		.loc 1 114 13 view .LVU4029
 13187              	.LBE876:
 13188              	.LBE943:
 13189              	.LBE1362:
 13190              	.LBE1421:
 13191              	.LBE1494:
 115:src/keys.c    **** }
 13192              		.loc 1 115 2 view .LVU4030
 13193              	.LBB1495:
 13194              	.LBB1422:
 13195              	.LBB1363:
 13196              	.LBB944:
 13197              	.LBB883:
 13198              	.LBB877:
 13199              	.LBI877:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13200              		.loc 1 104 20 view .LVU4031
 13201              	.LBB878:
 105:src/keys.c    **** 	State2.shifts = shift;
 13202              		.loc 1 105 2 view .LVU4032
 13203              	.LBB879:
 13204              	.LBI879:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13205              		.loc 1 96 13 view .LVU4033
 13206              	.LBB880:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13207              		.loc 1 97 2 view .LVU4034
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13208              		.loc 1 97 18 is_stmt 0 view .LVU4035
 13209 1a24 FFF7FEFF 		bl	shift_down
 13210              	.LVL1126:
  98:src/keys.c    **** }
ARM GAS  /tmp/cceyv6gL.s 			page 364


 13211              		.loc 1 98 2 is_stmt 1 view .LVU4036
 13212              	.LBE880:
 13213              	.LBE879:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13214              		.loc 1 106 2 view .LVU4037
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13215              		.loc 1 106 16 is_stmt 0 view .LVU4038
 13216 1a28 0023     		movs	r3, #0
 13217              	.LBE878:
 13218              	.LBE877:
 13219              	.LBE883:
1335:src/keys.c    ****      case (K21): // x<->y key
 13220              		.loc 1 1335 11 view .LVU4039
 13221 1a2a BBF1030F 		cmp	fp, #3
 13222              	.LBB884:
 13223              	.LBB882:
 13224              	.LBB881:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13225              		.loc 1 106 16 view .LVU4040
 13226 1a2e 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13227              		.loc 1 108 2 is_stmt 1 view .LVU4041
 13228              	.LVL1127:
 108:src/keys.c    **** }
 13229              		.loc 1 108 2 is_stmt 0 view .LVU4042
 13230              	.LBE881:
 13231              	.LBE882:
 13232              	.LBE884:
1335:src/keys.c    ****      case (K21): // x<->y key
 13233              		.loc 1 1335 8 is_stmt 1 view .LVU4043
1335:src/keys.c    ****      case (K21): // x<->y key
 13234              		.loc 1 1335 11 is_stmt 0 view .LVU4044
 13235 1a32 00F0D280 		beq	.L1396
1337:src/keys.c    **** 	 reset_shift();
 13236              		.loc 1 1337 8 is_stmt 1 view .LVU4045
1337:src/keys.c    **** 	 reset_shift();
 13237              		.loc 1 1337 29 is_stmt 0 view .LVU4046
 13238 1a36 0BF1FF33 		add	r3, fp, #-1
1337:src/keys.c    **** 	 reset_shift();
 13239              		.loc 1 1337 11 view .LVU4047
 13240 1a3a DBB2     		uxtb	r3, r3
 13241 1a3c 012B     		cmp	r3, #1
 13242 1a3e E8D8     		bhi	.L1063
 13243              	.L1117:
1338:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13244              		.loc 1 1338 3 is_stmt 1 view .LVU4048
 13245              	.LBB885:
 13246              	.LBI885:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13247              		.loc 1 114 13 view .LVU4049
 13248              	.LBE885:
 13249              	.LBE944:
 13250              	.LBE1363:
 13251              	.LBE1422:
 13252              	.LBE1495:
 115:src/keys.c    **** }
 13253              		.loc 1 115 2 view .LVU4050
ARM GAS  /tmp/cceyv6gL.s 			page 365


 13254              	.LVL1128:
 13255              	.LBB1496:
 13256              	.LBB1423:
 13257              	.LBB1364:
 13258              	.LBB945:
 13259              	.LBB892:
 13260              	.LBB886:
 13261              	.LBI886:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13262              		.loc 1 104 20 view .LVU4051
 13263              	.LBB887:
 105:src/keys.c    **** 	State2.shifts = shift;
 13264              		.loc 1 105 2 view .LVU4052
 13265              	.LBB888:
 13266              	.LBI888:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13267              		.loc 1 96 13 view .LVU4053
 13268              	.LBB889:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13269              		.loc 1 97 2 view .LVU4054
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13270              		.loc 1 97 18 is_stmt 0 view .LVU4055
 13271 1a40 FFF7FEFF 		bl	shift_down
 13272              	.LVL1129:
  98:src/keys.c    **** }
 13273              		.loc 1 98 2 is_stmt 1 view .LVU4056
 13274              	.LBE889:
 13275              	.LBE888:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13276              		.loc 1 106 2 view .LVU4057
 13277              	.LBE887:
 13278              	.LBE886:
 13279              	.LBE892:
1339:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 13280              		.loc 1 1339 3 is_stmt 0 view .LVU4058
 13281 1a44 DAF80010 		ldr	r1, [r10]
 13282              	.LBB893:
 13283              	.LBB891:
 13284              	.LBB890:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13285              		.loc 1 106 16 view .LVU4059
 13286 1a48 0022     		movs	r2, #0
 13287 1a4a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13288              		.loc 1 108 2 is_stmt 1 view .LVU4060
 13289              	.LVL1130:
 108:src/keys.c    **** }
 13290              		.loc 1 108 2 is_stmt 0 view .LVU4061
 13291              	.LBE890:
 13292              	.LBE891:
 13293              	.LBE893:
1339:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 13294              		.loc 1 1339 3 is_stmt 1 view .LVU4062
 13295 1a4e 91F8AD37 		ldrb	r3, [r1, #1965]	@ zero_extendqisi2
 13296 1a52 43F00103 		orr	r3, r3, #1
 13297 1a56 81F8AD37 		strb	r3, [r1, #1965]
1340:src/keys.c    ****        }
ARM GAS  /tmp/cceyv6gL.s 			page 366


 13298              		.loc 1 1340 3 view .LVU4063
 13299              	.LVL1131:
1340:src/keys.c    ****        }
 13300              		.loc 1 1340 3 is_stmt 0 view .LVU4064
 13301              	.LBE945:
 13302              	.LBE1364:
 13303              	.LBE1423:
 13304              	.LBE1496:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13305              		.loc 1 3635 7 is_stmt 1 view .LVU4065
3635:src/keys.c    **** 	NonProgrammable = 0;
 13306              		.loc 1 3635 11 is_stmt 0 view .LVU4066
 13307 1a5a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13308              		.loc 1 3635 10 view .LVU4067
 13309 1a5e 5B06     		lsls	r3, r3, #25
 13310 1a60 00F19080 		bmi	.L1060
 13311              	.LBB1497:
 13312              	.LBB1424:
 13313              	.LBB1365:
 13314              	.LBB946:
1340:src/keys.c    ****        }
 13315              		.loc 1 1340 10 view .LVU4068
 13316 1a64 43F26514 		movw	r4, #12645
 13317 1a68 8DE6     		b	.L1044
 13318              	.LVL1132:
 13319              	.L1395:
1340:src/keys.c    ****        }
 13320              		.loc 1 1340 10 view .LVU4069
 13321              	.LBE946:
 13322              	.LBE1365:
 13323              	.LBE1424:
 13324              	.LBE1497:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13325              		.loc 1 3635 7 is_stmt 1 view .LVU4070
3635:src/keys.c    **** 	NonProgrammable = 0;
 13326              		.loc 1 3635 11 is_stmt 0 view .LVU4071
 13327 1a6a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13328              		.loc 1 3635 10 view .LVU4072
 13329 1a6e 5106     		lsls	r1, r2, #25
 13330 1a70 0FD5     		bpl	.L1160
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13331              		.loc 1 3636 2 is_stmt 1 view .LVU4073
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13332              		.loc 1 3636 18 is_stmt 0 view .LVU4074
 13333 1a72 C14A     		ldr	r2, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13334              		.loc 1 3637 32 view .LVU4075
 13335 1a74 40F2C510 		movw	r0, #453
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13336              		.loc 1 3636 18 view .LVU4076
 13337 1a78 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13338              		.loc 1 3637 2 is_stmt 1 view .LVU4077
 13339 1a7a FEF7EABD 		b	.L1101
 13340              	.LVL1133:
ARM GAS  /tmp/cceyv6gL.s 			page 367


 13341              	.L1067:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13342              		.loc 1 3635 7 view .LVU4078
3635:src/keys.c    **** 	NonProgrammable = 0;
 13343              		.loc 1 3635 11 is_stmt 0 view .LVU4079
 13344 1a7e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13345              		.loc 1 3635 10 view .LVU4080
 13346 1a82 5006     		lsls	r0, r2, #25
 13347 1a84 08D5     		bpl	.L1159
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13348              		.loc 1 3636 2 is_stmt 1 view .LVU4081
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13349              		.loc 1 3636 18 is_stmt 0 view .LVU4082
 13350 1a86 BC4A     		ldr	r2, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13351              		.loc 1 3637 32 view .LVU4083
 13352 1a88 4FF4E370 		mov	r0, #454
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13353              		.loc 1 3636 18 view .LVU4084
 13354 1a8c 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13355              		.loc 1 3637 2 is_stmt 1 view .LVU4085
 13356 1a8e FEF7E0BD 		b	.L1101
 13357              	.LVL1134:
 13358              	.L1160:
 13359              	.LBB1498:
 13360              	.LBB1425:
 13361              	.LBB1366:
 13362              	.LBB947:
1374:src/keys.c    ****        }
 13363              		.loc 1 1374 10 is_stmt 0 view .LVU4086
 13364 1a92 40F2C514 		movw	r4, #453
 13365 1a96 76E6     		b	.L1044
 13366              	.LVL1135:
 13367              	.L1159:
1371:src/keys.c    ****        }
 13368              		.loc 1 1371 10 view .LVU4087
 13369 1a98 4FF4E374 		mov	r4, #454
 13370 1a9c 73E6     		b	.L1044
 13371              	.LVL1136:
 13372              	.L1053:
1385:src/keys.c    ****      case (K34): // divide key
 13373              		.loc 1 1385 8 is_stmt 1 view .LVU4088
1387:src/keys.c    **** 	 reset_shift();
 13374              		.loc 1 1387 8 view .LVU4089
1387:src/keys.c    **** 	 reset_shift();
 13375              		.loc 1 1387 11 is_stmt 0 view .LVU4090
 13376 1a9e BBF1030F 		cmp	fp, #3
 13377 1aa2 22D0     		beq	.L1397
1392:src/keys.c    ****        }
 13378              		.loc 1 1392 3 is_stmt 1 view .LVU4091
1392:src/keys.c    ****        }
 13379              		.loc 1 1392 10 is_stmt 0 view .LVU4092
 13380 1aa4 1620     		movs	r0, #22
 13381 1aa6 FFF7FEFF 		bl	process_cmplx
 13382              	.LVL1137:
ARM GAS  /tmp/cceyv6gL.s 			page 368


 13383 1aaa 0446     		mov	r4, r0
 13384              	.LVL1138:
1392:src/keys.c    ****        }
 13385              		.loc 1 1392 10 view .LVU4093
 13386 1aac FEF798BC 		b	.L835
 13387              	.LVL1139:
 13388              	.L1054:
1394:src/keys.c    ****      case (K24): // <- key
 13389              		.loc 1 1394 8 is_stmt 1 view .LVU4094
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13390              		.loc 1 1396 8 view .LVU4095
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13391              		.loc 1 1396 12 is_stmt 0 view .LVU4096
 13392 1ab0 DAF80030 		ldr	r3, [r10]
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13393              		.loc 1 1396 11 view .LVU4097
 13394 1ab4 93F9AC37 		ldrsb	r3, [r3, #1964]
 13395 1ab8 002B     		cmp	r3, #0
 13396 1aba AADB     		blt	.L1063
1397:src/keys.c    **** 	 zero_X ();
 13397              		.loc 1 1397 8 is_stmt 1 view .LVU4098
1397:src/keys.c    **** 	 zero_X ();
 13398              		.loc 1 1397 11 is_stmt 0 view .LVU4099
 13399 1abc BBF1030F 		cmp	fp, #3
 13400 1ac0 A7D1     		bne	.L1063
1398:src/keys.c    **** 	 State2.state_lift = 0;
 13401              		.loc 1 1398 3 is_stmt 1 view .LVU4100
 13402 1ac2 FFF7FEFF 		bl	zero_X
 13403              	.LVL1140:
1399:src/keys.c    **** 	 SET_REAL;
 13404              		.loc 1 1399 3 view .LVU4101
1399:src/keys.c    **** 	 SET_REAL;
 13405              		.loc 1 1399 21 is_stmt 0 view .LVU4102
 13406 1ac6 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1400:src/keys.c    **** 	 stack_begin (0);
 13407              		.loc 1 1400 3 view .LVU4103
 13408 1aca DAF80020 		ldr	r2, [r10]
1399:src/keys.c    **** 	 SET_REAL;
 13409              		.loc 1 1399 21 view .LVU4104
 13410 1ace 6FF38613 		bfc	r3, #6, #1
 13411 1ad2 88F81730 		strb	r3, [r8, #23]
1400:src/keys.c    **** 	 stack_begin (0);
 13412              		.loc 1 1400 3 is_stmt 1 view .LVU4105
 13413 1ad6 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 13414 1ada 43F00203 		orr	r3, r3, #2
 13415 1ade 82F8AC37 		strb	r3, [r2, #1964]
1401:src/keys.c    ****        }
 13416              		.loc 1 1401 3 view .LVU4106
 13417 1ae2 0020     		movs	r0, #0
 13418 1ae4 FFF7FEFF 		bl	stack_begin
 13419              	.LVL1141:
 13420 1ae8 93E7     		b	.L1063
 13421              	.L1397:
1388:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
 13422              		.loc 1 1388 3 view .LVU4107
 13423              	.LBB894:
 13424              	.LBI894:
ARM GAS  /tmp/cceyv6gL.s 			page 369


 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13425              		.loc 1 114 13 view .LVU4108
 13426              	.LBE894:
 13427              	.LBE947:
 13428              	.LBE1366:
 13429              	.LBE1425:
 13430              	.LBE1498:
 115:src/keys.c    **** }
 13431              		.loc 1 115 2 view .LVU4109
 13432              	.LVL1142:
 13433              	.LBB1499:
 13434              	.LBB1426:
 13435              	.LBB1367:
 13436              	.LBB948:
 13437              	.LBB903:
 13438              	.LBB895:
 13439              	.LBI895:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13440              		.loc 1 104 20 view .LVU4110
 13441              	.LBB896:
 105:src/keys.c    **** 	State2.shifts = shift;
 13442              		.loc 1 105 2 view .LVU4111
 13443              	.LBB897:
 13444              	.LBI897:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13445              		.loc 1 96 13 view .LVU4112
 13446              	.LBB898:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13447              		.loc 1 97 2 view .LVU4113
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13448              		.loc 1 97 18 is_stmt 0 view .LVU4114
 13449 1aea FFF7FEFF 		bl	shift_down
 13450              	.LVL1143:
  98:src/keys.c    **** }
 13451              		.loc 1 98 2 is_stmt 1 view .LVU4115
 13452              	.LBE898:
 13453              	.LBE897:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13454              		.loc 1 106 2 view .LVU4116
 13455              	.LBE896:
 13456              	.LBE895:
 13457              	.LBE903:
 13458              	.LBE948:
 13459              	.LBE1367:
 13460              	.LBE1426:
 13461              	.LBE1499:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13462              		.loc 1 3635 11 is_stmt 0 view .LVU4117
 13463 1aee 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13464              	.LBB1500:
 13465              	.LBB1427:
 13466              	.LBB1368:
 13467              	.LBB949:
 13468              	.LBB904:
 13469              	.LBB901:
 13470              	.LBB899:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/cceyv6gL.s 			page 370


 13471              		.loc 1 106 16 view .LVU4118
 13472 1af2 0023     		movs	r3, #0
 13473              	.LBE899:
 13474              	.LBE901:
 13475              	.LBE904:
 13476              	.LBE949:
 13477              	.LBE1368:
 13478              	.LBE1427:
 13479              	.LBE1500:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13480              		.loc 1 3635 10 view .LVU4119
 13481 1af4 5406     		lsls	r4, r2, #25
 13482              	.LVL1144:
 13483              	.LBB1501:
 13484              	.LBB1428:
 13485              	.LBB1369:
 13486              	.LBB950:
 13487              	.LBB905:
 13488              	.LBB902:
 13489              	.LBB900:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13490              		.loc 1 106 16 view .LVU4120
 13491 1af6 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13492              		.loc 1 108 2 is_stmt 1 view .LVU4121
 13493              	.LVL1145:
 108:src/keys.c    **** }
 13494              		.loc 1 108 2 is_stmt 0 view .LVU4122
 13495              	.LBE900:
 13496              	.LBE902:
 13497              	.LBE905:
1389:src/keys.c    ****        }
 13498              		.loc 1 1389 3 is_stmt 1 view .LVU4123
1389:src/keys.c    ****        }
 13499              		.loc 1 1389 3 is_stmt 0 view .LVU4124
 13500              	.LBE950:
 13501              	.LBE1369:
 13502              	.LBE1428:
 13503              	.LBE1501:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13504              		.loc 1 3635 7 is_stmt 1 view .LVU4125
3635:src/keys.c    **** 	NonProgrammable = 0;
 13505              		.loc 1 3635 10 is_stmt 0 view .LVU4126
 13506 1afa 27D4     		bmi	.L1072
 13507              	.LBB1502:
 13508              	.LBB1429:
 13509              	.LBB1370:
 13510              	.LBB951:
1389:src/keys.c    ****        }
 13511              		.loc 1 1389 10 view .LVU4127
 13512 1afc 40F23464 		movw	r4, #1588
 13513 1b00 41E6     		b	.L1044
 13514              	.LVL1146:
 13515              	.L1055:
1360:src/keys.c    ****        if (shift == SHIFT_F ) {
 13516              		.loc 1 1360 8 is_stmt 1 view .LVU4128
 13517              	.LBB906:
ARM GAS  /tmp/cceyv6gL.s 			page 371


 13518              	.LBI906:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13519              		.loc 1 114 13 view .LVU4129
 13520              	.LBE906:
 13521              	.LBE951:
 13522              	.LBE1370:
 13523              	.LBE1429:
 13524              	.LBE1502:
 115:src/keys.c    **** }
 13525              		.loc 1 115 2 view .LVU4130
 13526              	.LBB1503:
 13527              	.LBB1430:
 13528              	.LBB1371:
 13529              	.LBB952:
 13530              	.LBB913:
 13531              	.LBB907:
 13532              	.LBI907:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13533              		.loc 1 104 20 view .LVU4131
 13534              	.LBB908:
 105:src/keys.c    **** 	State2.shifts = shift;
 13535              		.loc 1 105 2 view .LVU4132
 13536              	.LBB909:
 13537              	.LBI909:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13538              		.loc 1 96 13 view .LVU4133
 13539              	.LBB910:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13540              		.loc 1 97 2 view .LVU4134
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13541              		.loc 1 97 18 is_stmt 0 view .LVU4135
 13542 1b02 FFF7FEFF 		bl	shift_down
 13543              	.LVL1147:
  98:src/keys.c    **** }
 13544              		.loc 1 98 2 is_stmt 1 view .LVU4136
 13545              	.LBE910:
 13546              	.LBE909:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13547              		.loc 1 106 2 view .LVU4137
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13548              		.loc 1 106 16 is_stmt 0 view .LVU4138
 13549 1b06 0023     		movs	r3, #0
 13550              	.LBE908:
 13551              	.LBE907:
 13552              	.LBE913:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13553              		.loc 1 1361 11 view .LVU4139
 13554 1b08 BBF1010F 		cmp	fp, #1
 13555              	.LBB914:
 13556              	.LBB912:
 13557              	.LBB911:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13558              		.loc 1 106 16 view .LVU4140
 13559 1b0c 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13560              		.loc 1 108 2 is_stmt 1 view .LVU4141
 13561              	.LVL1148:
ARM GAS  /tmp/cceyv6gL.s 			page 372


 108:src/keys.c    **** }
 13562              		.loc 1 108 2 is_stmt 0 view .LVU4142
 13563              	.LBE911:
 13564              	.LBE912:
 13565              	.LBE914:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13566              		.loc 1 1361 8 is_stmt 1 view .LVU4143
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13567              		.loc 1 1361 11 is_stmt 0 view .LVU4144
 13568 1b10 25D0     		beq	.L1065
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13569              		.loc 1 1364 13 is_stmt 1 view .LVU4145
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13570              		.loc 1 1364 16 is_stmt 0 view .LVU4146
 13571 1b12 BBF1030F 		cmp	fp, #3
 13572 1b16 7FF47CAF 		bne	.L1063
 13573              	.LVL1149:
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13574              		.loc 1 1364 16 view .LVU4147
 13575              	.LBE952:
 13576              	.LBE1371:
 13577              	.LBE1430:
 13578              	.LBE1503:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13579              		.loc 1 3635 7 is_stmt 1 view .LVU4148
3635:src/keys.c    **** 	NonProgrammable = 0;
 13580              		.loc 1 3635 11 is_stmt 0 view .LVU4149
 13581 1b1a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13582              		.loc 1 3635 10 view .LVU4150
 13583 1b1e 5406     		lsls	r4, r2, #25
 13584 1b20 1AD5     		bpl	.L1158
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13585              		.loc 1 3636 2 is_stmt 1 view .LVU4151
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13586              		.loc 1 3636 18 is_stmt 0 view .LVU4152
 13587 1b22 954A     		ldr	r2, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13588              		.loc 1 3637 32 view .LVU4153
 13589 1b24 4FF4E270 		mov	r0, #452
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13590              		.loc 1 3636 18 view .LVU4154
 13591 1b28 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13592              		.loc 1 3637 2 is_stmt 1 view .LVU4155
 13593 1b2a FEF792BD 		b	.L1101
 13594              	.LVL1150:
 13595              	.L1056:
 13596              	.LBB1504:
 13597              	.LBB1431:
 13598              	.LBB1372:
 13599              	.LBB953:
1337:src/keys.c    **** 	 reset_shift();
 13600              		.loc 1 1337 8 view .LVU4156
1337:src/keys.c    **** 	 reset_shift();
 13601              		.loc 1 1337 29 is_stmt 0 view .LVU4157
 13602 1b2e 0BF1FF33 		add	r3, fp, #-1
ARM GAS  /tmp/cceyv6gL.s 			page 373


1337:src/keys.c    **** 	 reset_shift();
 13603              		.loc 1 1337 11 view .LVU4158
 13604 1b32 DBB2     		uxtb	r3, r3
 13605 1b34 012B     		cmp	r3, #1
 13606 1b36 83D9     		bls	.L1117
1342:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 13607              		.loc 1 1342 13 is_stmt 1 view .LVU4159
1342:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 13608              		.loc 1 1342 16 is_stmt 0 view .LVU4160
 13609 1b38 BBF1030F 		cmp	fp, #3
 13610 1b3c 7FF469AF 		bne	.L1063
1343:src/keys.c    ****        }
 13611              		.loc 1 1343 3 is_stmt 1 view .LVU4161
1343:src/keys.c    ****        }
 13612              		.loc 1 1343 10 is_stmt 0 view .LVU4162
 13613 1b40 0D20     		movs	r0, #13
 13614 1b42 FFF7FEFF 		bl	process_cmplx
 13615              	.LVL1151:
 13616 1b46 0446     		mov	r4, r0
 13617              	.LVL1152:
1343:src/keys.c    ****        }
 13618              		.loc 1 1343 10 view .LVU4163
 13619 1b48 FEF74ABC 		b	.L835
 13620              	.LVL1153:
 13621              	.L1072:
1343:src/keys.c    ****        }
 13622              		.loc 1 1343 10 view .LVU4164
 13623              	.LBE953:
 13624              	.LBE1372:
 13625              	.LBE1431:
 13626              	.LBE1504:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13627              		.loc 1 3636 2 is_stmt 1 view .LVU4165
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13628              		.loc 1 3636 18 is_stmt 0 view .LVU4166
 13629 1b4c 8A4A     		ldr	r2, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13630              		.loc 1 3637 32 view .LVU4167
 13631 1b4e 40F23460 		movw	r0, #1588
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13632              		.loc 1 3636 18 view .LVU4168
 13633 1b52 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13634              		.loc 1 3637 2 is_stmt 1 view .LVU4169
 13635 1b54 FEF77DBD 		b	.L1101
 13636              	.LVL1154:
 13637              	.L1158:
 13638              	.LBB1505:
 13639              	.LBB1432:
 13640              	.LBB1373:
 13641              	.LBB954:
1365:src/keys.c    ****        }
 13642              		.loc 1 1365 10 is_stmt 0 view .LVU4170
 13643 1b58 4FF4E274 		mov	r4, #452
 13644 1b5c 13E6     		b	.L1044
 13645              	.LVL1155:
 13646              	.L1065:
ARM GAS  /tmp/cceyv6gL.s 			page 374


1365:src/keys.c    ****        }
 13647              		.loc 1 1365 10 view .LVU4171
 13648              	.LBE954:
 13649              	.LBE1373:
 13650              	.LBE1432:
 13651              	.LBE1505:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13652              		.loc 1 3635 7 is_stmt 1 view .LVU4172
3635:src/keys.c    **** 	NonProgrammable = 0;
 13653              		.loc 1 3635 11 is_stmt 0 view .LVU4173
 13654 1b5e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13655              		.loc 1 3635 10 view .LVU4174
 13656 1b62 5506     		lsls	r5, r2, #25
 13657 1b64 24D5     		bpl	.L1157
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13658              		.loc 1 3636 2 is_stmt 1 view .LVU4175
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13659              		.loc 1 3636 18 is_stmt 0 view .LVU4176
 13660 1b66 844A     		ldr	r2, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13661              		.loc 1 3637 32 view .LVU4177
 13662 1b68 40F2C310 		movw	r0, #451
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13663              		.loc 1 3636 18 view .LVU4178
 13664 1b6c 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13665              		.loc 1 3637 2 is_stmt 1 view .LVU4179
 13666 1b6e FEF770BD 		b	.L1101
 13667              	.LVL1156:
 13668              	.L1051:
 13669              	.LBB1506:
 13670              	.LBB1433:
 13671              	.LBB1374:
 13672              	.LBB955:
1378:src/keys.c    **** 	 reset_shift();
 13673              		.loc 1 1378 8 view .LVU4180
1378:src/keys.c    **** 	 reset_shift();
 13674              		.loc 1 1378 11 is_stmt 0 view .LVU4181
 13675 1b72 BBF1030F 		cmp	fp, #3
 13676 1b76 37D0     		beq	.L1398
1383:src/keys.c    ****        }
 13677              		.loc 1 1383 3 is_stmt 1 view .LVU4182
1383:src/keys.c    ****        }
 13678              		.loc 1 1383 10 is_stmt 0 view .LVU4183
 13679 1b78 1C20     		movs	r0, #28
 13680 1b7a FFF7FEFF 		bl	process_cmplx
 13681              	.LVL1157:
 13682 1b7e 0446     		mov	r4, r0
 13683              	.LVL1158:
1383:src/keys.c    ****        }
 13684              		.loc 1 1383 10 view .LVU4184
 13685 1b80 FEF72EBC 		b	.L835
 13686              	.LVL1159:
 13687              	.L1060:
1383:src/keys.c    ****        }
 13688              		.loc 1 1383 10 view .LVU4185
ARM GAS  /tmp/cceyv6gL.s 			page 375


 13689              	.LBE955:
 13690              	.LBE1374:
 13691              	.LBE1433:
 13692              	.LBE1506:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13693              		.loc 1 3636 2 is_stmt 1 view .LVU4186
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13694              		.loc 1 3636 18 is_stmt 0 view .LVU4187
 13695 1b84 7C4B     		ldr	r3, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13696              		.loc 1 3637 32 view .LVU4188
 13697 1b86 43F26510 		movw	r0, #12645
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13698              		.loc 1 3636 18 view .LVU4189
 13699 1b8a 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13700              		.loc 1 3637 2 is_stmt 1 view .LVU4190
 13701 1b8c FEF761BD 		b	.L1101
 13702              	.LVL1160:
 13703              	.L1052:
 13704              	.LBB1507:
 13705              	.LBB1434:
 13706              	.LBB1375:
 13707              	.LBB956:
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13708              		.loc 1 1347 8 view .LVU4191
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13709              		.loc 1 1347 11 is_stmt 0 view .LVU4192
 13710 1b90 BBF1010F 		cmp	fp, #1
 13711 1b94 18D0     		beq	.L1399
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13712              		.loc 1 1350 13 is_stmt 1 view .LVU4193
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13713              		.loc 1 1350 16 is_stmt 0 view .LVU4194
 13714 1b96 BBF1020F 		cmp	fp, #2
 13715 1b9a 0CD0     		beq	.L1400
1355:src/keys.c    **** 	 return process_cmplx (c);
 13716              		.loc 1 1355 13 is_stmt 1 view .LVU4195
1355:src/keys.c    **** 	 return process_cmplx (c);
 13717              		.loc 1 1355 16 is_stmt 0 view .LVU4196
 13718 1b9c BBF1030F 		cmp	fp, #3
 13719 1ba0 7FF437AF 		bne	.L1063
1356:src/keys.c    ****        }
 13720              		.loc 1 1356 3 is_stmt 1 view .LVU4197
1356:src/keys.c    ****        }
 13721              		.loc 1 1356 10 is_stmt 0 view .LVU4198
 13722 1ba4 1820     		movs	r0, #24
 13723 1ba6 FFF7FEFF 		bl	process_cmplx
 13724              	.LVL1161:
 13725 1baa 0446     		mov	r4, r0
 13726              	.LVL1162:
1356:src/keys.c    ****        }
 13727              		.loc 1 1356 10 view .LVU4199
 13728 1bac FEF718BC 		b	.L835
 13729              	.LVL1163:
 13730              	.L1157:
1362:src/keys.c    ****        }
ARM GAS  /tmp/cceyv6gL.s 			page 376


 13731              		.loc 1 1362 10 view .LVU4200
 13732 1bb0 40F2C314 		movw	r4, #451
 13733 1bb4 E7E5     		b	.L1044
 13734              	.LVL1164:
 13735              	.L1400:
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13736              		.loc 1 1351 3 is_stmt 1 view .LVU4201
 13737 1bb6 DAF80020 		ldr	r2, [r10]
1352:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
 13738              		.loc 1 1352 3 view .LVU4202
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13739              		.loc 1 1351 3 is_stmt 0 view .LVU4203
 13740 1bba B2F8AC37 		ldrh	r3, [r2, #1964]
 13741 1bbe 43F4C073 		orr	r3, r3, #384
 13742 1bc2 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
1353:src/keys.c    ****        }
 13743              		.loc 1 1353 18 is_stmt 1 view .LVU4204
 13744 1bc6 24E7     		b	.L1063
 13745              	.L1399:
1348:src/keys.c    ****        }
 13746              		.loc 1 1348 3 view .LVU4205
 13747 1bc8 DAF80030 		ldr	r3, [r10]
 13748 1bcc 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 13749 1bd0 6FF3C712 		bfc	r2, #7, #1
 13750 1bd4 83F8AC27 		strb	r2, [r3, #1964]
 13751 1bd8 1BE7     		b	.L1063
 13752              	.L1396:
 13753              	.LVL1165:
1348:src/keys.c    ****        }
 13754              		.loc 1 1348 3 is_stmt 0 view .LVU4206
 13755              	.LBE956:
 13756              	.LBE1375:
 13757              	.LBE1434:
 13758              	.LBE1507:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13759              		.loc 1 3635 7 is_stmt 1 view .LVU4207
3635:src/keys.c    **** 	NonProgrammable = 0;
 13760              		.loc 1 3635 11 is_stmt 0 view .LVU4208
 13761 1bda 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13762              		.loc 1 3635 10 view .LVU4209
 13763 1bde 5B06     		lsls	r3, r3, #25
 13764 1be0 10D4     		bmi	.L1102
 13765              	.LVL1166:
 13766              	.L1103:
 13767              	.LBB1508:
 13768              	.LBB1435:
 13769              	.LBB1376:
 13770              	.LBB957:
1335:src/keys.c    ****      case (K21): // x<->y key
 13771              		.loc 1 1335 37 view .LVU4210
 13772 1be2 4FF48174 		mov	r4, #258
 13773 1be6 CEE5     		b	.L1044
 13774              	.LVL1167:
 13775              	.L1398:
1379:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
 13776              		.loc 1 1379 3 is_stmt 1 view .LVU4211
ARM GAS  /tmp/cceyv6gL.s 			page 377


 13777              	.LBB915:
 13778              	.LBI915:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13779              		.loc 1 114 13 view .LVU4212
 13780              	.LBE915:
 13781              	.LBE957:
 13782              	.LBE1376:
 13783              	.LBE1435:
 13784              	.LBE1508:
 115:src/keys.c    **** }
 13785              		.loc 1 115 2 view .LVU4213
 13786              	.LBB1509:
 13787              	.LBB1436:
 13788              	.LBB1377:
 13789              	.LBB958:
 13790              	.LBB924:
 13791              	.LBB916:
 13792              	.LBI916:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13793              		.loc 1 104 20 view .LVU4214
 13794              	.LBB917:
 105:src/keys.c    **** 	State2.shifts = shift;
 13795              		.loc 1 105 2 view .LVU4215
 13796              	.LBB918:
 13797              	.LBI918:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13798              		.loc 1 96 13 view .LVU4216
 13799              	.LBB919:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13800              		.loc 1 97 2 view .LVU4217
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13801              		.loc 1 97 18 is_stmt 0 view .LVU4218
 13802 1be8 FFF7FEFF 		bl	shift_down
 13803              	.LVL1168:
  98:src/keys.c    **** }
 13804              		.loc 1 98 2 is_stmt 1 view .LVU4219
 13805              	.LBE919:
 13806              	.LBE918:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13807              		.loc 1 106 2 view .LVU4220
 13808              	.LBE917:
 13809              	.LBE916:
 13810              	.LBE924:
 13811              	.LBE958:
 13812              	.LBE1377:
 13813              	.LBE1436:
 13814              	.LBE1509:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13815              		.loc 1 3635 11 is_stmt 0 view .LVU4221
 13816 1bec 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13817              	.LBB1510:
 13818              	.LBB1437:
 13819              	.LBB1378:
 13820              	.LBB959:
 13821              	.LBB925:
 13822              	.LBB922:
 13823              	.LBB920:
ARM GAS  /tmp/cceyv6gL.s 			page 378


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13824              		.loc 1 106 16 view .LVU4222
 13825 1bf0 0023     		movs	r3, #0
 13826              	.LBE920:
 13827              	.LBE922:
 13828              	.LBE925:
 13829              	.LBE959:
 13830              	.LBE1378:
 13831              	.LBE1437:
 13832              	.LBE1510:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13833              		.loc 1 3635 10 view .LVU4223
 13834 1bf2 5506     		lsls	r5, r2, #25
 13835              	.LBB1511:
 13836              	.LBB1438:
 13837              	.LBB1379:
 13838              	.LBB960:
 13839              	.LBB926:
 13840              	.LBB923:
 13841              	.LBB921:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13842              		.loc 1 106 16 view .LVU4224
 13843 1bf4 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13844              		.loc 1 108 2 is_stmt 1 view .LVU4225
 13845              	.LVL1169:
 108:src/keys.c    **** }
 13846              		.loc 1 108 2 is_stmt 0 view .LVU4226
 13847              	.LBE921:
 13848              	.LBE923:
 13849              	.LBE926:
1380:src/keys.c    ****        }
 13850              		.loc 1 1380 3 is_stmt 1 view .LVU4227
1380:src/keys.c    ****        }
 13851              		.loc 1 1380 3 is_stmt 0 view .LVU4228
 13852              	.LBE960:
 13853              	.LBE1379:
 13854              	.LBE1438:
 13855              	.LBE1511:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13856              		.loc 1 3635 7 is_stmt 1 view .LVU4229
3635:src/keys.c    **** 	NonProgrammable = 0;
 13857              		.loc 1 3635 10 is_stmt 0 view .LVU4230
 13858 1bf8 0BD4     		bmi	.L1070
 13859              	.LBB1512:
 13860              	.LBB1439:
 13861              	.LBB1380:
 13862              	.LBB961:
1380:src/keys.c    ****        }
 13863              		.loc 1 1380 10 view .LVU4231
 13864 1bfa 40F23364 		movw	r4, #1587
 13865 1bfe C2E5     		b	.L1044
 13866              	.LVL1170:
 13867              	.L1028:
1380:src/keys.c    ****        }
 13868              		.loc 1 1380 10 view .LVU4232
 13869              	.LBE961:
ARM GAS  /tmp/cceyv6gL.s 			page 379


 13870              	.LBE1380:
 13871              	.LBE1439:
 13872              	.LBE1512:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13873              		.loc 1 3635 7 is_stmt 1 view .LVU4233
3635:src/keys.c    **** 	NonProgrammable = 0;
 13874              		.loc 1 3635 10 is_stmt 0 view .LVU4234
 13875 1c00 4B06     		lsls	r3, r1, #25
 13876 1c02 EED5     		bpl	.L1103
 13877              	.LVL1171:
 13878              	.L1102:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13879              		.loc 1 3636 2 is_stmt 1 view .LVU4235
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13880              		.loc 1 3636 18 is_stmt 0 view .LVU4236
 13881 1c04 5C4B     		ldr	r3, .L1415
 13882 1c06 0022     		movs	r2, #0
 13883 1c08 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13884              		.loc 1 3637 2 is_stmt 1 view .LVU4237
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13885              		.loc 1 3637 32 is_stmt 0 view .LVU4238
 13886 1c0a 4FF48170 		mov	r0, #258
 13887 1c0e FEF720BD 		b	.L1101
 13888              	.LVL1172:
 13889              	.L1070:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13890              		.loc 1 3636 2 is_stmt 1 view .LVU4239
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13891              		.loc 1 3636 18 is_stmt 0 view .LVU4240
 13892 1c12 594A     		ldr	r2, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13893              		.loc 1 3637 32 view .LVU4241
 13894 1c14 40F23360 		movw	r0, #1587
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13895              		.loc 1 3636 18 view .LVU4242
 13896 1c18 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13897              		.loc 1 3637 2 is_stmt 1 view .LVU4243
 13898 1c1a FEF71ABD 		b	.L1101
 13899              	.LVL1173:
 13900              	.L1310:
 13901              	.LBB1513:
 13902              	.LBB1440:
 13903              	.LBB1381:
 13904              	.LBB1314:
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13905              		.loc 1 1869 4 view .LVU4244
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13906              		.loc 1 1869 34 is_stmt 0 view .LVU4245
 13907 1c1e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13908 1c22 3368     		ldr	r3, [r6]
 13909 1c24 C2F30011 		ubfx	r1, r2, #4, #1
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13910              		.loc 1 1869 26 view .LVU4246
 13911 1c28 C1F10101 		rsb	r1, r1, #1
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
ARM GAS  /tmp/cceyv6gL.s 			page 380


 13912              		.loc 1 1869 22 view .LVU4247
 13913 1c2c 61F30412 		bfi	r2, r1, #4, #1
 13914 1c30 88F81620 		strb	r2, [r8, #22]
1879:src/keys.c    **** 
 13915              		.loc 1 1879 10 view .LVU4248
 13916 1c34 3324     		movs	r4, #51
 13917 1c36 FEF73EBA 		b	.L801
 13918              	.LVL1174:
 13919              	.L1374:
1879:src/keys.c    **** 
 13920              		.loc 1 1879 10 view .LVU4249
 13921              	.LBE1314:
 13922              	.LBE1381:
 13923              	.LBB1382:
 13924              	.LBB1140:
 13925              	.LBB1133:
 13926              	.LBB1122:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 13927              		.loc 1 488 8 is_stmt 1 view .LVU4250
 489:src/keys.c    **** 	}
 13928              		.loc 1 489 10 is_stmt 0 view .LVU4251
 13929 1c3a 0229     		cmp	r1, #2
 13930 1c3c 08BF     		it	eq
 13931 1c3e 0521     		moveq	r1, #5
 13932              	.LVL1175:
 489:src/keys.c    **** 	}
 13933              		.loc 1 489 10 view .LVU4252
 13934 1c40 FEF7EEBF 		b	.L937
 13935              	.LVL1176:
 13936              	.L1386:
 489:src/keys.c    **** 	}
 13937              		.loc 1 489 10 view .LVU4253
 13938              	.LBE1122:
 13939              	.LBE1133:
 13940              	.LBE1140:
 13941              	.LBE1382:
 13942              	.LBB1383:
 13943              	.LBB962:
1293:src/keys.c    ****    }
 13944              		.loc 1 1293 6 is_stmt 1 view .LVU4254
1293:src/keys.c    ****    }
 13945              		.loc 1 1293 13 is_stmt 0 view .LVU4255
 13946 1c44 2046     		mov	r0, r4
 13947 1c46 FFF7FEFF 		bl	process_h_shifted
 13948              	.LVL1177:
 13949 1c4a 0446     		mov	r4, r0
 13950              	.LVL1178:
1293:src/keys.c    ****    }
 13951              		.loc 1 1293 13 view .LVU4256
 13952 1c4c FEF7C8BB 		b	.L835
 13953              	.LVL1179:
 13954              	.L1004:
1293:src/keys.c    ****    }
 13955              		.loc 1 1293 13 view .LVU4257
 13956              	.LBE962:
 13957              	.LBE1383:
 13958              	.LBB1384:
ARM GAS  /tmp/cceyv6gL.s 			page 381


 13959              	.LBB1315:
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13960              		.loc 1 1882 3 is_stmt 1 view .LVU4258
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13961              		.loc 1 1882 6 is_stmt 0 view .LVU4259
 13962 1c50 0128     		cmp	r0, #1
 13963 1c52 7FF427AB 		bne	.L1003
 13964              	.LVL1180:
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13965              		.loc 1 1882 6 view .LVU4260
 13966              	.LBE1315:
 13967              	.LBE1384:
 13968              	.LBE1440:
 13969              	.LBE1513:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13970              		.loc 1 3635 7 is_stmt 1 view .LVU4261
3635:src/keys.c    **** 	NonProgrammable = 0;
 13971              		.loc 1 3635 10 is_stmt 0 view .LVU4262
 13972 1c56 4806     		lsls	r0, r1, #25
 13973              	.LVL1181:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13974              		.loc 1 3635 10 view .LVU4263
 13975 1c58 19D5     		bpl	.L1155
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13976              		.loc 1 3636 2 is_stmt 1 view .LVU4264
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13977              		.loc 1 3636 18 is_stmt 0 view .LVU4265
 13978 1c5a 474B     		ldr	r3, .L1415
 13979 1c5c 0022     		movs	r2, #0
 13980              	.LVL1182:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13981              		.loc 1 3636 18 view .LVU4266
 13982 1c5e 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13983              		.loc 1 3637 2 is_stmt 1 view .LVU4267
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13984              		.loc 1 3637 32 is_stmt 0 view .LVU4268
 13985 1c60 40F23B10 		movw	r0, #315
 13986 1c64 FEF7F5BC 		b	.L1101
 13987              	.LVL1183:
 13988              	.L1006:
 13989              	.LBB1514:
 13990              	.LBB1441:
 13991              	.LBB1385:
 13992              	.LBB1316:
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13993              		.loc 1 1868 3 is_stmt 1 view .LVU4269
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13994              		.loc 1 1868 6 is_stmt 0 view .LVU4270
 13995 1c68 0128     		cmp	r0, #1
 13996 1c6a D8D0     		beq	.L1310
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13997              		.loc 1 1870 8 is_stmt 1 view .LVU4271
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13998              		.loc 1 1870 11 is_stmt 0 view .LVU4272
 13999 1c6c 0328     		cmp	r0, #3
 14000 1c6e C7D0     		beq	.L1028
ARM GAS  /tmp/cceyv6gL.s 			page 382


1872:src/keys.c    **** #ifdef DM42
 14001              		.loc 1 1872 8 is_stmt 1 view .LVU4273
1872:src/keys.c    **** #ifdef DM42
 14002              		.loc 1 1872 11 is_stmt 0 view .LVU4274
 14003 1c70 0028     		cmp	r0, #0
 14004 1c72 7EF437AD 		bne	.L1309
1874:src/keys.c    **** 		  display_current_menu();
 14005              		.loc 1 1874 5 is_stmt 1 view .LVU4275
 14006 1c76 4FF0FF30 		mov	r0, #-1
 14007              	.LVL1184:
1874:src/keys.c    **** 		  display_current_menu();
 14008              		.loc 1 1874 5 is_stmt 0 view .LVU4276
 14009 1c7a FFF7FEFF 		bl	set_menu
 14010              	.LVL1185:
1875:src/keys.c    **** #endif
 14011              		.loc 1 1875 5 is_stmt 1 view .LVU4277
1879:src/keys.c    **** 
 14012              		.loc 1 1879 10 is_stmt 0 view .LVU4278
 14013 1c7e 3324     		movs	r4, #51
1875:src/keys.c    **** #endif
 14014              		.loc 1 1875 5 view .LVU4279
 14015 1c80 FFF7FEFF 		bl	display_current_menu
 14016              	.LVL1186:
1877:src/keys.c    **** 		}
 14017              		.loc 1 1877 5 is_stmt 1 view .LVU4280
 14018 1c84 FFF7FEFF 		bl	init_state
 14019              	.LVL1187:
 14020 1c88 3368     		ldr	r3, [r6]
 14021 1c8a FEF714BA 		b	.L801
 14022              	.LVL1188:
 14023              	.L1155:
1883:src/keys.c    **** 		break;
 14024              		.loc 1 1883 11 is_stmt 0 view .LVU4281
 14025 1c8e 40F23B14 		movw	r4, #315
 14026 1c92 78E5     		b	.L1044
 14027              	.LVL1189:
 14028              	.L1007:
1856:src/keys.c    **** 	    if ( State2.runmode ) {
 14029              		.loc 1 1856 4 is_stmt 1 view .LVU4282
1856:src/keys.c    **** 	    if ( State2.runmode ) {
 14030              		.loc 1 1856 7 is_stmt 0 view .LVU4283
 14031 1c94 0028     		cmp	r0, #0
 14032 1c96 7FF405AB 		bne	.L1003
1857:src/keys.c    **** 	      // Alpha scroll right
 14033              		.loc 1 1857 6 is_stmt 1 view .LVU4284
1857:src/keys.c    **** 	      // Alpha scroll right
 14034              		.loc 1 1857 9 is_stmt 0 view .LVU4285
 14035 1c9a 4906     		lsls	r1, r1, #25
 14036 1c9c 7EF512AC 		bpl	.L1025
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14037              		.loc 1 1859 8 is_stmt 1 view .LVU4286
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14038              		.loc 1 1859 11 is_stmt 0 view .LVU4287
 14039 1ca0 B9F1000F 		cmp	r9, #0
 14040 1ca4 3EF41EAD 		beq	.L1309
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 14041              		.loc 1 1860 3 is_stmt 1 view .LVU4288
ARM GAS  /tmp/cceyv6gL.s 			page 383


1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 14042              		.loc 1 1860 31 is_stmt 0 view .LVU4289
 14043 1ca8 09F1FF33 		add	r3, r9, #-1
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 14044              		.loc 1 1860 20 view .LVU4290
 14045 1cac 88F80D30 		strb	r3, [r8, #13]
1861:src/keys.c    **** 	    }
 14046              		.loc 1 1861 15 view .LVU4291
 14047 1cb0 3324     		movs	r4, #51
 14048 1cb2 3368     		ldr	r3, [r6]
 14049 1cb4 FEF7FFB9 		b	.L801
 14050              	.L1008:
1827:src/keys.c    **** 	    if ( State2.runmode ) {
 14051              		.loc 1 1827 4 is_stmt 1 view .LVU4292
1827:src/keys.c    **** 	    if ( State2.runmode ) {
 14052              		.loc 1 1827 7 is_stmt 0 view .LVU4293
 14053 1cb8 0028     		cmp	r0, #0
 14054 1cba 7FF4F3AA 		bne	.L1003
1828:src/keys.c    **** 	      // Alpha scroll left
 14055              		.loc 1 1828 6 is_stmt 1 view .LVU4294
1828:src/keys.c    **** 	      // Alpha scroll left
 14056              		.loc 1 1828 9 is_stmt 0 view .LVU4295
 14057 1cbe 4806     		lsls	r0, r1, #25
 14058              	.LVL1190:
1828:src/keys.c    **** 	      // Alpha scroll left
 14059              		.loc 1 1828 9 view .LVU4296
 14060 1cc0 7EF5F8AB 		bpl	.L1021
1836:src/keys.c    **** 		alpha_pos += 1;
 14061              		.loc 1 1836 8 is_stmt 1 view .LVU4297
1836:src/keys.c    **** 		alpha_pos += 1;
 14062              		.loc 1 1836 11 is_stmt 0 view .LVU4298
 14063 1cc4 B9F1000F 		cmp	r9, #0
 14064 1cc8 1CD1     		bne	.L1022
 14065              	.LVL1191:
 14066              	.L1024:
1837:src/keys.c    **** 	      }
 14067              		.loc 1 1837 3 is_stmt 1 view .LVU4299
1837:src/keys.c    **** 	      }
 14068              		.loc 1 1837 13 is_stmt 0 view .LVU4300
 14069 1cca 09F1010A 		add	r10, r9, #1
 14070              	.LVL1192:
 14071              	.L1023:
1844:src/keys.c    **** #else
 14072              		.loc 1 1844 8 is_stmt 1 view .LVU4301
 14073 1cce 3368     		ldr	r3, [r6]
1844:src/keys.c    **** #else
 14074              		.loc 1 1844 25 is_stmt 0 view .LVU4302
 14075 1cd0 88F80DA0 		strb	r10, [r8, #13]
1849:src/keys.c    **** 	    }
 14076              		.loc 1 1849 8 is_stmt 1 view .LVU4303
1849:src/keys.c    **** 	    }
 14077              		.loc 1 1849 15 is_stmt 0 view .LVU4304
 14078 1cd4 3324     		movs	r4, #51
 14079 1cd6 FEF7EEB9 		b	.L801
 14080              	.LVL1193:
 14081              	.L985:
1849:src/keys.c    **** 	    }
ARM GAS  /tmp/cceyv6gL.s 			page 384


 14082              		.loc 1 1849 15 view .LVU4305
 14083              	.LBE1316:
 14084              	.LBE1385:
 14085              	.LBB1386:
 14086              	.LBB1234:
3160:src/keys.c    **** 		goto reset_window;
 14087              		.loc 1 3160 4 is_stmt 1 view .LVU4306
3160:src/keys.c    **** 		goto reset_window;
 14088              		.loc 1 3160 24 is_stmt 0 view .LVU4307
 14089 1cda 0AF1FF3A 		add	r10, r10, #-1
 14090              	.LVL1194:
3160:src/keys.c    **** 		goto reset_window;
 14091              		.loc 1 3160 18 view .LVU4308
 14092 1cde A8F808A0 		strh	r10, [r8, #8]	@ movhi
 14093 1ce2 FFF70EBA 		b	.L977
 14094              	.LVL1195:
 14095              	.L1385:
3156:src/keys.c    **** 			--State2.digval;
 14096              		.loc 1 3156 5 is_stmt 1 view .LVU4309
3156:src/keys.c    **** 			--State2.digval;
 14097              		.loc 1 3156 21 is_stmt 0 view .LVU4310
 14098 1ce6 FFF7FEFF 		bl	global_regs
 14099              	.LVL1196:
3156:src/keys.c    **** 			--State2.digval;
 14100              		.loc 1 3156 19 view .LVU4311
 14101 1cea A8F80800 		strh	r0, [r8, #8]	@ movhi
 14102 1cee FFF703BA 		b	.L986
 14103              	.LVL1197:
 14104              	.L1376:
3156:src/keys.c    **** 			--State2.digval;
 14105              		.loc 1 3156 19 view .LVU4312
 14106              	.LBE1234:
 14107              	.LBE1386:
 14108              	.LBB1387:
 14109              	.LBB1141:
2866:src/keys.c    **** 		State2.numdigit = 2;
 14110              		.loc 1 2866 3 is_stmt 1 view .LVU4313
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 14111              		.loc 1 2867 19 is_stmt 0 view .LVU4314
 14112 1cf2 0222     		movs	r2, #2
2866:src/keys.c    **** 		State2.numdigit = 2;
 14113              		.loc 1 2866 18 view .LVU4315
 14114 1cf4 88F80A40 		strb	r4, [r8, #10]
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 14115              		.loc 1 2867 3 is_stmt 1 view .LVU4316
 14116 1cf8 3368     		ldr	r3, [r6]
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 14117              		.loc 1 2867 19 is_stmt 0 view .LVU4317
 14118 1cfa 88F80B20 		strb	r2, [r8, #11]
2868:src/keys.c    **** 	}
 14119              		.loc 1 2868 3 is_stmt 1 view .LVU4318
2868:src/keys.c    **** 	}
 14120              		.loc 1 2868 10 is_stmt 0 view .LVU4319
 14121 1cfe 3324     		movs	r4, #51
 14122              	.LVL1198:
2868:src/keys.c    **** 	}
 14123              		.loc 1 2868 10 view .LVU4320
ARM GAS  /tmp/cceyv6gL.s 			page 385


 14124 1d00 FEF7D9B9 		b	.L801
 14125              	.LVL1199:
 14126              	.L1022:
2868:src/keys.c    **** 	}
 14127              		.loc 1 2868 10 view .LVU4321
 14128              	.LBE1141:
 14129              	.LBE1387:
 14130              	.LBB1388:
 14131              	.LBB1317:
1836:src/keys.c    **** 		alpha_pos += 1;
 14132              		.loc 1 1836 33 view .LVU4322
 14133 1d04 FFF7FEFF 		bl	alen
 14134              	.LVL1200:
1836:src/keys.c    **** 		alpha_pos += 1;
 14135              		.loc 1 1836 41 view .LVU4323
 14136 1d08 09EB4903 		add	r3, r9, r9, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 14137              		.loc 1 1836 39 view .LVU4324
 14138 1d0c A0EB4300 		sub	r0, r0, r3, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 14139              		.loc 1 1836 29 view .LVU4325
 14140 1d10 1328     		cmp	r0, #19
 14141 1d12 DAD8     		bhi	.L1024
 14142 1d14 DBE7     		b	.L1023
 14143              	.LVL1201:
 14144              	.L1392:
1836:src/keys.c    **** 		alpha_pos += 1;
 14145              		.loc 1 1836 29 view .LVU4326
 14146              	.LBE1317:
 14147              	.LBE1388:
 14148              	.LBB1389:
 14149              	.LBB963:
 14150              	.LBB927:
1324:src/keys.c    **** 	 return process_cmplx(c);
 14151              		.loc 1 1324 3 is_stmt 1 view .LVU4327
 14152 1d16 0120     		movs	r0, #1
 14153 1d18 FFF7FEFF 		bl	finish_cpx_entry
 14154              	.LVL1202:
1325:src/keys.c    ****        }
 14155              		.loc 1 1325 3 view .LVU4328
1325:src/keys.c    ****        }
 14156              		.loc 1 1325 10 is_stmt 0 view .LVU4329
 14157 1d1c 2046     		mov	r0, r4
 14158 1d1e FFF7FEFF 		bl	process_cmplx
 14159              	.LVL1203:
 14160 1d22 0446     		mov	r4, r0
 14161              	.LVL1204:
1325:src/keys.c    ****        }
 14162              		.loc 1 1325 10 view .LVU4330
 14163 1d24 FEF75CBB 		b	.L835
 14164              	.LVL1205:
 14165              	.L1391:
1325:src/keys.c    ****        }
 14166              		.loc 1 1325 10 view .LVU4331
 14167              	.LBE927:
1306:src/keys.c    ****        if ( CmdLineLength ) {
 14168              		.loc 1 1306 8 is_stmt 1 view .LVU4332
ARM GAS  /tmp/cceyv6gL.s 			page 386


 14169              	.LBB928:
 14170              	.LBI928:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14171              		.loc 1 114 13 view .LVU4333
 14172              	.LBE928:
 14173              	.LBE963:
 14174              	.LBE1389:
 14175              	.LBE1441:
 14176              	.LBE1514:
 115:src/keys.c    **** }
 14177              		.loc 1 115 2 view .LVU4334
 14178              	.LBB1515:
 14179              	.LBB1442:
 14180              	.LBB1390:
 14181              	.LBB964:
 14182              	.LBB935:
 14183              	.LBB929:
 14184              	.LBI929:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14185              		.loc 1 104 20 view .LVU4335
 14186              	.LBB930:
 105:src/keys.c    **** 	State2.shifts = shift;
 14187              		.loc 1 105 2 view .LVU4336
 14188              	.LBB931:
 14189              	.LBI931:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14190              		.loc 1 96 13 view .LVU4337
 14191              	.LBB932:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14192              		.loc 1 97 2 view .LVU4338
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14193              		.loc 1 97 18 is_stmt 0 view .LVU4339
 14194 1d28 FFF7FEFF 		bl	shift_down
 14195              	.LVL1206:
  98:src/keys.c    **** }
 14196              		.loc 1 98 2 is_stmt 1 view .LVU4340
 14197              	.LBE932:
 14198              	.LBE931:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14199              		.loc 1 106 2 view .LVU4341
 14200              	.LBE930:
 14201              	.LBE929:
 14202              	.LBE935:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 14203              		.loc 1 1307 11 is_stmt 0 view .LVU4342
 14204 1d2c 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 14205              	.LBB936:
 14206              	.LBB934:
 14207              	.LBB933:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14208              		.loc 1 106 16 view .LVU4343
 14209 1d30 0023     		movs	r3, #0
 14210 1d32 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14211              		.loc 1 108 2 is_stmt 1 view .LVU4344
 14212              	.LVL1207:
 108:src/keys.c    **** }
ARM GAS  /tmp/cceyv6gL.s 			page 387


 14213              		.loc 1 108 2 is_stmt 0 view .LVU4345
 14214              	.LBE933:
 14215              	.LBE934:
 14216              	.LBE936:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 14217              		.loc 1 1307 8 is_stmt 1 view .LVU4346
1307:src/keys.c    **** 	 State2.state_lift = 0;
 14218              		.loc 1 1307 11 is_stmt 0 view .LVU4347
 14219 1d36 62B1     		cbz	r2, .L1042
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14220              		.loc 1 1308 3 is_stmt 1 view .LVU4348
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14221              		.loc 1 1308 21 is_stmt 0 view .LVU4349
 14222 1d38 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 14223              	.LBE964:
 14224              	.LBE1390:
 14225              	.LBE1442:
 14226              	.LBE1515:
3635:src/keys.c    **** 	NonProgrammable = 0;
 14227              		.loc 1 3635 11 view .LVU4350
 14228 1d3c 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 14229              	.LBB1516:
 14230              	.LBB1443:
 14231              	.LBB1391:
 14232              	.LBB965:
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14233              		.loc 1 1308 21 view .LVU4351
 14234 1d40 63F38612 		bfi	r2, r3, #6, #1
 14235 1d44 88F81720 		strb	r2, [r8, #23]
1309:src/keys.c    ****        }
 14236              		.loc 1 1309 3 is_stmt 1 view .LVU4352
 14237              	.LVL1208:
1309:src/keys.c    ****        }
 14238              		.loc 1 1309 3 is_stmt 0 view .LVU4353
 14239              	.LBE965:
 14240              	.LBE1391:
 14241              	.LBE1443:
 14242              	.LBE1516:
3635:src/keys.c    **** 	NonProgrammable = 0;
 14243              		.loc 1 3635 7 is_stmt 1 view .LVU4354
3635:src/keys.c    **** 	NonProgrammable = 0;
 14244              		.loc 1 3635 10 is_stmt 0 view .LVU4355
 14245 1d48 4A06     		lsls	r2, r1, #25
 14246 1d4a 0CD4     		bmi	.L1043
 14247              	.LBB1517:
 14248              	.LBB1444:
 14249              	.LBB1392:
 14250              	.LBB966:
1309:src/keys.c    ****        }
 14251              		.loc 1 1309 10 view .LVU4356
 14252 1d4c 4FF4E474 		mov	r4, #456
 14253 1d50 19E5     		b	.L1044
 14254              	.LVL1209:
 14255              	.L1042:
1309:src/keys.c    ****        }
 14256              		.loc 1 1309 10 view .LVU4357
 14257              	.LBE966:
ARM GAS  /tmp/cceyv6gL.s 			page 388


 14258              	.LBE1392:
 14259              	.LBE1444:
 14260              	.LBE1517:
3635:src/keys.c    **** 	NonProgrammable = 0;
 14261              		.loc 1 3635 7 is_stmt 1 view .LVU4358
3635:src/keys.c    **** 	NonProgrammable = 0;
 14262              		.loc 1 3635 11 is_stmt 0 view .LVU4359
 14263 1d52 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 14264              		.loc 1 3635 10 view .LVU4360
 14265 1d56 5906     		lsls	r1, r3, #25
 14266 1d58 0BD5     		bpl	.L1156
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14267              		.loc 1 3636 2 is_stmt 1 view .LVU4361
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14268              		.loc 1 3636 18 is_stmt 0 view .LVU4362
 14269 1d5a 074B     		ldr	r3, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14270              		.loc 1 3637 32 view .LVU4363
 14271 1d5c 40F2C710 		movw	r0, #455
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14272              		.loc 1 3636 18 view .LVU4364
 14273 1d60 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14274              		.loc 1 3637 2 is_stmt 1 view .LVU4365
 14275 1d62 FEF776BC 		b	.L1101
 14276              	.LVL1210:
 14277              	.L1043:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14278              		.loc 1 3636 2 view .LVU4366
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14279              		.loc 1 3636 18 is_stmt 0 view .LVU4367
 14280 1d66 044A     		ldr	r2, .L1415
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14281              		.loc 1 3637 32 view .LVU4368
 14282 1d68 4FF4E470 		mov	r0, #456
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14283              		.loc 1 3636 18 view .LVU4369
 14284 1d6c 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14285              		.loc 1 3637 2 is_stmt 1 view .LVU4370
 14286 1d6e FEF770BC 		b	.L1101
 14287              	.LVL1211:
 14288              	.L1156:
 14289              	.LBB1518:
 14290              	.LBB1445:
 14291              	.LBB1393:
 14292              	.LBB967:
1312:src/keys.c    ****        }
 14293              		.loc 1 1312 10 is_stmt 0 view .LVU4371
 14294 1d72 40F2C714 		movw	r4, #455
 14295 1d76 06E5     		b	.L1044
 14296              	.L1416:
 14297              		.align	2
 14298              	.L1415:
 14299 1d78 00000000 		.word	NonProgrammable
 14300              	.LBE967:
ARM GAS  /tmp/cceyv6gL.s 			page 389


 14301              	.LBE1393:
 14302              	.LBE1445:
 14303              	.LBE1518:
 14304              		.cfi_endproc
 14305              	.LFE63:
 14307              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14308              		.align	1
 14309              		.p2align 2,,3
 14310              		.global	process_keycode_with_shift
 14311              		.syntax unified
 14312              		.thumb
 14313              		.thumb_func
 14314              		.fpu fpv4-sp-d16
 14316              	process_keycode_with_shift:
 14317              	.LFB62:
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14318              		.loc 1 3383 61 is_stmt 1 view -0
 14319              		.cfi_startproc
 14320              		@ args = 0, pretend = 0, frame = 8
 14321              		@ frame_needed = 0, uses_anonymous_args = 0
 14322 0000 30B5     		push	{r4, r5, lr}
 14323              		.cfi_def_cfa_offset 12
 14324              		.cfi_offset 4, -12
 14325              		.cfi_offset 5, -8
 14326              		.cfi_offset 14, -4
 14327 0002 83B0     		sub	sp, sp, #12
 14328              		.cfi_def_cfa_offset 24
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14329              		.loc 1 3383 61 is_stmt 0 view .LVU4373
 14330 0004 02AB     		add	r3, sp, #8
 14331 0006 03E90300 		stmdb	r3, {r0, r1}
 14332 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14333              	.LVL1212:
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14334              		.loc 1 3384 4 is_stmt 1 view .LVU4374
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14335              		.loc 1 3384 7 is_stmt 0 view .LVU4375
 14336 000e 2E2C     		cmp	r4, #46
 14337 0010 10D0     		beq	.L1417
3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14338              		.loc 1 3385 4 is_stmt 1 view .LVU4376
3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14339              		.loc 1 3385 7 is_stmt 0 view .LVU4377
 14340 0012 332C     		cmp	r4, #51
 14341 0014 1DD0     		beq	.L1424
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14342              		.loc 1 3394 7 view .LVU4378
 14343 0016 342C     		cmp	r4, #52
 14344 0018 019D     		ldr	r5, [sp, #4]
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14345              		.loc 1 3394 4 is_stmt 1 view .LVU4379
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14346              		.loc 1 3394 7 is_stmt 0 view .LVU4380
 14347 001a 0DD0     		beq	.L1425
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14348              		.loc 1 3398 9 is_stmt 1 view .LVU4381
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
ARM GAS  /tmp/cceyv6gL.s 			page 390


 14349              		.loc 1 3398 12 is_stmt 0 view .LVU4382
 14350 001c 002D     		cmp	r5, #0
 14351 001e 03DB     		blt	.L1422
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14352              		.loc 1 3398 34 is_stmt 1 discriminator 1 view .LVU4383
 14353              	.LVL1213:
 14354              	.LBB1519:
 14355              	.LBI1519:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14356              		.loc 1 104 20 discriminator 1 view .LVU4384
 14357              	.LBB1520:
 105:src/keys.c    **** 	State2.shifts = shift;
 14358              		.loc 1 105 2 discriminator 1 view .LVU4385
 14359              	.LBB1521:
 14360              	.LBI1521:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14361              		.loc 1 96 13 discriminator 1 view .LVU4386
 14362              	.LBB1522:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14363              		.loc 1 97 2 discriminator 1 view .LVU4387
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14364              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4388
 14365 0020 FFF7FEFF 		bl	shift_down
 14366              	.LVL1214:
  98:src/keys.c    **** }
 14367              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4389
 14368              	.LBE1522:
 14369              	.LBE1521:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14370              		.loc 1 106 2 discriminator 1 view .LVU4390
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14371              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4391
 14372 0024 194B     		ldr	r3, .L1426
 14373              	.LBE1520:
 14374              	.LBE1519:
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14375              		.loc 1 3398 34 discriminator 1 view .LVU4392
 14376 0026 1D74     		strb	r5, [r3, #16]
 14377              	.LBB1524:
 14378              	.LBB1523:
 108:src/keys.c    **** }
 14379              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4393
 14380              	.LVL1215:
 14381              	.L1422:
 108:src/keys.c    **** }
 14382              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4394
 14383              	.LBE1523:
 14384              	.LBE1524:
3399:src/keys.c    ****  }
 14385              		.loc 1 3399 4 is_stmt 1 view .LVU4395
 14386 0028 2046     		mov	r0, r4
3400:src/keys.c    ****  
 14387              		.loc 1 3400 2 is_stmt 0 view .LVU4396
 14388 002a 03B0     		add	sp, sp, #12
 14389              		.cfi_remember_state
 14390              		.cfi_def_cfa_offset 12
 14391              		@ sp needed
ARM GAS  /tmp/cceyv6gL.s 			page 391


 14392 002c BDE83040 		pop	{r4, r5, lr}
 14393              		.cfi_restore 14
 14394              		.cfi_restore 5
 14395              		.cfi_restore 4
 14396              		.cfi_def_cfa_offset 0
 14397              	.LVL1216:
3399:src/keys.c    ****  }
 14398              		.loc 1 3399 4 view .LVU4397
 14399 0030 FFF7FEBF 		b	process_keycode
 14400              	.LVL1217:
 14401              	.L1417:
 14402              		.cfi_restore_state
3400:src/keys.c    ****  
 14403              		.loc 1 3400 2 view .LVU4398
 14404 0034 03B0     		add	sp, sp, #12
 14405              		.cfi_remember_state
 14406              		.cfi_def_cfa_offset 12
 14407              		@ sp needed
 14408 0036 30BD     		pop	{r4, r5, pc}
 14409              	.LVL1218:
 14410              	.L1425:
 14411              		.cfi_restore_state
3395:src/keys.c    ****      set_shift(SHIFT_N);
 14412              		.loc 1 3395 6 is_stmt 1 view .LVU4399
3395:src/keys.c    ****      set_shift(SHIFT_N);
 14413              		.loc 1 3395 16 is_stmt 0 view .LVU4400
 14414 0038 154B     		ldr	r3, .L1426+4
 14415 003a 1D60     		str	r5, [r3]
3396:src/keys.c    ****    }
 14416              		.loc 1 3396 6 is_stmt 1 view .LVU4401
 14417              	.LVL1219:
 14418              	.LBB1525:
 14419              	.LBI1525:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14420              		.loc 1 104 20 view .LVU4402
 14421              	.LBB1526:
 105:src/keys.c    **** 	State2.shifts = shift;
 14422              		.loc 1 105 2 view .LVU4403
 14423              	.LBB1527:
 14424              	.LBI1527:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14425              		.loc 1 96 13 view .LVU4404
 14426              	.LBB1528:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14427              		.loc 1 97 2 view .LVU4405
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14428              		.loc 1 97 18 is_stmt 0 view .LVU4406
 14429 003c FFF7FEFF 		bl	shift_down
 14430              	.LVL1220:
  98:src/keys.c    **** }
 14431              		.loc 1 98 2 is_stmt 1 view .LVU4407
 14432              	.LBE1528:
 14433              	.LBE1527:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14434              		.loc 1 106 2 view .LVU4408
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14435              		.loc 1 106 16 is_stmt 0 view .LVU4409
ARM GAS  /tmp/cceyv6gL.s 			page 392


 14436 0040 124B     		ldr	r3, .L1426
 14437 0042 0022     		movs	r2, #0
 14438              	.LBE1526:
 14439              	.LBE1525:
3399:src/keys.c    ****  }
 14440              		.loc 1 3399 4 view .LVU4410
 14441 0044 2046     		mov	r0, r4
 14442              	.LBB1530:
 14443              	.LBB1529:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14444              		.loc 1 106 16 view .LVU4411
 14445 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14446              		.loc 1 108 2 is_stmt 1 view .LVU4412
 14447              	.LVL1221:
 108:src/keys.c    **** }
 14448              		.loc 1 108 2 is_stmt 0 view .LVU4413
 14449              	.LBE1529:
 14450              	.LBE1530:
3399:src/keys.c    ****  }
 14451              		.loc 1 3399 4 is_stmt 1 view .LVU4414
3400:src/keys.c    ****  
 14452              		.loc 1 3400 2 is_stmt 0 view .LVU4415
 14453 0048 03B0     		add	sp, sp, #12
 14454              		.cfi_remember_state
 14455              		.cfi_def_cfa_offset 12
 14456              		@ sp needed
 14457 004a BDE83040 		pop	{r4, r5, lr}
 14458              		.cfi_restore 14
 14459              		.cfi_restore 5
 14460              		.cfi_restore 4
 14461              		.cfi_def_cfa_offset 0
 14462              	.LVL1222:
3399:src/keys.c    ****  }
 14463              		.loc 1 3399 4 view .LVU4416
 14464 004e FFF7FEBF 		b	process_keycode
 14465              	.LVL1223:
 14466              	.L1424:
 14467              		.cfi_restore_state
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14468              		.loc 1 3386 6 is_stmt 1 view .LVU4417
 14469 0052 104B     		ldr	r3, .L1426+8
 14470 0054 41F23010 		movw	r0, #4400
 14471 0058 9847     		blx	r3
 14472              	.LVL1224:
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14473              		.loc 1 3386 31 view .LVU4418
 14474 005a 0A20     		movs	r0, #10
 14475 005c 0E4B     		ldr	r3, .L1426+12
 14476 005e 9847     		blx	r3
 14477              	.LVL1225:
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14478              		.loc 1 3386 46 view .LVU4419
 14479 0060 0E4B     		ldr	r3, .L1426+16
 14480 0062 9847     		blx	r3
 14481              	.LVL1226:
3387:src/keys.c    ****        // Was error just wait for confirmation
ARM GAS  /tmp/cceyv6gL.s 			page 393


 14482              		.loc 1 3387 6 view .LVU4420
3387:src/keys.c    ****        // Was error just wait for confirmation
 14483              		.loc 1 3387 11 is_stmt 0 view .LVU4421
 14484 0064 0E4B     		ldr	r3, .L1426+20
 14485 0066 0120     		movs	r0, #1
 14486 0068 9847     		blx	r3
 14487              	.LVL1227:
3387:src/keys.c    ****        // Was error just wait for confirmation
 14488              		.loc 1 3387 9 view .LVU4422
 14489 006a 0228     		cmp	r0, #2
 14490 006c 01D1     		bne	.L1420
3389:src/keys.c    ****      }
 14491              		.loc 1 3389 8 is_stmt 1 view .LVU4423
 14492 006e 0D4B     		ldr	r3, .L1426+24
 14493 0070 9847     		blx	r3
 14494              	.LVL1228:
 14495              	.L1420:
3391:src/keys.c    ****      return;
 14496              		.loc 1 3391 6 view .LVU4424
 14497 0072 084B     		ldr	r3, .L1426+8
 14498 0074 42F26020 		movw	r0, #8800
 14499 0078 9847     		blx	r3
 14500              	.LVL1229:
3391:src/keys.c    ****      return;
 14501              		.loc 1 3391 31 view .LVU4425
 14502 007a 074B     		ldr	r3, .L1426+12
 14503 007c 0A20     		movs	r0, #10
 14504 007e 9847     		blx	r3
 14505              	.LVL1230:
3391:src/keys.c    ****      return;
 14506              		.loc 1 3391 46 view .LVU4426
 14507 0080 064B     		ldr	r3, .L1426+16
3400:src/keys.c    ****  
 14508              		.loc 1 3400 2 is_stmt 0 view .LVU4427
 14509 0082 03B0     		add	sp, sp, #12
 14510              		.cfi_def_cfa_offset 12
 14511              		@ sp needed
 14512 0084 BDE83040 		pop	{r4, r5, lr}
 14513              		.cfi_restore 14
 14514              		.cfi_restore 5
 14515              		.cfi_restore 4
 14516              		.cfi_def_cfa_offset 0
 14517              	.LVL1231:
3391:src/keys.c    ****      return;
 14518              		.loc 1 3391 46 view .LVU4428
 14519 0088 1847     		bx	r3	@ indirect register sibling call
 14520              	.LVL1232:
 14521              	.L1427:
 14522 008a 00BF     		.align	2
 14523              	.L1426:
 14524 008c 00000000 		.word	StateWhileOn
 14525 0090 00000000 		.word	nd_opcode
 14526 0094 F5020008 		.word	134218485
 14527 0098 05040008 		.word	134218757
 14528 009c F9020008 		.word	134218489
 14529 00a0 79030008 		.word	134218617
 14530 00a4 99030008 		.word	134218649
ARM GAS  /tmp/cceyv6gL.s 			page 394


 14531              		.cfi_endproc
 14532              	.LFE62:
 14534              		.comm	nd_opcode,4,4
 14535              		.comm	NonProgrammable,4,4
 14536              		.comm	GoFast,4,4
 14537              		.comm	OpCodeDisplayPending,4,4
 14538              		.comm	OpCode,4,4
 14539              		.comm	WasDataEntry,4,4
 14540              		.section	.bss.was_paused.9851,"aw",%nobits
 14541              		.align	2
 14542              		.set	.LANCHOR18,. + 0
 14545              	was_paused.9851:
 14546 0000 00000000 		.space	4
 14547              		.section	.rodata.alpha_arrows,"a"
 14548              		.align	2
 14551              	alpha_arrows:
 14552 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14552      03049F5E 
 14552      7F
 14553              		.section	.rodata.alpha_catalogue,"a"
 14554              		.align	2
 14557              	alpha_catalogue:
 14558 0000 0D4AC280 		.ascii	"\015J\302\200\236\266J\242~\326\266\255\273r\335(J\260"
 14558      9EB64AA2 
 14558      7ED6B6AD 
 14558      BB72DD28 
 14558      4AB0
 14559              		.section	.rodata.alpha_compares,"a"
 14560              		.align	2
 14563              	alpha_compares:
 14564 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14564      0A3E5B5D 
 14564      7B7D
 14565              		.section	.rodata.alpha_letters,"a"
 14566              		.align	2
 14567              		.set	.LANCHOR9,. + 0
 14570              	alpha_letters:
 14571 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14571      88C4C5C6 
 14571      C784C8C9 
 14571      CA
 14572 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14572      CECFD0D1 
 14572      D2D3D415 
 14572      D5
 14573 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14573      DADBDC01 
 14573      1902DD1A 
 14573      DE
 14574 0027 DF       		.ascii	"\337"
 14575              		.section	.rodata.alpha_letters_lower,"a"
 14576              		.align	2
 14577              		.set	.LANCHOR10,. + 0
 14580              	alpha_letters_lower:
 14581 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14581      89E4E5E6 
 14581      E785E8E9 
ARM GAS  /tmp/cceyv6gL.s 			page 395


 14581      EA
 14582 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14582      EEEFF0F1 
 14582      F2F3F416 
 14582      F5
 14583 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14583      FAFBFC01 
 14583      1902FD1A 
 14583      FE
 14584 0027 FF       		.ascii	"\377"
 14585              		.section	.rodata.alpha_subscripts,"a"
 14586              		.align	2
 14589              	alpha_subscripts:
 14590 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14590      9A80D798 
 14590      BB1486BC 
 14590      F7
 14591 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14591      BF818B9C 
 14591      8C999D90 
 14591      9B
 14592              		.section	.rodata.alpha_symbols,"a"
 14593              		.align	2
 14596              	alpha_symbols:
 14597 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14597      222A405F 
 14597      7E25240C 
 14597      1E1F8EAE 
 14597      926023
 14598              		.section	.rodata.alphamap.9335,"a"
 14599              		.align	2
 14600              		.set	.LANCHOR15,. + 0
 14603              	alphamap.9335:
 14604 0000 41004100 		.ascii	"A\000A\000a\240"
 14604      61A0
 14605 0006 42004200 		.ascii	"B\000B\000b\241"
 14605      62A1
 14606 000c 43008200 		.ascii	"C\000\202\000c\242"
 14606      63A2
 14607 0012 44008300 		.ascii	"D\000\203\000d\243"
 14607      64A3
 14608 0018 450D4500 		.ascii	"E\015E\000e\244"
 14608      65A4
 14609 001e 46009400 		.ascii	"F\000\224\000f\264"
 14609      66B4
 14610 0024 47008200 		.ascii	"G\000\202\000g\242"
 14610      67A2
 14611 002a 48005800 		.ascii	"H\000X\000h\265"
 14611      68B5
 14612 0030 49004900 		.ascii	"I\000I\000i\250"
 14612      69A8
 14613 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14613      6A00
 14614 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14614      6BA9
 14615 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14615      6CAA
ARM GAS  /tmp/cceyv6gL.s 			page 396


 14616 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14616      00A6
 14617 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14617      6DAB
 14618 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14618      6EAC
 14619 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14619      6FB7
 14620 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14620      0000
 14621 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14621      0000
 14622 006c 50378F26 		.ascii	"P7\217&p\257"
 14622      70AF
 14623 0072 5138007C 		.ascii	"Q8\000|q\000"
 14623      7100
 14624 0078 5239520B 		.ascii	"R9R\013r\260"
 14624      72B0
 14625 007e 532F915C 		.ascii	"S/\221\\s\261"
 14625      73B1
 14626 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14626      0000
 14627 008a 54345400 		.ascii	"T4T\000t\262"
 14627      74B2
 14628 0090 55350000 		.ascii	"U5\000\000u\000"
 14628      7500
 14629 0096 56360000 		.ascii	"V6\000\000v\000"
 14629      7600
 14630 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14630      7700
 14631 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14631      0000
 14632 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14632      78AD
 14633 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14633      79B3
 14634 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14634      7AA5
 14635 00ba 2D282900 		.ascii	"-()\000\000\000"
 14635      0000
 14636 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14636      0000
 14637 00c6 3A308720 		.ascii	":0\207 ;\247"
 14637      3BA7
 14638 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14638      2EB6
 14639 00d2 3F002100 		.ascii	"?\000!\000?\000"
 14639      3F00
 14640 00d8 202B3D00 		.ascii	" +=\000  "
 14640      2020
 14641 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14641      0000
 14642              		.section	.rodata.amap.9326,"a"
 14643              		.align	2
 14644              		.set	.LANCHOR16,. + 0
 14647              	amap.9326:
 14648 0000 04       		.byte	4
ARM GAS  /tmp/cceyv6gL.s 			page 397


 14649 0001 000D00   		.ascii	"\000\015\000"
 14650 0004 05       		.byte	5
 14651 0005 000E09   		.ascii	"\000\016\011"
 14652 0008 2C       		.byte	44
 14653 0009 000D00   		.ascii	"\000\015\000"
 14654 000c 2D       		.byte	45
 14655 000d 000E09   		.ascii	"\000\016\011"
 14656 0010 08       		.byte	8
 14657 0011 00000F   		.ascii	"\000\000\017"
 14658 0014 1F       		.byte	31
 14659 0015 00000C   		.ascii	"\000\000\014"
 14660 0018 21       		.byte	33
 14661 0019 00000A   		.ascii	"\000\000\012"
 14662 001c 26       		.byte	38
 14663 001d 00000B   		.ascii	"\000\000\013"
 14664              		.section	.rodata.catalogue,"a"
 14665              		.align	2
 14668              	catalogue:
 14669 0000 46DB66A8 		.ascii	"F\333f\250\301c\030\324\024\242;Y\007\004}H3\021\011"
 14669      C16318D4 
 14669      14A23B59 
 14669      07047D48 
 14669      331109
 14670 0013 836753D4 		.ascii	"\203gS\324\371\222EY\344q\004nS\004\305\"q\334\206\335"
 14670      F9924559 
 14670      E471046E 
 14670      5304C522 
 14670      71DC86DD 
 14671 0027 B8691CFC 		.ascii	"\270i\034\374\275\324s\230GE\272q\221Ga\254M\031\026"
 14671      BDD47398 
 14671      4745BA71 
 14671      914761AC 
 14671      4D1916
 14672 003a A5A86998 		.ascii	"\245\250i\230\366\371\3150\333\367\015!\311\320l\233"
 14672      F6F9CD30 
 14672      DBF70D21 
 14672      C9D06C9B 
 14673 004a 22C8D0A4 		.ascii	"\"\310\320\244\244\302\314\0127\021\223qCV\010\312E"
 14673      A4C2CC0A 
 14673      37119371 
 14673      435608CA 
 14673      45
 14674 005b D164611A 		.ascii	"\321da\032p\012\307%\216t\012\002z\331*\211\373b\326"
 14674      700AC725 
 14674      8E740A02 
 14674      7AD92A89 
 14674      FB62D6
 14675 006e B6ADBB72 		.ascii	"\266\255\273r\335\265\312\022\255\253L\332\366\301\255"
 14675      DDB5CA12 
 14675      ADAB4CDA 
 14675      F6C1AD
 14676 007d 6B9C262D 		.ascii	"k\234&-\234C\335\326\321\327_\027\226\314"
 14676      9C43DDD6 
 14676      D1D75F17 
 14676      96CC
 14677              		.section	.rodata.catalogue_sizes.9649,"a"
 14678              		.align	2
ARM GAS  /tmp/cceyv6gL.s 			page 398


 14679              		.set	.LANCHOR8,. + 0
 14682              	catalogue_sizes.9649:
 14683 0000 006F1E11 		.ascii	"\000o\036\0216=C\205%:\016\023\012\011(\032LLX\016\023"
 14683      363D4385 
 14683      253A0E13 
 14683      0A09281A 
 14683      4C4C580E 
 14684              		.section	.rodata.catalogues.9657,"a"
 14685              		.align	2
 14686              		.set	.LANCHOR12,. + 0
 14689              	catalogues.9657:
 14690 0000 00000000 		.word	0
 14691 0004 00000000 		.word	catalogue
 14692 0008 00000000 		.word	cplx_catalogue
 14693 000c 00000000 		.word	stats_catalogue
 14694 0010 00000000 		.word	prob_catalogue
 14695 0014 00000000 		.word	int_catalogue
 14696 0018 00000000 		.word	prog_catalogue
 14697 001c 00000000 		.word	program_xfcn
 14698 0020 00000000 		.word	test_catalogue
 14699 0024 00000000 		.word	mode_catalogue
 14700 0028 00000000 		.word	alpha_catalogue
 14701 002c 00000000 		.word	alpha_symbols
 14702 0030 00000000 		.word	alpha_compares
 14703 0034 00000000 		.word	alpha_arrows
 14704 0038 00000000 		.word	alpha_letters
 14705 003c 00000000 		.word	alpha_subscripts
 14706 0040 00000000 		.word	0
 14707 0044 00000000 		.word	0
 14708 0048 00000000 		.word	0
 14709 004c 00000000 		.word	sums_catalogue
 14710 0050 00000000 		.word	matrix_catalogue
 14711              		.section	.rodata.cmap.9325,"a"
 14712              		.align	2
 14713              		.set	.LANCHOR17,. + 0
 14716              	cmap.9325:
 14717 0000 04       		.byte	4
 14718 0001 120012   		.ascii	"\022\000\022"
 14719 0004 05       		.byte	5
 14720 0005 090909   		.ascii	"\011\011\011"
 14721 0008 06       		.byte	6
 14722 0009 151515   		.ascii	"\025\025\025"
 14723 000c 0C       		.byte	12
 14724 000d 100011   		.ascii	"\020\000\021"
 14725 0010 19       		.byte	25
 14726 0011 040004   		.ascii	"\004\000\004"
 14727 0014 1A       		.byte	26
 14728 0015 030003   		.ascii	"\003\000\003"
 14729 0018 1B       		.byte	27
 14730 0019 130013   		.ascii	"\023\000\023"
 14731 001c 1C       		.byte	28
 14732 001d 140014   		.ascii	"\024\000\024"
 14733 0020 1E       		.byte	30
 14734 0021 171717   		.ascii	"\027\027\027"
 14735 0024 1F       		.byte	31
 14736 0025 080808   		.ascii	"\010\010\010"
 14737 0028 20       		.byte	32
ARM GAS  /tmp/cceyv6gL.s 			page 399


 14738 0029 060606   		.ascii	"\006\006\006"
 14739 002c 21       		.byte	33
 14740 002d 010502   		.ascii	"\001\005\002"
 14741              		.section	.rodata.conv_catalogue,"a"
 14742              		.align	2
 14743              		.set	.LANCHOR11,. + 0
 14746              	conv_catalogue:
 14747 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 14747      2B2DDD37 
 14747      27393133 
 14747      111605DC 
 14747      DE19
 14748 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14748      0D0F8D08 
 14748      8F0A2A2C 
 14748      47434517 
 14748      3F30
 14749 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14749      02062622 
 14749      20282435 
 14749      2F012310 
 14749      0C0E2112 
 14750 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 14750      1E292E09 
 14750      36383E3A 
 14750      3C4025DF 
 14750      3D8B8E03 
 14751 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14751      4A484642 
 14751      441F
 14752              		.section	.rodata.conv_mapping.9696,"a"
 14753              		.align	2
 14754              		.set	.LANCHOR14,. + 0
 14757              	conv_mapping.9696:
 14758 0000 8502     		.short	645
 14759 0002 8402     		.short	644
 14760 0004 8602     		.short	646
 14761 0006 8702     		.short	647
 14762 0008 8202     		.short	642
 14763 000a 8302     		.short	643
 14764 000c 3202     		.short	562
 14765 000e 3302     		.short	563
 14766 0010 3402     		.short	564
 14767 0012 3502     		.short	565
 14768 0014 3602     		.short	566
 14769 0016 3702     		.short	567
 14770              		.section	.rodata.cplx_catalogue,"a"
 14771              		.align	2
 14774              	cplx_catalogue:
 14775 0000 7E293CEE 		.ascii	"~)<\356\031;\316\341\015\362~`\330:\201\253*\272\271"
 14775      193BCEE1 
 14775      0DF27E60 
 14775      D83A81AB 
 14775      2ABAB9
 14776 0013 F1A26117 		.ascii	"\361\242a\027\236\006|\337W\336\246\253m\032\"\020\236"
 14776      9E067CDF 
 14776      57DEA6AB 
ARM GAS  /tmp/cceyv6gL.s 			page 400


 14776      6D1A2210 
 14776      9E
 14777 0024 5EC0     		.ascii	"^\300"
 14778              		.section	.rodata.disp.9507,"a"
 14779              		.align	2
 14780              		.set	.LANCHOR21,. + 0
 14783              	disp.9507:
 14784 0000 03       		.byte	3
 14785 0001 02       		.byte	2
 14786 0002 05       		.byte	5
 14787 0003 04       		.byte	4
 14788              		.section	.rodata.int_catalogue,"a"
 14789              		.align	2
 14792              	int_catalogue:
 14793 0000 46F14307 		.ascii	"F\361C\007\026A]bY\325\020\231\354]\034A\033\226\221"
 14793      16415D62 
 14793      59D51099 
 14793      EC5D1C41 
 14793      1B9691
 14794 0013 BA2531AC 		.ascii	"\272%1\254m\251j\030\026\231\276`\034\323\015\277%p"
 14794      6DA96A18 
 14794      1699BE60 
 14794      1CD30DBF 
 14794      2570
 14795 0025 EC4106C3 		.ascii	"\354A\006\303\361\034ThB\261,O0d\303S)\032p\012\307"
 14795      F11C5468 
 14795      42B12C4F 
 14795      3064C353 
 14795      291A700A 
 14796 003a 26D92AAD 		.ascii	"&\331*\255\213Z\332\266\355\313v\327*\3234=\336w\300"
 14796      8B5ADAB6 
 14796      EDCB76D7 
 14796      2AD3343D 
 14796      DE77C0
 14797              		.section	.rodata.linear_key_map.9291,"a"
 14798              		.align	2
 14799              		.set	.LANCHOR6,. + 0
 14802              	linear_key_map.9291:
 14803 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 14803      04050607 
 14803      08090A0B 
 14803      0C
 14804 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 14804      00111213 
 14804      14150016 
 14804      17
 14805 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 14805      1B1C1D1E 
 14805      1F002021 
 14805      22232425 
 14805      25252525 
 14806 002e 25       		.ascii	"%"
 14807              		.section	.rodata.linear_key_map.9295,"a"
 14808              		.align	2
 14809              		.set	.LANCHOR1,. + 0
 14812              	linear_key_map.9295:
 14813 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
ARM GAS  /tmp/cceyv6gL.s 			page 401


 14813      04050607 
 14813      08222222 
 14813      090A0B
 14814 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 14814      0F101112 
 14814      00131415 
 14814      16
 14815 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 14815      1A1B1C00 
 14815      1D1E1F20 
 14815      21222222 
 14816 002c 040522   		.ascii	"\004\005\""
 14817              		.section	.rodata.map.9307,"a"
 14818              		.align	2
 14819              		.set	.LANCHOR5,. + 0
 14822              	map.9307:
 14823 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 14823      FF7F7F7F 
 14823      6D6E6F6C 
 14823      FFFFFFFF 
 14824 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 14824      097F7FE7 
 14824      05067F7F 
 14824      E4
 14825 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 14825      00F07F7F 
 14825      FFFFFFFF 
 14825      FF
 14826 002a FF       		.ascii	"\377"
 14827              		.section	.rodata.matrix_catalogue,"a"
 14828              		.align	2
 14831              	matrix_catalogue:
 14832 0000 669DC364 		.ascii	"f\235\303d\3305\335\243m\224r\331W)\331s\031\226m\333"
 14832      D835DDA3 
 14832      6D9472D9 
 14832      5729D973 
 14832      19966DDB 
 14833 0014 66197658 		.ascii	"f\031vX"
 14834              		.section	.rodata.mode_catalogue,"a"
 14835              		.align	2
 14838              	mode_catalogue:
 14839 0000 2948C290 		.ascii	")H\302\220\213\307\006c\364\376@\017\363\250\351\037"
 14839      8BC70663 
 14839      F4FE400F 
 14839      F3A8E91F 
 14840 0010 8801FC7C 		.ascii	"\210\001\374|\300I\204\011\001\030\314\362D\234&\306"
 14840      C0498409 
 14840      0118CCF2 
 14840      449C26C6 
 14841 0020 21949324 		.ascii	"!\224\223$\211\241\223)!\010<\273%\"\010s \2461\014"
 14841      89A19329 
 14841      21083CBB 
 14841      25220873 
 14841      20A6310C 
 14842 0034 7324A731 		.ascii	"s$\2471Lb8\316\016\003\234\240\206!H\3344\363<\211\220"
 14842      4C6238CE 
 14842      0E039CA0 
ARM GAS  /tmp/cceyv6gL.s 			page 402


 14842      862148DC 
 14842      34F33C89 
 14843              		.section	.rodata.op_map.9379,"a"
 14844              		.align	2
 14845              		.set	.LANCHOR2,. + 0
 14848              	op_map.9379:
 14849 0000 1500     		.short	21
 14850 0002 0B02     		.short	523
 14851 0004 0003     		.short	768
 14852 0006 0A02     		.short	522
 14853 0008 1300     		.short	19
 14854 000a 1400     		.short	20
 14855 000c 0300     		.short	3
 14856 000e 0A00     		.short	10
 14857 0010 0701     		.short	263
 14858 0012 0000     		.short	0
 14859 0014 6531     		.short	12645
 14860 0016 0300     		.short	3
 14861 0018 0200     		.short	2
 14862 001a 0100     		.short	1
 14863 001c 4400     		.short	68
 14864 001e 0C00     		.short	12
 14865 0020 0D00     		.short	13
 14866 0022 0E00     		.short	14
 14867 0024 0403     		.short	772
 14868 0026 2F00     		.short	47
 14869 0028 0900     		.short	9
 14870 002a 0A00     		.short	10
 14871 002c 0B00     		.short	11
 14872 002e 0303     		.short	771
 14873 0030 2E00     		.short	46
 14874 0032 0600     		.short	6
 14875 0034 0700     		.short	7
 14876 0036 0800     		.short	8
 14877 0038 0203     		.short	770
 14878 003a 3300     		.short	51
 14879 003c 0500     		.short	5
 14880 003e 0400     		.short	4
 14881 0040 3B01     		.short	315
 14882 0042 0103     		.short	769
 14883 0044 0001     		.short	256
 14884              		.section	.rodata.op_map.9402,"a"
 14885              		.align	2
 14886              		.set	.LANCHOR3,. + 0
 14889              	op_map.9402:
 14890 0000 0100     		.short	1
 14891 0002 0000     		.short	0
 14892 0004 20F2     		.short	-3552
 14893 0006 23F2     		.short	-3549
 14894 0008 21F2     		.short	-3551
 14895 000a 24F2     		.short	-3548
 14896 000c 22F2     		.short	-3550
 14897 000e 25F2     		.short	-3547
 14898 0010 47F1     		.short	-3769
 14899 0012 46F1     		.short	-3770
 14900 0014 4E01     		.short	334
 14901 0016 4D01     		.short	333
ARM GAS  /tmp/cceyv6gL.s 			page 403


 14902 0018 5C01     		.short	348
 14903 001a 35F1     		.short	-3787
 14904 001c 5B01     		.short	347
 14905 001e 36F1     		.short	-3786
 14906 0020 3301     		.short	307
 14907 0022 37F1     		.short	-3785
 14908 0024 3300     		.short	51
 14909 0026 0C01     		.short	268
 14910 0028 2B00     		.short	43
 14911 002a 2C00     		.short	44
 14912 002c 028B     		.short	-29950
 14913 002e 088B     		.short	-29944
 14914 0030 0A8B     		.short	-29942
 14915 0032 108B     		.short	-29936
 14916 0034 4301     		.short	323
 14917 0036 3D01     		.short	317
 14918 0038 0902     		.short	521
 14919 003a 0802     		.short	520
 14920 003c 1002     		.short	528
 14921 003e 0D02     		.short	525
 14922 0040 0F02     		.short	527
 14923 0042 0E02     		.short	526
 14924 0044 0003     		.short	768
 14925 0046 0803     		.short	776
 14926 0048 0BF2     		.short	-3573
 14927 004a 1603     		.short	790
 14928 004c 1203     		.short	786
 14929 004e 1303     		.short	787
 14930 0050 3DF2     		.short	-3523
 14931 0052 3EF2     		.short	-3522
 14932 0054 24F1     		.short	-3804
 14933 0056 1EF1     		.short	-3810
 14934 0058 75F2     		.short	-3467
 14935 005a 27F1     		.short	-3801
 14936 005c 0A02     		.short	522
 14937 005e 1602     		.short	534
 14938 0060 5100     		.short	81
 14939 0062 5200     		.short	82
 14940 0064 0000     		.short	0
 14941 0066 0100     		.short	1
 14942 0068 48F0     		.short	-4024
 14943 006a 4BF0     		.short	-4021
 14944 006c 47F0     		.short	-4025
 14945 006e 46F0     		.short	-4026
 14946 0070 77F2     		.short	-3465
 14947 0072 78F2     		.short	-3464
 14948 0074 3300     		.short	51
 14949 0076 3300     		.short	51
 14950 0078 0502     		.short	517
 14951 007a 0602     		.short	518
 14952 007c 0402     		.short	516
 14953 007e 0002     		.short	512
 14954 0080 4200     		.short	66
 14955 0082 3801     		.short	312
 14956 0084 3A00     		.short	58
 14957 0086 3B00     		.short	59
 14958 0088 0001     		.short	256
ARM GAS  /tmp/cceyv6gL.s 			page 404


 14959 008a 0001     		.short	256
 14960              		.section	.rodata.op_map.9425,"a"
 14961              		.align	2
 14962              		.set	.LANCHOR0,. + 0
 14965              	op_map.9425:
 14966 0000 4C80     		.short	-32692
 14967 0002 4D80     		.short	-32691
 14968 0004 4E80     		.short	-32690
 14969 0006 4F80     		.short	-32689
 14970 0008 3300     		.short	51
 14971 000a 3300     		.short	51
 14972 000c 3300     		.short	51
 14973 000e 2180     		.short	-32735
 14974 0010 0801     		.short	264
 14975 0012 8780     		.short	-32633
 14976 0014 1180     		.short	-32751
 14977 0016 7C02     		.short	636
 14978 0018 6660     		.short	24678
 14979 001a 3F01     		.short	319
 14980 001c 4580     		.short	-32699
 14981 001e 1C03     		.short	796
 14982 0020 1D03     		.short	797
 14983 0022 1E03     		.short	798
 14984 0024 0603     		.short	774
 14985 0026 2F02     		.short	559
 14986 0028 3300     		.short	51
 14987 002a 3300     		.short	51
 14988 002c 3300     		.short	51
 14989 002e 3300     		.short	51
 14990 0030 3300     		.short	51
 14991 0032 3300     		.short	51
 14992 0034 3300     		.short	51
 14993 0036 3300     		.short	51
 14994 0038 1640     		.short	16406
 14995 003a 0201     		.short	258
 14996 003c 6D80     		.short	-32659
 14997 003e 5001     		.short	336
 14998 0040 3300     		.short	51
 14999 0042 1540     		.short	16405
 15000 0044 0001     		.short	256
 15001              		.section	.rodata.op_map.9480,"a"
 15002              		.align	2
 15003              		.set	.LANCHOR7,. + 0
 15006              	op_map.9480:
 15007 0000 0100     		.short	1
 15008 0002 0100     		.short	1
 15009 0004 0000     		.short	0
 15010 0006 0000     		.short	0
 15011 0008 0B05     		.short	1291
 15012 000a 2005     		.short	1312
 15013 000c 2305     		.short	1315
 15014 000e 3300     		.short	51
 15015 0010 0006     		.short	1536
 15016 0012 2105     		.short	1313
 15017 0014 2405     		.short	1316
 15018 0016 3300     		.short	51
 15019 0018 0A05     		.short	1290
ARM GAS  /tmp/cceyv6gL.s 			page 405


 15020 001a 2205     		.short	1314
 15021 001c 2505     		.short	1317
 15022 001e 3300     		.short	51
 15023 0020 3300     		.short	51
 15024 0022 4701     		.short	327
 15025 0024 4601     		.short	326
 15026 0026 3300     		.short	51
 15027 0028 3300     		.short	51
 15028 002a 3300     		.short	51
 15029 002c 3300     		.short	51
 15030 002e 3300     		.short	51
 15031 0030 15FF     		.short	-235
 15032 0032 3300     		.short	51
 15033 0034 3300     		.short	51
 15034 0036 3300     		.short	51
 15035 0038 1AFF     		.short	-230
 15036 003a 3300     		.short	51
 15037 003c 3300     		.short	51
 15038 003e 8CFF     		.short	-116
 15039 0040 0901     		.short	265
 15040 0042 3300     		.short	51
 15041 0044 3300     		.short	51
 15042 0046 0A01     		.short	266
 15043 0048 0B01     		.short	267
 15044 004a 3300     		.short	51
 15045 004c 0D01     		.short	269
 15046 004e 0D01     		.short	269
 15047 0050 663F     		.short	16230
 15048 0052 3300     		.short	51
 15049 0054 3300     		.short	51
 15050 0056 1FFF     		.short	-225
 15051 0058 3805     		.short	1336
 15052 005a 3300     		.short	51
 15053 005c 3300     		.short	51
 15054 005e 3905     		.short	1337
 15055 0060 6621     		.short	8550
 15056 0062 3300     		.short	51
 15057 0064 3300     		.short	51
 15058 0066 6621     		.short	8550
 15059 0068 3300     		.short	51
 15060 006a 3300     		.short	51
 15061 006c 3300     		.short	51
 15062 006e 3300     		.short	51
 15063 0070 3300     		.short	51
 15064 0072 0905     		.short	1289
 15065 0074 0805     		.short	1288
 15066 0076 3300     		.short	51
 15067 0078 07A8     		.short	-22521
 15068 007a 1005     		.short	1296
 15069 007c 0D05     		.short	1293
 15070 007e 3300     		.short	51
 15071 0080 08A8     		.short	-22520
 15072 0082 0F05     		.short	1295
 15073 0084 0E05     		.short	1294
 15074 0086 3300     		.short	51
 15075 0088 09A8     		.short	-22519
 15076 008a 0006     		.short	1536
ARM GAS  /tmp/cceyv6gL.s 			page 406


 15077 008c 0806     		.short	1544
 15078 008e 3300     		.short	51
 15079 0090 0406     		.short	1540
 15080 0092 0B05     		.short	1291
 15081 0094 1606     		.short	1558
 15082 0096 3300     		.short	51
 15083 0098 3300     		.short	51
 15084 009a 1206     		.short	1554
 15085 009c 1306     		.short	1555
 15086 009e 2F05     		.short	1327
 15087 00a0 04A8     		.short	-22524
 15088 00a2 3300     		.short	51
 15089 00a4 3300     		.short	51
 15090 00a6 3300     		.short	51
 15091 00a8 05A8     		.short	-22523
 15092 00aa 3300     		.short	51
 15093 00ac 3300     		.short	51
 15094 00ae 3300     		.short	51
 15095 00b0 06A8     		.short	-22522
 15096 00b2 3300     		.short	51
 15097 00b4 3300     		.short	51
 15098 00b6 3300     		.short	51
 15099 00b8 0306     		.short	1539
 15100 00ba 0A05     		.short	1290
 15101 00bc 1605     		.short	1302
 15102 00be 1605     		.short	1302
 15103 00c0 3300     		.short	51
 15104 00c2 3300     		.short	51
 15105 00c4 3300     		.short	51
 15106 00c6 3300     		.short	51
 15107 00c8 01A8     		.short	-22527
 15108 00ca 0000     		.short	0
 15109 00cc 0100     		.short	1
 15110 00ce 3300     		.short	51
 15111 00d0 02A8     		.short	-22526
 15112 00d2 3300     		.short	51
 15113 00d4 3300     		.short	51
 15114 00d6 3300     		.short	51
 15115 00d8 03A8     		.short	-22525
 15116 00da 3300     		.short	51
 15117 00dc 3300     		.short	51
 15118 00de 3300     		.short	51
 15119 00e0 0206     		.short	1538
 15120 00e2 3300     		.short	51
 15121 00e4 3300     		.short	51
 15122 00e6 3300     		.short	51
 15123 00e8 3300     		.short	51
 15124 00ea 3300     		.short	51
 15125 00ec 3300     		.short	51
 15126 00ee 0201     		.short	258
 15127 00f0 00A8     		.short	-22528
 15128 00f2 0505     		.short	1285
 15129 00f4 0605     		.short	1286
 15130 00f6 3300     		.short	51
 15131 00f8 B801     		.short	440
 15132 00fa 0405     		.short	1284
 15133 00fc 0005     		.short	1280
ARM GAS  /tmp/cceyv6gL.s 			page 407


 15134 00fe 3300     		.short	51
 15135 0100 3300     		.short	51
 15136 0102 3300     		.short	51
 15137 0104 3300     		.short	51
 15138 0106 3300     		.short	51
 15139 0108 0106     		.short	1537
 15140 010a 3300     		.short	51
 15141 010c 3300     		.short	51
 15142 010e 3300     		.short	51
 15143 0110 0001     		.short	256
 15144 0112 0001     		.short	256
 15145 0114 0001     		.short	256
 15146 0116 0001     		.short	256
 15147              		.section	.rodata.op_map.9492,"a"
 15148              		.align	2
 15149              		.set	.LANCHOR19,. + 0
 15152              	op_map.9492:
 15153 0000 2A27     		.ascii	"*'"
 15154 0002 2B28     		.ascii	"+("
 15155 0004 2C29     		.ascii	",)"
 15156              		.section	.rodata.op_map.9506,"a"
 15157              		.align	2
 15158              		.set	.LANCHOR20,. + 0
 15161              	op_map.9506:
 15162 0000 1A02     		.short	538
 15163 0002 7B02     		.short	635
 15164 0004 1B02     		.short	539
 15165 0006 7A02     		.short	634
 15166 0008 1C02     		.short	540
 15167 000a 3300     		.short	51
 15168              		.section	.rodata.op_map2.9403,"a"
 15169              		.align	2
 15170              		.set	.LANCHOR4,. + 0
 15173              	op_map2.9403:
 15174 0000 3300     		.short	51
 15175 0002 3300     		.short	51
 15176 0004 0003     		.short	768
 15177 0006 0A02     		.short	522
 15178              		.section	.rodata.opcode_breaks,"a"
 15179              		.align	2
 15180              		.set	.LANCHOR13,. + 0
 15183              	opcode_breaks:
 15184 0000 34CF9C35 		.ascii	"4\317\2345\014\2345"
 15184      0C9C35
 15185              		.section	.rodata.prob_catalogue,"a"
 15186              		.align	2
 15189              	prob_catalogue:
 15190 0000 549515BD 		.ascii	"T\225\025\275SY\326e\331hS\324\345\271PR\026\305%JV"
 15190      5359D665 
 15190      D96853D4 
 15190      E5B95052 
 15190      16C5254A 
 15191 0015 D5A5C95C 		.ascii	"\325\245\311\\XV\005\321bY\0265\325eW\225\325\315_V"
 15191      585605D1 
 15191      62591635 
 15191      D5655795 
 15191      D5CD5F56 
ARM GAS  /tmp/cceyv6gL.s 			page 408


 15192 0029 1575C559 		.ascii	"\025u\305YUUE\301VQV\265\031GS\024\265\265MZS\365\015"
 15192      555545C1 
 15192      565156B5 
 15192      19475314 
 15192      B5B54D5A 
 15193 0040 445096A0 		.ascii	"DP\226\240"
 15194              		.section	.rodata.prog_catalogue,"a"
 15195              		.align	2
 15198              	prog_catalogue:
 15199 0000 BA0D1CF0 		.ascii	"\272\015\034\360y\035G\201\310t*3\253\304B\273n\361"
 15199      791D4781 
 15199      C8742A33 
 15199      ABC442BB 
 15199      6EF1
 15200 0012 BAB3C10E 		.ascii	"\272\263\301\016\013\352\3733/+\272\360\312\316#\220"
 15200      0BEAFB33 
 15200      2F2BBAF0 
 15200      CACE2390 
 15201 0022 E738CE8C 		.ascii	"\3478\316\214\264\3367r\300\320\3349G\003\233*\265\015"
 15201      B4DE3772 
 15201      C0D0DC39 
 15201      47039B2A 
 15201      B50D
 15202 0034 F1D8CD1B 		.ascii	"\361\330\315\033K\022\274\262,\016\033\234\322\015\355"
 15202      4B12BCB2 
 15202      2C0E1B9C 
 15202      D20DED
 15203 0043 3302C52A 		.ascii	"3\002\305*r@\350\313\260\354L\204\256+r\014\334"
 15203      7240E8CB 
 15203      B0EC4C84 
 15203      AE2B720C 
 15203      DC
 15204              		.section	.rodata.program_xfcn,"a"
 15205              		.align	2
 15208              	program_xfcn:
 15209 0000 46DB66AB 		.ascii	"F\333f\253\0240X\3067\026AJ#\265\220p]bY\325\037R\014"
 15209      143058C6 
 15209      3716414A 
 15209      23B59070 
 15209      5D6259D5 
 15210 0017 C44260D9 		.ascii	"\304B`\331\324\365>d\221V{\027G\020F\3450LR'\035\310"
 15210      D4F53E64 
 15210      91567B17 
 15210      471046E5 
 15210      304C5227 
 15211 002d 6DDB8691 		.ascii	"m\333\206\221\317\313\335G9\204t[\242Q\306E\035\206"
 15211      CFCBDD47 
 15211      3984745B 
 15211      A251C645 
 15211      1D86
 15212 003f B1346471 		.ascii	"\2614dq\254m\251j\030\026\231\217o\230\0074\303o\334"
 15212      AC6DA96A 
 15212      1816998F 
 15212      6F980734 
 15212      C36FDC
 15213 0052 34872725 		.ascii	"4\207'%p\354A\006\303\361\034\233\025\310\2621\241\012"
 15213      70EC4106 
ARM GAS  /tmp/cceyv6gL.s 			page 409


 15213      C3F11C9B 
 15213      15C8B231 
 15213      A10A
 15214 0064 4A71230B 		.ascii	"Jq#\013\023\314\0127\021\223qCV\010\312E\321da\032p"
 15214      13CC0A37 
 15214      11937143 
 15214      5608CA45 
 15214      D164611A 
 15215 0079 0AC7258E 		.ascii	"\012\307%\216t\012\002z\331*\211\373b\326\266\255\273"
 15215      740A027A 
 15215      D92A89FB 
 15215      62D6B6AD 
 15215      BB
 15216 008a 72DDB5CA 		.ascii	"r\335\265\312\022\255\253L\332\366\301\255k\234&-\234"
 15216      12ADAB4C 
 15216      DAF6C1AD 
 15216      6B9C262D 
 15216      9C
 15217 009b 43DDE775 		.ascii	"C\335\347u\264u\327\305\345\263w\300"
 15217      B475D7C5 
 15217      E5B377C0 
 15218              		.section	.rodata.smap.9327,"a"
 15219              		.align	2
 15220              		.set	.LANCHOR22,. + 0
 15223              	smap.9327:
 15224 0000 00010002 		.ascii	"\000\001\000\002"
 15225              		.section	.rodata.stats_catalogue,"a"
 15226              		.align	2
 15229              	stats_catalogue:
 15230 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\334T\027\205"
 15230      5D17C971 
 15230      58611685 
 15230      95DC5417 
 15230      85
 15231 0011 514C575E 		.ascii	"QLW^@"
 15231      40
 15232              		.section	.rodata.sums_catalogue,"a"
 15233              		.align	2
 15236              	sums_catalogue:
 15237 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15237      4A1384C1 
 15237      20451104 
 15237      F11C4911 
 15237      8500
 15238              		.section	.rodata.test_catalogue,"a"
 15239              		.align	2
 15242              	test_catalogue:
 15243 0000 C6718CD8 		.ascii	"\306q\214\330\353/\313\334\033\012\3030\262\363\005"
 15243      EB2FCBDC 
 15243      1B0AC330 
 15243      B2F305
 15244 000f C1F09C20 		.ascii	"\301\360\234 \323.\361\373\320\2356\213\202\370\272"
 15244      D32EF1FB 
 15244      D09D368B 
 15244      82F8BA
 15245 001e 350B9340 		.ascii	"5\013\223@\360\270n#T\326\270.K\214\267<@"
 15245      F0B86E23 
ARM GAS  /tmp/cceyv6gL.s 			page 410


 15245      54D6B82E 
 15245      4B8CB73C 
 15245      40
 15246              		.text
 15247              	.Letext0:
 15248              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15249              		.file 3 "dmcp/dmcp.h"
 15250              		.file 4 "src/decNumber/decContext.h"
 15251              		.file 5 "src/decNumber/decNumber.h"
 15252              		.file 6 "src/decNumber/decimal64.h"
 15253              		.file 7 "src/decNumber/decimal128.h"
 15254              		.file 8 "src/xeq.h"
 15255              		.file 9 "src/data.h"
 15256              		.file 10 "src/keys.h"
 15257              		.file 11 "src/menu.h"
 15258              		.file 12 "src/display.h"
 15259              		.file 13 "src/consts.h"
 15260              		.file 14 "src/storage.h"
 15261              		.file 15 "src/stats.h"
 15262              		.file 16 "src/catalogues.h"
 15263              		.file 17 "src/lcd.h"
 15264              		.file 18 "src/int.h"
 15265              		.file 19 "src/decn.h"
ARM GAS  /tmp/cceyv6gL.s 			page 411


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/cceyv6gL.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/cceyv6gL.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/cceyv6gL.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/cceyv6gL.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/cceyv6gL.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/cceyv6gL.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/cceyv6gL.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/cceyv6gL.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/cceyv6gL.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/cceyv6gL.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/cceyv6gL.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/cceyv6gL.s:364    .text.init_cat:0000000000000000 $t
     /tmp/cceyv6gL.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/cceyv6gL.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/cceyv6gL.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/cceyv6gL.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/cceyv6gL.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/cceyv6gL.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/cceyv6gL.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/cceyv6gL.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/cceyv6gL.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/cceyv6gL.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/cceyv6gL.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/cceyv6gL.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/cceyv6gL.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/cceyv6gL.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/cceyv6gL.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/cceyv6gL.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/cceyv6gL.s:1117   .text.arg_eval:0000000000000090 $d
     /tmp/cceyv6gL.s:1124   .text.arg_digit:0000000000000000 $t
     /tmp/cceyv6gL.s:1131   .text.arg_digit:0000000000000000 arg_digit
     /tmp/cceyv6gL.s:1392   .text.arg_digit:00000000000000fc $d
     /tmp/cceyv6gL.s:1400   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/cceyv6gL.s:1407   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/cceyv6gL.s:1465   .text.process_arg_shuffle:000000000000002c $d
     /tmp/cceyv6gL.s:1470   .text.process_h_shifted:0000000000000000 $t
     /tmp/cceyv6gL.s:1477   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/cceyv6gL.s:1725   .text.process_h_shifted:00000000000000c8 $d
     /tmp/cceyv6gL.s:1733   .text.intltr:0000000000000000 $t
     /tmp/cceyv6gL.s:1740   .text.intltr:0000000000000000 intltr
     /tmp/cceyv6gL.s:1803   .text.intltr:0000000000000030 $d
     /tmp/cceyv6gL.s:1809   .text.process_normal:0000000000000000 $t
     /tmp/cceyv6gL.s:1816   .text.process_normal:0000000000000000 process_normal
     /tmp/cceyv6gL.s:1877   .text.process_normal:0000000000000022 $d
     /tmp/cceyv6gL.s:1923   .text.process_normal:000000000000007e $t
     /tmp/cceyv6gL.s:1972   .text.process_normal:00000000000000ac $d
     /tmp/cceyv6gL.s:1991   .text.process_normal:00000000000000f8 $t
     /tmp/cceyv6gL.s:2002   .text.process_normal:0000000000000104 $d
     /tmp/cceyv6gL.s:2045   .text.process_normal:00000000000001b0 $t
     /tmp/cceyv6gL.s:2246   .text.process_normal:0000000000000264 $d
     /tmp/cceyv6gL.s:2255   .text.process_fg_shifted:0000000000000000 $t
     /tmp/cceyv6gL.s:2262   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/cceyv6gL.s:2390   .text.process_fg_shifted:000000000000003e $d
     /tmp/cceyv6gL.s:2589   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/cceyv6gL.s 			page 412


     /tmp/cceyv6gL.s:2630   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/cceyv6gL.s:2826   .text.process_fg_shifted:0000000000000294 $d
     /tmp/cceyv6gL.s:2835   .text.set_window:0000000000000000 $t
     /tmp/cceyv6gL.s:2842   .text.set_window:0000000000000000 set_window
     /tmp/cceyv6gL.s:2989   .text.set_window:000000000000008c $d
     /tmp/cceyv6gL.s:2996   .text.arg_storcl:0000000000000000 $t
     /tmp/cceyv6gL.s:3003   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/cceyv6gL.s:3119   .text.arg_storcl:0000000000000040 $d
     /tmp/cceyv6gL.s:3124   .text.process_arg:0000000000000000 $t
     /tmp/cceyv6gL.s:3131   .text.process_arg:0000000000000000 process_arg
     /tmp/cceyv6gL.s:3337   .text.process_arg:000000000000008a $d
     /tmp/cceyv6gL.s:3341   .text.process_arg:0000000000000090 $t
     /tmp/cceyv6gL.s:3430   .text.process_arg:00000000000000f0 $d
     /tmp/cceyv6gL.s:3477   .text.process_arg:00000000000001a8 $t
     /tmp/cceyv6gL.s:3880   .text.process_arg:000000000000032c $d
     /tmp/cceyv6gL.s:3889   .text.process_arg:0000000000000340 $t
     /tmp/cceyv6gL.s:4380   .text.process_arg:000000000000054c $d
     /tmp/cceyv6gL.s:4385   .text.cur_shift:0000000000000000 $t
     /tmp/cceyv6gL.s:4393   .text.cur_shift:0000000000000000 cur_shift
     /tmp/cceyv6gL.s:4421   .text.cur_shift:0000000000000010 $d
     /tmp/cceyv6gL.s:4426   .text.reset_shift:0000000000000000 $t
     /tmp/cceyv6gL.s:4434   .text.reset_shift:0000000000000000 reset_shift
     /tmp/cceyv6gL.s:4492   .text.reset_shift:0000000000000014 $d
     /tmp/cceyv6gL.s:4497   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/cceyv6gL.s:4505   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/cceyv6gL.s:4533   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/cceyv6gL.s:4538   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/cceyv6gL.s:4546   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/cceyv6gL.s:4604   .text.row_column_to_keycode:000000000000003c $d
     /tmp/cceyv6gL.s:4609   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/cceyv6gL.s:4617   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/cceyv6gL.s:4653   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/cceyv6gL.s:4659   .text.init_state:0000000000000000 $t
     /tmp/cceyv6gL.s:4667   .text.init_state:0000000000000000 init_state
     /tmp/cceyv6gL.s:4783   .text.init_state:0000000000000074 $d
     /tmp/cceyv6gL.s:4790   .text.process_cmplx:0000000000000000 $t
     /tmp/cceyv6gL.s:4797   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/cceyv6gL.s:5080   .text.process_cmplx:00000000000000b0 $d
     /tmp/cceyv6gL.s:5087   .text.soft_init_state:0000000000000000 $t
     /tmp/cceyv6gL.s:5095   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/cceyv6gL.s:5190   .text.soft_init_state:0000000000000048 $d
     /tmp/cceyv6gL.s:5196   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/cceyv6gL.s:5204   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/cceyv6gL.s:5370   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/cceyv6gL.s:5377   .text.stack_begin:0000000000000000 $t
     /tmp/cceyv6gL.s:5385   .text.stack_begin:0000000000000000 stack_begin
     /tmp/cceyv6gL.s:5525   .text.stack_begin:00000000000000b4 $d
     /tmp/cceyv6gL.s:5531   .text.current_catalogue_max:0000000000000000 $t
     /tmp/cceyv6gL.s:5539   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/cceyv6gL.s:5560   .text.current_catalogue_max:000000000000000c $d
     /tmp/cceyv6gL.s:5566   .text.current_catalogue:0000000000000000 $t
     /tmp/cceyv6gL.s:5574   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/cceyv6gL.s:5830   .text.current_catalogue:00000000000000c8 $d
     /tmp/cceyv6gL.s:5840   .text.process_catalogue:0000000000000000 $t
     /tmp/cceyv6gL.s:5847   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/cceyv6gL.s:6176   .text.process_catalogue:00000000000000fe $d
     /tmp/cceyv6gL.s:6208   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/cceyv6gL.s 			page 413


     /tmp/cceyv6gL.s:6716   .text.process_catalogue:00000000000002dc $d
     /tmp/cceyv6gL.s:6737   .text.process_catalogue:00000000000002fc $t
     /tmp/cceyv6gL.s:6767   .text.find_pos:0000000000000000 $t
     /tmp/cceyv6gL.s:6775   .text.find_pos:0000000000000000 find_pos
     /tmp/cceyv6gL.s:6948   .text.find_pos:0000000000000080 $d
     /tmp/cceyv6gL.s:6954   .text.get_alpha_state:0000000000000000 $t
     /tmp/cceyv6gL.s:6962   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/cceyv6gL.s:6994   .text.get_alpha_state:0000000000000020 $d
     /tmp/cceyv6gL.s:7000   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/cceyv6gL.s:7010   .text.process_keycode:0000000000000000 $t
     /tmp/cceyv6gL.s:7018   .text.process_keycode:0000000000000000 process_keycode
     /tmp/cceyv6gL.s:7637   .text.process_keycode:00000000000002e0 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/cceyv6gL.s:7660   .text.process_keycode:0000000000000320 $t
     /tmp/cceyv6gL.s:7859   .text.process_keycode:00000000000003f0 $d
     /tmp/cceyv6gL.s:7868   .text.process_keycode:0000000000000414 $t
     /tmp/cceyv6gL.s:8343   .text.process_keycode:0000000000000610 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/cceyv6gL.s:8363   .text.process_keycode:000000000000064c $t
     /tmp/cceyv6gL.s:8404   .text.process_keycode:0000000000000672 $d
     /tmp/cceyv6gL.s:8431   .text.process_keycode:000000000000068c $t
     /tmp/cceyv6gL.s:8560   .text.process_keycode:000000000000071c $d
     /tmp/cceyv6gL.s:8564   .text.process_keycode:000000000000072c $t
     /tmp/cceyv6gL.s:9147   .text.process_keycode:000000000000095c $d
     /tmp/cceyv6gL.s:9167   .text.process_keycode:0000000000000984 $t
     /tmp/cceyv6gL.s:9574   .text.process_keycode:0000000000000ad4 $d
     /tmp/cceyv6gL.s:9604   .text.process_keycode:0000000000000b4c $t
     /tmp/cceyv6gL.s:10067  .text.process_keycode:0000000000000ce0 $d
     /tmp/cceyv6gL.s:10085  .text.process_keycode:0000000000000d04 $t
     /tmp/cceyv6gL.s:10356  .text.process_keycode:0000000000000dd8 $d
     /tmp/cceyv6gL.s:10391  .text.process_keycode:0000000000000e64 $t
     /tmp/cceyv6gL.s:10661  .text.process_keycode:0000000000000f68 $d
     /tmp/cceyv6gL.s:10681  .text.process_keycode:0000000000000fb8 $t
     /tmp/cceyv6gL.s:10886  .text.process_keycode:000000000000105c $d
     /tmp/cceyv6gL.s:10904  .text.process_keycode:00000000000010a4 $t
     /tmp/cceyv6gL.s:10939  .text.process_keycode:00000000000010d4 $d
     /tmp/cceyv6gL.s:10946  .text.process_keycode:00000000000010e0 $t
     /tmp/cceyv6gL.s:11450  .text.process_keycode:0000000000001260 $d
     /tmp/cceyv6gL.s:11485  .text.process_keycode:00000000000012a4 $t
     /tmp/cceyv6gL.s:11607  .text.process_keycode:0000000000001308 $d
     /tmp/cceyv6gL.s:11642  .text.process_keycode:0000000000001390 $t
     /tmp/cceyv6gL.s:11938  .text.process_keycode:00000000000014e8 $d
     /tmp/cceyv6gL.s:11945  .text.process_keycode:00000000000014f8 $t
     /tmp/cceyv6gL.s:12129  .text.process_keycode:00000000000015c0 $d
     /tmp/cceyv6gL.s:12172  .text.process_keycode:0000000000001614 $t
     /tmp/cceyv6gL.s:12896  .text.process_keycode:00000000000018ec $d
     /tmp/cceyv6gL.s:12922  .text.process_keycode:0000000000001954 $t
     /tmp/cceyv6gL.s:13066  .text.process_keycode:00000000000019f0 $d
     /tmp/cceyv6gL.s:13100  .text.process_keycode:00000000000019fc $t
     /tmp/cceyv6gL.s:14299  .text.process_keycode:0000000000001d78 $d
     /tmp/cceyv6gL.s:14308  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/cceyv6gL.s:14316  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/cceyv6gL.s:14524  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/cceyv6gL.s:14541  .bss.was_paused.9851:0000000000000000 $d
ARM GAS  /tmp/cceyv6gL.s 			page 414


     /tmp/cceyv6gL.s:14545  .bss.was_paused.9851:0000000000000000 was_paused.9851
     /tmp/cceyv6gL.s:14548  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/cceyv6gL.s:14551  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/cceyv6gL.s:14554  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:14557  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/cceyv6gL.s:14560  .rodata.alpha_compares:0000000000000000 $d
     /tmp/cceyv6gL.s:14563  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/cceyv6gL.s:14566  .rodata.alpha_letters:0000000000000000 $d
     /tmp/cceyv6gL.s:14570  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/cceyv6gL.s:14576  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/cceyv6gL.s:14580  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/cceyv6gL.s:14586  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/cceyv6gL.s:14589  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/cceyv6gL.s:14593  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/cceyv6gL.s:14596  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/cceyv6gL.s:14599  .rodata.alphamap.9335:0000000000000000 $d
     /tmp/cceyv6gL.s:14603  .rodata.alphamap.9335:0000000000000000 alphamap.9335
     /tmp/cceyv6gL.s:14643  .rodata.amap.9326:0000000000000000 $d
     /tmp/cceyv6gL.s:14647  .rodata.amap.9326:0000000000000000 amap.9326
     /tmp/cceyv6gL.s:14665  .rodata.catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:14668  .rodata.catalogue:0000000000000000 catalogue
     /tmp/cceyv6gL.s:14678  .rodata.catalogue_sizes.9649:0000000000000000 $d
     /tmp/cceyv6gL.s:14682  .rodata.catalogue_sizes.9649:0000000000000000 catalogue_sizes.9649
     /tmp/cceyv6gL.s:14685  .rodata.catalogues.9657:0000000000000000 $d
     /tmp/cceyv6gL.s:14689  .rodata.catalogues.9657:0000000000000000 catalogues.9657
     /tmp/cceyv6gL.s:14774  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/cceyv6gL.s:15229  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/cceyv6gL.s:15189  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/cceyv6gL.s:14792  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/cceyv6gL.s:15198  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/cceyv6gL.s:15208  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/cceyv6gL.s:15242  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/cceyv6gL.s:14838  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/cceyv6gL.s:15236  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/cceyv6gL.s:14831  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/cceyv6gL.s:14712  .rodata.cmap.9325:0000000000000000 $d
     /tmp/cceyv6gL.s:14716  .rodata.cmap.9325:0000000000000000 cmap.9325
     /tmp/cceyv6gL.s:14742  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:14746  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/cceyv6gL.s:14753  .rodata.conv_mapping.9696:0000000000000000 $d
     /tmp/cceyv6gL.s:14757  .rodata.conv_mapping.9696:0000000000000000 conv_mapping.9696
     /tmp/cceyv6gL.s:14771  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:14779  .rodata.disp.9507:0000000000000000 $d
     /tmp/cceyv6gL.s:14783  .rodata.disp.9507:0000000000000000 disp.9507
     /tmp/cceyv6gL.s:14789  .rodata.int_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:14798  .rodata.linear_key_map.9291:0000000000000000 $d
     /tmp/cceyv6gL.s:14802  .rodata.linear_key_map.9291:0000000000000000 linear_key_map.9291
     /tmp/cceyv6gL.s:14808  .rodata.linear_key_map.9295:0000000000000000 $d
     /tmp/cceyv6gL.s:14812  .rodata.linear_key_map.9295:0000000000000000 linear_key_map.9295
     /tmp/cceyv6gL.s:14818  .rodata.map.9307:0000000000000000 $d
     /tmp/cceyv6gL.s:14822  .rodata.map.9307:0000000000000000 map.9307
     /tmp/cceyv6gL.s:14828  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:14835  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:14844  .rodata.op_map.9379:0000000000000000 $d
     /tmp/cceyv6gL.s:14848  .rodata.op_map.9379:0000000000000000 op_map.9379
     /tmp/cceyv6gL.s:14885  .rodata.op_map.9402:0000000000000000 $d
     /tmp/cceyv6gL.s:14889  .rodata.op_map.9402:0000000000000000 op_map.9402
ARM GAS  /tmp/cceyv6gL.s 			page 415


     /tmp/cceyv6gL.s:14961  .rodata.op_map.9425:0000000000000000 $d
     /tmp/cceyv6gL.s:14965  .rodata.op_map.9425:0000000000000000 op_map.9425
     /tmp/cceyv6gL.s:15002  .rodata.op_map.9480:0000000000000000 $d
     /tmp/cceyv6gL.s:15006  .rodata.op_map.9480:0000000000000000 op_map.9480
     /tmp/cceyv6gL.s:15148  .rodata.op_map.9492:0000000000000000 $d
     /tmp/cceyv6gL.s:15152  .rodata.op_map.9492:0000000000000000 op_map.9492
     /tmp/cceyv6gL.s:15157  .rodata.op_map.9506:0000000000000000 $d
     /tmp/cceyv6gL.s:15161  .rodata.op_map.9506:0000000000000000 op_map.9506
     /tmp/cceyv6gL.s:15169  .rodata.op_map2.9403:0000000000000000 $d
     /tmp/cceyv6gL.s:15173  .rodata.op_map2.9403:0000000000000000 op_map2.9403
     /tmp/cceyv6gL.s:15179  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/cceyv6gL.s:15183  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/cceyv6gL.s:15186  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:15195  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:15205  .rodata.program_xfcn:0000000000000000 $d
     /tmp/cceyv6gL.s:15219  .rodata.smap.9327:0000000000000000 $d
     /tmp/cceyv6gL.s:15223  .rodata.smap.9327:0000000000000000 smap.9327
     /tmp/cceyv6gL.s:15226  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:15233  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:15239  .rodata.test_catalogue:0000000000000000 $d
     /tmp/cceyv6gL.s:2431   .text.process_fg_shifted:0000000000000067 $d
     /tmp/cceyv6gL.s:2431   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
get_reg_n
swap_reg
copyreg
op_p2r
ARM GAS  /tmp/cceyv6gL.s 			page 416


RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
stoprog
is_key_pressed
set_running_off
xeq_sst_bst
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
convert_regK
local_regs
alen

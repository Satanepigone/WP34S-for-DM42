ARM GAS  /tmp/ccc9ZrJ3.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccc9ZrJ3.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/ccc9ZrJ3.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/ccc9ZrJ3.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/ccc9ZrJ3.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/ccc9ZrJ3.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccc9ZrJ3.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/ccc9ZrJ3.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/ccc9ZrJ3.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** 
 638:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 639:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 640:src/keys.c    **** #endif							//JM5
 641:src/keys.c    **** 
 642:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 643:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 644:src/keys.c    **** #endif							//JM5
 645:src/keys.c    **** 
 646:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 647:src/keys.c    **** 	UState.show_y = 1;
 648:src/keys.c    **** #endif
 649:src/keys.c    **** 
 650:src/keys.c    **** #ifdef DEFAULT_TO_J
 651:src/keys.c    **** 	SET_CPX_J;
 652:src/keys.c    **** #endif
 653:src/keys.c    **** 
 654:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 655:src/keys.c    **** 	cpx_nop(OP_CYES);
 656:src/keys.c    **** #endif
ARM GAS  /tmp/ccc9ZrJ3.s 			page 13


 657:src/keys.c    **** 
 658:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 659:src/keys.c    **** 	cpx_nop(OP_CYES);
 660:src/keys.c    **** 	cpx_nop(OP_C_ON);
 661:src/keys.c    **** #endif
 662:src/keys.c    **** #endif
 663:src/keys.c    **** 
 664:src/keys.c    **** 	State2.test = TST_NONE;
 665:src/keys.c    **** 	State2.runmode = 1;
 666:src/keys.c    **** 	update_program_bounds(1);
 667:src/keys.c    **** 	set_lift();
 668:src/keys.c    **** 
 669:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 670:src/keys.c    **** 	// but must not be cleared.
 671:src/keys.c    **** 	Voltage = v;
 672:src/keys.c    **** 	LastKey = k;
 673:src/keys.c    **** #ifndef REALBUILD
 674:src/keys.c    **** 	State2.trace = b;
 675:src/keys.c    **** 	State2.flags = a;
 676:src/keys.c    **** #else
 677:src/keys.c    **** 	TestFlag = t;
 678:src/keys.c    **** #endif
 679:src/keys.c    **** 	ShowRegister = regX_idx;
 680:src/keys.c    **** }
 681:src/keys.c    **** 
 682:src/keys.c    **** void soft_init_state(void) {
 683:src/keys.c    **** 	int soft;
 684:src/keys.c    **** 	unsigned int runmode;
 685:src/keys.c    **** 	unsigned int alphas;
 686:src/keys.c    **** 
 687:src/keys.c    **** 	if (CmdLineLength) {
 688:src/keys.c    **** 		CmdLineLength = 0;
 689:src/keys.c    **** 		CmdLineEex = 0;
 690:src/keys.c    **** 		CmdLineDot = 0;
 691:src/keys.c    **** 		return;
 692:src/keys.c    **** 	}
 693:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 694:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 695:src/keys.c    **** 	runmode = State2.runmode;
 696:src/keys.c    **** 	alphas = State2.alphas;
 697:src/keys.c    **** 	init_state();
 698:src/keys.c    **** 	if (soft) {
 699:src/keys.c    **** 		State2.runmode = runmode;
 700:src/keys.c    **** 		State2.alphas = alphas;
 701:src/keys.c    **** 	}
 702:src/keys.c    **** }
 703:src/keys.c    **** 
 704:src/keys.c    **** static int check_confirm(int op) {
 705:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 706:src/keys.c    **** 		const int nilop = argKIND(op);
 707:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 708:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 709:src/keys.c    **** 			return STATE_UNFINISHED;
 710:src/keys.c    **** 		}
 711:src/keys.c    **** #ifndef DM42		
 712:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 713:src/keys.c    **** #endif
ARM GAS  /tmp/ccc9ZrJ3.s 			page 14


 714:src/keys.c    **** #ifdef DM42
 715:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 716:src/keys.c    **** #endif
 717:src/keys.c    **** #ifdef INFRARED
 718:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 719:src/keys.c    **** #endif
 720:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 721:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 722:src/keys.c    **** #endif
 723:src/keys.c    **** 		) {
 724:src/keys.c    **** 			// These commands are not programmable
 725:src/keys.c    **** 			NonProgrammable = 1;
 726:src/keys.c    **** 		}
 727:src/keys.c    **** 	}
 728:src/keys.c    **** 	return op;
 729:src/keys.c    **** }
 730:src/keys.c    **** 
 731:src/keys.c    **** static void set_smode(const enum single_disp d) {
 732:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 733:src/keys.c    **** }
 734:src/keys.c    **** 
 735:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 736:src/keys.c    **** 	const int code = 100 + n;
 737:src/keys.c    **** 	unsigned int pc = state_pc();
 738:src/keys.c    **** 
 739:src/keys.c    **** 	if (State2.runmode) {
 740:src/keys.c    **** 		if (isXROM(pc))
 741:src/keys.c    **** 			pc = 1;
 742:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 743:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 744:src/keys.c    **** 	}
 745:src/keys.c    **** 	return dflt;
 746:src/keys.c    **** }
 747:src/keys.c    **** 
 748:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 749:src/keys.c    ****  * as digits.
 750:src/keys.c    ****  */
 751:src/keys.c    **** static int intltr(int d) {
 752:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 753:src/keys.c    **** }
 754:src/keys.c    **** 
 755:src/keys.c    **** /*
 756:src/keys.c    ****  *  Process a key code in the unshifted mode.
 757:src/keys.c    ****  */
 758:src/keys.c    **** static int process_normal(const keycode c)
 759:src/keys.c    **** {
 760:src/keys.c    **** 	static const unsigned short int op_map[] = {
 761:src/keys.c    **** 		// Row 1
 762:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 763:src/keys.c    **** 		OP_MON  | OP_RECIP,
 764:src/keys.c    **** 		OP_DYA  | OP_POW,
 765:src/keys.c    **** 		OP_MON  | OP_SQRT,
 766:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 767:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 768:src/keys.c    **** 		// Row 2
 769:src/keys.c    **** 		RARG_STO,
 770:src/keys.c    **** 		RARG_RCL,
ARM GAS  /tmp/ccc9ZrJ3.s 			page 15


 771:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 772:src/keys.c    **** 		// Row 3
 773:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 774:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 775:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 776:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 777:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 778:src/keys.c    **** 		// Row 4
 779:src/keys.c    **** 		RARG_XEQ,
 780:src/keys.c    **** 		OP_SPEC | OP_7,
 781:src/keys.c    **** 		OP_SPEC | OP_8,
 782:src/keys.c    **** 		OP_SPEC | OP_9,
 783:src/keys.c    **** 		OP_DYA  | OP_DIV,
 784:src/keys.c    **** 		// Row 5
 785:src/keys.c    **** 		STATE_BST,
 786:src/keys.c    **** 		OP_SPEC | OP_4,
 787:src/keys.c    **** 		OP_SPEC | OP_5,
 788:src/keys.c    **** 		OP_SPEC | OP_6,
 789:src/keys.c    **** 		OP_DYA  | OP_MUL,
 790:src/keys.c    **** 		// Row 6
 791:src/keys.c    **** 		STATE_SST,		// SST
 792:src/keys.c    **** 		OP_SPEC | OP_1,
 793:src/keys.c    **** 		OP_SPEC | OP_2,
 794:src/keys.c    **** 		OP_SPEC | OP_3,
 795:src/keys.c    **** 		OP_DYA  | OP_SUB,
 796:src/keys.c    **** 		// Row 7
 797:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 798:src/keys.c    **** 		OP_SPEC | OP_0,
 799:src/keys.c    **** 		OP_SPEC | OP_DOT,
 800:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 801:src/keys.c    **** 		OP_DYA  | OP_ADD,
 802:src/keys.c    **** #ifdef DM42
 803:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 804:src/keys.c    **** #endif
 805:src/keys.c    **** 	};
 806:src/keys.c    **** 
 807:src/keys.c    **** 	int lc = keycode_to_linear(c);
 808:src/keys.c    **** 	int op = op_map[lc];
 809:src/keys.c    **** 	
 810:src/keys.c    **** 	// The switch handles all the special cases
 811:src/keys.c    **** #ifdef DM42
 812:src/keys.c    **** 	int op_int;
 813:src/keys.c    **** 	if (UState.intm) {
 814:src/keys.c    **** 	  switch (c) {
 815:src/keys.c    **** 	  case K00:
 816:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 817:src/keys.c    **** 	    if (intltr(10)) {
 818:src/keys.c    **** 	      return op;
 819:src/keys.c    **** 	    }
 820:src/keys.c    **** 	    else {
 821:src/keys.c    **** 	      return check_f_key(0, op);
 822:src/keys.c    **** 	    }
 823:src/keys.c    **** 	  case K01:
 824:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 825:src/keys.c    **** 	    if (intltr(11)) {
 826:src/keys.c    **** 	      return op;
 827:src/keys.c    **** 	    }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 16


 828:src/keys.c    **** 	    else {
 829:src/keys.c    **** 	      return check_f_key(1, op);
 830:src/keys.c    **** 	    }
 831:src/keys.c    **** 	  case K03:
 832:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 833:src/keys.c    **** 	    if (intltr(12)) {
 834:src/keys.c    **** 	      return op_int;
 835:src/keys.c    **** 	    }
 836:src/keys.c    **** 	    else {
 837:src/keys.c    **** 	      return check_f_key(2, op);
 838:src/keys.c    **** 	    }
 839:src/keys.c    **** 	  case K30:
 840:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 841:src/keys.c    **** 	    if (intltr(15)) {
 842:src/keys.c    **** 	      return op_int;
 843:src/keys.c    **** 	    }
 844:src/keys.c    **** 	  default:;
 845:src/keys.c    **** 	  }
 846:src/keys.c    **** 	}
 847:src/keys.c    **** #endif  
 848:src/keys.c    **** 
 849:src/keys.c    **** 	switch (c) {
 850:src/keys.c    **** #ifdef DM42
 851:src/keys.c    **** 	case K00:
 852:src/keys.c    **** 		return check_f_key(0, op);
 853:src/keys.c    **** 	case K01:
 854:src/keys.c    **** 		return check_f_key(1, op);
 855:src/keys.c    **** 	case K03:
 856:src/keys.c    **** 		return check_f_key(2, op);
 857:src/keys.c    **** #else
 858:src/keys.c    **** 	case K00:
 859:src/keys.c    **** 	case K01:
 860:src/keys.c    **** 		if (UState.intm)
 861:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 862:src/keys.c    **** 	case K02:
 863:src/keys.c    **** 	case K03:
 864:src/keys.c    **** 		if (intltr(lc + 10)) {
 865:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 866:src/keys.c    **** 			return op;
 867:src/keys.c    **** 		}
 868:src/keys.c    **** 		return check_f_key(lc, op);
 869:src/keys.c    **** #endif		
 870:src/keys.c    **** 	case K_ARROW:
 871:src/keys.c    **** #ifndef DM42
 872:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 873:src/keys.c    **** 		if (intltr(14))
 874:src/keys.c    **** 			return op;
 875:src/keys.c    **** #else
 876:src/keys.c    **** 		if (UState.intm)
 877:src/keys.c    **** 			return op;
 878:src/keys.c    **** #endif
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 		if (is_bad_cmdline())
 881:src/keys.c    **** 			return STATE_UNFINISHED;
 882:src/keys.c    **** 		process_cmdline_set_lift();
 883:src/keys.c    **** 		State2.arrow = 1;
 884:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccc9ZrJ3.s 			page 17


 885:src/keys.c    **** 		set_menu (9); // arrow menu
 886:src/keys.c    **** 		display_current_menu ();
 887:src/keys.c    **** 		lcd_refresh ();
 888:src/keys.c    **** #else
 889:src/keys.c    **** 		set_shift(SHIFT_G);
 890:src/keys.c    **** #endif
 891:src/keys.c    **** 		break;
 892:src/keys.c    **** 
 893:src/keys.c    **** 	case K_CMPLX:
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 	  if (UState.intm)
 896:src/keys.c    **** 	    break; // return nothing
 897:src/keys.c    **** 	  State2.cmplx = 1;
 898:src/keys.c    **** #else
 899:src/keys.c    **** 	  if (UState.intm)
 900:src/keys.c    **** 	    return op;
 901:src/keys.c    **** 	  State2.cmplx = 1;
 902:src/keys.c    **** #endif
 903:src/keys.c    **** 	  break;
 904:src/keys.c    **** 
 905:src/keys.c    **** 	case K24:				// <-
 906:src/keys.c    **** 		if (State2.disp_temp)
 907:src/keys.c    **** 			return STATE_UNFINISHED;
 908:src/keys.c    **** 		if (State2.runmode)
 909:src/keys.c    **** 			return op;
 910:src/keys.c    **** 		return STATE_BACKSPACE;
 911:src/keys.c    **** 
 912:src/keys.c    **** 	case K10:				// STO
 913:src/keys.c    **** 	case K11:				// RCL
 914:src/keys.c    **** 	case K30:				// XEQ
 915:src/keys.c    **** 		init_arg((enum rarg)op);
 916:src/keys.c    **** 		break;
 917:src/keys.c    **** 
 918:src/keys.c    **** 	default:
 919:src/keys.c    **** 		return op;			// Keys handled by table
 920:src/keys.c    **** 	}
 921:src/keys.c    **** 	return STATE_UNFINISHED;
 922:src/keys.c    **** }
 923:src/keys.c    **** 
 924:src/keys.c    **** 
 925:src/keys.c    **** /*
 926:src/keys.c    ****  *  Process a key code after f or g shift
 927:src/keys.c    ****  */
 928:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 929:src/keys.c    **** 
 930:src/keys.c    **** #define NO_INT 0xf000
 931:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 932:src/keys.c    **** 		// Row 1
 933:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 934:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 935:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 936:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 937:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 938:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 939:src/keys.c    **** 		// Row 2
 940:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 941:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
ARM GAS  /tmp/ccc9ZrJ3.s 			page 18


 942:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 943:src/keys.c    **** 		// Row 3
 944:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 945:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 946:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 947:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 948:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 949:src/keys.c    **** 		// Row 4
 950:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 951:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 952:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 953:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 954:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 955:src/keys.c    **** 		// Row 5
 956:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 957:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 958:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 959:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 960:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 961:src/keys.c    **** 		// Row 6
 962:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 963:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 964:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 965:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 966:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 967:src/keys.c    **** 		// Row 7
 968:src/keys.c    **** #ifdef INFRARED
 969:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 970:src/keys.c    **** #else
 971:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 972:src/keys.c    **** #endif
 973:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 974:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 975:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 976:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 977:src/keys.c    **** #ifdef DM42
 978:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 979:src/keys.c    **** #endif
 980:src/keys.c    **** 	};
 981:src/keys.c    **** 
 982:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 983:src/keys.c    **** 		STATE_UNFINISHED,
 984:src/keys.c    **** 		STATE_UNFINISHED,
 985:src/keys.c    **** 		OP_DYA  | OP_POW,
 986:src/keys.c    **** 		OP_MON  | OP_SQRT
 987:src/keys.c    **** 	};
 988:src/keys.c    **** 
 989:src/keys.c    **** 	enum shifts shift = reset_shift();
 990:src/keys.c    **** 	int lc = keycode_to_linear(c);
 991:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 992:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 993:src/keys.c    **** 	if (no_int)
 994:src/keys.c    **** 		op &= ~NO_INT;
 995:src/keys.c    **** 
 996:src/keys.c    **** 	switch (c) {
 997:src/keys.c    **** 	case K00:
 998:src/keys.c    **** 	  if (! UState.intm) {
ARM GAS  /tmp/ccc9ZrJ3.s 			page 19


 999:src/keys.c    **** 	    //	    print_debug(100,0);
1000:src/keys.c    **** 	    State2.hyp = 1;
1001:src/keys.c    **** 	    State2.dot = op;
1002:src/keys.c    **** 	    // State2.cmplx = 0;
1003:src/keys.c    **** 	    return STATE_UNFINISHED;
1004:src/keys.c    **** 	  }
1005:src/keys.c    **** 	  // fall through
1006:src/keys.c    **** 	case K01:
1007:src/keys.c    **** #ifdef DM42
1008:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1009:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1010:src/keys.c    **** 	  }
1011:src/keys.c    **** 	  break;
1012:src/keys.c    **** #endif
1013:src/keys.c    **** #ifndef DM42
1014:src/keys.c    **** 	case K02:
1015:src/keys.c    **** #endif
1016:src/keys.c    **** 	case K03:
1017:src/keys.c    **** #ifdef DM42
1018:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1019:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1020:src/keys.c    **** 		}
1021:src/keys.c    **** 		break;
1022:src/keys.c    **** #else
1023:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1024:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1025:src/keys.c    **** 		}
1026:src/keys.c    **** 		break;
1027:src/keys.c    **** #endif
1028:src/keys.c    **** 	case K20:				// Alpha
1029:src/keys.c    **** 		if (shift == SHIFT_F) {
1030:src/keys.c    **** 			if (is_bad_cmdline())
1031:src/keys.c    **** 				return STATE_UNFINISHED;
1032:src/keys.c    **** 			process_cmdline_set_lift();
1033:src/keys.c    **** 			State2.alphas = 1;
1034:src/keys.c    **** #ifdef DM42
1035:src/keys.c    **** 			set_menu(16);
1036:src/keys.c    **** 			display_current_menu();
1037:src/keys.c    **** #endif
1038:src/keys.c    **** 		}
1039:src/keys.c    **** 		break;
1040:src/keys.c    **** #ifdef DM42
1041:src/keys.c    **** 	case K31:
1042:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1043:src/keys.c    **** 	    return OP_SPEC | OP_D;
1044:src/keys.c    **** 	  }
1045:src/keys.c    **** 	  break;
1046:src/keys.c    **** 	case K30:
1047:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1048:src/keys.c    **** 	    return OP_SPEC | OP_E;
1049:src/keys.c    **** 	  }
1050:src/keys.c    **** 	  break;
1051:src/keys.c    **** #endif
1052:src/keys.c    **** 	case K51:
1053:src/keys.c    **** 		if (is_bad_cmdline())
1054:src/keys.c    **** 			return STATE_UNFINISHED;
1055:src/keys.c    **** 		process_cmdline_set_lift();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 20


1056:src/keys.c    **** 		State2.test = op;
1057:src/keys.c    **** 		return STATE_UNFINISHED;
1058:src/keys.c    **** 
1059:src/keys.c    **** 	case K50:
1060:src/keys.c    **** #ifndef REALBUILD
1061:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1062:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1063:src/keys.c    **** 			return STATE_UNFINISHED;
1064:src/keys.c    **** 		}
1065:src/keys.c    **** #endif
1066:src/keys.c    **** 	case K52:
1067:src/keys.c    **** 	case K53:
1068:src/keys.c    **** 	case K63:
1069:src/keys.c    **** 	case K64:
1070:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1071:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1072:src/keys.c    **** 				init_arg((enum rarg) op);
1073:src/keys.c    **** 			}
1074:src/keys.c    **** 			return STATE_UNFINISHED;
1075:src/keys.c    **** 		}
1076:src/keys.c    **** 		break;
1077:src/keys.c    **** 
1078:src/keys.c    **** 	default:
1079:src/keys.c    **** 		break;
1080:src/keys.c    **** 	}
1081:src/keys.c    **** 	if (no_int && UState.intm)
1082:src/keys.c    **** 		return STATE_UNFINISHED;
1083:src/keys.c    **** 
1084:src/keys.c    **** 	return check_confirm(op);
1085:src/keys.c    **** #undef NO_INT
1086:src/keys.c    **** }
1087:src/keys.c    **** 
1088:src/keys.c    **** /*
1089:src/keys.c    ****  *  Process a key code after h shift
1090:src/keys.c    ****  */
1091:src/keys.c    **** static int process_h_shifted(const keycode c) {
1092:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1093:src/keys.c    **** #define NO_INT   0x4000
1094:src/keys.c    **** 	static const unsigned short int op_map[] = {
1095:src/keys.c    **** 		// Row 1
1096:src/keys.c    **** 		_RARG   | RARG_STD,
1097:src/keys.c    **** 		_RARG   | RARG_FIX,
1098:src/keys.c    **** 		_RARG   | RARG_SCI,
1099:src/keys.c    **** 		_RARG   | RARG_ENG,
1100:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1101:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1102:src/keys.c    **** 		// Row 2
1103:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1104:src/keys.c    **** 		_RARG   | RARG_VIEW,
1105:src/keys.c    **** 		OP_NIL  | OP_RUP,
1106:src/keys.c    **** 		// Row 3
1107:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1108:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1109:src/keys.c    **** 		OP_MON  | OP_NOT,
1110:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1111:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1112:src/keys.c    **** 		// Row 4
ARM GAS  /tmp/ccc9ZrJ3.s 			page 21


1113:src/keys.c    **** 		_RARG   | RARG_GTO,
1114:src/keys.c    **** 		OP_DYA  | OP_LAND,
1115:src/keys.c    **** 		OP_DYA  | OP_LOR,
1116:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1117:src/keys.c    **** 		OP_DYA  | OP_MOD,
1118:src/keys.c    **** 		// Row 5
1119:src/keys.c    **** 		OP_MON  | OP_FACT,
1120:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1121:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1122:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1123:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1124:src/keys.c    **** 		// Row 6
1125:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1126:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1127:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1128:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1129:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1130:src/keys.c    **** 		// Row 7
1131:src/keys.c    **** 		OP_NIL | OP_OFF,
1132:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1133:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1134:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1135:src/keys.c    **** #else
1136:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1137:src/keys.c    **** #endif
1138:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1139:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1140:src/keys.c    **** #ifdef DM42
1141:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1142:src/keys.c    **** #endif
1143:src/keys.c    **** 	};
1144:src/keys.c    **** 
1145:src/keys.c    **** 	int lc = keycode_to_linear(c);
1146:src/keys.c    **** 	int op = op_map[lc];
1147:src/keys.c    **** 	reset_shift();
1148:src/keys.c    **** 
1149:src/keys.c    **** 	// The switch handles all the special cases
1150:src/keys.c    **** 	switch (c) {
1151:src/keys.c    **** 	case K62:
1152:src/keys.c    **** 		if (UState.intm)
1153:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1154:src/keys.c    **** 		else
1155:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1156:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1157:src/keys.c    **** #else
1158:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1159:src/keys.c    **** #endif
1160:src/keys.c    **** 		break;
1161:src/keys.c    **** 
1162:src/keys.c    **** 	case K63:					// Program<->Run mode
1163:src/keys.c    **** 		if (is_bad_cmdline())
1164:src/keys.c    **** 			return STATE_UNFINISHED;
1165:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1166:src/keys.c    **** 		process_cmdline_set_lift();
1167:src/keys.c    **** 		update_program_bounds(1);
1168:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1169:src/keys.c    **** 			set_pc(0);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 22


1170:src/keys.c    **** 		break;
1171:src/keys.c    **** 
1172:src/keys.c    **** 	default:
1173:src/keys.c    **** 		break;
1174:src/keys.c    **** 	}
1175:src/keys.c    **** 
1176:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1177:src/keys.c    **** 		if (op & _RARG) {
1178:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1179:src/keys.c    **** 			op = STATE_UNFINISHED;
1180:src/keys.c    **** 		}
1181:src/keys.c    **** 	}
1182:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1183:src/keys.c    **** #undef _RARG
1184:src/keys.c    **** #undef NO_INT
1185:src/keys.c    **** }
1186:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1187:src/keys.c    **** 
1188:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1189:src/keys.c    **** 
1190:src/keys.c    **** static void do_command_line ( void ) {
1191:src/keys.c    **** 	if (CmdLineLength) {
1192:src/keys.c    **** 		State2.state_lift = 0;
1193:src/keys.c    **** 		process_cmdline();
1194:src/keys.c    **** 	}
1195:src/keys.c    **** }
1196:src/keys.c    **** 
1197:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1198:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1199:src/keys.c    **** // The argument sets the lift state after entry is finished.
1200:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1201:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1202:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1203:src/keys.c    **** 
1204:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1205:src/keys.c    **** 		CLEAR_REAL;
1206:src/keys.c    **** 		do_command_line();
1207:src/keys.c    **** 	}
1208:src/keys.c    **** 	else if (IMAG_FLAG) {
1209:src/keys.c    **** 		CLEAR_IMAG;
1210:src/keys.c    **** 		do_command_line();
1211:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1212:src/keys.c    **** 	}
1213:src/keys.c    **** */
1214:src/keys.c    **** 	do_command_line();
1215:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1216:src/keys.c    **** 	CLEAR_REAL;
1217:src/keys.c    **** 	CLEAR_IMAG;
1218:src/keys.c    **** 
1219:src/keys.c    **** 	State2.state_lift = lift;
1220:src/keys.c    **** 
1221:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1222:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1223:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1224:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1225:src/keys.c    **** 		//call p2r
1226:src/keys.c    **** 		update_speed(0);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 23


1227:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1228:src/keys.c    **** #ifdef RP_PREFIX
1229:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1230:src/keys.c    **** #endif
1231:src/keys.c    **** 		SET_POLAR_READY;
1232:src/keys.c    **** 	}
1233:src/keys.c    **** }
1234:src/keys.c    **** 
1235:src/keys.c    **** static void stack_restore ( void ) { 
1236:src/keys.c    **** 	// called if number entry terminated by EXIT key
1237:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1238:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1239:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1240:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1241:src/keys.c    **** 		drop ( OP_DROPXY );
1242:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1243:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1244:src/keys.c    **** 	}
1245:src/keys.c    **** 	else { // X, Y have been overwritten
1246:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1247:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1248:src/keys.c    **** 	}
1249:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1250:src/keys.c    **** 	CLEAR_INIT_LIFT;
1251:src/keys.c    **** 	CLEAR_POLAR_READY;
1252:src/keys.c    **** }
1253:src/keys.c    **** 
1254:src/keys.c    **** void stack_begin ( int zero_y ) { 
1255:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1256:src/keys.c    **** 	// zeros y if requested. 
1257:src/keys.c    **** 	CLEAR_POLAR_READY;
1258:src/keys.c    **** 	if ( State2.state_lift ){
1259:src/keys.c    **** 		SET_INIT_LIFT;
1260:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1261:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1262:src/keys.c    **** 		lift();
1263:src/keys.c    **** 		zero_X();
1264:src/keys.c    **** 		lift();
1265:src/keys.c    **** 		State2.state_lift = 0;
1266:src/keys.c    **** 	}
1267:src/keys.c    **** 	else {
1268:src/keys.c    **** 		CLEAR_INIT_LIFT;
1269:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1271:src/keys.c    **** 		zero_X();
1272:src/keys.c    **** 		if ( zero_y ) zero_Y();
1273:src/keys.c    **** 	}
1274:src/keys.c    **** }
1275:src/keys.c    **** 
1276:src/keys.c    **** static int process_c_lock ( const keycode c ) { // main function - called from process (c) function
1277:src/keys.c    **** 
1278:src/keys.c    **** 	enum shifts shift = reset_shift();
1279:src/keys.c    **** 
1280:src/keys.c    **** // Individual keys needing special treatment
1281:src/keys.c    **** 
1282:src/keys.c    **** 	if ( (c < K05) && shift == SHIFT_H ){ // display modes
1283:src/keys.c    **** 		return process_h_shifted (c);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 24


1284:src/keys.c    **** 	}
1285:src/keys.c    **** 
1286:src/keys.c    **** 
1287:src/keys.c    **** 	if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because other
1288:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
1289:src/keys.c    **** 	}
1290:src/keys.c    **** 	if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, HMS
1291:src/keys.c    **** 		return process_fg_shifted (c);
1292:src/keys.c    **** 	}
1293:src/keys.c    **** 
1294:src/keys.c    **** 	if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry complete
1295:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
1296:src/keys.c    **** 			reset_shift();
1297:src/keys.c    **** 			if ( CmdLineLength ) {
1298:src/keys.c    **** 				State2.state_lift = 0;
1299:src/keys.c    **** 				return OP_NIL | OP_PIB;
1300:src/keys.c    **** 			}
1301:src/keys.c    **** 			else {
1302:src/keys.c    **** 				return OP_NIL | OP_PIA;
1303:src/keys.c    **** 			}
1304:src/keys.c    **** 		}
1305:src/keys.c    **** 		else {
1306:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1307:src/keys.c    **** 			const int eex_pi = 1;
1308:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1309:src/keys.c    **** 			const int eex_pi = get_user_flag(regL_idx);
1310:src/keys.c    **** #else
1311:src/keys.c    **** 			const int eex_pi = 0;
1312:src/keys.c    **** #endif
1313:src/keys.c    **** 			if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // normal pi
1314:src/keys.c    **** 				finish_cpx_entry(1);
1315:src/keys.c    **** 				return process_cmplx(c);
1316:src/keys.c    **** 			}
1317:src/keys.c    **** 		}
1318:src/keys.c    **** 	}
1319:src/keys.c    **** 
1320:src/keys.c    **** 	if (shift != SHIFT_N) { // other shifted keys - special cases first.
1321:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
1322:src/keys.c    **** 		switch (c) {
1323:src/keys.c    **** 		case (K60):
1324:src/keys.c    **** 		  if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1325:src/keys.c    **** 		case (K21): // x<->y key
1326:src/keys.c    **** 			if (shift == SHIFT_F || shift == SHIFT_G) { // exchanges real and imag parts with either shift
1327:src/keys.c    **** 				reset_shift();
1328:src/keys.c    **** 				CLEAR_POLAR_READY;
1329:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
1330:src/keys.c    **** 			}
1331:src/keys.c    **** 			else if (shift == SHIFT_H) {
1332:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
1333:src/keys.c    **** 			}
1334:src/keys.c    **** 			break;
1335:src/keys.c    **** 		case (K40): // up-arrow key
1336:src/keys.c    **** 			if (shift == SHIFT_F) {
1337:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
1338:src/keys.c    **** 			}
1339:src/keys.c    **** 			else if (shift == SHIFT_G) {
1340:src/keys.c    **** 				SET_POLAR_DISPLAY;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 25


1341:src/keys.c    **** 				CLEAR_POLAR_READY;
1342:src/keys.c    **** 				update_speed(0); // new polar display calculated from keyboard needs a speed boost
1343:src/keys.c    **** 			}
1344:src/keys.c    **** 			break;
1345:src/keys.c    **** 		case (K22): // +/- key
1346:src/keys.c    **** 			if (shift == SHIFT_F ) {
1347:src/keys.c    **** 				return OP_NIL | OP_C_MIM;
1348:src/keys.c    **** 			}
1349:src/keys.c    **** 			else if (shift == SHIFT_H) {
1350:src/keys.c    **** 				return OP_NIL | OP_C_MRE;
1351:src/keys.c    **** 			}
1352:src/keys.c    **** 			break;
1353:src/keys.c    **** 		case (K62): // IP/FP key
1354:src/keys.c    **** 			if (shift == SHIFT_F) {
1355:src/keys.c    **** 				return OP_NIL | OP_C_IM;
1356:src/keys.c    **** 			}
1357:src/keys.c    **** 			else if (shift == SHIFT_G) {
1358:src/keys.c    **** 				return OP_NIL | OP_C_RE;
1359:src/keys.c    **** 			}
1360:src/keys.c    **** 			break;
1361:src/keys.c    **** 		case (K44): // x (times) key
1362:src/keys.c    **** 			if (shift == SHIFT_H) { // real*real + i imag*imag
1363:src/keys.c    **** 				reset_shift();
1364:src/keys.c    **** 				return OP_CDYA | OP_CDOT;
1365:src/keys.c    **** 			}
1366:src/keys.c    **** 			else {
1367:src/keys.c    **** 				return process_cmplx(c);
1368:src/keys.c    **** 			}
1369:src/keys.c    **** 			break;
1370:src/keys.c    **** 		case (K34): // divide key
1371:src/keys.c    **** 			if (shift == SHIFT_H) { // real/real + i imag/imag
1372:src/keys.c    **** 				reset_shift();
1373:src/keys.c    **** 				return OP_CDYA | OP_CDOTDIV;
1374:src/keys.c    **** 			}
1375:src/keys.c    **** 			else {
1376:src/keys.c    **** 				return process_cmplx(c);
1377:src/keys.c    **** 			}
1378:src/keys.c    **** 			break;
1379:src/keys.c    **** 		case (K24): // <- key
1380:src/keys.c    **** 			if (POLAR_DISPLAY) break;
1381:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
1382:src/keys.c    **** 				zero_X ();
1383:src/keys.c    **** 				State2.state_lift = 0;
1384:src/keys.c    **** 				SET_REAL;
1385:src/keys.c    **** 				stack_begin (0);
1386:src/keys.c    **** 			}
1387:src/keys.c    **** 			break;
1388:src/keys.c    **** 		default:
1389:src/keys.c    **** 			return process_cmplx(c); // for shifted keys not listed above
1390:src/keys.c    **** 		}
1391:src/keys.c    **** 		reset_shift(); // for the keys listed above; functions complete
1392:src/keys.c    **** 		return STATE_UNFINISHED;
1393:src/keys.c    **** 	}
1394:src/keys.c    **** 
1395:src/keys.c    **** 	switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally not
1396:src/keys.c    **** 	case (K61):
1397:src/keys.c    **** 	case (K62):
ARM GAS  /tmp/ccc9ZrJ3.s 			page 26


1398:src/keys.c    **** 	case (K51):
1399:src/keys.c    **** 	case (K52):
1400:src/keys.c    **** 	case (K53):
1401:src/keys.c    **** 	case (K41):
1402:src/keys.c    **** 	case (K42):
1403:src/keys.c    **** 	case (K43):
1404:src/keys.c    **** 	case (K31):
1405:src/keys.c    **** 	case (K32):
1406:src/keys.c    **** 	case (K33):
1407:src/keys.c    **** 	case (K23): // 0.123456789EEX
1408:src/keys.c    **** 		if (!REAL_FLAG && !IMAG_FLAG) {
1409:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
1410:src/keys.c    **** 			stack_begin (1);
1411:src/keys.c    **** 		}
1412:src/keys.c    **** 		return process_normal(c);
1413:src/keys.c    **** 	case (K22): // CHS
1414:src/keys.c    **** //	case (K23): // EEX
1415:src/keys.c    **** 		if (!REAL_FLAG && !IMAG_FLAG) {
1416:src/keys.c    **** 			return process_cmplx(c);
1417:src/keys.c    **** 		}
1418:src/keys.c    **** 		else {
1419:src/keys.c    **** 			return process_normal(c);
1420:src/keys.c    **** 		}
1421:src/keys.c    **** 	case (K24): // backspace
1422:src/keys.c    **** 	case (K04): // arrow
1423:src/keys.c    **** 	case (K_ARROW):
1424:src/keys.c    **** 	  return process_normal(c);
1425:src/keys.c    **** 	case (K_CMPLX):
1426:src/keys.c    **** 		if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1427:src/keys.c    **** 			CLEAR_REAL;
1428:src/keys.c    **** 			SET_IMAG;
1429:src/keys.c    **** 			do_command_line();
1430:src/keys.c    **** 			State2.state_lift = 0;
1431:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1432:src/keys.c    **** 		}
1433:src/keys.c    **** 		else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1434:src/keys.c    **** 			finish_cpx_entry (1);
1435:src/keys.c    **** 		}
1436:src/keys.c    **** 		else { // down here we need a part that deals with CPX being pressed without a real part being en
1437:src/keys.c    **** 			SET_IMAG;
1438:src/keys.c    **** 			stack_begin (1);
1439:src/keys.c    **** 		}
1440:src/keys.c    **** 		return STATE_UNFINISHED;
1441:src/keys.c    **** 	default:;
1442:src/keys.c    **** 	}
1443:src/keys.c    **** 	finish_cpx_entry(0);
1444:src/keys.c    **** 	return process_cmplx(c);
1445:src/keys.c    **** 
1446:src/keys.c    **** }
1447:src/keys.c    **** 
1448:src/keys.c    **** #endif
1449:src/keys.c    **** 
1450:src/keys.c    **** /*
1451:src/keys.c    ****  *  Process a key code after CPX
1452:src/keys.c    ****  */
1453:src/keys.c    **** static int process_cmplx(const keycode c) {
1454:src/keys.c    **** #define _RARG   0xFF00
ARM GAS  /tmp/ccc9ZrJ3.s 			page 27


1455:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1456:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1457:src/keys.c    **** 
1458:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1459:src/keys.c    **** 		// Row 1
1460:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1461:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1462:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1463:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1464:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1465:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1466:src/keys.c    **** 		// Row 2
1467:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1468:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1469:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1470:src/keys.c    **** 		// Row 3
1471:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1472:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1473:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1474:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1475:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1476:src/keys.c    **** 		// Row 4
1477:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1478:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1479:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1480:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1482:src/keys.c    **** 		// Row 5
1483:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1484:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1485:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1486:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1487:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1488:src/keys.c    **** 		// Row 6
1489:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1490:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1491:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1492:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1493:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1494:src/keys.c    **** 		// Row 7
1495:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1496:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1497:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1498:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1499:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1500:src/keys.c    **** #else
1501:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1502:src/keys.c    **** #endif
1503:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1504:src/keys.c    **** #ifdef DM42
1505:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1506:src/keys.c    **** #endif
1507:src/keys.c    **** 	};
1508:src/keys.c    **** 
1509:src/keys.c    **** 	enum shifts shift = reset_shift();
1510:src/keys.c    **** 	int lc = keycode_to_linear(c);
1511:src/keys.c    **** 	int op = op_map[lc][shift];
ARM GAS  /tmp/ccc9ZrJ3.s 			page 28


1512:src/keys.c    **** 	State2.cmplx = 0;
1513:src/keys.c    **** 
1514:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1515:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1516:src/keys.c    **** 		return STATE_UNFINISHED;
1517:src/keys.c    **** 	}
1518:src/keys.c    **** 	if (c == K00) {
1519:src/keys.c    **** 		// HYP
1520:src/keys.c    **** 		process_cmdline_set_lift();
1521:src/keys.c    **** 		//		print_debug(100,1);
1522:src/keys.c    **** 		State2.hyp = 1;
1523:src/keys.c    **** 		State2.dot = op;
1524:src/keys.c    **** 		State2.cmplx = 1;
1525:src/keys.c    **** 		return STATE_UNFINISHED;
1526:src/keys.c    **** 	}
1527:src/keys.c    **** 
1528:src/keys.c    **** 	if (shift != SHIFT_N) {
1529:src/keys.c    **** 		switch (c) {
1530:src/keys.c    **** 		case K_CMPLX:
1531:src/keys.c    **** 			set_shift(shift);
1532:src/keys.c    **** 			break;
1533:src/keys.c    **** 
1534:src/keys.c    **** 		case K51:
1535:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1536:src/keys.c    **** 				if (is_bad_cmdline())
1537:src/keys.c    **** 					return STATE_UNFINISHED;
1538:src/keys.c    **** 				process_cmdline_set_lift();
1539:src/keys.c    **** 				State2.cmplx = 1;
1540:src/keys.c    **** 				State2.test = op;
1541:src/keys.c    **** 			}
1542:src/keys.c    **** 			return STATE_UNFINISHED;
1543:src/keys.c    **** 
1544:src/keys.c    **** 		case K60:
1545:src/keys.c    **** 			init_state();
1546:src/keys.c    **** 			break;
1547:src/keys.c    **** 
1548:src/keys.c    **** 		default:
1549:src/keys.c    **** 			break;
1550:src/keys.c    **** 		}
1551:src/keys.c    **** 	}
1552:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1553:src/keys.c    **** 	return check_confirm(op);
1554:src/keys.c    **** #else
1555:src/keys.c    **** 	return op;
1556:src/keys.c    **** #endif
1557:src/keys.c    **** 
1558:src/keys.c    **** #undef _RARG
1559:src/keys.c    **** #undef CSWAPXZ
1560:src/keys.c    **** #undef CNUM
1561:src/keys.c    **** }
1562:src/keys.c    **** 
1563:src/keys.c    **** 
1564:src/keys.c    **** 
1565:src/keys.c    **** /*
1566:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1567:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1568:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
ARM GAS  /tmp/ccc9ZrJ3.s 			page 29


1569:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1570:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1571:src/keys.c    ****  * the ON key are dealt with by our caller.
1572:src/keys.c    ****  */
1573:src/keys.c    **** static int process_hyp(const keycode c) {
1574:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1575:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1576:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1577:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1578:src/keys.c    **** 	};
1579:src/keys.c    **** 	int cmplx = State2.cmplx;
1580:src/keys.c    **** 	int f = State2.dot;
1581:src/keys.c    **** 
1582:src/keys.c    **** 	State2.hyp = 0;
1583:src/keys.c    **** 	State2.cmplx = 0;
1584:src/keys.c    **** 	State2.dot = 0;
1585:src/keys.c    **** #ifdef DM42
1586:src/keys.c    **** 	reset_shift();
1587:src/keys.c    **** #endif
1588:src/keys.c    **** 	switch ((int)c) {
1589:src/keys.c    **** 
1590:src/keys.c    **** 	case K01:
1591:src/keys.c    **** 	case K02:
1592:src/keys.c    **** 	case K03:
1593:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1594:src/keys.c    **** 
1595:src/keys.c    **** 	case K_CMPLX:
1596:src/keys.c    **** 		cmplx = ! cmplx;
1597:src/keys.c    **** 		goto stay;
1598:src/keys.c    **** 
1599:src/keys.c    **** #ifndef DM42
1600:src/keys.c    **** 	case K_F: 
1601:src/keys.c    **** 	case K_G:
1602:src/keys.c    **** 		f = (c == K_F);
1603:src/keys.c    **** 		// fall through
1604:src/keys.c    **** #else
1605:src/keys.c    **** 	case K_F:
1606:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1607:src/keys.c    **** #endif
1608:src/keys.c    **** 	stay:
1609:src/keys.c    **** 		// process_cmdline_set_lift();
1610:src/keys.c    **** 	  //	  print_debug(100,2);
1611:src/keys.c    **** 	  
1612:src/keys.c    **** 	  State2.hyp = 1;
1613:src/keys.c    **** 		State2.cmplx = cmplx;
1614:src/keys.c    **** 		State2.dot = f;
1615:src/keys.c    **** 		break;
1616:src/keys.c    **** 
1617:src/keys.c    **** 	default:
1618:src/keys.c    **** 		break;
1619:src/keys.c    **** 	}
1620:src/keys.c    **** 	return STATE_UNFINISHED;
1621:src/keys.c    **** }
1622:src/keys.c    **** 
1623:src/keys.c    **** 
1624:src/keys.c    **** /*
1625:src/keys.c    ****  *  Process a key code after ->
ARM GAS  /tmp/ccc9ZrJ3.s 			page 30


1626:src/keys.c    ****  */
1627:src/keys.c    **** static int process_arrow(const keycode c) {
1628:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1629:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1630:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1631:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1632:src/keys.c    **** 	};
1633:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1634:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1635:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1636:src/keys.c    **** 	};
1637:src/keys.c    **** 	const int shift = reset_shift();
1638:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1639:src/keys.c    **** 
1640:src/keys.c    **** 	State2.arrow = 0;
1641:src/keys.c    **** #ifdef DM42
1642:src/keys.c    **** 	set_last_menu ();
1643:src/keys.c    **** 	display_current_menu ();
1644:src/keys.c    **** #endif
1645:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1646:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1647:src/keys.c    **** 	  if (!C_LOCK_ON) {
1648:src/keys.c    **** 	    set_menu (17);
1649:src/keys.c    **** 	    display_current_menu();
1650:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1651:src/keys.c    **** 	  }
1652:src/keys.c    **** 	  else {
1653:src/keys.c    **** 	    if (get_last_menu() != 17) {
1654:src/keys.c    **** 	      set_last_menu();
1655:src/keys.c    **** 	    }
1656:src/keys.c    **** 	    else {
1657:src/keys.c    **** 	      set_default_menu();
1658:src/keys.c    **** 	    }
1659:src/keys.c    **** 	    display_current_menu();
1660:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1661:src/keys.c    **** 	  }
1662:src/keys.c    **** 	}
1663:src/keys.c    **** #endif
1664:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1665:src/keys.c    **** 	
1666:src/keys.c    **** 	if (c >= K10 && c <= K12)
1667:src/keys.c    **** 		return op_map[c - K10][f];
1668:src/keys.c    **** 
1669:src/keys.c    **** 	if (c == K22 || c == K23)
1670:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1671:src/keys.c    **** 
1672:src/keys.c    **** 	return STATE_UNFINISHED;
1673:src/keys.c    **** }
1674:src/keys.c    **** 
1675:src/keys.c    **** 
1676:src/keys.c    **** /* Process a GTO . sequence
1677:src/keys.c    ****  */
1678:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1678 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 31


1679:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1679 2 view .LVU1
1680:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1680 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1678:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1678 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1679:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1679 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1680 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1679:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1679 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1680 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1679:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1679 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1678:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1678 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1681:src/keys.c    **** 
1682:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1682 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1679:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1679 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1680:src/keys.c    **** 
  63              		.loc 1 1680 2 is_stmt 1 view .LVU12
  64              		.loc 1 1682 2 view .LVU13
  65              		.loc 1 1682 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1682 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1682 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1683:src/keys.c    **** 		return val;
1684:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1684 2 is_stmt 1 view .LVU17
  77              		.loc 1 1684 6 is_stmt 0 view .LVU18
ARM GAS  /tmp/ccc9ZrJ3.s 			page 32


  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1684 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1684 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1684 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1684 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1685:src/keys.c    **** 		return val;
1686:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1686 2 is_stmt 1 view .LVU23
  91              		.loc 1 1686 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1687:src/keys.c    **** 	return -1;
  94              		.loc 1 1687 2 is_stmt 1 view .LVU25
1684:src/keys.c    **** 		return val;
  95              		.loc 1 1684 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1687 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1688:src/keys.c    **** }
 102              		.loc 1 1688 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1688 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 735:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 735 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 33


 736:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 736 2 view .LVU31
 735:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 735 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 739:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 739 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 737:src/keys.c    **** 
 143              		.loc 1 737 2 is_stmt 1 view .LVU34
 739:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 739 2 view .LVU35
 739:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 739 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 735:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 735 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 739:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 739 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 737:src/keys.c    **** 
 151              		.loc 1 737 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 737:src/keys.c    **** 
 154              		.loc 1 737 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 737:src/keys.c    **** 
 157              		.loc 1 737 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 740:src/keys.c    **** 			pc = 1;
 160              		.loc 1 740 3 is_stmt 1 view .LVU42
 740:src/keys.c    **** 			pc = 1;
 161              		.loc 1 740 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 741:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 741 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 742 3 is_stmt 1 view .LVU45
 736:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 736 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 742 7 view .LVU47
ARM GAS  /tmp/ccc9ZrJ3.s 			page 34


 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 742 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 742 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 742 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 745:src/keys.c    **** }
 186              		.loc 1 745 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 746:src/keys.c    **** 
 188              		.loc 1 746 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 743:src/keys.c    **** 	}
 192              		.loc 1 743 4 is_stmt 1 view .LVU53
 743:src/keys.c    **** 	}
 193              		.loc 1 743 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 746:src/keys.c    **** 
 195              		.loc 1 746 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 746:src/keys.c    **** 
 199              		.loc 1 746 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1689:src/keys.c    **** 
1690:src/keys.c    **** static int gtodot_fkey(int n) {
1691:src/keys.c    **** 	const int code = 100 + n;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 35


1692:src/keys.c    **** 	unsigned int pc = state_pc();
1693:src/keys.c    **** 
1694:src/keys.c    **** 	if(isXROM(pc))
1695:src/keys.c    **** 		pc = 1;
1696:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1697:src/keys.c    **** 	if (pc > 0)
1698:src/keys.c    **** 		return pc;
1699:src/keys.c    **** 	return state_pc();
1700:src/keys.c    **** }
1701:src/keys.c    **** 
1702:src/keys.c    **** static int process_gtodot(const keycode c) {
1703:src/keys.c    **** 	int pc = -1;
1704:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1705:src/keys.c    **** 
1706:src/keys.c    **** 	if (rawpc <= 9) {
1707:src/keys.c    **** 		// Digit 0 - 9
1708:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1709:src/keys.c    **** 	}
1710:src/keys.c    **** #ifdef DM42
1711:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1712:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1713:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1715:src/keys.c    **** #endif
1716:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1717:src/keys.c    **** 		// A - D
1718:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1719:src/keys.c    **** 		goto fin;
1720:src/keys.c    **** 	}
1721:src/keys.c    **** 	else if (c == K62) {
1722:src/keys.c    **** 		// .
1723:src/keys.c    **** 		rawpc = ProgSize;
1724:src/keys.c    **** 		goto fin;
1725:src/keys.c    **** 	}
1726:src/keys.c    **** 	else if (c == K20) {
1727:src/keys.c    **** 		// ENTER - short circuit processing
1728:src/keys.c    **** 		pc = State2.digval;
1729:src/keys.c    **** 	}
1730:src/keys.c    **** 	else if (c == K24) {
1731:src/keys.c    **** 		// backspace
1732:src/keys.c    **** 		if (State2.numdigit == 0) {
1733:src/keys.c    **** 			goto fin2;
1734:src/keys.c    **** 		} else {
1735:src/keys.c    **** 			State2.numdigit--;
1736:src/keys.c    **** 			State2.digval /= 10;
1737:src/keys.c    **** 		}
1738:src/keys.c    **** 	}
1739:src/keys.c    **** 	else if (c == K_UP) {
1740:src/keys.c    **** 		// up
1741:src/keys.c    **** 		rawpc = state_pc();
1742:src/keys.c    **** 		if (rawpc == 1)
1743:src/keys.c    **** 			rawpc = 0;
1744:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1745:src/keys.c    **** 		update_program_bounds(1);
1746:src/keys.c    **** 		rawpc = ProgBegin;
1747:src/keys.c    **** 		goto fin;
1748:src/keys.c    **** 	}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 36


1749:src/keys.c    **** 	else if (c == K_DOWN) {
1750:src/keys.c    **** 		// down
1751:src/keys.c    **** 		update_program_bounds(1);
1752:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1753:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1754:src/keys.c    **** 			rawpc = 1;
1755:src/keys.c    **** 		goto fin;
1756:src/keys.c    **** 	}
1757:src/keys.c    **** 	if (pc >= 0) {
1758:src/keys.c    **** 		rawpc = find_user_pc(pc);
1759:src/keys.c    **** fin:		set_pc(rawpc);
1760:src/keys.c    **** fin2:		State2.gtodot = 0;
1761:src/keys.c    **** 		State2.digval = 0;
1762:src/keys.c    **** 		State2.numdigit = 0;
1763:src/keys.c    **** 	}
1764:src/keys.c    **** 	return STATE_UNFINISHED;
1765:src/keys.c    **** }
1766:src/keys.c    **** 
1767:src/keys.c    **** 
1768:src/keys.c    **** /* Process a keystroke in alpha mode
1769:src/keys.c    ****  */
1770:src/keys.c    **** static int process_alpha(const keycode c) {
1771:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1772:src/keys.c    ****         int op = STATE_UNFINISHED;
1773:src/keys.c    **** 	const enum shifts shift = reset_shift();
1774:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1775:src/keys.c    **** 	State2.alpha_pos = 0;
1776:src/keys.c    **** 
1777:src/keys.c    **** 	switch (c) {
1778:src/keys.c    **** 	case K10:	// STO
1779:src/keys.c    **** 		if (shift == SHIFT_F) {
1780:src/keys.c    **** 			init_arg(RARG_ASTO);
1781:src/keys.c    **** 			return STATE_UNFINISHED;
1782:src/keys.c    **** 		}
1783:src/keys.c    **** 		break;
1784:src/keys.c    **** 
1785:src/keys.c    **** 	case K11:	// RCL - maybe view
1786:src/keys.c    **** 		if (shift == SHIFT_F) {
1787:src/keys.c    **** 			init_arg(RARG_ARCL);
1788:src/keys.c    **** 			return STATE_UNFINISHED;
1789:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1790:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1791:src/keys.c    **** 			return STATE_UNFINISHED;
1792:src/keys.c    **** 		}
1793:src/keys.c    **** 		break;
1794:src/keys.c    **** 
1795:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1796:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1797:src/keys.c    **** 			break;
1798:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1799:src/keys.c    **** 			State2.multi = 1;
1800:src/keys.c    **** 			State2.numdigit = 0;
1801:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1802:src/keys.c    **** 			return STATE_UNFINISHED;
1803:src/keys.c    **** 		}
1804:src/keys.c    **** 		State2.alphas = 0;
1805:src/keys.c    **** 		State2.alphashift = 0;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 37


1806:src/keys.c    **** #ifdef DM42
1807:src/keys.c    **** 		set_menu(-1);
1808:src/keys.c    **** 		display_current_menu();
1809:src/keys.c    **** #endif
1810:src/keys.c    **** 		return op;
1811:src/keys.c    **** 
1812:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1813:src/keys.c    **** 		if (shift == SHIFT_N)
1814:src/keys.c    **** 			return STATE_BACKSPACE;
1815:src/keys.c    **** 		if (shift == SHIFT_H)
1816:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1817:src/keys.c    **** 		break;
1818:src/keys.c    **** 
1819:src/keys.c    **** 	case K_UP:
1820:src/keys.c    **** 	  if (shift == SHIFT_N) {
1821:src/keys.c    **** 	    if ( State2.runmode ) {
1822:src/keys.c    **** 	      // Alpha scroll left
1823:src/keys.c    **** #ifdef DM42
1824:src/keys.c    **** 	      /* 
1825:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1826:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1827:src/keys.c    **** 	       */
1828:src/keys.c    **** #ifdef BIGGER_DISPLAY
1829:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1830:src/keys.c    **** 		alpha_pos += 1;
1831:src/keys.c    **** 	      }
1832:src/keys.c    **** #else
1833:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1834:src/keys.c    **** 		alpha_pos += 1;
1835:src/keys.c    **** 	      }
1836:src/keys.c    **** #endif
1837:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1838:src/keys.c    **** #else
1839:src/keys.c    **** 	      int n = alpha_pos + 1;
1840:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1841:src/keys.c    **** #endif
1842:src/keys.c    **** 	      return STATE_UNFINISHED;
1843:src/keys.c    **** 	    }
1844:src/keys.c    **** 	    return STATE_BST;
1845:src/keys.c    **** 	  }
1846:src/keys.c    **** 	  break;
1847:src/keys.c    **** 
1848:src/keys.c    **** 	case K_DOWN:
1849:src/keys.c    **** 	  if (shift == SHIFT_N) {
1850:src/keys.c    **** 	    if ( State2.runmode ) {
1851:src/keys.c    **** 	      // Alpha scroll right
1852:src/keys.c    **** 	      if (alpha_pos > 0)
1853:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1854:src/keys.c    **** 	      return STATE_UNFINISHED;
1855:src/keys.c    **** 	    }
1856:src/keys.c    **** 	    return STATE_SST;
1857:src/keys.c    **** 	  }
1858:src/keys.c    **** 	  break;
1859:src/keys.c    **** 
1860:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1861:src/keys.c    **** 		if (shift == SHIFT_F)
1862:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 38


1863:src/keys.c    **** 		else if (shift == SHIFT_H)
1864:src/keys.c    **** 			return OP_NIL | OP_OFF;
1865:src/keys.c    **** 		else if (shift == SHIFT_N) {
1866:src/keys.c    **** #ifdef DM42
1867:src/keys.c    **** 		  set_menu(-1);
1868:src/keys.c    **** 		  display_current_menu();
1869:src/keys.c    **** #endif
1870:src/keys.c    **** 		  init_state();
1871:src/keys.c    **** 		}
1872:src/keys.c    **** 		return STATE_UNFINISHED;
1873:src/keys.c    **** 
1874:src/keys.c    **** 	case K63:
1875:src/keys.c    **** 		if (shift == SHIFT_F)
1876:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1877:src/keys.c    **** 		break;
1878:src/keys.c    **** 
1879:src/keys.c    **** 	default:
1880:src/keys.c    **** 		break;
1881:src/keys.c    **** 	}
1882:src/keys.c    **** 
1883:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1884:src/keys.c    **** 	if (ch == 0)
1885:src/keys.c    **** 		return STATE_UNFINISHED;
1886:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1887:src/keys.c    **** }
1888:src/keys.c    **** 
1889:src/keys.c    **** /*
1890:src/keys.c    ****  *  Code to handle all commands with arguments
1891:src/keys.c    ****  */
1892:src/keys.c    **** static void reset_arg(void) {
1893:src/keys.c    **** 	init_arg((enum rarg) 0);
1894:src/keys.c    **** 	State2.rarg = 0;
1895:src/keys.c    **** }
1896:src/keys.c    **** 
1897:src/keys.c    ****  static int arg_eval(unsigned int val) {
1898:src/keys.c    ****    const unsigned int base = CmdBase;
1899:src/keys.c    ****    int r = RARG(base, val 
1900:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1901:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1902:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1903:src/keys.c    **** 
1904:src/keys.c    ****    if (! State2.ind) {
1905:src/keys.c    ****      /*
1906:src/keys.c    ****       *  Central argument checking for some commands
1907:src/keys.c    ****       */
1908:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1909:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1910:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1911:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1912:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1913:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1914:src/keys.c    ****        if ( val == 0 )
1915:src/keys.c    **** 	 return STATE_UNFINISHED;
1916:src/keys.c    ****        r = RARG(base, val);
1917:src/keys.c    ****      }
1918:src/keys.c    **** #endif
1919:src/keys.c    **** #ifdef INCLUDE_C_LOCK
ARM GAS  /tmp/ccc9ZrJ3.s 			page 39


1920:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1921:src/keys.c    ****        if (C_LOCKED) {
1922:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1923:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1924:src/keys.c    ****        }
1925:src/keys.c    ****        else {
1926:src/keys.c    **** 	 return STATE_UNFINISHED;
1927:src/keys.c    ****        }
1928:src/keys.c    ****      }
1929:src/keys.c    **** #else
1930:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1931:src/keys.c    ****        // Disallow odd complex register > 98
1932:src/keys.c    ****        return STATE_UNFINISHED;
1933:src/keys.c    **** #endif
1934:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1935:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1936:src/keys.c    ****        return STATE_UNFINISHED;
1937:src/keys.c    ****    }
1938:src/keys.c    ****    // Build op-code
1939:src/keys.c    ****    reset_arg();
1940:src/keys.c    ****    return r;
1941:src/keys.c    ****  }
1942:src/keys.c    **** 
1943:src/keys.c    **** static int arg_digit(int n) {
1944:src/keys.c    **** 	int lim;
1945:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1946:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1947:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1948:src/keys.c    **** #else
1949:src/keys.c    **** 	const unsigned int base = CmdBase;
1950:src/keys.c    **** #endif
1951:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1952:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1953:src/keys.c    **** 	
1954:src/keys.c    **** 	if (State2.local) {
1955:src/keys.c    **** 		// Handle local registers and flags
1956:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1957:src/keys.c    **** 		if (State2.runmode) {
1958:src/keys.c    **** 			if (LocalRegs == 0)
1959:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1960:src/keys.c    **** 			if (is_reg) {
1961:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1962:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1963:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1964:src/keys.c    **** 			}
1965:src/keys.c    **** 		}
1966:src/keys.c    **** 	}
1967:src/keys.c    **** 	else if (is_reg)						// normal register
1968:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1969:src/keys.c    **** 	else {
1970:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1971:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1972:src/keys.c    **** 			lim = RARG_IND - 1;
1973:src/keys.c    **** 	}
1974:src/keys.c    **** 	if ((int) val > lim)
1975:src/keys.c    **** 		return STATE_UNFINISHED;
1976:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 40


1977:src/keys.c    **** 	State2.digval = val;
1978:src/keys.c    **** 	++State2.numdigit;
1979:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1980:src/keys.c    **** 		int result = arg_eval(val);
1981:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1982:src/keys.c    **** 			--State2.numdigit;
1983:src/keys.c    **** 			State2.digval /= 10;
1984:src/keys.c    **** 		}
1985:src/keys.c    **** 		return result;
1986:src/keys.c    **** 	}
1987:src/keys.c    **** 	return STATE_UNFINISHED;
1988:src/keys.c    **** }
1989:src/keys.c    **** 
1990:src/keys.c    **** static int arg_fkey(int n) {
1991:src/keys.c    **** 	const unsigned int b = CmdBase;
1992:src/keys.c    **** 
1993:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1994:src/keys.c    **** 	{
1995:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1996:src/keys.c    **** 			return STATE_UNFINISHED;
1997:src/keys.c    **** 		if (argcmds[b].lim < 100)
1998:src/keys.c    **** 			return STATE_UNFINISHED;
1999:src/keys.c    **** 		return arg_eval(n + 100);
2000:src/keys.c    **** 	}
2001:src/keys.c    **** 	return STATE_UNFINISHED;
2002:src/keys.c    **** }
2003:src/keys.c    **** 
2004:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2005:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2006:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2007:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2008:src/keys.c    **** #else
2009:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2010:src/keys.c    **** #endif
2011:src/keys.c    **** }
2012:src/keys.c    **** 
2013:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2014:src/keys.c    **** 	unsigned int b = CmdBase;
2015:src/keys.c    **** 
2016:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2017:src/keys.c    **** 		CmdBase += n;
2018:src/keys.c    **** 		return 1;
2019:src/keys.c    **** 	}
2020:src/keys.c    **** 	/* And we can turn off the operation too */
2021:src/keys.c    **** 	if (b >= n) {
2022:src/keys.c    **** 		b -= n;
2023:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2024:src/keys.c    **** 			CmdBase = b;
2025:src/keys.c    **** 			return 1;
2026:src/keys.c    **** 		}
2027:src/keys.c    **** 	}
2028:src/keys.c    **** 	return 0;
2029:src/keys.c    **** }
2030:src/keys.c    **** 
2031:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2032:src/keys.c    **** 
2033:src/keys.c    **** 	if (State2.numdigit == 0) {
ARM GAS  /tmp/ccc9ZrJ3.s 			page 41


2034:src/keys.c    **** 		// Only valid at beginning of entry
2035:src/keys.c    **** 		if (State2.dot || State2.local) {
2036:src/keys.c    **** 			// '..' or ENTER '.' = X
2037:src/keys.c    **** 			State2.local = 0;
2038:src/keys.c    **** 			return arg_eval(regX_idx);
2039:src/keys.c    **** 		}
2040:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2041:src/keys.c    **** 			// local register or flag select
2042:src/keys.c    **** 			State2.local = 1;
2043:src/keys.c    **** 		}
2044:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2045:src/keys.c    **** 			// Special GTO . sequence
2046:src/keys.c    **** 			if (! State2.ind) {
2047:src/keys.c    **** 				State2.gtodot = 1;
2048:src/keys.c    **** 				reset_arg();
2049:src/keys.c    **** 			}
2050:src/keys.c    **** 		}
2051:src/keys.c    **** 	}
2052:src/keys.c    **** 	return STATE_UNFINISHED;
2053:src/keys.c    **** }
2054:src/keys.c    **** 
2055:src/keys.c    **** static int process_arg_shuffle(int r) {
2056:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2057:src/keys.c    **** 	if (State2.numdigit < 4)
2058:src/keys.c    **** 		return STATE_UNFINISHED;
2059:src/keys.c    **** 	return arg_eval(State2.digval);
2060:src/keys.c    **** }
2061:src/keys.c    **** 
2062:src/keys.c    **** 
2063:src/keys.c    **** static int process_arg(const keycode c) {
2064:src/keys.c    **** 	unsigned int base = CmdBase;
2065:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2066:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2067:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2068:src/keys.c    **** 	const enum shifts shift = reset_shift();
2069:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2070:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2071:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2072:src/keys.c    **** 
2073:src/keys.c    **** 	n &= ~NO_SHORT;
2074:src/keys.c    **** 	if (base >= NUM_RARG) {
2075:src/keys.c    **** 		reset_arg();
2076:src/keys.c    **** 		return STATE_UNFINISHED;
2077:src/keys.c    **** 	}
2078:src/keys.c    **** #ifdef DM42
2079:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2080:src/keys.c    **** 	  switch (n) {
2081:src/keys.c    **** 	  case regX_idx:
2082:src/keys.c    **** 	    return arg_digit(1);
2083:src/keys.c    **** 	  case regY_idx:
2084:src/keys.c    **** 	    return arg_digit(2);
2085:src/keys.c    **** 	  case regZ_idx:
2086:src/keys.c    **** 	    return arg_digit(3);
2087:src/keys.c    **** 	  case regT_idx:
2088:src/keys.c    **** 	    return arg_digit(4);
2089:src/keys.c    **** 	  case 5:
2090:src/keys.c    **** 	  case 6:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 42


2091:src/keys.c    **** 	  case 7:
2092:src/keys.c    **** 	  case 8:
2093:src/keys.c    **** 	  case 9:
2094:src/keys.c    **** 	  case 0:
2095:src/keys.c    **** 	    return arg_digit(n);
2096:src/keys.c    **** 	  }
2097:src/keys.c    **** 	}
2098:src/keys.c    **** #else
2099:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2100:src/keys.c    **** 		return arg_digit(n);
2101:src/keys.c    **** #endif	
2102:src/keys.c    **** 	if (shorthand)
2103:src/keys.c    **** 		// row column shorthand addressing
2104:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2105:src/keys.c    **** 
2106:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2107:src/keys.c    **** #ifdef DM42
2108:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2109:src/keys.c    **** 		switch ((int)c) {
2110:src/keys.c    **** 		case K_UP:	// up arrow
2111:src/keys.c    **** 		  if (base == RARG_FIX) {
2112:src/keys.c    **** 		    base = RARG_SIG;
2113:src/keys.c    **** 		    break;
2114:src/keys.c    **** 		  }
2115:src/keys.c    **** 		  if (base == RARG_SIG) {
2116:src/keys.c    **** 		    base = RARG_SIG0;
2117:src/keys.c    **** 		    break;
2118:src/keys.c    **** 		  }
2119:src/keys.c    **** 		  if (base == RARG_SIG0) {
2120:src/keys.c    **** 		    base = RARG_FIX;
2121:src/keys.c    **** 		    break;
2122:src/keys.c    **** 		  }
2123:src/keys.c    **** 		case K_DOWN:	// down arrow
2124:src/keys.c    **** 		case K01:	// B
2125:src/keys.c    **** 		  if (base == RARG_FIX) {
2126:src/keys.c    **** 		    base = RARG_SIG0;
2127:src/keys.c    **** 		    break;
2128:src/keys.c    **** 		  }
2129:src/keys.c    **** 		  if (base == RARG_SIG) {
2130:src/keys.c    **** 		    base = RARG_FIX;
2131:src/keys.c    **** 		    break;
2132:src/keys.c    **** 		  }
2133:src/keys.c    **** 		  if (base == RARG_SIG0) {
2134:src/keys.c    **** 		    base = RARG_SIG;
2135:src/keys.c    **** 		    break;
2136:src/keys.c    **** 		  }
2137:src/keys.c    **** 		}
2138:src/keys.c    **** 	}
2139:src/keys.c    **** 		CmdBase = base;
2140:src/keys.c    **** #else
2141:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2142:src/keys.c    **** 		switch ((int)c) {
2143:src/keys.c    **** 		case K_UP:	// up arrow
2144:src/keys.c    **** 			if (--base < RARG_FIX)
2145:src/keys.c    **** 				base = RARG_SIG0;
2146:src/keys.c    **** 			break;
2147:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 43


2148:src/keys.c    **** 		case K_DOWN:	// down arrow
2149:src/keys.c    **** 		case K01:	// B
2150:src/keys.c    **** 			if (++base > RARG_SIG0)
2151:src/keys.c    **** 				base = RARG_FIX;
2152:src/keys.c    **** 			break;
2153:src/keys.c    **** 		}
2154:src/keys.c    **** 		CmdBase = base;
2155:src/keys.c    **** 	}
2156:src/keys.c    **** #endif
2157:src/keys.c    **** #endif
2158:src/keys.c    **** 	/*
2159:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2160:src/keys.c    **** 	 *  Handle the rest here.
2161:src/keys.c    **** 	 */
2162:src/keys.c    **** 	switch ((int)c) {
2163:src/keys.c    **** 	case K_F:
2164:src/keys.c    **** 		if (label_addressing)
2165:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2166:src/keys.c    **** 		break;
2167:src/keys.c    **** 
2168:src/keys.c    **** 	case K_ARROW:		// arrow
2169:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2170:src/keys.c    **** 			State2.ind = ! State2.ind;
2171:src/keys.c    **** 			if (! stack_reg)
2172:src/keys.c    **** 				State2.dot = 0;
2173:src/keys.c    **** 		}
2174:src/keys.c    **** 		break;
2175:src/keys.c    **** 
2176:src/keys.c    **** 	case K_CMPLX:
2177:src/keys.c    **** 		if (State2.ind || State2.dot)
2178:src/keys.c    **** 			break;
2179:src/keys.c    **** 		if (base == RARG_STO)
2180:src/keys.c    **** 			CmdBase = RARG_STOM;
2181:src/keys.c    **** 		else if (base == RARG_RCL)
2182:src/keys.c    **** 			CmdBase = RARG_RCLM;
2183:src/keys.c    **** 		break;
2184:src/keys.c    **** #ifdef DM42
2185:src/keys.c    **** 	case K41:       // T
2186:src/keys.c    **** 	  if (State2.shuffle)
2187:src/keys.c    **** 	    return process_arg_shuffle(3);
2188:src/keys.c    **** 	case K51:       // X
2189:src/keys.c    **** 	  if (State2.shuffle)
2190:src/keys.c    **** 	    return process_arg_shuffle(0);
2191:src/keys.c    **** 	case K52:	// Y
2192:src/keys.c    **** 	  if (State2.shuffle)
2193:src/keys.c    **** 	    return process_arg_shuffle(1);
2194:src/keys.c    **** 	case K53:       // Z
2195:src/keys.c    **** 	  if (State2.shuffle)
2196:src/keys.c    **** 	    return process_arg_shuffle(2);
2197:src/keys.c    **** #else
2198:src/keys.c    **** 	case K63:	// Y
2199:src/keys.c    **** 	  if (State2.shuffle)
2200:src/keys.c    **** 	    return process_arg_shuffle(1);
2201:src/keys.c    **** #endif
2202:src/keys.c    **** 	case K00:	// A
2203:src/keys.c    **** 	case K01:	// B
2204:src/keys.c    **** 	case K02:	// C
ARM GAS  /tmp/ccc9ZrJ3.s 			page 44


2205:src/keys.c    **** 	case K03:	// D
2206:src/keys.c    **** #ifdef DM42
2207:src/keys.c    **** 	case K12:	// I (lastY)
2208:src/keys.c    **** 	case K13:	// J
2209:src/keys.c    **** 	case K14:	// K
2210:src/keys.c    **** 	case K15:	// L (lastX)
2211:src/keys.c    **** #else
2212:src/keys.c    **** 	case K12:	// I (lastY)
2213:src/keys.c    **** 	case K21:	// J
2214:src/keys.c    **** 	case K22:	// K
2215:src/keys.c    **** 	case K23:	// L (lastX)
2216:src/keys.c    **** #endif
2217:src/keys.c    **** 	  if (State2.dot || stack_reg)
2218:src/keys.c    **** 			return arg_eval(n);
2219:src/keys.c    **** 		if ( c <= K03 )
2220:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2221:src/keys.c    **** 		break;
2222:src/keys.c    **** #ifdef DM42
2223:src/keys.c    **** 	case K62:	// '.'
2224:src/keys.c    **** 		return process_arg_dot(base);
2225:src/keys.c    **** 
2226:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2227:src/keys.c    **** 	case K64:		// plus
2228:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2229:src/keys.c    **** 			return arg_eval(n);
2230:src/keys.c    **** 		break;
2231:src/keys.c    **** 	case K54:               // minus
2232:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2233:src/keys.c    **** 			reset_arg();
2234:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2235:src/keys.c    **** 		}
2236:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2237:src/keys.c    **** 		break;
2238:src/keys.c    **** 	case K44:		// multiply
2239:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2240:src/keys.c    **** 			return arg_eval(n);
2241:src/keys.c    **** 		break;
2242:src/keys.c    **** 	case K34:
2243:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2244:src/keys.c    **** 		break;
2245:src/keys.c    **** #else
2246:src/keys.c    **** 	case K62:	// X, '.'
2247:src/keys.c    **** 		if (State2.shuffle)
2248:src/keys.c    **** 			return process_arg_shuffle(0);
2249:src/keys.c    **** 		return process_arg_dot(base);
2250:src/keys.c    **** 
2251:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2252:src/keys.c    **** 	case K64:		// Z register
2253:src/keys.c    **** 		if (State2.shuffle)
2254:src/keys.c    **** 			return process_arg_shuffle(2);
2255:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2256:src/keys.c    **** 			return arg_eval(n);
2257:src/keys.c    **** 		break;
2258:src/keys.c    **** 
2259:src/keys.c    **** 	case K54:
2260:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2261:src/keys.c    **** 			reset_arg();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 45


2262:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2263:src/keys.c    **** 		}
2264:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2265:src/keys.c    **** 		break;
2266:src/keys.c    **** 
2267:src/keys.c    **** 	case K44:		// T register
2268:src/keys.c    **** 		if (State2.shuffle)
2269:src/keys.c    **** 			return process_arg_shuffle(3);
2270:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2271:src/keys.c    **** 			return arg_eval(n);
2272:src/keys.c    **** 		break;
2273:src/keys.c    **** 
2274:src/keys.c    **** 	case K34:
2275:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2276:src/keys.c    **** 		break;
2277:src/keys.c    **** #endif
2278:src/keys.c    **** 	case K_UP:
2279:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2280:src/keys.c    **** 		break;
2281:src/keys.c    **** 
2282:src/keys.c    **** 	case K_DOWN:
2283:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2284:src/keys.c    **** 		break;
2285:src/keys.c    **** 
2286:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2287:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2288:src/keys.c    **** 			if (argcmds[base].label) {
2289:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2290:src/keys.c    **** 				State2.multi = 1;
2291:src/keys.c    **** 				State2.alphashift = 0;
2292:src/keys.c    **** 				State2.rarg = 0;
2293:src/keys.c    **** 			} else if (base == RARG_SCI) {
2294:src/keys.c    **** 				reset_arg();
2295:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2296:src/keys.c    **** 			} else if (base == RARG_ENG) {
2297:src/keys.c    **** 				reset_arg();
2298:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2299:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2300:src/keys.c    **** 				State2.dot = 1;
2301:src/keys.c    **** 		} else if (State2.numdigit > 0)
2302:src/keys.c    **** 			return arg_eval(State2.digval);
2303:src/keys.c    **** 		else if (stack_reg)
2304:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2305:src/keys.c    **** 		break;
2306:src/keys.c    **** 
2307:src/keys.c    **** 	case K24:	// <-
2308:src/keys.c    **** 		if (State2.numdigit == 0) {
2309:src/keys.c    **** 			if (State2.dot)
2310:src/keys.c    **** 				State2.dot = 0;
2311:src/keys.c    **** 			else if (State2.local)
2312:src/keys.c    **** 				State2.local = 0;
2313:src/keys.c    **** 			else if (State2.ind)
2314:src/keys.c    **** 				State2.ind = 0;
2315:src/keys.c    **** 			else
2316:src/keys.c    **** 				goto reset;
2317:src/keys.c    **** 		}
2318:src/keys.c    **** 		else {
ARM GAS  /tmp/ccc9ZrJ3.s 			page 46


2319:src/keys.c    **** 			--State2.numdigit;
2320:src/keys.c    **** 			if (State2.shuffle)
2321:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2322:src/keys.c    **** 			else
2323:src/keys.c    **** 				State2.digval /= 10;
2324:src/keys.c    **** 		}
2325:src/keys.c    **** 		break;
2326:src/keys.c    **** 
2327:src/keys.c    **** 	case K60:
2328:src/keys.c    **** 	reset:
2329:src/keys.c    **** 		reset_arg();
2330:src/keys.c    **** 	default:
2331:src/keys.c    **** 		break;
2332:src/keys.c    **** 	}
2333:src/keys.c    **** 	return STATE_UNFINISHED;
2334:src/keys.c    **** }
2335:src/keys.c    **** 
2336:src/keys.c    **** 
2337:src/keys.c    **** /*
2338:src/keys.c    ****  *  Process arguments to the diverse test commands
2339:src/keys.c    ****  */
2340:src/keys.c    **** static int process_test(const keycode c) {
2341:src/keys.c    **** 	int r = State2.test;
2342:src/keys.c    **** 	int cmpx = State2.cmplx;
2343:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2344:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2345:src/keys.c    **** 
2346:src/keys.c    **** 	State2.test = TST_NONE;
2347:src/keys.c    **** 	State2.cmplx = 0;
2348:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2349:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2350:src/keys.c    **** 		// Lettered register
2351:src/keys.c    **** 		if (cmpx && (n & 1)) {
2352:src/keys.c    **** 			if (n == regI_idx)
2353:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2354:src/keys.c    **** 			// Disallow odd complex registers > A
2355:src/keys.c    **** 			goto again;
2356:src/keys.c    **** 		}
2357:src/keys.c    **** 		// Return the command with the register completed
2358:src/keys.c    **** 		return RARG(base, n);
2359:src/keys.c    **** 	}
2360:src/keys.c    **** 	else if ( n == 0 ) {
2361:src/keys.c    **** 		// Special 0
2362:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2363:src/keys.c    **** 	}
2364:src/keys.c    **** 	else if ( n == 1 ) {
2365:src/keys.c    **** 		// Special 1
2366:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2367:src/keys.c    **** 	}
2368:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
2369:src/keys.c    **** 		// digit 2..9, -> or .
2370:src/keys.c    **** 		init_arg((enum rarg)base);
2371:src/keys.c    **** 		return process_arg(c);
2372:src/keys.c    **** 	}
2373:src/keys.c    **** 
2374:src/keys.c    **** 	switch (c) {
2375:src/keys.c    **** 	case K11:					// tests vs register
ARM GAS  /tmp/ccc9ZrJ3.s 			page 47


2376:src/keys.c    **** 	case K20:
2377:src/keys.c    **** 		init_arg((enum rarg)base);
2378:src/keys.c    **** 		return STATE_UNFINISHED;
2379:src/keys.c    **** 
2380:src/keys.c    **** 	//case K60:
2381:src/keys.c    **** 	case K24:
2382:src/keys.c    **** 		return STATE_UNFINISHED;
2383:src/keys.c    **** 
2384:src/keys.c    **** 	default:
2385:src/keys.c    **** 		break;
2386:src/keys.c    **** 	}
2387:src/keys.c    **** again:
2388:src/keys.c    **** 	State2.test = r;
2389:src/keys.c    **** 	State2.cmplx = cmpx;
2390:src/keys.c    **** 	return STATE_UNFINISHED;
2391:src/keys.c    **** }
2392:src/keys.c    **** 
2393:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2394:src/keys.c    **** /*
2395:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2396:src/keys.c    ****  */
2397:src/keys.c    **** #define USER_CAT_MAX 100
2398:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2399:src/keys.c    **** 
2400:src/keys.c    **** static int build_user_cat(void)
2401:src/keys.c    **** {
2402:src/keys.c    **** 	// find the label 'CAT'
2403:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2404:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2405:src/keys.c    **** 	int len = 0;
2406:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2407:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2408:src/keys.c    **** 		char buf1[16];
2409:src/keys.c    **** 		int i;
2410:src/keys.c    **** 		s_opcode op;
2411:src/keys.c    **** 	next:
2412:src/keys.c    **** 		pc = do_inc(pc, 0);
2413:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2414:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2415:src/keys.c    **** 			break;
2416:src/keys.c    **** 		if (isDBL(op))
2417:src/keys.c    **** 			continue;
2418:src/keys.c    **** 		if (isRARG(op)) {
2419:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2420:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2421:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2422:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2423:src/keys.c    **** 		}
2424:src/keys.c    **** 		catcmd(op, buf1);
2425:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2426:src/keys.c    **** 			// Find a position in the table to insert the new entry
2427:src/keys.c    **** 			char buf2[16];
2428:src/keys.c    **** 			const char *p, *q;
2429:src/keys.c    **** 			int diff = 0;
2430:src/keys.c    **** 			if (op == UserCat[i]) {
2431:src/keys.c    **** 				// duplicate entry - ignore
2432:src/keys.c    **** 				goto next;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 48


2433:src/keys.c    **** 			}
2434:src/keys.c    **** 			p = buf1;
2435:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2436:src/keys.c    **** 				++p;
2437:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2438:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2439:src/keys.c    **** 				++q;
2440:src/keys.c    **** 			diff = 0;
2441:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2442:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2443:src/keys.c    **** 			}
2444:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2445:src/keys.c    **** 				// identical according to sort order, insert after
2446:src/keys.c    **** 				++i;
2447:src/keys.c    **** 				break;
2448:src/keys.c    **** 			}
2449:src/keys.c    **** 			if (diff > 0) {
2450:src/keys.c    **** 				// insert new entry before the one found because this is greater
2451:src/keys.c    **** 				break;
2452:src/keys.c    **** 			}
2453:src/keys.c    **** 		}
2454:src/keys.c    **** 		if (i < len) {
2455:src/keys.c    **** 			// Make room
2456:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2457:src/keys.c    **** 		}
2458:src/keys.c    **** 		UserCat[i] = op;
2459:src/keys.c    **** 		++len;
2460:src/keys.c    **** 	}
2461:src/keys.c    **** 	// return the number of entries
2462:src/keys.c    **** 	return len;
2463:src/keys.c    **** }
2464:src/keys.c    **** #endif
2465:src/keys.c    **** 
2466:src/keys.c    **** /* Return the number of entries in the current catalogue.
2467:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2468:src/keys.c    ****  * likely be the most space efficient method.
2469:src/keys.c    ****  */
2470:src/keys.c    **** int current_catalogue_max(void) {
2471:src/keys.c    **** 	// A quick table of catalogue sizes
2472:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2473:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2474:src/keys.c    **** 	{
2475:src/keys.c    **** 		0, // NONE
2476:src/keys.c    **** 		SIZE_catalogue,
2477:src/keys.c    **** 		SIZE_cplx_catalogue,
2478:src/keys.c    **** 		SIZE_stats_catalogue,
2479:src/keys.c    **** 		SIZE_prob_catalogue,
2480:src/keys.c    **** 		SIZE_int_catalogue,
2481:src/keys.c    **** 		SIZE_prog_catalogue,
2482:src/keys.c    **** 		SIZE_program_xfcn,
2483:src/keys.c    **** 		SIZE_test_catalogue,
2484:src/keys.c    **** 		SIZE_mode_catalogue,
2485:src/keys.c    **** 		SIZE_alpha_catalogue,
2486:src/keys.c    **** 		SIZE_alpha_symbols,
2487:src/keys.c    **** 		SIZE_alpha_compares,
2488:src/keys.c    **** 		SIZE_alpha_arrows,
2489:src/keys.c    **** 		SIZE_alpha_letters,
ARM GAS  /tmp/ccc9ZrJ3.s 			page 49


2490:src/keys.c    **** 		SIZE_alpha_subscripts,
2491:src/keys.c    **** 		NUM_CONSTS_CAT,
2492:src/keys.c    **** 		NUM_CONSTS_CAT,
2493:src/keys.c    **** 		SIZE_conv_catalogue,
2494:src/keys.c    **** 		SIZE_sums_catalogue,
2495:src/keys.c    **** 		SIZE_matrix_catalogue,
2496:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2497:src/keys.c    **** 		SIZE_internal_catalogue,
2498:src/keys.c    **** #endif
2499:src/keys.c    **** 	};
2500:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2501:src/keys.c    **** 	const int cat = State2.catalogue;
2502:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2503:src/keys.c    **** #else
2504:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2505:src/keys.c    **** #endif
2506:src/keys.c    **** }
2507:src/keys.c    **** 
2508:src/keys.c    **** 
2509:src/keys.c    **** /* Look up the character position in the given byte array and
2510:src/keys.c    ****  * build the alpha op-code for it.
2511:src/keys.c    ****  */
2512:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2513:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2514:src/keys.c    **** }
2515:src/keys.c    **** 
2516:src/keys.c    **** 
2517:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2518:src/keys.c    ****  */
2519:src/keys.c    **** opcode current_catalogue(int n) {
2520:src/keys.c    **** 	// A quick table of catalogue tables
2521:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2522:src/keys.c    **** 	static const void *catalogues[] =
2523:src/keys.c    **** 	{
2524:src/keys.c    **** 		NULL, // NONE
2525:src/keys.c    **** 		catalogue,
2526:src/keys.c    **** 		cplx_catalogue,
2527:src/keys.c    **** 		stats_catalogue,
2528:src/keys.c    **** 		prob_catalogue,
2529:src/keys.c    **** 		int_catalogue,
2530:src/keys.c    **** 		prog_catalogue,
2531:src/keys.c    **** 		program_xfcn,
2532:src/keys.c    **** 		test_catalogue,
2533:src/keys.c    **** 		mode_catalogue,
2534:src/keys.c    **** 		alpha_catalogue,
2535:src/keys.c    **** 		alpha_symbols,
2536:src/keys.c    **** 		alpha_compares,
2537:src/keys.c    **** 		alpha_arrows,
2538:src/keys.c    **** 		alpha_letters,
2539:src/keys.c    **** 		alpha_subscripts,
2540:src/keys.c    **** 		NULL,
2541:src/keys.c    **** 		NULL,
2542:src/keys.c    **** 		NULL, //CONV
2543:src/keys.c    **** 		sums_catalogue,
2544:src/keys.c    **** 		matrix_catalogue,
2545:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2546:src/keys.c    **** 		internal_catalogue,
ARM GAS  /tmp/ccc9ZrJ3.s 			page 50


2547:src/keys.c    **** #endif
2548:src/keys.c    **** 	};
2549:src/keys.c    **** 	const unsigned char *cat;
2550:src/keys.c    **** 	unsigned int c = State2.catalogue;
2551:src/keys.c    **** 	int m, i;
2552:src/keys.c    **** 	unsigned p, q;
2553:src/keys.c    **** 
2554:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2555:src/keys.c    **** 		if (n == OP_ZERO)
2556:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2557:src/keys.c    **** 		return CONST(n);
2558:src/keys.c    **** 	}
2559:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2560:src/keys.c    **** 		if (n == OP_ZERO)
2561:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2562:src/keys.c    **** 		return CONST_CMPLX(n);
2563:src/keys.c    **** 	}
2564:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2565:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2566:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2567:src/keys.c    **** 			// Monadic conversion routine
2568:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2569:src/keys.c    **** 		else
2570:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2571:src/keys.c    **** 	}
2572:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2573:src/keys.c    **** 	if (c == CATALOGUE_USER)
2574:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2575:src/keys.c    **** #endif
2576:src/keys.c    **** 
2577:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2578:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2579:src/keys.c    **** 	else
2580:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2581:src/keys.c    **** 
2582:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2583:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2584:src/keys.c    **** 	}
2585:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2586:src/keys.c    **** 		return OP_NIL | OP_NOP;
2587:src/keys.c    **** 
2588:src/keys.c    **** 	/* Unpack the opcode */
2589:src/keys.c    **** 	cat += n + (n >> 2);
2590:src/keys.c    **** 	p = cat[0];
2591:src/keys.c    **** 	q = cat[1];
2592:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2593:src/keys.c    **** 
2594:src/keys.c    **** 	/* Now figure out which opcode it really is */
2595:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2596:src/keys.c    **** 		if (m < opcode_breaks[i])
2597:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2598:src/keys.c    **** 		m -= opcode_breaks[i];
2599:src/keys.c    **** 	}
2600:src/keys.c    **** 	return RARG_BASEOP(m);
2601:src/keys.c    **** }
2602:src/keys.c    **** 
2603:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 51


2604:src/keys.c    **** /*
2605:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2606:src/keys.c    ****  *  in multi character commands.
2607:src/keys.c    ****  */
2608:src/keys.c    **** static int forbidden_alpha(int pos) {
2609:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2610:src/keys.c    **** }
2611:src/keys.c    **** 
2612:src/keys.c    **** /*
2613:src/keys.c    ****  *  Catalogue navigation
2614:src/keys.c    ****  */
2615:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2616:src/keys.c    ****    int pos = State.catpos;
2617:src/keys.c    ****    int ch;
2618:src/keys.c    ****    const int ctmax = current_catalogue_max();
2619:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2620:src/keys.c    **** 
2621:src/keys.c    ****    if (shift == SHIFT_N) {
2622:src/keys.c    ****      switch (c) {
2623:src/keys.c    **** #ifdef DM42
2624:src/keys.c    ****      case K05:			// XEQ accepts command
2625:src/keys.c    **** #else	  
2626:src/keys.c    ****      case K30:			// XEQ accepts command
2627:src/keys.c    **** #endif						  
2628:src/keys.c    ****      case K20:			// Enter accepts command
2629:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2630:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2631:src/keys.c    **** 
2632:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2633:src/keys.c    **** 
2634:src/keys.c    **** 	 if (isRARG(op)) {
2635:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2636:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2637:src/keys.c    **** 	     return op;
2638:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2639:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2640:src/keys.c    **** 	   else
2641:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2642:src/keys.c    **** 	 }
2643:src/keys.c    **** 	 else {
2644:src/keys.c    **** 	   return check_confirm(op);
2645:src/keys.c    **** 	 }
2646:src/keys.c    ****        } else
2647:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2648:src/keys.c    ****        return STATE_UNFINISHED;
2649:src/keys.c    **** 
2650:src/keys.c    ****      case K24:			// backspace
2651:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2652:src/keys.c    **** 	 if (--CmdLineLength > 0)
2653:src/keys.c    **** 	   goto search;
2654:src/keys.c    **** 	 pos = 0;
2655:src/keys.c    **** 	 goto set_pos;
2656:src/keys.c    ****        } else
2657:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2658:src/keys.c    ****        return STATE_UNFINISHED;
2659:src/keys.c    **** 
2660:src/keys.c    ****      case K60:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 52


2661:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2662:src/keys.c    ****        return STATE_UNFINISHED;
2663:src/keys.c    **** 
2664:src/keys.c    ****      case K_UP:
2665:src/keys.c    ****        CmdLineLength = 0;
2666:src/keys.c    ****        if (pos == 0)
2667:src/keys.c    **** 	 goto set_max;
2668:src/keys.c    ****        else
2669:src/keys.c    **** 	 --pos;
2670:src/keys.c    ****        goto set_pos;
2671:src/keys.c    **** 
2672:src/keys.c    ****      case K_DOWN:
2673:src/keys.c    ****        CmdLineLength = 0;
2674:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2675:src/keys.c    ****        if (pos >= ctmax)
2676:src/keys.c    **** 	 pos = 0;
2677:src/keys.c    ****        goto set_pos;
2678:src/keys.c    **** 
2679:src/keys.c    ****      default:
2680:src/keys.c    ****        break;
2681:src/keys.c    ****      }
2682:src/keys.c    ****    } else if (shift == SHIFT_F) {
2683:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2684:src/keys.c    ****        /*
2685:src/keys.c    **** 	* f 1/x in conversion catalogue
2686:src/keys.c    **** 	*/
2687:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2688:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2689:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2690:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2691:src/keys.c    **** 	*/
2692:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2693:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2694:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2695:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2696:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2697:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2698:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2699:src/keys.c    ****        };
2700:src/keys.c    ****        const opcode op = current_catalogue(pos);
2701:src/keys.c    ****        int i;
2702:src/keys.c    **** 
2703:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2704:src/keys.c    ****        if (isRARG(op))
2705:src/keys.c    **** 	 return op ^ 1;
2706:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2707:src/keys.c    **** 	 if (op == conv_mapping[i])
2708:src/keys.c    **** 	   return conv_mapping[i^1];
2709:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2710:src/keys.c    ****      }
2711:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2712:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2713:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2714:src/keys.c    ****        return STATE_UNFINISHED;
2715:src/keys.c    ****      }
2716:src/keys.c    ****    } else if (shift == SHIFT_G) {
2717:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
ARM GAS  /tmp/ccc9ZrJ3.s 			page 53


2718:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2719:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2720:src/keys.c    ****      }
2721:src/keys.c    ****    }
2722:src/keys.c    **** 
2723:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2724:src/keys.c    ****     * jump to the appropriate catalogue entry.
2725:src/keys.c    ****     */
2726:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2727:src/keys.c    ****    reset_shift();
2728:src/keys.c    ****    if (ch == '\0')
2729:src/keys.c    ****      return STATE_UNFINISHED;
2730:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2731:src/keys.c    ****      // No multi character search in alpha catalogues
2732:src/keys.c    ****      CmdLineLength = 0;
2733:src/keys.c    ****    }
2734:src/keys.c    ****    if (CmdLineLength < 10)
2735:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2736:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2737:src/keys.c    **** 
2738:src/keys.c    ****  search:
2739:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2740:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2741:src/keys.c    ****      char buf[16];
2742:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2743:src/keys.c    ****      int i;
2744:src/keys.c    **** 
2745:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2746:src/keys.c    ****        cmd++;
2747:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2748:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2749:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2750:src/keys.c    ****        if (c > cl)
2751:src/keys.c    **** 	 goto set_pos;
2752:src/keys.c    ****        else if (c < cl)
2753:src/keys.c    **** 	 break;
2754:src/keys.c    ****      }
2755:src/keys.c    ****      if (Cmdline[i] == '\0')
2756:src/keys.c    ****        goto set_pos;
2757:src/keys.c    ****    }
2758:src/keys.c    ****  set_max:
2759:src/keys.c    ****    pos = ctmax - 1;
2760:src/keys.c    ****  set_pos:
2761:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2762:src/keys.c    ****      --pos;
2763:src/keys.c    ****    State.catpos = pos;
2764:src/keys.c    ****    return STATE_UNFINISHED;
2765:src/keys.c    ****  }
2766:src/keys.c    **** 
2767:src/keys.c    **** #ifndef REALBUILD
2768:src/keys.c    **** int find_pos(const char* text) {
2769:src/keys.c    **** 	int pos;
2770:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2771:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2772:src/keys.c    **** 		char buf[16];
2773:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2774:src/keys.c    **** 		int i;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 54


2775:src/keys.c    **** 
2776:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2777:src/keys.c    **** 			cmd++;
2778:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2779:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2780:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2781:src/keys.c    **** 			if (c > cl)
2782:src/keys.c    **** 				return pos;
2783:src/keys.c    **** 			else if (c < cl)
2784:src/keys.c    **** 				break;
2785:src/keys.c    **** 		}
2786:src/keys.c    **** 		if (text[i] == '\0')
2787:src/keys.c    **** 			return pos;
2788:src/keys.c    **** 	}
2789:src/keys.c    **** 	return pos;
2790:src/keys.c    **** }
2791:src/keys.c    **** 
2792:src/keys.c    **** #endif
2793:src/keys.c    **** 
2794:src/keys.c    **** /* Multi (2) word instruction entry
2795:src/keys.c    ****  */
2796:src/keys.c    **** static void reset_multi(void) {
2797:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2798:src/keys.c    **** 	State2.multi = 0;
2799:src/keys.c    **** 	if (! State2.alphas )
2800:src/keys.c    **** 		State2.alphashift = 0;
2801:src/keys.c    **** }
2802:src/keys.c    **** 
2803:src/keys.c    **** static int process_multi(const keycode c) {
2804:src/keys.c    **** 	enum shifts shift = reset_shift();
2805:src/keys.c    **** 	unsigned int ch = 0;
2806:src/keys.c    **** 	unsigned int opcode;
2807:src/keys.c    **** 
2808:src/keys.c    **** 	if (State2.catalogue) {
2809:src/keys.c    **** 		// Alpha catalogue from within multi character command
2810:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2811:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2812:src/keys.c    **** 			return opcode;
2813:src/keys.c    **** 		ch = (unsigned char) opcode;
2814:src/keys.c    **** 		goto add_char;
2815:src/keys.c    **** 	}
2816:src/keys.c    **** 
2817:src/keys.c    **** 	switch (c) {
2818:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2819:src/keys.c    **** 		if (shift != SHIFT_N)
2820:src/keys.c    **** 				break;
2821:src/keys.c    **** 		reset_multi();
2822:src/keys.c    **** 		if (State2.numdigit == 0)
2823:src/keys.c    **** 			return STATE_UNFINISHED;
2824:src/keys.c    **** 		else if (State2.numdigit == 1)
2825:src/keys.c    **** 			State2.digval2 = 0;
2826:src/keys.c    **** 		goto fin;
2827:src/keys.c    **** 
2828:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2829:src/keys.c    **** 		if (shift != SHIFT_H) {
2830:src/keys.c    **** 			if (State2.numdigit == 0)
2831:src/keys.c    **** 				reset_multi();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 55


2832:src/keys.c    **** 			else
2833:src/keys.c    **** 				State2.numdigit--;
2834:src/keys.c    **** 			return STATE_UNFINISHED;
2835:src/keys.c    **** 		}
2836:src/keys.c    **** 		break;
2837:src/keys.c    **** 
2838:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2839:src/keys.c    **** 		if (shift == SHIFT_F)
2840:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2841:src/keys.c    **** 		else
2842:src/keys.c    **** 			reset_multi();
2843:src/keys.c    **** 		return STATE_UNFINISHED;
2844:src/keys.c    **** 
2845:src/keys.c    **** 	default:
2846:src/keys.c    **** 		break;
2847:src/keys.c    **** 		}
2848:src/keys.c    **** 
2849:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2850:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2851:src/keys.c    **** 	if (ch == 0)
2852:src/keys.c    **** 		return STATE_UNFINISHED;
2853:src/keys.c    **** add_char:
2854:src/keys.c    **** 	if (State2.numdigit == 0) {
2855:src/keys.c    **** 		State2.digval = ch;
2856:src/keys.c    **** 		State2.numdigit = 1;
2857:src/keys.c    **** 		return STATE_UNFINISHED;
2858:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2859:src/keys.c    **** 		State2.digval2 = ch;
2860:src/keys.c    **** 		State2.numdigit = 2;
2861:src/keys.c    **** 		return STATE_UNFINISHED;
2862:src/keys.c    **** 	}
2863:src/keys.c    **** 	reset_multi();
2864:src/keys.c    **** 
2865:src/keys.c    **** fin:
2866:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2867:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2868:src/keys.c    **** 	return opcode;
2869:src/keys.c    **** }
2870:src/keys.c    **** 
2871:src/keys.c    **** 
2872:src/keys.c    **** /* Handle YES/NO confirmations
2873:src/keys.c    ****  */
2874:src/keys.c    **** static int process_confirm(const keycode c) {
2875:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2876:src/keys.c    **** 	switch (c) {
2877:src/keys.c    **** #ifdef DM42
2878:src/keys.c    **** 	case K52:
2879:src/keys.c    **** #endif
2880:src/keys.c    **** 	case K63:			// Yes
2881:src/keys.c    **** 	  switch (State2.confirm) {
2882:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2883:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2884:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2885:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2886:src/keys.c    **** 	  }
2887:src/keys.c    **** 	case K24:
2888:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccc9ZrJ3.s 			page 56


2889:src/keys.c    **** 	case K22:
2890:src/keys.c    **** #else
2891:src/keys.c    **** 	case K32:
2892:src/keys.c    **** #endif
2893:src/keys.c    **** 	  // No
2894:src/keys.c    **** 	  State2.confirm = 0;
2895:src/keys.c    **** 	  State2.digval = 0;
2896:src/keys.c    **** 	  break;
2897:src/keys.c    **** 	default:			// No state change
2898:src/keys.c    **** 	  break;
2899:src/keys.c    **** 	}
2900:src/keys.c    **** 	return STATE_UNFINISHED;
2901:src/keys.c    **** }
2902:src/keys.c    **** 
2903:src/keys.c    **** 
2904:src/keys.c    **** /*
2905:src/keys.c    ****  *  STATUS
2906:src/keys.c    ****  */
2907:src/keys.c    **** static int process_status(const keycode c) {
2908:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2909:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2910:src/keys.c    **** 
2911:src/keys.c    **** 	if (c == K_UP) {
2912:src/keys.c    **** 		if (--n < -2)
2913:src/keys.c    **** 			n = max;
2914:src/keys.c    **** 	}
2915:src/keys.c    **** 	else if (c == K_DOWN) {
2916:src/keys.c    **** 		if (++n > max)
2917:src/keys.c    **** 			n = -2;
2918:src/keys.c    **** 	}
2919:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2920:src/keys.c    **** 		State2.status = 0;
2921:src/keys.c    **** 		return STATE_UNFINISHED;
2922:src/keys.c    **** 	} 
2923:src/keys.c    **** 	else {
2924:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2925:src/keys.c    **** 		if (nn <= 9)
2926:src/keys.c    **** 			n = nn;
2927:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2928:src/keys.c    **** 			n = n == max ? 10 : max;
2929:src/keys.c    **** 		else if (nn != NO_REG)
2930:src/keys.c    **** 			n = 10; 
2931:src/keys.c    **** 	}
2932:src/keys.c    **** 	State2.status = n + 3;
2933:src/keys.c    **** 
2934:src/keys.c    **** 	return STATE_UNFINISHED;
2935:src/keys.c    **** }
2936:src/keys.c    **** 
2937:src/keys.c    **** 
2938:src/keys.c    **** /*
2939:src/keys.c    ****  *  CAT helper
2940:src/keys.c    ****  */
2941:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2941 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 57


2942:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2942 2 view .LVU58
2941:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2941 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2941:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2941 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2942 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2943:src/keys.c    **** 
2944:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2944 2 is_stmt 1 view .LVU62
 234              		.loc 1 2944 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2944 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2944 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2944 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2945:src/keys.c    **** }
 245              		.loc 1 2945 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2944:src/keys.c    **** }
 249              		.loc 1 2944 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2945 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2944:src/keys.c    **** }
 256              		.loc 1 2944 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2944:src/keys.c    **** }
 259              		.loc 1 2944 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2945 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2945 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
ARM GAS  /tmp/ccc9ZrJ3.s 			page 58


 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2946:src/keys.c    **** 
2947:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2947 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2947 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2947 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2948:src/keys.c    **** 	do {
 294              		.loc 1 2948 2 is_stmt 1 view .LVU77
2949:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2949 3 view .LVU78
2950:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2950 4 view .LVU79
2947:src/keys.c    **** 	do {
 297              		.loc 1 2947 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2950 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2951:src/keys.c    **** 				pc = do_inc(pc, 0);
2952:src/keys.c    **** 				if (PcWrapped)
2953:src/keys.c    **** 					break;
2954:src/keys.c    **** 			}
2955:src/keys.c    **** 			else
2956:src/keys.c    **** 				inc = 1;
2957:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2957 4 is_stmt 1 view .LVU82
 304              		.loc 1 2957 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2957 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2957 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2957 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
ARM GAS  /tmp/ccc9ZrJ3.s 			page 59


 316              	.L30:
2951:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2951 5 is_stmt 1 view .LVU87
2951:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2951 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2952:src/keys.c    **** 					break;
 323              		.loc 1 2952 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2951:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2951 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2952:src/keys.c    **** 					break;
 328              		.loc 1 2952 5 is_stmt 1 view .LVU91
2952:src/keys.c    **** 					break;
 329              		.loc 1 2952 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2958:src/keys.c    **** 				return pc;
2959:src/keys.c    **** 			}
2960:src/keys.c    **** 		}
2961:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2961 3 is_stmt 1 view .LVU93
 333              		.loc 1 2961 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2961 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2962:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2962 10 is_stmt 1 view .LVU96
 342              		.loc 1 2962 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2962 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2963:src/keys.c    **** 	return pc;
2964:src/keys.c    **** }
 351              		.loc 1 2964 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2964 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
ARM GAS  /tmp/ccc9ZrJ3.s 			page 60


 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 61


 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB287:
 432              	.LBI287:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE287:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB304:
 438              	.LBB288:
 439              	.LBI288:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB289:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB290:
 444              	.LBI290:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 62


  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB291:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE291:
 453              	.LBE290:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE289:
 462              	.LBE288:
 463              	.LBE304:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
ARM GAS  /tmp/ccc9ZrJ3.s 			page 63


 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB305:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE305:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB306:
 505              	.LBB301:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB298:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB295:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB292:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE292:
 518              	.LBE295:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
ARM GAS  /tmp/ccc9ZrJ3.s 			page 64


 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE298:
 527              	.LBE301:
 528              	.LBE306:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB307:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
 558              	.LBE307:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB308:
 562              	.LBB302:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 65


 563              		.loc 1 104 20 view .LVU184
 564              	.LBB299:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB296:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB293:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE293:
 575              	.LBE296:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE299:
 584              	.LBE302:
 585              	.LBE308:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
ARM GAS  /tmp/ccc9ZrJ3.s 			page 66


 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB309:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE309:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB310:
 612              	.LBB303:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB300:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB297:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB294:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE294:
 625              	.LBE297:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE300:
 634              	.LBE303:
 635              	.LBE310:
 610:src/keys.c    **** 
 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
ARM GAS  /tmp/ccc9ZrJ3.s 			page 67


 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 68


 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2965:src/keys.c    **** 
2966:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2966 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2966 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2966 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2967:src/keys.c    **** 	do {
 717              		.loc 1 2967 2 is_stmt 1 view .LVU239
2968:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2968 3 view .LVU240
2969:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2969 4 view .LVU241
 720              		.loc 1 2969 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2970:src/keys.c    **** 			if (PcWrapped)
2971:src/keys.c    **** 				break;
2972:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2972 4 is_stmt 1 view .LVU243
2973:src/keys.c    **** 				return pc;
2974:src/keys.c    **** 			}
2975:src/keys.c    **** 		}
2976:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2976 3 view .LVU244
 727              		.loc 1 2976 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
ARM GAS  /tmp/ccc9ZrJ3.s 			page 69


2970:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2970 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2976 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2977:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2977 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2969:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2969 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2970:src/keys.c    **** 				break;
 739              		.loc 1 2970 4 is_stmt 1 view .LVU250
2976:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2976 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2977 3 is_stmt 1 view .LVU252
2970:src/keys.c    **** 				break;
 744              		.loc 1 2970 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2972:src/keys.c    **** 				return pc;
 746              		.loc 1 2972 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2972:src/keys.c    **** 				return pc;
 750              		.loc 1 2972 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2978:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2979:src/keys.c    **** 	return pc;
2980:src/keys.c    **** }
 753              		.loc 1 2980 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2977:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2977 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2978:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2978 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2977:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2977 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2978:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2978 10 is_stmt 1 view .LVU260
2978:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2978 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 70


2978:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2978 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2980 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2980 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 704 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB311:
 706:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 706 3 view .LVU266
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 707 3 view .LVU267
 706:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 706 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 707 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 707 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 715:src/keys.c    **** #endif
 812              		.loc 1 715 7 is_stmt 1 view .LVU271
 715:src/keys.c    **** #endif
 813              		.loc 1 715 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 715:src/keys.c    **** #endif
 815              		.loc 1 715 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 725:src/keys.c    **** 		}
 818              		.loc 1 725 4 is_stmt 1 view .LVU274
ARM GAS  /tmp/ccc9ZrJ3.s 			page 71


 725:src/keys.c    **** 		}
 819              		.loc 1 725 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE311:
 729:src/keys.c    **** 
 825              		.loc 1 729 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB312:
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 708 4 is_stmt 1 view .LVU277
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 708 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 708 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 708 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 709:src/keys.c    **** 		}
 839              		.loc 1 709 4 is_stmt 1 view .LVU281
 709:src/keys.c    **** 		}
 840              		.loc 1 709 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 709:src/keys.c    **** 		}
 843              		.loc 1 709 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE312:
 851              		.cfi_endproc
 852              	.LFE64:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 552 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 72


 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 555 2 view .LVU285
 555:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 555 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 560:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 560 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 555 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 556 2 is_stmt 1 view .LVU289
 557:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 557 2 view .LVU290
 560:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 560 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 557 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 560 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 557 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 558 2 is_stmt 1 view .LVU295
 558:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 558 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 559 2 is_stmt 1 view .LVU297
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 2 view .LVU298
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 561 2 view .LVU299
 562:src/keys.c    **** }
 898              		.loc 1 562 2 view .LVU300
 563:src/keys.c    **** 
 899              		.loc 1 563 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE66:
 908              		.section	.text.reset_arg,"ax",%progbits
ARM GAS  /tmp/ccc9ZrJ3.s 			page 73


 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB34:
1892:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1892 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1893:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1893 2 view .LVU303
 923              	.LVL67:
 924              	.LBB313:
 925              	.LBI313:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 552 13 view .LVU304
 927              	.LBB314:
 553:src/keys.c    **** 		return;
 928              		.loc 1 553 2 view .LVU305
 929              	.LBE314:
 930              	.LBE313:
1892:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1892 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB316:
 937              	.LBB315:
 553:src/keys.c    **** 		return;
 938              		.loc 1 553 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 553:src/keys.c    **** 		return;
 941              		.loc 1 553 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 553:src/keys.c    **** 		return;
 946              		.loc 1 553 5 view .LVU309
 947              	.LBE315:
 948              	.LBE316:
1894:src/keys.c    **** }
 949              		.loc 1 1894 2 is_stmt 1 view .LVU310
1894:src/keys.c    **** }
 950              		.loc 1 1894 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1895:src/keys.c    **** 
 955              		.loc 1 1895 1 view .LVU312
ARM GAS  /tmp/ccc9ZrJ3.s 			page 74


 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE34:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB35:
1897:src/keys.c    ****    const unsigned int base = CmdBase;
 975              		.loc 1 1897 40 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1898:src/keys.c    ****    int r = RARG(base, val 
 979              		.loc 1 1898 4 view .LVU314
1897:src/keys.c    ****    const unsigned int base = CmdBase;
 980              		.loc 1 1897 40 is_stmt 0 view .LVU315
 981 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 982              		.cfi_def_cfa_offset 24
 983              		.cfi_offset 3, -24
 984              		.cfi_offset 4, -20
 985              		.cfi_offset 5, -16
 986              		.cfi_offset 6, -12
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
1898:src/keys.c    ****    int r = RARG(base, val 
 989              		.loc 1 1898 30 view .LVU316
 990 0002 234B     		ldr	r3, .L109
1899:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 991              		.loc 1 1899 12 view .LVU317
 992 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 993 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1898:src/keys.c    ****    int r = RARG(base, val 
 994              		.loc 1 1898 23 view .LVU318
 995 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 996              	.LVL71:
1899:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 997              		.loc 1 1899 4 is_stmt 1 view .LVU319
1899:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 998              		.loc 1 1899 12 is_stmt 0 view .LVU320
 999 000a EE07     		lsls	r6, r5, #31
1902:src/keys.c    **** 
 1000              		.loc 1 1902 34 view .LVU321
 1001 000c 214E     		ldr	r6, .L109+4
 1002 000e 3668     		ldr	r6, [r6]
1899:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1003              		.loc 1 1899 12 view .LVU322
 1004 0010 01F08003 		and	r3, r1, #128
ARM GAS  /tmp/ccc9ZrJ3.s 			page 75


1902:src/keys.c    **** 
 1005              		.loc 1 1902 32 view .LVU323
 1006 0014 96F8EA77 		ldrb	r7, [r6, #2026]	@ zero_extendqisi2
1899:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1899 12 view .LVU324
 1008 0018 0344     		add	r3, r3, r0
 1009 001a 02F12004 		add	r4, r2, #32
 1010 001e 48BF     		it	mi
 1011 0020 7033     		addmi	r3, r3, #112
 1012 0022 2402     		lsls	r4, r4, #8
1902:src/keys.c    **** 
 1013              		.loc 1 1902 79 view .LVU325
 1014 0024 3F07     		lsls	r7, r7, #28
1899:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1899 12 view .LVU326
 1016 0026 44EA0304 		orr	r4, r4, r3
 1017              	.LVL72:
1902:src/keys.c    **** 
 1018              		.loc 1 1902 4 is_stmt 1 view .LVU327
1902:src/keys.c    **** 
 1019              		.loc 1 1902 79 is_stmt 0 view .LVU328
 1020 002a 25D5     		bpl	.L92
1902:src/keys.c    **** 
 1021              		.loc 1 1902 79 discriminator 2 view .LVU329
 1022 002c 15F0400F 		tst	r5, #64
 1023 0030 0CBF     		ite	eq
 1024 0032 0425     		moveq	r5, #4
 1025 0034 0825     		movne	r5, #8
 1026              	.L87:
 1027              	.LVL73:
1904:src/keys.c    ****      /*
 1028              		.loc 1 1904 4 is_stmt 1 discriminator 6 view .LVU330
1904:src/keys.c    ****      /*
 1029              		.loc 1 1904 7 is_stmt 0 discriminator 6 view .LVU331
 1030 0036 0B06     		lsls	r3, r1, #24
 1031 0038 1AD4     		bmi	.L88
1920:src/keys.c    ****        if (C_LOCKED) {
 1032              		.loc 1 1920 6 is_stmt 1 view .LVU332
1920:src/keys.c    ****        if (C_LOCKED) {
 1033              		.loc 1 1920 23 is_stmt 0 view .LVU333
 1034 003a 174B     		ldr	r3, .L109+8
 1035 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1036 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1920:src/keys.c    ****        if (C_LOCKED) {
 1037              		.loc 1 1920 9 view .LVU334
 1038 0042 DF06     		lsls	r7, r3, #27
 1039 0044 10D5     		bpl	.L89
1920:src/keys.c    ****        if (C_LOCKED) {
 1040              		.loc 1 1920 55 discriminator 1 view .LVU335
 1041 0046 96F8AC37 		ldrb	r3, [r6, #1964]	@ zero_extendqisi2
 1042 004a 03F04103 		and	r3, r3, #65
1920:src/keys.c    ****        if (C_LOCKED) {
 1043              		.loc 1 1920 40 discriminator 1 view .LVU336
 1044 004e 412B     		cmp	r3, #65
 1045 0050 0CBF     		ite	eq
 1046 0052 0021     		moveq	r1, #0
 1047 0054 6221     		movne	r1, #98
ARM GAS  /tmp/ccc9ZrJ3.s 			page 76


1920:src/keys.c    ****        if (C_LOCKED) {
 1048              		.loc 1 1920 30 discriminator 1 view .LVU337
 1049 0056 8142     		cmp	r1, r0
 1050 0058 06D2     		bcs	.L89
1920:src/keys.c    ****        if (C_LOCKED) {
 1051              		.loc 1 1920 86 discriminator 6 view .LVU338
 1052 005a C107     		lsls	r1, r0, #31
 1053 005c 04D5     		bpl	.L89
1921:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1054              		.loc 1 1921 8 is_stmt 1 view .LVU339
1921:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1055              		.loc 1 1921 11 is_stmt 0 view .LVU340
 1056 005e 412B     		cmp	r3, #65
 1057 0060 11D0     		beq	.L107
 1058              	.LVL74:
 1059              	.L96:
1926:src/keys.c    ****        }
 1060              		.loc 1 1926 10 view .LVU341
 1061 0062 3324     		movs	r4, #51
 1062              	.LVL75:
1941:src/keys.c    **** 
 1063              		.loc 1 1941 2 view .LVU342
 1064 0064 2046     		mov	r0, r4
 1065              	.LVL76:
1941:src/keys.c    **** 
 1066              		.loc 1 1941 2 view .LVU343
 1067 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1068              	.LVL77:
 1069              	.L89:
1934:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1070              		.loc 1 1934 6 is_stmt 1 view .LVU344
1934:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1071              		.loc 1 1934 31 is_stmt 0 view .LVU345
 1072 0068 A2F12203 		sub	r3, r2, #34
1934:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1934 9 view .LVU346
 1074 006c 012B     		cmp	r3, #1
 1075 006e 05D9     		bls	.L108
 1076              	.LVL78:
 1077              	.L88:
1939:src/keys.c    ****    return r;
 1078              		.loc 1 1939 4 is_stmt 1 view .LVU347
 1079 0070 FFF7FEFF 		bl	reset_arg
 1080              	.LVL79:
1940:src/keys.c    ****  }
 1081              		.loc 1 1940 4 view .LVU348
 1082              	.L85:
1941:src/keys.c    **** 
 1083              		.loc 1 1941 2 is_stmt 0 view .LVU349
 1084 0074 2046     		mov	r0, r4
 1085 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1086              	.LVL80:
 1087              	.L92:
1902:src/keys.c    **** 
 1088              		.loc 1 1902 79 view .LVU350
 1089 0078 0425     		movs	r5, #4
 1090 007a DCE7     		b	.L87
ARM GAS  /tmp/ccc9ZrJ3.s 			page 77


 1091              	.LVL81:
 1092              	.L108:
1934:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1093              		.loc 1 1934 76 discriminator 1 view .LVU351
 1094 007c C5F16405 		rsb	r5, r5, #100
 1095              	.LVL82:
1934:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1934 55 discriminator 1 view .LVU352
 1097 0080 8542     		cmp	r5, r0
 1098 0082 F5D2     		bcs	.L88
 1099 0084 EDE7     		b	.L96
 1100              	.LVL83:
 1101              	.L107:
1922:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1102              		.loc 1 1922 3 is_stmt 1 view .LVU353
 1103 0086 1920     		movs	r0, #25
 1104              	.LVL84:
1922:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1105              		.loc 1 1922 3 is_stmt 0 view .LVU354
 1106 0088 FFF7FEFF 		bl	error_message
 1107              	.LVL85:
1923:src/keys.c    ****        }
 1108              		.loc 1 1923 3 is_stmt 1 view .LVU355
1923:src/keys.c    ****        }
 1109              		.loc 1 1923 10 is_stmt 0 view .LVU356
 1110 008c 3324     		movs	r4, #51
 1111              	.LVL86:
1923:src/keys.c    ****        }
 1112              		.loc 1 1923 10 view .LVU357
 1113 008e F1E7     		b	.L85
 1114              	.L110:
 1115              		.align	2
 1116              	.L109:
 1117 0090 00000000 		.word	StateWhileOn
 1118 0094 00000000 		.word	main_ram
 1119 0098 00000000 		.word	argcmds
 1120              		.cfi_endproc
 1121              	.LFE35:
 1123              		.section	.text.arg_digit,"ax",%progbits
 1124              		.align	1
 1125              		.p2align 2,,3
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	arg_digit:
 1132              	.LVL87:
 1133              	.LFB36:
1943:src/keys.c    **** 	int lim;
 1134              		.loc 1 1943 29 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
1944:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1138              		.loc 1 1944 2 view .LVU359
1946:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1139              		.loc 1 1946 2 view .LVU360
ARM GAS  /tmp/ccc9ZrJ3.s 			page 78


1943:src/keys.c    **** 	int lim;
 1140              		.loc 1 1943 29 is_stmt 0 view .LVU361
 1141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1142              		.cfi_def_cfa_offset 20
 1143              		.cfi_offset 4, -20
 1144              		.cfi_offset 5, -16
 1145              		.cfi_offset 6, -12
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
1947:src/keys.c    **** #else
 1148              		.loc 1 1947 29 view .LVU362
 1149 0002 3E4D     		ldr	r5, .L158
1943:src/keys.c    **** 	int lim;
 1150              		.loc 1 1943 29 view .LVU363
 1151 0004 83B0     		sub	sp, sp, #12
 1152              		.cfi_def_cfa_offset 32
1943:src/keys.c    **** 	int lim;
 1153              		.loc 1 1943 29 view .LVU364
 1154 0006 0446     		mov	r4, r0
1946:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1155              		.loc 1 1946 17 view .LVU365
 1156 0008 01A8     		add	r0, sp, #4
 1157              	.LVL88:
1946:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1158              		.loc 1 1946 17 view .LVU366
 1159 000a FFF7FEFF 		bl	get_dispmode_digs
 1160              	.LVL89:
1947:src/keys.c    **** #else
 1161              		.loc 1 1947 29 view .LVU367
 1162 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1163              	.LVL90:
1947:src/keys.c    **** #else
 1164              		.loc 1 1947 2 is_stmt 1 view .LVU368
 1165 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1947:src/keys.c    **** #else
 1166              		.loc 1 1947 130 is_stmt 0 view .LVU369
 1167 0012 11F0400C 		ands	ip, r1, #64
 1168 0016 01D0     		beq	.L114
1947:src/keys.c    **** #else
 1169              		.loc 1 1947 44 discriminator 2 view .LVU370
 1170 0018 502E     		cmp	r6, #80
 1171 001a 64D0     		beq	.L154
 1172              	.LVL91:
 1173              	.L114:
1951:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1174              		.loc 1 1951 2 is_stmt 1 discriminator 8 view .LVU371
1952:src/keys.c    **** 	
 1175              		.loc 1 1952 34 is_stmt 0 discriminator 8 view .LVU372
 1176 001c 384A     		ldr	r2, .L158+4
1951:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1177              		.loc 1 1951 33 discriminator 8 view .LVU373
 1178 001e 2B89     		ldrh	r3, [r5, #8]
1952:src/keys.c    **** 	
 1179              		.loc 1 1952 34 discriminator 8 view .LVU374
 1180 0020 02EB0612 		add	r2, r2, r6, lsl #4
1951:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1181              		.loc 1 1951 41 discriminator 8 view .LVU375
ARM GAS  /tmp/ccc9ZrJ3.s 			page 79


 1182 0024 03EB8303 		add	r3, r3, r3, lsl #2
1952:src/keys.c    **** 	
 1183              		.loc 1 1952 34 discriminator 8 view .LVU376
 1184 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1951:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1185              		.loc 1 1951 46 discriminator 8 view .LVU377
 1186 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1187              	.LVL92:
1952:src/keys.c    **** 	
 1188              		.loc 1 1952 2 is_stmt 1 discriminator 8 view .LVU378
1952:src/keys.c    **** 	
 1189              		.loc 1 1952 39 is_stmt 0 discriminator 8 view .LVU379
 1190 002e BB07     		lsls	r3, r7, #30
 1191 0030 32D4     		bmi	.L153
1952:src/keys.c    **** 	
 1192              		.loc 1 1952 39 discriminator 2 view .LVU380
 1193 0032 95F91530 		ldrsb	r3, [r5, #21]
 1194 0036 002B     		cmp	r3, #0
 1195 0038 2EDB     		blt	.L153
 1196              	.LVL93:
1954:src/keys.c    **** 		// Handle local registers and flags
 1197              		.loc 1 1954 2 is_stmt 1 view .LVU381
1954:src/keys.c    **** 		// Handle local registers and flags
 1198              		.loc 1 1954 5 is_stmt 0 view .LVU382
 1199 003a C907     		lsls	r1, r1, #31
 1200 003c 4BD5     		bpl	.L120
1956:src/keys.c    **** 		if (State2.runmode) {
 1201              		.loc 1 1956 3 is_stmt 1 view .LVU383
1956:src/keys.c    **** 		if (State2.runmode) {
 1202              		.loc 1 1956 7 is_stmt 0 view .LVU384
 1203 003e 0F23     		movs	r3, #15
 1204 0040 0193     		str	r3, [sp, #4]
1957:src/keys.c    **** 			if (LocalRegs == 0)
 1205              		.loc 1 1957 3 is_stmt 1 view .LVU385
1957:src/keys.c    **** 			if (LocalRegs == 0)
 1206              		.loc 1 1957 6 is_stmt 0 view .LVU386
 1207 0042 BCF1000F 		cmp	ip, #0
 1208 0046 05D0     		beq	.L123
1958:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1209              		.loc 1 1958 4 is_stmt 1 view .LVU387
1958:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1210              		.loc 1 1958 8 is_stmt 0 view .LVU388
 1211 0048 2E4B     		ldr	r3, .L158+8
 1212 004a 1B68     		ldr	r3, [r3]
1958:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1213              		.loc 1 1958 7 view .LVU389
 1214 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1215 0050 002B     		cmp	r3, #0
 1216 0052 3DD0     		beq	.L125
 1217              	.LVL94:
 1218              	.L123:
1968:src/keys.c    **** 	else {
 1219              		.loc 1 1968 65 view .LVU390
 1220 0054 0F20     		movs	r0, #15
 1221              	.L122:
1974:src/keys.c    **** 		return STATE_UNFINISHED;
 1222              		.loc 1 1974 2 is_stmt 1 view .LVU391
ARM GAS  /tmp/ccc9ZrJ3.s 			page 80


1974:src/keys.c    **** 		return STATE_UNFINISHED;
 1223              		.loc 1 1974 5 is_stmt 0 view .LVU392
 1224 0056 8442     		cmp	r4, r0
 1225 0058 3ADC     		bgt	.L125
 1226              	.L157:
1977:src/keys.c    **** 	++State2.numdigit;
 1227              		.loc 1 1977 2 is_stmt 1 view .LVU393
1978:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1228              		.loc 1 1978 2 is_stmt 0 view .LVU394
 1229 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1977:src/keys.c    **** 	++State2.numdigit;
 1230              		.loc 1 1977 16 view .LVU395
 1231 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1978:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1232              		.loc 1 1978 2 is_stmt 1 view .LVU396
 1233 005e 0137     		adds	r7, r7, #1
1979:src/keys.c    **** 		int result = arg_eval(val);
 1234              		.loc 1 1979 16 is_stmt 0 view .LVU397
 1235 0060 04EB8403 		add	r3, r4, r4, lsl #2
1978:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1236              		.loc 1 1978 2 view .LVU398
 1237 0064 FFB2     		uxtb	r7, r7
1979:src/keys.c    **** 		int result = arg_eval(val);
 1238              		.loc 1 1979 5 view .LVU399
 1239 0066 B0EB430F 		cmp	r0, r3, lsl #1
1978:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1240              		.loc 1 1978 2 view .LVU400
 1241 006a EF72     		strb	r7, [r5, #11]
1979:src/keys.c    **** 		int result = arg_eval(val);
 1242              		.loc 1 1979 2 is_stmt 1 view .LVU401
1979:src/keys.c    **** 		int result = arg_eval(val);
 1243              		.loc 1 1979 5 is_stmt 0 view .LVU402
 1244 006c 04DB     		blt	.L131
1979:src/keys.c    **** 		int result = arg_eval(val);
 1245              		.loc 1 1979 49 discriminator 1 view .LVU403
 1246 006e 3046     		mov	r0, r6
 1247 0070 FFF7FEFF 		bl	num_arg_digits
 1248              	.LVL95:
1979:src/keys.c    **** 		int result = arg_eval(val);
 1249              		.loc 1 1979 27 discriminator 1 view .LVU404
 1250 0074 8742     		cmp	r7, r0
 1251 0076 2BDB     		blt	.L125
 1252              	.L131:
 1253              	.LBB317:
1980:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1254              		.loc 1 1980 3 is_stmt 1 view .LVU405
1980:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1255              		.loc 1 1980 16 is_stmt 0 view .LVU406
 1256 0078 2046     		mov	r0, r4
 1257 007a FFF7FEFF 		bl	arg_eval
 1258              	.LVL96:
1981:src/keys.c    **** 			--State2.numdigit;
 1259              		.loc 1 1981 3 is_stmt 1 view .LVU407
1981:src/keys.c    **** 			--State2.numdigit;
 1260              		.loc 1 1981 6 is_stmt 0 view .LVU408
 1261 007e 3328     		cmp	r0, #51
 1262 0080 08D1     		bne	.L111
ARM GAS  /tmp/ccc9ZrJ3.s 			page 81


1982:src/keys.c    **** 			State2.digval /= 10;
 1263              		.loc 1 1982 4 is_stmt 1 view .LVU409
1983:src/keys.c    **** 		}
 1264              		.loc 1 1983 18 is_stmt 0 view .LVU410
 1265 0082 2B89     		ldrh	r3, [r5, #8]
 1266 0084 2049     		ldr	r1, .L158+12
1982:src/keys.c    **** 			State2.digval /= 10;
 1267              		.loc 1 1982 4 view .LVU411
 1268 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1983:src/keys.c    **** 		}
 1269              		.loc 1 1983 18 view .LVU412
 1270 0088 A1FB0313 		umull	r1, r3, r1, r3
 1271 008c DB08     		lsrs	r3, r3, #3
1982:src/keys.c    **** 			State2.digval /= 10;
 1272              		.loc 1 1982 4 view .LVU413
 1273 008e 013A     		subs	r2, r2, #1
1983:src/keys.c    **** 		}
 1274              		.loc 1 1983 18 view .LVU414
 1275 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1982:src/keys.c    **** 			State2.digval /= 10;
 1276              		.loc 1 1982 4 view .LVU415
 1277 0092 EA72     		strb	r2, [r5, #11]
1983:src/keys.c    **** 		}
 1278              		.loc 1 1983 4 is_stmt 1 view .LVU416
 1279              	.L111:
 1280              	.LBE317:
1988:src/keys.c    **** 
 1281              		.loc 1 1988 1 is_stmt 0 view .LVU417
 1282 0094 03B0     		add	sp, sp, #12
 1283              		.cfi_remember_state
 1284              		.cfi_def_cfa_offset 20
 1285              		@ sp needed
 1286 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1287              	.LVL97:
 1288              	.L153:
 1289              		.cfi_restore_state
1954:src/keys.c    **** 		// Handle local registers and flags
 1290              		.loc 1 1954 2 is_stmt 1 view .LVU418
1954:src/keys.c    **** 		// Handle local registers and flags
 1291              		.loc 1 1954 5 is_stmt 0 view .LVU419
 1292 0098 C807     		lsls	r0, r1, #31
 1293 009a 12D5     		bpl	.L155
1956:src/keys.c    **** 		if (State2.runmode) {
 1294              		.loc 1 1956 3 is_stmt 1 view .LVU420
1956:src/keys.c    **** 		if (State2.runmode) {
 1295              		.loc 1 1956 7 is_stmt 0 view .LVU421
 1296 009c 0F23     		movs	r3, #15
 1297 009e 0193     		str	r3, [sp, #4]
1957:src/keys.c    **** 			if (LocalRegs == 0)
 1298              		.loc 1 1957 3 is_stmt 1 view .LVU422
1957:src/keys.c    **** 			if (LocalRegs == 0)
 1299              		.loc 1 1957 6 is_stmt 0 view .LVU423
 1300 00a0 BCF1000F 		cmp	ip, #0
 1301 00a4 D6D0     		beq	.L123
1958:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1302              		.loc 1 1958 4 is_stmt 1 view .LVU424
1958:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
ARM GAS  /tmp/ccc9ZrJ3.s 			page 82


 1303              		.loc 1 1958 8 is_stmt 0 view .LVU425
 1304 00a6 174B     		ldr	r3, .L158+8
 1305 00a8 1B68     		ldr	r3, [r3]
1958:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1306              		.loc 1 1958 7 view .LVU426
 1307 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1308 00ae 7BB1     		cbz	r3, .L125
1961:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1309              		.loc 1 1961 5 is_stmt 1 view .LVU427
1961:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1310              		.loc 1 1961 11 is_stmt 0 view .LVU428
 1311 00b0 F0B2     		uxtb	r0, r6
 1312 00b2 FFF7FEFF 		bl	local_regs_rarg
 1313              	.LVL98:
1961:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1314              		.loc 1 1961 45 view .LVU429
 1315 00b6 0138     		subs	r0, r0, #1
1962:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1316              		.loc 1 1962 5 is_stmt 1 view .LVU430
1962:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1317              		.loc 1 1962 8 is_stmt 0 view .LVU431
 1318 00b8 0F28     		cmp	r0, #15
 1319 00ba 06DD     		ble	.L152
1963:src/keys.c    **** 			}
 1320              		.loc 1 1963 6 is_stmt 1 view .LVU432
1963:src/keys.c    **** 			}
 1321              		.loc 1 1963 10 is_stmt 0 view .LVU433
 1322 00bc 0F20     		movs	r0, #15
 1323 00be 0190     		str	r0, [sp, #4]
 1324 00c0 C9E7     		b	.L122
 1325              	.L155:
1968:src/keys.c    **** 	else {
 1326              		.loc 1 1968 3 is_stmt 1 view .LVU434
1968:src/keys.c    **** 	else {
 1327              		.loc 1 1968 65 is_stmt 0 view .LVU435
 1328 00c2 BCF1000F 		cmp	ip, #0
 1329 00c6 13D1     		bne	.L156
 1330 00c8 6320     		movs	r0, #99
 1331              	.LVL99:
 1332              	.L152:
1974:src/keys.c    **** 		return STATE_UNFINISHED;
 1333              		.loc 1 1974 5 view .LVU436
 1334 00ca 8442     		cmp	r4, r0
1972:src/keys.c    **** 	}
 1335              		.loc 1 1972 8 view .LVU437
 1336 00cc 0190     		str	r0, [sp, #4]
1974:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1974 2 is_stmt 1 view .LVU438
1974:src/keys.c    **** 		return STATE_UNFINISHED;
 1338              		.loc 1 1974 5 is_stmt 0 view .LVU439
 1339 00ce C4DD     		ble	.L157
 1340              	.L125:
1959:src/keys.c    **** 			if (is_reg) {
 1341              		.loc 1 1959 12 view .LVU440
 1342 00d0 3320     		movs	r0, #51
1988:src/keys.c    **** 
 1343              		.loc 1 1988 1 view .LVU441
ARM GAS  /tmp/ccc9ZrJ3.s 			page 83


 1344 00d2 03B0     		add	sp, sp, #12
 1345              		.cfi_remember_state
 1346              		.cfi_def_cfa_offset 20
 1347              		@ sp needed
 1348 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1349              	.LVL100:
 1350              	.L120:
 1351              		.cfi_restore_state
1967:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1352              		.loc 1 1967 7 is_stmt 1 view .LVU442
1970:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1353              		.loc 1 1970 3 view .LVU443
1970:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1354              		.loc 1 1970 9 is_stmt 0 view .LVU444
 1355 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1970:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1356              		.loc 1 1970 7 view .LVU445
 1357 00d8 0190     		str	r0, [sp, #4]
1971:src/keys.c    **** 			lim = RARG_IND - 1;
 1358              		.loc 1 1971 3 is_stmt 1 view .LVU446
1971:src/keys.c    **** 			lim = RARG_IND - 1;
 1359              		.loc 1 1971 6 is_stmt 0 view .LVU447
 1360 00da 7F28     		cmp	r0, #127
 1361 00dc BBDD     		ble	.L122
1971:src/keys.c    **** 			lim = RARG_IND - 1;
 1362              		.loc 1 1971 23 discriminator 1 view .LVU448
 1363 00de FB07     		lsls	r3, r7, #31
 1364 00e0 B9D5     		bpl	.L122
1972:src/keys.c    **** 	}
 1365              		.loc 1 1972 4 is_stmt 1 view .LVU449
1972:src/keys.c    **** 	}
 1366              		.loc 1 1972 8 is_stmt 0 view .LVU450
 1367 00e2 7F20     		movs	r0, #127
 1368 00e4 F1E7     		b	.L152
 1369              	.LVL101:
 1370              	.L154:
1947:src/keys.c    **** #else
 1371              		.loc 1 1947 93 discriminator 4 view .LVU451
 1372 00e6 0438     		subs	r0, r0, #4
 1373              	.LVL102:
1947:src/keys.c    **** #else
 1374              		.loc 1 1947 68 discriminator 4 view .LVU452
 1375 00e8 0128     		cmp	r0, #1
1947:src/keys.c    **** #else
 1376              		.loc 1 1947 130 discriminator 4 view .LVU453
 1377 00ea 98BF     		it	ls
 1378 00ec 8D26     		movls	r6, #141
 1379 00ee 95E7     		b	.L114
 1380              	.LVL103:
 1381              	.L156:
1968:src/keys.c    **** 	else {
 1382              		.loc 1 1968 26 discriminator 1 view .LVU454
 1383 00f0 F0B2     		uxtb	r0, r6
 1384 00f2 FFF7FEFF 		bl	global_regs_rarg
 1385              	.LVL104:
1968:src/keys.c    **** 	else {
 1386              		.loc 1 1968 61 discriminator 1 view .LVU455
ARM GAS  /tmp/ccc9ZrJ3.s 			page 84


 1387 00f6 0138     		subs	r0, r0, #1
 1388 00f8 E7E7     		b	.L152
 1389              	.L159:
 1390 00fa 00BF     		.align	2
 1391              	.L158:
 1392 00fc 00000000 		.word	StateWhileOn
 1393 0100 00000000 		.word	argcmds
 1394 0104 00000000 		.word	main_ram
 1395 0108 CDCCCCCC 		.word	-858993459
 1396              		.cfi_endproc
 1397              	.LFE36:
 1399              		.section	.text.process_arg_shuffle,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	process_arg_shuffle:
 1408              	.LVL105:
 1409              	.LFB41:
2055:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1410              		.loc 1 2055 39 is_stmt 1 view -0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1415              		.loc 1 2056 2 view .LVU457
2055:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1416              		.loc 1 2055 39 is_stmt 0 view .LVU458
 1417 0000 10B4     		push	{r4}
 1418              		.cfi_def_cfa_offset 4
 1419              		.cfi_offset 4, -4
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1420              		.loc 1 2056 31 view .LVU459
 1421 0002 0A4A     		ldr	r2, .L163
 1422 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1423              		.loc 1 2056 16 view .LVU460
 1424 0006 1189     		ldrh	r1, [r2, #8]
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1425              		.loc 1 2056 43 view .LVU461
 1426 0008 5C00     		lsls	r4, r3, #1
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1427              		.loc 1 2056 21 view .LVU462
 1428 000a A040     		lsls	r0, r0, r4
 1429              	.LVL106:
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1430              		.loc 1 2056 40 view .LVU463
 1431 000c 0133     		adds	r3, r3, #1
 1432 000e DBB2     		uxtb	r3, r3
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1433              		.loc 1 2056 16 view .LVU464
 1434 0010 0844     		add	r0, r0, r1
 1435 0012 80B2     		uxth	r0, r0
2057:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 85


 1436              		.loc 1 2057 5 view .LVU465
 1437 0014 032B     		cmp	r3, #3
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1438              		.loc 1 2056 40 view .LVU466
 1439 0016 D372     		strb	r3, [r2, #11]
2056:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2056 16 view .LVU467
 1441 0018 1081     		strh	r0, [r2, #8]	@ movhi
2057:src/keys.c    **** 		return STATE_UNFINISHED;
 1442              		.loc 1 2057 2 is_stmt 1 view .LVU468
2057:src/keys.c    **** 		return STATE_UNFINISHED;
 1443              		.loc 1 2057 5 is_stmt 0 view .LVU469
 1444 001a 03D9     		bls	.L161
2059:src/keys.c    **** }
 1445              		.loc 1 2059 2 is_stmt 1 view .LVU470
2060:src/keys.c    **** 
 1446              		.loc 1 2060 1 is_stmt 0 view .LVU471
 1447 001c 5DF8044B 		ldr	r4, [sp], #4
 1448              		.cfi_remember_state
 1449              		.cfi_restore 4
 1450              		.cfi_def_cfa_offset 0
2059:src/keys.c    **** }
 1451              		.loc 1 2059 9 view .LVU472
 1452 0020 FFF7FEBF 		b	arg_eval
 1453              	.LVL107:
 1454              	.L161:
 1455              		.cfi_restore_state
2060:src/keys.c    **** 
 1456              		.loc 1 2060 1 view .LVU473
 1457 0024 3320     		movs	r0, #51
 1458 0026 5DF8044B 		ldr	r4, [sp], #4
 1459              		.cfi_restore 4
 1460              		.cfi_def_cfa_offset 0
 1461 002a 7047     		bx	lr
 1462              	.L164:
 1463              		.align	2
 1464              	.L163:
 1465 002c 00000000 		.word	StateWhileOn
 1466              		.cfi_endproc
 1467              	.LFE41:
 1469              		.section	.text.process_h_shifted,"ax",%progbits
 1470              		.align	1
 1471              		.p2align 2,,3
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu fpv4-sp-d16
 1477              	process_h_shifted:
 1478              	.LVL108:
 1479              	.LFB21:
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1480              		.loc 1 1091 47 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
1094:src/keys.c    **** 		// Row 1
 1484              		.loc 1 1094 2 view .LVU475
ARM GAS  /tmp/ccc9ZrJ3.s 			page 86


1145:src/keys.c    **** 	int op = op_map[lc];
 1485              		.loc 1 1145 2 view .LVU476
 1486              	.LBB318:
 1487              	.LBB319:
 158:src/keys.c    **** }
 1488              		.loc 1 158 23 is_stmt 0 view .LVU477
 1489 0000 314A     		ldr	r2, .L196
 1490              	.LBE319:
 1491              	.LBE318:
1146:src/keys.c    **** 	reset_shift();
 1492              		.loc 1 1146 17 view .LVU478
 1493 0002 324B     		ldr	r3, .L196+4
 1494              	.LBB322:
 1495              	.LBB320:
 158:src/keys.c    **** }
 1496              		.loc 1 158 23 view .LVU479
 1497 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1498              	.LBE320:
 1499              	.LBE322:
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1500              		.loc 1 1091 47 view .LVU480
 1501 0006 70B5     		push	{r4, r5, r6, lr}
 1502              		.cfi_def_cfa_offset 16
 1503              		.cfi_offset 4, -16
 1504              		.cfi_offset 5, -12
 1505              		.cfi_offset 6, -8
 1506              		.cfi_offset 14, -4
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1507              		.loc 1 1091 47 view .LVU481
 1508 0008 0446     		mov	r4, r0
 1509              	.LVL109:
 1510              	.LBB323:
 1511              	.LBI318:
 146:src/keys.c    **** {
 1512              		.loc 1 146 12 is_stmt 1 view .LVU482
 1513              	.LBB321:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1514              		.loc 1 148 2 view .LVU483
 158:src/keys.c    **** }
 1515              		.loc 1 158 2 view .LVU484
 158:src/keys.c    **** }
 1516              		.loc 1 158 2 is_stmt 0 view .LVU485
 1517              	.LBE321:
 1518              	.LBE323:
1146:src/keys.c    **** 	reset_shift();
 1519              		.loc 1 1146 2 is_stmt 1 view .LVU486
 1520              	.LBB324:
 1521              	.LBB325:
 1522              	.LBB326:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1523              		.loc 1 106 16 is_stmt 0 view .LVU487
 1524 000a 314E     		ldr	r6, .L196+8
 1525              	.LBE326:
 1526              	.LBE325:
 1527              	.LBE324:
1146:src/keys.c    **** 	reset_shift();
 1528              		.loc 1 1146 17 view .LVU488
ARM GAS  /tmp/ccc9ZrJ3.s 			page 87


 1529 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1530              	.LVL110:
1147:src/keys.c    **** 
 1531              		.loc 1 1147 2 is_stmt 1 view .LVU489
 1532              	.LBB333:
 1533              	.LBI324:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1534              		.loc 1 114 13 view .LVU490
 1535              	.LBE333:
 115:src/keys.c    **** }
 1536              		.loc 1 115 2 view .LVU491
 1537              	.LBB334:
 1538              	.LBB331:
 1539              	.LBI325:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1540              		.loc 1 104 20 view .LVU492
 1541              	.LBB329:
 105:src/keys.c    **** 	State2.shifts = shift;
 1542              		.loc 1 105 2 view .LVU493
 1543              	.LBB327:
 1544              	.LBI327:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1545              		.loc 1 96 13 view .LVU494
 1546              	.LBB328:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1547              		.loc 1 97 2 view .LVU495
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1548              		.loc 1 97 18 is_stmt 0 view .LVU496
 1549 0010 FFF7FEFF 		bl	shift_down
 1550              	.LVL111:
  98:src/keys.c    **** }
 1551              		.loc 1 98 2 is_stmt 1 view .LVU497
 1552              	.LBE328:
 1553              	.LBE327:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1554              		.loc 1 106 2 view .LVU498
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1555              		.loc 1 106 16 is_stmt 0 view .LVU499
 1556 0014 0023     		movs	r3, #0
 1557              	.LBE329:
 1558              	.LBE331:
 1559              	.LBE334:
1150:src/keys.c    **** 	case K62:
 1560              		.loc 1 1150 2 view .LVU500
 1561 0016 262C     		cmp	r4, #38
 1562              	.LBB335:
 1563              	.LBB332:
 1564              	.LBB330:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1565              		.loc 1 106 16 view .LVU501
 1566 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1567              		.loc 1 108 2 is_stmt 1 view .LVU502
 1568              	.LVL112:
 108:src/keys.c    **** }
 1569              		.loc 1 108 2 is_stmt 0 view .LVU503
 1570              	.LBE330:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 88


 1571              	.LBE332:
 1572              	.LBE335:
1150:src/keys.c    **** 	case K62:
 1573              		.loc 1 1150 2 is_stmt 1 view .LVU504
 1574 001a 27D0     		beq	.L166
 1575 001c 272C     		cmp	r4, #39
 1576 001e 19D1     		bne	.L168
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1577              		.loc 1 1163 3 view .LVU505
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1578              		.loc 1 1163 7 is_stmt 0 view .LVU506
 1579 0020 FFF7FEFF 		bl	is_bad_cmdline
 1580              	.LVL113:
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1581              		.loc 1 1163 6 view .LVU507
 1582 0024 00BB     		cbnz	r0, .L178
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1583              		.loc 1 1165 3 is_stmt 1 view .LVU508
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1584              		.loc 1 1165 30 is_stmt 0 view .LVU509
 1585 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1586 0028 C3F38012 		ubfx	r2, r3, #6, #1
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1587              		.loc 1 1165 22 view .LVU510
 1588 002c C2F10102 		rsb	r2, r2, #1
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1589              		.loc 1 1165 18 view .LVU511
 1590 0030 62F38613 		bfi	r3, r2, #6, #1
 1591 0034 B375     		strb	r3, [r6, #22]
1166:src/keys.c    **** 		update_program_bounds(1);
 1592              		.loc 1 1166 3 is_stmt 1 view .LVU512
 1593 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1594              	.LVL114:
1167:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1595              		.loc 1 1167 3 view .LVU513
 1596 003a 0120     		movs	r0, #1
 1597 003c FFF7FEFF 		bl	update_program_bounds
 1598              	.LVL115:
1168:src/keys.c    **** 			set_pc(0);
 1599              		.loc 1 1168 3 view .LVU514
1168:src/keys.c    **** 			set_pc(0);
 1600              		.loc 1 1168 7 is_stmt 0 view .LVU515
 1601 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1168:src/keys.c    **** 			set_pc(0);
 1602              		.loc 1 1168 6 view .LVU516
 1603 0042 10F04000 		ands	r0, r0, #64
 1604 0046 05D1     		bne	.L168
1168:src/keys.c    **** 			set_pc(0);
 1605              		.loc 1 1168 27 discriminator 1 view .LVU517
 1606 0048 224B     		ldr	r3, .L196+12
 1607 004a 1B68     		ldr	r3, [r3]
1168:src/keys.c    **** 			set_pc(0);
 1608              		.loc 1 1168 24 discriminator 1 view .LVU518
 1609 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1610 0050 012A     		cmp	r2, #1
 1611 0052 32D0     		beq	.L192
 1612              	.L168:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 89


1176:src/keys.c    **** 		if (op & _RARG) {
 1613              		.loc 1 1176 2 is_stmt 1 view .LVU519
1176:src/keys.c    **** 		if (op & _RARG) {
 1614              		.loc 1 1176 5 is_stmt 0 view .LVU520
 1615 0054 332D     		cmp	r5, #51
 1616 0056 07D0     		beq	.L178
 1617              	.LVL116:
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1618              		.loc 1 1177 3 is_stmt 1 view .LVU521
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1619              		.loc 1 1177 6 is_stmt 0 view .LVU522
 1620 0058 2804     		lsls	r0, r5, #16
 1621 005a 14D5     		bpl	.L193
 1622              	.L176:
1178:src/keys.c    **** 			op = STATE_UNFINISHED;
 1623              		.loc 1 1178 4 is_stmt 1 view .LVU523
 1624              	.LVL117:
 1625              	.LBB336:
 1626              	.LBI336:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1627              		.loc 1 552 13 view .LVU524
 1628              	.LBB337:
 553:src/keys.c    **** 		return;
 1629              		.loc 1 553 2 view .LVU525
 553:src/keys.c    **** 		return;
 1630              		.loc 1 553 6 is_stmt 0 view .LVU526
 1631 005c FFF7FEFF 		bl	is_bad_cmdline
 1632              	.LVL118:
 553:src/keys.c    **** 		return;
 1633              		.loc 1 553 5 view .LVU527
 1634 0060 10B9     		cbnz	r0, .L178
 1635 0062 E8B2     		uxtb	r0, r5
 1636 0064 FFF7FEFF 		bl	init_arg.part.0
 1637              	.LVL119:
 1638              	.L178:
 553:src/keys.c    **** 		return;
 1639              		.loc 1 553 5 view .LVU528
 1640              	.LBE337:
 1641              	.LBE336:
1182:src/keys.c    **** #undef _RARG
 1642              		.loc 1 1182 2 is_stmt 1 view .LVU529
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1643              		.loc 1 1091 47 is_stmt 0 view .LVU530
 1644 0068 3320     		movs	r0, #51
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1645              		.loc 1 1185 1 view .LVU531
 1646 006a 70BD     		pop	{r4, r5, r6, pc}
 1647              	.LVL120:
 1648              	.L166:
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1649              		.loc 1 1152 3 is_stmt 1 view .LVU532
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1650              		.loc 1 1152 7 is_stmt 0 view .LVU533
 1651 006c 194B     		ldr	r3, .L196+12
 1652 006e 1B68     		ldr	r3, [r3]
 1653 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 90


 1654              		.loc 1 1152 6 view .LVU534
 1655 0074 D607     		lsls	r6, r2, #31
 1656 0076 0FD4     		bmi	.L194
1158:src/keys.c    **** #endif
 1657              		.loc 1 1158 4 is_stmt 1 view .LVU535
1158:src/keys.c    **** #endif
 1658              		.loc 1 1158 8 is_stmt 0 view .LVU536
 1659 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1158:src/keys.c    **** #endif
 1660              		.loc 1 1158 7 view .LVU537
 1661 007c 9C06     		lsls	r4, r3, #26
 1662 007e 14D5     		bpl	.L195
 1663 0080 40F24F10 		movw	r0, #335
 1664              	.LVL121:
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1665              		.loc 1 1185 1 view .LVU538
 1666 0084 70BD     		pop	{r4, r5, r6, pc}
 1667              	.L193:
 1668              	.LVL122:
1182:src/keys.c    **** #undef _RARG
 1669              		.loc 1 1182 2 is_stmt 1 view .LVU539
1182:src/keys.c    **** #undef _RARG
 1670              		.loc 1 1182 9 is_stmt 0 view .LVU540
 1671 0086 134B     		ldr	r3, .L196+12
 1672 0088 1B68     		ldr	r3, [r3]
 1673 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1182:src/keys.c    **** #undef _RARG
 1674              		.loc 1 1182 57 view .LVU541
 1675 008e D907     		lsls	r1, r3, #31
 1676 0090 10D4     		bmi	.L177
 1677              	.LVL123:
 1678              	.L180:
1182:src/keys.c    **** #undef _RARG
 1679              		.loc 1 1182 57 view .LVU542
 1680 0092 25F48040 		bic	r0, r5, #16384
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1681              		.loc 1 1185 1 view .LVU543
 1682 0096 70BD     		pop	{r4, r5, r6, pc}
 1683              	.LVL124:
 1684              	.L194:
1153:src/keys.c    **** 		else
 1685              		.loc 1 1153 4 is_stmt 1 view .LVU544
1153:src/keys.c    **** 		else
 1686              		.loc 1 1153 57 is_stmt 0 view .LVU545
 1687 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1688 009c 002B     		cmp	r3, #0
 1689 009e 40F25315 		movw	r5, #339
 1690              	.LVL125:
1153:src/keys.c    **** 		else
 1691              		.loc 1 1153 57 view .LVU546
 1692 00a2 A8BF     		it	ge
 1693 00a4 4FF4AA75 		movge	r5, #340
 1694 00a8 F3E7     		b	.L180
 1695              	.LVL126:
 1696              	.L195:
1176:src/keys.c    **** 		if (op & _RARG) {
 1697              		.loc 1 1176 2 is_stmt 1 view .LVU547
ARM GAS  /tmp/ccc9ZrJ3.s 			page 91


1176:src/keys.c    **** 		if (op & _RARG) {
 1698              		.loc 1 1176 5 is_stmt 0 view .LVU548
 1699 00aa 332D     		cmp	r5, #51
 1700 00ac DCD0     		beq	.L178
 1701              	.LVL127:
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1702              		.loc 1 1177 3 is_stmt 1 view .LVU549
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1703              		.loc 1 1177 6 is_stmt 0 view .LVU550
 1704 00ae 2B04     		lsls	r3, r5, #16
 1705 00b0 D4D4     		bmi	.L176
 1706 00b2 EEE7     		b	.L180
 1707              	.LVL128:
 1708              	.L177:
1182:src/keys.c    **** #undef _RARG
 1709              		.loc 1 1182 21 view .LVU551
 1710 00b4 6A04     		lsls	r2, r5, #17
 1711 00b6 D7D4     		bmi	.L178
 1712 00b8 EBE7     		b	.L180
 1713              	.L192:
1168:src/keys.c    **** 			set_pc(0);
 1714              		.loc 1 1168 43 discriminator 2 view .LVU552
 1715 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1716 00be 012B     		cmp	r3, #1
 1717 00c0 C8D1     		bne	.L168
1169:src/keys.c    **** 		break;
 1718              		.loc 1 1169 4 is_stmt 1 view .LVU553
 1719 00c2 FFF7FEFF 		bl	set_pc
 1720              	.LVL129:
 1721 00c6 C5E7     		b	.L168
 1722              	.L197:
 1723              		.align	2
 1724              	.L196:
 1725 00c8 00000000 		.word	.LANCHOR1
 1726 00cc 00000000 		.word	.LANCHOR0
 1727 00d0 00000000 		.word	StateWhileOn
 1728 00d4 00000000 		.word	main_ram
 1729              		.cfi_endproc
 1730              	.LFE21:
 1732              		.section	.text.intltr,"ax",%progbits
 1733              		.align	1
 1734              		.p2align 2,,3
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu fpv4-sp-d16
 1740              	intltr:
 1741              	.LVL130:
 1742              	.LFB18:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1743              		.loc 1 751 26 view -0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 752:src/keys.c    **** }
 1747              		.loc 1 752 2 view .LVU555
 752:src/keys.c    **** }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 92


 1748              		.loc 1 752 10 is_stmt 0 view .LVU556
 1749 0000 0B4B     		ldr	r3, .L207
 1750 0002 1B68     		ldr	r3, [r3]
 1751 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 752:src/keys.c    **** }
 1752              		.loc 1 752 22 view .LVU557
 1753 0008 13F00103 		ands	r3, r3, #1
 1754 000c 05D0     		beq	.L200
 752:src/keys.c    **** }
 1755              		.loc 1 752 26 discriminator 1 view .LVU558
 1756 000e 094B     		ldr	r3, .L207+4
 1757 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 752:src/keys.c    **** }
 1758              		.loc 1 752 22 discriminator 1 view .LVU559
 1759 0012 5B06     		lsls	r3, r3, #25
 1760 0014 03D4     		bmi	.L206
 752:src/keys.c    **** }
 1761              		.loc 1 752 22 view .LVU560
 1762 0016 0120     		movs	r0, #1
 1763              	.LVL131:
 753:src/keys.c    **** 
 1764              		.loc 1 753 1 view .LVU561
 1765 0018 7047     		bx	lr
 1766              	.LVL132:
 1767              	.L200:
 752:src/keys.c    **** }
 1768              		.loc 1 752 22 view .LVU562
 1769 001a 1846     		mov	r0, r3
 1770              	.LVL133:
 752:src/keys.c    **** }
 1771              		.loc 1 752 22 view .LVU563
 1772 001c 7047     		bx	lr
 1773              	.LVL134:
 1774              	.L206:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1775              		.loc 1 751 26 view .LVU564
 1776 001e 10B5     		push	{r4, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 1780 0020 0446     		mov	r4, r0
 1781              	.LVL135:
 1782              	.LBB340:
 1783              	.LBI340:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1784              		.loc 1 751 12 is_stmt 1 view .LVU565
 1785              	.LBB341:
 752:src/keys.c    **** }
 1786              		.loc 1 752 52 is_stmt 0 view .LVU566
 1787 0022 FFF7FEFF 		bl	int_base
 1788              	.LVL136:
 752:src/keys.c    **** }
 1789              		.loc 1 752 43 view .LVU567
 1790 0026 8442     		cmp	r4, r0
 1791 0028 ACBF     		ite	ge
 1792 002a 0020     		movge	r0, #0
 1793 002c 0120     		movlt	r0, #1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 93


 1794              	.LBE341:
 1795              	.LBE340:
 753:src/keys.c    **** 
 1796              		.loc 1 753 1 view .LVU568
 1797 002e 10BD     		pop	{r4, pc}
 1798              	.LVL137:
 1799              	.L208:
 753:src/keys.c    **** 
 1800              		.loc 1 753 1 view .LVU569
 1801              		.align	2
 1802              	.L207:
 1803 0030 00000000 		.word	main_ram
 1804 0034 00000000 		.word	StateWhileOn
 1805              		.cfi_endproc
 1806              	.LFE18:
 1808              		.section	.text.process_normal,"ax",%progbits
 1809              		.align	1
 1810              		.p2align 2,,3
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv4-sp-d16
 1816              	process_normal:
 1817              	.LVL138:
 1818              	.LFB19:
 759:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1819              		.loc 1 759 1 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 760:src/keys.c    **** 		// Row 1
 1823              		.loc 1 760 2 view .LVU571
 807:src/keys.c    **** 	int op = op_map[lc];
 1824              		.loc 1 807 2 view .LVU572
 1825              	.LBB342:
 1826              	.LBI342:
 146:src/keys.c    **** {
 1827              		.loc 1 146 12 view .LVU573
 1828              	.LBB343:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1829              		.loc 1 148 2 view .LVU574
 158:src/keys.c    **** }
 1830              		.loc 1 158 2 view .LVU575
 158:src/keys.c    **** }
 1831              		.loc 1 158 2 is_stmt 0 view .LVU576
 1832              	.LBE343:
 1833              	.LBE342:
 808:src/keys.c    **** 	
 1834              		.loc 1 808 2 is_stmt 1 view .LVU577
 813:src/keys.c    **** 	  switch (c) {
 1835              		.loc 1 813 6 is_stmt 0 view .LVU578
 1836 0000 984B     		ldr	r3, .L240
 1837              	.LBB346:
 1838              	.LBB344:
 158:src/keys.c    **** }
 1839              		.loc 1 158 23 view .LVU579
 1840 0002 994A     		ldr	r2, .L240+4
ARM GAS  /tmp/ccc9ZrJ3.s 			page 94


 1841              	.LBE344:
 1842              	.LBE346:
 813:src/keys.c    **** 	  switch (c) {
 1843              		.loc 1 813 6 view .LVU580
 1844 0004 1B68     		ldr	r3, [r3]
 1845              	.LBB347:
 1846              	.LBB345:
 158:src/keys.c    **** }
 1847              		.loc 1 158 23 view .LVU581
 1848 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1849              	.LBE345:
 1850              	.LBE347:
 808:src/keys.c    **** 	
 1851              		.loc 1 808 17 view .LVU582
 1852 0008 984A     		ldr	r2, .L240+8
 813:src/keys.c    **** 	  switch (c) {
 1853              		.loc 1 813 6 view .LVU583
 1854 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 759:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1855              		.loc 1 759 1 view .LVU584
 1856 000e 10B5     		push	{r4, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 4, -8
 1859              		.cfi_offset 14, -4
 808:src/keys.c    **** 	
 1860              		.loc 1 808 17 view .LVU585
 1861 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 813:src/keys.c    **** 	  switch (c) {
 1862              		.loc 1 813 5 view .LVU586
 1863 0014 DB07     		lsls	r3, r3, #31
 808:src/keys.c    **** 	
 1864              		.loc 1 808 6 view .LVU587
 1865 0016 2246     		mov	r2, r4
 1866              	.LVL139:
 812:src/keys.c    **** 	if (UState.intm) {
 1867              		.loc 1 812 2 is_stmt 1 view .LVU588
 813:src/keys.c    **** 	  switch (c) {
 1868              		.loc 1 813 2 view .LVU589
 813:src/keys.c    **** 	  switch (c) {
 1869              		.loc 1 813 5 is_stmt 0 view .LVU590
 1870 0018 42D4     		bmi	.L236
 844:src/keys.c    **** 	  }
 1871              		.loc 1 844 12 is_stmt 1 view .LVU591
 849:src/keys.c    **** #ifdef DM42
 1872              		.loc 1 849 2 view .LVU592
 1873 001a 2D28     		cmp	r0, #45
 1874 001c 3ED8     		bhi	.L209
 1875 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1876              	.L228:
 1877 0022 0801     		.2byte	(.L224-.L228)/2
 1878 0024 0E01     		.2byte	(.L225-.L228)/2
 1879 0026 3D00     		.2byte	(.L209-.L228)/2
 1880 0028 CF00     		.2byte	(.L223-.L228)/2
 1881 002a 3D00     		.2byte	(.L209-.L228)/2
 1882 002c 3D00     		.2byte	(.L209-.L228)/2
 1883 002e 3400     		.2byte	(.L218-.L228)/2
 1884 0030 3400     		.2byte	(.L218-.L228)/2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 95


 1885 0032 3D00     		.2byte	(.L209-.L228)/2
 1886 0034 3D00     		.2byte	(.L209-.L228)/2
 1887 0036 3D00     		.2byte	(.L209-.L228)/2
 1888 0038 3D00     		.2byte	(.L209-.L228)/2
 1889 003a 3D00     		.2byte	(.L209-.L228)/2
 1890 003c 3D00     		.2byte	(.L209-.L228)/2
 1891 003e 3D00     		.2byte	(.L209-.L228)/2
 1892 0040 3D00     		.2byte	(.L209-.L228)/2
 1893 0042 E900     		.2byte	(.L222-.L228)/2
 1894 0044 3D00     		.2byte	(.L209-.L228)/2
 1895 0046 3400     		.2byte	(.L218-.L228)/2
 1896 0048 3D00     		.2byte	(.L209-.L228)/2
 1897 004a 3D00     		.2byte	(.L209-.L228)/2
 1898 004c 3D00     		.2byte	(.L209-.L228)/2
 1899 004e 3D00     		.2byte	(.L209-.L228)/2
 1900 0050 3D00     		.2byte	(.L209-.L228)/2
 1901 0052 3D00     		.2byte	(.L209-.L228)/2
 1902 0054 3D00     		.2byte	(.L209-.L228)/2
 1903 0056 3D00     		.2byte	(.L209-.L228)/2
 1904 0058 3D00     		.2byte	(.L209-.L228)/2
 1905 005a 3D00     		.2byte	(.L209-.L228)/2
 1906 005c 3D00     		.2byte	(.L209-.L228)/2
 1907 005e 3D00     		.2byte	(.L209-.L228)/2
 1908 0060 3D00     		.2byte	(.L209-.L228)/2
 1909 0062 3D00     		.2byte	(.L209-.L228)/2
 1910 0064 3D00     		.2byte	(.L209-.L228)/2
 1911 0066 3D00     		.2byte	(.L209-.L228)/2
 1912 0068 3D00     		.2byte	(.L209-.L228)/2
 1913 006a 3D00     		.2byte	(.L209-.L228)/2
 1914 006c 3D00     		.2byte	(.L209-.L228)/2
 1915 006e 3D00     		.2byte	(.L209-.L228)/2
 1916 0070 3D00     		.2byte	(.L209-.L228)/2
 1917 0072 3D00     		.2byte	(.L209-.L228)/2
 1918 0074 3D00     		.2byte	(.L209-.L228)/2
 1919 0076 3D00     		.2byte	(.L209-.L228)/2
 1920 0078 3D00     		.2byte	(.L209-.L228)/2
 1921 007a F400     		.2byte	(.L221-.L228)/2
 1922 007c C700     		.2byte	(.L227-.L228)/2
 1923              		.p2align 1
 1924              	.L212:
 840:src/keys.c    **** 	    if (intltr(15)) {
 1925              		.loc 1 840 6 view .LVU593
 1926              	.LVL140:
 841:src/keys.c    **** 	      return op_int;
 1927              		.loc 1 841 6 view .LVU594
 841:src/keys.c    **** 	      return op_int;
 1928              		.loc 1 841 10 is_stmt 0 view .LVU595
 1929 007e 0F20     		movs	r0, #15
 1930              	.LVL141:
 841:src/keys.c    **** 	      return op_int;
 1931              		.loc 1 841 10 view .LVU596
 1932 0080 FFF7FEFF 		bl	intltr
 1933              	.LVL142:
 841:src/keys.c    **** 	      return op_int;
 1934              		.loc 1 841 9 view .LVU597
 1935 0084 0028     		cmp	r0, #0
 1936 0086 40F0EB80 		bne	.L237
ARM GAS  /tmp/ccc9ZrJ3.s 			page 96


 1937              	.LVL143:
 1938              	.L218:
 915:src/keys.c    **** 		break;
 1939              		.loc 1 915 3 is_stmt 1 view .LVU598
 1940              	.LBB348:
 1941              	.LBI348:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1942              		.loc 1 552 13 view .LVU599
 1943              	.LBB349:
 553:src/keys.c    **** 		return;
 1944              		.loc 1 553 2 view .LVU600
 553:src/keys.c    **** 		return;
 1945              		.loc 1 553 6 is_stmt 0 view .LVU601
 1946 008a FFF7FEFF 		bl	is_bad_cmdline
 1947              	.LVL144:
 553:src/keys.c    **** 		return;
 1948              		.loc 1 553 5 view .LVU602
 1949 008e 0028     		cmp	r0, #0
 1950 0090 40F09380 		bne	.L235
 1951 0094 E0B2     		uxtb	r0, r4
 1952 0096 FFF7FEFF 		bl	init_arg.part.0
 1953              	.LVL145:
 1954              	.LBE349:
 1955              	.LBE348:
 921:src/keys.c    **** }
 1956              		.loc 1 921 9 view .LVU603
 1957 009a 3322     		movs	r2, #51
 1958              	.LVL146:
 1959              	.L209:
 922:src/keys.c    **** 
 1960              		.loc 1 922 1 view .LVU604
 1961 009c 1046     		mov	r0, r2
 1962 009e 10BD     		pop	{r4, pc}
 1963              	.LVL147:
 1964              	.L236:
 814:src/keys.c    **** 	  case K00:
 1965              		.loc 1 814 4 is_stmt 1 view .LVU605
 1966 00a0 1228     		cmp	r0, #18
 1967 00a2 29D8     		bhi	.L211
 1968 00a4 01A3     		adr	r3, .L213
 1969 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1970 00aa 00BF     		.p2align 2
 1971              	.L213:
 1972 00ac E9010000 		.word	.L216+1
 1973 00b0 DB010000 		.word	.L215+1
 1974 00b4 F9000000 		.word	.L211+1
 1975 00b8 CD010000 		.word	.L214+1
 1976 00bc F9000000 		.word	.L211+1
 1977 00c0 F9000000 		.word	.L211+1
 1978 00c4 F9000000 		.word	.L211+1
 1979 00c8 F9000000 		.word	.L211+1
 1980 00cc F9000000 		.word	.L211+1
 1981 00d0 F9000000 		.word	.L211+1
 1982 00d4 F9000000 		.word	.L211+1
 1983 00d8 F9000000 		.word	.L211+1
 1984 00dc F9000000 		.word	.L211+1
 1985 00e0 F9000000 		.word	.L211+1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 97


 1986 00e4 F9000000 		.word	.L211+1
 1987 00e8 F9000000 		.word	.L211+1
 1988 00ec F9000000 		.word	.L211+1
 1989 00f0 F9000000 		.word	.L211+1
 1990 00f4 7F000000 		.word	.L212+1
 1991              		.p2align 1
 1992              	.L211:
 844:src/keys.c    **** 	  }
 1993              		.loc 1 844 12 view .LVU606
 849:src/keys.c    **** #ifdef DM42
 1994              		.loc 1 849 2 view .LVU607
 1995 00f8 C31E     		subs	r3, r0, #3
 1996 00fa 2A2B     		cmp	r3, #42
 1997 00fc CED8     		bhi	.L209
 1998 00fe 01A1     		adr	r1, .L220
 1999 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2000              		.p2align 2
 2001              	.L220:
 2002 0104 C1010000 		.word	.L223+1
 2003 0108 9D000000 		.word	.L209+1
 2004 010c 9D000000 		.word	.L209+1
 2005 0110 8B000000 		.word	.L218+1
 2006 0114 8B000000 		.word	.L218+1
 2007 0118 9D000000 		.word	.L209+1
 2008 011c 9D000000 		.word	.L209+1
 2009 0120 9D000000 		.word	.L209+1
 2010 0124 9D000000 		.word	.L209+1
 2011 0128 9D000000 		.word	.L209+1
 2012 012c 9D000000 		.word	.L209+1
 2013 0130 9D000000 		.word	.L209+1
 2014 0134 9D000000 		.word	.L209+1
 2015 0138 F5010000 		.word	.L222+1
 2016 013c 9D000000 		.word	.L209+1
 2017 0140 8B000000 		.word	.L218+1
 2018 0144 9D000000 		.word	.L209+1
 2019 0148 9D000000 		.word	.L209+1
 2020 014c 9D000000 		.word	.L209+1
 2021 0150 9D000000 		.word	.L209+1
 2022 0154 9D000000 		.word	.L209+1
 2023 0158 9D000000 		.word	.L209+1
 2024 015c 9D000000 		.word	.L209+1
 2025 0160 9D000000 		.word	.L209+1
 2026 0164 9D000000 		.word	.L209+1
 2027 0168 9D000000 		.word	.L209+1
 2028 016c 9D000000 		.word	.L209+1
 2029 0170 9D000000 		.word	.L209+1
 2030 0174 9D000000 		.word	.L209+1
 2031 0178 9D000000 		.word	.L209+1
 2032 017c 9D000000 		.word	.L209+1
 2033 0180 9D000000 		.word	.L209+1
 2034 0184 9D000000 		.word	.L209+1
 2035 0188 9D000000 		.word	.L209+1
 2036 018c 9D000000 		.word	.L209+1
 2037 0190 9D000000 		.word	.L209+1
 2038 0194 9D000000 		.word	.L209+1
 2039 0198 9D000000 		.word	.L209+1
 2040 019c 9D000000 		.word	.L209+1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 98


 2041 01a0 9D000000 		.word	.L209+1
 2042 01a4 9D000000 		.word	.L209+1
 2043 01a8 0B020000 		.word	.L221+1
 2044 01ac BB010000 		.word	.L235+1
 2045              		.p2align 1
 2046              	.L227:
 897:src/keys.c    **** #else
 2047              		.loc 1 897 4 view .LVU608
 897:src/keys.c    **** #else
 2048              		.loc 1 897 17 is_stmt 0 view .LVU609
 2049 01b0 2F4A     		ldr	r2, .L240+12
 2050              	.LVL148:
 897:src/keys.c    **** #else
 2051              		.loc 1 897 17 view .LVU610
 2052 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2053 01b4 43F00203 		orr	r3, r3, #2
 2054 01b8 5375     		strb	r3, [r2, #21]
 2055              	.LVL149:
 2056              	.L235:
 903:src/keys.c    **** 
 2057              		.loc 1 903 4 is_stmt 1 view .LVU611
 921:src/keys.c    **** }
 2058              		.loc 1 921 9 is_stmt 0 view .LVU612
 2059 01ba 3322     		movs	r2, #51
 922:src/keys.c    **** 
 2060              		.loc 1 922 1 view .LVU613
 2061 01bc 1046     		mov	r0, r2
 2062 01be 10BD     		pop	{r4, pc}
 2063              	.LVL150:
 2064              	.L223:
 856:src/keys.c    **** #else
 2065              		.loc 1 856 3 is_stmt 1 view .LVU614
 856:src/keys.c    **** #else
 2066              		.loc 1 856 10 is_stmt 0 view .LVU615
 2067 01c0 2146     		mov	r1, r4
 2068 01c2 0220     		movs	r0, #2
 922:src/keys.c    **** 
 2069              		.loc 1 922 1 view .LVU616
 2070 01c4 BDE81040 		pop	{r4, lr}
 2071              		.cfi_remember_state
 2072              		.cfi_restore 14
 2073              		.cfi_restore 4
 2074              		.cfi_def_cfa_offset 0
 2075              	.LVL151:
 856:src/keys.c    **** #else
 2076              		.loc 1 856 10 view .LVU617
 2077 01c8 FFF7FEBF 		b	check_f_key
 2078              	.LVL152:
 2079              	.L214:
 2080              		.cfi_restore_state
 832:src/keys.c    **** 	    if (intltr(12)) {
 2081              		.loc 1 832 6 is_stmt 1 view .LVU618
 833:src/keys.c    **** 	      return op_int;
 2082              		.loc 1 833 6 view .LVU619
 833:src/keys.c    **** 	      return op_int;
 2083              		.loc 1 833 10 is_stmt 0 view .LVU620
 2084 01cc 0C20     		movs	r0, #12
ARM GAS  /tmp/ccc9ZrJ3.s 			page 99


 2085              	.LVL153:
 833:src/keys.c    **** 	      return op_int;
 2086              		.loc 1 833 10 view .LVU621
 2087 01ce FFF7FEFF 		bl	intltr
 2088              	.LVL154:
 833:src/keys.c    **** 	      return op_int;
 2089              		.loc 1 833 9 view .LVU622
 2090 01d2 0028     		cmp	r0, #0
 2091 01d4 F4D0     		beq	.L223
 834:src/keys.c    **** 	    }
 2092              		.loc 1 834 15 view .LVU623
 2093 01d6 1122     		movs	r2, #17
 2094 01d8 60E7     		b	.L209
 2095              	.LVL155:
 2096              	.L215:
 824:src/keys.c    **** 	    if (intltr(11)) {
 2097              		.loc 1 824 6 is_stmt 1 view .LVU624
 825:src/keys.c    **** 	      return op;
 2098              		.loc 1 825 6 view .LVU625
 825:src/keys.c    **** 	      return op;
 2099              		.loc 1 825 10 is_stmt 0 view .LVU626
 2100 01da 0B20     		movs	r0, #11
 2101              	.LVL156:
 825:src/keys.c    **** 	      return op;
 2102              		.loc 1 825 10 view .LVU627
 2103 01dc FFF7FEFF 		bl	intltr
 2104              	.LVL157:
 825:src/keys.c    **** 	      return op;
 2105              		.loc 1 825 9 view .LVU628
 2106 01e0 0028     		cmp	r0, #0
 2107 01e2 37D0     		beq	.L238
 826:src/keys.c    **** 	    }
 2108              		.loc 1 826 15 view .LVU629
 2109 01e4 1022     		movs	r2, #16
 2110 01e6 59E7     		b	.L209
 2111              	.LVL158:
 2112              	.L216:
 816:src/keys.c    **** 	    if (intltr(10)) {
 2113              		.loc 1 816 6 is_stmt 1 view .LVU630
 817:src/keys.c    **** 	      return op;
 2114              		.loc 1 817 6 view .LVU631
 817:src/keys.c    **** 	      return op;
 2115              		.loc 1 817 10 is_stmt 0 view .LVU632
 2116 01e8 0A20     		movs	r0, #10
 2117              	.LVL159:
 817:src/keys.c    **** 	      return op;
 2118              		.loc 1 817 10 view .LVU633
 2119 01ea FFF7FEFF 		bl	intltr
 2120              	.LVL160:
 817:src/keys.c    **** 	      return op;
 2121              		.loc 1 817 9 view .LVU634
 2122 01ee 60B3     		cbz	r0, .L239
 818:src/keys.c    **** 	    }
 2123              		.loc 1 818 15 view .LVU635
 2124 01f0 0F22     		movs	r2, #15
 2125 01f2 53E7     		b	.L209
 2126              	.LVL161:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 100


 2127              	.L222:
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2128              		.loc 1 906 3 is_stmt 1 view .LVU636
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2129              		.loc 1 906 7 is_stmt 0 view .LVU637
 2130 01f4 1E4B     		ldr	r3, .L240+12
 2131 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2132              	.LVL162:
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2133              		.loc 1 906 6 view .LVU638
 2134 01f8 9106     		lsls	r1, r2, #26
 2135 01fa DED4     		bmi	.L235
 908:src/keys.c    **** 			return op;
 2136              		.loc 1 908 3 is_stmt 1 view .LVU639
 908:src/keys.c    **** 			return op;
 2137              		.loc 1 908 7 is_stmt 0 view .LVU640
 2138 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 910:src/keys.c    **** 
 2139              		.loc 1 910 10 view .LVU641
 2140 01fe 13F0400F 		tst	r3, #64
 2141 0202 14BF     		ite	ne
 2142 0204 2246     		movne	r2, r4
 2143 0206 3022     		moveq	r2, #48
 2144 0208 48E7     		b	.L209
 2145              	.LVL163:
 2146              	.L221:
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 880 3 is_stmt 1 view .LVU642
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 880 7 is_stmt 0 view .LVU643
 2149 020a FFF7FEFF 		bl	is_bad_cmdline
 2150              	.LVL164:
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 880 6 view .LVU644
 2152 020e 0028     		cmp	r0, #0
 2153 0210 D3D1     		bne	.L235
 882:src/keys.c    **** 		State2.arrow = 1;
 2154              		.loc 1 882 3 is_stmt 1 view .LVU645
 2155 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2156              	.LVL165:
 883:src/keys.c    **** #ifdef DM42
 2157              		.loc 1 883 3 view .LVU646
 883:src/keys.c    **** #ifdef DM42
 2158              		.loc 1 883 16 is_stmt 0 view .LVU647
 2159 0216 164A     		ldr	r2, .L240+12
 2160 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2161 021a 43F00403 		orr	r3, r3, #4
 2162 021e 5375     		strb	r3, [r2, #21]
 885:src/keys.c    **** 		display_current_menu ();
 2163              		.loc 1 885 3 is_stmt 1 view .LVU648
 2164 0220 0920     		movs	r0, #9
 2165 0222 FFF7FEFF 		bl	set_menu
 2166              	.LVL166:
 886:src/keys.c    **** 		lcd_refresh ();
 2167              		.loc 1 886 3 view .LVU649
 2168 0226 FFF7FEFF 		bl	display_current_menu
 2169              	.LVL167:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 101


 887:src/keys.c    **** #else
 2170              		.loc 1 887 3 view .LVU650
 2171 022a 124B     		ldr	r3, .L240+16
 2172 022c 9847     		blx	r3
 2173              	.LVL168:
 891:src/keys.c    **** 
 2174              		.loc 1 891 3 view .LVU651
 921:src/keys.c    **** }
 2175              		.loc 1 921 9 is_stmt 0 view .LVU652
 2176 022e 3322     		movs	r2, #51
 891:src/keys.c    **** 
 2177              		.loc 1 891 3 view .LVU653
 2178 0230 34E7     		b	.L209
 2179              	.LVL169:
 2180              	.L224:
 852:src/keys.c    **** 	case K01:
 2181              		.loc 1 852 3 is_stmt 1 view .LVU654
 852:src/keys.c    **** 	case K01:
 2182              		.loc 1 852 10 is_stmt 0 view .LVU655
 2183 0232 2146     		mov	r1, r4
 2184 0234 0020     		movs	r0, #0
 2185              	.LVL170:
 922:src/keys.c    **** 
 2186              		.loc 1 922 1 view .LVU656
 2187 0236 BDE81040 		pop	{r4, lr}
 2188              		.cfi_remember_state
 2189              		.cfi_restore 14
 2190              		.cfi_restore 4
 2191              		.cfi_def_cfa_offset 0
 852:src/keys.c    **** 	case K01:
 2192              		.loc 1 852 10 view .LVU657
 2193 023a FFF7FEBF 		b	check_f_key
 2194              	.LVL171:
 2195              	.L225:
 2196              		.cfi_restore_state
 854:src/keys.c    **** 	case K03:
 2197              		.loc 1 854 3 is_stmt 1 view .LVU658
 854:src/keys.c    **** 	case K03:
 2198              		.loc 1 854 10 is_stmt 0 view .LVU659
 2199 023e 2146     		mov	r1, r4
 2200 0240 0120     		movs	r0, #1
 2201              	.LVL172:
 922:src/keys.c    **** 
 2202              		.loc 1 922 1 view .LVU660
 2203 0242 BDE81040 		pop	{r4, lr}
 2204              		.cfi_remember_state
 2205              		.cfi_restore 14
 2206              		.cfi_restore 4
 2207              		.cfi_def_cfa_offset 0
 854:src/keys.c    **** 	case K03:
 2208              		.loc 1 854 10 view .LVU661
 2209 0246 FFF7FEBF 		b	check_f_key
 2210              	.LVL173:
 2211              	.L239:
 2212              		.cfi_restore_state
 821:src/keys.c    **** 	    }
 2213              		.loc 1 821 8 is_stmt 1 view .LVU662
ARM GAS  /tmp/ccc9ZrJ3.s 			page 102


 922:src/keys.c    **** 
 2214              		.loc 1 922 1 is_stmt 0 view .LVU663
 2215 024a BDE81040 		pop	{r4, lr}
 2216              		.cfi_remember_state
 2217              		.cfi_restore 14
 2218              		.cfi_restore 4
 2219              		.cfi_def_cfa_offset 0
 821:src/keys.c    **** 	    }
 2220              		.loc 1 821 15 view .LVU664
 2221 024e 0F21     		movs	r1, #15
 2222 0250 FFF7FEBF 		b	check_f_key
 2223              	.LVL174:
 2224              	.L238:
 2225              		.cfi_restore_state
 829:src/keys.c    **** 	    }
 2226              		.loc 1 829 8 is_stmt 1 view .LVU665
 922:src/keys.c    **** 
 2227              		.loc 1 922 1 is_stmt 0 view .LVU666
 2228 0254 BDE81040 		pop	{r4, lr}
 2229              		.cfi_remember_state
 2230              		.cfi_restore 14
 2231              		.cfi_restore 4
 2232              		.cfi_def_cfa_offset 0
 829:src/keys.c    **** 	    }
 2233              		.loc 1 829 15 view .LVU667
 2234 0258 1021     		movs	r1, #16
 2235 025a 0120     		movs	r0, #1
 2236 025c FFF7FEBF 		b	check_f_key
 2237              	.LVL175:
 2238              	.L237:
 2239              		.cfi_restore_state
 842:src/keys.c    **** 	    }
 2240              		.loc 1 842 15 view .LVU668
 2241 0260 1422     		movs	r2, #20
 2242 0262 1BE7     		b	.L209
 2243              	.L241:
 2244              		.align	2
 2245              	.L240:
 2246 0264 00000000 		.word	main_ram
 2247 0268 00000000 		.word	.LANCHOR1
 2248 026c 00000000 		.word	.LANCHOR2
 2249 0270 00000000 		.word	StateWhileOn
 2250 0274 31020008 		.word	134218289
 2251              		.cfi_endproc
 2252              	.LFE19:
 2254              		.section	.text.process_fg_shifted,"ax",%progbits
 2255              		.align	1
 2256              		.p2align 2,,3
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2260              		.fpu fpv4-sp-d16
 2262              	process_fg_shifted:
 2263              	.LVL176:
 2264              	.LFB20:
 928:src/keys.c    **** 
 2265              		.loc 1 928 48 is_stmt 1 view -0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 103


 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 931:src/keys.c    **** 		// Row 1
 2269              		.loc 1 931 2 view .LVU670
 982:src/keys.c    **** 		STATE_UNFINISHED,
 2270              		.loc 1 982 2 view .LVU671
 989:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2271              		.loc 1 989 2 view .LVU672
 2272              	.LBB350:
 2273              	.LBI350:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2274              		.loc 1 114 13 view .LVU673
 2275              	.LBE350:
 115:src/keys.c    **** }
 2276              		.loc 1 115 2 view .LVU674
 2277              	.LBB367:
 2278              	.LBB351:
 2279              	.LBI351:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2280              		.loc 1 104 20 view .LVU675
 2281              	.LBB352:
 105:src/keys.c    **** 	State2.shifts = shift;
 2282              		.loc 1 105 2 view .LVU676
 2283              	.LBB353:
 2284              	.LBI353:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2285              		.loc 1 96 13 view .LVU677
 2286              	.LBB354:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2287              		.loc 1 97 2 view .LVU678
 2288              	.LBE354:
 2289              	.LBE353:
 2290              	.LBE352:
 2291              	.LBE351:
 2292              	.LBE367:
 928:src/keys.c    **** 
 2293              		.loc 1 928 48 is_stmt 0 view .LVU679
 2294 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2295              		.cfi_def_cfa_offset 24
 2296              		.cfi_offset 4, -24
 2297              		.cfi_offset 5, -20
 2298              		.cfi_offset 6, -16
 2299              		.cfi_offset 7, -12
 2300              		.cfi_offset 8, -8
 2301              		.cfi_offset 14, -4
 928:src/keys.c    **** 
 2302              		.loc 1 928 48 view .LVU680
 2303 0004 0446     		mov	r4, r0
 2304              	.LBB368:
 2305              	.LBB363:
 2306              	.LBB359:
 2307              	.LBB357:
 2308              	.LBB355:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2309              		.loc 1 97 18 view .LVU681
 2310 0006 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccc9ZrJ3.s 			page 104


 2311              	.LVL177:
  98:src/keys.c    **** }
 2312              		.loc 1 98 2 is_stmt 1 view .LVU682
  98:src/keys.c    **** }
 2313              		.loc 1 98 52 is_stmt 0 view .LVU683
 2314 000a 0028     		cmp	r0, #0
 2315 000c 72D0     		beq	.L289
 2316 000e DFF89482 		ldr	r8, .L303+16
 2317 0012 0546     		mov	r5, r0
 2318              	.L243:
 2319              	.LVL178:
  98:src/keys.c    **** }
 2320              		.loc 1 98 52 view .LVU684
 2321              	.LBE355:
 2322              	.LBE357:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2323              		.loc 1 106 2 is_stmt 1 view .LVU685
 2324              	.LBE359:
 2325              	.LBE363:
 2326              	.LBE368:
 2327              	.LBB369:
 2328              	.LBB370:
 158:src/keys.c    **** }
 2329              		.loc 1 158 23 is_stmt 0 view .LVU686
 2330 0014 9F4B     		ldr	r3, .L303
 2331              	.LBE370:
 2332              	.LBE369:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2333              		.loc 1 991 21 view .LVU687
 2334 0016 A049     		ldr	r1, .L303+4
 2335              	.LBB373:
 2336              	.LBB371:
 158:src/keys.c    **** }
 2337              		.loc 1 158 23 view .LVU688
 2338 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2339              	.LBE371:
 2340              	.LBE373:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2341              		.loc 1 991 21 view .LVU689
 2342 001a 4300     		lsls	r3, r0, #1
 2343 001c 022D     		cmp	r5, #2
 2344 001e 08BF     		it	eq
 2345 0020 0133     		addeq	r3, r3, #1
 2346              	.LBB374:
 2347              	.LBB364:
 2348              	.LBB360:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2349              		.loc 1 106 16 view .LVU690
 2350 0022 0022     		movs	r2, #0
 2351              	.LBE360:
 2352              	.LBE364:
 2353              	.LBE374:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2354              		.loc 1 991 21 view .LVU691
 2355 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2356              	.LBB375:
 2357              	.LBB365:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 105


 2358              	.LBB361:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2359              		.loc 1 106 16 view .LVU692
 2360 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2361              		.loc 1 108 2 is_stmt 1 view .LVU693
 2362              	.LVL179:
 108:src/keys.c    **** }
 2363              		.loc 1 108 2 is_stmt 0 view .LVU694
 2364              	.LBE361:
 2365              	.LBE365:
 2366              	.LBE375:
 990:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2367              		.loc 1 990 2 is_stmt 1 view .LVU695
 2368              	.LBB376:
 2369              	.LBI369:
 146:src/keys.c    **** {
 2370              		.loc 1 146 12 view .LVU696
 2371              	.LBB372:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2372              		.loc 1 148 2 view .LVU697
 158:src/keys.c    **** }
 2373              		.loc 1 158 2 view .LVU698
 158:src/keys.c    **** }
 2374              		.loc 1 158 2 is_stmt 0 view .LVU699
 2375              	.LBE372:
 2376              	.LBE376:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2377              		.loc 1 991 2 is_stmt 1 view .LVU700
 992:src/keys.c    **** 	if (no_int)
 2378              		.loc 1 992 2 view .LVU701
 2379 002c 06F47047 		and	r7, r6, #61440
 2380              	.LVL180:
 993:src/keys.c    **** 		op &= ~NO_INT;
 2381              		.loc 1 993 2 view .LVU702
 993:src/keys.c    **** 		op &= ~NO_INT;
 2382              		.loc 1 993 5 is_stmt 0 view .LVU703
 2383 0030 B7F5704F 		cmp	r7, #61440
 2384 0034 63D0     		beq	.L297
 996:src/keys.c    **** 	case K00:
 2385              		.loc 1 996 2 is_stmt 1 view .LVU704
 2386 0036 282C     		cmp	r4, #40
 2387 0038 34D8     		bhi	.L264
 2388 003a DFE804F0 		tbb	[pc, r4]
 2389              	.L265:
 2390 003e D3       		.byte	(.L255-.L265)/2
 2391 003f 39       		.byte	(.L253-.L265)/2
 2392 0040 33       		.byte	(.L264-.L265)/2
 2393 0041 39       		.byte	(.L253-.L265)/2
 2394 0042 33       		.byte	(.L264-.L265)/2
 2395 0043 33       		.byte	(.L264-.L265)/2
 2396 0044 33       		.byte	(.L264-.L265)/2
 2397 0045 33       		.byte	(.L264-.L265)/2
 2398 0046 33       		.byte	(.L264-.L265)/2
 2399 0047 33       		.byte	(.L264-.L265)/2
 2400 0048 33       		.byte	(.L264-.L265)/2
 2401 0049 33       		.byte	(.L264-.L265)/2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 106


 2402 004a 15       		.byte	(.L252-.L265)/2
 2403 004b 33       		.byte	(.L264-.L265)/2
 2404 004c 33       		.byte	(.L264-.L265)/2
 2405 004d 33       		.byte	(.L264-.L265)/2
 2406 004e 33       		.byte	(.L264-.L265)/2
 2407 004f 33       		.byte	(.L264-.L265)/2
 2408 0050 E0       		.byte	(.L251-.L265)/2
 2409 0051 B9       		.byte	(.L250-.L265)/2
 2410 0052 33       		.byte	(.L264-.L265)/2
 2411 0053 33       		.byte	(.L264-.L265)/2
 2412 0054 33       		.byte	(.L264-.L265)/2
 2413 0055 33       		.byte	(.L264-.L265)/2
 2414 0056 33       		.byte	(.L264-.L265)/2
 2415 0057 33       		.byte	(.L264-.L265)/2
 2416 0058 33       		.byte	(.L264-.L265)/2
 2417 0059 33       		.byte	(.L264-.L265)/2
 2418 005a 33       		.byte	(.L264-.L265)/2
 2419 005b 33       		.byte	(.L264-.L265)/2
 2420 005c 44       		.byte	(.L249-.L265)/2
 2421 005d CB       		.byte	(.L248-.L265)/2
 2422 005e 49       		.byte	(.L246-.L265)/2
 2423 005f 49       		.byte	(.L246-.L265)/2
 2424 0060 33       		.byte	(.L264-.L265)/2
 2425 0061 33       		.byte	(.L264-.L265)/2
 2426 0062 33       		.byte	(.L264-.L265)/2
 2427 0063 33       		.byte	(.L264-.L265)/2
 2428 0064 33       		.byte	(.L264-.L265)/2
 2429 0065 49       		.byte	(.L246-.L265)/2
 2430 0066 49       		.byte	(.L246-.L265)/2
 2431 0067 00       		.p2align 1
 2432              	.L252:
1029:src/keys.c    **** 			if (is_bad_cmdline())
 2433              		.loc 1 1029 3 view .LVU705
1029:src/keys.c    **** 			if (is_bad_cmdline())
 2434              		.loc 1 1029 6 is_stmt 0 view .LVU706
 2435 0068 012D     		cmp	r5, #1
 2436 006a 11D1     		bne	.L258
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2437              		.loc 1 1030 4 is_stmt 1 view .LVU707
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2438              		.loc 1 1030 8 is_stmt 0 view .LVU708
 2439 006c FFF7FEFF 		bl	is_bad_cmdline
 2440              	.LVL181:
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2441              		.loc 1 1030 7 view .LVU709
 2442 0070 0028     		cmp	r0, #0
 2443 0072 40F0B380 		bne	.L291
1032:src/keys.c    **** 			State2.alphas = 1;
 2444              		.loc 1 1032 4 is_stmt 1 view .LVU710
 2445 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2446              	.LVL182:
1033:src/keys.c    **** #ifdef DM42
 2447              		.loc 1 1033 4 view .LVU711
1033:src/keys.c    **** #ifdef DM42
 2448              		.loc 1 1033 18 is_stmt 0 view .LVU712
 2449 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1035:src/keys.c    **** 			display_current_menu();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 107


 2450              		.loc 1 1035 4 view .LVU713
 2451 007e 1020     		movs	r0, #16
1033:src/keys.c    **** #ifdef DM42
 2452              		.loc 1 1033 18 view .LVU714
 2453 0080 43F00803 		orr	r3, r3, #8
 2454 0084 88F81630 		strb	r3, [r8, #22]
1035:src/keys.c    **** 			display_current_menu();
 2455              		.loc 1 1035 4 is_stmt 1 view .LVU715
 2456 0088 FFF7FEFF 		bl	set_menu
 2457              	.LVL183:
1036:src/keys.c    **** #endif
 2458              		.loc 1 1036 4 view .LVU716
 2459 008c FFF7FEFF 		bl	display_current_menu
 2460              	.LVL184:
 2461              	.L258:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2462              		.loc 1 1081 2 view .LVU717
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2463              		.loc 1 1081 5 is_stmt 0 view .LVU718
 2464 0090 B7F5704F 		cmp	r7, #61440
 2465 0094 06D1     		bne	.L264
 2466              	.L245:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2467              		.loc 1 1081 13 discriminator 1 view .LVU719
 2468 0096 814B     		ldr	r3, .L303+8
 2469 0098 1B68     		ldr	r3, [r3]
 2470 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2471 009e DA07     		lsls	r2, r3, #31
 2472 00a0 00F19C80 		bmi	.L291
 2473              	.L264:
1084:src/keys.c    **** #undef NO_INT
 2474              		.loc 1 1084 2 is_stmt 1 view .LVU720
 2475              	.LVL185:
 2476              	.LBB377:
 2477              	.LBI377:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2478              		.loc 1 704 12 view .LVU721
 2479              	.LBB378:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2480              		.loc 1 705 2 view .LVU722
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2481              		.loc 1 705 6 is_stmt 0 view .LVU723
 2482 00a4 3312     		asrs	r3, r6, #8
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2483              		.loc 1 705 5 view .LVU724
 2484 00a6 012B     		cmp	r3, #1
 2485 00a8 1FD0     		beq	.L267
 2486              	.LVL186:
 2487              	.L242:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2488              		.loc 1 705 5 view .LVU725
 2489              	.LBE378:
 2490              	.LBE377:
1086:src/keys.c    **** 
 2491              		.loc 1 1086 1 view .LVU726
 2492 00aa 3046     		mov	r0, r6
 2493 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 108


 2494              	.LVL187:
 2495              	.L253:
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2496              		.loc 1 1018 4 is_stmt 1 view .LVU727
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2497              		.loc 1 1018 8 is_stmt 0 view .LVU728
 2498 00b0 7A4B     		ldr	r3, .L303+8
 2499 00b2 1B68     		ldr	r3, [r3]
 2500 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2501              		.loc 1 1018 7 view .LVU729
 2502 00b8 DB07     		lsls	r3, r3, #31
 2503 00ba 00F19980 		bmi	.L294
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2504              		.loc 1 1081 2 is_stmt 1 view .LVU730
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2505              		.loc 1 1081 5 is_stmt 0 view .LVU731
 2506 00be B7F5704F 		cmp	r7, #61440
 2507 00c2 EFD1     		bne	.L264
 2508 00c4 E7E7     		b	.L245
 2509              	.L249:
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2510              		.loc 1 1061 3 is_stmt 1 view .LVU732
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2511              		.loc 1 1061 18 is_stmt 0 view .LVU733
 2512 00c6 FFF7FEFF 		bl	shift_down
 2513              	.LVL188:
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2514              		.loc 1 1061 6 view .LVU734
 2515 00ca 0028     		cmp	r0, #0
 2516 00cc 40F0BA80 		bne	.L298
 2517              	.L246:
1070:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2518              		.loc 1 1070 3 is_stmt 1 view .LVU735
1070:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2519              		.loc 1 1070 6 is_stmt 0 view .LVU736
 2520 00d0 B6F59C7F 		cmp	r6, #312
 2521 00d4 40F0A580 		bne	.L299
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2522              		.loc 1 1081 2 is_stmt 1 view .LVU737
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2523              		.loc 1 1081 5 is_stmt 0 view .LVU738
 2524 00d8 B7F5704F 		cmp	r7, #61440
 2525 00dc 05D1     		bne	.L267
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2526              		.loc 1 1081 13 view .LVU739
 2527 00de 6F4B     		ldr	r3, .L303+8
 2528 00e0 1B68     		ldr	r3, [r3]
 2529 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2530 00e6 DB07     		lsls	r3, r3, #31
 2531 00e8 78D4     		bmi	.L291
 2532              	.LVL189:
 2533              	.L267:
 2534              	.LBB381:
 2535              	.LBB379:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2536              		.loc 1 1081 13 view .LVU740
ARM GAS  /tmp/ccc9ZrJ3.s 			page 109


 2537 00ea 3046     		mov	r0, r6
 2538              	.LBE379:
 2539              	.LBE381:
1086:src/keys.c    **** 
 2540              		.loc 1 1086 1 view .LVU741
 2541 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2542              		.cfi_remember_state
 2543              		.cfi_restore 14
 2544              		.cfi_restore 8
 2545              		.cfi_restore 7
 2546              		.cfi_restore 6
 2547              		.cfi_restore 5
 2548              		.cfi_restore 4
 2549              		.cfi_def_cfa_offset 0
 2550              	.LVL190:
 2551              	.LBB382:
 2552              	.LBB380:
1086:src/keys.c    **** 
 2553              		.loc 1 1086 1 view .LVU742
 2554 00f0 FFF7FEBF 		b	check_confirm.part.0
 2555              	.LVL191:
 2556              	.L289:
 2557              		.cfi_restore_state
1086:src/keys.c    **** 
 2558              		.loc 1 1086 1 view .LVU743
 2559              	.LBE380:
 2560              	.LBE382:
 2561              	.LBB383:
 2562              	.LBB366:
 2563              	.LBB362:
 2564              	.LBB358:
 2565              	.LBB356:
  98:src/keys.c    **** }
 2566              		.loc 1 98 52 view .LVU744
 2567 00f4 DFF8AC81 		ldr	r8, .L303+16
 2568 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2569 00fc 8AE7     		b	.L243
 2570              	.LVL192:
 2571              	.L297:
  98:src/keys.c    **** }
 2572              		.loc 1 98 52 view .LVU745
 2573              	.LBE356:
 2574              	.LBE358:
 2575              	.LBE362:
 2576              	.LBE366:
 2577              	.LBE383:
 994:src/keys.c    **** 
 2578              		.loc 1 994 3 is_stmt 1 view .LVU746
 994:src/keys.c    **** 
 2579              		.loc 1 994 6 is_stmt 0 view .LVU747
 2580 00fe 26F47046 		bic	r6, r6, #61440
 2581              	.LVL193:
 996:src/keys.c    **** 	case K00:
 2582              		.loc 1 996 2 is_stmt 1 view .LVU748
 2583 0102 282C     		cmp	r4, #40
 2584 0104 C7D8     		bhi	.L245
 2585 0106 01A3     		adr	r3, .L247
ARM GAS  /tmp/ccc9ZrJ3.s 			page 110


 2586 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2587              		.p2align 2
 2588              	.L247:
 2589 010c E5010000 		.word	.L255+1
 2590 0110 B1000000 		.word	.L253+1
 2591 0114 97000000 		.word	.L245+1
 2592 0118 B1000000 		.word	.L253+1
 2593 011c 97000000 		.word	.L245+1
 2594 0120 97000000 		.word	.L245+1
 2595 0124 97000000 		.word	.L245+1
 2596 0128 97000000 		.word	.L245+1
 2597 012c 97000000 		.word	.L245+1
 2598 0130 97000000 		.word	.L245+1
 2599 0134 97000000 		.word	.L245+1
 2600 0138 97000000 		.word	.L245+1
 2601 013c 69000000 		.word	.L252+1
 2602 0140 97000000 		.word	.L245+1
 2603 0144 97000000 		.word	.L245+1
 2604 0148 97000000 		.word	.L245+1
 2605 014c 97000000 		.word	.L245+1
 2606 0150 97000000 		.word	.L245+1
 2607 0154 FF010000 		.word	.L251+1
 2608 0158 B1010000 		.word	.L250+1
 2609 015c 97000000 		.word	.L245+1
 2610 0160 97000000 		.word	.L245+1
 2611 0164 97000000 		.word	.L245+1
 2612 0168 97000000 		.word	.L245+1
 2613 016c 97000000 		.word	.L245+1
 2614 0170 97000000 		.word	.L245+1
 2615 0174 97000000 		.word	.L245+1
 2616 0178 97000000 		.word	.L245+1
 2617 017c 97000000 		.word	.L245+1
 2618 0180 97000000 		.word	.L245+1
 2619 0184 C7000000 		.word	.L249+1
 2620 0188 D5010000 		.word	.L248+1
 2621 018c D1000000 		.word	.L246+1
 2622 0190 D1000000 		.word	.L246+1
 2623 0194 97000000 		.word	.L245+1
 2624 0198 97000000 		.word	.L245+1
 2625 019c 97000000 		.word	.L245+1
 2626 01a0 97000000 		.word	.L245+1
 2627 01a4 97000000 		.word	.L245+1
 2628 01a8 D1000000 		.word	.L246+1
 2629 01ac D1000000 		.word	.L246+1
 2630              		.p2align 1
 2631              	.L250:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2632              		.loc 1 1042 4 view .LVU749
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2633              		.loc 1 1042 7 is_stmt 0 view .LVU750
 2634 01b0 022D     		cmp	r5, #2
 2635 01b2 7FF46DAF 		bne	.L258
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2636              		.loc 1 1042 27 discriminator 1 view .LVU751
 2637 01b6 394B     		ldr	r3, .L303+8
 2638 01b8 1B68     		ldr	r3, [r3]
 2639 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 111


 2640 01be DC07     		lsls	r4, r3, #31
 2641 01c0 7FF566AF 		bpl	.L258
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2642              		.loc 1 1042 45 discriminator 2 view .LVU752
 2643 01c4 0D20     		movs	r0, #13
 2644              	.LVL194:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2645              		.loc 1 1042 45 discriminator 2 view .LVU753
 2646 01c6 FFF7FEFF 		bl	intltr
 2647              	.LVL195:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2648              		.loc 1 1042 42 discriminator 2 view .LVU754
 2649 01ca 0028     		cmp	r0, #0
 2650 01cc 3FF460AF 		beq	.L258
1043:src/keys.c    **** 	  }
 2651              		.loc 1 1043 13 view .LVU755
 2652 01d0 1226     		movs	r6, #18
 2653              	.LVL196:
1043:src/keys.c    **** 	  }
 2654              		.loc 1 1043 13 view .LVU756
 2655 01d2 6AE7     		b	.L242
 2656              	.LVL197:
 2657              	.L248:
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2658              		.loc 1 1053 3 is_stmt 1 view .LVU757
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2659              		.loc 1 1053 7 is_stmt 0 view .LVU758
 2660 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2661              	.LVL198:
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2662              		.loc 1 1053 6 view .LVU759
 2663 01d8 0028     		cmp	r0, #0
 2664 01da 40D0     		beq	.L300
 2665              	.LVL199:
 2666              	.L291:
1074:src/keys.c    **** 		}
 2667              		.loc 1 1074 11 view .LVU760
 2668 01dc 3326     		movs	r6, #51
 2669              	.LVL200:
1086:src/keys.c    **** 
 2670              		.loc 1 1086 1 view .LVU761
 2671 01de 3046     		mov	r0, r6
 2672 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2673              	.LVL201:
 2674              	.L255:
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2675              		.loc 1 998 4 is_stmt 1 view .LVU762
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2676              		.loc 1 998 8 is_stmt 0 view .LVU763
 2677 01e4 2D4B     		ldr	r3, .L303+8
 2678 01e6 1B68     		ldr	r3, [r3]
 2679 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2680              		.loc 1 998 7 view .LVU764
 2681 01ec DA07     		lsls	r2, r3, #31
 2682 01ee 3CD5     		bpl	.L301
 2683              	.L294:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 112


1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2684              		.loc 1 1018 20 discriminator 1 view .LVU765
 2685 01f0 012D     		cmp	r5, #1
 2686 01f2 48D0     		beq	.L302
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2687              		.loc 1 1081 2 is_stmt 1 view .LVU766
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2688              		.loc 1 1081 5 is_stmt 0 view .LVU767
 2689 01f4 B7F5704F 		cmp	r7, #61440
 2690 01f8 7FF454AF 		bne	.L264
 2691 01fc EEE7     		b	.L291
 2692              	.L251:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2693              		.loc 1 1047 4 is_stmt 1 view .LVU768
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2694              		.loc 1 1047 7 is_stmt 0 view .LVU769
 2695 01fe 022D     		cmp	r5, #2
 2696 0200 7FF446AF 		bne	.L258
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2697              		.loc 1 1047 27 discriminator 1 view .LVU770
 2698 0204 254B     		ldr	r3, .L303+8
 2699 0206 1B68     		ldr	r3, [r3]
 2700 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2701 020c D807     		lsls	r0, r3, #31
 2702              	.LVL202:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2703              		.loc 1 1047 27 discriminator 1 view .LVU771
 2704 020e 7FF53FAF 		bpl	.L258
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2705              		.loc 1 1047 45 discriminator 2 view .LVU772
 2706 0212 0E20     		movs	r0, #14
 2707 0214 FFF7FEFF 		bl	intltr
 2708              	.LVL203:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2709              		.loc 1 1047 42 discriminator 2 view .LVU773
 2710 0218 0028     		cmp	r0, #0
 2711 021a 3FF439AF 		beq	.L258
1048:src/keys.c    **** 	  }
 2712              		.loc 1 1048 13 view .LVU774
 2713 021e 1326     		movs	r6, #19
 2714              	.LVL204:
1048:src/keys.c    **** 	  }
 2715              		.loc 1 1048 13 view .LVU775
 2716 0220 43E7     		b	.L242
 2717              	.LVL205:
 2718              	.L299:
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2719              		.loc 1 1071 4 is_stmt 1 view .LVU776
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2720              		.loc 1 1071 7 is_stmt 0 view .LVU777
 2721 0222 B7F5704F 		cmp	r7, #61440
 2722 0226 05D1     		bne	.L263
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2723              		.loc 1 1071 18 discriminator 1 view .LVU778
 2724 0228 1C4B     		ldr	r3, .L303+8
 2725 022a 1B68     		ldr	r3, [r3]
 2726 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 113


1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2727              		.loc 1 1071 8 discriminator 1 view .LVU779
 2728 0230 D907     		lsls	r1, r3, #31
 2729 0232 D3D4     		bmi	.L291
 2730              	.L263:
1072:src/keys.c    **** 			}
 2731              		.loc 1 1072 5 is_stmt 1 view .LVU780
 2732              	.LVL206:
 2733              	.LBB384:
 2734              	.LBI384:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2735              		.loc 1 552 13 view .LVU781
 2736              	.LBB385:
 553:src/keys.c    **** 		return;
 2737              		.loc 1 553 2 view .LVU782
 553:src/keys.c    **** 		return;
 2738              		.loc 1 553 6 is_stmt 0 view .LVU783
 2739 0234 FFF7FEFF 		bl	is_bad_cmdline
 2740              	.LVL207:
 553:src/keys.c    **** 		return;
 2741              		.loc 1 553 5 view .LVU784
 2742 0238 0028     		cmp	r0, #0
 2743 023a CFD1     		bne	.L291
 2744 023c F0B2     		uxtb	r0, r6
 2745 023e FFF7FEFF 		bl	init_arg.part.0
 2746              	.LVL208:
 2747 0242 CBE7     		b	.L291
 2748              	.LVL209:
 2749              	.L298:
 553:src/keys.c    **** 		return;
 2750              		.loc 1 553 5 view .LVU785
 2751              	.LBE385:
 2752              	.LBE384:
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2753              		.loc 1 1062 4 is_stmt 1 view .LVU786
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2754              		.loc 1 1062 26 is_stmt 0 view .LVU787
 2755 0244 A5F10105 		sub	r5, #1
 2756              	.LVL210:
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2757              		.loc 1 1062 17 view .LVU788
 2758 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2759              		.loc 1 1062 26 view .LVU789
 2760 024c B5FA85F5 		clz	r5, r5
 2761 0250 6D09     		lsrs	r5, r5, #5
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2762              		.loc 1 1062 17 view .LVU790
 2763 0252 65F3C713 		bfi	r3, r5, #7, #1
 2764 0256 88F81730 		strb	r3, [r8, #23]
1063:src/keys.c    **** 		}
 2765              		.loc 1 1063 4 is_stmt 1 view .LVU791
1063:src/keys.c    **** 		}
 2766              		.loc 1 1063 11 is_stmt 0 view .LVU792
 2767 025a 3326     		movs	r6, #51
 2768              	.LVL211:
1063:src/keys.c    **** 		}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 114


 2769              		.loc 1 1063 11 view .LVU793
 2770 025c 25E7     		b	.L242
 2771              	.LVL212:
 2772              	.L300:
1055:src/keys.c    **** 		State2.test = op;
 2773              		.loc 1 1055 3 is_stmt 1 view .LVU794
 2774 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2775              	.LVL213:
1056:src/keys.c    **** 		return STATE_UNFINISHED;
 2776              		.loc 1 1056 3 view .LVU795
1056:src/keys.c    **** 		return STATE_UNFINISHED;
 2777              		.loc 1 1056 15 is_stmt 0 view .LVU796
 2778 0262 88F80F60 		strb	r6, [r8, #15]
1057:src/keys.c    **** 
 2779              		.loc 1 1057 3 is_stmt 1 view .LVU797
1057:src/keys.c    **** 
 2780              		.loc 1 1057 10 is_stmt 0 view .LVU798
 2781 0266 3326     		movs	r6, #51
 2782              	.LVL214:
1057:src/keys.c    **** 
 2783              		.loc 1 1057 10 view .LVU799
 2784 0268 1FE7     		b	.L242
 2785              	.LVL215:
 2786              	.L301:
1000:src/keys.c    **** 	    State2.dot = op;
 2787              		.loc 1 1000 6 is_stmt 1 view .LVU800
1001:src/keys.c    **** 	    // State2.cmplx = 0;
 2788              		.loc 1 1001 6 view .LVU801
1000:src/keys.c    **** 	    State2.dot = op;
 2789              		.loc 1 1000 17 is_stmt 0 view .LVU802
 2790 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2791 026e 06F00103 		and	r3, r6, #1
 2792 0272 9B01     		lsls	r3, r3, #6
 2793 0274 43F02003 		orr	r3, r3, #32
 2794 0278 22F06002 		bic	r2, r2, #96
 2795 027c 1343     		orrs	r3, r3, r2
 2796 027e 88F81530 		strb	r3, [r8, #21]
1003:src/keys.c    **** 	  }
 2797              		.loc 1 1003 6 is_stmt 1 view .LVU803
1003:src/keys.c    **** 	  }
 2798              		.loc 1 1003 13 is_stmt 0 view .LVU804
 2799 0282 3326     		movs	r6, #51
 2800              	.LVL216:
1003:src/keys.c    **** 	  }
 2801              		.loc 1 1003 13 view .LVU805
 2802 0284 11E7     		b	.L242
 2803              	.LVL217:
 2804              	.L302:
1019:src/keys.c    **** 		}
 2805              		.loc 1 1019 4 is_stmt 1 view .LVU806
1019:src/keys.c    **** 		}
 2806              		.loc 1 1019 34 is_stmt 0 view .LVU807
 2807 0286 064B     		ldr	r3, .L303+12
1086:src/keys.c    **** 
 2808              		.loc 1 1086 1 view .LVU808
 2809 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2810              		.cfi_restore 14
ARM GAS  /tmp/ccc9ZrJ3.s 			page 115


 2811              		.cfi_restore 8
 2812              		.cfi_restore 7
 2813              		.cfi_restore 6
 2814              		.cfi_restore 5
 2815              		.cfi_restore 4
 2816              		.cfi_def_cfa_offset 0
 2817              	.LVL218:
1019:src/keys.c    **** 		}
 2818              		.loc 1 1019 11 view .LVU809
 2819 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2820 0290 FFF7FEBF 		b	check_f_key
 2821              	.LVL219:
 2822              	.L304:
1019:src/keys.c    **** 		}
 2823              		.loc 1 1019 11 view .LVU810
 2824              		.align	2
 2825              	.L303:
 2826 0294 00000000 		.word	.LANCHOR1
 2827 0298 00000000 		.word	.LANCHOR3
 2828 029c 00000000 		.word	main_ram
 2829 02a0 00000000 		.word	.LANCHOR4
 2830 02a4 00000000 		.word	StateWhileOn
 2831              		.cfi_endproc
 2832              	.LFE20:
 2834              		.section	.text.set_window,"ax",%progbits
 2835              		.align	1
 2836              		.p2align 2,,3
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2840              		.fpu fpv4-sp-d16
 2842              	set_window:
 2843              	.LVL220:
 2844              	.LFB58:
2981:src/keys.c    **** 
2982:src/keys.c    **** 
2983:src/keys.c    **** /*
2984:src/keys.c    ****  *  CAT command
2985:src/keys.c    ****  */
2986:src/keys.c    **** static int process_labellist(const keycode c) {
2987:src/keys.c    **** 	unsigned int pc = State2.digval;
2988:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2989:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2990:src/keys.c    **** 	const int opcode = getprog(pc);
2991:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2992:src/keys.c    **** 	const int direct = State2.runmode;
2993:src/keys.c    **** 	const enum shifts shift = reset_shift();
2994:src/keys.c    **** 	int op = STATE_UNFINISHED;
2995:src/keys.c    **** 
2996:src/keys.c    **** 	if (n < REGION_XROM) {
2997:src/keys.c    **** 		// Digits take you to that segment
2998:src/keys.c    **** 		pc = addrLIB(1, n);
2999:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3000:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
3001:src/keys.c    **** 		State2.digval = pc;
3002:src/keys.c    **** 		return STATE_UNFINISHED;
3003:src/keys.c    **** 	}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 116


3004:src/keys.c    **** 
3005:src/keys.c    **** 	switch (c | (shift << 8)) {
3006:src/keys.c    **** 
3007:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3008:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3009:src/keys.c    **** 		goto next;
3010:src/keys.c    **** 
3011:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3012:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3013:src/keys.c    **** 	case K_DOWN:				// Find next label
3014:src/keys.c    **** 	next:
3015:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3016:src/keys.c    **** 		return STATE_UNFINISHED;
3017:src/keys.c    **** 
3018:src/keys.c    **** 	case K_UP:				// Find previous label
3019:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3020:src/keys.c    **** 		return STATE_UNFINISHED;
3021:src/keys.c    **** 
3022:src/keys.c    **** 	case K24:				// <- exits
3023:src/keys.c    **** 		break;
3024:src/keys.c    **** 
3025:src/keys.c    **** 	case K20:				// ENTER^
3026:src/keys.c    **** 	set_pc_and_exit:
3027:src/keys.c    **** 		set_pc(pc);			// forced branch
3028:src/keys.c    **** 		break;
3029:src/keys.c    **** 
3030:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3031:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3032:src/keys.c    **** 		goto set_pc_and_exit;
3033:src/keys.c    **** 
3034:src/keys.c    **** 	case K10:				// STO
3035:src/keys.c    **** 	case K11:				// RCL
3036:src/keys.c    **** 	  //#ifndef DM42	
3037:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3038:src/keys.c    **** 	  //#endif
3039:src/keys.c    **** /* #ifdef DM42 */
3040:src/keys.c    **** /* 	        op = OP_NIL; */
3041:src/keys.c    **** /* #endif	     */
3042:src/keys.c    **** 	  goto set_pc_and_exit;
3043:src/keys.c    **** #ifdef DM42
3044:src/keys.c    **** 	case K05:				// XEQ
3045:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3046:src/keys.c    **** 		goto xeq_or_gto;
3047:src/keys.c    **** 
3048:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3049:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3050:src/keys.c    **** 	xeq_or_gto:
3051:src/keys.c    **** 		if (label)
3052:src/keys.c    **** 			break;
3053:src/keys.c    **** 		return STATE_UNFINISHED;
3054:src/keys.c    **** #else
3055:src/keys.c    **** 	case K30:				// XEQ
3056:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3057:src/keys.c    **** 		goto xeq_or_gto;
3058:src/keys.c    **** 
3059:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3060:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 117


3061:src/keys.c    **** 	xeq_or_gto:
3062:src/keys.c    **** 		if (label)
3063:src/keys.c    **** 			break;
3064:src/keys.c    **** 		return STATE_UNFINISHED;
3065:src/keys.c    **** #endif		
3066:src/keys.c    **** 	case K63:				// R/S
3067:src/keys.c    **** 		if (direct && label) {
3068:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3069:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3070:src/keys.c    **** 			break;
3071:src/keys.c    **** 		}
3072:src/keys.c    **** 		return STATE_UNFINISHED;
3073:src/keys.c    **** 
3074:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3075:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3076:src/keys.c    **** 		goto set_pc_and_exit;
3077:src/keys.c    **** 
3078:src/keys.c    **** 	default:
3079:src/keys.c    **** 		return STATE_UNFINISHED;
3080:src/keys.c    **** 	}
3081:src/keys.c    **** 	State2.digval = 0;
3082:src/keys.c    **** 	State2.labellist = 0;
3083:src/keys.c    **** 	return check_confirm(op);
3084:src/keys.c    **** }
3085:src/keys.c    **** 
3086:src/keys.c    **** 
3087:src/keys.c    **** static void set_window(int c) {
 2845              		.loc 1 3087 31 is_stmt 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
3088:src/keys.c    **** 
3089:src/keys.c    **** 	if (State2.runmode) {
 2849              		.loc 1 3089 2 view .LVU812
3087:src/keys.c    **** 
 2850              		.loc 1 3087 31 is_stmt 0 view .LVU813
 2851 0000 38B5     		push	{r3, r4, r5, lr}
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 3, -16
 2854              		.cfi_offset 4, -12
 2855              		.cfi_offset 5, -8
 2856              		.cfi_offset 14, -4
 2857              		.loc 1 3089 6 view .LVU814
 2858 0002 224C     		ldr	r4, .L320
 2859 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2860              		.loc 1 3089 5 view .LVU815
 2861 0006 5A06     		lsls	r2, r3, #25
 2862 0008 00D4     		bmi	.L317
 2863              	.LVL221:
 2864              	.L305:
3090:src/keys.c    **** 		process_cmdline_set_lift();
3091:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3092:src/keys.c    **** 		State2.disp_freeze = 0;
3093:src/keys.c    **** 		display();	
3094:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3095:src/keys.c    **** 			if (UState.intm) {
3096:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
ARM GAS  /tmp/ccc9ZrJ3.s 			page 118


3097:src/keys.c    **** 					State2.window--;
3098:src/keys.c    **** 				return;
3099:src/keys.c    **** 			}
3100:src/keys.c    **** 			else 
3101:src/keys.c    **** 				State2.window = is_dblmode();
3102:src/keys.c    **** 		}
3103:src/keys.c    **** 		else {
3104:src/keys.c    **** 			if (UState.intm) {
3105:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3106:src/keys.c    **** 					State2.window++;
3107:src/keys.c    **** 				return;
3108:src/keys.c    **** 			}
3109:src/keys.c    **** 			else
3110:src/keys.c    **** 				State2.window = 0;
3111:src/keys.c    **** 		}
3112:src/keys.c    **** 		set_smode(SDISP_SHOW);
3113:src/keys.c    **** 	}
3114:src/keys.c    **** }
 2865              		.loc 1 3114 1 view .LVU816
 2866 000a 38BD     		pop	{r3, r4, r5, pc}
 2867              	.LVL222:
 2868              	.L317:
3090:src/keys.c    **** 		process_cmdline_set_lift();
 2869              		.loc 1 3090 3 is_stmt 1 view .LVU817
 2870 000c 0546     		mov	r5, r0
 2871 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2872              	.LVL223:
3092:src/keys.c    **** 		display();	
 2873              		.loc 1 3092 3 view .LVU818
3092:src/keys.c    **** 		display();	
 2874              		.loc 1 3092 22 is_stmt 0 view .LVU819
 2875 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2876 0014 6FF30413 		bfc	r3, #4, #1
 2877 0018 E375     		strb	r3, [r4, #23]
3093:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2878              		.loc 1 3093 3 is_stmt 1 view .LVU820
 2879 001a FFF7FEFF 		bl	display
 2880              	.LVL224:
3094:src/keys.c    **** 			if (UState.intm) {
 2881              		.loc 1 3094 3 view .LVU821
3095:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2882              		.loc 1 3095 8 is_stmt 0 view .LVU822
 2883 001e 1C4B     		ldr	r3, .L320+4
 2884 0020 1B68     		ldr	r3, [r3]
3094:src/keys.c    **** 			if (UState.intm) {
 2885              		.loc 1 3094 6 view .LVU823
 2886 0022 2C2D     		cmp	r5, #44
3095:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2887              		.loc 1 3095 8 view .LVU824
 2888 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
3094:src/keys.c    **** 			if (UState.intm) {
 2889              		.loc 1 3094 6 view .LVU825
 2890 0028 18D0     		beq	.L318
3104:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2891              		.loc 1 3104 4 is_stmt 1 view .LVU826
3104:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2892              		.loc 1 3104 7 is_stmt 0 view .LVU827
ARM GAS  /tmp/ccc9ZrJ3.s 			page 119


 2893 002a 13F00103 		ands	r3, r3, #1
 2894 002e 09D1     		bne	.L319
3110:src/keys.c    **** 		}
 2895              		.loc 1 3110 5 is_stmt 1 view .LVU828
3110:src/keys.c    **** 		}
 2896              		.loc 1 3110 19 is_stmt 0 view .LVU829
 2897 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2898 0032 63F3C502 		bfi	r2, r3, #3, #3
 2899 0036 2275     		strb	r2, [r4, #20]
 2900              	.L311:
3112:src/keys.c    **** 	}
 2901              		.loc 1 3112 3 is_stmt 1 view .LVU830
 2902              	.LVL225:
 2903              	.LBB392:
 2904              	.LBI392:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2905              		.loc 1 731 13 view .LVU831
 2906              	.LBB393:
 732:src/keys.c    **** }
 2907              		.loc 1 732 2 view .LVU832
 732:src/keys.c    **** }
 2908              		.loc 1 732 15 is_stmt 0 view .LVU833
 2909 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2910 003a 013B     		subs	r3, r3, #1
 2911 003c 18BF     		it	ne
 2912 003e 0123     		movne	r3, #1
 2913 0040 6374     		strb	r3, [r4, #17]
 2914              	.LVL226:
 732:src/keys.c    **** }
 2915              		.loc 1 732 15 view .LVU834
 2916              	.LBE393:
 2917              	.LBE392:
 2918              		.loc 1 3114 1 view .LVU835
 2919 0042 38BD     		pop	{r3, r4, r5, pc}
 2920              	.LVL227:
 2921              	.L319:
3105:src/keys.c    **** 					State2.window++;
 2922              		.loc 1 3105 5 is_stmt 1 view .LVU836
3105:src/keys.c    **** 					State2.window++;
 2923              		.loc 1 3105 22 is_stmt 0 view .LVU837
 2924 0044 134A     		ldr	r2, .L320+8
3105:src/keys.c    **** 					State2.window++;
 2925              		.loc 1 3105 42 view .LVU838
 2926 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3105:src/keys.c    **** 					State2.window++;
 2927              		.loc 1 3105 8 view .LVU839
 2928 0048 1168     		ldr	r1, [r2]
3105:src/keys.c    **** 					State2.window++;
 2929              		.loc 1 3105 42 view .LVU840
 2930 004a C3F3C202 		ubfx	r2, r3, #3, #3
3105:src/keys.c    **** 					State2.window++;
 2931              		.loc 1 3105 8 view .LVU841
 2932 004e 8A42     		cmp	r2, r1
 2933 0050 DBDA     		bge	.L305
3106:src/keys.c    **** 				return;
 2934              		.loc 1 3106 6 is_stmt 1 view .LVU842
3106:src/keys.c    **** 				return;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 120


 2935              		.loc 1 3106 19 is_stmt 0 view .LVU843
 2936 0052 0132     		adds	r2, r2, #1
 2937 0054 62F3C503 		bfi	r3, r2, #3, #3
 2938 0058 2375     		strb	r3, [r4, #20]
 2939              		.loc 1 3114 1 view .LVU844
 2940 005a 38BD     		pop	{r3, r4, r5, pc}
 2941              	.LVL228:
 2942              	.L318:
3095:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2943              		.loc 1 3095 4 is_stmt 1 view .LVU845
3095:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2944              		.loc 1 3095 7 is_stmt 0 view .LVU846
 2945 005c DB07     		lsls	r3, r3, #31
 2946 005e 0ED5     		bpl	.L309
 2947              	.LBB394:
 2948              	.LBI394:
3087:src/keys.c    **** 
 2949              		.loc 1 3087 13 is_stmt 1 view .LVU847
 2950              	.LVL229:
 2951              	.LBB395:
3096:src/keys.c    **** 					State2.window--;
 2952              		.loc 1 3096 5 view .LVU848
3096:src/keys.c    **** 					State2.window--;
 2953              		.loc 1 3096 22 is_stmt 0 view .LVU849
 2954 0060 0C4B     		ldr	r3, .L320+8
3096:src/keys.c    **** 					State2.window--;
 2955              		.loc 1 3096 8 view .LVU850
 2956 0062 1B68     		ldr	r3, [r3]
 2957 0064 002B     		cmp	r3, #0
 2958 0066 D0DD     		ble	.L305
3096:src/keys.c    **** 					State2.window--;
 2959              		.loc 1 3096 43 view .LVU851
 2960 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3096:src/keys.c    **** 					State2.window--;
 2961              		.loc 1 3096 26 view .LVU852
 2962 006a 13F0380F 		tst	r3, #56
 2963 006e CCD0     		beq	.L305
3097:src/keys.c    **** 				return;
 2964              		.loc 1 3097 6 is_stmt 1 view .LVU853
3097:src/keys.c    **** 				return;
 2965              		.loc 1 3097 12 is_stmt 0 view .LVU854
 2966 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3097:src/keys.c    **** 				return;
 2967              		.loc 1 3097 19 view .LVU855
 2968 0074 0732     		adds	r2, r2, #7
 2969 0076 62F3C503 		bfi	r3, r2, #3, #3
 2970 007a 2375     		strb	r3, [r4, #20]
 2971              	.LBE395:
 2972              	.LBE394:
 2973              		.loc 1 3114 1 view .LVU856
 2974 007c 38BD     		pop	{r3, r4, r5, pc}
 2975              	.LVL230:
 2976              	.L309:
3101:src/keys.c    **** 		}
 2977              		.loc 1 3101 5 is_stmt 1 view .LVU857
3101:src/keys.c    **** 		}
 2978              		.loc 1 3101 21 is_stmt 0 view .LVU858
ARM GAS  /tmp/ccc9ZrJ3.s 			page 121


 2979 007e FFF7FEFF 		bl	is_dblmode
 2980              	.LVL231:
3101:src/keys.c    **** 		}
 2981              		.loc 1 3101 19 view .LVU859
 2982 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2983 0084 60F3C503 		bfi	r3, r0, #3, #3
 2984 0088 2375     		strb	r3, [r4, #20]
 2985 008a D5E7     		b	.L311
 2986              	.L321:
 2987              		.align	2
 2988              	.L320:
 2989 008c 00000000 		.word	StateWhileOn
 2990 0090 00000000 		.word	main_ram
 2991 0094 00000000 		.word	IntMaxWindow
 2992              		.cfi_endproc
 2993              	.LFE58:
 2995              		.section	.text.arg_storcl,"ax",%progbits
 2996              		.align	1
 2997              		.p2align 2,,3
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3001              		.fpu fpv4-sp-d16
 3003              	arg_storcl:
 3004              	.LVL232:
 3005              	.LFB39:
2013:src/keys.c    **** 	unsigned int b = CmdBase;
 3006              		.loc 1 2013 56 is_stmt 1 view -0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 0
 3009              		@ frame_needed = 0, uses_anonymous_args = 0
 3010              		@ link register save eliminated.
2014:src/keys.c    **** 
 3011              		.loc 1 2014 2 view .LVU861
2014:src/keys.c    **** 
 3012              		.loc 1 2014 19 is_stmt 0 view .LVU862
 3013 0000 0F4A     		ldr	r2, .L354
 3014 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3015              	.LVL233:
2016:src/keys.c    **** 		CmdBase += n;
 3016              		.loc 1 2016 2 is_stmt 1 view .LVU863
 3017              	.LBB404:
 3018              	.LBI404:
2004:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3019              		.loc 1 2004 12 view .LVU864
 3020              	.LBB405:
2009:src/keys.c    **** #endif
 3021              		.loc 1 2009 2 view .LVU865
2009:src/keys.c    **** #endif
 3022              		.loc 1 2009 41 is_stmt 0 view .LVU866
 3023 0004 032B     		cmp	r3, #3
 3024 0006 14D0     		beq	.L323
2009:src/keys.c    **** #endif
 3025              		.loc 1 2009 24 view .LVU867
 3026 0008 0A2B     		cmp	r3, #10
 3027 000a 12D0     		beq	.L323
 3028              	.LVL234:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 122


 3029              	.LBB406:
 3030              	.LBI406:
2004:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3031              		.loc 1 2004 12 is_stmt 1 view .LVU868
 3032              	.LBB407:
2009:src/keys.c    **** #endif
 3033              		.loc 1 2009 41 is_stmt 0 view .LVU869
 3034 000c 19B1     		cbz	r1, .L324
2009:src/keys.c    **** #endif
 3035              		.loc 1 2009 51 view .LVU870
 3036 000e 152B     		cmp	r3, #21
 3037 0010 0FD0     		beq	.L323
2009:src/keys.c    **** #endif
 3038              		.loc 1 2009 70 view .LVU871
 3039 0012 1A2B     		cmp	r3, #26
 3040 0014 0DD0     		beq	.L323
 3041              	.L324:
 3042              	.LVL235:
2009:src/keys.c    **** #endif
 3043              		.loc 1 2009 70 view .LVU872
 3044              	.LBE407:
 3045              	.LBE406:
 3046              	.LBE405:
 3047              	.LBE404:
2021:src/keys.c    **** 		b -= n;
 3048              		.loc 1 2021 2 is_stmt 1 view .LVU873
2021:src/keys.c    **** 		b -= n;
 3049              		.loc 1 2021 5 is_stmt 0 view .LVU874
 3050 0016 8342     		cmp	r3, r0
 3051 0018 09D3     		bcc	.L329
2022:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3052              		.loc 1 2022 3 is_stmt 1 view .LVU875
2022:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3053              		.loc 1 2022 5 is_stmt 0 view .LVU876
 3054 001a 1B1A     		subs	r3, r3, r0
 3055              	.LVL236:
2023:src/keys.c    **** 			CmdBase = b;
 3056              		.loc 1 2023 3 is_stmt 1 view .LVU877
 3057              	.LBB408:
 3058              	.LBI408:
2004:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3059              		.loc 1 2004 12 view .LVU878
 3060              	.LBB409:
2009:src/keys.c    **** #endif
 3061              		.loc 1 2009 2 view .LVU879
2009:src/keys.c    **** #endif
 3062              		.loc 1 2009 41 is_stmt 0 view .LVU880
 3063 001c 032B     		cmp	r3, #3
 3064 001e 0CD0     		beq	.L327
2009:src/keys.c    **** #endif
 3065              		.loc 1 2009 24 view .LVU881
 3066 0020 0A2B     		cmp	r3, #10
 3067 0022 0AD0     		beq	.L327
 3068              	.LVL237:
 3069              	.LBB410:
 3070              	.LBI410:
2004:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
ARM GAS  /tmp/ccc9ZrJ3.s 			page 123


 3071              		.loc 1 2004 12 is_stmt 1 view .LVU882
 3072              	.LBB411:
2009:src/keys.c    **** #endif
 3073              		.loc 1 2009 41 is_stmt 0 view .LVU883
 3074 0024 19B1     		cbz	r1, .L329
2009:src/keys.c    **** #endif
 3075              		.loc 1 2009 51 view .LVU884
 3076 0026 152B     		cmp	r3, #21
 3077 0028 07D0     		beq	.L327
2009:src/keys.c    **** #endif
 3078              		.loc 1 2009 70 view .LVU885
 3079 002a 1A2B     		cmp	r3, #26
 3080 002c 05D0     		beq	.L327
 3081              	.LVL238:
 3082              	.L329:
2009:src/keys.c    **** #endif
 3083              		.loc 1 2009 70 view .LVU886
 3084              	.LBE411:
 3085              	.LBE410:
 3086              	.LBE409:
 3087              	.LBE408:
2028:src/keys.c    **** }
 3088              		.loc 1 2028 9 view .LVU887
 3089 002e 0020     		movs	r0, #0
 3090              	.LVL239:
2029:src/keys.c    **** 
 3091              		.loc 1 2029 1 view .LVU888
 3092 0030 7047     		bx	lr
 3093              	.LVL240:
 3094              	.L323:
2017:src/keys.c    **** 		return 1;
 3095              		.loc 1 2017 3 is_stmt 1 view .LVU889
2017:src/keys.c    **** 		return 1;
 3096              		.loc 1 2017 11 is_stmt 0 view .LVU890
 3097 0032 1844     		add	r0, r0, r3
 3098              	.LVL241:
2017:src/keys.c    **** 		return 1;
 3099              		.loc 1 2017 11 view .LVU891
 3100 0034 D077     		strb	r0, [r2, #31]
2018:src/keys.c    **** 	}
 3101              		.loc 1 2018 3 is_stmt 1 view .LVU892
2018:src/keys.c    **** 	}
 3102              		.loc 1 2018 10 is_stmt 0 view .LVU893
 3103 0036 0120     		movs	r0, #1
 3104 0038 7047     		bx	lr
 3105              	.LVL242:
 3106              	.L327:
2024:src/keys.c    **** 			return 1;
 3107              		.loc 1 2024 4 is_stmt 1 view .LVU894
2024:src/keys.c    **** 			return 1;
 3108              		.loc 1 2024 12 is_stmt 0 view .LVU895
 3109 003a D377     		strb	r3, [r2, #31]
2025:src/keys.c    **** 		}
 3110              		.loc 1 2025 4 is_stmt 1 view .LVU896
2025:src/keys.c    **** 		}
 3111              		.loc 1 2025 11 is_stmt 0 view .LVU897
 3112 003c 0120     		movs	r0, #1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 124


 3113              	.LVL243:
2025:src/keys.c    **** 		}
 3114              		.loc 1 2025 11 view .LVU898
 3115 003e 7047     		bx	lr
 3116              	.L355:
 3117              		.align	2
 3118              	.L354:
 3119 0040 00000000 		.word	StateWhileOn
 3120              		.cfi_endproc
 3121              	.LFE39:
 3123              		.section	.text.process_arg,"ax",%progbits
 3124              		.align	1
 3125              		.p2align 2,,3
 3126              		.syntax unified
 3127              		.thumb
 3128              		.thumb_func
 3129              		.fpu fpv4-sp-d16
 3131              	process_arg:
 3132              	.LVL244:
 3133              	.LFB42:
2063:src/keys.c    **** 	unsigned int base = CmdBase;
 3134              		.loc 1 2063 41 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 8
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
2064:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3138              		.loc 1 2064 2 view .LVU900
2063:src/keys.c    **** 	unsigned int base = CmdBase;
 3139              		.loc 1 2063 41 is_stmt 0 view .LVU901
 3140 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3141              		.cfi_def_cfa_offset 36
 3142              		.cfi_offset 4, -36
 3143              		.cfi_offset 5, -32
 3144              		.cfi_offset 6, -28
 3145              		.cfi_offset 7, -24
 3146              		.cfi_offset 8, -20
 3147              		.cfi_offset 9, -16
 3148              		.cfi_offset 10, -12
 3149              		.cfi_offset 11, -8
 3150              		.cfi_offset 14, -4
2064:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3151              		.loc 1 2064 22 view .LVU902
 3152 0004 C94C     		ldr	r4, .L500
2066:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3153              		.loc 1 2066 31 view .LVU903
 3154 0006 DFF834A3 		ldr	r10, .L500+16
2064:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3155              		.loc 1 2064 22 view .LVU904
 3156 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3157              	.LBB433:
 3158              	.LBB434:
 3159              	.LBB435:
 3160              	.LBB436:
 143:src/keys.c    **** }
 3161              		.loc 1 143 23 view .LVU905
 3162 000c C84A     		ldr	r2, .L500+4
 3163              	.LBE436:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 125


 3164              	.LBE435:
 234:src/keys.c    **** }
 3165              		.loc 1 234 28 view .LVU906
 3166 000e C94E     		ldr	r6, .L500+8
 3167              	.LBB439:
 3168              	.LBB437:
 143:src/keys.c    **** }
 3169              		.loc 1 143 23 view .LVU907
 3170 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3171              	.LBE437:
 3172              	.LBE439:
 3173              	.LBE434:
 3174              	.LBE433:
2067:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3175              		.loc 1 2067 20 view .LVU908
 3176 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3177              	.LBB443:
 3178              	.LBB441:
 234:src/keys.c    **** }
 3179              		.loc 1 234 28 view .LVU909
 3180 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3181              	.LBE441:
 3182              	.LBE443:
2066:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3183              		.loc 1 2066 31 view .LVU910
 3184 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2063:src/keys.c    **** 	unsigned int base = CmdBase;
 3185              		.loc 1 2063 41 view .LVU911
 3186 001c 83B0     		sub	sp, sp, #12
 3187              		.cfi_def_cfa_offset 48
2066:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3188              		.loc 1 2066 31 view .LVU912
 3189 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2064:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3190              		.loc 1 2064 15 view .LVU913
 3191 0020 0095     		str	r5, [sp]
 3192              	.LVL245:
2065:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3193              		.loc 1 2065 2 is_stmt 1 view .LVU914
2066:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3194              		.loc 1 2066 40 is_stmt 0 view .LVU915
 3195 0022 4A07     		lsls	r2, r1, #29
 3196 0024 58BF     		it	pl
 3197 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2067:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3198              		.loc 1 2067 20 view .LVU916
 3199 002a 0193     		str	r3, [sp, #4]
2066:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3200              		.loc 1 2066 40 view .LVU917
 3201 002c 54BF     		ite	pl
 3202 002e 4FEAD878 		lsrpl	r8, r8, #31
 3203 0032 4FF00108 		movmi	r8, #1
2063:src/keys.c    **** 	unsigned int base = CmdBase;
 3204              		.loc 1 2063 41 view .LVU918
 3205 0036 0746     		mov	r7, r0
 3206              	.LVL246:
 3207              	.LBB444:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 126


 3208              	.LBI433:
 210:src/keys.c    **** {
 3209              		.loc 1 210 14 is_stmt 1 view .LVU919
 3210              	.LBB442:
 212:src/keys.c    ****     // K00 - K05
 3211              		.loc 1 212 3 view .LVU920
 234:src/keys.c    **** }
 3212              		.loc 1 234 3 view .LVU921
 3213              	.LBB440:
 3214              	.LBI435:
 131:src/keys.c    **** {
 3215              		.loc 1 131 12 view .LVU922
 3216              	.LBB438:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3217              		.loc 1 133 2 view .LVU923
 143:src/keys.c    **** }
 3218              		.loc 1 143 2 view .LVU924
 143:src/keys.c    **** }
 3219              		.loc 1 143 2 is_stmt 0 view .LVU925
 3220              	.LBE438:
 3221              	.LBE440:
 234:src/keys.c    **** }
 3222              		.loc 1 234 10 view .LVU926
 3223 0038 4E46     		mov	r6, r9
 3224              	.LVL247:
 234:src/keys.c    **** }
 3225              		.loc 1 234 10 view .LVU927
 3226              	.LBE442:
 3227              	.LBE444:
2066:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3228              		.loc 1 2066 2 is_stmt 1 view .LVU928
2067:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3229              		.loc 1 2067 2 view .LVU929
2068:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3230              		.loc 1 2068 2 view .LVU930
 3231              	.LBB445:
 3232              	.LBI445:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3233              		.loc 1 114 13 view .LVU931
 3234              	.LBE445:
 115:src/keys.c    **** }
 3235              		.loc 1 115 2 view .LVU932
 3236              	.LBB458:
 3237              	.LBB446:
 3238              	.LBI446:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3239              		.loc 1 104 20 view .LVU933
 3240              	.LBB447:
 105:src/keys.c    **** 	State2.shifts = shift;
 3241              		.loc 1 105 2 view .LVU934
 3242              	.LBB448:
 3243              	.LBI448:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3244              		.loc 1 96 13 view .LVU935
 3245              	.LBB449:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3246              		.loc 1 97 2 view .LVU936
ARM GAS  /tmp/ccc9ZrJ3.s 			page 127


 3247              	.LBE449:
 3248              	.LBE448:
 3249              	.LBE447:
 3250              	.LBE446:
 3251              	.LBE458:
2066:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3252              		.loc 1 2066 31 is_stmt 0 view .LVU937
 3253 003a 4FEA051B 		lsl	fp, r5, #4
 3254              	.LBB459:
 3255              	.LBB455:
 3256              	.LBB452:
 3257              	.LBB451:
 3258              	.LBB450:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3259              		.loc 1 97 18 view .LVU938
 3260 003e FFF7FEFF 		bl	shift_down
 3261              	.LVL248:
  98:src/keys.c    **** }
 3262              		.loc 1 98 2 is_stmt 1 view .LVU939
  98:src/keys.c    **** }
 3263              		.loc 1 98 52 is_stmt 0 view .LVU940
 3264 0042 00B9     		cbnz	r0, .L358
 3265 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3266              	.LVL249:
 3267              	.L358:
  98:src/keys.c    **** }
 3268              		.loc 1 98 52 view .LVU941
 3269              	.LBE450:
 3270              	.LBE451:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3271              		.loc 1 106 2 is_stmt 1 view .LVU942
 3272              	.LBE452:
 3273              	.LBE455:
 3274              	.LBE459:
2069:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3275              		.loc 1 2069 38 is_stmt 0 view .LVU943
 3276 0046 D344     		add	fp, fp, r10
 3277              	.LBB460:
 3278              	.LBB456:
 3279              	.LBB453:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3280              		.loc 1 106 16 view .LVU944
 3281 0048 4FF0000E 		mov	lr, #0
 3282              	.LBE453:
 3283              	.LBE456:
 3284              	.LBE460:
2069:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3285              		.loc 1 2069 38 view .LVU945
 3286 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3287              	.LBB461:
 3288              	.LBB457:
 3289              	.LBB454:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3290              		.loc 1 106 16 view .LVU946
 3291 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3292              		.loc 1 108 2 is_stmt 1 view .LVU947
ARM GAS  /tmp/ccc9ZrJ3.s 			page 128


 3293              	.LVL250:
 108:src/keys.c    **** }
 3294              		.loc 1 108 2 is_stmt 0 view .LVU948
 3295              	.LBE454:
 3296              	.LBE457:
 3297              	.LBE461:
2069:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3298              		.loc 1 2069 2 is_stmt 1 view .LVU949
2069:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3299              		.loc 1 2069 61 is_stmt 0 view .LVU950
 3300 0054 8B06     		lsls	r3, r1, #26
 3301 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3302 005a 19D5     		bpl	.L359
2069:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3303              		.loc 1 2069 61 discriminator 1 view .LVU951
 3304 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3305 005e 11F0C00F 		tst	r1, #192
 3306 0062 1FD0     		beq	.L488
 3307              	.LVL251:
2073:src/keys.c    **** 	if (base >= NUM_RARG) {
 3308              		.loc 1 2073 2 is_stmt 1 view .LVU952
2074:src/keys.c    **** 		reset_arg();
 3309              		.loc 1 2074 5 is_stmt 0 view .LVU953
 3310 0064 8E2D     		cmp	r5, #142
2073:src/keys.c    **** 	if (base >= NUM_RARG) {
 3311              		.loc 1 2073 4 view .LVU954
 3312 0066 29F08006 		bic	r6, r9, #128
 3313              	.LVL252:
2074:src/keys.c    **** 		reset_arg();
 3314              		.loc 1 2074 2 is_stmt 1 view .LVU955
2074:src/keys.c    **** 		reset_arg();
 3315              		.loc 1 2074 5 is_stmt 0 view .LVU956
 3316 006a 15D8     		bhi	.L388
2069:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3317              		.loc 1 2069 61 view .LVU957
 3318 006c F446     		mov	ip, lr
 3319              	.L368:
2079:src/keys.c    **** 	  switch (n) {
 3320              		.loc 1 2079 35 discriminator 1 view .LVU958
 3321 006e 6169     		ldr	r1, [r4, #20]
 3322 0070 11F4103F 		tst	r1, #147456
 3323 0074 2ED1     		bne	.L370
2080:src/keys.c    **** 	  case regX_idx:
 3324              		.loc 1 2080 4 is_stmt 1 view .LVU959
 3325 0076 672E     		cmp	r6, #103
 3326 0078 2CD8     		bhi	.L370
2080:src/keys.c    **** 	  case regX_idx:
 3327              		.loc 1 2080 4 is_stmt 0 view .LVU960
 3328 007a 632E     		cmp	r6, #99
 3329 007c 24D9     		bls	.L430
 3330 007e 653E     		subs	r6, r6, #101
 3331              	.LVL253:
2080:src/keys.c    **** 	  case regX_idx:
 3332              		.loc 1 2080 4 view .LVU961
 3333 0080 022E     		cmp	r6, #2
 3334 0082 00F26082 		bhi	.L373
 3335 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
ARM GAS  /tmp/ccc9ZrJ3.s 			page 129


 3336              	.L375:
 3337 008a 1101     		.2byte	(.L377-.L375)/2
 3338 008c 0B01     		.2byte	(.L376-.L375)/2
 3339 008e 1301     		.2byte	(.L374-.L375)/2
 3340              	.LVL254:
 3341              		.p2align 1
 3342              	.L359:
2073:src/keys.c    **** 	if (base >= NUM_RARG) {
 3343              		.loc 1 2073 2 is_stmt 1 view .LVU962
2074:src/keys.c    **** 		reset_arg();
 3344              		.loc 1 2074 5 is_stmt 0 view .LVU963
 3345 0090 8E2D     		cmp	r5, #142
2073:src/keys.c    **** 	if (base >= NUM_RARG) {
 3346              		.loc 1 2073 4 view .LVU964
 3347 0092 29F08006 		bic	r6, r9, #128
 3348              	.LVL255:
2074:src/keys.c    **** 		reset_arg();
 3349              		.loc 1 2074 2 is_stmt 1 view .LVU965
2074:src/keys.c    **** 		reset_arg();
 3350              		.loc 1 2074 5 is_stmt 0 view .LVU966
 3351 0096 EAD9     		bls	.L368
 3352              	.LVL256:
 3353              	.L388:
2329:src/keys.c    **** 	default:
 3354              		.loc 1 2329 3 is_stmt 1 view .LVU967
 3355 0098 FFF7FEFF 		bl	reset_arg
 3356              	.LVL257:
 3357              	.L481:
2333:src/keys.c    **** }
 3358              		.loc 1 2333 9 is_stmt 0 view .LVU968
 3359 009c 3320     		movs	r0, #51
 3360              	.L356:
2334:src/keys.c    **** 
 3361              		.loc 1 2334 1 view .LVU969
 3362 009e 03B0     		add	sp, sp, #12
 3363              		.cfi_remember_state
 3364              		.cfi_def_cfa_offset 36
 3365              		@ sp needed
 3366 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3367              	.LVL258:
 3368              	.L488:
 3369              		.cfi_restore_state
2070:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3370              		.loc 1 2070 2 is_stmt 1 view .LVU970
2070:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3371              		.loc 1 2070 35 is_stmt 0 view .LVU971
 3372 00a4 292F     		cmp	r7, #41
 3373 00a6 00F0C080 		beq	.L361
2071:src/keys.c    **** 
 3374              		.loc 1 2071 11 view .LVU972
 3375 00aa 0128     		cmp	r0, #1
 3376 00ac 00F0D180 		beq	.L362
2071:src/keys.c    **** 
 3377              		.loc 1 2071 32 discriminator 3 view .LVU973
 3378 00b0 B9F1090F 		cmp	r9, #9
 3379 00b4 00F2B680 		bhi	.L363
 3380              	.LVL259:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 130


2073:src/keys.c    **** 	if (base >= NUM_RARG) {
 3381              		.loc 1 2073 2 is_stmt 1 view .LVU974
2074:src/keys.c    **** 		reset_arg();
 3382              		.loc 1 2074 2 view .LVU975
2074:src/keys.c    **** 		reset_arg();
 3383              		.loc 1 2074 5 is_stmt 0 view .LVU976
 3384 00b8 8E2D     		cmp	r5, #142
 3385 00ba EDD8     		bhi	.L388
2079:src/keys.c    **** 	  switch (n) {
 3386              		.loc 1 2079 35 view .LVU977
 3387 00bc 6169     		ldr	r1, [r4, #20]
 3388 00be 11F4103F 		tst	r1, #147456
2069:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3389              		.loc 1 2069 61 view .LVU978
 3390 00c2 4FF0010C 		mov	ip, #1
2079:src/keys.c    **** 	  switch (n) {
 3391              		.loc 1 2079 35 view .LVU979
 3392 00c6 05D1     		bne	.L370
 3393              	.L430:
2080:src/keys.c    **** 	  case regX_idx:
 3394              		.loc 1 2080 4 view .LVU980
 3395 00c8 16B1     		cbz	r6, .L372
 3396 00ca 721F     		subs	r2, r6, #5
 3397 00cc 042A     		cmp	r2, #4
 3398 00ce 01D8     		bhi	.L370
 3399              	.L372:
2095:src/keys.c    **** 	  }
 3400              		.loc 1 2095 6 is_stmt 1 view .LVU981
2095:src/keys.c    **** 	  }
 3401              		.loc 1 2095 13 is_stmt 0 view .LVU982
 3402 00d0 3046     		mov	r0, r6
 3403              	.LVL260:
2095:src/keys.c    **** 	  }
 3404              		.loc 1 2095 13 view .LVU983
 3405 00d2 E6E0     		b	.L482
 3406              	.LVL261:
 3407              	.L370:
2102:src/keys.c    **** 		// row column shorthand addressing
 3408              		.loc 1 2102 2 is_stmt 1 view .LVU984
2108:src/keys.c    **** 		switch ((int)c) {
 3409              		.loc 1 2108 2 view .LVU985
2108:src/keys.c    **** 		switch ((int)c) {
 3410              		.loc 1 2108 5 is_stmt 0 view .LVU986
 3411 00d4 4D2D     		cmp	r5, #77
 3412 00d6 00F0B180 		beq	.L489
2108:src/keys.c    **** 		switch ((int)c) {
 3413              		.loc 1 2108 23 discriminator 1 view .LVU987
 3414 00da 05F17302 		add	r2, r5, #115
 3415 00de D2B2     		uxtb	r2, r2
 3416 00e0 012A     		cmp	r2, #1
 3417 00e2 61D9     		bls	.L490
 3418              	.LVL262:
 3419              	.L379:
2139:src/keys.c    **** #else
 3420              		.loc 1 2139 3 is_stmt 1 view .LVU988
2139:src/keys.c    **** #else
 3421              		.loc 1 2139 11 is_stmt 0 view .LVU989
ARM GAS  /tmp/ccc9ZrJ3.s 			page 131


 3422 00e4 E577     		strb	r5, [r4, #31]
2162:src/keys.c    **** 	case K_F:
 3423              		.loc 1 2162 2 is_stmt 1 view .LVU990
 3424 00e6 2D2F     		cmp	r7, #45
 3425 00e8 D8D8     		bhi	.L481
 3426 00ea 01A3     		adr	r3, .L383
 3427 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3428              		.p2align 2
 3429              	.L383:
 3430 00f0 C1010000 		.word	.L400+1
 3431 00f4 C1010000 		.word	.L400+1
 3432 00f8 C1010000 		.word	.L400+1
 3433 00fc C1010000 		.word	.L400+1
 3434 0100 9D000000 		.word	.L481+1
 3435 0104 9D000000 		.word	.L481+1
 3436 0108 9D000000 		.word	.L481+1
 3437 010c 9D000000 		.word	.L481+1
 3438 0110 C1010000 		.word	.L400+1
 3439 0114 C1010000 		.word	.L400+1
 3440 0118 C1010000 		.word	.L400+1
 3441 011c C1010000 		.word	.L400+1
 3442 0120 45040000 		.word	.L399+1
 3443 0124 9D000000 		.word	.L481+1
 3444 0128 9D000000 		.word	.L481+1
 3445 012c 9D000000 		.word	.L481+1
 3446 0130 C7020000 		.word	.L398+1
 3447 0134 9D000000 		.word	.L481+1
 3448 0138 19020000 		.word	.L397+1
 3449 013c 9D000000 		.word	.L481+1
 3450 0140 9D000000 		.word	.L481+1
 3451 0144 9D000000 		.word	.L481+1
 3452 0148 F3020000 		.word	.L396+1
 3453 014c 9D000000 		.word	.L481+1
 3454 0150 FF020000 		.word	.L395+1
 3455 0154 0B030000 		.word	.L394+1
 3456 0158 9D000000 		.word	.L481+1
 3457 015c 9D000000 		.word	.L481+1
 3458 0160 81020000 		.word	.L393+1
 3459 0164 9D000000 		.word	.L481+1
 3460 0168 9D000000 		.word	.L481+1
 3461 016c 1F030000 		.word	.L392+1
 3462 0170 4D040000 		.word	.L391+1
 3463 0174 41030000 		.word	.L390+1
 3464 0178 4D030000 		.word	.L389+1
 3465 017c 9D000000 		.word	.L481+1
 3466 0180 99000000 		.word	.L388+1
 3467 0184 9D000000 		.word	.L481+1
 3468 0188 67030000 		.word	.L387+1
 3469 018c 9D000000 		.word	.L481+1
 3470 0190 AD030000 		.word	.L386+1
 3471 0194 CD030000 		.word	.L385+1
 3472 0198 9D000000 		.word	.L481+1
 3473 019c 9D000000 		.word	.L481+1
 3474 01a0 ED030000 		.word	.L384+1
 3475 01a4 25040000 		.word	.L382+1
 3476              	.LVL263:
 3477              		.p2align 1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 132


 3478              	.L490:
2109:src/keys.c    **** 		case K_UP:	// up arrow
 3479              		.loc 1 2109 3 view .LVU991
 3480 01a8 122F     		cmp	r7, #18
 3481 01aa 2FD0     		beq	.L426
 3482 01ac 182F     		cmp	r7, #24
 3483 01ae 01D0     		beq	.L427
 3484 01b0 012F     		cmp	r7, #1
 3485 01b2 97D1     		bne	.L379
 3486              	.L427:
2125:src/keys.c    **** 		    base = RARG_SIG0;
 3487              		.loc 1 2125 5 view .LVU992
2129:src/keys.c    **** 		    base = RARG_FIX;
 3488              		.loc 1 2129 5 view .LVU993
2129:src/keys.c    **** 		    base = RARG_FIX;
 3489              		.loc 1 2129 8 is_stmt 0 view .LVU994
 3490 01b4 8D2D     		cmp	r5, #141
 3491 01b6 7DD1     		bne	.L491
 3492 01b8 4D23     		movs	r3, #77
 3493 01ba 0093     		str	r3, [sp]
 3494              	.LVL264:
2130:src/keys.c    **** 		    break;
 3495              		.loc 1 2130 12 view .LVU995
 3496 01bc 1D46     		mov	r5, r3
 3497 01be 91E7     		b	.L379
 3498              	.LVL265:
 3499              	.L400:
2217:src/keys.c    **** 			return arg_eval(n);
 3500              		.loc 1 2217 4 is_stmt 1 view .LVU996
2217:src/keys.c    **** 			return arg_eval(n);
 3501              		.loc 1 2217 8 is_stmt 0 view .LVU997
 3502 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2217:src/keys.c    **** 			return arg_eval(n);
 3503              		.loc 1 2217 7 view .LVU998
 3504 01c2 5306     		lsls	r3, r2, #25
 3505 01c4 6AD4     		bmi	.L415
2217:src/keys.c    **** 			return arg_eval(n);
 3506              		.loc 1 2217 19 discriminator 1 view .LVU999
 3507 01c6 B8F1000F 		cmp	r8, #0
 3508 01ca 67D1     		bne	.L415
2219:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3509              		.loc 1 2219 3 is_stmt 1 view .LVU1000
2219:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3510              		.loc 1 2219 6 is_stmt 0 view .LVU1001
 3511 01cc 032F     		cmp	r7, #3
 3512 01ce 3FF665AF 		bhi	.L481
2220:src/keys.c    **** 		break;
 3513              		.loc 1 2220 4 is_stmt 1 view .LVU1002
 3514              	.LVL266:
 3515              	.LBB462:
 3516              	.LBI462:
1990:src/keys.c    **** 	const unsigned int b = CmdBase;
 3517              		.loc 1 1990 12 view .LVU1003
 3518              	.LBB463:
1991:src/keys.c    **** 
 3519              		.loc 1 1991 2 view .LVU1004
1993:src/keys.c    **** 	{
ARM GAS  /tmp/ccc9ZrJ3.s 			page 133


 3520              		.loc 1 1993 2 view .LVU1005
1993:src/keys.c    **** 	{
 3521              		.loc 1 1993 16 is_stmt 0 view .LVU1006
 3522 01d2 009B     		ldr	r3, [sp]
 3523 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3524 01d8 1801     		lsls	r0, r3, #4
 3525 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1993:src/keys.c    **** 	{
 3526              		.loc 1 1993 5 view .LVU1007
 3527 01dc 8D06     		lsls	r5, r1, #26
 3528 01de 05D4     		bmi	.L406
1993:src/keys.c    **** 	{
 3529              		.loc 1 1993 40 view .LVU1008
 3530 01e0 A3F15109 		sub	r9, r3, #81
1993:src/keys.c    **** 	{
 3531              		.loc 1 1993 23 view .LVU1009
 3532 01e4 B9F10A0F 		cmp	r9, #10
 3533 01e8 3FF658AF 		bhi	.L481
 3534              	.L406:
1995:src/keys.c    **** 			return STATE_UNFINISHED;
 3535              		.loc 1 1995 3 is_stmt 1 view .LVU1010
1995:src/keys.c    **** 			return STATE_UNFINISHED;
 3536              		.loc 1 1995 6 is_stmt 0 view .LVU1011
 3537 01ec 1106     		lsls	r1, r2, #24
 3538 01ee 3FF555AF 		bmi	.L481
1995:src/keys.c    **** 			return STATE_UNFINISHED;
 3539              		.loc 1 1995 18 view .LVU1012
 3540 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3541 01f4 002A     		cmp	r2, #0
 3542 01f6 7FF451AF 		bne	.L481
1997:src/keys.c    **** 			return STATE_UNFINISHED;
 3543              		.loc 1 1997 3 is_stmt 1 view .LVU1013
1997:src/keys.c    **** 			return STATE_UNFINISHED;
 3544              		.loc 1 1997 17 is_stmt 0 view .LVU1014
 3545 01fa 0AEB0003 		add	r3, r10, r0
1997:src/keys.c    **** 			return STATE_UNFINISHED;
 3546              		.loc 1 1997 6 view .LVU1015
 3547 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3548 0200 632B     		cmp	r3, #99
 3549 0202 7FF64BAF 		bls	.L481
1999:src/keys.c    **** 	}
 3550              		.loc 1 1999 3 is_stmt 1 view .LVU1016
1999:src/keys.c    **** 	}
 3551              		.loc 1 1999 10 is_stmt 0 view .LVU1017
 3552 0206 07F16400 		add	r0, r7, #100
 3553 020a 34E0     		b	.L483
 3554              	.LVL267:
 3555              	.L426:
1999:src/keys.c    **** 	}
 3556              		.loc 1 1999 10 view .LVU1018
 3557              	.LBE463:
 3558              	.LBE462:
2111:src/keys.c    **** 		    base = RARG_SIG;
 3559              		.loc 1 2111 5 is_stmt 1 view .LVU1019
2115:src/keys.c    **** 		    base = RARG_SIG0;
 3560              		.loc 1 2115 5 view .LVU1020
2115:src/keys.c    **** 		    base = RARG_SIG0;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 134


 3561              		.loc 1 2115 8 is_stmt 0 view .LVU1021
 3562 020c 8D2D     		cmp	r5, #141
 3563 020e 01D0     		beq	.L476
2119:src/keys.c    **** 		    base = RARG_FIX;
 3564              		.loc 1 2119 5 is_stmt 1 view .LVU1022
2119:src/keys.c    **** 		    base = RARG_FIX;
 3565              		.loc 1 2119 8 is_stmt 0 view .LVU1023
 3566 0210 8E2D     		cmp	r5, #142
 3567 0212 56D0     		beq	.L492
 3568              	.L476:
2139:src/keys.c    **** #else
 3569              		.loc 1 2139 3 is_stmt 1 view .LVU1024
2139:src/keys.c    **** #else
 3570              		.loc 1 2139 11 is_stmt 0 view .LVU1025
 3571 0214 8E23     		movs	r3, #142
 3572              	.LVL268:
 3573              	.L480:
2139:src/keys.c    **** #else
 3574              		.loc 1 2139 11 view .LVU1026
 3575 0216 E377     		strb	r3, [r4, #31]
2162:src/keys.c    **** 	case K_F:
 3576              		.loc 1 2162 2 is_stmt 1 view .LVU1027
 3577              	.L397:
2279:src/keys.c    **** 		break;
 3578              		.loc 1 2279 3 view .LVU1028
 3579 0218 0021     		movs	r1, #0
 3580 021a 0620     		movs	r0, #6
 3581              	.LVL269:
2279:src/keys.c    **** 		break;
 3582              		.loc 1 2279 3 is_stmt 0 view .LVU1029
 3583 021c FFF7FEFF 		bl	arg_storcl
 3584              	.LVL270:
2280:src/keys.c    **** 
 3585              		.loc 1 2280 3 is_stmt 1 view .LVU1030
2333:src/keys.c    **** }
 3586              		.loc 1 2333 9 is_stmt 0 view .LVU1031
 3587 0220 3320     		movs	r0, #51
2280:src/keys.c    **** 
 3588              		.loc 1 2280 3 view .LVU1032
 3589 0222 3CE7     		b	.L356
 3590              	.LVL271:
 3591              	.L363:
2071:src/keys.c    **** 
 3592              		.loc 1 2071 42 discriminator 4 view .LVU1033
 3593 0224 19F0800F 		tst	r9, #128
 3594 0228 13D0     		beq	.L362
 3595              	.L361:
 3596              	.LVL272:
2073:src/keys.c    **** 	if (base >= NUM_RARG) {
 3597              		.loc 1 2073 2 is_stmt 1 view .LVU1034
2074:src/keys.c    **** 		reset_arg();
 3598              		.loc 1 2074 5 is_stmt 0 view .LVU1035
 3599 022a 8E2D     		cmp	r5, #142
2073:src/keys.c    **** 	if (base >= NUM_RARG) {
 3600              		.loc 1 2073 4 view .LVU1036
 3601 022c 29F08006 		bic	r6, r9, #128
 3602              	.LVL273:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 135


2074:src/keys.c    **** 		reset_arg();
 3603              		.loc 1 2074 2 is_stmt 1 view .LVU1037
2069:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3604              		.loc 1 2069 61 is_stmt 0 view .LVU1038
 3605 0230 98BF     		it	ls
 3606 0232 4FF0010C 		movls	ip, #1
2074:src/keys.c    **** 		reset_arg();
 3607              		.loc 1 2074 5 view .LVU1039
 3608 0236 7FF61AAF 		bls	.L368
 3609 023a 2DE7     		b	.L388
 3610              	.L489:
2109:src/keys.c    **** 		case K_UP:	// up arrow
 3611              		.loc 1 2109 3 is_stmt 1 view .LVU1040
 3612 023c 122F     		cmp	r7, #18
 3613 023e 00F00B81 		beq	.L438
 3614 0242 182F     		cmp	r7, #24
 3615 0244 02D0     		beq	.L440
 3616 0246 012F     		cmp	r7, #1
 3617 0248 7FF44CAF 		bne	.L379
 3618              	.L440:
 3619 024c 8E25     		movs	r5, #142
 3620              	.LVL274:
2126:src/keys.c    **** 		    break;
 3621              		.loc 1 2126 12 is_stmt 0 view .LVU1041
 3622 024e 0095     		str	r5, [sp]
 3623 0250 48E7     		b	.L379
 3624              	.LVL275:
 3625              	.L362:
2073:src/keys.c    **** 	if (base >= NUM_RARG) {
 3626              		.loc 1 2073 2 is_stmt 1 view .LVU1042
2074:src/keys.c    **** 		reset_arg();
 3627              		.loc 1 2074 2 view .LVU1043
2074:src/keys.c    **** 		reset_arg();
 3628              		.loc 1 2074 5 is_stmt 0 view .LVU1044
 3629 0252 8E2D     		cmp	r5, #142
 3630 0254 3FF620AF 		bhi	.L388
2102:src/keys.c    **** 		// row column shorthand addressing
 3631              		.loc 1 2102 2 is_stmt 1 view .LVU1045
2104:src/keys.c    **** 
 3632              		.loc 1 2104 3 view .LVU1046
 3633              	.LVL276:
 3634              	.LBB464:
 3635              	.LBI464:
 179:src/keys.c    **** {
 3636              		.loc 1 179 5 view .LVU1047
 3637              	.LBB465:
 181:src/keys.c    **** }
 3638              		.loc 1 181 2 view .LVU1048
 181:src/keys.c    **** }
 3639              		.loc 1 181 18 is_stmt 0 view .LVU1049
 3640 0258 374B     		ldr	r3, .L500+12
 3641 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3642              		.loc 1 181 24 view .LVU1050
 3643 025e 03F0FC00 		and	r0, r3, #252
 3644              	.LVL277:
 181:src/keys.c    **** }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 136


 3645              		.loc 1 181 24 view .LVU1051
 3646 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3647              		.loc 1 181 18 view .LVU1052
 3648 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3649              		.loc 1 181 24 view .LVU1053
 3650 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3651              		.loc 1 181 33 view .LVU1054
 3652 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3653              		.loc 1 181 12 view .LVU1055
 3654 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3655              		.loc 1 181 33 view .LVU1056
 3656 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3657              	.LBE465:
 3658              	.LBE464:
2104:src/keys.c    **** 
 3659              		.loc 1 2104 10 view .LVU1057
 3660 0274 3844     		add	r0, r0, r7
 3661              	.LVL278:
 3662              	.L483:
2334:src/keys.c    **** 
 3663              		.loc 1 2334 1 view .LVU1058
 3664 0276 03B0     		add	sp, sp, #12
 3665              		.cfi_remember_state
 3666              		.cfi_def_cfa_offset 36
 3667              		@ sp needed
 3668 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3669              		.cfi_restore 14
 3670              		.cfi_restore 11
 3671              		.cfi_restore 10
 3672              		.cfi_restore 9
 3673              		.cfi_restore 8
 3674              		.cfi_restore 7
 3675              		.cfi_restore 6
 3676              		.cfi_restore 5
 3677              		.cfi_restore 4
 3678              		.cfi_def_cfa_offset 0
 3679              	.LVL279:
2104:src/keys.c    **** 
 3680              		.loc 1 2104 10 view .LVU1059
 3681 027c FFF7FEBF 		b	arg_eval
 3682              	.LVL280:
 3683              	.L393:
 3684              		.cfi_restore_state
2239:src/keys.c    **** 			return arg_eval(n);
 3685              		.loc 1 2239 3 is_stmt 1 view .LVU1060
2239:src/keys.c    **** 			return arg_eval(n);
 3686              		.loc 1 2239 7 is_stmt 0 view .LVU1061
 3687 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2239:src/keys.c    **** 			return arg_eval(n);
 3688              		.loc 1 2239 6 view .LVU1062
 3689 0282 5F06     		lsls	r7, r3, #25
 3690 0284 0AD4     		bmi	.L415
ARM GAS  /tmp/ccc9ZrJ3.s 			page 137


2239:src/keys.c    **** 			return arg_eval(n);
 3691              		.loc 1 2239 25 discriminator 1 view .LVU1063
 3692 0286 0121     		movs	r1, #1
 3693 0288 0320     		movs	r0, #3
 3694              	.LVL281:
2239:src/keys.c    **** 			return arg_eval(n);
 3695              		.loc 1 2239 25 discriminator 1 view .LVU1064
 3696 028a FFF7FEFF 		bl	arg_storcl
 3697              	.LVL282:
2239:src/keys.c    **** 			return arg_eval(n);
 3698              		.loc 1 2239 18 discriminator 1 view .LVU1065
 3699 028e 0028     		cmp	r0, #0
 3700 0290 7FF404AF 		bne	.L481
2239:src/keys.c    **** 			return arg_eval(n);
 3701              		.loc 1 2239 63 discriminator 2 view .LVU1066
 3702 0294 B8F1000F 		cmp	r8, #0
 3703 0298 3FF400AF 		beq	.L481
 3704              	.L415:
2240:src/keys.c    **** 		break;
 3705              		.loc 1 2240 4 is_stmt 1 view .LVU1067
2240:src/keys.c    **** 		break;
 3706              		.loc 1 2240 11 is_stmt 0 view .LVU1068
 3707 029c 3046     		mov	r0, r6
 3708 029e EAE7     		b	.L483
 3709              	.LVL283:
 3710              	.L376:
2086:src/keys.c    **** 	  case regT_idx:
 3711              		.loc 1 2086 6 is_stmt 1 view .LVU1069
2086:src/keys.c    **** 	  case regT_idx:
 3712              		.loc 1 2086 13 is_stmt 0 view .LVU1070
 3713 02a0 0320     		movs	r0, #3
 3714              	.LVL284:
 3715              	.L482:
2334:src/keys.c    **** 
 3716              		.loc 1 2334 1 view .LVU1071
 3717 02a2 03B0     		add	sp, sp, #12
 3718              		.cfi_remember_state
 3719              		.cfi_def_cfa_offset 36
 3720              		@ sp needed
 3721 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3722              		.cfi_restore 14
 3723              		.cfi_restore 11
 3724              		.cfi_restore 10
 3725              		.cfi_restore 9
 3726              		.cfi_restore 8
 3727              		.cfi_restore 7
 3728              		.cfi_restore 6
 3729              		.cfi_restore 5
 3730              		.cfi_restore 4
 3731              		.cfi_def_cfa_offset 0
 3732              	.LVL285:
2084:src/keys.c    **** 	  case regZ_idx:
 3733              		.loc 1 2084 13 view .LVU1072
 3734 02a8 FFF7FEBF 		b	arg_digit
 3735              	.LVL286:
 3736              	.L377:
 3737              		.cfi_restore_state
ARM GAS  /tmp/ccc9ZrJ3.s 			page 138


2084:src/keys.c    **** 	  case regZ_idx:
 3738              		.loc 1 2084 6 is_stmt 1 view .LVU1073
2084:src/keys.c    **** 	  case regZ_idx:
 3739              		.loc 1 2084 13 is_stmt 0 view .LVU1074
 3740 02ac 0220     		movs	r0, #2
 3741              	.LVL287:
2084:src/keys.c    **** 	  case regZ_idx:
 3742              		.loc 1 2084 13 view .LVU1075
 3743 02ae F8E7     		b	.L482
 3744              	.LVL288:
 3745              	.L374:
2088:src/keys.c    **** 	  case 5:
 3746              		.loc 1 2088 6 is_stmt 1 view .LVU1076
2088:src/keys.c    **** 	  case 5:
 3747              		.loc 1 2088 13 is_stmt 0 view .LVU1077
 3748 02b0 0420     		movs	r0, #4
 3749              	.LVL289:
2088:src/keys.c    **** 	  case 5:
 3750              		.loc 1 2088 13 view .LVU1078
 3751 02b2 F6E7     		b	.L482
 3752              	.LVL290:
 3753              	.L491:
2133:src/keys.c    **** 		    base = RARG_SIG;
 3754              		.loc 1 2133 5 is_stmt 1 view .LVU1079
2133:src/keys.c    **** 		    base = RARG_SIG;
 3755              		.loc 1 2133 8 is_stmt 0 view .LVU1080
 3756 02b4 8E2D     		cmp	r5, #142
 3757 02b6 40F00B81 		bne	.L436
 3758 02ba 8D23     		movs	r3, #141
 3759 02bc 0093     		str	r3, [sp]
 3760              	.LVL291:
2134:src/keys.c    **** 		    break;
 3761              		.loc 1 2134 12 view .LVU1081
 3762 02be 1D46     		mov	r5, r3
 3763 02c0 10E7     		b	.L379
 3764              	.LVL292:
 3765              	.L492:
2134:src/keys.c    **** 		    break;
 3766              		.loc 1 2134 12 view .LVU1082
 3767 02c2 4D23     		movs	r3, #77
 3768 02c4 A7E7     		b	.L480
 3769              	.LVL293:
 3770              	.L398:
2308:src/keys.c    **** 			if (State2.dot)
 3771              		.loc 1 2308 3 is_stmt 1 view .LVU1083
2308:src/keys.c    **** 			if (State2.dot)
 3772              		.loc 1 2308 13 is_stmt 0 view .LVU1084
 3773 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2308:src/keys.c    **** 			if (State2.dot)
 3774              		.loc 1 2308 6 view .LVU1085
 3775 02c8 002B     		cmp	r3, #0
 3776 02ca 40F0EC80 		bne	.L422
2309:src/keys.c    **** 				State2.dot = 0;
 3777              		.loc 1 2309 4 is_stmt 1 view .LVU1086
2309:src/keys.c    **** 				State2.dot = 0;
 3778              		.loc 1 2309 8 is_stmt 0 view .LVU1087
 3779 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 139


2309:src/keys.c    **** 				State2.dot = 0;
 3780              		.loc 1 2309 7 view .LVU1088
 3781 02d0 13F04001 		ands	r1, r3, #64
 3782 02d4 40F0A080 		bne	.L423
2311:src/keys.c    **** 				State2.local = 0;
 3783              		.loc 1 2311 9 is_stmt 1 view .LVU1089
2311:src/keys.c    **** 				State2.local = 0;
 3784              		.loc 1 2311 13 is_stmt 0 view .LVU1090
 3785 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2311:src/keys.c    **** 				State2.local = 0;
 3786              		.loc 1 2311 12 view .LVU1091
 3787 02da 12F00100 		ands	r0, r2, #1
 3788              	.LVL294:
2311:src/keys.c    **** 				State2.local = 0;
 3789              		.loc 1 2311 12 view .LVU1092
 3790 02de 40F01181 		bne	.L493
2313:src/keys.c    **** 				State2.ind = 0;
 3791              		.loc 1 2313 9 is_stmt 1 view .LVU1093
2313:src/keys.c    **** 				State2.ind = 0;
 3792              		.loc 1 2313 12 is_stmt 0 view .LVU1094
 3793 02e2 1906     		lsls	r1, r3, #24
 3794 02e4 7FF5D8AE 		bpl	.L388
2314:src/keys.c    **** 			else
 3795              		.loc 1 2314 5 is_stmt 1 view .LVU1095
2314:src/keys.c    **** 			else
 3796              		.loc 1 2314 16 is_stmt 0 view .LVU1096
 3797 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3798 02ec 6375     		strb	r3, [r4, #21]
2333:src/keys.c    **** }
 3799              		.loc 1 2333 9 view .LVU1097
 3800 02ee 3320     		movs	r0, #51
 3801 02f0 D5E6     		b	.L356
 3802              	.LVL295:
 3803              	.L396:
2243:src/keys.c    **** 		break;
 3804              		.loc 1 2243 3 is_stmt 1 view .LVU1098
 3805 02f2 0121     		movs	r1, #1
 3806 02f4 0420     		movs	r0, #4
 3807              	.LVL296:
2243:src/keys.c    **** 		break;
 3808              		.loc 1 2243 3 is_stmt 0 view .LVU1099
 3809 02f6 FFF7FEFF 		bl	arg_storcl
 3810              	.LVL297:
2244:src/keys.c    **** #else
 3811              		.loc 1 2244 3 is_stmt 1 view .LVU1100
2333:src/keys.c    **** }
 3812              		.loc 1 2333 9 is_stmt 0 view .LVU1101
 3813 02fa 3320     		movs	r0, #51
2244:src/keys.c    **** #else
 3814              		.loc 1 2244 3 view .LVU1102
 3815 02fc CFE6     		b	.L356
 3816              	.LVL298:
 3817              	.L395:
2283:src/keys.c    **** 		break;
 3818              		.loc 1 2283 3 is_stmt 1 view .LVU1103
 3819 02fe 0021     		movs	r1, #0
 3820 0300 0520     		movs	r0, #5
ARM GAS  /tmp/ccc9ZrJ3.s 			page 140


 3821              	.LVL299:
2283:src/keys.c    **** 		break;
 3822              		.loc 1 2283 3 is_stmt 0 view .LVU1104
 3823 0302 FFF7FEFF 		bl	arg_storcl
 3824              	.LVL300:
2284:src/keys.c    **** 
 3825              		.loc 1 2284 3 is_stmt 1 view .LVU1105
2333:src/keys.c    **** }
 3826              		.loc 1 2333 9 is_stmt 0 view .LVU1106
 3827 0306 3320     		movs	r0, #51
2284:src/keys.c    **** 
 3828              		.loc 1 2284 3 view .LVU1107
 3829 0308 C9E6     		b	.L356
 3830              	.LVL301:
 3831              	.L394:
2186:src/keys.c    **** 	    return process_arg_shuffle(3);
 3832              		.loc 1 2186 4 is_stmt 1 view .LVU1108
2186:src/keys.c    **** 	    return process_arg_shuffle(3);
 3833              		.loc 1 2186 8 is_stmt 0 view .LVU1109
 3834 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2186:src/keys.c    **** 	    return process_arg_shuffle(3);
 3835              		.loc 1 2186 7 view .LVU1110
 3836 030c 9507     		lsls	r5, r2, #30
 3837 030e 7FF557AF 		bpl	.L400
2187:src/keys.c    **** 	case K51:       // X
 3838              		.loc 1 2187 6 is_stmt 1 view .LVU1111
2187:src/keys.c    **** 	case K51:       // X
 3839              		.loc 1 2187 13 is_stmt 0 view .LVU1112
 3840 0312 0320     		movs	r0, #3
 3841              	.LVL302:
 3842              	.L484:
2334:src/keys.c    **** 
 3843              		.loc 1 2334 1 view .LVU1113
 3844 0314 03B0     		add	sp, sp, #12
 3845              		.cfi_remember_state
 3846              		.cfi_def_cfa_offset 36
 3847              		@ sp needed
 3848 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3849              		.cfi_restore 14
 3850              		.cfi_restore 11
 3851              		.cfi_restore 10
 3852              		.cfi_restore 9
 3853              		.cfi_restore 8
 3854              		.cfi_restore 7
 3855              		.cfi_restore 6
 3856              		.cfi_restore 5
 3857              		.cfi_restore 4
 3858              		.cfi_def_cfa_offset 0
 3859              	.LVL303:
2196:src/keys.c    **** #else
 3860              		.loc 1 2196 13 view .LVU1114
 3861 031a FFF7FEBF 		b	process_arg_shuffle
 3862              	.LVL304:
 3863              	.L392:
 3864              		.cfi_restore_state
2189:src/keys.c    **** 	    return process_arg_shuffle(0);
 3865              		.loc 1 2189 4 is_stmt 1 view .LVU1115
ARM GAS  /tmp/ccc9ZrJ3.s 			page 141


2189:src/keys.c    **** 	    return process_arg_shuffle(0);
 3866              		.loc 1 2189 8 is_stmt 0 view .LVU1116
 3867 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2189:src/keys.c    **** 	    return process_arg_shuffle(0);
 3868              		.loc 1 2189 7 view .LVU1117
 3869 0320 9007     		lsls	r0, r2, #30
 3870              	.LVL305:
2189:src/keys.c    **** 	    return process_arg_shuffle(0);
 3871              		.loc 1 2189 7 view .LVU1118
 3872 0322 7FF54DAF 		bpl	.L400
2190:src/keys.c    **** 	case K52:	// Y
 3873              		.loc 1 2190 6 is_stmt 1 view .LVU1119
2190:src/keys.c    **** 	case K52:	// Y
 3874              		.loc 1 2190 13 is_stmt 0 view .LVU1120
 3875 0326 0020     		movs	r0, #0
 3876 0328 F4E7     		b	.L484
 3877              	.L501:
 3878 032a 00BF     		.align	2
 3879              	.L500:
 3880 032c 00000000 		.word	StateWhileOn
 3881 0330 00000000 		.word	.LANCHOR6
 3882 0334 00000000 		.word	.LANCHOR5
 3883 0338 ABAAAAAA 		.word	-1431655765
 3884 033c 00000000 		.word	argcmds
 3885              	.LVL306:
 3886              	.L390:
2195:src/keys.c    **** 	    return process_arg_shuffle(2);
 3887              		.loc 1 2195 4 is_stmt 1 view .LVU1121
2195:src/keys.c    **** 	    return process_arg_shuffle(2);
 3888              		.loc 1 2195 8 is_stmt 0 view .LVU1122
 3889 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2195:src/keys.c    **** 	    return process_arg_shuffle(2);
 3890              		.loc 1 2195 7 view .LVU1123
 3891 0342 9207     		lsls	r2, r2, #30
 3892 0344 7FF53CAF 		bpl	.L400
2196:src/keys.c    **** #else
 3893              		.loc 1 2196 6 is_stmt 1 view .LVU1124
2196:src/keys.c    **** #else
 3894              		.loc 1 2196 13 is_stmt 0 view .LVU1125
 3895 0348 0220     		movs	r0, #2
 3896              	.LVL307:
2196:src/keys.c    **** #else
 3897              		.loc 1 2196 13 view .LVU1126
 3898 034a E3E7     		b	.L484
 3899              	.LVL308:
 3900              	.L389:
2232:src/keys.c    **** 			reset_arg();
 3901              		.loc 1 2232 3 is_stmt 1 view .LVU1127
2232:src/keys.c    **** 			reset_arg();
 3902              		.loc 1 2232 6 is_stmt 0 view .LVU1128
 3903 034c 009B     		ldr	r3, [sp]
 3904 034e 212B     		cmp	r3, #33
 3905 0350 00F0B980 		beq	.L412
2232:src/keys.c    **** 			reset_arg();
 3906              		.loc 1 2232 25 discriminator 1 view .LVU1129
 3907 0354 732B     		cmp	r3, #115
 3908 0356 00F0B680 		beq	.L412
ARM GAS  /tmp/ccc9ZrJ3.s 			page 142


2236:src/keys.c    **** 		break;
 3909              		.loc 1 2236 3 is_stmt 1 view .LVU1130
 3910 035a 0121     		movs	r1, #1
 3911 035c 0220     		movs	r0, #2
 3912              	.LVL309:
2236:src/keys.c    **** 		break;
 3913              		.loc 1 2236 3 is_stmt 0 view .LVU1131
 3914 035e FFF7FEFF 		bl	arg_storcl
 3915              	.LVL310:
2237:src/keys.c    **** 	case K44:		// multiply
 3916              		.loc 1 2237 3 is_stmt 1 view .LVU1132
2333:src/keys.c    **** }
 3917              		.loc 1 2333 9 is_stmt 0 view .LVU1133
 3918 0362 3320     		movs	r0, #51
2237:src/keys.c    **** 	case K44:		// multiply
 3919              		.loc 1 2237 3 view .LVU1134
 3920 0364 9BE6     		b	.L356
 3921              	.LVL311:
 3922              	.L387:
2224:src/keys.c    **** 
 3923              		.loc 1 2224 3 is_stmt 1 view .LVU1135
 3924              	.LBB466:
 3925              	.LBI466:
2031:src/keys.c    **** 
 3926              		.loc 1 2031 12 view .LVU1136
 3927              	.LBB467:
2033:src/keys.c    **** 		// Only valid at beginning of entry
 3928              		.loc 1 2033 2 view .LVU1137
2033:src/keys.c    **** 		// Only valid at beginning of entry
 3929              		.loc 1 2033 5 is_stmt 0 view .LVU1138
 3930 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3931 0368 002A     		cmp	r2, #0
 3932 036a 7FF497AE 		bne	.L481
2035:src/keys.c    **** 			// '..' or ENTER '.' = X
 3933              		.loc 1 2035 3 is_stmt 1 view .LVU1139
2035:src/keys.c    **** 			// '..' or ENTER '.' = X
 3934              		.loc 1 2035 6 is_stmt 0 view .LVU1140
 3935 036e 11F4A03F 		tst	r1, #81920
 3936 0372 40F0C180 		bne	.L494
2040:src/keys.c    **** 			// local register or flag select
 3937              		.loc 1 2040 3 is_stmt 1 view .LVU1141
2040:src/keys.c    **** 			// local register or flag select
 3938              		.loc 1 2040 20 is_stmt 0 view .LVU1142
 3939 0376 009B     		ldr	r3, [sp]
 3940 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3941 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2040:src/keys.c    **** 			// local register or flag select
 3942              		.loc 1 2040 6 view .LVU1143
 3943 037e 1A07     		lsls	r2, r3, #28
 3944 0380 00F1A880 		bmi	.L408
2040:src/keys.c    **** 			// local register or flag select
 3945              		.loc 1 2040 27 view .LVU1144
 3946 0384 94F91530 		ldrsb	r3, [r4, #21]
 3947 0388 002B     		cmp	r3, #0
 3948 038a C0F2A380 		blt	.L408
2044:src/keys.c    **** 			// Special GTO . sequence
 3949              		.loc 1 2044 8 is_stmt 1 view .LVU1145
ARM GAS  /tmp/ccc9ZrJ3.s 			page 143


2044:src/keys.c    **** 			// Special GTO . sequence
 3950              		.loc 1 2044 29 is_stmt 0 view .LVU1146
 3951 038e 009B     		ldr	r3, [sp]
 3952 0390 A3F14409 		sub	r9, r3, #68
2044:src/keys.c    **** 			// Special GTO . sequence
 3953              		.loc 1 2044 11 view .LVU1147
 3954 0394 B9F1010F 		cmp	r9, #1
 3955 0398 3FF680AE 		bhi	.L481
2046:src/keys.c    **** 				State2.gtodot = 1;
 3956              		.loc 1 2046 4 is_stmt 1 view .LVU1148
2047:src/keys.c    **** 				reset_arg();
 3957              		.loc 1 2047 5 view .LVU1149
2047:src/keys.c    **** 				reset_arg();
 3958              		.loc 1 2047 19 is_stmt 0 view .LVU1150
 3959 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3960 039e 43F00103 		orr	r3, r3, #1
 3961 03a2 6375     		strb	r3, [r4, #21]
2048:src/keys.c    **** 			}
 3962              		.loc 1 2048 5 is_stmt 1 view .LVU1151
 3963 03a4 FFF7FEFF 		bl	reset_arg
 3964              	.LVL312:
2052:src/keys.c    **** }
 3965              		.loc 1 2052 9 is_stmt 0 view .LVU1152
 3966 03a8 3320     		movs	r0, #51
 3967 03aa 78E6     		b	.L356
 3968              	.LVL313:
 3969              	.L386:
2052:src/keys.c    **** }
 3970              		.loc 1 2052 9 view .LVU1153
 3971              	.LBE467:
 3972              	.LBE466:
2228:src/keys.c    **** 			return arg_eval(n);
 3973              		.loc 1 2228 3 is_stmt 1 view .LVU1154
2228:src/keys.c    **** 			return arg_eval(n);
 3974              		.loc 1 2228 7 is_stmt 0 view .LVU1155
 3975 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2228:src/keys.c    **** 			return arg_eval(n);
 3976              		.loc 1 2228 6 view .LVU1156
 3977 03ae 5B06     		lsls	r3, r3, #25
 3978 03b0 3FF574AF 		bmi	.L415
2228:src/keys.c    **** 			return arg_eval(n);
 3979              		.loc 1 2228 25 discriminator 1 view .LVU1157
 3980 03b4 0121     		movs	r1, #1
 3981 03b6 0846     		mov	r0, r1
 3982              	.LVL314:
2228:src/keys.c    **** 			return arg_eval(n);
 3983              		.loc 1 2228 25 discriminator 1 view .LVU1158
 3984 03b8 FFF7FEFF 		bl	arg_storcl
 3985              	.LVL315:
2228:src/keys.c    **** 			return arg_eval(n);
 3986              		.loc 1 2228 18 discriminator 1 view .LVU1159
 3987 03bc 0028     		cmp	r0, #0
 3988 03be 7FF46DAE 		bne	.L481
2239:src/keys.c    **** 			return arg_eval(n);
 3989              		.loc 1 2239 63 view .LVU1160
 3990 03c2 B8F1000F 		cmp	r8, #0
 3991 03c6 3FF469AE 		beq	.L481
ARM GAS  /tmp/ccc9ZrJ3.s 			page 144


 3992 03ca 67E7     		b	.L415
 3993              	.LVL316:
 3994              	.L385:
2164:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3995              		.loc 1 2164 3 is_stmt 1 view .LVU1161
2164:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3996              		.loc 1 2164 6 is_stmt 0 view .LVU1162
 3997 03cc BCF1000F 		cmp	ip, #0
 3998 03d0 3FF464AE 		beq	.L481
2165:src/keys.c    **** 		break;
 3999              		.loc 1 2165 4 is_stmt 1 view .LVU1163
 4000              	.LVL317:
 4001              	.LBB470:
 4002              	.LBI470:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4003              		.loc 1 104 20 view .LVU1164
 4004              	.LBB471:
 105:src/keys.c    **** 	State2.shifts = shift;
 4005              		.loc 1 105 2 view .LVU1165
 4006              	.LBB472:
 4007              	.LBI472:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4008              		.loc 1 96 13 view .LVU1166
 4009              	.LBB473:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4010              		.loc 1 97 2 view .LVU1167
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4011              		.loc 1 97 18 is_stmt 0 view .LVU1168
 4012 03d4 FFF7FEFF 		bl	shift_down
 4013              	.LVL318:
  98:src/keys.c    **** }
 4014              		.loc 1 98 2 is_stmt 1 view .LVU1169
 4015              	.LBE473:
 4016              	.LBE472:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4017              		.loc 1 106 2 view .LVU1170
 4018              	.LBE471:
 4019              	.LBE470:
2165:src/keys.c    **** 		break;
 4020              		.loc 1 2165 4 is_stmt 0 view .LVU1171
 4021 03d8 019B     		ldr	r3, [sp, #4]
 4022 03da B3F1010A 		subs	r10, r3, #1
 4023 03de 18BF     		it	ne
 4024 03e0 4FF0010A 		movne	r10, #1
 4025 03e4 84F810A0 		strb	r10, [r4, #16]
 4026              	.LBB476:
 4027              	.LBB474:
 108:src/keys.c    **** }
 4028              		.loc 1 108 2 is_stmt 1 view .LVU1172
 4029              	.LBE474:
 4030              	.LBE476:
2333:src/keys.c    **** }
 4031              		.loc 1 2333 9 is_stmt 0 view .LVU1173
 4032 03e8 3320     		movs	r0, #51
 4033              	.LBB477:
 4034              	.LBB475:
 108:src/keys.c    **** }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 145


 4035              		.loc 1 108 9 view .LVU1174
 4036 03ea 58E6     		b	.L356
 4037              	.LVL319:
 4038              	.L384:
 108:src/keys.c    **** }
 4039              		.loc 1 108 9 view .LVU1175
 4040              	.LBE475:
 4041              	.LBE477:
2169:src/keys.c    **** 			State2.ind = ! State2.ind;
 4042              		.loc 1 2169 3 is_stmt 1 view .LVU1176
2169:src/keys.c    **** 			State2.ind = ! State2.ind;
 4043              		.loc 1 2169 7 is_stmt 0 view .LVU1177
 4044 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2169:src/keys.c    **** 			State2.ind = ! State2.ind;
 4045              		.loc 1 2169 6 view .LVU1178
 4046 03ee 5706     		lsls	r7, r2, #25
 4047 03f0 3FF554AE 		bmi	.L481
2169:src/keys.c    **** 			State2.ind = ! State2.ind;
 4048              		.loc 1 2169 35 discriminator 1 view .LVU1179
 4049 03f4 009B     		ldr	r3, [sp]
 4050 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4051 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2169:src/keys.c    **** 			State2.ind = ! State2.ind;
 4052              		.loc 1 2169 19 discriminator 1 view .LVU1180
 4053 03fe DE07     		lsls	r6, r3, #31
 4054              	.LVL320:
2169:src/keys.c    **** 			State2.ind = ! State2.ind;
 4055              		.loc 1 2169 19 discriminator 1 view .LVU1181
 4056 0400 7FF54CAE 		bpl	.L481
2170:src/keys.c    **** 			if (! stack_reg)
 4057              		.loc 1 2170 4 is_stmt 1 view .LVU1182
2170:src/keys.c    **** 			if (! stack_reg)
 4058              		.loc 1 2170 17 is_stmt 0 view .LVU1183
 4059 0404 D343     		mvns	r3, r2
 4060 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2170:src/keys.c    **** 			if (! stack_reg)
 4061              		.loc 1 2170 15 view .LVU1184
 4062 040a 63F3C712 		bfi	r2, r3, #7, #1
 4063 040e 6275     		strb	r2, [r4, #21]
2171:src/keys.c    **** 				State2.dot = 0;
 4064              		.loc 1 2171 4 is_stmt 1 view .LVU1185
2171:src/keys.c    **** 				State2.dot = 0;
 4065              		.loc 1 2171 7 is_stmt 0 view .LVU1186
 4066 0410 B8F1000F 		cmp	r8, #0
 4067 0414 7FF442AE 		bne	.L481
 4068              	.L423:
2172:src/keys.c    **** 		}
 4069              		.loc 1 2172 5 is_stmt 1 view .LVU1187
2172:src/keys.c    **** 		}
 4070              		.loc 1 2172 16 is_stmt 0 view .LVU1188
 4071 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4072 041a 6FF38613 		bfc	r3, #6, #1
 4073 041e 6375     		strb	r3, [r4, #21]
2333:src/keys.c    **** }
 4074              		.loc 1 2333 9 view .LVU1189
 4075 0420 3320     		movs	r0, #51
 4076              	.LVL321:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 146


2333:src/keys.c    **** }
 4077              		.loc 1 2333 9 view .LVU1190
 4078 0422 3CE6     		b	.L356
 4079              	.LVL322:
 4080              	.L382:
2177:src/keys.c    **** 			break;
 4081              		.loc 1 2177 3 is_stmt 1 view .LVU1191
2177:src/keys.c    **** 			break;
 4082              		.loc 1 2177 18 is_stmt 0 view .LVU1192
 4083 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2177:src/keys.c    **** 			break;
 4084              		.loc 1 2177 6 view .LVU1193
 4085 0426 13F0C00F 		tst	r3, #192
 4086 042a 7FF437AE 		bne	.L481
2179:src/keys.c    **** 			CmdBase = RARG_STOM;
 4087              		.loc 1 2179 3 is_stmt 1 view .LVU1194
2179:src/keys.c    **** 			CmdBase = RARG_STOM;
 4088              		.loc 1 2179 6 is_stmt 0 view .LVU1195
 4089 042e 009B     		ldr	r3, [sp]
 4090 0430 032B     		cmp	r3, #3
 4091 0432 5DD0     		beq	.L495
2181:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4092              		.loc 1 2181 8 is_stmt 1 view .LVU1196
2181:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4093              		.loc 1 2181 11 is_stmt 0 view .LVU1197
 4094 0434 009B     		ldr	r3, [sp]
 4095 0436 0A2B     		cmp	r3, #10
 4096 0438 7FF430AE 		bne	.L481
2182:src/keys.c    **** 		break;
 4097              		.loc 1 2182 4 is_stmt 1 view .LVU1198
2182:src/keys.c    **** 		break;
 4098              		.loc 1 2182 12 is_stmt 0 view .LVU1199
 4099 043c 7823     		movs	r3, #120
 4100 043e E377     		strb	r3, [r4, #31]
2333:src/keys.c    **** }
 4101              		.loc 1 2333 9 view .LVU1200
 4102 0440 3320     		movs	r0, #51
 4103              	.LVL323:
2333:src/keys.c    **** }
 4104              		.loc 1 2333 9 view .LVU1201
 4105 0442 2CE6     		b	.L356
 4106              	.LVL324:
 4107              	.L399:
2287:src/keys.c    **** 			if (argcmds[base].label) {
 4108              		.loc 1 2287 3 is_stmt 1 view .LVU1202
2287:src/keys.c    **** 			if (argcmds[base].label) {
 4109              		.loc 1 2287 6 is_stmt 0 view .LVU1203
 4110 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4111 0446 4AB1     		cbz	r2, .L496
2301:src/keys.c    **** 			return arg_eval(State2.digval);
 4112              		.loc 1 2301 10 is_stmt 1 view .LVU1204
2302:src/keys.c    **** 		else if (stack_reg)
 4113              		.loc 1 2302 4 view .LVU1205
2302:src/keys.c    **** 		else if (stack_reg)
 4114              		.loc 1 2302 11 is_stmt 0 view .LVU1206
 4115 0448 2089     		ldrh	r0, [r4, #8]
 4116              	.LVL325:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 147


2302:src/keys.c    **** 		else if (stack_reg)
 4117              		.loc 1 2302 11 view .LVU1207
 4118 044a 14E7     		b	.L483
 4119              	.LVL326:
 4120              	.L391:
2192:src/keys.c    **** 	    return process_arg_shuffle(1);
 4121              		.loc 1 2192 4 is_stmt 1 view .LVU1208
2192:src/keys.c    **** 	    return process_arg_shuffle(1);
 4122              		.loc 1 2192 8 is_stmt 0 view .LVU1209
 4123 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2192:src/keys.c    **** 	    return process_arg_shuffle(1);
 4124              		.loc 1 2192 7 view .LVU1210
 4125 044e 9107     		lsls	r1, r2, #30
 4126 0450 7FF5B6AE 		bpl	.L400
2193:src/keys.c    **** 	case K53:       // Z
 4127              		.loc 1 2193 6 is_stmt 1 view .LVU1211
2193:src/keys.c    **** 	case K53:       // Z
 4128              		.loc 1 2193 13 is_stmt 0 view .LVU1212
 4129 0454 0120     		movs	r0, #1
 4130              	.LVL327:
2193:src/keys.c    **** 	case K53:       // Z
 4131              		.loc 1 2193 13 view .LVU1213
 4132 0456 5DE7     		b	.L484
 4133              	.LVL328:
 4134              	.L438:
2109:src/keys.c    **** 		case K_UP:	// up arrow
 4135              		.loc 1 2109 3 view .LVU1214
 4136 0458 8D23     		movs	r3, #141
 4137              	.LVL329:
2139:src/keys.c    **** #else
 4138              		.loc 1 2139 3 is_stmt 1 view .LVU1215
 4139 045a DCE6     		b	.L480
 4140              	.L496:
2287:src/keys.c    **** 			if (argcmds[base].label) {
 4141              		.loc 1 2287 43 is_stmt 0 discriminator 1 view .LVU1216
 4142 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4143 045e 12F0C00F 		tst	r2, #192
 4144 0462 13D1     		bne	.L417
2288:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4145              		.loc 1 2288 4 is_stmt 1 view .LVU1217
2288:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4146              		.loc 1 2288 21 is_stmt 0 view .LVU1218
 4147 0464 009B     		ldr	r3, [sp]
 4148 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4149 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2288:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4150              		.loc 1 2288 7 view .LVU1219
 4151 046c 9E06     		lsls	r6, r3, #26
 4152              	.LVL330:
2288:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4153              		.loc 1 2288 7 view .LVU1220
 4154 046e 4ED4     		bmi	.L497
2293:src/keys.c    **** 				reset_arg();
 4155              		.loc 1 2293 11 is_stmt 1 view .LVU1221
2293:src/keys.c    **** 				reset_arg();
 4156              		.loc 1 2293 14 is_stmt 0 view .LVU1222
 4157 0470 0099     		ldr	r1, [sp]
ARM GAS  /tmp/ccc9ZrJ3.s 			page 148


 4158 0472 4E29     		cmp	r1, #78
 4159 0474 5DD0     		beq	.L498
2296:src/keys.c    **** 				reset_arg();
 4160              		.loc 1 2296 11 is_stmt 1 view .LVU1223
2296:src/keys.c    **** 				reset_arg();
 4161              		.loc 1 2296 14 is_stmt 0 view .LVU1224
 4162 0476 0099     		ldr	r1, [sp]
 4163 0478 4F29     		cmp	r1, #79
 4164 047a 5FD0     		beq	.L499
2299:src/keys.c    **** 				State2.dot = 1;
 4165              		.loc 1 2299 11 is_stmt 1 view .LVU1225
2299:src/keys.c    **** 				State2.dot = 1;
 4166              		.loc 1 2299 14 is_stmt 0 view .LVU1226
 4167 047c 5807     		lsls	r0, r3, #29
 4168              	.LVL331:
2299:src/keys.c    **** 				State2.dot = 1;
 4169              		.loc 1 2299 14 view .LVU1227
 4170 047e 7FF50DAE 		bpl	.L481
2300:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4171              		.loc 1 2300 5 is_stmt 1 view .LVU1228
2300:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4172              		.loc 1 2300 16 is_stmt 0 view .LVU1229
 4173 0482 42F04002 		orr	r2, r2, #64
 4174 0486 6275     		strb	r2, [r4, #21]
2333:src/keys.c    **** }
 4175              		.loc 1 2333 9 view .LVU1230
 4176 0488 3320     		movs	r0, #51
 4177 048a 08E6     		b	.L356
 4178              	.LVL332:
 4179              	.L417:
2301:src/keys.c    **** 			return arg_eval(State2.digval);
 4180              		.loc 1 2301 10 is_stmt 1 view .LVU1231
2303:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4181              		.loc 1 2303 8 view .LVU1232
2303:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4182              		.loc 1 2303 11 is_stmt 0 view .LVU1233
 4183 048c B8F1000F 		cmp	r8, #0
 4184 0490 3FF404AE 		beq	.L481
2304:src/keys.c    **** 		break;
 4185              		.loc 1 2304 4 is_stmt 1 view .LVU1234
2304:src/keys.c    **** 		break;
 4186              		.loc 1 2304 27 is_stmt 0 view .LVU1235
 4187 0494 C2F38013 		ubfx	r3, r2, #6, #1
2304:src/keys.c    **** 		break;
 4188              		.loc 1 2304 19 view .LVU1236
 4189 0498 C3F10103 		rsb	r3, r3, #1
2304:src/keys.c    **** 		break;
 4190              		.loc 1 2304 15 view .LVU1237
 4191 049c 63F38612 		bfi	r2, r3, #6, #1
 4192 04a0 6275     		strb	r2, [r4, #21]
2333:src/keys.c    **** }
 4193              		.loc 1 2333 9 view .LVU1238
 4194 04a2 3320     		movs	r0, #51
 4195              	.LVL333:
2333:src/keys.c    **** }
 4196              		.loc 1 2333 9 view .LVU1239
 4197 04a4 FBE5     		b	.L356
ARM GAS  /tmp/ccc9ZrJ3.s 			page 149


 4198              	.LVL334:
 4199              	.L422:
2319:src/keys.c    **** 			if (State2.shuffle)
 4200              		.loc 1 2319 4 is_stmt 1 view .LVU1240
2320:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4201              		.loc 1 2320 8 is_stmt 0 view .LVU1241
 4202 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2319:src/keys.c    **** 			if (State2.shuffle)
 4203              		.loc 1 2319 4 view .LVU1242
 4204 04a8 013B     		subs	r3, r3, #1
 4205 04aa DBB2     		uxtb	r3, r3
2320:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4206              		.loc 1 2320 7 view .LVU1243
 4207 04ac 9207     		lsls	r2, r2, #30
2319:src/keys.c    **** 			if (State2.shuffle)
 4208              		.loc 1 2319 4 view .LVU1244
 4209 04ae E372     		strb	r3, [r4, #11]
2320:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4210              		.loc 1 2320 4 is_stmt 1 view .LVU1245
2320:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4211              		.loc 1 2320 7 is_stmt 0 view .LVU1246
 4212 04b0 16D5     		bpl	.L425
2321:src/keys.c    **** 			else
 4213              		.loc 1 2321 5 is_stmt 1 view .LVU1247
2321:src/keys.c    **** 			else
 4214              		.loc 1 2321 19 is_stmt 0 view .LVU1248
 4215 04b2 2289     		ldrh	r2, [r4, #8]
2321:src/keys.c    **** 			else
 4216              		.loc 1 2321 46 view .LVU1249
 4217 04b4 5B00     		lsls	r3, r3, #1
2321:src/keys.c    **** 			else
 4218              		.loc 1 2321 26 view .LVU1250
 4219 04b6 0321     		movs	r1, #3
 4220 04b8 01FA03F3 		lsl	r3, r1, r3
2321:src/keys.c    **** 			else
 4221              		.loc 1 2321 19 view .LVU1251
 4222 04bc 22EA0303 		bic	r3, r2, r3
 4223 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2333:src/keys.c    **** }
 4224              		.loc 1 2333 9 view .LVU1252
 4225 04c2 3320     		movs	r0, #51
 4226              	.LVL335:
2333:src/keys.c    **** }
 4227              		.loc 1 2333 9 view .LVU1253
 4228 04c4 EBE5     		b	.L356
 4229              	.LVL336:
 4230              	.L412:
2233:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4231              		.loc 1 2233 4 is_stmt 1 view .LVU1254
 4232 04c6 FFF7FEFF 		bl	reset_arg
 4233              	.LVL337:
2234:src/keys.c    **** 		}
 4234              		.loc 1 2234 4 view .LVU1255
2234:src/keys.c    **** 		}
 4235              		.loc 1 2234 11 is_stmt 0 view .LVU1256
 4236 04ca 40F27510 		movw	r0, #373
 4237 04ce E6E5     		b	.L356
ARM GAS  /tmp/ccc9ZrJ3.s 			page 150


 4238              	.LVL338:
 4239              	.L436:
2234:src/keys.c    **** 		}
 4240              		.loc 1 2234 11 view .LVU1257
 4241 04d0 8E25     		movs	r5, #142
 4242              	.LVL339:
2234:src/keys.c    **** 		}
 4243              		.loc 1 2234 11 view .LVU1258
 4244 04d2 07E6     		b	.L379
 4245              	.LVL340:
 4246              	.L408:
 4247              	.LBB478:
 4248              	.LBB468:
2042:src/keys.c    **** 		}
 4249              		.loc 1 2042 4 is_stmt 1 view .LVU1259
2042:src/keys.c    **** 		}
 4250              		.loc 1 2042 17 is_stmt 0 view .LVU1260
 4251 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4252 04d6 43F00103 		orr	r3, r3, #1
 4253 04da A375     		strb	r3, [r4, #22]
2052:src/keys.c    **** }
 4254              		.loc 1 2052 9 view .LVU1261
 4255 04dc 3320     		movs	r0, #51
 4256              	.LVL341:
2042:src/keys.c    **** 		}
 4257              		.loc 1 2042 17 view .LVU1262
 4258 04de DEE5     		b	.L356
 4259              	.LVL342:
 4260              	.L425:
2042:src/keys.c    **** 		}
 4261              		.loc 1 2042 17 view .LVU1263
 4262              	.LBE468:
 4263              	.LBE478:
2323:src/keys.c    **** 		}
 4264              		.loc 1 2323 5 is_stmt 1 view .LVU1264
2323:src/keys.c    **** 		}
 4265              		.loc 1 2323 19 is_stmt 0 view .LVU1265
 4266 04e0 2389     		ldrh	r3, [r4, #8]
 4267 04e2 1A4A     		ldr	r2, .L502
 4268 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4269 04e8 DB08     		lsrs	r3, r3, #3
 4270 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2333:src/keys.c    **** }
 4271              		.loc 1 2333 9 view .LVU1266
 4272 04ec 3320     		movs	r0, #51
 4273              	.LVL343:
2333:src/keys.c    **** }
 4274              		.loc 1 2333 9 view .LVU1267
 4275 04ee D6E5     		b	.L356
 4276              	.LVL344:
 4277              	.L495:
2180:src/keys.c    **** 		else if (base == RARG_RCL)
 4278              		.loc 1 2180 4 is_stmt 1 view .LVU1268
2180:src/keys.c    **** 		else if (base == RARG_RCL)
 4279              		.loc 1 2180 12 is_stmt 0 view .LVU1269
 4280 04f0 7723     		movs	r3, #119
 4281 04f2 E377     		strb	r3, [r4, #31]
ARM GAS  /tmp/ccc9ZrJ3.s 			page 151


2333:src/keys.c    **** }
 4282              		.loc 1 2333 9 view .LVU1270
 4283 04f4 3320     		movs	r0, #51
 4284              	.LVL345:
2333:src/keys.c    **** }
 4285              		.loc 1 2333 9 view .LVU1271
 4286 04f6 D2E5     		b	.L356
 4287              	.LVL346:
 4288              	.L494:
 4289              	.LBB479:
 4290              	.LBB469:
2037:src/keys.c    **** 			return arg_eval(regX_idx);
 4291              		.loc 1 2037 4 is_stmt 1 view .LVU1272
2037:src/keys.c    **** 			return arg_eval(regX_idx);
 4292              		.loc 1 2037 17 is_stmt 0 view .LVU1273
 4293 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4294 04fa 62F30003 		bfi	r3, r2, #0, #1
2038:src/keys.c    **** 		}
 4295              		.loc 1 2038 11 view .LVU1274
 4296 04fe 6420     		movs	r0, #100
 4297              	.LVL347:
2037:src/keys.c    **** 			return arg_eval(regX_idx);
 4298              		.loc 1 2037 17 view .LVU1275
 4299 0500 A375     		strb	r3, [r4, #22]
2038:src/keys.c    **** 		}
 4300              		.loc 1 2038 4 is_stmt 1 view .LVU1276
 4301 0502 B8E6     		b	.L483
 4302              	.L493:
2038:src/keys.c    **** 		}
 4303              		.loc 1 2038 4 is_stmt 0 view .LVU1277
 4304              	.LBE469:
 4305              	.LBE479:
2312:src/keys.c    **** 			else if (State2.ind)
 4306              		.loc 1 2312 5 is_stmt 1 view .LVU1278
2312:src/keys.c    **** 			else if (State2.ind)
 4307              		.loc 1 2312 18 is_stmt 0 view .LVU1279
 4308 0504 61F30002 		bfi	r2, r1, #0, #1
 4309 0508 A275     		strb	r2, [r4, #22]
2333:src/keys.c    **** }
 4310              		.loc 1 2333 9 view .LVU1280
 4311 050a 3320     		movs	r0, #51
 4312 050c C7E5     		b	.L356
 4313              	.LVL348:
 4314              	.L497:
2289:src/keys.c    **** 				State2.multi = 1;
 4315              		.loc 1 2289 5 is_stmt 1 view .LVU1281
 4316              	.LBB480:
 4317              	.LBI480:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4318              		.loc 1 552 13 view .LVU1282
 4319              	.LBB481:
 553:src/keys.c    **** 		return;
 4320              		.loc 1 553 2 view .LVU1283
 553:src/keys.c    **** 		return;
 4321              		.loc 1 553 6 is_stmt 0 view .LVU1284
 4322 050e FFF7FEFF 		bl	is_bad_cmdline
 4323              	.LVL349:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 152


 553:src/keys.c    **** 		return;
 4324              		.loc 1 553 5 view .LVU1285
 4325 0512 20B9     		cbnz	r0, .L419
 4326              	.LBE481:
 4327              	.LBE480:
2289:src/keys.c    **** 				State2.multi = 1;
 4328              		.loc 1 2289 31 view .LVU1286
 4329 0514 A5F14200 		sub	r0, r5, #66
 4330              	.LBB483:
 4331              	.LBB482:
 4332 0518 C0B2     		uxtb	r0, r0
 4333 051a FFF7FEFF 		bl	init_arg.part.0
 4334              	.LVL350:
 4335              	.L419:
2289:src/keys.c    **** 				State2.multi = 1;
 4336              		.loc 1 2289 31 view .LVU1287
 4337              	.LBE482:
 4338              	.LBE483:
2290:src/keys.c    **** 				State2.alphashift = 0;
 4339              		.loc 1 2290 5 is_stmt 1 view .LVU1288
2291:src/keys.c    **** 				State2.rarg = 0;
 4340              		.loc 1 2291 5 view .LVU1289
2292:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4341              		.loc 1 2292 5 view .LVU1290
2290:src/keys.c    **** 				State2.alphashift = 0;
 4342              		.loc 1 2290 18 is_stmt 0 view .LVU1291
 4343 051e 6369     		ldr	r3, [r4, #20]
 4344 0520 23F44013 		bic	r3, r3, #3145728
 4345 0524 23F40063 		bic	r3, r3, #2048
 4346 0528 43F40063 		orr	r3, r3, #2048
 4347 052c 6361     		str	r3, [r4, #20]
2333:src/keys.c    **** }
 4348              		.loc 1 2333 9 view .LVU1292
 4349 052e 3320     		movs	r0, #51
 4350 0530 B5E5     		b	.L356
 4351              	.LVL351:
 4352              	.L498:
2294:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4353              		.loc 1 2294 5 is_stmt 1 view .LVU1293
 4354 0532 FFF7FEFF 		bl	reset_arg
 4355              	.LVL352:
2295:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4356              		.loc 1 2295 5 view .LVU1294
2295:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4357              		.loc 1 2295 12 is_stmt 0 view .LVU1295
 4358 0536 40F25510 		movw	r0, #341
 4359 053a B0E5     		b	.L356
 4360              	.LVL353:
 4361              	.L499:
2297:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4362              		.loc 1 2297 5 is_stmt 1 view .LVU1296
 4363 053c FFF7FEFF 		bl	reset_arg
 4364              	.LVL354:
2298:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4365              		.loc 1 2298 5 view .LVU1297
2298:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4366              		.loc 1 2298 12 is_stmt 0 view .LVU1298
ARM GAS  /tmp/ccc9ZrJ3.s 			page 153


 4367 0540 4FF4AB70 		mov	r0, #342
 4368 0544 ABE5     		b	.L356
 4369              	.LVL355:
 4370              	.L373:
2082:src/keys.c    **** 	  case regY_idx:
 4371              		.loc 1 2082 6 is_stmt 1 view .LVU1299
2082:src/keys.c    **** 	  case regY_idx:
 4372              		.loc 1 2082 13 is_stmt 0 view .LVU1300
 4373 0546 0120     		movs	r0, #1
 4374              	.LVL356:
2082:src/keys.c    **** 	  case regY_idx:
 4375              		.loc 1 2082 13 view .LVU1301
 4376 0548 ABE6     		b	.L482
 4377              	.L503:
 4378 054a 00BF     		.align	2
 4379              	.L502:
 4380 054c CDCCCCCC 		.word	-858993459
 4381              		.cfi_endproc
 4382              	.LFE42:
 4384              		.section	.text.cur_shift,"ax",%progbits
 4385              		.align	1
 4386              		.p2align 2,,3
 4387              		.global	cur_shift
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv4-sp-d16
 4393              	cur_shift:
 4394              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4395              		.loc 1 96 29 is_stmt 1 view -0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4399              		.loc 1 97 2 view .LVU1303
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4400              		.loc 1 96 29 is_stmt 0 view .LVU1304
 4401 0000 08B5     		push	{r3, lr}
 4402              		.cfi_def_cfa_offset 8
 4403              		.cfi_offset 3, -8
 4404              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4405              		.loc 1 97 18 view .LVU1305
 4406 0002 FFF7FEFF 		bl	shift_down
 4407              	.LVL357:
  98:src/keys.c    **** }
 4408              		.loc 1 98 2 is_stmt 1 view .LVU1306
  98:src/keys.c    **** }
 4409              		.loc 1 98 52 is_stmt 0 view .LVU1307
 4410 0006 08B9     		cbnz	r0, .L505
  98:src/keys.c    **** }
 4411              		.loc 1 98 52 discriminator 1 view .LVU1308
 4412 0008 014B     		ldr	r3, .L507
 4413 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4414              	.LVL358:
 4415              	.L505:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 154


  99:src/keys.c    **** 
 4416              		.loc 1 99 1 discriminator 4 view .LVU1309
 4417 000c 08BD     		pop	{r3, pc}
 4418              	.L508:
 4419 000e 00BF     		.align	2
 4420              	.L507:
 4421 0010 00000000 		.word	StateWhileOn
 4422              		.cfi_endproc
 4423              	.LFE0:
 4425              		.section	.text.reset_shift,"ax",%progbits
 4426              		.align	1
 4427              		.p2align 2,,3
 4428              		.global	reset_shift
 4429              		.syntax unified
 4430              		.thumb
 4431              		.thumb_func
 4432              		.fpu fpv4-sp-d16
 4434              	reset_shift:
 4435              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4436              		.loc 1 114 31 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 0
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4440              		.loc 1 115 2 view .LVU1311
 4441              	.LVL359:
 4442              	.LBB484:
 4443              	.LBI484:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4444              		.loc 1 104 20 view .LVU1312
 4445              	.LBB485:
 105:src/keys.c    **** 	State2.shifts = shift;
 4446              		.loc 1 105 2 view .LVU1313
 4447              	.LBB486:
 4448              	.LBI486:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4449              		.loc 1 96 13 view .LVU1314
 4450              	.LBB487:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4451              		.loc 1 97 2 view .LVU1315
 4452              	.LBE487:
 4453              	.LBE486:
 4454              	.LBE485:
 4455              	.LBE484:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4456              		.loc 1 114 31 is_stmt 0 view .LVU1316
 4457 0000 08B5     		push	{r3, lr}
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 3, -8
 4460              		.cfi_offset 14, -4
 4461              	.LBB491:
 4462              	.LBB490:
 4463              	.LBB489:
 4464              	.LBB488:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4465              		.loc 1 97 18 view .LVU1317
ARM GAS  /tmp/ccc9ZrJ3.s 			page 155


 4466 0002 FFF7FEFF 		bl	shift_down
 4467              	.LVL360:
  98:src/keys.c    **** }
 4468              		.loc 1 98 2 is_stmt 1 view .LVU1318
  98:src/keys.c    **** }
 4469              		.loc 1 98 52 is_stmt 0 view .LVU1319
 4470 0006 034B     		ldr	r3, .L514
 4471 0008 00B9     		cbnz	r0, .L510
 4472 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4473              	.LVL361:
 4474              	.L510:
  98:src/keys.c    **** }
 4475              		.loc 1 98 52 view .LVU1320
 4476              	.LBE488:
 4477              	.LBE489:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4478              		.loc 1 106 2 is_stmt 1 view .LVU1321
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4479              		.loc 1 106 16 is_stmt 0 view .LVU1322
 4480 000c 0022     		movs	r2, #0
 4481 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4482              		.loc 1 108 2 is_stmt 1 view .LVU1323
 4483              	.LVL362:
 108:src/keys.c    **** }
 4484              		.loc 1 108 2 is_stmt 0 view .LVU1324
 4485              	.LBE490:
 4486              	.LBE491:
 116:src/keys.c    **** 
 4487              		.loc 1 116 1 view .LVU1325
 4488 0010 08BD     		pop	{r3, pc}
 4489              	.L515:
 4490 0012 00BF     		.align	2
 4491              	.L514:
 4492 0014 00000000 		.word	StateWhileOn
 4493              		.cfi_endproc
 4494              	.LFE2:
 4496              		.section	.text.keycode_to_row_column,"ax",%progbits
 4497              		.align	1
 4498              		.p2align 2,,3
 4499              		.global	keycode_to_row_column
 4500              		.syntax unified
 4501              		.thumb
 4502              		.thumb_func
 4503              		.fpu fpv4-sp-d16
 4505              	keycode_to_row_column:
 4506              	.LVL363:
 4507              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4508              		.loc 1 180 1 is_stmt 1 view -0
 4509              		.cfi_startproc
 4510              		@ args = 0, pretend = 0, frame = 0
 4511              		@ frame_needed = 0, uses_anonymous_args = 0
 4512              		@ link register save eliminated.
 181:src/keys.c    **** }
 4513              		.loc 1 181 2 view .LVU1327
 181:src/keys.c    **** }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 156


 4514              		.loc 1 181 18 is_stmt 0 view .LVU1328
 4515 0000 074A     		ldr	r2, .L517
 4516 0002 82FB0032 		smull	r3, r2, r2, r0
 4517 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4518              		.loc 1 181 24 view .LVU1329
 4519 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4520 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4521              		.loc 1 181 33 view .LVU1330
 4522 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4523 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4524              		.loc 1 181 12 view .LVU1331
 4525 0018 02F10B00 		add	r0, r2, #11
 4526              	.LVL364:
 182:src/keys.c    **** 
 4527              		.loc 1 182 1 view .LVU1332
 4528 001c 1844     		add	r0, r0, r3
 4529 001e 7047     		bx	lr
 4530              	.L518:
 4531              		.align	2
 4532              	.L517:
 4533 0020 ABAAAA2A 		.word	715827883
 4534              		.cfi_endproc
 4535              	.LFE6:
 4537              		.section	.text.row_column_to_keycode,"ax",%progbits
 4538              		.align	1
 4539              		.p2align 2,,3
 4540              		.global	row_column_to_keycode
 4541              		.syntax unified
 4542              		.thumb
 4543              		.thumb_func
 4544              		.fpu fpv4-sp-d16
 4546              	row_column_to_keycode:
 4547              	.LVL365:
 4548              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4549              		.loc 1 190 1 is_stmt 1 view -0
 4550              		.cfi_startproc
 4551              		@ args = 0, pretend = 0, frame = 0
 4552              		@ frame_needed = 0, uses_anonymous_args = 0
 4553              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4554              		.loc 1 191 2 view .LVU1334
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4555              		.loc 1 191 14 is_stmt 0 view .LVU1335
 4556 0000 0E4A     		ldr	r2, .L525
 4557 0002 82FB0032 		smull	r3, r2, r2, r0
 4558 0006 C317     		asrs	r3, r0, #31
 4559 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4560              		.loc 1 192 14 view .LVU1336
 4561 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4562              		.loc 1 191 6 view .LVU1337
 4563 0010 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 157


 4564              	.LVL366:
 192:src/keys.c    **** 
 4565              		.loc 1 192 2 is_stmt 1 view .LVU1338
 192:src/keys.c    **** 
 4566              		.loc 1 192 14 is_stmt 0 view .LVU1339
 4567 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4568              	.LVL367:
 194:src/keys.c    **** 		return -1;
 4569              		.loc 1 194 5 view .LVU1340
 4570 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4571              		.loc 1 192 6 view .LVU1341
 4572 0018 00F1FF30 		add	r0, r0, #-1
 4573              	.LVL368:
 194:src/keys.c    **** 		return -1;
 4574              		.loc 1 194 2 is_stmt 1 view .LVU1342
 194:src/keys.c    **** 		return -1;
 4575              		.loc 1 194 5 is_stmt 0 view .LVU1343
 4576 001c 0AD8     		bhi	.L524
 194:src/keys.c    **** 		return -1;
 4577              		.loc 1 194 36 discriminator 1 view .LVU1344
 4578 001e 012B     		cmp	r3, #1
 4579 0020 CCBF     		ite	gt
 4580 0022 0422     		movgt	r2, #4
 4581 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4582              		.loc 1 194 25 discriminator 1 view .LVU1345
 4583 0026 8242     		cmp	r2, r0
 4584 0028 04DB     		blt	.L524
 196:src/keys.c    **** }
 4585              		.loc 1 196 2 is_stmt 1 view .LVU1346
 196:src/keys.c    **** }
 4586              		.loc 1 196 13 is_stmt 0 view .LVU1347
 4587 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4588              	.LVL369:
 196:src/keys.c    **** }
 4589              		.loc 1 196 17 view .LVU1348
 4590 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4591              	.LVL370:
 196:src/keys.c    **** }
 4592              		.loc 1 196 17 view .LVU1349
 4593 0032 7047     		bx	lr
 4594              	.LVL371:
 4595              	.L524:
 195:src/keys.c    **** 	return row * 6 + col;
 4596              		.loc 1 195 10 view .LVU1350
 4597 0034 4FF0FF30 		mov	r0, #-1
 4598              	.LVL372:
 197:src/keys.c    **** 
 4599              		.loc 1 197 1 view .LVU1351
 4600 0038 7047     		bx	lr
 4601              	.L526:
 4602 003a 00BF     		.align	2
 4603              	.L525:
 4604 003c 67666666 		.word	1717986919
 4605              		.cfi_endproc
 4606              	.LFE7:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 158


 4608              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4609              		.align	1
 4610              		.p2align 2,,3
 4611              		.global	keycode_to_digit_or_register
 4612              		.syntax unified
 4613              		.thumb
 4614              		.thumb_func
 4615              		.fpu fpv4-sp-d16
 4617              	keycode_to_digit_or_register:
 4618              	.LVL373:
 4619              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4620              		.loc 1 211 1 is_stmt 1 view -0
 4621              		.cfi_startproc
 4622              		@ args = 0, pretend = 0, frame = 0
 4623              		@ frame_needed = 0, uses_anonymous_args = 0
 4624              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4625              		.loc 1 212 3 view .LVU1353
 234:src/keys.c    **** }
 4626              		.loc 1 234 3 view .LVU1354
 4627              	.LBB492:
 4628              	.LBI492:
 131:src/keys.c    **** {
 4629              		.loc 1 131 12 view .LVU1355
 4630              	.LBB493:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4631              		.loc 1 133 2 view .LVU1356
 143:src/keys.c    **** }
 4632              		.loc 1 143 2 view .LVU1357
 143:src/keys.c    **** }
 4633              		.loc 1 143 23 is_stmt 0 view .LVU1358
 4634 0000 024B     		ldr	r3, .L528
 4635              	.LBE493:
 4636              	.LBE492:
 234:src/keys.c    **** }
 4637              		.loc 1 234 28 view .LVU1359
 4638 0002 034A     		ldr	r2, .L528+4
 4639              	.LBB495:
 4640              	.LBB494:
 143:src/keys.c    **** }
 4641              		.loc 1 143 23 view .LVU1360
 4642 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4643              	.LBE494:
 4644              	.LBE495:
 235:src/keys.c    **** #else
 4645              		.loc 1 235 1 view .LVU1361
 4646 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4647              	.LVL374:
 235:src/keys.c    **** #else
 4648              		.loc 1 235 1 view .LVU1362
 4649 0008 7047     		bx	lr
 4650              	.L529:
 4651 000a 00BF     		.align	2
 4652              	.L528:
 4653 000c 00000000 		.word	.LANCHOR6
 4654 0010 00000000 		.word	.LANCHOR5
ARM GAS  /tmp/ccc9ZrJ3.s 			page 159


 4655              		.cfi_endproc
 4656              	.LFE8:
 4658              		.section	.text.init_state,"ax",%progbits
 4659              		.align	1
 4660              		.p2align 2,,3
 4661              		.global	init_state
 4662              		.syntax unified
 4663              		.thumb
 4664              		.thumb_func
 4665              		.fpu fpv4-sp-d16
 4667              	init_state:
 4668              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4669              		.loc 1 615 23 is_stmt 1 view -0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4673              		.loc 1 617 2 view .LVU1364
 615:src/keys.c    **** #ifndef REALBUILD
 4674              		.loc 1 615 23 is_stmt 0 view .LVU1365
 4675 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4676              		.cfi_def_cfa_offset 24
 4677              		.cfi_offset 4, -24
 4678              		.cfi_offset 5, -20
 4679              		.cfi_offset 6, -16
 4680              		.cfi_offset 7, -12
 4681              		.cfi_offset 8, -8
 4682              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4683              		.loc 1 617 25 view .LVU1366
 4684 0004 1C4C     		ldr	r4, .L532
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4685              		.loc 1 625 10 view .LVU1367
 4686 0006 0021     		movs	r1, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4687              		.loc 1 629 2 view .LVU1368
 4688 0008 1422     		movs	r2, #20
 4689 000a 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4690              		.loc 1 617 25 view .LVU1369
 4691 000e 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4692              		.loc 1 618 25 view .LVU1370
 4693 0010 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4694              		.loc 1 622 10 view .LVU1371
 4695 0012 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4696              		.loc 1 623 10 view .LVU1372
 4697 0014 94F91380 		ldrsb	r8, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4698              		.loc 1 625 10 view .LVU1373
 4699 0018 E177     		strb	r1, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4700              		.loc 1 629 2 view .LVU1374
 4701 001a FFF7FEFF 		bl	xset
ARM GAS  /tmp/ccc9ZrJ3.s 			page 160


 4702              	.LVL375:
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4703              		.loc 1 633 2 view .LVU1375
 4704 001e 174B     		ldr	r3, .L532+4
 4705 0020 1B68     		ldr	r3, [r3]
 634:src/keys.c    **** #endif  									//JM3
 4706              		.loc 1 634 21 view .LVU1376
 4707 0022 93F8EA17 		ldrb	r1, [r3, #2026]	@ zero_extendqisi2
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4708              		.loc 1 633 2 view .LVU1377
 4709 0026 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 634:src/keys.c    **** #endif  									//JM3
 4710              		.loc 1 634 21 view .LVU1378
 4711 002a 41F00801 		orr	r1, r1, #8
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4712              		.loc 1 633 2 view .LVU1379
 4713 002e 42F00802 		orr	r2, r2, #8
 634:src/keys.c    **** #endif  									//JM3
 4714              		.loc 1 634 21 view .LVU1380
 4715 0032 83F8EA17 		strb	r1, [r3, #2026]
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4716              		.loc 1 633 2 view .LVU1381
 4717 0036 83F8AC27 		strb	r2, [r3, #1964]
 665:src/keys.c    **** 	update_program_bounds(1);
 4718              		.loc 1 665 17 view .LVU1382
 4719 003a A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 664:src/keys.c    **** 	State2.runmode = 1;
 4720              		.loc 1 664 14 view .LVU1383
 4721 003c 0722     		movs	r2, #7
 665:src/keys.c    **** 	update_program_bounds(1);
 4722              		.loc 1 665 17 view .LVU1384
 4723 003e 43F04003 		orr	r3, r3, #64
 666:src/keys.c    **** 	set_lift();
 4724              		.loc 1 666 2 view .LVU1385
 4725 0042 0120     		movs	r0, #1
 664:src/keys.c    **** 	State2.runmode = 1;
 4726              		.loc 1 664 14 view .LVU1386
 4727 0044 E273     		strb	r2, [r4, #15]
 665:src/keys.c    **** 	update_program_bounds(1);
 4728              		.loc 1 665 17 view .LVU1387
 4729 0046 A375     		strb	r3, [r4, #22]
 666:src/keys.c    **** 	set_lift();
 4730              		.loc 1 666 2 view .LVU1388
 4731 0048 FFF7FEFF 		bl	update_program_bounds
 4732              	.LVL376:
 667:src/keys.c    **** 
 4733              		.loc 1 667 2 view .LVU1389
 4734 004c FFF7FEFF 		bl	set_lift
 4735              	.LVL377:
 674:src/keys.c    **** 	State2.flags = a;
 4736              		.loc 1 674 15 view .LVU1390
 4737 0050 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 675:src/keys.c    **** #else
 4738              		.loc 1 675 15 view .LVU1391
 4739 0052 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 679:src/keys.c    **** }
 4740              		.loc 1 679 15 view .LVU1392
ARM GAS  /tmp/ccc9ZrJ3.s 			page 161


 4741 0054 0A49     		ldr	r1, .L532+8
 672:src/keys.c    **** #ifndef REALBUILD
 4742              		.loc 1 672 10 view .LVU1393
 4743 0056 84F81380 		strb	r8, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4744              		.loc 1 617 25 view .LVU1394
 4745 005a 05F00105 		and	r5, r5, #1
 4746              	.LVL378:
 618:src/keys.c    **** #else
 4747              		.loc 1 618 2 is_stmt 1 view .LVU1395
 618:src/keys.c    **** #else
 4748              		.loc 1 618 25 is_stmt 0 view .LVU1396
 4749 005e F609     		lsrs	r6, r6, #7
 4750              	.LVL379:
 622:src/keys.c    **** 	int k = LastKey;
 4751              		.loc 1 622 2 is_stmt 1 view .LVU1397
 622:src/keys.c    **** 	int k = LastKey;
 4752              		.loc 1 622 10 is_stmt 0 view .LVU1398
 4753 0060 FFB2     		uxtb	r7, r7
 4754              	.LVL380:
 623:src/keys.c    **** 
 4755              		.loc 1 623 2 is_stmt 1 view .LVU1399
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4756              		.loc 1 625 2 view .LVU1400
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4757              		.loc 1 629 2 view .LVU1401
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4758              		.loc 1 633 2 view .LVU1402
 634:src/keys.c    **** #endif  									//JM3
 4759              		.loc 1 634 2 view .LVU1403
 664:src/keys.c    **** 	State2.runmode = 1;
 4760              		.loc 1 664 2 view .LVU1404
 665:src/keys.c    **** 	update_program_bounds(1);
 4761              		.loc 1 665 2 view .LVU1405
 666:src/keys.c    **** 	set_lift();
 4762              		.loc 1 666 2 view .LVU1406
 667:src/keys.c    **** 
 4763              		.loc 1 667 2 view .LVU1407
 671:src/keys.c    **** 	LastKey = k;
 4764              		.loc 1 671 2 view .LVU1408
 674:src/keys.c    **** 	State2.flags = a;
 4765              		.loc 1 674 15 is_stmt 0 view .LVU1409
 4766 0062 66F3C712 		bfi	r2, r6, #7, #1
 675:src/keys.c    **** #else
 4767              		.loc 1 675 15 view .LVU1410
 4768 0066 65F30003 		bfi	r3, r5, #0, #1
 679:src/keys.c    **** }
 4769              		.loc 1 679 15 view .LVU1411
 4770 006a 6420     		movs	r0, #100
 674:src/keys.c    **** 	State2.flags = a;
 4771              		.loc 1 674 15 view .LVU1412
 4772 006c E275     		strb	r2, [r4, #23]
 675:src/keys.c    **** #else
 4773              		.loc 1 675 15 view .LVU1413
 4774 006e 2376     		strb	r3, [r4, #24]
 671:src/keys.c    **** 	LastKey = k;
 4775              		.loc 1 671 10 view .LVU1414
ARM GAS  /tmp/ccc9ZrJ3.s 			page 162


 4776 0070 A774     		strb	r7, [r4, #18]
 672:src/keys.c    **** #ifndef REALBUILD
 4777              		.loc 1 672 2 is_stmt 1 view .LVU1415
 674:src/keys.c    **** 	State2.flags = a;
 4778              		.loc 1 674 2 view .LVU1416
 675:src/keys.c    **** #else
 4779              		.loc 1 675 2 view .LVU1417
 679:src/keys.c    **** }
 4780              		.loc 1 679 2 view .LVU1418
 679:src/keys.c    **** }
 4781              		.loc 1 679 15 is_stmt 0 view .LVU1419
 4782 0072 0860     		str	r0, [r1]
 680:src/keys.c    **** 
 4783              		.loc 1 680 1 view .LVU1420
 4784 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4785              	.LVL381:
 4786              	.L533:
 680:src/keys.c    **** 
 4787              		.loc 1 680 1 view .LVU1421
 4788              		.align	2
 4789              	.L532:
 4790 0078 00000000 		.word	StateWhileOn
 4791 007c 00000000 		.word	main_ram
 4792 0080 00000000 		.word	ShowRegister
 4793              		.cfi_endproc
 4794              	.LFE13:
 4796              		.section	.text.process_cmplx,"ax",%progbits
 4797              		.align	1
 4798              		.p2align 2,,3
 4799              		.syntax unified
 4800              		.thumb
 4801              		.thumb_func
 4802              		.fpu fpv4-sp-d16
 4804              	process_cmplx:
 4805              	.LVL382:
 4806              	.LFB27:
1453:src/keys.c    **** #define _RARG   0xFF00
 4807              		.loc 1 1453 43 is_stmt 1 view -0
 4808              		.cfi_startproc
 4809              		@ args = 0, pretend = 0, frame = 0
 4810              		@ frame_needed = 0, uses_anonymous_args = 0
1458:src/keys.c    **** 		// Row 1
 4811              		.loc 1 1458 2 view .LVU1423
1509:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4812              		.loc 1 1509 2 view .LVU1424
 4813              	.LBB496:
 4814              	.LBI496:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4815              		.loc 1 114 13 view .LVU1425
 4816              	.LBE496:
 115:src/keys.c    **** }
 4817              		.loc 1 115 2 view .LVU1426
 4818              	.LBB513:
 4819              	.LBB497:
 4820              	.LBI497:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4821              		.loc 1 104 20 view .LVU1427
ARM GAS  /tmp/ccc9ZrJ3.s 			page 163


 4822              	.LBB498:
 105:src/keys.c    **** 	State2.shifts = shift;
 4823              		.loc 1 105 2 view .LVU1428
 4824              	.LBB499:
 4825              	.LBI499:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4826              		.loc 1 96 13 view .LVU1429
 4827              	.LBB500:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4828              		.loc 1 97 2 view .LVU1430
 4829              	.LBE500:
 4830              	.LBE499:
 4831              	.LBE498:
 4832              	.LBE497:
 4833              	.LBE513:
1453:src/keys.c    **** #define _RARG   0xFF00
 4834              		.loc 1 1453 43 is_stmt 0 view .LVU1431
 4835 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4836              		.cfi_def_cfa_offset 24
 4837              		.cfi_offset 3, -24
 4838              		.cfi_offset 4, -20
 4839              		.cfi_offset 5, -16
 4840              		.cfi_offset 6, -12
 4841              		.cfi_offset 7, -8
 4842              		.cfi_offset 14, -4
1453:src/keys.c    **** #define _RARG   0xFF00
 4843              		.loc 1 1453 43 view .LVU1432
 4844 0002 0546     		mov	r5, r0
 4845              	.LBB514:
 4846              	.LBB509:
 4847              	.LBB505:
 4848              	.LBB503:
 4849              	.LBB501:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4850              		.loc 1 97 18 view .LVU1433
 4851 0004 FFF7FEFF 		bl	shift_down
 4852              	.LVL383:
  98:src/keys.c    **** }
 4853              		.loc 1 98 2 is_stmt 1 view .LVU1434
  98:src/keys.c    **** }
 4854              		.loc 1 98 52 is_stmt 0 view .LVU1435
 4855 0008 E8B1     		cbz	r0, .L551
 4856 000a 294E     		ldr	r6, .L558
 4857 000c 0446     		mov	r4, r0
 4858              	.L535:
 4859              	.LVL384:
  98:src/keys.c    **** }
 4860              		.loc 1 98 52 view .LVU1436
 4861              	.LBE501:
 4862              	.LBE503:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4863              		.loc 1 106 2 is_stmt 1 view .LVU1437
 4864              	.LBE505:
 4865              	.LBE509:
 4866              	.LBE514:
 4867              	.LBB515:
 4868              	.LBB516:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 164


 158:src/keys.c    **** }
 4869              		.loc 1 158 23 is_stmt 0 view .LVU1438
 4870 000e 294B     		ldr	r3, .L558+4
 4871              	.LBE516:
 4872              	.LBE515:
1511:src/keys.c    **** 	State2.cmplx = 0;
 4873              		.loc 1 1511 21 view .LVU1439
 4874 0010 2948     		ldr	r0, .L558+8
 4875              	.LBB519:
 4876              	.LBB517:
 158:src/keys.c    **** }
 4877              		.loc 1 158 23 view .LVU1440
 4878 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4879              	.LBE517:
 4880              	.LBE519:
1512:src/keys.c    **** 
 4881              		.loc 1 1512 15 view .LVU1441
 4882 0014 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
1511:src/keys.c    **** 	State2.cmplx = 0;
 4883              		.loc 1 1511 21 view .LVU1442
 4884 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4885              	.LBB520:
 4886              	.LBB510:
 4887              	.LBB506:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4888              		.loc 1 106 16 view .LVU1443
 4889 001a 0021     		movs	r1, #0
 4890              	.LBE506:
 4891              	.LBE510:
 4892              	.LBE520:
1511:src/keys.c    **** 	State2.cmplx = 0;
 4893              		.loc 1 1511 21 view .LVU1444
 4894 001c 30F81370 		ldrh	r7, [r0, r3, lsl #1]
 4895              	.LBB521:
 4896              	.LBB511:
 4897              	.LBB507:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4898              		.loc 1 106 16 view .LVU1445
 4899 0020 3174     		strb	r1, [r6, #16]
 108:src/keys.c    **** }
 4900              		.loc 1 108 2 is_stmt 1 view .LVU1446
 4901              	.LVL385:
 108:src/keys.c    **** }
 4902              		.loc 1 108 2 is_stmt 0 view .LVU1447
 4903              	.LBE507:
 4904              	.LBE511:
 4905              	.LBE521:
1510:src/keys.c    **** 	int op = op_map[lc][shift];
 4906              		.loc 1 1510 2 is_stmt 1 view .LVU1448
 4907              	.LBB522:
 4908              	.LBI515:
 146:src/keys.c    **** {
 4909              		.loc 1 146 12 view .LVU1449
 4910              	.LBB518:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4911              		.loc 1 148 2 view .LVU1450
 158:src/keys.c    **** }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 165


 4912              		.loc 1 158 2 view .LVU1451
 158:src/keys.c    **** }
 4913              		.loc 1 158 2 is_stmt 0 view .LVU1452
 4914              	.LBE518:
 4915              	.LBE522:
1511:src/keys.c    **** 	State2.cmplx = 0;
 4916              		.loc 1 1511 2 is_stmt 1 view .LVU1453
1512:src/keys.c    **** 
 4917              		.loc 1 1512 2 view .LVU1454
1514:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4918              		.loc 1 1514 5 is_stmt 0 view .LVU1455
 4919 0022 07F47F43 		and	r3, r7, #65280
1512:src/keys.c    **** 
 4920              		.loc 1 1512 15 view .LVU1456
 4921 0026 61F34102 		bfi	r2, r1, #1, #1
1514:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4922              		.loc 1 1514 5 view .LVU1457
 4923 002a B3F57F4F 		cmp	r3, #65280
1512:src/keys.c    **** 
 4924              		.loc 1 1512 15 view .LVU1458
 4925 002e 7275     		strb	r2, [r6, #21]
1514:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4926              		.loc 1 1514 2 is_stmt 1 view .LVU1459
1514:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4927              		.loc 1 1514 5 is_stmt 0 view .LVU1460
 4928 0030 2CD0     		beq	.L554
1518:src/keys.c    **** 		// HYP
 4929              		.loc 1 1518 2 is_stmt 1 view .LVU1461
1518:src/keys.c    **** 		// HYP
 4930              		.loc 1 1518 5 is_stmt 0 view .LVU1462
 4931 0032 9DB1     		cbz	r5, .L555
1528:src/keys.c    **** 		switch (c) {
 4932              		.loc 1 1528 2 is_stmt 1 view .LVU1463
1528:src/keys.c    **** 		switch (c) {
 4933              		.loc 1 1528 5 is_stmt 0 view .LVU1464
 4934 0034 2CB1     		cbz	r4, .L534
1529:src/keys.c    **** 		case K_CMPLX:
 4935              		.loc 1 1529 3 is_stmt 1 view .LVU1465
 4936 0036 242D     		cmp	r5, #36
 4937 0038 24D0     		beq	.L540
 4938 003a 2D2D     		cmp	r5, #45
 4939 003c 1DD0     		beq	.L541
 4940 003e 1F2D     		cmp	r5, #31
 4941 0040 04D0     		beq	.L556
 4942              	.LVL386:
 4943              	.L534:
1561:src/keys.c    **** 
 4944              		.loc 1 1561 1 is_stmt 0 view .LVU1466
 4945 0042 3846     		mov	r0, r7
 4946 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4947              	.LVL387:
 4948              	.L551:
 4949              	.LBB523:
 4950              	.LBB512:
 4951              	.LBB508:
 4952              	.LBB504:
 4953              	.LBB502:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 166


  98:src/keys.c    **** }
 4954              		.loc 1 98 52 view .LVU1467
 4955 0046 1A4E     		ldr	r6, .L558
 4956 0048 347C     		ldrb	r4, [r6, #16]	@ zero_extendqisi2
 4957 004a E0E7     		b	.L535
 4958              	.LVL388:
 4959              	.L556:
  98:src/keys.c    **** }
 4960              		.loc 1 98 52 view .LVU1468
 4961              	.LBE502:
 4962              	.LBE504:
 4963              	.LBE508:
 4964              	.LBE512:
 4965              	.LBE523:
1535:src/keys.c    **** 				if (is_bad_cmdline())
 4966              		.loc 1 1535 4 is_stmt 1 view .LVU1469
1535:src/keys.c    **** 				if (is_bad_cmdline())
 4967              		.loc 1 1535 7 is_stmt 0 view .LVU1470
 4968 004c 332F     		cmp	r7, #51
 4969 004e 02D0     		beq	.L553
1536:src/keys.c    **** 					return STATE_UNFINISHED;
 4970              		.loc 1 1536 5 is_stmt 1 view .LVU1471
1536:src/keys.c    **** 					return STATE_UNFINISHED;
 4971              		.loc 1 1536 9 is_stmt 0 view .LVU1472
 4972 0050 FFF7FEFF 		bl	is_bad_cmdline
 4973              	.LVL389:
1536:src/keys.c    **** 					return STATE_UNFINISHED;
 4974              		.loc 1 1536 8 view .LVU1473
 4975 0054 10B3     		cbz	r0, .L557
 4976              	.L553:
1516:src/keys.c    **** 	}
 4977              		.loc 1 1516 10 view .LVU1474
 4978 0056 3327     		movs	r7, #51
 4979              	.LVL390:
1561:src/keys.c    **** 
 4980              		.loc 1 1561 1 view .LVU1475
 4981 0058 3846     		mov	r0, r7
 4982 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4983              	.LVL391:
 4984              	.L555:
1520:src/keys.c    **** 		//		print_debug(100,1);
 4985              		.loc 1 1520 3 is_stmt 1 view .LVU1476
 4986 005c FFF7FEFF 		bl	process_cmdline_set_lift
 4987              	.LVL392:
1522:src/keys.c    **** 		State2.dot = op;
 4988              		.loc 1 1522 3 view .LVU1477
1523:src/keys.c    **** 		State2.cmplx = 1;
 4989              		.loc 1 1523 3 view .LVU1478
1524:src/keys.c    **** 		return STATE_UNFINISHED;
 4990              		.loc 1 1524 3 view .LVU1479
1524:src/keys.c    **** 		return STATE_UNFINISHED;
 4991              		.loc 1 1524 16 is_stmt 0 view .LVU1480
 4992 0060 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 4993 0062 07F00103 		and	r3, r7, #1
 4994 0066 9B01     		lsls	r3, r3, #6
 4995 0068 22F06202 		bic	r2, r2, #98
 4996 006c 43F02203 		orr	r3, r3, #34
ARM GAS  /tmp/ccc9ZrJ3.s 			page 167


 4997 0070 1343     		orrs	r3, r3, r2
1525:src/keys.c    **** 	}
 4998              		.loc 1 1525 10 view .LVU1481
 4999 0072 3327     		movs	r7, #51
 5000              	.LVL393:
1524:src/keys.c    **** 		return STATE_UNFINISHED;
 5001              		.loc 1 1524 16 view .LVU1482
 5002 0074 7375     		strb	r3, [r6, #21]
1525:src/keys.c    **** 	}
 5003              		.loc 1 1525 3 is_stmt 1 view .LVU1483
1561:src/keys.c    **** 
 5004              		.loc 1 1561 1 is_stmt 0 view .LVU1484
 5005 0076 3846     		mov	r0, r7
 5006 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5007              	.LVL394:
 5008              	.L541:
1531:src/keys.c    **** 			break;
 5009              		.loc 1 1531 4 is_stmt 1 view .LVU1485
 5010              	.LBB524:
 5011              	.LBI524:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5012              		.loc 1 104 20 view .LVU1486
 5013              	.LBB525:
 105:src/keys.c    **** 	State2.shifts = shift;
 5014              		.loc 1 105 2 view .LVU1487
 5015              	.LBB526:
 5016              	.LBI526:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5017              		.loc 1 96 13 view .LVU1488
 5018              	.LBB527:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5019              		.loc 1 97 2 view .LVU1489
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5020              		.loc 1 97 18 is_stmt 0 view .LVU1490
 5021 007a FFF7FEFF 		bl	shift_down
 5022              	.LVL395:
  98:src/keys.c    **** }
 5023              		.loc 1 98 2 is_stmt 1 view .LVU1491
 5024              	.LBE527:
 5025              	.LBE526:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5026              		.loc 1 106 2 view .LVU1492
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5027              		.loc 1 106 16 is_stmt 0 view .LVU1493
 5028 007e 3474     		strb	r4, [r6, #16]
 108:src/keys.c    **** }
 5029              		.loc 1 108 2 is_stmt 1 view .LVU1494
 5030              	.LBE525:
 5031              	.LBE524:
1561:src/keys.c    **** 
 5032              		.loc 1 1561 1 is_stmt 0 view .LVU1495
 5033 0080 3846     		mov	r0, r7
 5034 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5035              	.LVL396:
 5036              	.L540:
1545:src/keys.c    **** 			break;
 5037              		.loc 1 1545 4 is_stmt 1 view .LVU1496
ARM GAS  /tmp/ccc9ZrJ3.s 			page 168


 5038 0084 FFF7FEFF 		bl	init_state
 5039              	.LVL397:
1546:src/keys.c    **** 
 5040              		.loc 1 1546 4 view .LVU1497
1561:src/keys.c    **** 
 5041              		.loc 1 1561 1 is_stmt 0 view .LVU1498
 5042 0088 3846     		mov	r0, r7
 5043 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5044              	.LVL398:
 5045              	.L554:
1515:src/keys.c    **** 		return STATE_UNFINISHED;
 5046              		.loc 1 1515 3 is_stmt 1 view .LVU1499
 5047              	.LBB528:
 5048              	.LBI528:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5049              		.loc 1 552 13 view .LVU1500
 5050              	.LBB529:
 553:src/keys.c    **** 		return;
 5051              		.loc 1 553 2 view .LVU1501
 553:src/keys.c    **** 		return;
 5052              		.loc 1 553 6 is_stmt 0 view .LVU1502
 5053 008c FFF7FEFF 		bl	is_bad_cmdline
 5054              	.LVL399:
 553:src/keys.c    **** 		return;
 5055              		.loc 1 553 5 view .LVU1503
 5056 0090 0028     		cmp	r0, #0
 5057 0092 E0D1     		bne	.L553
 5058 0094 F8B2     		uxtb	r0, r7
 5059 0096 FFF7FEFF 		bl	init_arg.part.0
 5060              	.LVL400:
 5061 009a DCE7     		b	.L553
 5062              	.LVL401:
 5063              	.L557:
 553:src/keys.c    **** 		return;
 5064              		.loc 1 553 5 view .LVU1504
 5065              	.LBE529:
 5066              	.LBE528:
1538:src/keys.c    **** 				State2.cmplx = 1;
 5067              		.loc 1 1538 5 is_stmt 1 view .LVU1505
 5068 009c FFF7FEFF 		bl	process_cmdline_set_lift
 5069              	.LVL402:
1539:src/keys.c    **** 				State2.test = op;
 5070              		.loc 1 1539 5 view .LVU1506
1539:src/keys.c    **** 				State2.test = op;
 5071              		.loc 1 1539 18 is_stmt 0 view .LVU1507
 5072 00a0 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1540:src/keys.c    **** 			}
 5073              		.loc 1 1540 17 view .LVU1508
 5074 00a2 F773     		strb	r7, [r6, #15]
1539:src/keys.c    **** 				State2.test = op;
 5075              		.loc 1 1539 18 view .LVU1509
 5076 00a4 43F00203 		orr	r3, r3, #2
 5077 00a8 7375     		strb	r3, [r6, #21]
1540:src/keys.c    **** 			}
 5078              		.loc 1 1540 5 is_stmt 1 view .LVU1510
1542:src/keys.c    **** 
 5079              		.loc 1 1542 11 is_stmt 0 view .LVU1511
ARM GAS  /tmp/ccc9ZrJ3.s 			page 169


 5080 00aa 3327     		movs	r7, #51
 5081              	.LVL403:
1542:src/keys.c    **** 
 5082              		.loc 1 1542 11 view .LVU1512
 5083 00ac C9E7     		b	.L534
 5084              	.L559:
 5085 00ae 00BF     		.align	2
 5086              	.L558:
 5087 00b0 00000000 		.word	StateWhileOn
 5088 00b4 00000000 		.word	.LANCHOR1
 5089 00b8 00000000 		.word	.LANCHOR7
 5090              		.cfi_endproc
 5091              	.LFE27:
 5093              		.section	.text.soft_init_state,"ax",%progbits
 5094              		.align	1
 5095              		.p2align 2,,3
 5096              		.global	soft_init_state
 5097              		.syntax unified
 5098              		.thumb
 5099              		.thumb_func
 5100              		.fpu fpv4-sp-d16
 5102              	soft_init_state:
 5103              	.LFB14:
 682:src/keys.c    **** 	int soft;
 5104              		.loc 1 682 28 is_stmt 1 view -0
 5105              		.cfi_startproc
 5106              		@ args = 0, pretend = 0, frame = 0
 5107              		@ frame_needed = 0, uses_anonymous_args = 0
 683:src/keys.c    **** 	unsigned int runmode;
 5108              		.loc 1 683 2 view .LVU1514
 684:src/keys.c    **** 	unsigned int alphas;
 5109              		.loc 1 684 2 view .LVU1515
 685:src/keys.c    **** 
 5110              		.loc 1 685 2 view .LVU1516
 687:src/keys.c    **** 		CmdLineLength = 0;
 5111              		.loc 1 687 2 view .LVU1517
 682:src/keys.c    **** 	int soft;
 5112              		.loc 1 682 28 is_stmt 0 view .LVU1518
 5113 0000 38B5     		push	{r3, r4, r5, lr}
 5114              		.cfi_def_cfa_offset 16
 5115              		.cfi_offset 3, -16
 5116              		.cfi_offset 4, -12
 5117              		.cfi_offset 5, -8
 5118              		.cfi_offset 14, -4
 687:src/keys.c    **** 		CmdLineLength = 0;
 5119              		.loc 1 687 6 view .LVU1519
 5120 0002 114C     		ldr	r4, .L567
 687:src/keys.c    **** 		CmdLineLength = 0;
 5121              		.loc 1 687 5 view .LVU1520
 5122 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5123 0006 D3B9     		cbnz	r3, .L566
 693:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5124              		.loc 1 693 2 is_stmt 1 view .LVU1521
 694:src/keys.c    **** 	runmode = State2.runmode;
 5125              		.loc 1 694 17 is_stmt 0 view .LVU1522
 5126 0008 104A     		ldr	r2, .L567+4
 5127 000a 6369     		ldr	r3, [r4, #20]
ARM GAS  /tmp/ccc9ZrJ3.s 			page 170


 694:src/keys.c    **** 	runmode = State2.runmode;
 5128              		.loc 1 694 60 view .LVU1523
 5129 000c 1A42     		tst	r2, r3
 5130 000e 0AD0     		beq	.L563
 5131              	.L564:
 5132              	.LVL404:
 695:src/keys.c    **** 	alphas = State2.alphas;
 5133              		.loc 1 695 2 is_stmt 1 view .LVU1524
 696:src/keys.c    **** 	init_state();
 5134              		.loc 1 696 17 is_stmt 0 view .LVU1525
 5135 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5136              	.LVL405:
 696:src/keys.c    **** 	init_state();
 5137              		.loc 1 696 2 is_stmt 1 view .LVU1526
 697:src/keys.c    **** 	if (soft) {
 5138              		.loc 1 697 2 view .LVU1527
 5139 0012 FFF7FEFF 		bl	init_state
 5140              	.LVL406:
 698:src/keys.c    **** 		State2.runmode = runmode;
 5141              		.loc 1 698 2 view .LVU1528
 699:src/keys.c    **** 		State2.alphas = alphas;
 5142              		.loc 1 699 3 view .LVU1529
 700:src/keys.c    **** 	}
 5143              		.loc 1 700 3 view .LVU1530
 700:src/keys.c    **** 	}
 5144              		.loc 1 700 17 is_stmt 0 view .LVU1531
 5145 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5146 0018 05F04805 		and	r5, r5, #72
 5147 001c 23F04803 		bic	r3, r3, #72
 5148 0020 2B43     		orrs	r3, r3, r5
 5149 0022 A375     		strb	r3, [r4, #22]
 702:src/keys.c    **** 
 5150              		.loc 1 702 1 view .LVU1532
 5151 0024 38BD     		pop	{r3, r4, r5, pc}
 5152              	.LVL407:
 5153              	.L563:
 694:src/keys.c    **** 	runmode = State2.runmode;
 5154              		.loc 1 694 60 discriminator 2 view .LVU1533
 5155 0026 E368     		ldr	r3, [r4, #12]
 5156 0028 23F47F03 		bic	r3, r3, #16711680
 5157 002c 23F47F43 		bic	r3, r3, #65280
 5158 0030 B3F1E06F 		cmp	r3, #117440512
 5159 0034 ECD1     		bne	.L564
 5160              	.LVL408:
 695:src/keys.c    **** 	alphas = State2.alphas;
 5161              		.loc 1 695 2 is_stmt 1 view .LVU1534
 696:src/keys.c    **** 	init_state();
 5162              		.loc 1 696 2 view .LVU1535
 697:src/keys.c    **** 	if (soft) {
 5163              		.loc 1 697 2 view .LVU1536
 702:src/keys.c    **** 
 5164              		.loc 1 702 1 is_stmt 0 view .LVU1537
 5165 0036 BDE83840 		pop	{r3, r4, r5, lr}
 5166              		.cfi_remember_state
 5167              		.cfi_restore 14
 5168              		.cfi_restore 5
 5169              		.cfi_restore 4
ARM GAS  /tmp/ccc9ZrJ3.s 			page 171


 5170              		.cfi_restore 3
 5171              		.cfi_def_cfa_offset 0
 697:src/keys.c    **** 	if (soft) {
 5172              		.loc 1 697 2 view .LVU1538
 5173 003a FFF7FEBF 		b	init_state
 5174              	.LVL409:
 5175              	.L566:
 5176              		.cfi_restore_state
 5177              	.LBB532:
 5178              	.LBI532:
 682:src/keys.c    **** 	int soft;
 5179              		.loc 1 682 6 is_stmt 1 view .LVU1539
 5180              	.LBB533:
 688:src/keys.c    **** 		CmdLineEex = 0;
 5181              		.loc 1 688 3 view .LVU1540
 689:src/keys.c    **** 		CmdLineDot = 0;
 5182              		.loc 1 689 3 view .LVU1541
 690:src/keys.c    **** 		return;
 5183              		.loc 1 690 3 view .LVU1542
 688:src/keys.c    **** 		CmdLineEex = 0;
 5184              		.loc 1 688 17 is_stmt 0 view .LVU1543
 5185 003e 0023     		movs	r3, #0
 5186 0040 A383     		strh	r3, [r4, #28]	@ movhi
 690:src/keys.c    **** 		return;
 5187              		.loc 1 690 14 view .LVU1544
 5188 0042 A377     		strb	r3, [r4, #30]
 691:src/keys.c    **** 	}
 5189              		.loc 1 691 3 is_stmt 1 view .LVU1545
 5190              	.LBE533:
 5191              	.LBE532:
 702:src/keys.c    **** 
 5192              		.loc 1 702 1 is_stmt 0 view .LVU1546
 5193 0044 38BD     		pop	{r3, r4, r5, pc}
 5194              	.L568:
 5195 0046 00BF     		.align	2
 5196              	.L567:
 5197 0048 00000000 		.word	StateWhileOn
 5198 004c 002F2004 		.word	69218048
 5199              		.cfi_endproc
 5200              	.LFE14:
 5202              		.section	.text.finish_cpx_entry,"ax",%progbits
 5203              		.align	1
 5204              		.p2align 2,,3
 5205              		.global	finish_cpx_entry
 5206              		.syntax unified
 5207              		.thumb
 5208              		.thumb_func
 5209              		.fpu fpv4-sp-d16
 5211              	finish_cpx_entry:
 5212              	.LVL410:
 5213              	.LFB23:
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5214              		.loc 1 1197 36 is_stmt 1 view -0
 5215              		.cfi_startproc
 5216              		@ args = 0, pretend = 0, frame = 0
 5217              		@ frame_needed = 0, uses_anonymous_args = 0
1202:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 172


 5218              		.loc 1 1202 2 view .LVU1548
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5219              		.loc 1 1197 36 is_stmt 0 view .LVU1549
 5220 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5221              		.cfi_def_cfa_offset 24
 5222              		.cfi_offset 3, -24
 5223              		.cfi_offset 4, -20
 5224              		.cfi_offset 5, -16
 5225              		.cfi_offset 6, -12
 5226              		.cfi_offset 7, -8
 5227              		.cfi_offset 14, -4
1202:src/keys.c    **** 
 5228              		.loc 1 1202 10 view .LVU1550
 5229 0002 2E4E     		ldr	r6, .L585
 5230 0004 3368     		ldr	r3, [r6]
1202:src/keys.c    **** 
 5231              		.loc 1 1202 7 view .LVU1551
 5232 0006 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
1202:src/keys.c    **** 
 5233              		.loc 1 1202 5 view .LVU1552
 5234 000a 12F0060F 		tst	r2, #6
 5235 000e 16D0     		beq	.L569
1214:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5236              		.loc 1 1214 2 is_stmt 1 view .LVU1553
 5237              	.LBB540:
 5238              	.LBI540:
1190:src/keys.c    **** 	if (CmdLineLength) {
 5239              		.loc 1 1190 13 view .LVU1554
 5240              	.LBB541:
1191:src/keys.c    **** 		State2.state_lift = 0;
 5241              		.loc 1 1191 2 view .LVU1555
1191:src/keys.c    **** 		State2.state_lift = 0;
 5242              		.loc 1 1191 6 is_stmt 0 view .LVU1556
 5243 0010 2B4C     		ldr	r4, .L585+4
1191:src/keys.c    **** 		State2.state_lift = 0;
 5244              		.loc 1 1191 5 view .LVU1557
 5245 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5246 0014 0546     		mov	r5, r0
 5247 0016 01BB     		cbnz	r1, .L582
 5248              	.LBE541:
 5249              	.LBE540:
1215:src/keys.c    **** 	CLEAR_REAL;
 5250              		.loc 1 1215 2 is_stmt 1 view .LVU1558
1215:src/keys.c    **** 	CLEAR_REAL;
 5251              		.loc 1 1215 5 is_stmt 0 view .LVU1559
 5252 0018 5207     		lsls	r2, r2, #29
 5253 001a 11D4     		bmi	.L583
 5254              	.LVL411:
 5255              	.L573:
1216:src/keys.c    **** 	CLEAR_IMAG;
 5256              		.loc 1 1216 2 is_stmt 1 view .LVU1560
1217:src/keys.c    **** 
 5257              		.loc 1 1217 2 view .LVU1561
1216:src/keys.c    **** 	CLEAR_IMAG;
 5258              		.loc 1 1216 2 is_stmt 0 view .LVU1562
 5259 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5260 0020 22F00602 		bic	r2, r2, #6
ARM GAS  /tmp/ccc9ZrJ3.s 			page 173


 5261 0024 83F8AC27 		strb	r2, [r3, #1964]
1219:src/keys.c    **** 
 5262              		.loc 1 1219 2 is_stmt 1 view .LVU1563
1219:src/keys.c    **** 
 5263              		.loc 1 1219 20 is_stmt 0 view .LVU1564
 5264 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5265 002a 65F38612 		bfi	r2, r5, #6, #1
 5266              	.LVL412:
1219:src/keys.c    **** 
 5267              		.loc 1 1219 20 view .LVU1565
 5268 002e E275     		strb	r2, [r4, #23]
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5269              		.loc 1 1221 2 is_stmt 1 view .LVU1566
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5270              		.loc 1 1221 21 is_stmt 0 view .LVU1567
 5271 0030 B3F8AC37 		ldrh	r3, [r3, #1964]
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5272              		.loc 1 1221 5 view .LVU1568
 5273 0034 03F4C073 		and	r3, r3, #384
 5274 0038 B3F5C07F 		cmp	r3, #384
 5275 003c 19D0     		beq	.L584
 5276              	.L569:
1233:src/keys.c    **** 
 5277              		.loc 1 1233 1 view .LVU1569
 5278 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5279              	.LVL413:
 5280              	.L583:
1215:src/keys.c    **** 	CLEAR_REAL;
 5281              		.loc 1 1215 17 is_stmt 1 discriminator 1 view .LVU1570
 5282 0040 6420     		movs	r0, #100
 5283 0042 FFF7FEFF 		bl	get_reg_n
 5284              	.LVL414:
 5285 0046 0746     		mov	r7, r0
 5286 0048 6520     		movs	r0, #101
 5287 004a FFF7FEFF 		bl	get_reg_n
 5288              	.LVL415:
 5289 004e 0146     		mov	r1, r0
 5290 0050 3846     		mov	r0, r7
 5291 0052 FFF7FEFF 		bl	swap_reg
 5292              	.LVL416:
 5293 0056 3368     		ldr	r3, [r6]
 5294 0058 E0E7     		b	.L573
 5295              	.LVL417:
 5296              	.L582:
 5297              	.LBB543:
 5298              	.LBB542:
1192:src/keys.c    **** 		process_cmdline();
 5299              		.loc 1 1192 3 view .LVU1571
1192:src/keys.c    **** 		process_cmdline();
 5300              		.loc 1 1192 21 is_stmt 0 view .LVU1572
 5301 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5302 005c 6FF38613 		bfc	r3, #6, #1
 5303 0060 E375     		strb	r3, [r4, #23]
1193:src/keys.c    **** 	}
 5304              		.loc 1 1193 3 is_stmt 1 view .LVU1573
 5305 0062 FFF7FEFF 		bl	process_cmdline
 5306              	.LVL418:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 174


1193:src/keys.c    **** 	}
 5307              		.loc 1 1193 3 is_stmt 0 view .LVU1574
 5308 0066 3368     		ldr	r3, [r6]
 5309 0068 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5310              	.LBE542:
 5311              	.LBE543:
1215:src/keys.c    **** 	CLEAR_REAL;
 5312              		.loc 1 1215 2 is_stmt 1 view .LVU1575
1215:src/keys.c    **** 	CLEAR_REAL;
 5313              		.loc 1 1215 5 is_stmt 0 view .LVU1576
 5314 006c 5207     		lsls	r2, r2, #29
 5315 006e D5D5     		bpl	.L573
 5316 0070 E6E7     		b	.L583
 5317              	.LVL419:
 5318              	.L584:
 5319              	.LBB544:
 5320              	.LBI544:
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5321              		.loc 1 1197 6 is_stmt 1 view .LVU1577
 5322              	.LBB545:
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5323              		.loc 1 1223 3 view .LVU1578
 5324 0072 6E20     		movs	r0, #110
 5325 0074 FFF7FEFF 		bl	get_reg_n
 5326              	.LVL420:
 5327 0078 0446     		mov	r4, r0
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5328              		.loc 1 1223 33 is_stmt 0 view .LVU1579
 5329 007a 6420     		movs	r0, #100
 5330 007c FFF7FEFF 		bl	get_reg_n
 5331              	.LVL421:
 5332 0080 0146     		mov	r1, r0
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5333              		.loc 1 1223 3 view .LVU1580
 5334 0082 2046     		mov	r0, r4
 5335 0084 FFF7FEFF 		bl	copyreg
 5336              	.LVL422:
1224:src/keys.c    **** 		//call p2r
 5337              		.loc 1 1224 3 is_stmt 1 view .LVU1581
 5338 0088 6F20     		movs	r0, #111
 5339 008a FFF7FEFF 		bl	get_reg_n
 5340              	.LVL423:
 5341 008e 0446     		mov	r4, r0
1224:src/keys.c    **** 		//call p2r
 5342              		.loc 1 1224 33 is_stmt 0 view .LVU1582
 5343 0090 6520     		movs	r0, #101
 5344 0092 FFF7FEFF 		bl	get_reg_n
 5345              	.LVL424:
 5346 0096 0146     		mov	r1, r0
1224:src/keys.c    **** 		//call p2r
 5347              		.loc 1 1224 3 view .LVU1583
 5348 0098 2046     		mov	r0, r4
 5349 009a FFF7FEFF 		bl	copyreg
 5350              	.LVL425:
1226:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5351              		.loc 1 1226 18 is_stmt 1 view .LVU1584
1227:src/keys.c    **** #ifdef RP_PREFIX
ARM GAS  /tmp/ccc9ZrJ3.s 			page 175


 5352              		.loc 1 1227 3 view .LVU1585
 5353 009e 0020     		movs	r0, #0
 5354 00a0 FFF7FEFF 		bl	op_p2r
 5355              	.LVL426:
1229:src/keys.c    **** #endif
 5356              		.loc 1 1229 3 view .LVU1586
1229:src/keys.c    **** #endif
 5357              		.loc 1 1229 15 is_stmt 0 view .LVU1587
 5358 00a4 074A     		ldr	r2, .L585+8
1231:src/keys.c    **** 	}
 5359              		.loc 1 1231 3 view .LVU1588
 5360 00a6 3368     		ldr	r3, [r6]
1229:src/keys.c    **** #endif
 5361              		.loc 1 1229 15 view .LVU1589
 5362 00a8 0121     		movs	r1, #1
 5363 00aa 1160     		str	r1, [r2]
1231:src/keys.c    **** 	}
 5364              		.loc 1 1231 3 is_stmt 1 view .LVU1590
 5365 00ac 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5366 00b0 6FF30002 		bfc	r2, #0, #1
 5367 00b4 83F8AD27 		strb	r2, [r3, #1965]
 5368              	.LVL427:
1231:src/keys.c    **** 	}
 5369              		.loc 1 1231 3 is_stmt 0 view .LVU1591
 5370              	.LBE545:
 5371              	.LBE544:
1233:src/keys.c    **** 
 5372              		.loc 1 1233 1 view .LVU1592
 5373 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5374              	.L586:
 5375 00ba 00BF     		.align	2
 5376              	.L585:
 5377 00bc 00000000 		.word	main_ram
 5378 00c0 00000000 		.word	StateWhileOn
 5379 00c4 00000000 		.word	RectPolConv
 5380              		.cfi_endproc
 5381              	.LFE23:
 5383              		.section	.text.stack_begin,"ax",%progbits
 5384              		.align	1
 5385              		.p2align 2,,3
 5386              		.global	stack_begin
 5387              		.syntax unified
 5388              		.thumb
 5389              		.thumb_func
 5390              		.fpu fpv4-sp-d16
 5392              	stack_begin:
 5393              	.LVL428:
 5394              	.LFB25:
1254:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5395              		.loc 1 1254 33 is_stmt 1 view -0
 5396              		.cfi_startproc
 5397              		@ args = 0, pretend = 0, frame = 0
 5398              		@ frame_needed = 0, uses_anonymous_args = 0
1257:src/keys.c    **** 	if ( State2.state_lift ){
 5399              		.loc 1 1257 2 view .LVU1594
1254:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5400              		.loc 1 1254 33 is_stmt 0 view .LVU1595
ARM GAS  /tmp/ccc9ZrJ3.s 			page 176


 5401 0000 38B5     		push	{r3, r4, r5, lr}
 5402              		.cfi_def_cfa_offset 16
 5403              		.cfi_offset 3, -16
 5404              		.cfi_offset 4, -12
 5405              		.cfi_offset 5, -8
 5406              		.cfi_offset 14, -4
1257:src/keys.c    **** 	if ( State2.state_lift ){
 5407              		.loc 1 1257 2 view .LVU1596
 5408 0002 2C4B     		ldr	r3, .L594
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5409              		.loc 1 1258 7 view .LVU1597
 5410 0004 2C4C     		ldr	r4, .L594+4
1257:src/keys.c    **** 	if ( State2.state_lift ){
 5411              		.loc 1 1257 2 view .LVU1598
 5412 0006 1B68     		ldr	r3, [r3]
 5413 0008 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5414 000c 42F00102 		orr	r2, r2, #1
 5415 0010 83F8AD27 		strb	r2, [r3, #1965]
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5416              		.loc 1 1258 2 is_stmt 1 view .LVU1599
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5417              		.loc 1 1258 7 is_stmt 0 view .LVU1600
 5418 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5419              		.loc 1 1258 5 view .LVU1601
 5420 0016 12F04002 		ands	r2, r2, #64
 5421 001a 26D0     		beq	.L588
1259:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5422              		.loc 1 1259 3 is_stmt 1 view .LVU1602
 5423 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5424 0020 42F01002 		orr	r2, r2, #16
 5425 0024 83F8AC27 		strb	r2, [r3, #1964]
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5426              		.loc 1 1260 3 view .LVU1603
 5427 0028 6E20     		movs	r0, #110
 5428              	.LVL429:
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5429              		.loc 1 1260 3 is_stmt 0 view .LVU1604
 5430 002a FFF7FEFF 		bl	get_reg_n
 5431              	.LVL430:
 5432 002e 0546     		mov	r5, r0
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5433              		.loc 1 1260 33 view .LVU1605
 5434 0030 6A20     		movs	r0, #106
 5435 0032 FFF7FEFF 		bl	get_reg_n
 5436              	.LVL431:
 5437 0036 0146     		mov	r1, r0
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5438              		.loc 1 1260 3 view .LVU1606
 5439 0038 2846     		mov	r0, r5
 5440 003a FFF7FEFF 		bl	copyreg
 5441              	.LVL432:
1261:src/keys.c    **** 		lift();
 5442              		.loc 1 1261 3 is_stmt 1 view .LVU1607
 5443 003e 6F20     		movs	r0, #111
 5444 0040 FFF7FEFF 		bl	get_reg_n
 5445              	.LVL433:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 177


 5446 0044 0546     		mov	r5, r0
1261:src/keys.c    **** 		lift();
 5447              		.loc 1 1261 33 is_stmt 0 view .LVU1608
 5448 0046 6B20     		movs	r0, #107
 5449 0048 FFF7FEFF 		bl	get_reg_n
 5450              	.LVL434:
 5451 004c 0146     		mov	r1, r0
1261:src/keys.c    **** 		lift();
 5452              		.loc 1 1261 3 view .LVU1609
 5453 004e 2846     		mov	r0, r5
 5454 0050 FFF7FEFF 		bl	copyreg
 5455              	.LVL435:
1262:src/keys.c    **** 		zero_X();
 5456              		.loc 1 1262 3 is_stmt 1 view .LVU1610
 5457 0054 FFF7FEFF 		bl	lift
 5458              	.LVL436:
1263:src/keys.c    **** 		lift();
 5459              		.loc 1 1263 3 view .LVU1611
 5460 0058 FFF7FEFF 		bl	zero_X
 5461              	.LVL437:
1264:src/keys.c    **** 		State2.state_lift = 0;
 5462              		.loc 1 1264 3 view .LVU1612
 5463 005c FFF7FEFF 		bl	lift
 5464              	.LVL438:
1265:src/keys.c    **** 	}
 5465              		.loc 1 1265 3 view .LVU1613
1265:src/keys.c    **** 	}
 5466              		.loc 1 1265 21 is_stmt 0 view .LVU1614
 5467 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5468 0062 6FF38613 		bfc	r3, #6, #1
 5469 0066 E375     		strb	r3, [r4, #23]
 5470              	.L587:
1274:src/keys.c    **** 
 5471              		.loc 1 1274 1 view .LVU1615
 5472 0068 38BD     		pop	{r3, r4, r5, pc}
 5473              	.LVL439:
 5474              	.L588:
1268:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5475              		.loc 1 1268 3 is_stmt 1 view .LVU1616
 5476 006a 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 5477 006e 62F30411 		bfi	r1, r2, #4, #1
 5478 0072 83F8AC17 		strb	r1, [r3, #1964]
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5479              		.loc 1 1269 3 view .LVU1617
 5480 0076 0546     		mov	r5, r0
 5481 0078 6E20     		movs	r0, #110
 5482              	.LVL440:
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5483              		.loc 1 1269 3 is_stmt 0 view .LVU1618
 5484 007a FFF7FEFF 		bl	get_reg_n
 5485              	.LVL441:
 5486 007e 0446     		mov	r4, r0
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5487              		.loc 1 1269 33 view .LVU1619
 5488 0080 6420     		movs	r0, #100
 5489 0082 FFF7FEFF 		bl	get_reg_n
 5490              	.LVL442:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 178


 5491 0086 0146     		mov	r1, r0
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5492              		.loc 1 1269 3 view .LVU1620
 5493 0088 2046     		mov	r0, r4
 5494 008a FFF7FEFF 		bl	copyreg
 5495              	.LVL443:
1270:src/keys.c    **** 		zero_X();
 5496              		.loc 1 1270 3 is_stmt 1 view .LVU1621
 5497 008e 6F20     		movs	r0, #111
 5498 0090 FFF7FEFF 		bl	get_reg_n
 5499              	.LVL444:
 5500 0094 0446     		mov	r4, r0
1270:src/keys.c    **** 		zero_X();
 5501              		.loc 1 1270 33 is_stmt 0 view .LVU1622
 5502 0096 6520     		movs	r0, #101
 5503 0098 FFF7FEFF 		bl	get_reg_n
 5504              	.LVL445:
 5505 009c 0146     		mov	r1, r0
1270:src/keys.c    **** 		zero_X();
 5506              		.loc 1 1270 3 view .LVU1623
 5507 009e 2046     		mov	r0, r4
 5508 00a0 FFF7FEFF 		bl	copyreg
 5509              	.LVL446:
1271:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5510              		.loc 1 1271 3 is_stmt 1 view .LVU1624
 5511 00a4 FFF7FEFF 		bl	zero_X
 5512              	.LVL447:
1272:src/keys.c    **** 	}
 5513              		.loc 1 1272 3 view .LVU1625
1272:src/keys.c    **** 	}
 5514              		.loc 1 1272 6 is_stmt 0 view .LVU1626
 5515 00a8 002D     		cmp	r5, #0
 5516 00aa DDD0     		beq	.L587
1272:src/keys.c    **** 	}
 5517              		.loc 1 1272 17 is_stmt 1 discriminator 1 view .LVU1627
1274:src/keys.c    **** 
 5518              		.loc 1 1274 1 is_stmt 0 discriminator 1 view .LVU1628
 5519 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5520              		.cfi_restore 14
 5521              		.cfi_restore 5
 5522              		.cfi_restore 4
 5523              		.cfi_restore 3
 5524              		.cfi_def_cfa_offset 0
 5525              	.LVL448:
1272:src/keys.c    **** 	}
 5526              		.loc 1 1272 17 discriminator 1 view .LVU1629
 5527 00b0 FFF7FEBF 		b	zero_Y
 5528              	.LVL449:
 5529              	.L595:
 5530              		.align	2
 5531              	.L594:
 5532 00b4 00000000 		.word	main_ram
 5533 00b8 00000000 		.word	StateWhileOn
 5534              		.cfi_endproc
 5535              	.LFE25:
 5537              		.section	.text.current_catalogue_max,"ax",%progbits
 5538              		.align	1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 179


 5539              		.p2align 2,,3
 5540              		.global	current_catalogue_max
 5541              		.syntax unified
 5542              		.thumb
 5543              		.thumb_func
 5544              		.fpu fpv4-sp-d16
 5546              	current_catalogue_max:
 5547              	.LFB44:
2470:src/keys.c    **** 	// A quick table of catalogue sizes
 5548              		.loc 1 2470 33 is_stmt 1 view -0
 5549              		.cfi_startproc
 5550              		@ args = 0, pretend = 0, frame = 0
 5551              		@ frame_needed = 0, uses_anonymous_args = 0
 5552              		@ link register save eliminated.
2473:src/keys.c    **** 	{
 5553              		.loc 1 2473 2 view .LVU1631
2504:src/keys.c    **** #endif
 5554              		.loc 1 2504 2 view .LVU1632
2504:src/keys.c    **** #endif
 5555              		.loc 1 2504 31 is_stmt 0 view .LVU1633
 5556 0000 024B     		ldr	r3, .L597
2504:src/keys.c    **** #endif
 5557              		.loc 1 2504 24 view .LVU1634
 5558 0002 034A     		ldr	r2, .L597+4
2504:src/keys.c    **** #endif
 5559              		.loc 1 2504 31 view .LVU1635
 5560 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2506:src/keys.c    **** 
 5561              		.loc 1 2506 1 view .LVU1636
 5562 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5563 0008 7047     		bx	lr
 5564              	.L598:
 5565 000a 00BF     		.align	2
 5566              	.L597:
 5567 000c 00000000 		.word	StateWhileOn
 5568 0010 00000000 		.word	.LANCHOR8
 5569              		.cfi_endproc
 5570              	.LFE44:
 5572              		.section	.text.current_catalogue,"ax",%progbits
 5573              		.align	1
 5574              		.p2align 2,,3
 5575              		.global	current_catalogue
 5576              		.syntax unified
 5577              		.thumb
 5578              		.thumb_func
 5579              		.fpu fpv4-sp-d16
 5581              	current_catalogue:
 5582              	.LVL450:
 5583              	.LFB46:
2519:src/keys.c    **** 	// A quick table of catalogue tables
 5584              		.loc 1 2519 33 is_stmt 1 view -0
 5585              		.cfi_startproc
 5586              		@ args = 0, pretend = 0, frame = 0
 5587              		@ frame_needed = 0, uses_anonymous_args = 0
 5588              		@ link register save eliminated.
2522:src/keys.c    **** 	{
 5589              		.loc 1 2522 2 view .LVU1638
ARM GAS  /tmp/ccc9ZrJ3.s 			page 180


2549:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5590              		.loc 1 2549 2 view .LVU1639
2550:src/keys.c    **** 	int m, i;
 5591              		.loc 1 2550 2 view .LVU1640
2550:src/keys.c    **** 	int m, i;
 5592              		.loc 1 2550 25 is_stmt 0 view .LVU1641
 5593 0000 314A     		ldr	r2, .L626
2550:src/keys.c    **** 	int m, i;
 5594              		.loc 1 2550 15 view .LVU1642
 5595 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5596              	.LVL451:
2551:src/keys.c    **** 	unsigned p, q;
 5597              		.loc 1 2551 2 is_stmt 1 view .LVU1643
2552:src/keys.c    **** 
 5598              		.loc 1 2552 2 view .LVU1644
2554:src/keys.c    **** 		if (n == OP_ZERO)
 5599              		.loc 1 2554 2 view .LVU1645
2554:src/keys.c    **** 		if (n == OP_ZERO)
 5600              		.loc 1 2554 5 is_stmt 0 view .LVU1646
 5601 0004 102B     		cmp	r3, #16
 5602 0006 39D0     		beq	.L620
2559:src/keys.c    **** 		if (n == OP_ZERO)
 5603              		.loc 1 2559 2 is_stmt 1 view .LVU1647
2559:src/keys.c    **** 		if (n == OP_ZERO)
 5604              		.loc 1 2559 5 is_stmt 0 view .LVU1648
 5605 0008 112B     		cmp	r3, #17
 5606 000a 32D0     		beq	.L621
2564:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5607              		.loc 1 2564 2 is_stmt 1 view .LVU1649
2564:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5608              		.loc 1 2564 5 is_stmt 0 view .LVU1650
 5609 000c 122B     		cmp	r3, #18
 5610 000e 45D0     		beq	.L622
2577:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5611              		.loc 1 2577 2 is_stmt 1 view .LVU1651
2577:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5612              		.loc 1 2577 5 is_stmt 0 view .LVU1652
 5613 0010 0E2B     		cmp	r3, #14
 5614 0012 38D0     		beq	.L623
2580:src/keys.c    **** 
 5615              		.loc 1 2580 3 is_stmt 1 view .LVU1653
2580:src/keys.c    **** 
 5616              		.loc 1 2580 7 is_stmt 0 view .LVU1654
 5617 0014 2D4A     		ldr	r2, .L626+4
2582:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5618              		.loc 1 2582 35 view .LVU1655
 5619 0016 A3F10B01 		sub	r1, r3, #11
2582:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5620              		.loc 1 2582 5 view .LVU1656
 5621 001a 0429     		cmp	r1, #4
2580:src/keys.c    **** 
 5622              		.loc 1 2580 7 view .LVU1657
 5623 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5624              	.LVL452:
2582:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5625              		.loc 1 2582 2 is_stmt 1 view .LVU1658
2582:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 181


 5626              		.loc 1 2582 5 is_stmt 0 view .LVU1659
 5627 0020 38D9     		bls	.L606
2585:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5628              		.loc 1 2585 2 is_stmt 1 view .LVU1660
2585:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5629              		.loc 1 2585 5 is_stmt 0 view .LVU1661
 5630 0022 142B     		cmp	r3, #20
 5631 0024 4DD8     		bhi	.L614
2589:src/keys.c    **** 	p = cat[0];
 5632              		.loc 1 2589 2 is_stmt 1 view .LVU1662
2519:src/keys.c    **** 	// A quick table of catalogue tables
 5633              		.loc 1 2519 33 is_stmt 0 view .LVU1663
 5634 0026 10B4     		push	{r4}
 5635              		.cfi_def_cfa_offset 4
 5636              		.cfi_offset 4, -4
2589:src/keys.c    **** 	p = cat[0];
 5637              		.loc 1 2589 11 view .LVU1664
 5638 0028 00EBA001 		add	r1, r0, r0, asr #2
2589:src/keys.c    **** 	p = cat[0];
 5639              		.loc 1 2589 6 view .LVU1665
 5640 002c 5318     		adds	r3, r2, r1
 5641              	.LVL453:
2590:src/keys.c    **** 	q = cat[1];
 5642              		.loc 1 2590 2 is_stmt 1 view .LVU1666
2591:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5643              		.loc 1 2591 2 view .LVU1667
2592:src/keys.c    **** 
 5644              		.loc 1 2592 2 view .LVU1668
2592:src/keys.c    **** 
 5645              		.loc 1 2592 35 is_stmt 0 view .LVU1669
 5646 002e 4000     		lsls	r0, r0, #1
 5647              	.LVL454:
2590:src/keys.c    **** 	q = cat[1];
 5648              		.loc 1 2590 4 view .LVU1670
 5649 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5650              	.LVL455:
2591:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5651              		.loc 1 2591 4 view .LVU1671
 5652 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5653              	.LVL456:
2591:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5654              		.loc 1 2591 4 view .LVU1672
 5655 0034 2649     		ldr	r1, .L626+8
 5656              	.LVL457:
2592:src/keys.c    **** 
 5657              		.loc 1 2592 54 view .LVU1673
 5658 0036 C443     		mvns	r4, r0
2592:src/keys.c    **** 
 5659              		.loc 1 2592 35 view .LVU1674
 5660 0038 00F00600 		and	r0, r0, #6
2592:src/keys.c    **** 
 5661              		.loc 1 2592 54 view .LVU1675
 5662 003c 04F00604 		and	r4, r4, #6
2592:src/keys.c    **** 
 5663              		.loc 1 2592 24 view .LVU1676
 5664 0040 0230     		adds	r0, r0, #2
2592:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 182


 5665              		.loc 1 2592 48 view .LVU1677
 5666 0042 E340     		lsrs	r3, r3, r4
 5667              	.LVL458:
2592:src/keys.c    **** 
 5668              		.loc 1 2592 18 view .LVU1678
 5669 0044 02FA00F0 		lsl	r0, r2, r0
2592:src/keys.c    **** 
 5670              		.loc 1 2592 43 view .LVU1679
 5671 0048 1843     		orrs	r0, r0, r3
2592:src/keys.c    **** 
 5672              		.loc 1 2592 4 view .LVU1680
 5673 004a C0F30903 		ubfx	r3, r0, #0, #10
 5674              	.LVL459:
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5675              		.loc 1 2595 2 is_stmt 1 view .LVU1681
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5676              		.loc 1 2595 12 view .LVU1682
2592:src/keys.c    **** 
 5677              		.loc 1 2592 4 is_stmt 0 view .LVU1683
 5678 004e 3422     		movs	r2, #52
 5679              	.LVL460:
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5680              		.loc 1 2595 8 view .LVU1684
 5681 0050 0020     		movs	r0, #0
 5682 0052 01E0     		b	.L610
 5683              	.LVL461:
 5684              	.L625:
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5685              		.loc 1 2595 8 view .LVU1685
 5686 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5687              	.LVL462:
 5688              	.L610:
2596:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5689              		.loc 1 2596 3 is_stmt 1 view .LVU1686
2598:src/keys.c    **** 	}
 5690              		.loc 1 2598 3 view .LVU1687
2596:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5691              		.loc 1 2596 6 is_stmt 0 view .LVU1688
 5692 0058 9A42     		cmp	r2, r3
 5693 005a 2FDC     		bgt	.L624
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5694              		.loc 1 2595 25 discriminator 2 view .LVU1689
 5695 005c 0130     		adds	r0, r0, #1
 5696              	.LVL463:
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5697              		.loc 1 2595 2 discriminator 2 view .LVU1690
 5698 005e 0728     		cmp	r0, #7
2598:src/keys.c    **** 	}
 5699              		.loc 1 2598 5 discriminator 2 view .LVU1691
 5700 0060 A3EB0203 		sub	r3, r3, r2
 5701              	.LVL464:
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5702              		.loc 1 2595 24 is_stmt 1 discriminator 2 view .LVU1692
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5703              		.loc 1 2595 12 discriminator 2 view .LVU1693
2595:src/keys.c    **** 		if (m < opcode_breaks[i])
 5704              		.loc 1 2595 2 is_stmt 0 discriminator 2 view .LVU1694
ARM GAS  /tmp/ccc9ZrJ3.s 			page 183


 5705 0064 F6D1     		bne	.L625
2600:src/keys.c    **** }
 5706              		.loc 1 2600 2 is_stmt 1 view .LVU1695
2600:src/keys.c    **** }
 5707              		.loc 1 2600 9 is_stmt 0 view .LVU1696
 5708 0066 03F12000 		add	r0, r3, #32
 5709              	.LVL465:
2600:src/keys.c    **** }
 5710              		.loc 1 2600 9 view .LVU1697
 5711 006a 0002     		lsls	r0, r0, #8
 5712              	.L599:
2601:src/keys.c    **** 
 5713              		.loc 1 2601 1 view .LVU1698
 5714 006c 5DF8044B 		ldr	r4, [sp], #4
 5715              		.cfi_restore 4
 5716              		.cfi_def_cfa_offset 0
 5717 0070 7047     		bx	lr
 5718              	.LVL466:
 5719              	.L621:
2560:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5720              		.loc 1 2560 3 is_stmt 1 view .LVU1699
2560:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5721              		.loc 1 2560 6 is_stmt 0 view .LVU1700
 5722 0072 4B28     		cmp	r0, #75
 5723 0074 1FD0     		beq	.L612
2562:src/keys.c    **** 	}
 5724              		.loc 1 2562 3 is_stmt 1 view .LVU1701
2562:src/keys.c    **** 	}
 5725              		.loc 1 2562 10 is_stmt 0 view .LVU1702
 5726 0076 40F40450 		orr	r0, r0, #8448
 5727              	.LVL467:
2562:src/keys.c    **** 	}
 5728              		.loc 1 2562 10 view .LVU1703
 5729 007a 7047     		bx	lr
 5730              	.LVL468:
 5731              	.L620:
2555:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5732              		.loc 1 2555 3 is_stmt 1 view .LVU1704
2555:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5733              		.loc 1 2555 6 is_stmt 0 view .LVU1705
 5734 007c 4B28     		cmp	r0, #75
 5735 007e 17D0     		beq	.L611
2557:src/keys.c    **** 	}
 5736              		.loc 1 2557 3 is_stmt 1 view .LVU1706
2557:src/keys.c    **** 	}
 5737              		.loc 1 2557 10 is_stmt 0 view .LVU1707
 5738 0080 40F40050 		orr	r0, r0, #8192
 5739              	.LVL469:
2557:src/keys.c    **** 	}
 5740              		.loc 1 2557 10 view .LVU1708
 5741 0084 7047     		bx	lr
 5742              	.LVL470:
 5743              	.L623:
2577:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5744              		.loc 1 2577 35 discriminator 1 view .LVU1709
 5745 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2578:src/keys.c    **** 	else
ARM GAS  /tmp/ccc9ZrJ3.s 			page 184


 5746              		.loc 1 2578 7 discriminator 1 view .LVU1710
 5747 0088 124B     		ldr	r3, .L626+12
 5748              	.LVL471:
2578:src/keys.c    **** 	else
 5749              		.loc 1 2578 7 discriminator 1 view .LVU1711
 5750 008a 134A     		ldr	r2, .L626+16
 5751              	.LVL472:
2578:src/keys.c    **** 	else
 5752              		.loc 1 2578 7 discriminator 1 view .LVU1712
 5753 008c 11F0100F 		tst	r1, #16
 5754 0090 18BF     		it	ne
 5755 0092 1A46     		movne	r2, r3
 5756              	.L606:
 5757              	.LVL473:
2583:src/keys.c    **** 	}
 5758              		.loc 1 2583 3 is_stmt 1 view .LVU1713
 5759              	.LBB546:
 5760              	.LBI546:
2512:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5761              		.loc 1 2512 15 view .LVU1714
 5762              	.LBB547:
2513:src/keys.c    **** }
 5763              		.loc 1 2513 2 view .LVU1715
2513:src/keys.c    **** }
 5764              		.loc 1 2513 9 is_stmt 0 view .LVU1716
 5765 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5766              	.LVL474:
2513:src/keys.c    **** }
 5767              		.loc 1 2513 9 view .LVU1717
 5768 0096 40F48840 		orr	r0, r0, #17408
 5769              	.LVL475:
2513:src/keys.c    **** }
 5770              		.loc 1 2513 9 view .LVU1718
 5771              	.LBE547:
 5772              	.LBE546:
2583:src/keys.c    **** 	}
 5773              		.loc 1 2583 10 view .LVU1719
 5774 009a 7047     		bx	lr
 5775              	.LVL476:
 5776              	.L622:
 5777              	.LBB548:
2565:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5778              		.loc 1 2565 3 is_stmt 1 view .LVU1720
2565:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5779              		.loc 1 2565 33 is_stmt 0 view .LVU1721
 5780 009c 0F4B     		ldr	r3, .L626+20
 5781              	.LVL477:
2565:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5782              		.loc 1 2565 13 view .LVU1722
 5783 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5784              	.LVL478:
2566:src/keys.c    **** 			// Monadic conversion routine
 5785              		.loc 1 2566 3 is_stmt 1 view .LVU1723
2566:src/keys.c    **** 			// Monadic conversion routine
 5786              		.loc 1 2566 6 is_stmt 0 view .LVU1724
 5787 00a0 5728     		cmp	r0, #87
2568:src/keys.c    **** 		else
ARM GAS  /tmp/ccc9ZrJ3.s 			page 185


 5788              		.loc 1 2568 4 is_stmt 1 view .LVU1725
2568:src/keys.c    **** 		else
 5789              		.loc 1 2568 25 is_stmt 0 view .LVU1726
 5790 00a2 C6BF     		itte	gt
 5791 00a4 5838     		subgt	r0, r0, #88
 5792              	.LVL479:
2568:src/keys.c    **** 		else
 5793              		.loc 1 2568 18 view .LVU1727
 5794 00a6 40F40070 		orrgt	r0, r0, #512
2570:src/keys.c    **** 	}
 5795              		.loc 1 2570 4 is_stmt 1 view .LVU1728
2570:src/keys.c    **** 	}
 5796              		.loc 1 2570 11 is_stmt 0 view .LVU1729
 5797 00aa 40F40C40 		orrle	r0, r0, #35840
 5798 00ae 7047     		bx	lr
 5799              	.LVL480:
 5800              	.L611:
2570:src/keys.c    **** 	}
 5801              		.loc 1 2570 11 view .LVU1730
 5802              	.LBE548:
2556:src/keys.c    **** 		return CONST(n);
 5803              		.loc 1 2556 11 view .LVU1731
 5804 00b0 4FF42740 		mov	r0, #42752
 5805              	.LVL481:
2556:src/keys.c    **** 		return CONST(n);
 5806              		.loc 1 2556 11 view .LVU1732
 5807 00b4 7047     		bx	lr
 5808              	.LVL482:
 5809              	.L612:
2561:src/keys.c    **** 		return CONST_CMPLX(n);
 5810              		.loc 1 2561 11 view .LVU1733
 5811 00b6 4FF42840 		mov	r0, #43008
 5812              	.LVL483:
2561:src/keys.c    **** 		return CONST_CMPLX(n);
 5813              		.loc 1 2561 11 view .LVU1734
 5814 00ba 7047     		bx	lr
 5815              	.LVL484:
 5816              	.L624:
 5817              		.cfi_def_cfa_offset 4
 5818              		.cfi_offset 4, -4
2597:src/keys.c    **** 		m -= opcode_breaks[i];
 5819              		.loc 1 2597 4 is_stmt 1 view .LVU1735
2597:src/keys.c    **** 		m -= opcode_breaks[i];
 5820              		.loc 1 2597 29 is_stmt 0 view .LVU1736
 5821 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5822              	.LVL485:
2597:src/keys.c    **** 		m -= opcode_breaks[i];
 5823              		.loc 1 2597 29 view .LVU1737
 5824 00c0 D4E7     		b	.L599
 5825              	.LVL486:
 5826              	.L614:
 5827              		.cfi_def_cfa_offset 0
 5828              		.cfi_restore 4
2586:src/keys.c    **** 
 5829              		.loc 1 2586 10 view .LVU1738
 5830 00c2 4FF48070 		mov	r0, #256
 5831              	.LVL487:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 186


2601:src/keys.c    **** 
 5832              		.loc 1 2601 1 view .LVU1739
 5833 00c6 7047     		bx	lr
 5834              	.L627:
 5835              		.align	2
 5836              	.L626:
 5837 00c8 00000000 		.word	StateWhileOn
 5838 00cc 00000000 		.word	.LANCHOR12
 5839 00d0 01000000 		.word	.LANCHOR13+1
 5840 00d4 00000000 		.word	.LANCHOR10
 5841 00d8 00000000 		.word	.LANCHOR9
 5842 00dc 00000000 		.word	.LANCHOR11
 5843              		.cfi_endproc
 5844              	.LFE46:
 5846              		.section	.text.process_catalogue,"ax",%progbits
 5847              		.align	1
 5848              		.p2align 2,,3
 5849              		.syntax unified
 5850              		.thumb
 5851              		.thumb_func
 5852              		.fpu fpv4-sp-d16
 5854              	process_catalogue:
 5855              	.LVL488:
 5856              	.LFB48:
2615:src/keys.c    ****    int pos = State.catpos;
 5857              		.loc 1 2615 93 is_stmt 1 view -0
 5858              		.cfi_startproc
 5859              		@ args = 0, pretend = 0, frame = 16
 5860              		@ frame_needed = 0, uses_anonymous_args = 0
2615:src/keys.c    ****    int pos = State.catpos;
 5861              		.loc 1 2615 93 is_stmt 0 view .LVU1741
 5862 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5863              		.cfi_def_cfa_offset 36
 5864              		.cfi_offset 4, -36
 5865              		.cfi_offset 5, -32
 5866              		.cfi_offset 6, -28
 5867              		.cfi_offset 7, -24
 5868              		.cfi_offset 8, -20
 5869              		.cfi_offset 9, -16
 5870              		.cfi_offset 10, -12
 5871              		.cfi_offset 11, -8
 5872              		.cfi_offset 14, -4
2616:src/keys.c    ****    int ch;
 5873              		.loc 1 2616 14 view .LVU1742
 5874 0004 DFF8EC92 		ldr	r9, .L742+24
 5875              	.LBB549:
 5876              	.LBB550:
2504:src/keys.c    **** #endif
 5877              		.loc 1 2504 31 view .LVU1743
 5878 0008 B44F     		ldr	r7, .L742
 5879              	.LBE550:
 5880              	.LBE549:
2616:src/keys.c    ****    int ch;
 5881              		.loc 1 2616 14 view .LVU1744
 5882 000a D9F80040 		ldr	r4, [r9]
 5883              	.LBB555:
 5884              	.LBB551:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 187


2504:src/keys.c    **** #endif
 5885              		.loc 1 2504 31 view .LVU1745
 5886 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5887              	.LBE551:
 5888              	.LBE555:
2616:src/keys.c    ****    int ch;
 5889              		.loc 1 2616 19 view .LVU1746
 5890 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5891              	.LBB556:
 5892              	.LBB552:
2504:src/keys.c    **** #endif
 5893              		.loc 1 2504 24 view .LVU1747
 5894 0016 B24B     		ldr	r3, .L742+4
 5895              	.LBE552:
 5896              	.LBE556:
2616:src/keys.c    ****    int ch;
 5897              		.loc 1 2616 4 is_stmt 1 view .LVU1748
2615:src/keys.c    ****    int pos = State.catpos;
 5898              		.loc 1 2615 93 is_stmt 0 view .LVU1749
 5899 0018 85B0     		sub	sp, sp, #20
 5900              		.cfi_def_cfa_offset 56
 5901              	.LBB557:
 5902              	.LBB553:
2504:src/keys.c    **** #endif
 5903              		.loc 1 2504 24 view .LVU1750
 5904 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 5905              	.LBE553:
 5906              	.LBE557:
2615:src/keys.c    ****    int pos = State.catpos;
 5907              		.loc 1 2615 93 view .LVU1751
 5908 001e 1646     		mov	r6, r2
2616:src/keys.c    ****    int ch;
 5909              		.loc 1 2616 8 view .LVU1752
 5910 0020 C5F34615 		ubfx	r5, r5, #5, #7
 5911              	.LVL489:
2617:src/keys.c    ****    const int ctmax = current_catalogue_max();
 5912              		.loc 1 2617 4 is_stmt 1 view .LVU1753
2618:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 5913              		.loc 1 2618 4 view .LVU1754
 5914              	.LBB558:
 5915              	.LBI549:
2470:src/keys.c    **** 	// A quick table of catalogue sizes
 5916              		.loc 1 2470 5 view .LVU1755
 5917              	.LBB554:
2473:src/keys.c    **** 	{
 5918              		.loc 1 2473 2 view .LVU1756
2504:src/keys.c    **** #endif
 5919              		.loc 1 2504 2 view .LVU1757
2504:src/keys.c    **** #endif
 5920              		.loc 1 2504 2 is_stmt 0 view .LVU1758
 5921              	.LBE554:
 5922              	.LBE558:
2619:src/keys.c    **** 
 5923              		.loc 1 2619 4 is_stmt 1 view .LVU1759
2621:src/keys.c    ****      switch (c) {
 5924              		.loc 1 2621 4 view .LVU1760
2621:src/keys.c    ****      switch (c) {
ARM GAS  /tmp/ccc9ZrJ3.s 			page 188


 5925              		.loc 1 2621 7 is_stmt 0 view .LVU1761
 5926 0024 0029     		cmp	r1, #0
 5927 0026 65D0     		beq	.L727
2682:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5928              		.loc 1 2682 11 is_stmt 1 view .LVU1762
2682:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5929              		.loc 1 2682 14 is_stmt 0 view .LVU1763
 5930 0028 0129     		cmp	r1, #1
 5931 002a 00F0ED80 		beq	.L728
2716:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5932              		.loc 1 2716 11 is_stmt 1 view .LVU1764
2716:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5933              		.loc 1 2716 14 is_stmt 0 view .LVU1765
 5934 002e 0229     		cmp	r1, #2
 5935 0030 00F00B81 		beq	.L729
 5936              	.LVL490:
 5937              	.L664:
 5938              	.LBB559:
 5939              	.LBB560:
 491:src/keys.c    **** }
 5940              		.loc 1 491 2 is_stmt 1 view .LVU1766
 5941              	.LBB561:
 5942              	.LBI561:
 131:src/keys.c    **** {
 5943              		.loc 1 131 12 view .LVU1767
 5944              	.LBB562:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5945              		.loc 1 133 2 view .LVU1768
 143:src/keys.c    **** }
 5946              		.loc 1 143 2 view .LVU1769
 143:src/keys.c    **** }
 5947              		.loc 1 143 23 is_stmt 0 view .LVU1770
 5948 0034 AB4B     		ldr	r3, .L742+8
 5949              	.LBE562:
 5950              	.LBE561:
 491:src/keys.c    **** }
 5951              		.loc 1 491 49 view .LVU1771
 5952 0036 AC4A     		ldr	r2, .L742+12
 5953              	.LBB564:
 5954              	.LBB563:
 143:src/keys.c    **** }
 5955              		.loc 1 143 23 view .LVU1772
 5956 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 5957              	.LBE563:
 5958              	.LBE564:
 491:src/keys.c    **** }
 5959              		.loc 1 491 49 view .LVU1773
 5960 003a 03EB4303 		add	r3, r3, r3, lsl #1
 5961 003e 02EB4303 		add	r3, r2, r3, lsl #1
 5962              	.LBE560:
 5963              	.LBE559:
 5964              	.LBB568:
 5965              	.LBB569:
 5966              	.LBB570:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5967              		.loc 1 106 16 view .LVU1774
 5968 0042 0025     		movs	r5, #0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 189


 5969              	.LVL491:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5970              		.loc 1 106 16 view .LVU1775
 5971              	.LBE570:
 5972              	.LBE569:
 5973              	.LBE568:
2726:src/keys.c    ****    reset_shift();
 5974              		.loc 1 2726 9 view .LVU1776
 5975 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 5976              	.LVL492:
2726:src/keys.c    ****    reset_shift();
 5977              		.loc 1 2726 9 view .LVU1777
 5978 0046 FFF7FEFF 		bl	remap_chars
 5979              	.LVL493:
2726:src/keys.c    ****    reset_shift();
 5980              		.loc 1 2726 9 view .LVU1778
 5981 004a 0446     		mov	r4, r0
 5982              	.LVL494:
2727:src/keys.c    ****    if (ch == '\0')
 5983              		.loc 1 2727 4 is_stmt 1 view .LVU1779
 5984              	.LBB575:
 5985              	.LBI568:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 5986              		.loc 1 114 13 view .LVU1780
 5987              	.LBE575:
 115:src/keys.c    **** }
 5988              		.loc 1 115 2 view .LVU1781
 5989              	.LBB576:
 5990              	.LBB574:
 5991              	.LBI569:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5992              		.loc 1 104 20 view .LVU1782
 5993              	.LBB573:
 105:src/keys.c    **** 	State2.shifts = shift;
 5994              		.loc 1 105 2 view .LVU1783
 5995              	.LBB571:
 5996              	.LBI571:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5997              		.loc 1 96 13 view .LVU1784
 5998              	.LBB572:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5999              		.loc 1 97 2 view .LVU1785
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6000              		.loc 1 97 18 is_stmt 0 view .LVU1786
 6001 004c FFF7FEFF 		bl	shift_down
 6002              	.LVL495:
  98:src/keys.c    **** }
 6003              		.loc 1 98 2 is_stmt 1 view .LVU1787
 6004              	.LBE572:
 6005              	.LBE571:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6006              		.loc 1 106 2 view .LVU1788
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6007              		.loc 1 106 16 is_stmt 0 view .LVU1789
 6008 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6009              		.loc 1 108 2 is_stmt 1 view .LVU1790
ARM GAS  /tmp/ccc9ZrJ3.s 			page 190


 6010              	.LVL496:
 108:src/keys.c    **** }
 6011              		.loc 1 108 2 is_stmt 0 view .LVU1791
 6012              	.LBE573:
 6013              	.LBE574:
 6014              	.LBE576:
2728:src/keys.c    ****      return STATE_UNFINISHED;
 6015              		.loc 1 2728 4 is_stmt 1 view .LVU1792
2728:src/keys.c    ****      return STATE_UNFINISHED;
 6016              		.loc 1 2728 7 is_stmt 0 view .LVU1793
 6017 0052 002C     		cmp	r4, #0
 6018 0054 6FD0     		beq	.L726
2730:src/keys.c    ****      // No multi character search in alpha catalogues
 6019              		.loc 1 2730 4 is_stmt 1 view .LVU1794
2730:src/keys.c    ****      // No multi character search in alpha catalogues
 6020              		.loc 1 2730 7 is_stmt 0 view .LVU1795
 6021 0056 AAF10B0A 		sub	r10, r10, #11
 6022              	.LVL497:
2730:src/keys.c    ****      // No multi character search in alpha catalogues
 6023              		.loc 1 2730 7 view .LVU1796
 6024 005a BAF1040F 		cmp	r10, #4
 6025 005e 40F2CB80 		bls	.L678
2734:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6026              		.loc 1 2734 4 is_stmt 1 view .LVU1797
2734:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6027              		.loc 1 2734 8 is_stmt 0 view .LVU1798
 6028 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2734:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6029              		.loc 1 2734 7 view .LVU1799
 6030 0064 092D     		cmp	r5, #9
 6031 0066 40F2C780 		bls	.L678
 6032              	.LVL498:
 6033              	.L646:
2739:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6034              		.loc 1 2739 4 is_stmt 1 view .LVU1800
2739:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6035              		.loc 1 2739 27 is_stmt 0 view .LVU1801
 6036 006a 7B19     		adds	r3, r7, r5
 6037 006c 0025     		movs	r5, #0
 6038 006e 83F82050 		strb	r5, [r3, #32]
2740:src/keys.c    ****      char buf[16];
 6039              		.loc 1 2740 4 is_stmt 1 view .LVU1802
 6040              	.LVL499:
2740:src/keys.c    ****      char buf[16];
 6041              		.loc 1 2740 18 view .LVU1803
2740:src/keys.c    ****      char buf[16];
 6042              		.loc 1 2740 4 is_stmt 0 view .LVU1804
 6043 0072 B8F1000F 		cmp	r8, #0
 6044 0076 00F0D780 		beq	.L724
 6045              	.LVL500:
 6046              	.L666:
 6047              	.LBB577:
2741:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6048              		.loc 1 2741 6 is_stmt 1 view .LVU1805
2742:src/keys.c    ****      int i;
 6049              		.loc 1 2742 6 view .LVU1806
2742:src/keys.c    ****      int i;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 191


 6050              		.loc 1 2742 24 is_stmt 0 view .LVU1807
 6051 007a 2846     		mov	r0, r5
 6052 007c FFF7FEFF 		bl	current_catalogue
 6053              	.LVL501:
 6054 0080 6946     		mov	r1, sp
 6055 0082 FFF7FEFF 		bl	catcmd
 6056              	.LVL502:
 6057 0086 0446     		mov	r4, r0
 6058              	.LVL503:
2743:src/keys.c    **** 
 6059              		.loc 1 2743 6 is_stmt 1 view .LVU1808
2745:src/keys.c    ****        cmd++;
 6060              		.loc 1 2745 6 view .LVU1809
2746:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6061              		.loc 1 2746 8 view .LVU1810
2745:src/keys.c    ****        cmd++;
 6062              		.loc 1 2745 10 is_stmt 0 view .LVU1811
 6063 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6064              	.LVL504:
2745:src/keys.c    ****        cmd++;
 6065              		.loc 1 2745 9 view .LVU1812
 6066 008a 1428     		cmp	r0, #20
 6067 008c 04BF     		itt	eq
 6068 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2746:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6069              		.loc 1 2746 11 view .LVU1813
 6070 0090 0134     		addeq	r4, r4, #1
 6071              	.LVL505:
2747:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6072              		.loc 1 2747 6 is_stmt 1 view .LVU1814
2747:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6073              		.loc 1 2747 16 view .LVU1815
2747:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6074              		.loc 1 2747 6 is_stmt 0 view .LVU1816
 6075 0092 0028     		cmp	r0, #0
 6076 0094 00F0BF80 		beq	.L668
 6077 0098 DFF85CB2 		ldr	fp, .L742+28
 6078 009c C4F1010A 		rsb	r10, r4, #1
 6079 00a0 06E0     		b	.L671
 6080              	.LVL506:
 6081              	.L731:
 6082              	.LBB578:
2752:src/keys.c    **** 	 break;
 6083              		.loc 1 2752 16 view .LVU1817
 6084 00a2 C0F2BA80 		blt	.L670
 6085              	.LBE578:
2747:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6086              		.loc 1 2747 19 discriminator 2 view .LVU1818
 6087 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6088              	.LVL507:
2747:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6089              		.loc 1 2747 6 discriminator 2 view .LVU1819
 6090 00aa 0028     		cmp	r0, #0
 6091 00ac 00F0BF80 		beq	.L730
 6092              	.LVL508:
 6093              	.L671:
 6094              	.LBB579:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 192


2748:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6095              		.loc 1 2748 8 is_stmt 1 view .LVU1820
2748:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6096              		.loc 1 2748 22 is_stmt 0 view .LVU1821
 6097 00b0 FFF7FEFF 		bl	remap_chars
 6098              	.LVL509:
2752:src/keys.c    **** 	 break;
 6099              		.loc 1 2752 13 is_stmt 1 view .LVU1822
 6100              	.LBE579:
2747:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6101              		.loc 1 2747 32 view .LVU1823
 6102              	.LBB580:
2749:src/keys.c    ****        if (c > cl)
 6103              		.loc 1 2749 8 view .LVU1824
2749:src/keys.c    ****        if (c > cl)
 6104              		.loc 1 2749 46 is_stmt 0 view .LVU1825
 6105 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6106              	.LVL510:
2750:src/keys.c    **** 	 goto set_pos;
 6107              		.loc 1 2750 8 is_stmt 1 view .LVU1826
2750:src/keys.c    **** 	 goto set_pos;
 6108              		.loc 1 2750 11 is_stmt 0 view .LVU1827
 6109 00b8 9842     		cmp	r0, r3
 6110 00ba 0AEB0402 		add	r2, r10, r4
 6111              	.LVL511:
2750:src/keys.c    **** 	 goto set_pos;
 6112              		.loc 1 2750 11 view .LVU1828
 6113              	.LBE580:
2747:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6114              		.loc 1 2747 16 is_stmt 1 view .LVU1829
 6115              	.LBB581:
2750:src/keys.c    **** 	 goto set_pos;
 6116              		.loc 1 2750 11 is_stmt 0 view .LVU1830
 6117 00be F0DD     		ble	.L731
 6118              	.LVL512:
 6119              	.L669:
2750:src/keys.c    **** 	 goto set_pos;
 6120              		.loc 1 2750 11 view .LVU1831
 6121 00c0 D9F80040 		ldr	r4, [r9]
 6122              	.L649:
2750:src/keys.c    **** 	 goto set_pos;
 6123              		.loc 1 2750 11 view .LVU1832
 6124              	.LBE581:
 6125              	.LBE577:
2761:src/keys.c    ****      --pos;
 6126              		.loc 1 2761 10 is_stmt 1 view .LVU1833
 6127 00c4 002E     		cmp	r6, #0
 6128 00c6 00F0B680 		beq	.L653
2761:src/keys.c    ****      --pos;
 6129              		.loc 1 2761 20 is_stmt 0 view .LVU1834
 6130 00ca 4DB1     		cbz	r5, .L647
 6131              	.LVL513:
 6132              	.L725:
2761:src/keys.c    ****      --pos;
 6133              		.loc 1 2761 20 view .LVU1835
 6134 00cc 2846     		mov	r0, r5
 6135 00ce FFF7FEFF 		bl	current_catalogue
ARM GAS  /tmp/ccc9ZrJ3.s 			page 193


 6136              	.LVL514:
2762:src/keys.c    ****    State.catpos = pos;
 6137              		.loc 1 2762 6 is_stmt 1 view .LVU1836
2761:src/keys.c    ****      --pos;
 6138              		.loc 1 2761 10 view .LVU1837
 6139              	.LBB582:
 6140              	.LBI582:
2608:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6141              		.loc 1 2608 12 view .LVU1838
 6142              	.LBB583:
2609:src/keys.c    **** }
 6143              		.loc 1 2609 2 view .LVU1839
2609:src/keys.c    **** }
 6144              		.loc 1 2609 33 is_stmt 0 view .LVU1840
 6145 00d2 00F0F000 		and	r0, r0, #240
 6146              	.LBE583:
 6147              	.LBE582:
2761:src/keys.c    ****      --pos;
 6148              		.loc 1 2761 27 view .LVU1841
 6149 00d6 F028     		cmp	r0, #240
 6150 00d8 40F0AD80 		bne	.L653
2761:src/keys.c    ****      --pos;
 6151              		.loc 1 2761 20 view .LVU1842
 6152 00dc 013D     		subs	r5, r5, #1
 6153              	.LVL515:
2761:src/keys.c    ****      --pos;
 6154              		.loc 1 2761 20 view .LVU1843
 6155 00de F5D1     		bne	.L725
 6156              	.LVL516:
 6157              	.L647:
2763:src/keys.c    ****    return STATE_UNFINISHED;
 6158              		.loc 1 2763 4 is_stmt 1 view .LVU1844
2763:src/keys.c    ****    return STATE_UNFINISHED;
 6159              		.loc 1 2763 17 is_stmt 0 view .LVU1845
 6160 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6161 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6162 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2764:src/keys.c    ****  }
 6163              		.loc 1 2764 4 is_stmt 1 view .LVU1846
2764:src/keys.c    ****  }
 6164              		.loc 1 2764 11 is_stmt 0 view .LVU1847
 6165 00ec 3320     		movs	r0, #51
 6166              	.L738:
2765:src/keys.c    **** 
 6167              		.loc 1 2765 2 view .LVU1848
 6168 00ee 05B0     		add	sp, sp, #20
 6169              		.cfi_remember_state
 6170              		.cfi_def_cfa_offset 36
 6171              		@ sp needed
 6172 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6173              	.LVL517:
 6174              	.L727:
 6175              		.cfi_restore_state
2622:src/keys.c    **** #ifdef DM42
 6176              		.loc 1 2622 6 is_stmt 1 view .LVU1849
 6177 00f4 431F     		subs	r3, r0, #5
 6178 00f6 1F2B     		cmp	r3, #31
ARM GAS  /tmp/ccc9ZrJ3.s 			page 194


 6179 00f8 2FD8     		bhi	.L630
 6180 00fa DFE803F0 		tbb	[pc, r3]
 6181              	.LVL518:
 6182              	.L632:
 6183 00fe 35       		.byte	(.L636-.L632)/2
 6184 00ff 2E       		.byte	(.L630-.L632)/2
 6185 0100 2E       		.byte	(.L630-.L632)/2
 6186 0101 2E       		.byte	(.L630-.L632)/2
 6187 0102 2E       		.byte	(.L630-.L632)/2
 6188 0103 2E       		.byte	(.L630-.L632)/2
 6189 0104 2E       		.byte	(.L630-.L632)/2
 6190 0105 35       		.byte	(.L636-.L632)/2
 6191 0106 2E       		.byte	(.L630-.L632)/2
 6192 0107 2E       		.byte	(.L630-.L632)/2
 6193 0108 2E       		.byte	(.L630-.L632)/2
 6194 0109 20       		.byte	(.L635-.L632)/2
 6195 010a 2E       		.byte	(.L630-.L632)/2
 6196 010b 64       		.byte	(.L634-.L632)/2
 6197 010c 2E       		.byte	(.L630-.L632)/2
 6198 010d 2E       		.byte	(.L630-.L632)/2
 6199 010e 2E       		.byte	(.L630-.L632)/2
 6200 010f 2E       		.byte	(.L630-.L632)/2
 6201 0110 2E       		.byte	(.L630-.L632)/2
 6202 0111 6B       		.byte	(.L633-.L632)/2
 6203 0112 2E       		.byte	(.L630-.L632)/2
 6204 0113 2E       		.byte	(.L630-.L632)/2
 6205 0114 2E       		.byte	(.L630-.L632)/2
 6206 0115 2E       		.byte	(.L630-.L632)/2
 6207 0116 2E       		.byte	(.L630-.L632)/2
 6208 0117 2E       		.byte	(.L630-.L632)/2
 6209 0118 2E       		.byte	(.L630-.L632)/2
 6210 0119 2E       		.byte	(.L630-.L632)/2
 6211 011a 2E       		.byte	(.L630-.L632)/2
 6212 011b 2E       		.byte	(.L630-.L632)/2
 6213 011c 2E       		.byte	(.L630-.L632)/2
 6214 011d 27       		.byte	(.L631-.L632)/2
 6215              		.p2align 1
 6216              	.L737:
2711:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6217              		.loc 1 2711 42 is_stmt 0 discriminator 1 view .LVU1850
 6218 011e 734A     		ldr	r2, .L742+16
 6219              	.LVL519:
2711:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6220              		.loc 1 2711 42 discriminator 1 view .LVU1851
 6221 0120 7B69     		ldr	r3, [r7, #20]
2711:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6222              		.loc 1 2711 24 discriminator 1 view .LVU1852
 6223 0122 1A42     		tst	r2, r3
 6224 0124 75D0     		beq	.L661
2713:src/keys.c    ****        return STATE_UNFINISHED;
 6225              		.loc 1 2713 8 is_stmt 1 view .LVU1853
2713:src/keys.c    ****        return STATE_UNFINISHED;
 6226              		.loc 1 2713 38 is_stmt 0 view .LVU1854
 6227 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6228 0128 C3F30012 		ubfx	r2, r3, #4, #1
2713:src/keys.c    ****        return STATE_UNFINISHED;
 6229              		.loc 1 2713 30 view .LVU1855
ARM GAS  /tmp/ccc9ZrJ3.s 			page 195


 6230 012c C2F10102 		rsb	r2, r2, #1
2713:src/keys.c    ****        return STATE_UNFINISHED;
 6231              		.loc 1 2713 26 view .LVU1856
 6232 0130 62F30413 		bfi	r3, r2, #4, #1
 6233 0134 BB75     		strb	r3, [r7, #22]
 6234              	.LVL520:
 6235              	.L726:
2714:src/keys.c    ****      }
 6236              		.loc 1 2714 8 is_stmt 1 view .LVU1857
2714:src/keys.c    ****      }
 6237              		.loc 1 2714 15 is_stmt 0 view .LVU1858
 6238 0136 3320     		movs	r0, #51
 6239              	.L628:
2765:src/keys.c    **** 
 6240              		.loc 1 2765 2 view .LVU1859
 6241 0138 05B0     		add	sp, sp, #20
 6242              		.cfi_remember_state
 6243              		.cfi_def_cfa_offset 36
 6244              		@ sp needed
 6245 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6246              	.LVL521:
 6247              	.L635:
 6248              		.cfi_restore_state
2651:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6249              		.loc 1 2651 8 is_stmt 1 view .LVU1860
2651:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6250              		.loc 1 2651 11 is_stmt 0 view .LVU1861
 6251 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6252 0140 23B1     		cbz	r3, .L631
2651:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6253              		.loc 1 2651 33 discriminator 1 view .LVU1862
 6254 0142 FFF7FEFF 		bl	keyticks
 6255              	.LVL522:
2651:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6256              		.loc 1 2651 30 discriminator 1 view .LVU1863
 6257 0146 1D28     		cmp	r0, #29
 6258 0148 40F39580 		ble	.L732
 6259              	.L631:
2661:src/keys.c    ****        return STATE_UNFINISHED;
 6260              		.loc 1 2661 8 is_stmt 1 view .LVU1864
 6261 014c 0020     		movs	r0, #0
 6262 014e FFF7FEFF 		bl	init_cat
 6263              	.LVL523:
2662:src/keys.c    **** 
 6264              		.loc 1 2662 8 view .LVU1865
2662:src/keys.c    **** 
 6265              		.loc 1 2662 15 is_stmt 0 view .LVU1866
 6266 0152 3320     		movs	r0, #51
2765:src/keys.c    **** 
 6267              		.loc 1 2765 2 view .LVU1867
 6268 0154 05B0     		add	sp, sp, #20
 6269              		.cfi_remember_state
 6270              		.cfi_def_cfa_offset 36
 6271              		@ sp needed
 6272 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6273              	.LVL524:
 6274              	.L630:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 196


 6275              		.cfi_restore_state
 6276              	.LBB584:
 6277              	.LBI559:
 435:src/keys.c    **** {
 6278              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1868
 6279              	.LBB565:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6280              		.loc 1 437 2 discriminator 4 view .LVU1869
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6281              		.loc 1 485 2 discriminator 4 view .LVU1870
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6282              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1871
 6283 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6284              		.loc 1 485 5 discriminator 4 view .LVU1872
 6285 015c 13F0100F 		tst	r3, #16
 6286 0160 14BF     		ite	ne
 6287 0162 0421     		movne	r1, #4
 6288              	.LVL525:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6289              		.loc 1 485 5 discriminator 4 view .LVU1873
 6290 0164 0021     		moveq	r1, #0
 6291 0166 65E7     		b	.L664
 6292              	.LVL526:
 6293              	.L636:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6294              		.loc 1 485 5 discriminator 4 view .LVU1874
 6295              	.LBE565:
 6296              	.LBE584:
2629:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6297              		.loc 1 2629 8 is_stmt 1 view .LVU1875
2629:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6298              		.loc 1 2629 11 is_stmt 0 view .LVU1876
 6299 0168 4545     		cmp	r5, r8
 6300 016a EFDA     		bge	.L631
 6301 016c 2846     		mov	r0, r5
 6302              	.LVL527:
2629:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6303              		.loc 1 2629 24 discriminator 1 view .LVU1877
 6304 016e 002E     		cmp	r6, #0
 6305 0170 00F08D80 		beq	.L733
 6306              	.LVL528:
 6307              	.LBB585:
 6308              	.LBI585:
2608:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6309              		.loc 1 2608 12 is_stmt 1 view .LVU1878
 6310              	.LBB586:
2609:src/keys.c    **** }
 6311              		.loc 1 2609 2 view .LVU1879
2609:src/keys.c    **** }
 6312              		.loc 1 2609 10 is_stmt 0 view .LVU1880
 6313 0174 FFF7FEFF 		bl	current_catalogue
 6314              	.LVL529:
2609:src/keys.c    **** }
 6315              		.loc 1 2609 33 view .LVU1881
 6316 0178 00F0F003 		and	r3, r0, #240
 6317              	.LBE586:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 197


 6318              	.LBE585:
2629:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6319              		.loc 1 2629 27 view .LVU1882
 6320 017c F02B     		cmp	r3, #240
 6321              	.LBB588:
 6322              	.LBB587:
2609:src/keys.c    **** }
 6323              		.loc 1 2609 10 view .LVU1883
 6324 017e 0446     		mov	r4, r0
 6325              	.LBE587:
 6326              	.LBE588:
2629:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6327              		.loc 1 2629 27 view .LVU1884
 6328 0180 E4D0     		beq	.L631
 6329              	.L639:
 6330              	.LBB589:
2630:src/keys.c    **** 
 6331              		.loc 1 2630 3 is_stmt 1 view .LVU1885
2632:src/keys.c    **** 
 6332              		.loc 1 2632 3 view .LVU1886
 6333 0182 0020     		movs	r0, #0
 6334 0184 FFF7FEFF 		bl	init_cat
 6335              	.LVL530:
2634:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6336              		.loc 1 2634 3 view .LVU1887
2634:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6337              		.loc 1 2634 6 is_stmt 0 view .LVU1888
 6338 0188 14F47043 		ands	r3, r4, #61440
 6339 018c 00F08C80 		beq	.L640
2634:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6340              		.loc 1 2634 7 discriminator 1 view .LVU1889
 6341 0190 B3F5704F 		cmp	r3, #61440
 6342 0194 00F08880 		beq	.L640
 6343              	.LBB590:
2635:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6344              		.loc 1 2635 5 is_stmt 1 view .LVU1890
2635:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6345              		.loc 1 2635 31 is_stmt 0 view .LVU1891
 6346 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6347 019c A3F12005 		sub	r5, r3, #32
 6348              	.LVL531:
2635:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6349              		.loc 1 2635 31 view .LVU1892
 6350 01a0 EDB2     		uxtb	r5, r5
 6351              	.LVL532:
2636:src/keys.c    **** 	     return op;
 6352              		.loc 1 2636 5 is_stmt 1 view .LVU1893
2636:src/keys.c    **** 	     return op;
 6353              		.loc 1 2636 8 is_stmt 0 view .LVU1894
 6354 01a2 012D     		cmp	r5, #1
 6355 01a4 40F28980 		bls	.L641
2636:src/keys.c    **** 	     return op;
 6356              		.loc 1 2636 56 discriminator 1 view .LVU1895
 6357 01a8 6C2D     		cmp	r5, #108
 6358 01aa 00F08680 		beq	.L641
2636:src/keys.c    **** 	     return op;
 6359              		.loc 1 2636 77 discriminator 2 view .LVU1896
ARM GAS  /tmp/ccc9ZrJ3.s 			page 198


 6360 01ae 242D     		cmp	r5, #36
 6361 01b0 00F08380 		beq	.L641
2638:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6362              		.loc 1 2638 5 is_stmt 1 view .LVU1897
2638:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6363              		.loc 1 2638 30 is_stmt 0 view .LVU1898
 6364 01b4 A5F12D02 		sub	r2, r5, #45
2638:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6365              		.loc 1 2638 8 view .LVU1899
 6366 01b8 062A     		cmp	r2, #6
 6367 01ba 00F29F80 		bhi	.L644
2639:src/keys.c    **** 	   else
 6368              		.loc 1 2639 7 is_stmt 1 view .LVU1900
2639:src/keys.c    **** 	   else
 6369              		.loc 1 2639 28 is_stmt 0 view .LVU1901
 6370 01be 4D3B     		subs	r3, r3, #77
2639:src/keys.c    **** 	   else
 6371              		.loc 1 2639 19 view .LVU1902
 6372 01c0 FB73     		strb	r3, [r7, #15]
 6373              	.LBE590:
 6374              	.LBE589:
2648:src/keys.c    **** 
 6375              		.loc 1 2648 15 view .LVU1903
 6376 01c2 3320     		movs	r0, #51
 6377              	.LBB600:
 6378              	.LBB593:
 6379 01c4 B8E7     		b	.L628
 6380              	.LVL533:
 6381              	.L634:
2648:src/keys.c    **** 
 6382              		.loc 1 2648 15 view .LVU1904
 6383              	.LBE593:
 6384              	.LBE600:
2665:src/keys.c    ****        if (pos == 0)
 6385              		.loc 1 2665 8 is_stmt 1 view .LVU1905
2665:src/keys.c    ****        if (pos == 0)
 6386              		.loc 1 2665 22 is_stmt 0 view .LVU1906
 6387 01c6 0023     		movs	r3, #0
 6388 01c8 3B77     		strb	r3, [r7, #28]
2666:src/keys.c    **** 	 goto set_max;
 6389              		.loc 1 2666 8 is_stmt 1 view .LVU1907
2666:src/keys.c    **** 	 goto set_max;
 6390              		.loc 1 2666 11 is_stmt 0 view .LVU1908
 6391 01ca 002D     		cmp	r5, #0
 6392 01cc 5DD1     		bne	.L734
 6393              	.LVL534:
 6394              	.L648:
2759:src/keys.c    ****  set_pos:
 6395              		.loc 1 2759 4 is_stmt 1 view .LVU1909
2759:src/keys.c    ****  set_pos:
 6396              		.loc 1 2759 8 is_stmt 0 view .LVU1910
 6397 01ce 08F1FF35 		add	r5, r8, #-1
 6398              	.LVL535:
2759:src/keys.c    ****  set_pos:
 6399              		.loc 1 2759 8 view .LVU1911
 6400 01d2 77E7     		b	.L649
 6401              	.LVL536:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 199


 6402              	.L633:
2673:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6403              		.loc 1 2673 8 is_stmt 1 view .LVU1912
2673:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6404              		.loc 1 2673 22 is_stmt 0 view .LVU1913
 6405 01d4 0023     		movs	r3, #0
 6406 01d6 3B77     		strb	r3, [r7, #28]
2674:src/keys.c    ****        if (pos >= ctmax)
 6407              		.loc 1 2674 8 is_stmt 1 view .LVU1914
2674:src/keys.c    ****        if (pos >= ctmax)
 6408              		.loc 1 2674 14 is_stmt 0 view .LVU1915
 6409 01d8 06E0     		b	.L652
 6410              	.LVL537:
 6411              	.L735:
2674:src/keys.c    ****        if (pos >= ctmax)
 6412              		.loc 1 2674 29 discriminator 1 view .LVU1916
 6413 01da 66B3     		cbz	r6, .L653
 6414              	.LBB601:
 6415              	.LBB602:
2609:src/keys.c    **** }
 6416              		.loc 1 2609 10 view .LVU1917
 6417 01dc FFF7FEFF 		bl	current_catalogue
 6418              	.LVL538:
2609:src/keys.c    **** }
 6419              		.loc 1 2609 33 view .LVU1918
 6420 01e0 00F0F000 		and	r0, r0, #240
 6421              	.LBE602:
 6422              	.LBE601:
2674:src/keys.c    ****        if (pos >= ctmax)
 6423              		.loc 1 2674 41 view .LVU1919
 6424 01e4 F028     		cmp	r0, #240
 6425 01e6 26D1     		bne	.L653
 6426              	.L652:
2674:src/keys.c    ****        if (pos >= ctmax)
 6427              		.loc 1 2674 65 is_stmt 1 discriminator 3 view .LVU1920
2674:src/keys.c    ****        if (pos >= ctmax)
 6428              		.loc 1 2674 14 discriminator 3 view .LVU1921
 6429 01e8 0135     		adds	r5, r5, #1
 6430              	.LVL539:
 6431              	.LBB605:
 6432              	.LBI601:
2608:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6433              		.loc 1 2608 12 discriminator 3 view .LVU1922
 6434              	.LBB603:
2609:src/keys.c    **** }
 6435              		.loc 1 2609 2 discriminator 3 view .LVU1923
 6436              	.LBE603:
 6437              	.LBE605:
2674:src/keys.c    ****        if (pos >= ctmax)
 6438              		.loc 1 2674 14 is_stmt 0 discriminator 3 view .LVU1924
 6439 01ea A845     		cmp	r8, r5
 6440              	.LBB606:
 6441              	.LBB604:
2609:src/keys.c    **** }
 6442              		.loc 1 2609 10 discriminator 3 view .LVU1925
 6443 01ec 2846     		mov	r0, r5
 6444              	.LBE604:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 200


 6445              	.LBE606:
2674:src/keys.c    ****        if (pos >= ctmax)
 6446              		.loc 1 2674 14 discriminator 3 view .LVU1926
 6447 01ee F4DC     		bgt	.L735
 6448              	.LVL540:
2761:src/keys.c    ****      --pos;
 6449              		.loc 1 2761 10 is_stmt 1 view .LVU1927
2676:src/keys.c    ****        goto set_pos;
 6450              		.loc 1 2676 7 is_stmt 0 view .LVU1928
 6451 01f0 3546     		mov	r5, r6
 6452              	.LVL541:
2761:src/keys.c    ****      --pos;
 6453              		.loc 1 2761 10 view .LVU1929
 6454 01f2 06B3     		cbz	r6, .L653
 6455              	.LVL542:
2761:src/keys.c    ****      --pos;
 6456              		.loc 1 2761 10 view .LVU1930
 6457 01f4 0025     		movs	r5, #0
 6458              	.LVL543:
2761:src/keys.c    ****      --pos;
 6459              		.loc 1 2761 10 view .LVU1931
 6460 01f6 73E7     		b	.L647
 6461              	.LVL544:
 6462              	.L678:
2734:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6463              		.loc 1 2734 8 view .LVU1932
 6464 01f8 2B46     		mov	r3, r5
2735:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6465              		.loc 1 2735 6 is_stmt 1 view .LVU1933
2735:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6466              		.loc 1 2735 31 is_stmt 0 view .LVU1934
 6467 01fa 3B44     		add	r3, r3, r7
2735:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6468              		.loc 1 2735 27 view .LVU1935
 6469 01fc 0135     		adds	r5, r5, #1
 6470 01fe EDB2     		uxtb	r5, r5
 6471 0200 3D77     		strb	r5, [r7, #28]
2735:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6472              		.loc 1 2735 31 view .LVU1936
 6473 0202 83F82040 		strb	r4, [r3, #32]
 6474 0206 30E7     		b	.L646
 6475              	.LVL545:
 6476              	.L728:
2683:src/keys.c    ****        /*
 6477              		.loc 1 2683 6 is_stmt 1 view .LVU1937
2683:src/keys.c    ****        /*
 6478              		.loc 1 2683 9 is_stmt 0 view .LVU1938
 6479 0208 BAF1120F 		cmp	r10, #18
 6480 020c 21D0     		beq	.L736
 6481              	.L655:
2711:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6482              		.loc 1 2711 11 is_stmt 1 view .LVU1939
2711:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6483              		.loc 1 2711 14 is_stmt 0 view .LVU1940
 6484 020e 2428     		cmp	r0, #36
 6485 0210 85D0     		beq	.L737
 6486              	.LVL546:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 201


 6487              	.L661:
2726:src/keys.c    ****    reset_shift();
 6488              		.loc 1 2726 4 is_stmt 1 view .LVU1941
 6489              	.LBB607:
 435:src/keys.c    **** {
 6490              		.loc 1 435 12 view .LVU1942
 6491              	.LBB566:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6492              		.loc 1 437 2 view .LVU1943
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6493              		.loc 1 485 2 view .LVU1944
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6494              		.loc 1 485 5 is_stmt 0 view .LVU1945
 6495 0212 0121     		movs	r1, #1
 6496              	.LVL547:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6497              		.loc 1 485 5 view .LVU1946
 6498 0214 0EE7     		b	.L664
 6499              	.LVL548:
 6500              	.L668:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6501              		.loc 1 485 5 view .LVU1947
 6502 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6503              	.LVL549:
 6504              	.L670:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6505              		.loc 1 485 5 view .LVU1948
 6506              	.LBE566:
 6507              	.LBE607:
 6508              	.LBB608:
2755:src/keys.c    ****        goto set_pos;
 6509              		.loc 1 2755 6 is_stmt 1 view .LVU1949
2755:src/keys.c    ****        goto set_pos;
 6510              		.loc 1 2755 9 is_stmt 0 view .LVU1950
 6511 021a 002B     		cmp	r3, #0
 6512 021c 3FF450AF 		beq	.L669
 6513              	.LBE608:
2740:src/keys.c    ****      char buf[16];
 6514              		.loc 1 2740 31 is_stmt 1 view .LVU1951
 6515 0220 0135     		adds	r5, r5, #1
 6516              	.LVL550:
2740:src/keys.c    ****      char buf[16];
 6517              		.loc 1 2740 18 view .LVU1952
2740:src/keys.c    ****      char buf[16];
 6518              		.loc 1 2740 4 is_stmt 0 view .LVU1953
 6519 0222 A845     		cmp	r8, r5
 6520 0224 7FF429AF 		bne	.L666
 6521              	.LVL551:
 6522              	.L724:
2740:src/keys.c    ****      char buf[16];
 6523              		.loc 1 2740 4 view .LVU1954
 6524 0228 D9F80040 		ldr	r4, [r9]
 6525 022c CFE7     		b	.L648
 6526              	.LVL552:
 6527              	.L730:
2740:src/keys.c    ****      char buf[16];
 6528              		.loc 1 2740 4 view .LVU1955
ARM GAS  /tmp/ccc9ZrJ3.s 			page 202


 6529 022e 3A44     		add	r2, r2, r7
 6530              	.LVL553:
2740:src/keys.c    ****      char buf[16];
 6531              		.loc 1 2740 4 view .LVU1956
 6532 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6533              	.LVL554:
2740:src/keys.c    ****      char buf[16];
 6534              		.loc 1 2740 4 view .LVU1957
 6535 0234 F1E7     		b	.L670
 6536              	.LVL555:
 6537              	.L653:
2763:src/keys.c    ****    return STATE_UNFINISHED;
 6538              		.loc 1 2763 17 view .LVU1958
 6539 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6540 023a 05F07F05 		and	r5, r5, #127
 6541              	.LVL556:
2763:src/keys.c    ****    return STATE_UNFINISHED;
 6542              		.loc 1 2763 4 is_stmt 1 view .LVU1959
2763:src/keys.c    ****    return STATE_UNFINISHED;
 6543              		.loc 1 2763 17 is_stmt 0 view .LVU1960
 6544 023e 65F34B13 		bfi	r3, r5, #5, #7
 6545 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2764:src/keys.c    ****  }
 6546              		.loc 1 2764 4 is_stmt 1 view .LVU1961
2764:src/keys.c    ****  }
 6547              		.loc 1 2764 11 is_stmt 0 view .LVU1962
 6548 0246 3320     		movs	r0, #51
 6549 0248 51E7     		b	.L738
 6550              	.LVL557:
 6551              	.L729:
2717:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6552              		.loc 1 2717 6 is_stmt 1 view .LVU1963
2717:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6553              		.loc 1 2717 9 is_stmt 0 view .LVU1964
 6554 024a 1028     		cmp	r0, #16
 6555 024c 23D0     		beq	.L739
 6556              	.L663:
2726:src/keys.c    ****    reset_shift();
 6557              		.loc 1 2726 4 is_stmt 1 view .LVU1965
 6558              	.LVL558:
 6559              	.LBB609:
 435:src/keys.c    **** {
 6560              		.loc 1 435 12 view .LVU1966
 6561              	.LBB567:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6562              		.loc 1 437 2 view .LVU1967
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6563              		.loc 1 485 2 view .LVU1968
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6564              		.loc 1 485 5 is_stmt 0 view .LVU1969
 6565 024e 0521     		movs	r1, #5
 6566              	.LVL559:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6567              		.loc 1 485 5 view .LVU1970
 6568 0250 F0E6     		b	.L664
 6569              	.LVL560:
 6570              	.L736:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 203


 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6571              		.loc 1 485 5 view .LVU1971
 6572              	.LBE567:
 6573              	.LBE609:
2683:src/keys.c    ****        /*
 6574              		.loc 1 2683 32 discriminator 1 view .LVU1972
 6575 0252 0128     		cmp	r0, #1
 6576 0254 DBD1     		bne	.L655
 6577              	.LBB610:
2692:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6578              		.loc 1 2692 8 is_stmt 1 view .LVU1973
2700:src/keys.c    ****        int i;
 6579              		.loc 1 2700 8 view .LVU1974
2700:src/keys.c    ****        int i;
 6580              		.loc 1 2700 26 is_stmt 0 view .LVU1975
 6581 0256 2846     		mov	r0, r5
 6582              	.LVL561:
2700:src/keys.c    ****        int i;
 6583              		.loc 1 2700 26 view .LVU1976
 6584 0258 FFF7FEFF 		bl	current_catalogue
 6585              	.LVL562:
2700:src/keys.c    ****        int i;
 6586              		.loc 1 2700 26 view .LVU1977
 6587 025c 0446     		mov	r4, r0
 6588              	.LVL563:
2701:src/keys.c    **** 
 6589              		.loc 1 2701 8 is_stmt 1 view .LVU1978
2703:src/keys.c    ****        if (isRARG(op))
 6590              		.loc 1 2703 8 view .LVU1979
 6591 025e 0020     		movs	r0, #0
 6592              	.LVL564:
2703:src/keys.c    ****        if (isRARG(op))
 6593              		.loc 1 2703 8 is_stmt 0 view .LVU1980
 6594 0260 FFF7FEFF 		bl	init_cat
 6595              	.LVL565:
2704:src/keys.c    **** 	 return op ^ 1;
 6596              		.loc 1 2704 8 is_stmt 1 view .LVU1981
2704:src/keys.c    **** 	 return op ^ 1;
 6597              		.loc 1 2704 11 is_stmt 0 view .LVU1982
 6598 0264 14F47043 		ands	r3, r4, #61440
 6599 0268 29D0     		beq	.L656
2704:src/keys.c    **** 	 return op ^ 1;
 6600              		.loc 1 2704 12 discriminator 1 view .LVU1983
 6601 026a B3F5704F 		cmp	r3, #61440
 6602 026e 26D0     		beq	.L656
2705:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6603              		.loc 1 2705 3 is_stmt 1 view .LVU1984
2705:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6604              		.loc 1 2705 13 is_stmt 0 view .LVU1985
 6605 0270 84F00100 		eor	r0, r4, #1
 6606 0274 60E7     		b	.L628
 6607              	.LVL566:
 6608              	.L732:
2705:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6609              		.loc 1 2705 13 view .LVU1986
 6610              	.LBE610:
2652:src/keys.c    **** 	   goto search;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 204


 6611              		.loc 1 2652 3 is_stmt 1 view .LVU1987
2652:src/keys.c    **** 	   goto search;
 6612              		.loc 1 2652 7 is_stmt 0 view .LVU1988
 6613 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6614              	.LVL567:
2652:src/keys.c    **** 	   goto search;
 6615              		.loc 1 2652 7 view .LVU1989
 6616 0278 013D     		subs	r5, r5, #1
 6617 027a EDB2     		uxtb	r5, r5
2652:src/keys.c    **** 	   goto search;
 6618              		.loc 1 2652 6 view .LVU1990
 6619 027c 3D77     		strb	r5, [r7, #28]
 6620 027e 002D     		cmp	r5, #0
 6621 0280 7FF4F3AE 		bne	.L646
 6622 0284 D9F80040 		ldr	r4, [r9]
 6623 0288 2AE7     		b	.L647
 6624              	.LVL568:
 6625              	.L734:
2669:src/keys.c    ****        goto set_pos;
 6626              		.loc 1 2669 3 is_stmt 1 view .LVU1991
 6627 028a 013D     		subs	r5, r5, #1
 6628              	.LVL569:
2670:src/keys.c    **** 
 6629              		.loc 1 2670 8 view .LVU1992
 6630 028c 1AE7     		b	.L649
 6631              	.LVL570:
 6632              	.L733:
2670:src/keys.c    **** 
 6633              		.loc 1 2670 8 is_stmt 0 view .LVU1993
 6634 028e FFF7FEFF 		bl	current_catalogue
 6635              	.LVL571:
2670:src/keys.c    **** 
 6636              		.loc 1 2670 8 view .LVU1994
 6637 0292 0446     		mov	r4, r0
 6638 0294 75E7     		b	.L639
 6639              	.LVL572:
 6640              	.L739:
2717:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6641              		.loc 1 2717 19 discriminator 1 view .LVU1995
 6642 0296 BAF1130F 		cmp	r10, #19
 6643 029a D8D1     		bne	.L663
2718:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6644              		.loc 1 2718 8 is_stmt 1 view .LVU1996
 6645 029c 0020     		movs	r0, #0
 6646              	.LVL573:
2718:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6647              		.loc 1 2718 8 is_stmt 0 view .LVU1997
 6648 029e FFF7FEFF 		bl	init_cat
 6649              	.LVL574:
2719:src/keys.c    ****      }
 6650              		.loc 1 2719 8 is_stmt 1 view .LVU1998
2719:src/keys.c    ****      }
 6651              		.loc 1 2719 15 is_stmt 0 view .LVU1999
 6652 02a2 40F23D10 		movw	r0, #317
 6653 02a6 47E7     		b	.L628
 6654              	.L640:
 6655              	.LBB611:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 205


2644:src/keys.c    **** 	 }
 6656              		.loc 1 2644 5 is_stmt 1 view .LVU2000
 6657              	.LBB594:
 6658              	.LBB595:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6659              		.loc 1 705 5 is_stmt 0 view .LVU2001
 6660 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6661 02ac 012B     		cmp	r3, #1
 6662              	.LBE595:
 6663              	.LBE594:
2644:src/keys.c    **** 	 }
 6664              		.loc 1 2644 12 view .LVU2002
 6665 02ae 2046     		mov	r0, r4
 6666              	.LVL575:
 6667              	.LBB597:
 6668              	.LBI594:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6669              		.loc 1 704 12 is_stmt 1 view .LVU2003
 6670              	.LBB596:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6671              		.loc 1 705 2 view .LVU2004
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6672              		.loc 1 705 5 is_stmt 0 view .LVU2005
 6673 02b0 7FF442AF 		bne	.L628
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6674              		.loc 1 705 5 view .LVU2006
 6675 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6676              	.LVL576:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6677              		.loc 1 705 5 view .LVU2007
 6678 02b8 3EE7     		b	.L628
 6679              	.LVL577:
 6680              	.L641:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6681              		.loc 1 705 5 view .LVU2008
 6682              	.LBE596:
 6683              	.LBE597:
 6684              	.LBB598:
2637:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6685              		.loc 1 2637 7 is_stmt 1 view .LVU2009
2637:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6686              		.loc 1 2637 14 is_stmt 0 view .LVU2010
 6687 02ba 2046     		mov	r0, r4
 6688 02bc 3CE7     		b	.L628
 6689              	.LVL578:
 6690              	.L656:
2637:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6691              		.loc 1 2637 14 view .LVU2011
 6692 02be 0C48     		ldr	r0, .L742+20
 6693              	.LBE598:
 6694              	.LBE611:
2615:src/keys.c    ****    int pos = State.catpos;
 6695              		.loc 1 2615 93 view .LVU2012
 6696 02c0 40F28522 		movw	r2, #645
 6697 02c4 0146     		mov	r1, r0
 6698 02c6 0023     		movs	r3, #0
 6699 02c8 01E0     		b	.L658
ARM GAS  /tmp/ccc9ZrJ3.s 			page 206


 6700              	.LVL579:
 6701              	.L741:
2615:src/keys.c    ****    int pos = State.catpos;
 6702              		.loc 1 2615 93 view .LVU2013
 6703 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6704              	.LVL580:
 6705              	.L658:
 6706              	.LBB612:
2707:src/keys.c    **** 	   return conv_mapping[i^1];
 6707              		.loc 1 2707 3 is_stmt 1 view .LVU2014
2706:src/keys.c    **** 	 if (op == conv_mapping[i])
 6708              		.loc 1 2706 72 view .LVU2015
2707:src/keys.c    **** 	   return conv_mapping[i^1];
 6709              		.loc 1 2707 6 is_stmt 0 view .LVU2016
 6710 02ce A242     		cmp	r2, r4
 6711 02d0 1ED0     		beq	.L740
2706:src/keys.c    **** 	 if (op == conv_mapping[i])
 6712              		.loc 1 2706 72 discriminator 2 view .LVU2017
 6713 02d2 0133     		adds	r3, r3, #1
 6714              	.LVL581:
2706:src/keys.c    **** 	 if (op == conv_mapping[i])
 6715              		.loc 1 2706 20 is_stmt 1 discriminator 2 view .LVU2018
2706:src/keys.c    **** 	 if (op == conv_mapping[i])
 6716              		.loc 1 2706 8 is_stmt 0 discriminator 2 view .LVU2019
 6717 02d4 0C2B     		cmp	r3, #12
 6718 02d6 F8D1     		bne	.L741
 6719 02d8 2DE7     		b	.L726
 6720              	.L743:
 6721 02da 00BF     		.align	2
 6722              	.L742:
 6723 02dc 00000000 		.word	StateWhileOn
 6724 02e0 00000000 		.word	.LANCHOR8
 6725 02e4 00000000 		.word	.LANCHOR6
 6726 02e8 00000000 		.word	.LANCHOR15
 6727 02ec 00080800 		.word	526336
 6728 02f0 00000000 		.word	.LANCHOR14
 6729 02f4 00000000 		.word	main_ram
 6730 02f8 1F000000 		.word	StateWhileOn+31
 6731              	.LVL582:
 6732              	.L644:
2706:src/keys.c    **** 	 if (op == conv_mapping[i])
 6733              		.loc 1 2706 8 discriminator 2 view .LVU2020
 6734              	.LBE612:
 6735              	.LBB613:
 6736              	.LBB599:
2641:src/keys.c    **** 	 }
 6737              		.loc 1 2641 7 is_stmt 1 view .LVU2021
 6738              	.LBB591:
 6739              	.LBI591:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6740              		.loc 1 552 13 view .LVU2022
 6741              	.LBB592:
 553:src/keys.c    **** 		return;
 6742              		.loc 1 553 2 view .LVU2023
 553:src/keys.c    **** 		return;
 6743              		.loc 1 553 6 is_stmt 0 view .LVU2024
 6744 02fc FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccc9ZrJ3.s 			page 207


 6745              	.LVL583:
 553:src/keys.c    **** 		return;
 6746              		.loc 1 553 5 view .LVU2025
 6747 0300 0028     		cmp	r0, #0
 6748 0302 7FF418AF 		bne	.L726
 6749 0306 2846     		mov	r0, r5
 6750 0308 FFF7FEFF 		bl	init_arg.part.0
 6751              	.LVL584:
 6752              	.LBE592:
 6753              	.LBE591:
 6754              	.LBE599:
 6755              	.LBE613:
2648:src/keys.c    **** 
 6756              		.loc 1 2648 15 view .LVU2026
 6757 030c 3320     		movs	r0, #51
 6758 030e 13E7     		b	.L628
 6759              	.LVL585:
 6760              	.L740:
 6761              	.LBB614:
2708:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6762              		.loc 1 2708 5 is_stmt 1 view .LVU2027
2708:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6763              		.loc 1 2708 26 is_stmt 0 view .LVU2028
 6764 0310 83F00103 		eor	r3, r3, #1
 6765              	.LVL586:
2708:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6766              		.loc 1 2708 24 view .LVU2029
 6767 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6768 0318 0EE7     		b	.L628
 6769              	.LBE614:
 6770              		.cfi_endproc
 6771              	.LFE48:
 6773              		.section	.text.find_pos,"ax",%progbits
 6774              		.align	1
 6775              		.p2align 2,,3
 6776              		.global	find_pos
 6777              		.syntax unified
 6778              		.thumb
 6779              		.thumb_func
 6780              		.fpu fpv4-sp-d16
 6782              	find_pos:
 6783              	.LVL587:
 6784              	.LFB49:
2768:src/keys.c    **** 	int pos;
 6785              		.loc 1 2768 32 is_stmt 1 view -0
 6786              		.cfi_startproc
 6787              		@ args = 0, pretend = 0, frame = 16
 6788              		@ frame_needed = 0, uses_anonymous_args = 0
2769:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6789              		.loc 1 2769 2 view .LVU2031
2770:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6790              		.loc 1 2770 2 view .LVU2032
 6791              	.LBB615:
 6792              	.LBI615:
2470:src/keys.c    **** 	// A quick table of catalogue sizes
 6793              		.loc 1 2470 5 view .LVU2033
 6794              	.LBB616:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 208


2473:src/keys.c    **** 	{
 6795              		.loc 1 2473 2 view .LVU2034
2504:src/keys.c    **** #endif
 6796              		.loc 1 2504 2 view .LVU2035
 6797              	.LBE616:
 6798              	.LBE615:
2768:src/keys.c    **** 	int pos;
 6799              		.loc 1 2768 32 is_stmt 0 view .LVU2036
 6800 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6801              		.cfi_def_cfa_offset 32
 6802              		.cfi_offset 4, -32
 6803              		.cfi_offset 5, -28
 6804              		.cfi_offset 6, -24
 6805              		.cfi_offset 7, -20
 6806              		.cfi_offset 8, -16
 6807              		.cfi_offset 9, -12
 6808              		.cfi_offset 10, -8
 6809              		.cfi_offset 14, -4
 6810              	.LBB618:
 6811              	.LBB617:
2504:src/keys.c    **** #endif
 6812              		.loc 1 2504 31 view .LVU2037
 6813 0004 1E4B     		ldr	r3, .L761
2504:src/keys.c    **** #endif
 6814              		.loc 1 2504 24 view .LVU2038
 6815 0006 1F4A     		ldr	r2, .L761+4
2504:src/keys.c    **** #endif
 6816              		.loc 1 2504 31 view .LVU2039
 6817 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2504:src/keys.c    **** #endif
 6818              		.loc 1 2504 24 view .LVU2040
 6819 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6820              	.LVL588:
2504:src/keys.c    **** #endif
 6821              		.loc 1 2504 24 view .LVU2041
 6822              	.LBE617:
 6823              	.LBE618:
2771:src/keys.c    **** 		char buf[16];
 6824              		.loc 1 2771 2 is_stmt 1 view .LVU2042
2771:src/keys.c    **** 		char buf[16];
 6825              		.loc 1 2771 16 view .LVU2043
2768:src/keys.c    **** 	int pos;
 6826              		.loc 1 2768 32 is_stmt 0 view .LVU2044
 6827 000e 84B0     		sub	sp, sp, #16
 6828              		.cfi_def_cfa_offset 48
2771:src/keys.c    **** 		char buf[16];
 6829              		.loc 1 2771 2 view .LVU2045
 6830 0010 BAF1000F 		cmp	r10, #0
 6831 0014 32D0     		beq	.L751
 6832 0016 8146     		mov	r9, r0
2771:src/keys.c    **** 		char buf[16];
 6833              		.loc 1 2771 11 view .LVU2046
 6834 0018 4FF00008 		mov	r8, #0
 6835 001c C0F10107 		rsb	r7, r0, #1
 6836              	.LVL589:
 6837              	.L750:
 6838              	.LBB619:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 209


2772:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6839              		.loc 1 2772 3 is_stmt 1 view .LVU2047
2773:src/keys.c    **** 		int i;
 6840              		.loc 1 2773 3 view .LVU2048
2773:src/keys.c    **** 		int i;
 6841              		.loc 1 2773 21 is_stmt 0 view .LVU2049
 6842 0020 4046     		mov	r0, r8
 6843 0022 FFF7FEFF 		bl	current_catalogue
 6844              	.LVL590:
 6845 0026 6946     		mov	r1, sp
 6846 0028 FFF7FEFF 		bl	catcmd
 6847              	.LVL591:
 6848 002c 0646     		mov	r6, r0
 6849              	.LVL592:
2774:src/keys.c    **** 
 6850              		.loc 1 2774 3 is_stmt 1 view .LVU2050
2776:src/keys.c    **** 			cmd++;
 6851              		.loc 1 2776 3 view .LVU2051
2777:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6852              		.loc 1 2777 4 view .LVU2052
2776:src/keys.c    **** 			cmd++;
 6853              		.loc 1 2776 7 is_stmt 0 view .LVU2053
 6854 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6855              	.LVL593:
2776:src/keys.c    **** 			cmd++;
 6856              		.loc 1 2776 6 view .LVU2054
 6857 0030 1428     		cmp	r0, #20
 6858 0032 04BF     		itt	eq
 6859 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2777:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6860              		.loc 1 2777 7 view .LVU2055
 6861 0036 0136     		addeq	r6, r6, #1
 6862              	.LVL594:
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6863              		.loc 1 2778 3 is_stmt 1 view .LVU2056
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6864              		.loc 1 2778 13 view .LVU2057
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6865              		.loc 1 2778 3 is_stmt 0 view .LVU2058
 6866 0038 A8B1     		cbz	r0, .L752
 6867 003a 09F1FF33 		add	r3, r9, #-1
 6868 003e 04E0     		b	.L749
 6869              	.LVL595:
 6870              	.L760:
 6871              	.LBB620:
2783:src/keys.c    **** 				break;
 6872              		.loc 1 2783 12 view .LVU2059
 6873 0040 12DB     		blt	.L747
 6874              	.LBE620:
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6875              		.loc 1 2778 16 discriminator 2 view .LVU2060
 6876 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6877              	.LVL596:
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6878              		.loc 1 2778 16 discriminator 2 view .LVU2061
 6879 0046 3C44     		add	r4, r4, r7
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 210


 6880              		.loc 1 2778 3 discriminator 2 view .LVU2062
 6881 0048 B0B1     		cbz	r0, .L759
 6882              	.LVL597:
 6883              	.L749:
 6884              	.LBB621:
2779:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6885              		.loc 1 2779 4 is_stmt 1 view .LVU2063
 6886 004a 5C1C     		adds	r4, r3, #1
2779:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6887              		.loc 1 2779 18 is_stmt 0 view .LVU2064
 6888 004c FFF7FEFF 		bl	remap_chars
 6889              	.LVL598:
 6890 0050 0546     		mov	r5, r0
2780:src/keys.c    **** 			if (c > cl)
 6891              		.loc 1 2780 19 view .LVU2065
 6892 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6893              	.LVL599:
2780:src/keys.c    **** 			if (c > cl)
 6894              		.loc 1 2780 4 is_stmt 1 view .LVU2066
2780:src/keys.c    **** 			if (c > cl)
 6895              		.loc 1 2780 19 is_stmt 0 view .LVU2067
 6896 0054 FFF7FEFF 		bl	remap_chars
 6897              	.LVL600:
2783:src/keys.c    **** 				break;
 6898              		.loc 1 2783 9 is_stmt 1 view .LVU2068
 6899              	.LBE621:
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6900              		.loc 1 2778 29 view .LVU2069
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6901              		.loc 1 2778 13 view .LVU2070
 6902              	.LBB622:
2781:src/keys.c    **** 				return pos;
 6903              		.loc 1 2781 4 view .LVU2071
2781:src/keys.c    **** 				return pos;
 6904              		.loc 1 2781 7 is_stmt 0 view .LVU2072
 6905 0058 8542     		cmp	r5, r0
 6906 005a 2346     		mov	r3, r4
 6907 005c F0DD     		ble	.L760
 6908              	.LVL601:
 6909              	.L744:
2781:src/keys.c    **** 				return pos;
 6910              		.loc 1 2781 7 view .LVU2073
 6911              	.LBE622:
 6912              	.LBE619:
2790:src/keys.c    **** 
 6913              		.loc 1 2790 1 view .LVU2074
 6914 005e 4046     		mov	r0, r8
 6915 0060 04B0     		add	sp, sp, #16
 6916              		.cfi_remember_state
 6917              		.cfi_def_cfa_offset 32
 6918              		@ sp needed
 6919 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6920              	.LVL602:
 6921              	.L752:
 6922              		.cfi_restore_state
 6923              	.LBB623:
2778:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 211


 6924              		.loc 1 2778 3 view .LVU2075
 6925 0066 4C46     		mov	r4, r9
 6926              	.LVL603:
 6927              	.L747:
2786:src/keys.c    **** 			return pos;
 6928              		.loc 1 2786 3 is_stmt 1 view .LVU2076
2786:src/keys.c    **** 			return pos;
 6929              		.loc 1 2786 6 is_stmt 0 view .LVU2077
 6930 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6931 006a 002B     		cmp	r3, #0
 6932 006c F7D0     		beq	.L744
 6933              	.LBE623:
2771:src/keys.c    **** 		char buf[16];
 6934              		.loc 1 2771 29 is_stmt 1 view .LVU2078
 6935 006e 08F10108 		add	r8, r8, #1
 6936              	.LVL604:
2771:src/keys.c    **** 		char buf[16];
 6937              		.loc 1 2771 16 view .LVU2079
2771:src/keys.c    **** 		char buf[16];
 6938              		.loc 1 2771 2 is_stmt 0 view .LVU2080
 6939 0072 D045     		cmp	r8, r10
 6940 0074 D4D1     		bne	.L750
 6941 0076 F2E7     		b	.L744
 6942              	.LVL605:
 6943              	.L759:
2771:src/keys.c    **** 		char buf[16];
 6944              		.loc 1 2771 2 view .LVU2081
 6945 0078 4C44     		add	r4, r4, r9
 6946 007a F5E7     		b	.L747
 6947              	.LVL606:
 6948              	.L751:
2771:src/keys.c    **** 		char buf[16];
 6949              		.loc 1 2771 11 view .LVU2082
 6950 007c D046     		mov	r8, r10
 6951 007e EEE7     		b	.L744
 6952              	.L762:
 6953              		.align	2
 6954              	.L761:
 6955 0080 00000000 		.word	StateWhileOn
 6956 0084 00000000 		.word	.LANCHOR8
 6957              		.cfi_endproc
 6958              	.LFE49:
 6960              		.section	.text.get_alpha_state,"ax",%progbits
 6961              		.align	1
 6962              		.p2align 2,,3
 6963              		.global	get_alpha_state
 6964              		.syntax unified
 6965              		.thumb
 6966              		.thumb_func
 6967              		.fpu fpv4-sp-d16
 6969              	get_alpha_state:
 6970              	.LFB61:
3115:src/keys.c    **** 
3116:src/keys.c    **** 
3117:src/keys.c    **** static int process_registerlist(const keycode c) {
3118:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3119:src/keys.c    **** 	enum shifts shift = reset_shift();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 212


3120:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3121:src/keys.c    **** 	const int g_max = global_regs();
3122:src/keys.c    **** 
3123:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3124:src/keys.c    **** 		if (local_regs())
3125:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3126:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3127:src/keys.c    **** 		goto reset_window;
3128:src/keys.c    **** 	}
3129:src/keys.c    **** 	else if (n <= 9) {
3130:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3131:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3132:src/keys.c    **** 			dv = n;
3133:src/keys.c    **** 		State2.digval = dv;
3134:src/keys.c    **** 		goto reset_window;
3135:src/keys.c    **** 	}
3136:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3137:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3138:src/keys.c    **** 		set_smode(SDISP_SHOW);
3139:src/keys.c    **** 	}
3140:src/keys.c    **** 	else if (n != NO_REG) {
3141:src/keys.c    **** 		State2.digval = n;
3142:src/keys.c    **** 		goto reset_window;
3143:src/keys.c    **** 	}
3144:src/keys.c    **** 
3145:src/keys.c    **** 	switch (c) {
3146:src/keys.c    **** 	case K_DOWN:
3147:src/keys.c    **** 		if (State2.digval > 0) {
3148:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3149:src/keys.c    **** 				State2.digval = global_regs();
3150:src/keys.c    **** 			--State2.digval;
3151:src/keys.c    **** 		}
3152:src/keys.c    **** 		else
3153:src/keys.c    **** 			State2.digval = max - 1;
3154:src/keys.c    **** 		goto reset_window;
3155:src/keys.c    **** 
3156:src/keys.c    **** 	case K_UP:
3157:src/keys.c    **** 		if (State2.digval < max - 1) {
3158:src/keys.c    **** 			State2.digval++;
3159:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3160:src/keys.c    **** 				State2.digval = regX_idx;
3161:src/keys.c    **** 		}
3162:src/keys.c    **** 		else	
3163:src/keys.c    **** 			State2.digval = 0;
3164:src/keys.c    **** 		goto reset_window;
3165:src/keys.c    **** 
3166:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3167:src/keys.c    **** 	case K04:
3168:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3169:src/keys.c    **** 		goto reset_window;
3170:src/keys.c    **** #endif
3171:src/keys.c    **** 
3172:src/keys.c    **** 	case K24:			
3173:src/keys.c    **** 	//case K60:
3174:src/keys.c    **** 		if (State2.disp_temp)
3175:src/keys.c    **** 			return STATE_UNFINISHED;
3176:src/keys.c    **** 		break;		// Exit doing nothing
ARM GAS  /tmp/ccc9ZrJ3.s 			page 213


3177:src/keys.c    **** 
3178:src/keys.c    **** 	case K20:		// ENTER
3179:src/keys.c    **** 		if (shift == SHIFT_F) {
3180:src/keys.c    **** 			State2.disp_as_alpha = 1;
3181:src/keys.c    **** 			goto reset_window;
3182:src/keys.c    **** 		}
3183:src/keys.c    **** 	case K11:		// RCL
3184:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3185:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3186:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3187:src/keys.c    **** #else
3188:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3189:src/keys.c    **** #endif
3190:src/keys.c    **** 			State2.registerlist = 0;
3191:src/keys.c    **** 			State2.digval = 0;
3192:src/keys.c    **** 			State2.digval2 = 0;
3193:src/keys.c    **** 			return n;
3194:src/keys.c    **** 		}
3195:src/keys.c    **** 	default:
3196:src/keys.c    **** 		return STATE_UNFINISHED;
3197:src/keys.c    **** 	}
3198:src/keys.c    **** 	State2.registerlist = 0;
3199:src/keys.c    **** 	State2.digval = 0;
3200:src/keys.c    **** 	State2.digval2 = 0;
3201:src/keys.c    **** reset_window:
3202:src/keys.c    **** 	State2.window = 0;
3203:src/keys.c    **** 	return STATE_UNFINISHED;
3204:src/keys.c    **** }
3205:src/keys.c    **** 
3206:src/keys.c    **** 
3207:src/keys.c    **** static int process(const int c) {
3208:src/keys.c    ****   const enum shifts shift = cur_shift();
3209:src/keys.c    ****   enum catalogues cat;
3210:src/keys.c    **** 
3211:src/keys.c    ****   if (Running || Pause) {
3212:src/keys.c    ****     /*
3213:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3214:src/keys.c    ****      */
3215:src/keys.c    ****     if (c == K60 || c == K63) {
3216:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3217:src/keys.c    **** 	set_pc(0);
3218:src/keys.c    ****       Pause = 0;
3219:src/keys.c    ****       xeq_xrom();
3220:src/keys.c    ****       set_running_off();
3221:src/keys.c    ****       DispMsg = "Stopped";
3222:src/keys.c    ****       State2.disp_freeze = 0;
3223:src/keys.c    ****       return STATE_UNFINISHED;
3224:src/keys.c    ****     }
3225:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3226:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3227:src/keys.c    ****       Pause = 0;			// leave PSE statement
3228:src/keys.c    ****       GoFast = 1;
3229:src/keys.c    ****     }
3230:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3231:src/keys.c    ****     return STATE_RUNNING;
3232:src/keys.c    ****   }
3233:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 214


3234:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3235:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3236:src/keys.c    ****    * if required.
3237:src/keys.c    ****    */
3238:src/keys.c    **** #ifdef DM42
3239:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3240:src/keys.c    **** #else
3241:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3242:src/keys.c    **** #endif
3243:src/keys.c    ****     {
3244:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3245:src/keys.c    ****       if (C_LOCKED) {
3246:src/keys.c    **** 	stack_restore();
3247:src/keys.c    **** 	CLEAR_REAL;
3248:src/keys.c    **** 	CLEAR_IMAG;
3249:src/keys.c    ****       }
3250:src/keys.c    **** #endif
3251:src/keys.c    ****       soft_init_state();
3252:src/keys.c    ****       return STATE_UNFINISHED;
3253:src/keys.c    ****     }
3254:src/keys.c    **** 
3255:src/keys.c    **** #ifndef CONSOLE
3256:src/keys.c    **** 	if (c == K63 && JustStopped) {
3257:src/keys.c    **** 		// Avoid an accidental restart with R/S
3258:src/keys.c    **** 		JustStopped = 0;
3259:src/keys.c    **** 		return STATE_IGNORE;
3260:src/keys.c    **** 	}
3261:src/keys.c    **** #endif
3262:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3263:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3264:src/keys.c    **** 	 */
3265:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3266:src/keys.c    **** 		CmdLineLength = 0;
3267:src/keys.c    **** 	/*
3268:src/keys.c    **** 	 *  Process the various cases
3269:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3270:src/keys.c    **** 	 */
3271:src/keys.c    **** 	if (State2.confirm)
3272:src/keys.c    **** 		return process_confirm((const keycode)c);
3273:src/keys.c    **** 
3274:src/keys.c    **** 	if (State2.rarg)
3275:src/keys.c    **** 		return process_arg((const keycode)c);
3276:src/keys.c    **** 
3277:src/keys.c    **** 	if (State2.gtodot)
3278:src/keys.c    **** 		return process_gtodot((const keycode)c);
3279:src/keys.c    **** 
3280:src/keys.c    **** 	if (State2.hyp)
3281:src/keys.c    **** 		return process_hyp((const keycode)c);
3282:src/keys.c    **** 
3283:src/keys.c    **** 	if (State2.test != TST_NONE)
3284:src/keys.c    **** 		return process_test((const keycode)c);
3285:src/keys.c    **** 
3286:src/keys.c    **** 	if (State2.status)
3287:src/keys.c    **** 		return process_status((const keycode)c);
3288:src/keys.c    **** 
3289:src/keys.c    **** 	/*
3290:src/keys.c    **** 	 *  Process shift keys directly
ARM GAS  /tmp/ccc9ZrJ3.s 			page 215


3291:src/keys.c    **** 	 */
3292:src/keys.c    **** 	if (c == K_F) {
3293:src/keys.c    **** 		toggle_shift(SHIFT_F);
3294:src/keys.c    **** 		return STATE_UNFINISHED;
3295:src/keys.c    **** 	}
3296:src/keys.c    **** 	if (c == K_G) {
3297:src/keys.c    **** 		toggle_shift(SHIFT_G);
3298:src/keys.c    **** 		return STATE_UNFINISHED;
3299:src/keys.c    **** 	}
3300:src/keys.c    **** 	if (c == K_H) {
3301:src/keys.c    **** 		toggle_shift(SHIFT_H);
3302:src/keys.c    **** 		State2.arrow = 0;
3303:src/keys.c    **** 		return STATE_UNFINISHED;
3304:src/keys.c    **** 	}
3305:src/keys.c    **** 	/*
3306:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3307:src/keys.c    **** 	 */
3308:src/keys.c    **** 	// print_debug (2, c);
3309:src/keys.c    **** 	if (State2.arrow)
3310:src/keys.c    **** 		return process_arrow((const keycode)c);
3311:src/keys.c    **** 
3312:src/keys.c    **** 	/*
3313:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3314:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3315:src/keys.c    **** 	 * works and were not
3316:src/keys.c    **** 	 */
3317:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3318:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3319:src/keys.c    **** 		if (is_bad_cmdline())
3320:src/keys.c    **** 			return STATE_UNFINISHED;
3321:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3322:src/keys.c    **** 		init_cat( cat );
3323:src/keys.c    **** 		return STATE_UNFINISHED;
3324:src/keys.c    **** 	}
3325:src/keys.c    **** 
3326:src/keys.c    **** 	/*
3327:src/keys.c    **** 	 *  More handlers...
3328:src/keys.c    **** 	 */
3329:src/keys.c    **** 	if (State2.multi)
3330:src/keys.c    **** 		return process_multi((const keycode)c);
3331:src/keys.c    **** 
3332:src/keys.c    **** 	if (State2.labellist)
3333:src/keys.c    **** 		return process_labellist((const keycode)c);
3334:src/keys.c    **** 
3335:src/keys.c    **** 	if (State2.registerlist)
3336:src/keys.c    **** 		return process_registerlist((const keycode)c);
3337:src/keys.c    **** 
3338:src/keys.c    **** 	if (State2.catalogue)
3339:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3340:src/keys.c    **** 
3341:src/keys.c    **** 	if (State2.alphas) {
3342:src/keys.c    **** #ifndef INFRARED
3343:src/keys.c    **** 		return process_alpha((const keycode)c);
3344:src/keys.c    **** #else
3345:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3346:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3347:src/keys.c    **** 			print_tab(0);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 216


3348:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3349:src/keys.c    **** 		}
3350:src/keys.c    **** 		return i;
3351:src/keys.c    **** #endif
3352:src/keys.c    **** 	}
3353:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3354:src/keys.c    **** 	if (C_LOCKED) {
3355:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3356:src/keys.c    **** 	}
3357:src/keys.c    **** #endif
3358:src/keys.c    **** 	if (State2.cmplx) {
3359:src/keys.c    **** 		return process_cmplx((const keycode)c);
3360:src/keys.c    **** 	} else {
3361:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3362:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3363:src/keys.c    **** 		if (shift == SHIFT_H)
3364:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3365:src/keys.c    **** 		// print_debug (3, c);
3366:src/keys.c    **** 		return process_normal((const keycode)c);
3367:src/keys.c    **** 	}
3368:src/keys.c    **** }
3369:src/keys.c    **** 
3370:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 6971              		.loc 1 3370 40 is_stmt 1 view -0
 6972              		.cfi_startproc
 6973              		@ args = 0, pretend = 0, frame = 0
 6974              		@ frame_needed = 0, uses_anonymous_args = 0
 6975              		@ link register save eliminated.
3371:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 6976              		.loc 1 3371 4 view .LVU2084
 6977              		.loc 1 3371 53 is_stmt 0 view .LVU2085
 6978 0000 074B     		ldr	r3, .L768
 6979              		.loc 1 3371 44 view .LVU2086
 6980 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 6981 0004 1AB9     		cbnz	r2, .L766
3372:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3373:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 6982              		.loc 1 3373 5 discriminator 2 view .LVU2087
 6983 0006 5969     		ldr	r1, [r3, #20]
 6984 0008 064A     		ldr	r2, .L768+4
 6985 000a 0A40     		ands	r2, r2, r1
 6986 000c 0AB1     		cbz	r2, .L767
 6987              	.L766:
 6988 000e 0120     		movs	r0, #1
3374:src/keys.c    ****  }
 6989              		.loc 1 3374 2 view .LVU2088
 6990 0010 7047     		bx	lr
 6991              	.L767:
3373:src/keys.c    ****  }
 6992              		.loc 1 3373 42 discriminator 3 view .LVU2089
 6993 0012 D889     		ldrh	r0, [r3, #14]
 6994 0014 B0F5E060 		subs	r0, r0, #1792
 6995 0018 18BF     		it	ne
 6996 001a 0120     		movne	r0, #1
 6997 001c 7047     		bx	lr
 6998              	.L769:
 6999 001e 00BF     		.align	2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 217


 7000              	.L768:
 7001 0020 00000000 		.word	StateWhileOn
 7002 0024 0709280C 		.word	203950343
 7003              		.cfi_endproc
 7004              	.LFE61:
 7006              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7007              		.align	2
 7008              	.LC0:
 7009 0000 52554E00 		.ascii	"RUN\000"
 7010              		.align	2
 7011              	.LC1:
 7012 0004 4E554C4C 		.ascii	"NULL\000"
 7012      00
 7013 0009 000000   		.align	2
 7014              	.LC2:
 7015 000c 53746F70 		.ascii	"Stopped\000"
 7015      70656400 
 7016              		.section	.text.process_keycode,"ax",%progbits
 7017              		.align	1
 7018              		.p2align 2,,3
 7019              		.global	process_keycode
 7020              		.syntax unified
 7021              		.thumb
 7022              		.thumb_func
 7023              		.fpu fpv4-sp-d16
 7025              	process_keycode:
 7026              	.LVL607:
 7027              	.LFB63:
3375:src/keys.c    **** 
3376:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3377:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3378:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3379:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3380:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3381:src/keys.c    ****        // Was error just wait for confirmation
3382:src/keys.c    ****        wait_for_key_press();
3383:src/keys.c    ****      }
3384:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3385:src/keys.c    ****      return;
3386:src/keys.c    ****    }
3387:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3388:src/keys.c    ****      nd_opcode = remapped.shift;
3389:src/keys.c    ****      set_shift(SHIFT_N);
3390:src/keys.c    ****    }
3391:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3392:src/keys.c    ****    process_keycode ( remapped.key_34s );
3393:src/keys.c    ****  }
3394:src/keys.c    ****  
3395:src/keys.c    **** /*
3396:src/keys.c    ****  *  Fed with key codes by the event loop
3397:src/keys.c    ****  */
3398:src/keys.c    **** void process_keycode(int c)
3399:src/keys.c    **** {
 7028              		.loc 1 3399 1 is_stmt 1 view -0
 7029              		.cfi_startproc
 7030              		@ args = 0, pretend = 0, frame = 8
 7031              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 218


3400:src/keys.c    ****   static int was_paused;
 7032              		.loc 1 3400 3 view .LVU2091
3401:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3402:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7033              		.loc 1 3402 3 view .LVU2092
3403:src/keys.c    ****   //print_debug(60,c);
3404:src/keys.c    ****   if (was_paused && Pause == 0)
 7034              		.loc 1 3404 3 view .LVU2093
3399:src/keys.c    ****   static int was_paused;
 7035              		.loc 1 3399 1 is_stmt 0 view .LVU2094
 7036 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7037              		.cfi_def_cfa_offset 36
 7038              		.cfi_offset 4, -36
 7039              		.cfi_offset 5, -32
 7040              		.cfi_offset 6, -28
 7041              		.cfi_offset 7, -24
 7042              		.cfi_offset 8, -20
 7043              		.cfi_offset 9, -16
 7044              		.cfi_offset 10, -12
 7045              		.cfi_offset 11, -8
 7046              		.cfi_offset 14, -4
 7047              		.loc 1 3404 7 view .LVU2095
 7048 0004 B64D     		ldr	r5, .L1403
 7049              		.loc 1 3404 27 view .LVU2096
 7050 0006 B74F     		ldr	r7, .L1403+4
 7051              		.loc 1 3404 6 view .LVU2097
 7052 0008 2B68     		ldr	r3, [r5]
3399:src/keys.c    ****   static int was_paused;
 7053              		.loc 1 3399 1 view .LVU2098
 7054 000a 83B0     		sub	sp, sp, #12
 7055              		.cfi_def_cfa_offset 48
3399:src/keys.c    ****   static int was_paused;
 7056              		.loc 1 3399 1 view .LVU2099
 7057 000c 0446     		mov	r4, r0
 7058              		.loc 1 3404 6 view .LVU2100
 7059 000e 1BB1     		cbz	r3, .L771
 7060              		.loc 1 3404 27 discriminator 1 view .LVU2101
 7061 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7062              		.loc 1 3404 18 discriminator 1 view .LVU2102
 7063 0012 002B     		cmp	r3, #0
 7064 0014 00F0DB81 		beq	.L1315
 7065              	.LVL608:
 7066              	.L771:
3405:src/keys.c    ****     {
3406:src/keys.c    ****     /*
3407:src/keys.c    ****      *  Continue XROM execution after a pause
3408:src/keys.c    ****      */
3409:src/keys.c    ****       xeq_xrom();
3410:src/keys.c    ****     }
3411:src/keys.c    ****   was_paused = Pause;
 7067              		.loc 1 3411 3 is_stmt 1 view .LVU2103
 7068              		.loc 1 3411 14 is_stmt 0 view .LVU2104
 7069 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7070 001a 2B60     		str	r3, [r5]
3412:src/keys.c    ****   if (c == K_NOP)
 7071              		.loc 1 3412 3 is_stmt 1 view .LVU2105
 7072              		.loc 1 3412 6 is_stmt 0 view .LVU2106
ARM GAS  /tmp/ccc9ZrJ3.s 			page 219


 7073 001c 2E2C     		cmp	r4, #46
 7074 001e 00F09B81 		beq	.L1316
3413:src/keys.c    ****     {
3414:src/keys.c    ****       OpCode = 0;
3415:src/keys.c    ****     }
3416:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7075              		.loc 1 3416 8 is_stmt 1 view .LVU2107
 7076              		.loc 1 3416 11 is_stmt 0 view .LVU2108
 7077 0022 622C     		cmp	r4, #98
 7078 0024 70D0     		beq	.L1317
3417:src/keys.c    ****     {
3418:src/keys.c    ****     /*
3419:src/keys.c    ****      *  Heartbeat processing goes here.
3420:src/keys.c    ****      *  This is totally thread safe!
3421:src/keys.c    ****      */
3422:src/keys.c    ****     if (Keyticks >= 2) {
3423:src/keys.c    ****       /*
3424:src/keys.c    ****        *  Some time has passed after last key press
3425:src/keys.c    ****        */
3426:src/keys.c    ****       if (OpCode != 0) {
3427:src/keys.c    **** 	/*
3428:src/keys.c    **** 	 *  Handle command display and NULL here
3429:src/keys.c    **** 	 */
3430:src/keys.c    **** 	if (OpCodeDisplayPending) {
3431:src/keys.c    **** 	  /*
3432:src/keys.c    **** 	   *  Show command to the user
3433:src/keys.c    **** 	   */
3434:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3435:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3436:src/keys.c    **** 	    DispMsg = "RUN";
3437:src/keys.c    **** 	  }
3438:src/keys.c    **** 	  else {
3439:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3440:src/keys.c    **** 	    DispMsg = TraceBuffer;
3441:src/keys.c    **** 	  }
3442:src/keys.c    **** 	  display();
3443:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3444:src/keys.c    **** 	}
3445:src/keys.c    ****     else if (Keyticks > 12) {
3446:src/keys.c    **** 	  /*
3447:src/keys.c    **** 	   *  Key is too long held down
3448:src/keys.c    **** 	   */
3449:src/keys.c    **** 	  OpCode = 0;
3450:src/keys.c    **** 	  message("NULL", CNULL);
3451:src/keys.c    **** 	  // Force display update on key-up
3452:src/keys.c    **** 	  State2.disp_temp = 0;
3453:src/keys.c    **** 	}
3454:src/keys.c    ****       }
3455:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3456:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3457:src/keys.c    **** 	State2.shifts = SHIFT_N;
3458:src/keys.c    ****       }
3459:src/keys.c    ****     }
3460:src/keys.c    **** 
3461:src/keys.c    ****     /*
3462:src/keys.c    ****      *  Serve the watchdog
3463:src/keys.c    ****      */
ARM GAS  /tmp/ccc9ZrJ3.s 			page 220


3464:src/keys.c    ****     watchdog();
3465:src/keys.c    **** 
3466:src/keys.c    **** #ifndef CONSOLE
3467:src/keys.c    ****     /*
3468:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3469:src/keys.c    ****      */
3470:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3471:src/keys.c    ****       JustStopped = 0;
3472:src/keys.c    ****     }
3473:src/keys.c    **** #endif
3474:src/keys.c    **** 
3475:src/keys.c    ****     /*
3476:src/keys.c    ****      *  Do nothing if not running a program
3477:src/keys.c    ****      */
3478:src/keys.c    ****     if (!Running && ! Pause)
3479:src/keys.c    ****       return;
3480:src/keys.c    ****   }
3481:src/keys.c    ****   else {
3482:src/keys.c    ****     /*
3483:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3484:src/keys.c    ****      */
3485:src/keys.c    ****     xeq_init_contexts();
 7079              		.loc 1 3485 5 is_stmt 1 view .LVU2109
3486:src/keys.c    ****     State2.wascomplex = 0;
 7080              		.loc 1 3486 23 is_stmt 0 view .LVU2110
 7081 0026 DFF8D882 		ldr	r8, .L1403+32
3485:src/keys.c    ****     State2.wascomplex = 0;
 7082              		.loc 1 3485 5 view .LVU2111
 7083 002a FFF7FEFF 		bl	xeq_init_contexts
 7084              	.LVL609:
 7085              		.loc 1 3486 5 is_stmt 1 view .LVU2112
 7086              		.loc 1 3486 23 is_stmt 0 view .LVU2113
 7087 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3487:src/keys.c    **** 
3488:src/keys.c    ****     if (is_dot(RPN)) {
 7088              		.loc 1 3488 9 view .LVU2114
 7089 0032 8D20     		movs	r0, #141
3486:src/keys.c    **** 
 7090              		.loc 1 3486 23 view .LVU2115
 7091 0034 6FF38713 		bfc	r3, #6, #2
 7092 0038 88F81430 		strb	r3, [r8, #20]
 7093              		.loc 1 3488 5 is_stmt 1 view .LVU2116
 7094              		.loc 1 3488 9 is_stmt 0 view .LVU2117
 7095 003c FFF7FEFF 		bl	is_dot
 7096              	.LVL610:
 7097              		.loc 1 3488 8 view .LVU2118
 7098 0040 0028     		cmp	r0, #0
 7099 0042 40F04F82 		bne	.L1318
 7100              	.L789:
3489:src/keys.c    ****       /*
3490:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3491:src/keys.c    ****        */
3492:src/keys.c    ****       clr_dot(RPN);
3493:src/keys.c    ****       finish_RPN(); // RPN
3494:src/keys.c    ****     }
3495:src/keys.c    **** 
3496:src/keys.c    **** #ifndef CONSOLE
ARM GAS  /tmp/ccc9ZrJ3.s 			page 221


3497:src/keys.c    ****     /*
3498:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3499:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3500:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3501:src/keys.c    ****      *  an accidental restart of the program.
3502:src/keys.c    ****      */
3503:src/keys.c    ****     if (c != K63)
 7101              		.loc 1 3503 5 is_stmt 1 view .LVU2119
 7102              		.loc 1 3503 8 is_stmt 0 view .LVU2120
 7103 0046 272C     		cmp	r4, #39
 7104 0048 00F04982 		beq	.L1319
3504:src/keys.c    ****       JustStopped = 0;
 7105              		.loc 1 3504 7 is_stmt 1 view .LVU2121
 7106              		.loc 1 3504 19 is_stmt 0 view .LVU2122
 7107 004c A64B     		ldr	r3, .L1403+8
 7108 004e 0025     		movs	r5, #0
3505:src/keys.c    **** #endif
3506:src/keys.c    ****   }
3507:src/keys.c    **** 
3508:src/keys.c    ****   /*
3509:src/keys.c    ****    *  Handle key release
3510:src/keys.c    ****    */
3511:src/keys.c    ****   if (c == K_RELEASE)
 7109              		.loc 1 3511 6 view .LVU2123
 7110 0050 632C     		cmp	r4, #99
3504:src/keys.c    ****       JustStopped = 0;
 7111              		.loc 1 3504 19 view .LVU2124
 7112 0052 1D60     		str	r5, [r3]
 7113              		.loc 1 3511 3 is_stmt 1 view .LVU2125
 7114              		.loc 1 3511 6 is_stmt 0 view .LVU2126
 7115 0054 40F08F81 		bne	.L791
3512:src/keys.c    ****     {
3513:src/keys.c    ****       //      print_debug (80,c);
3514:src/keys.c    ****     if (OpCode != 0) {
 7116              		.loc 1 3514 5 is_stmt 1 view .LVU2127
 7117              		.loc 1 3514 16 is_stmt 0 view .LVU2128
 7118 0058 A44A     		ldr	r2, .L1403+12
 7119 005a 1368     		ldr	r3, [r2]
 7120              		.loc 1 3514 8 view .LVU2129
 7121 005c 002B     		cmp	r3, #0
 7122 005e 00F05582 		beq	.L792
3515:src/keys.c    ****       /*
3516:src/keys.c    ****        * Execute the key on release
3517:src/keys.c    ****        */
3518:src/keys.c    ****       GoFast = 1;
 7123              		.loc 1 3518 7 is_stmt 1 view .LVU2130
 7124              		.loc 1 3518 14 is_stmt 0 view .LVU2131
 7125 0062 A349     		ldr	r1, .L1403+16
3519:src/keys.c    ****       c = OpCode;
3520:src/keys.c    ****       //      print_debug(81,c);
3521:src/keys.c    ****       OpCode = 0;
 7126              		.loc 1 3521 14 view .LVU2132
 7127 0064 1560     		str	r5, [r2]
3518:src/keys.c    ****       c = OpCode;
 7128              		.loc 1 3518 14 view .LVU2133
 7129 0066 0120     		movs	r0, #1
3522:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 222


3523:src/keys.c    ****       if (c == STATE_SST)
 7130              		.loc 1 3523 10 view .LVU2134
 7131 0068 2E2B     		cmp	r3, #46
3519:src/keys.c    ****       //      print_debug(81,c);
 7132              		.loc 1 3519 9 view .LVU2135
 7133 006a 1C46     		mov	r4, r3
 7134              	.LVL611:
3518:src/keys.c    ****       c = OpCode;
 7135              		.loc 1 3518 14 view .LVU2136
 7136 006c 0860     		str	r0, [r1]
3519:src/keys.c    ****       //      print_debug(81,c);
 7137              		.loc 1 3519 7 is_stmt 1 view .LVU2137
 7138              	.LVL612:
3521:src/keys.c    **** 
 7139              		.loc 1 3521 7 view .LVU2138
 7140              		.loc 1 3523 7 view .LVU2139
 7141              		.loc 1 3523 10 is_stmt 0 view .LVU2140
 7142 006e 00F06182 		beq	.L1320
3524:src/keys.c    **** 	xeq_sst_bst(1);
3525:src/keys.c    ****       else {
3526:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7143              		.loc 1 3526 2 is_stmt 1 view .LVU2141
 7144              		.loc 1 3526 5 is_stmt 0 view .LVU2142
 7145 0072 B3F5817F 		cmp	r3, #258
 7146 0076 0AD0     		beq	.L798
 7147              		.loc 1 3526 29 discriminator 1 view .LVU2143
 7148 0078 40F23F12 		movw	r2, #319
 7149 007c 9342     		cmp	r3, r2
 7150 007e 06D0     		beq	.L798
 7151 0080 0093     		str	r3, [sp]
 7152              		.loc 1 3526 60 discriminator 2 view .LVU2144
 7153 0082 FFF7FEFF 		bl	is_bad_cmdline
 7154              	.LVL613:
 7155              		.loc 1 3526 56 discriminator 2 view .LVU2145
 7156 0086 009B     		ldr	r3, [sp]
 7157 0088 0028     		cmp	r0, #0
 7158 008a 40F06082 		bne	.L1321
 7159              	.L798:
3527:src/keys.c    **** 	  xeq(c);
 7160              		.loc 1 3527 4 is_stmt 1 view .LVU2146
3528:src/keys.c    **** 	  if (Running || Pause)
 7161              		.loc 1 3528 8 is_stmt 0 view .LVU2147
 7162 008e 994E     		ldr	r6, .L1403+20
3527:src/keys.c    **** 	  xeq(c);
 7163              		.loc 1 3527 4 view .LVU2148
 7164 0090 1846     		mov	r0, r3
 7165 0092 FFF7FEFF 		bl	xeq
 7166              	.LVL614:
 7167              		.loc 1 3528 4 is_stmt 1 view .LVU2149
 7168              		.loc 1 3528 7 is_stmt 0 view .LVU2150
 7169 0096 3368     		ldr	r3, [r6]
 7170 0098 0BB9     		cbnz	r3, .L796
 7171              		.loc 1 3528 16 discriminator 1 view .LVU2151
 7172 009a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7173 009c 0BB1     		cbz	r3, .L794
 7174              	.L796:
3529:src/keys.c    **** 	    xeqprog();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 223


 7175              		.loc 1 3529 6 is_stmt 1 view .LVU2152
 7176 009e FFF7FEFF 		bl	xeqprog
 7177              	.LVL615:
 7178              	.L794:
3530:src/keys.c    **** 	}
3531:src/keys.c    ****       }
3532:src/keys.c    ****       dot(RPN, ShowRPN);
 7179              		.loc 1 3532 7 view .LVU2153
 7180 00a2 954D     		ldr	r5, .L1403+24
 7181 00a4 8D20     		movs	r0, #141
 7182 00a6 2968     		ldr	r1, [r5]
 7183 00a8 FFF7FEFF 		bl	dot
 7184              	.LVL616:
3533:src/keys.c    ****     }
3534:src/keys.c    ****     else {
3535:src/keys.c    ****       // Ignore key-up if no operation was pending
3536:src/keys.c    ****       dot(RPN, ShowRPN);
3537:src/keys.c    **** #ifndef CONSOLE
3538:src/keys.c    ****       if (! State2.disp_temp ) {
3539:src/keys.c    **** 	if (!WasDataEntry) {
3540:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3541:src/keys.c    **** 	  display();
3542:src/keys.c    **** 	}
3543:src/keys.c    **** 	else {
3544:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3545:src/keys.c    **** 	}
3546:src/keys.c    ****       }
3547:src/keys.c    **** #endif
3548:src/keys.c    ****       return;
3549:src/keys.c    ****     }
3550:src/keys.c    **** 
3551:src/keys.c    ****     /*
3552:src/keys.c    ****      *  Turn on the RPN symbol if desired
3553:src/keys.c    ****      */
3554:src/keys.c    ****     if (ShowRPN) {
 7185              		.loc 1 3554 5 view .LVU2154
 7186              		.loc 1 3554 9 is_stmt 0 view .LVU2155
 7187 00ac 2D68     		ldr	r5, [r5]
 7188              		.loc 1 3554 8 view .LVU2156
 7189 00ae 002D     		cmp	r5, #0
 7190 00b0 40F01E82 		bne	.L800
 7191              	.LVL617:
 7192              	.L1307:
3555:src/keys.c    ****       finish_RPN(); // RPN
3556:src/keys.c    ****     }
3557:src/keys.c    ****   }
3558:src/keys.c    ****   else {
3559:src/keys.c    ****     /*
3560:src/keys.c    ****      *  Decode the key 
3561:src/keys.c    ****      */
3562:src/keys.c    ****     //    print_debug (90, c);
3563:src/keys.c    ****     WasDataEntry = 0;
3564:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3565:src/keys.c    **** #ifdef DM42
3566:src/keys.c    ****     if (c != K_OP) {
3567:src/keys.c    ****       c = process(c);
3568:src/keys.c    ****       //      print_debug (91,c);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 224


3569:src/keys.c    ****       // returns an op-code or state
3570:src/keys.c    ****     }
3571:src/keys.c    ****     else {
3572:src/keys.c    ****       if (isRARG(nd_opcode)) {
3573:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3574:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3575:src/keys.c    **** 	  c = nd_opcode;
3576:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3577:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3578:src/keys.c    **** 	  c = STATE_UNFINISHED;
3579:src/keys.c    **** 	}
3580:src/keys.c    **** 	else {
3581:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3582:src/keys.c    **** 	  c = STATE_UNFINISHED;
3583:src/keys.c    **** 	}
3584:src/keys.c    ****       }
3585:src/keys.c    ****       else {
3586:src/keys.c    **** 	c = check_confirm(nd_opcode);
3587:src/keys.c    ****       }      
3588:src/keys.c    ****     }
3589:src/keys.c    **** #else
3590:src/keys.c    ****     c = process(c);		// returns an op-code or state
3591:src/keys.c    **** #endif
3592:src/keys.c    ****     switch (c) {
3593:src/keys.c    ****     case STATE_SST:
3594:src/keys.c    ****       OpCode = c;
3595:src/keys.c    ****       OpCodeDisplayPending = 0;
3596:src/keys.c    ****       xeq_sst_bst(0);
3597:src/keys.c    ****       break;
 7193              		.loc 1 3597 7 is_stmt 1 view .LVU2157
 7194 00b4 3368     		ldr	r3, [r6]
 7195              	.LVL618:
 7196              	.L801:
3598:src/keys.c    **** 
3599:src/keys.c    ****     case STATE_BST:
3600:src/keys.c    ****       xeq_sst_bst(-1);
3601:src/keys.c    ****       break;
3602:src/keys.c    **** 
3603:src/keys.c    ****     case STATE_BACKSPACE:
3604:src/keys.c    ****       if (! State2.runmode)
3605:src/keys.c    **** 	delprog();
3606:src/keys.c    ****       else if (State2.alphas) {
3607:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3608:src/keys.c    **** 	if (p > Alpha)
3609:src/keys.c    **** 	  *--p = '\0';
3610:src/keys.c    ****       }
3611:src/keys.c    ****       break;
3612:src/keys.c    **** 
3613:src/keys.c    ****     case STATE_RUNNING:
3614:src/keys.c    ****       xeqprog();  // continue execution
3615:src/keys.c    ****       break;
3616:src/keys.c    **** 
3617:src/keys.c    ****     case STATE_WINDOWRIGHT:
3618:src/keys.c    ****     case STATE_WINDOWLEFT:
3619:src/keys.c    ****       if (!is_bad_cmdline())
3620:src/keys.c    **** 	set_window(c);
3621:src/keys.c    ****       break;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 225


3622:src/keys.c    **** 
3623:src/keys.c    ****     case STATE_UNFINISHED:
3624:src/keys.c    ****     case STATE_IGNORE:
3625:src/keys.c    ****       break;
3626:src/keys.c    **** 
3627:src/keys.c    ****     default:
3628:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3629:src/keys.c    **** 	NonProgrammable = 0;
3630:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3631:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3632:src/keys.c    **** 	    // Data entry key
3633:src/keys.c    **** #ifndef CONSOLE
3634:src/keys.c    **** 	    WasDataEntry = 1;
3635:src/keys.c    **** #endif
3636:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3637:src/keys.c    **** 	    xeq(c);
3638:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3639:src/keys.c    **** 	  }
3640:src/keys.c    **** 	}
3641:src/keys.c    **** 	else {
3642:src/keys.c    **** 	  // Save the op-code for execution on key-up
3643:src/keys.c    **** 	  //print_debug(70,c);
3644:src/keys.c    **** 	  OpCode = c;
3645:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3646:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3647:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3648:src/keys.c    **** 	}
3649:src/keys.c    ****       }
3650:src/keys.c    ****       else {
3651:src/keys.c    **** 	stoprog(c);
3652:src/keys.c    ****       }
3653:src/keys.c    ****     }
3654:src/keys.c    ****   }
3655:src/keys.c    ****   if (! Running && ! Pause
 7197              		.loc 1 3655 3 view .LVU2158
 7198              		.loc 1 3655 6 is_stmt 0 view .LVU2159
 7199 00b6 002B     		cmp	r3, #0
 7200 00b8 40F04A81 		bne	.L1314
 7201              	.LVL619:
 7202              	.L821:
 7203              		.loc 1 3655 20 discriminator 1 view .LVU2160
 7204 00bc 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7205              		.loc 1 3655 17 discriminator 1 view .LVU2161
 7206 00be 002B     		cmp	r3, #0
 7207 00c0 40F04681 		bne	.L1314
3656:src/keys.c    **** #ifndef CONSOLE
3657:src/keys.c    ****       && ! JustStopped
 7208              		.loc 1 3657 10 view .LVU2162
 7209 00c4 884B     		ldr	r3, .L1403+8
3658:src/keys.c    **** #endif
3659:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7210              		.loc 1 3659 10 view .LVU2163
 7211 00c6 8D4E     		ldr	r6, .L1403+28
 7212 00c8 1B68     		ldr	r3, [r3]
 7213 00ca 3268     		ldr	r2, [r6]
 7214              		.loc 1 3659 7 view .LVU2164
 7215 00cc 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 226


 7216 00ce 16D1     		bne	.L1111
 7217              		.loc 1 3659 26 discriminator 1 view .LVU2165
 7218 00d0 322C     		cmp	r4, #50
 7219 00d2 14D0     		beq	.L1111
 7220              	.LBB795:
3660:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7221              		.loc 1 3660 5 is_stmt 1 view .LVU2166
 7222              		.loc 1 3660 15 is_stmt 0 view .LVU2167
 7223 00d4 DFF84092 		ldr	r9, .L1403+56
 7224 00d8 D9F80070 		ldr	r7, [r9]
 7225              	.LVL620:
3661:src/keys.c    **** 
3662:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7226              		.loc 1 3662 5 is_stmt 1 view .LVU2168
 7227              		.loc 1 3662 21 is_stmt 0 view .LVU2169
 7228 00dc 4CB1     		cbz	r4, .L1113
 7229              		.loc 1 3662 49 discriminator 1 view .LVU2170
 7230 00de 002D     		cmp	r5, #0
 7231 00e0 40F0E783 		bne	.L1166
 7232              		.loc 1 3662 66 discriminator 3 view .LVU2171
 7233 00e4 864B     		ldr	r3, .L1403+32
 7234 00e6 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7235              		.loc 1 3662 21 discriminator 3 view .LVU2172
 7236 00e8 9807     		lsls	r0, r3, #30
 7237 00ea 00F13584 		bmi	.L1167
 7238 00ee 07F00104 		and	r4, r7, #1
 7239              	.LVL621:
 7240              	.L1113:
 7241              		.loc 1 3662 18 discriminator 8 view .LVU2173
 7242 00f2 C9F80040 		str	r4, [r9]
3663:src/keys.c    ****     display();
 7243              		.loc 1 3663 5 is_stmt 1 discriminator 8 view .LVU2174
 7244 00f6 FFF7FEFF 		bl	display
 7245              	.LVL622:
3664:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7246              		.loc 1 3664 5 discriminator 8 view .LVU2175
 7247              		.loc 1 3664 18 is_stmt 0 discriminator 8 view .LVU2176
 7248 00fa C9F80070 		str	r7, [r9]
 7249              	.LVL623:
 7250              	.L1111:
 7251              		.loc 1 3664 18 discriminator 8 view .LVU2177
 7252              	.LBE795:
3665:src/keys.c    ****   }
3666:src/keys.c    **** 
3667:src/keys.c    ****  no_display:
3668:src/keys.c    ****   JustDisplayed = 0;
 7253              		.loc 1 3668 3 is_stmt 1 view .LVU2178
 7254              		.loc 1 3668 17 is_stmt 0 view .LVU2179
 7255 00fe 0023     		movs	r3, #0
 7256 0100 3360     		str	r3, [r6]
3669:src/keys.c    ****   watchdog();
 7257              		.loc 1 3669 13 is_stmt 1 view .LVU2180
 7258              	.L770:
3670:src/keys.c    **** }
 7259              		.loc 1 3670 1 is_stmt 0 view .LVU2181
 7260 0102 03B0     		add	sp, sp, #12
 7261              		.cfi_remember_state
ARM GAS  /tmp/ccc9ZrJ3.s 			page 227


 7262              		.cfi_def_cfa_offset 36
 7263              		@ sp needed
 7264 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7265              	.LVL624:
 7266              	.L1317:
 7267              		.cfi_restore_state
3422:src/keys.c    ****       /*
 7268              		.loc 1 3422 5 is_stmt 1 view .LVU2182
3422:src/keys.c    ****       /*
 7269              		.loc 1 3422 9 is_stmt 0 view .LVU2183
 7270 0108 FFF7FEFF 		bl	keyticks
 7271              	.LVL625:
3422:src/keys.c    ****       /*
 7272              		.loc 1 3422 8 view .LVU2184
 7273 010c 0128     		cmp	r0, #1
 7274 010e 1BDD     		ble	.L776
3426:src/keys.c    **** 	/*
 7275              		.loc 1 3426 7 is_stmt 1 view .LVU2185
3426:src/keys.c    **** 	/*
 7276              		.loc 1 3426 18 is_stmt 0 view .LVU2186
 7277 0110 764D     		ldr	r5, .L1403+12
 7278 0112 2868     		ldr	r0, [r5]
3426:src/keys.c    **** 	/*
 7279              		.loc 1 3426 10 view .LVU2187
 7280 0114 98B1     		cbz	r0, .L778
3430:src/keys.c    **** 	  /*
 7281              		.loc 1 3430 2 is_stmt 1 view .LVU2188
3430:src/keys.c    **** 	  /*
 7282              		.loc 1 3430 6 is_stmt 0 view .LVU2189
 7283 0116 7B4B     		ldr	r3, .L1403+36
3430:src/keys.c    **** 	  /*
 7284              		.loc 1 3430 5 view .LVU2190
 7285 0118 1E68     		ldr	r6, [r3]
 7286 011a 002E     		cmp	r6, #0
 7287 011c 00F01982 		beq	.L779
3434:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7288              		.loc 1 3434 4 is_stmt 1 view .LVU2191
3435:src/keys.c    **** 	    DispMsg = "RUN";
 7289              		.loc 1 3435 7 is_stmt 0 view .LVU2192
 7290 0120 40F23B12 		movw	r2, #315
3434:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7291              		.loc 1 3434 25 view .LVU2193
 7292 0124 0025     		movs	r5, #0
3435:src/keys.c    **** 	    DispMsg = "RUN";
 7293              		.loc 1 3435 7 view .LVU2194
 7294 0126 9042     		cmp	r0, r2
3434:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7295              		.loc 1 3434 25 view .LVU2195
 7296 0128 1D60     		str	r5, [r3]
3435:src/keys.c    **** 	    DispMsg = "RUN";
 7297              		.loc 1 3435 4 is_stmt 1 view .LVU2196
3435:src/keys.c    **** 	    DispMsg = "RUN";
 7298              		.loc 1 3435 7 is_stmt 0 view .LVU2197
 7299 012a 40F06B82 		bne	.L780
3436:src/keys.c    **** 	  }
 7300              		.loc 1 3436 6 is_stmt 1 view .LVU2198
3436:src/keys.c    **** 	  }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 228


 7301              		.loc 1 3436 14 is_stmt 0 view .LVU2199
 7302 012e 764B     		ldr	r3, .L1403+40
 7303 0130 764A     		ldr	r2, .L1403+44
 7304 0132 1A60     		str	r2, [r3]
 7305              	.L781:
3442:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 7306              		.loc 1 3442 4 is_stmt 1 view .LVU2200
 7307 0134 FFF7FEFF 		bl	display
 7308              	.LVL626:
3443:src/keys.c    **** 	}
 7309              		.loc 1 3443 4 view .LVU2201
3443:src/keys.c    **** 	}
 7310              		.loc 1 3443 12 is_stmt 0 view .LVU2202
 7311 0138 6F4B     		ldr	r3, .L1403+24
 7312 013a 0122     		movs	r2, #1
 7313 013c 1A60     		str	r2, [r3]
 7314              	.L778:
3455:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7315              		.loc 1 3455 7 is_stmt 1 view .LVU2203
3455:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7316              		.loc 1 3455 11 is_stmt 0 view .LVU2204
 7317 013e FFF7FEFF 		bl	keyticks
 7318              	.LVL627:
3455:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7319              		.loc 1 3455 10 view .LVU2205
 7320 0142 0C28     		cmp	r0, #12
 7321 0144 00F3FA81 		bgt	.L1322
 7322              	.L776:
3464:src/keys.c    **** 
 7323              		.loc 1 3464 15 is_stmt 1 view .LVU2206
3470:src/keys.c    ****       JustStopped = 0;
 7324              		.loc 1 3470 5 view .LVU2207
3470:src/keys.c    ****       JustStopped = 0;
 7325              		.loc 1 3470 9 is_stmt 0 view .LVU2208
 7326 0148 674D     		ldr	r5, .L1403+8
3470:src/keys.c    ****       JustStopped = 0;
 7327              		.loc 1 3470 8 view .LVU2209
 7328 014a 2B68     		ldr	r3, [r5]
 7329 014c 002B     		cmp	r3, #0
 7330 014e 40F08081 		bne	.L1323
 7331              	.L785:
3478:src/keys.c    ****       return;
 7332              		.loc 1 3478 5 is_stmt 1 view .LVU2210
3478:src/keys.c    ****       return;
 7333              		.loc 1 3478 9 is_stmt 0 view .LVU2211
 7334 0152 684E     		ldr	r6, .L1403+20
 7335 0154 3368     		ldr	r3, [r6]
3478:src/keys.c    ****       return;
 7336              		.loc 1 3478 8 view .LVU2212
 7337 0156 002B     		cmp	r3, #0
 7338 0158 00F05C81 		beq	.L1324
 7339              	.L787:
3511:src/keys.c    ****     {
 7340              		.loc 1 3511 3 is_stmt 1 view .LVU2213
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7341              		.loc 1 3563 5 view .LVU2214
3564:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccc9ZrJ3.s 			page 229


 7342              		.loc 1 3564 13 is_stmt 0 view .LVU2215
 7343 015c 664A     		ldr	r2, .L1403+24
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7344              		.loc 1 3563 18 view .LVU2216
 7345 015e DFF8B891 		ldr	r9, .L1403+56
3564:src/keys.c    **** #ifdef DM42
 7346              		.loc 1 3564 15 view .LVU2217
 7347 0162 B3FA83F3 		clz	r3, r3
 7348 0166 5B09     		lsrs	r3, r3, #5
3564:src/keys.c    **** #ifdef DM42
 7349              		.loc 1 3564 13 view .LVU2218
 7350 0168 1360     		str	r3, [r2]
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7351              		.loc 1 3563 18 view .LVU2219
 7352 016a 0023     		movs	r3, #0
 7353 016c C9F80030 		str	r3, [r9]
3564:src/keys.c    **** #ifdef DM42
 7354              		.loc 1 3564 5 is_stmt 1 view .LVU2220
3566:src/keys.c    ****       c = process(c);
 7355              		.loc 1 3566 5 view .LVU2221
 7356              	.L773:
3567:src/keys.c    ****       //      print_debug (91,c);
 7357              		.loc 1 3567 7 view .LVU2222
 7358              	.LVL628:
 7359              	.LBB796:
 7360              	.LBI796:
3207:src/keys.c    ****   const enum shifts shift = cur_shift();
 7361              		.loc 1 3207 12 view .LVU2223
 7362              	.LBB797:
3208:src/keys.c    ****   enum catalogues cat;
 7363              		.loc 1 3208 3 view .LVU2224
 7364              	.LBB798:
 7365              	.LBI798:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7366              		.loc 1 96 13 view .LVU2225
 7367              	.LBB799:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7368              		.loc 1 97 2 view .LVU2226
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7369              		.loc 1 97 18 is_stmt 0 view .LVU2227
 7370 0170 FFF7FEFF 		bl	shift_down
 7371              	.LVL629:
  98:src/keys.c    **** }
 7372              		.loc 1 98 2 is_stmt 1 view .LVU2228
  98:src/keys.c    **** }
 7373              		.loc 1 98 52 is_stmt 0 view .LVU2229
 7374 0174 8346     		mov	fp, r0
 7375 0176 10B9     		cbnz	r0, .L805
 7376 0178 614B     		ldr	r3, .L1403+32
 7377 017a 93F810B0 		ldrb	fp, [r3, #16]	@ zero_extendqisi2
 7378              	.L805:
 7379              	.LVL630:
  98:src/keys.c    **** }
 7380              		.loc 1 98 52 view .LVU2230
 7381              	.LBE799:
 7382              	.LBE798:
3209:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 230


 7383              		.loc 1 3209 3 is_stmt 1 view .LVU2231
3211:src/keys.c    ****     /*
 7384              		.loc 1 3211 3 view .LVU2232
3211:src/keys.c    ****     /*
 7385              		.loc 1 3211 7 is_stmt 0 view .LVU2233
 7386 017e 3568     		ldr	r5, [r6]
3211:src/keys.c    ****     /*
 7387              		.loc 1 3211 6 view .LVU2234
 7388 0180 002D     		cmp	r5, #0
 7389 0182 40F0CD80 		bne	.L806
3211:src/keys.c    ****     /*
 7390              		.loc 1 3211 15 view .LVU2235
 7391 0186 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7392 0188 002B     		cmp	r3, #0
 7393 018a 40F0C980 		bne	.L806
3239:src/keys.c    **** #else
 7394              		.loc 1 3239 3 is_stmt 1 view .LVU2236
3239:src/keys.c    **** #else
 7395              		.loc 1 3239 6 is_stmt 0 view .LVU2237
 7396 018e 242C     		cmp	r4, #36
 7397 0190 00F0D782 		beq	.L1325
3256:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7398              		.loc 1 3256 2 is_stmt 1 view .LVU2238
3256:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7399              		.loc 1 3256 5 is_stmt 0 view .LVU2239
 7400 0194 272C     		cmp	r4, #39
 7401 0196 04D1     		bne	.L820
3256:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7402              		.loc 1 3256 15 view .LVU2240
 7403 0198 534B     		ldr	r3, .L1403+8
 7404 019a 1A68     		ldr	r2, [r3]
 7405 019c 002A     		cmp	r2, #0
 7406 019e 40F0C983 		bne	.L1326
 7407              	.L820:
 7408 01a2 DFF85C81 		ldr	r8, .L1403+32
 7409 01a6 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7410              	.L813:
3265:src/keys.c    **** 		CmdLineLength = 0;
 7411              		.loc 1 3265 2 is_stmt 1 view .LVU2241
3265:src/keys.c    **** 		CmdLineLength = 0;
 7412              		.loc 1 3265 5 is_stmt 0 view .LVU2242
 7413 01aa 33B1     		cbz	r3, .L823
3265:src/keys.c    **** 		CmdLineLength = 0;
 7414              		.loc 1 3265 26 view .LVU2243
 7415 01ac FFF7FEFF 		bl	keyticks
 7416              	.LVL631:
3265:src/keys.c    **** 		CmdLineLength = 0;
 7417              		.loc 1 3265 23 view .LVU2244
 7418 01b0 1E28     		cmp	r0, #30
3266:src/keys.c    **** 	/*
 7419              		.loc 1 3266 3 is_stmt 1 view .LVU2245
3266:src/keys.c    **** 	/*
 7420              		.loc 1 3266 17 is_stmt 0 view .LVU2246
 7421 01b2 C4BF     		itt	gt
 7422 01b4 0023     		movgt	r3, #0
 7423 01b6 88F81C30 		strbgt	r3, [r8, #28]
 7424              	.L823:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 231


3271:src/keys.c    **** 		return process_confirm((const keycode)c);
 7425              		.loc 1 3271 2 is_stmt 1 view .LVU2247
3271:src/keys.c    **** 		return process_confirm((const keycode)c);
 7426              		.loc 1 3271 6 is_stmt 0 view .LVU2248
 7427 01ba 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3271:src/keys.c    **** 		return process_confirm((const keycode)c);
 7428              		.loc 1 3271 5 view .LVU2249
 7429 01be 5A07     		lsls	r2, r3, #29
 7430 01c0 40F05382 		bne	.L1327
3274:src/keys.c    **** 		return process_arg((const keycode)c);
 7431              		.loc 1 3274 2 is_stmt 1 view .LVU2250
3274:src/keys.c    **** 		return process_arg((const keycode)c);
 7432              		.loc 1 3274 6 is_stmt 0 view .LVU2251
 7433 01c4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3274:src/keys.c    **** 		return process_arg((const keycode)c);
 7434              		.loc 1 3274 5 view .LVU2252
 7435 01c8 8B06     		lsls	r3, r1, #26
 7436 01ca 00F1DA82 		bmi	.L1328
3277:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7437              		.loc 1 3277 2 is_stmt 1 view .LVU2253
3277:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7438              		.loc 1 3277 6 is_stmt 0 view .LVU2254
 7439 01ce 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
3277:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7440              		.loc 1 3277 5 view .LVU2255
 7441 01d2 12F0010A 		ands	r10, r2, #1
 7442 01d6 40F01883 		bne	.L1329
3280:src/keys.c    **** 		return process_hyp((const keycode)c);
 7443              		.loc 1 3280 2 is_stmt 1 view .LVU2256
3280:src/keys.c    **** 		return process_hyp((const keycode)c);
 7444              		.loc 1 3280 5 is_stmt 0 view .LVU2257
 7445 01da 12F02000 		ands	r0, r2, #32
 7446 01de 40F06A83 		bne	.L1330
3283:src/keys.c    **** 		return process_test((const keycode)c);
 7447              		.loc 1 3283 2 is_stmt 1 view .LVU2258
3283:src/keys.c    **** 		return process_test((const keycode)c);
 7448              		.loc 1 3283 12 is_stmt 0 view .LVU2259
 7449 01e2 98F80F30 		ldrb	r3, [r8, #15]	@ zero_extendqisi2
3283:src/keys.c    **** 		return process_test((const keycode)c);
 7450              		.loc 1 3283 5 view .LVU2260
 7451 01e6 072B     		cmp	r3, #7
 7452 01e8 40F0D482 		bne	.L1331
3286:src/keys.c    **** 		return process_status((const keycode)c);
 7453              		.loc 1 3286 2 is_stmt 1 view .LVU2261
3286:src/keys.c    **** 		return process_status((const keycode)c);
 7454              		.loc 1 3286 12 is_stmt 0 view .LVU2262
 7455 01ec 98F80C10 		ldrb	r1, [r8, #12]	@ zero_extendqisi2
3286:src/keys.c    **** 		return process_status((const keycode)c);
 7456              		.loc 1 3286 5 view .LVU2263
 7457 01f0 0029     		cmp	r1, #0
 7458 01f2 40F0C383 		bne	.L1332
3292:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7459              		.loc 1 3292 2 is_stmt 1 view .LVU2264
3292:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7460              		.loc 1 3292 5 is_stmt 0 view .LVU2265
 7461 01f6 292C     		cmp	r4, #41
 7462 01f8 00F0CF84 		beq	.L1333
ARM GAS  /tmp/ccc9ZrJ3.s 			page 232


3296:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7463              		.loc 1 3296 2 is_stmt 1 view .LVU2266
3296:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7464              		.loc 1 3296 5 is_stmt 0 view .LVU2267
 7465 01fc 2A2C     		cmp	r4, #42
 7466 01fe 00F0D784 		beq	.L1334
3300:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7467              		.loc 1 3300 2 is_stmt 1 view .LVU2268
3300:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7468              		.loc 1 3300 5 is_stmt 0 view .LVU2269
 7469 0202 2B2C     		cmp	r4, #43
 7470 0204 00F03985 		beq	.L1335
3309:src/keys.c    **** 		return process_arrow((const keycode)c);
 7471              		.loc 1 3309 2 is_stmt 1 view .LVU2270
3309:src/keys.c    **** 		return process_arrow((const keycode)c);
 7472              		.loc 1 3309 5 is_stmt 0 view .LVU2271
 7473 0208 5107     		lsls	r1, r2, #29
 7474 020a 00F1E283 		bmi	.L1336
3317:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7475              		.loc 1 3317 2 is_stmt 1 view .LVU2272
 7476              	.LBB800:
 7477              	.LBB801:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7478              		.loc 1 276 6 is_stmt 0 view .LVU2273
 7479 020e DFF80CA1 		ldr	r10, .L1403+60
 7480 0212 DAF80000 		ldr	r0, [r10]
 7481 0216 90F8AC17 		ldrb	r1, [r0, #1964]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7482              		.loc 1 276 5 view .LVU2274
 7483 021a 01F0410C 		and	ip, r1, #65
 7484 021e BCF1410F 		cmp	ip, #65
 7485              	.LBE801:
 7486              	.LBE800:
3317:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7487              		.loc 1 3317 8 view .LVU2275
 7488 0222 E4B2     		uxtb	r4, r4
 7489              	.LVL632:
 7490              	.LBB823:
 7491              	.LBI800:
 267:src/keys.c    **** {
 7492              		.loc 1 267 24 is_stmt 1 view .LVU2276
 7493              	.LBB808:
 269:src/keys.c    ****   int i, col, max;
 7494              		.loc 1 269 3 view .LVU2277
 270:src/keys.c    ****   const struct _map {
 7495              		.loc 1 270 3 view .LVU2278
 271:src/keys.c    ****     unsigned char key, cat[3];
 7496              		.loc 1 271 3 view .LVU2279
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7497              		.loc 1 276 2 view .LVU2280
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7498              		.loc 1 276 5 is_stmt 0 view .LVU2281
 7499 0224 00F03582 		beq	.L1337
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7500              		.loc 1 312 3 is_stmt 1 view .LVU2282
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7501              		.loc 1 312 6 is_stmt 0 view .LVU2283
ARM GAS  /tmp/ccc9ZrJ3.s 			page 233


 7502 0228 212C     		cmp	r4, #33
 7503 022a 00F03585 		beq	.L1338
 315:src/keys.c    ****     /*
 7504              		.loc 1 315 3 is_stmt 1 view .LVU2284
 315:src/keys.c    ****     /*
 7505              		.loc 1 315 23 is_stmt 0 view .LVU2285
 7506 022e 3849     		ldr	r1, .L1403+48
 7507 0230 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 7508              		.loc 1 315 6 view .LVU2286
 7509 0234 1942     		tst	r1, r3
 7510 0236 40F09D84 		bne	.L920
 7511              	.LBB802:
 319:src/keys.c    **** #ifdef DM42
 7512              		.loc 1 319 5 is_stmt 1 view .LVU2287
 346:src/keys.c    ****       /*
 7513              		.loc 1 346 5 view .LVU2288
 346:src/keys.c    ****       /*
 7514              		.loc 1 346 8 is_stmt 0 view .LVU2289
 7515 023a 242C     		cmp	r4, #36
 7516 023c 03D1     		bne	.L921
 346:src/keys.c    ****       /*
 7517              		.loc 1 346 18 view .LVU2290
 7518 023e BBF1020F 		cmp	fp, #2
 7519 0242 00F0D587 		beq	.L1143
 7520              	.L921:
 361:src/keys.c    ****       /*
 7521              		.loc 1 361 5 is_stmt 1 view .LVU2291
 361:src/keys.c    ****       /*
 7522              		.loc 1 361 8 is_stmt 0 view .LVU2292
 7523 0246 BBF1030F 		cmp	fp, #3
 7524 024a 18D1     		bne	.L927
 7525              	.L1123:
 371:src/keys.c    **** #ifndef WINGUI
 7526              		.loc 1 371 5 is_stmt 1 view .LVU2293
 7527              	.LVL633:
 373:src/keys.c    **** #else
 7528              		.loc 1 373 5 view .LVU2294
 373:src/keys.c    **** #else
 7529              		.loc 1 373 23 is_stmt 0 view .LVU2295
 7530 024c 90F8E837 		ldrb	r3, [r0, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7531              		.loc 1 373 27 view .LVU2296
 7532 0250 D807     		lsls	r0, r3, #31
 7533 0252 00F1E387 		bmi	.L1144
 373:src/keys.c    **** #else
 7534              		.loc 1 373 73 view .LVU2297
 7535 0256 12F00203 		ands	r3, r2, #2
 7536 025a 01F0B381 		beq	.L1339
 371:src/keys.c    **** #ifndef WINGUI
 7537              		.loc 1 371 8 view .LVU2298
 7538 025e 2D4B     		ldr	r3, .L1403+52
 377:src/keys.c    ****   }
 7539              		.loc 1 377 9 view .LVU2299
 7540 0260 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 7541              		.loc 1 373 73 view .LVU2300
ARM GAS  /tmp/ccc9ZrJ3.s 			page 234


 7542 0262 4FF0020C 		mov	ip, #2
 7543              	.LVL634:
 7544              	.L922:
 373:src/keys.c    **** #else
 7545              		.loc 1 373 73 view .LVU2301
 7546              	.LBE802:
 421:src/keys.c    ****     if (cp->key == c) {
 7547              		.loc 1 421 3 is_stmt 1 view .LVU2302
 421:src/keys.c    ****     if (cp->key == c) {
 7548              		.loc 1 421 15 view .LVU2303
 7549 0266 181F     		subs	r0, r3, #4
 7550 0268 00EB8100 		add	r0, r0, r1, lsl #2
 7551              	.LBB803:
 373:src/keys.c    **** #else
 7552              		.loc 1 373 73 is_stmt 0 view .LVU2304
 7553 026c 0421     		movs	r1, #4
 7554              	.LVL635:
 373:src/keys.c    **** #else
 7555              		.loc 1 373 73 view .LVU2305
 7556 026e 01E0     		b	.L928
 7557              	.LVL636:
 7558              	.L1341:
 373:src/keys.c    **** #else
 7559              		.loc 1 373 73 view .LVU2306
 7560 0270 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 7561              	.LVL637:
 7562              	.L928:
 373:src/keys.c    **** #else
 7563              		.loc 1 373 73 view .LVU2307
 7564              	.LBE803:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7565              		.loc 1 422 5 is_stmt 1 view .LVU2308
 421:src/keys.c    ****     if (cp->key == c) {
 7566              		.loc 1 421 24 view .LVU2309
 421:src/keys.c    ****     if (cp->key == c) {
 7567              		.loc 1 421 15 view .LVU2310
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7568              		.loc 1 422 8 is_stmt 0 view .LVU2311
 7569 0274 8C42     		cmp	r4, r1
 7570 0276 00F0A684 		beq	.L1340
 421:src/keys.c    ****     if (cp->key == c) {
 7571              		.loc 1 421 3 view .LVU2312
 7572 027a 8342     		cmp	r3, r0
 7573 027c F8D1     		bne	.L1341
 7574              	.LVL638:
 7575              	.L927:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7576              		.loc 1 427 3 is_stmt 1 view .LVU2313
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7577              		.loc 1 427 6 is_stmt 0 view .LVU2314
 7578 027e 1107     		lsls	r1, r2, #28
 7579 0280 00F1AB84 		bmi	.L933
 7580              	.LVL639:
 7581              	.L931:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7582              		.loc 1 427 6 view .LVU2315
 7583              	.LBE808:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 235


 7584              	.LBE823:
3332:src/keys.c    **** 		return process_labellist((const keycode)c);
 7585              		.loc 1 3332 2 is_stmt 1 view .LVU2316
3332:src/keys.c    **** 		return process_labellist((const keycode)c);
 7586              		.loc 1 3332 6 is_stmt 0 view .LVU2317
 7587 0284 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3332:src/keys.c    **** 		return process_labellist((const keycode)c);
 7588              		.loc 1 3332 5 view .LVU2318
 7589 0288 5907     		lsls	r1, r3, #29
 7590 028a 00F18585 		bmi	.L1342
3335:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7591              		.loc 1 3335 2 is_stmt 1 view .LVU2319
3335:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7592              		.loc 1 3335 5 is_stmt 0 view .LVU2320
 7593 028e 1807     		lsls	r0, r3, #28
 7594 0290 00F1D086 		bmi	.L1343
3338:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7595              		.loc 1 3338 2 is_stmt 1 view .LVU2321
3338:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7596              		.loc 1 3338 5 is_stmt 0 view .LVU2322
 7597 0294 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7598 0298 002B     		cmp	r3, #0
 7599 029a 40F0AC87 		bne	.L1344
3341:src/keys.c    **** #ifndef INFRARED
 7600              		.loc 1 3341 2 is_stmt 1 view .LVU2323
3341:src/keys.c    **** #ifndef INFRARED
 7601              		.loc 1 3341 6 is_stmt 0 view .LVU2324
 7602 029e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3341:src/keys.c    **** #ifndef INFRARED
 7603              		.loc 1 3341 5 view .LVU2325
 7604 02a2 1907     		lsls	r1, r3, #28
 7605 02a4 00F1CB87 		bmi	.L1345
3354:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7606              		.loc 1 3354 2 is_stmt 1 view .LVU2326
3354:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7607              		.loc 1 3354 6 is_stmt 0 view .LVU2327
 7608 02a8 DAF80030 		ldr	r3, [r10]
 7609 02ac 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3354:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7610              		.loc 1 3354 5 view .LVU2328
 7611 02b0 03F04103 		and	r3, r3, #65
 7612 02b4 412B     		cmp	r3, #65
 7613 02b6 01F00081 		beq	.L1346
3358:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7614              		.loc 1 3358 2 is_stmt 1 view .LVU2329
3358:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7615              		.loc 1 3358 5 is_stmt 0 view .LVU2330
 7616 02ba 9007     		lsls	r0, r2, #30
 7617 02bc 01F1D180 		bmi	.L1305
3361:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7618              		.loc 1 3361 3 is_stmt 1 view .LVU2331
3361:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7619              		.loc 1 3361 24 is_stmt 0 view .LVU2332
 7620 02c0 0BF1FF33 		add	r3, fp, #-1
3361:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7621              		.loc 1 3361 6 view .LVU2333
 7622 02c4 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccc9ZrJ3.s 			page 236


 7623 02c6 012B     		cmp	r3, #1
 7624 02c8 41F29A81 		bls	.L1304
3363:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7625              		.loc 1 3363 3 is_stmt 1 view .LVU2334
3363:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7626              		.loc 1 3363 6 is_stmt 0 view .LVU2335
 7627 02cc BBF1030F 		cmp	fp, #3
3364:src/keys.c    **** 		// print_debug (3, c);
 7628              		.loc 1 3364 11 view .LVU2336
 7629 02d0 2046     		mov	r0, r4
3363:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7630              		.loc 1 3363 6 view .LVU2337
 7631 02d2 01F07A80 		beq	.L1347
 7632              	.LVL640:
 7633              	.L1303:
 7634              	.LBB824:
 7635              	.LBB825:
1424:src/keys.c    **** 	case (K_CMPLX):
 7636              		.loc 1 1424 11 view .LVU2338
 7637 02d6 FFF7FEFF 		bl	process_normal
 7638              	.LVL641:
 7639 02da 0446     		mov	r4, r0
 7640 02dc 80E0     		b	.L835
 7641              	.L1404:
 7642 02de 00BF     		.align	2
 7643              	.L1403:
 7644 02e0 00000000 		.word	.LANCHOR18
 7645 02e4 00000000 		.word	Pause
 7646 02e8 00000000 		.word	JustStopped
 7647 02ec 00000000 		.word	OpCode
 7648 02f0 00000000 		.word	GoFast
 7649 02f4 00000000 		.word	Running
 7650 02f8 00000000 		.word	ShowRPN
 7651 02fc 00000000 		.word	JustDisplayed
 7652 0300 00000000 		.word	StateWhileOn
 7653 0304 00000000 		.word	OpCodeDisplayPending
 7654 0308 00000000 		.word	DispMsg
 7655 030c 00000000 		.word	.LC0
 7656 0310 00080800 		.word	526336
 7657 0314 00000000 		.word	.LANCHOR17
 7658 0318 00000000 		.word	WasDataEntry
 7659 031c 00000000 		.word	main_ram
 7660              	.LVL642:
 7661              	.L806:
1424:src/keys.c    **** 	case (K_CMPLX):
 7662              		.loc 1 1424 11 view .LVU2339
 7663              	.LBE825:
 7664              	.LBE824:
3215:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7665              		.loc 1 3215 5 is_stmt 1 view .LVU2340
3215:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7666              		.loc 1 3215 8 is_stmt 0 view .LVU2341
 7667 0320 242C     		cmp	r4, #36
 7668 0322 00F09D80 		beq	.L808
3215:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7669              		.loc 1 3215 18 view .LVU2342
 7670 0326 272C     		cmp	r4, #39
ARM GAS  /tmp/ccc9ZrJ3.s 			page 237


 7671 0328 00F09A80 		beq	.L808
3225:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7672              		.loc 1 3225 5 is_stmt 1 view .LVU2343
3225:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7673              		.loc 1 3225 8 is_stmt 0 view .LVU2344
 7674 032c 622C     		cmp	r4, #98
 7675 032e 07D0     		beq	.L811
3226:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7676              		.loc 1 3226 7 is_stmt 1 view .LVU2345
3226:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7677              		.loc 1 3226 15 is_stmt 0 view .LVU2346
 7678 0330 BA4B     		ldr	r3, .L1405
3228:src/keys.c    ****     }
 7679              		.loc 1 3228 14 view .LVU2347
 7680 0332 BB4A     		ldr	r2, .L1405+4
3226:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7681              		.loc 1 3226 17 view .LVU2348
 7682 0334 0134     		adds	r4, r4, #1
 7683              	.LVL643:
3228:src/keys.c    ****     }
 7684              		.loc 1 3228 14 view .LVU2349
 7685 0336 0121     		movs	r1, #1
3226:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7686              		.loc 1 3226 15 view .LVU2350
 7687 0338 DC74     		strb	r4, [r3, #19]
3227:src/keys.c    ****       GoFast = 1;
 7688              		.loc 1 3227 7 is_stmt 1 view .LVU2351
3227:src/keys.c    ****       GoFast = 1;
 7689              		.loc 1 3227 13 is_stmt 0 view .LVU2352
 7690 033a 0023     		movs	r3, #0
3228:src/keys.c    ****     }
 7691              		.loc 1 3228 14 view .LVU2353
 7692 033c 1160     		str	r1, [r2]
3227:src/keys.c    ****       GoFast = 1;
 7693              		.loc 1 3227 13 view .LVU2354
 7694 033e 3B70     		strb	r3, [r7]
3228:src/keys.c    ****     }
 7695              		.loc 1 3228 7 is_stmt 1 view .LVU2355
 7696              	.LVL644:
 7697              	.L811:
3228:src/keys.c    ****     }
 7698              		.loc 1 3228 7 is_stmt 0 view .LVU2356
 7699              	.LBE797:
 7700              	.LBE796:
3614:src/keys.c    ****       break;
 7701              		.loc 1 3614 7 is_stmt 1 view .LVU2357
 7702 0340 FFF7FEFF 		bl	xeqprog
 7703              	.LVL645:
3615:src/keys.c    **** 
 7704              		.loc 1 3615 7 view .LVU2358
 7705 0344 3368     		ldr	r3, [r6]
3402:src/keys.c    ****   //print_debug(60,c);
 7706              		.loc 1 3402 7 is_stmt 0 view .LVU2359
 7707 0346 0025     		movs	r5, #0
3615:src/keys.c    **** 
 7708              		.loc 1 3615 7 view .LVU2360
 7709 0348 3124     		movs	r4, #49
ARM GAS  /tmp/ccc9ZrJ3.s 			page 238


 7710              	.LVL646:
3655:src/keys.c    **** #ifndef CONSOLE
 7711              		.loc 1 3655 3 is_stmt 1 view .LVU2361
3655:src/keys.c    **** #ifndef CONSOLE
 7712              		.loc 1 3655 6 is_stmt 0 view .LVU2362
 7713 034a 002B     		cmp	r3, #0
 7714 034c 3FF4B6AE 		beq	.L821
 7715              	.L1314:
3655:src/keys.c    **** #ifndef CONSOLE
 7716              		.loc 1 3655 6 view .LVU2363
 7717 0350 B44E     		ldr	r6, .L1405+8
3668:src/keys.c    ****   watchdog();
 7718              		.loc 1 3668 3 is_stmt 1 view .LVU2364
3668:src/keys.c    ****   watchdog();
 7719              		.loc 1 3668 17 is_stmt 0 view .LVU2365
 7720 0352 0023     		movs	r3, #0
 7721 0354 3360     		str	r3, [r6]
3669:src/keys.c    **** }
 7722              		.loc 1 3669 13 is_stmt 1 view .LVU2366
 7723 0356 D4E6     		b	.L770
 7724              	.LVL647:
 7725              	.L1316:
3414:src/keys.c    ****     }
 7726              		.loc 1 3414 7 view .LVU2367
3564:src/keys.c    **** #ifdef DM42
 7727              		.loc 1 3564 15 is_stmt 0 view .LVU2368
 7728 0358 B34E     		ldr	r6, .L1405+12
3564:src/keys.c    **** #ifdef DM42
 7729              		.loc 1 3564 13 view .LVU2369
 7730 035a B449     		ldr	r1, .L1405+16
3564:src/keys.c    **** #ifdef DM42
 7731              		.loc 1 3564 15 view .LVU2370
 7732 035c 3368     		ldr	r3, [r6]
3414:src/keys.c    ****     }
 7733              		.loc 1 3414 14 view .LVU2371
 7734 035e B44A     		ldr	r2, .L1405+20
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7735              		.loc 1 3563 18 view .LVU2372
 7736 0360 DFF8E892 		ldr	r9, .L1405+48
3564:src/keys.c    **** #ifdef DM42
 7737              		.loc 1 3564 15 view .LVU2373
 7738 0364 B3FA83F3 		clz	r3, r3
 7739 0368 5B09     		lsrs	r3, r3, #5
3564:src/keys.c    **** #ifdef DM42
 7740              		.loc 1 3564 13 view .LVU2374
 7741 036a 0B60     		str	r3, [r1]
3414:src/keys.c    ****     }
 7742              		.loc 1 3414 14 view .LVU2375
 7743 036c 0023     		movs	r3, #0
 7744 036e 1360     		str	r3, [r2]
3511:src/keys.c    ****     {
 7745              		.loc 1 3511 3 is_stmt 1 view .LVU2376
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7746              		.loc 1 3563 5 view .LVU2377
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7747              		.loc 1 3563 18 is_stmt 0 view .LVU2378
 7748 0370 C9F80030 		str	r3, [r9]
ARM GAS  /tmp/ccc9ZrJ3.s 			page 239


3564:src/keys.c    **** #ifdef DM42
 7749              		.loc 1 3564 5 is_stmt 1 view .LVU2379
3566:src/keys.c    ****       c = process(c);
 7750              		.loc 1 3566 5 view .LVU2380
 7751 0374 FCE6     		b	.L773
 7752              	.L791:
3566:src/keys.c    ****       c = process(c);
 7753              		.loc 1 3566 5 is_stmt 0 view .LVU2381
 7754 0376 AC4E     		ldr	r6, .L1405+12
3564:src/keys.c    **** #ifdef DM42
 7755              		.loc 1 3564 13 view .LVU2382
 7756 0378 AC49     		ldr	r1, .L1405+16
 7757 037a 3368     		ldr	r3, [r6]
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7758              		.loc 1 3563 5 is_stmt 1 view .LVU2383
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7759              		.loc 1 3563 18 is_stmt 0 view .LVU2384
 7760 037c DFF8CC92 		ldr	r9, .L1405+48
3564:src/keys.c    **** #ifdef DM42
 7761              		.loc 1 3564 15 view .LVU2385
 7762 0380 B3FA83F2 		clz	r2, r3
 7763 0384 5209     		lsrs	r2, r2, #5
3566:src/keys.c    ****       c = process(c);
 7764              		.loc 1 3566 8 view .LVU2386
 7765 0386 342C     		cmp	r4, #52
3564:src/keys.c    **** #ifdef DM42
 7766              		.loc 1 3564 13 view .LVU2387
 7767 0388 0A60     		str	r2, [r1]
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7768              		.loc 1 3563 18 view .LVU2388
 7769 038a C9F80050 		str	r5, [r9]
3564:src/keys.c    **** #ifdef DM42
 7770              		.loc 1 3564 5 is_stmt 1 view .LVU2389
3566:src/keys.c    ****       c = process(c);
 7771              		.loc 1 3566 5 view .LVU2390
3566:src/keys.c    ****       c = process(c);
 7772              		.loc 1 3566 8 is_stmt 0 view .LVU2391
 7773 038e 7FF4EFAE 		bne	.L773
3572:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7774              		.loc 1 3572 7 is_stmt 1 view .LVU2392
3572:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7775              		.loc 1 3572 11 is_stmt 0 view .LVU2393
 7776 0392 A84A     		ldr	r2, .L1405+24
 7777 0394 1068     		ldr	r0, [r2]
3572:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7778              		.loc 1 3572 10 view .LVU2394
 7779 0396 10F47042 		ands	r2, r0, #61440
 7780 039a 1BD0     		beq	.L1090
3572:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7781              		.loc 1 3572 11 discriminator 1 view .LVU2395
 7782 039c B2F5704F 		cmp	r2, #61440
 7783 03a0 00F0AB80 		beq	.L1091
 7784              	.LBB1394:
3573:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7785              		.loc 1 3573 2 is_stmt 1 view .LVU2396
3573:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7786              		.loc 1 3573 28 is_stmt 0 view .LVU2397
ARM GAS  /tmp/ccc9ZrJ3.s 			page 240


 7787 03a4 C0F30722 		ubfx	r2, r0, #8, #8
 7788 03a8 A2F12004 		sub	r4, r2, #32
 7789              	.LVL648:
3573:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7790              		.loc 1 3573 28 view .LVU2398
 7791 03ac E4B2     		uxtb	r4, r4
 7792              	.LVL649:
3574:src/keys.c    **** 	  c = nd_opcode;
 7793              		.loc 1 3574 2 is_stmt 1 view .LVU2399
3574:src/keys.c    **** 	  c = nd_opcode;
 7794              		.loc 1 3574 5 is_stmt 0 view .LVU2400
 7795 03ae 012C     		cmp	r4, #1
 7796 03b0 35D9     		bls	.L1092
3574:src/keys.c    **** 	  c = nd_opcode;
 7797              		.loc 1 3574 53 discriminator 1 view .LVU2401
 7798 03b2 6C2C     		cmp	r4, #108
 7799 03b4 33D0     		beq	.L1092
3574:src/keys.c    **** 	  c = nd_opcode;
 7800              		.loc 1 3574 74 discriminator 2 view .LVU2402
 7801 03b6 242C     		cmp	r4, #36
 7802 03b8 31D0     		beq	.L1092
3576:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7803              		.loc 1 3576 7 is_stmt 1 view .LVU2403
3576:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7804              		.loc 1 3576 32 is_stmt 0 view .LVU2404
 7805 03ba A4F12D01 		sub	r1, r4, #45
3576:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7806              		.loc 1 3576 10 view .LVU2405
 7807 03be 0629     		cmp	r1, #6
 7808 03c0 00F26B82 		bhi	.L1094
3577:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7809              		.loc 1 3577 4 is_stmt 1 view .LVU2406
3577:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7810              		.loc 1 3577 25 is_stmt 0 view .LVU2407
 7811 03c4 4D3A     		subs	r2, r2, #77
3577:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7812              		.loc 1 3577 16 view .LVU2408
 7813 03c6 88F80F20 		strb	r2, [r8, #15]
3578:src/keys.c    **** 	}
 7814              		.loc 1 3578 4 is_stmt 1 view .LVU2409
 7815              	.LVL650:
3578:src/keys.c    **** 	}
 7816              		.loc 1 3578 4 is_stmt 0 view .LVU2410
 7817              	.LBE1394:
3592:src/keys.c    ****     case STATE_SST:
 7818              		.loc 1 3592 5 is_stmt 1 view .LVU2411
 7819              	.LBB1397:
3578:src/keys.c    **** 	}
 7820              		.loc 1 3578 6 is_stmt 0 view .LVU2412
 7821 03ca 3324     		movs	r4, #51
 7822              	.LVL651:
3578:src/keys.c    **** 	}
 7823              		.loc 1 3578 6 view .LVU2413
 7824 03cc 73E6     		b	.L801
 7825              	.LVL652:
 7826              	.L1315:
3578:src/keys.c    **** 	}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 241


 7827              		.loc 1 3578 6 view .LVU2414
 7828              	.LBE1397:
3409:src/keys.c    ****     }
 7829              		.loc 1 3409 7 is_stmt 1 view .LVU2415
 7830 03ce FFF7FEFF 		bl	xeq_xrom
 7831              	.LVL653:
3409:src/keys.c    ****     }
 7832              		.loc 1 3409 7 is_stmt 0 view .LVU2416
 7833 03d2 21E6     		b	.L771
 7834              	.L1090:
3586:src/keys.c    ****       }      
 7835              		.loc 1 3586 2 is_stmt 1 view .LVU2417
 7836              	.LBB1398:
 7837              	.LBB1399:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7838              		.loc 1 705 5 is_stmt 0 view .LVU2418
 7839 03d4 C0F30723 		ubfx	r3, r0, #8, #8
 7840 03d8 012B     		cmp	r3, #1
 7841              	.LBE1399:
 7842              	.LBE1398:
3586:src/keys.c    ****       }      
 7843              		.loc 1 3586 6 view .LVU2419
 7844 03da 0446     		mov	r4, r0
 7845              	.LVL654:
 7846              	.LBB1403:
 7847              	.LBI1398:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7848              		.loc 1 704 12 is_stmt 1 view .LVU2420
 7849              	.LBB1400:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7850              		.loc 1 705 2 view .LVU2421
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7851              		.loc 1 705 5 is_stmt 0 view .LVU2422
 7852 03dc 00F09280 		beq	.L1124
 7853              	.LVL655:
 7854              	.L835:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7855              		.loc 1 705 5 view .LVU2423
 7856              	.LBE1400:
 7857              	.LBE1403:
3592:src/keys.c    ****     case STATE_SST:
 7858              		.loc 1 3592 5 is_stmt 1 view .LVU2424
 7859 03e0 A4F12B03 		sub	r3, r4, #43
 7860 03e4 082B     		cmp	r3, #8
 7861 03e6 00F2C480 		bhi	.L1096
 7862 03ea 01A2     		adr	r2, .L1098
 7863 03ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7864              		.p2align 2
 7865              	.L1098:
 7866 03f0 3F040000 		.word	.L1099+1
 7867 03f4 3F040000 		.word	.L1099+1
 7868 03f8 73050000 		.word	.L1096+1
 7869 03fc CB040000 		.word	.L1031+1
 7870 0400 BB040000 		.word	.L1027+1
 7871 0404 A1040000 		.word	.L1024+1
 7872 0408 41030000 		.word	.L811+1
 7873 040c 39040000 		.word	.L1308+1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 242


 7874 0410 39040000 		.word	.L1308+1
 7875              		.p2align 1
 7876              	.L1324:
3478:src/keys.c    ****       return;
 7877              		.loc 1 3478 21 is_stmt 0 discriminator 1 view .LVU2425
 7878 0414 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3478:src/keys.c    ****       return;
 7879              		.loc 1 3478 18 discriminator 1 view .LVU2426
 7880 0416 002A     		cmp	r2, #0
 7881 0418 7FF4A0AE 		bne	.L787
 7882 041c 71E6     		b	.L770
 7883              	.LVL656:
 7884              	.L1092:
 7885              	.LBB1404:
3575:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7886              		.loc 1 3575 4 is_stmt 1 view .LVU2427
 7887 041e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3575:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7888              		.loc 1 3575 6 is_stmt 0 view .LVU2428
 7889 0422 0446     		mov	r4, r0
 7890              	.LVL657:
 7891              	.L862:
3575:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7892              		.loc 1 3575 6 view .LVU2429
 7893              	.LBE1404:
3628:src/keys.c    **** 	NonProgrammable = 0;
 7894              		.loc 1 3628 7 is_stmt 1 view .LVU2430
3628:src/keys.c    **** 	NonProgrammable = 0;
 7895              		.loc 1 3628 10 is_stmt 0 view .LVU2431
 7896 0424 4A06     		lsls	r2, r1, #25
 7897 0426 00F11C81 		bmi	.L1348
 7898              	.L1119:
3628:src/keys.c    **** 	NonProgrammable = 0;
 7899              		.loc 1 3628 26 view .LVU2432
 7900 042a 834B     		ldr	r3, .L1405+28
 7901 042c 1A68     		ldr	r2, [r3]
 7902 042e 002A     		cmp	r2, #0
 7903 0430 41F0CF81 		bne	.L1349
 7904              	.LVL658:
 7905              	.L1108:
3651:src/keys.c    ****       }
 7906              		.loc 1 3651 2 is_stmt 1 view .LVU2433
 7907 0434 FFF7FEFF 		bl	stoprog
 7908              	.LVL659:
 7909              	.L1308:
 7910 0438 3368     		ldr	r3, [r6]
3402:src/keys.c    ****   //print_debug(60,c);
 7911              		.loc 1 3402 7 is_stmt 0 view .LVU2434
 7912 043a 0025     		movs	r5, #0
 7913 043c 3BE6     		b	.L801
 7914              	.LVL660:
 7915              	.L1099:
3619:src/keys.c    **** 	set_window(c);
 7916              		.loc 1 3619 7 is_stmt 1 view .LVU2435
3619:src/keys.c    **** 	set_window(c);
 7917              		.loc 1 3619 12 is_stmt 0 view .LVU2436
 7918 043e FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccc9ZrJ3.s 			page 243


 7919              	.LVL661:
3619:src/keys.c    **** 	set_window(c);
 7920              		.loc 1 3619 10 view .LVU2437
 7921 0442 0546     		mov	r5, r0
 7922 0444 0028     		cmp	r0, #0
 7923 0446 F7D1     		bne	.L1308
3620:src/keys.c    ****       break;
 7924              		.loc 1 3620 2 is_stmt 1 view .LVU2438
 7925 0448 2046     		mov	r0, r4
 7926 044a FFF7FEFF 		bl	set_window
 7927              	.LVL662:
 7928 044e 3368     		ldr	r3, [r6]
 7929 0450 31E6     		b	.L801
 7930              	.L1323:
3470:src/keys.c    ****       JustStopped = 0;
 7931              		.loc 1 3470 25 is_stmt 0 discriminator 1 view .LVU2439
 7932 0452 FFF7FEFF 		bl	is_key_pressed
 7933              	.LVL663:
3470:src/keys.c    ****       JustStopped = 0;
 7934              		.loc 1 3470 21 discriminator 1 view .LVU2440
 7935 0456 0028     		cmp	r0, #0
 7936 0458 7FF47BAE 		bne	.L785
3471:src/keys.c    ****     }
 7937              		.loc 1 3471 7 is_stmt 1 view .LVU2441
3471:src/keys.c    ****     }
 7938              		.loc 1 3471 19 is_stmt 0 view .LVU2442
 7939 045c 2860     		str	r0, [r5]
 7940 045e 78E6     		b	.L785
 7941              	.LVL664:
 7942              	.L808:
 7943              	.LBB1405:
 7944              	.LBB1340:
3216:src/keys.c    **** 	set_pc(0);
 7945              		.loc 1 3216 7 is_stmt 1 view .LVU2443
3216:src/keys.c    **** 	set_pc(0);
 7946              		.loc 1 3216 11 is_stmt 0 view .LVU2444
 7947 0460 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
3216:src/keys.c    **** 	set_pc(0);
 7948              		.loc 1 3216 10 view .LVU2445
 7949 0462 4BB1     		cbz	r3, .L810
3216:src/keys.c    **** 	set_pc(0);
 7950              		.loc 1 3216 20 view .LVU2446
 7951 0464 754B     		ldr	r3, .L1405+32
 7952 0466 1B68     		ldr	r3, [r3]
 7953 0468 B3F8E037 		ldrh	r3, [r3, #2016]
3216:src/keys.c    **** 	set_pc(0);
 7954              		.loc 1 3216 17 view .LVU2447
 7955 046c 9B0B     		lsrs	r3, r3, #14
 7956 046e 032B     		cmp	r3, #3
 7957 0470 02D1     		bne	.L810
3217:src/keys.c    ****       Pause = 0;
 7958              		.loc 1 3217 2 is_stmt 1 view .LVU2448
 7959 0472 0020     		movs	r0, #0
 7960 0474 FFF7FEFF 		bl	set_pc
 7961              	.LVL665:
 7962              	.L810:
3218:src/keys.c    ****       xeq_xrom();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 244


 7963              		.loc 1 3218 7 view .LVU2449
3218:src/keys.c    ****       xeq_xrom();
 7964              		.loc 1 3218 13 is_stmt 0 view .LVU2450
 7965 0478 0025     		movs	r5, #0
 7966 047a 3D70     		strb	r5, [r7]
3219:src/keys.c    ****       set_running_off();
 7967              		.loc 1 3219 7 is_stmt 1 view .LVU2451
 7968 047c FFF7FEFF 		bl	xeq_xrom
 7969              	.LVL666:
3220:src/keys.c    ****       DispMsg = "Stopped";
 7970              		.loc 1 3220 7 view .LVU2452
 7971 0480 FFF7FEFF 		bl	set_running_off
 7972              	.LVL667:
3221:src/keys.c    ****       State2.disp_freeze = 0;
 7973              		.loc 1 3221 7 view .LVU2453
3222:src/keys.c    ****       return STATE_UNFINISHED;
 7974              		.loc 1 3222 26 is_stmt 0 view .LVU2454
 7975 0484 654A     		ldr	r2, .L1405
3221:src/keys.c    ****       State2.disp_freeze = 0;
 7976              		.loc 1 3221 15 view .LVU2455
 7977 0486 6E48     		ldr	r0, .L1405+36
3222:src/keys.c    ****       return STATE_UNFINISHED;
 7978              		.loc 1 3222 26 view .LVU2456
 7979 0488 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3221:src/keys.c    ****       State2.disp_freeze = 0;
 7980              		.loc 1 3221 15 view .LVU2457
 7981 048a 6E4C     		ldr	r4, .L1405+40
 7982              	.LVL668:
3221:src/keys.c    ****       State2.disp_freeze = 0;
 7983              		.loc 1 3221 15 view .LVU2458
 7984 048c 0460     		str	r4, [r0]
3222:src/keys.c    ****       return STATE_UNFINISHED;
 7985              		.loc 1 3222 7 is_stmt 1 view .LVU2459
3222:src/keys.c    ****       return STATE_UNFINISHED;
 7986              		.loc 1 3222 26 is_stmt 0 view .LVU2460
 7987 048e 65F30411 		bfi	r1, r5, #4, #1
 7988 0492 3368     		ldr	r3, [r6]
 7989 0494 D175     		strb	r1, [r2, #23]
3223:src/keys.c    ****     }
 7990              		.loc 1 3223 7 is_stmt 1 view .LVU2461
3223:src/keys.c    ****     }
 7991              		.loc 1 3223 14 is_stmt 0 view .LVU2462
 7992 0496 3324     		movs	r4, #51
 7993 0498 0DE6     		b	.L801
 7994              	.LVL669:
 7995              	.L1015:
 7996              	.LBB919:
 7997              	.LBB920:
1813:src/keys.c    **** 			return STATE_BACKSPACE;
 7998              		.loc 1 1813 3 is_stmt 1 view .LVU2463
1813:src/keys.c    **** 			return STATE_BACKSPACE;
 7999              		.loc 1 1813 6 is_stmt 0 view .LVU2464
 8000 049a 0028     		cmp	r0, #0
 8001 049c 41F0D683 		bne	.L1025
 8002              	.LVL670:
 8003              	.L1024:
1813:src/keys.c    **** 			return STATE_BACKSPACE;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 245


 8004              		.loc 1 1813 6 view .LVU2465
 8005              	.LBE920:
 8006              	.LBE919:
 8007              	.LBE1340:
 8008              	.LBE1405:
3604:src/keys.c    **** 	delprog();
 8009              		.loc 1 3604 7 is_stmt 1 view .LVU2466
3604:src/keys.c    **** 	delprog();
 8010              		.loc 1 3604 11 is_stmt 0 view .LVU2467
 8011 04a0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3604:src/keys.c    **** 	delprog();
 8012              		.loc 1 3604 10 view .LVU2468
 8013 04a4 13F04005 		ands	r5, r3, #64
 8014 04a8 00F0A780 		beq	.L1350
3606:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8015              		.loc 1 3606 12 is_stmt 1 view .LVU2469
3606:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8016              		.loc 1 3606 15 is_stmt 0 view .LVU2470
 8017 04ac 13F00805 		ands	r5, r3, #8
 8018 04b0 40F08280 		bne	.L1101
 8019              	.L1309:
 8020 04b4 3368     		ldr	r3, [r6]
 8021              	.LBB1406:
3609:src/keys.c    ****       }
 8022              		.loc 1 3609 9 view .LVU2471
 8023 04b6 3024     		movs	r4, #48
 8024 04b8 FDE5     		b	.L801
 8025              	.L1027:
 8026              	.LBE1406:
3600:src/keys.c    ****       break;
 8027              		.loc 1 3600 7 is_stmt 1 view .LVU2472
 8028 04ba 4FF0FF30 		mov	r0, #-1
 8029 04be FFF7FEFF 		bl	xeq_sst_bst
 8030              	.LVL671:
3601:src/keys.c    **** 
 8031              		.loc 1 3601 7 view .LVU2473
3402:src/keys.c    ****   //print_debug(60,c);
 8032              		.loc 1 3402 7 is_stmt 0 view .LVU2474
 8033 04c2 0025     		movs	r5, #0
 8034 04c4 3368     		ldr	r3, [r6]
3601:src/keys.c    **** 
 8035              		.loc 1 3601 7 view .LVU2475
 8036 04c6 2F24     		movs	r4, #47
 8037 04c8 F5E5     		b	.L801
 8038              	.L1031:
3594:src/keys.c    ****       OpCodeDisplayPending = 0;
 8039              		.loc 1 3594 7 is_stmt 1 view .LVU2476
3594:src/keys.c    ****       OpCodeDisplayPending = 0;
 8040              		.loc 1 3594 14 is_stmt 0 view .LVU2477
 8041 04ca 594A     		ldr	r2, .L1405+20
3595:src/keys.c    ****       xeq_sst_bst(0);
 8042              		.loc 1 3595 28 view .LVU2478
 8043 04cc 5E4B     		ldr	r3, .L1405+44
 8044 04ce 0020     		movs	r0, #0
3594:src/keys.c    ****       OpCodeDisplayPending = 0;
 8045              		.loc 1 3594 14 view .LVU2479
 8046 04d0 2E24     		movs	r4, #46
ARM GAS  /tmp/ccc9ZrJ3.s 			page 246


 8047 04d2 1460     		str	r4, [r2]
3595:src/keys.c    ****       xeq_sst_bst(0);
 8048              		.loc 1 3595 7 is_stmt 1 view .LVU2480
3595:src/keys.c    ****       xeq_sst_bst(0);
 8049              		.loc 1 3595 28 is_stmt 0 view .LVU2481
 8050 04d4 1860     		str	r0, [r3]
3596:src/keys.c    ****       break;
 8051              		.loc 1 3596 7 is_stmt 1 view .LVU2482
3402:src/keys.c    ****   //print_debug(60,c);
 8052              		.loc 1 3402 7 is_stmt 0 view .LVU2483
 8053 04d6 0546     		mov	r5, r0
3596:src/keys.c    ****       break;
 8054              		.loc 1 3596 7 view .LVU2484
 8055 04d8 FFF7FEFF 		bl	xeq_sst_bst
 8056              	.LVL672:
 8057 04dc EAE5     		b	.L1307
 8058              	.LVL673:
 8059              	.L1319:
3596:src/keys.c    ****       break;
 8060              		.loc 1 3596 7 view .LVU2485
 8061 04de 524E     		ldr	r6, .L1405+12
 8062 04e0 3368     		ldr	r3, [r6]
 8063 04e2 3BE6     		b	.L787
 8064              	.L1318:
3492:src/keys.c    ****       finish_RPN(); // RPN
 8065              		.loc 1 3492 7 is_stmt 1 view .LVU2486
 8066 04e4 8D20     		movs	r0, #141
 8067 04e6 FFF7FEFF 		bl	clr_dot
 8068              	.LVL674:
3493:src/keys.c    ****     }
 8069              		.loc 1 3493 7 view .LVU2487
 8070 04ea FFF7FEFF 		bl	finish_RPN
 8071              	.LVL675:
 8072 04ee AAE5     		b	.L789
 8073              	.L800:
3555:src/keys.c    ****     }
 8074              		.loc 1 3555 7 view .LVU2488
 8075 04f0 FFF7FEFF 		bl	finish_RPN
 8076              	.LVL676:
3402:src/keys.c    ****   //print_debug(60,c);
 8077              		.loc 1 3402 7 is_stmt 0 view .LVU2489
 8078 04f4 0025     		movs	r5, #0
 8079 04f6 3368     		ldr	r3, [r6]
 8080 04f8 DDE5     		b	.L801
 8081              	.L1091:
3586:src/keys.c    ****       }      
 8082              		.loc 1 3586 2 is_stmt 1 view .LVU2490
 8083              	.LBB1407:
 8084              	.LBB1401:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8085              		.loc 1 705 5 is_stmt 0 view .LVU2491
 8086 04fa C0F30723 		ubfx	r3, r0, #8, #8
 8087 04fe 012B     		cmp	r3, #1
 8088              	.LBE1401:
 8089              	.LBE1407:
3586:src/keys.c    ****       }      
 8090              		.loc 1 3586 6 view .LVU2492
ARM GAS  /tmp/ccc9ZrJ3.s 			page 247


 8091 0500 0446     		mov	r4, r0
 8092              	.LVL677:
 8093              	.LBB1408:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8094              		.loc 1 704 12 is_stmt 1 view .LVU2493
 8095              	.LBB1402:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8096              		.loc 1 705 2 view .LVU2494
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8097              		.loc 1 705 5 is_stmt 0 view .LVU2495
 8098 0502 6AD1     		bne	.L1351
 8099              	.LVL678:
 8100              	.L1124:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8101              		.loc 1 705 5 view .LVU2496
 8102 0504 FFF7FEFF 		bl	check_confirm.part.0
 8103              	.LVL679:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8104              		.loc 1 705 5 view .LVU2497
 8105 0508 0446     		mov	r4, r0
 8106              	.LVL680:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8107              		.loc 1 705 5 view .LVU2498
 8108 050a 69E7     		b	.L835
 8109              	.LVL681:
 8110              	.L792:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8111              		.loc 1 705 5 view .LVU2499
 8112              	.LBE1402:
 8113              	.LBE1408:
3536:src/keys.c    **** #ifndef CONSOLE
 8114              		.loc 1 3536 7 is_stmt 1 view .LVU2500
 8115 050c 474B     		ldr	r3, .L1405+16
 8116 050e 8D20     		movs	r0, #141
 8117 0510 1968     		ldr	r1, [r3]
 8118 0512 FFF7FEFF 		bl	dot
 8119              	.LVL682:
3538:src/keys.c    **** 	if (!WasDataEntry) {
 8120              		.loc 1 3538 7 view .LVU2501
3538:src/keys.c    **** 	if (!WasDataEntry) {
 8121              		.loc 1 3538 11 is_stmt 0 view .LVU2502
 8122 0516 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3538:src/keys.c    **** 	if (!WasDataEntry) {
 8123              		.loc 1 3538 10 view .LVU2503
 8124 051a 9806     		lsls	r0, r3, #26
 8125 051c 3FF5F1AD 		bmi	.L770
3539:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8126              		.loc 1 3539 2 is_stmt 1 view .LVU2504
3539:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8127              		.loc 1 3539 6 is_stmt 0 view .LVU2505
 8128 0520 4A4B     		ldr	r3, .L1405+48
3539:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8129              		.loc 1 3539 5 view .LVU2506
 8130 0522 1B68     		ldr	r3, [r3]
 8131 0524 002B     		cmp	r3, #0
 8132 0526 40F09780 		bne	.L803
3541:src/keys.c    **** 	}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 248


 8133              		.loc 1 3541 4 is_stmt 1 view .LVU2507
 8134              		.loc 1 3670 1 is_stmt 0 view .LVU2508
 8135 052a 03B0     		add	sp, sp, #12
 8136              		.cfi_remember_state
 8137              		.cfi_def_cfa_offset 36
 8138              		@ sp needed
 8139 052c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8140              		.cfi_restore 14
 8141              		.cfi_restore 11
 8142              		.cfi_restore 10
 8143              		.cfi_restore 9
 8144              		.cfi_restore 8
 8145              		.cfi_restore 7
 8146              		.cfi_restore 6
 8147              		.cfi_restore 5
 8148              		.cfi_restore 4
 8149              		.cfi_def_cfa_offset 0
 8150              	.LVL683:
3541:src/keys.c    **** 	}
 8151              		.loc 1 3541 4 view .LVU2509
 8152 0530 FFF7FEBF 		b	display
 8153              	.LVL684:
 8154              	.L1320:
 8155              		.cfi_restore_state
3524:src/keys.c    ****       else {
 8156              		.loc 1 3524 2 is_stmt 1 view .LVU2510
 8157 0534 FFF7FEFF 		bl	xeq_sst_bst
 8158              	.LVL685:
3524:src/keys.c    ****       else {
 8159              		.loc 1 3524 2 is_stmt 0 view .LVU2511
 8160 0538 3B4E     		ldr	r6, .L1405+12
 8161 053a B2E5     		b	.L794
 8162              	.L1322:
3455:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8163              		.loc 1 3455 28 discriminator 1 view .LVU2512
 8164 053c FFF7FEFF 		bl	shift_down
 8165              	.LVL686:
3455:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8166              		.loc 1 3455 25 discriminator 1 view .LVU2513
 8167 0540 0028     		cmp	r0, #0
 8168 0542 3FF401AE 		beq	.L776
3457:src/keys.c    ****       }
 8169              		.loc 1 3457 2 is_stmt 1 view .LVU2514
3457:src/keys.c    ****       }
 8170              		.loc 1 3457 16 is_stmt 0 view .LVU2515
 8171 0546 354B     		ldr	r3, .L1405
 8172 0548 0022     		movs	r2, #0
 8173 054a 1A74     		strb	r2, [r3, #16]
 8174 054c FCE5     		b	.L776
 8175              	.L1321:
3457:src/keys.c    ****       }
 8176              		.loc 1 3457 16 view .LVU2516
 8177 054e 364E     		ldr	r6, .L1405+12
 8178 0550 A7E5     		b	.L794
 8179              	.L779:
3445:src/keys.c    **** 	  /*
 8180              		.loc 1 3445 10 is_stmt 1 view .LVU2517
ARM GAS  /tmp/ccc9ZrJ3.s 			page 249


3445:src/keys.c    **** 	  /*
 8181              		.loc 1 3445 14 is_stmt 0 view .LVU2518
 8182 0552 FFF7FEFF 		bl	keyticks
 8183              	.LVL687:
3445:src/keys.c    **** 	  /*
 8184              		.loc 1 3445 13 view .LVU2519
 8185 0556 0C28     		cmp	r0, #12
 8186 0558 7FF7F1AD 		ble	.L778
3449:src/keys.c    **** 	  message("NULL", CNULL);
 8187              		.loc 1 3449 4 is_stmt 1 view .LVU2520
3450:src/keys.c    **** 	  // Force display update on key-up
 8188              		.loc 1 3450 4 is_stmt 0 view .LVU2521
 8189 055c 3C48     		ldr	r0, .L1405+52
3449:src/keys.c    **** 	  message("NULL", CNULL);
 8190              		.loc 1 3449 11 view .LVU2522
 8191 055e 2E60     		str	r6, [r5]
3450:src/keys.c    **** 	  // Force display update on key-up
 8192              		.loc 1 3450 4 is_stmt 1 view .LVU2523
 8193 0560 3146     		mov	r1, r6
 8194 0562 FFF7FEFF 		bl	message
 8195              	.LVL688:
3452:src/keys.c    **** 	}
 8196              		.loc 1 3452 4 view .LVU2524
3452:src/keys.c    **** 	}
 8197              		.loc 1 3452 21 is_stmt 0 view .LVU2525
 8198 0566 2D4B     		ldr	r3, .L1405
 8199 0568 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8200 056a 66F34512 		bfi	r2, r6, #5, #1
 8201 056e DA75     		strb	r2, [r3, #23]
 8202 0570 E5E5     		b	.L778
 8203              	.L1096:
3628:src/keys.c    **** 	NonProgrammable = 0;
 8204              		.loc 1 3628 11 view .LVU2526
 8205 0572 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8206 0576 304A     		ldr	r2, .L1405+28
3628:src/keys.c    **** 	NonProgrammable = 0;
 8207              		.loc 1 3628 10 view .LVU2527
 8208 0578 5D06     		lsls	r5, r3, #25
 8209 057a 2046     		mov	r0, r4
 8210              	.LVL689:
3628:src/keys.c    **** 	NonProgrammable = 0;
 8211              		.loc 1 3628 7 is_stmt 1 view .LVU2528
3628:src/keys.c    **** 	NonProgrammable = 0;
 8212              		.loc 1 3628 10 is_stmt 0 view .LVU2529
 8213 057c 41F1DA83 		bpl	.L1294
 8214              	.L1107:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8215              		.loc 1 3629 2 is_stmt 1 view .LVU2530
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8216              		.loc 1 3629 18 is_stmt 0 view .LVU2531
 8217 0580 0023     		movs	r3, #0
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8218              		.loc 1 3630 5 view .LVU2532
 8219 0582 142C     		cmp	r4, #20
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8220              		.loc 1 3629 18 view .LVU2533
 8221 0584 1360     		str	r3, [r2]
ARM GAS  /tmp/ccc9ZrJ3.s 			page 250


3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8222              		.loc 1 3630 2 is_stmt 1 view .LVU2534
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8223              		.loc 1 3630 5 is_stmt 0 view .LVU2535
 8224 0586 2FD8     		bhi	.L1105
3631:src/keys.c    **** 	    // Data entry key
 8225              		.loc 1 3631 4 is_stmt 1 view .LVU2536
3631:src/keys.c    **** 	    // Data entry key
 8226              		.loc 1 3631 7 is_stmt 0 view .LVU2537
 8227 0588 24B9     		cbnz	r4, .L1110
3631:src/keys.c    **** 	    // Data entry key
 8228              		.loc 1 3631 38 discriminator 1 view .LVU2538
 8229 058a FFF7FEFF 		bl	is_bad_cmdline
 8230              	.LVL690:
3631:src/keys.c    **** 	    // Data entry key
 8231              		.loc 1 3631 34 discriminator 1 view .LVU2539
 8232 058e 0028     		cmp	r0, #0
 8233 0590 7FF452AF 		bne	.L1308
 8234              	.L1110:
3634:src/keys.c    **** #endif
 8235              		.loc 1 3634 6 is_stmt 1 view .LVU2540
3636:src/keys.c    **** 	    xeq(c);
 8236              		.loc 1 3636 37 is_stmt 0 view .LVU2541
 8237 0594 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3634:src/keys.c    **** #endif
 8238              		.loc 1 3634 19 view .LVU2542
 8239 0598 0123     		movs	r3, #1
3637:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8240              		.loc 1 3637 6 view .LVU2543
 8241 059a 2046     		mov	r0, r4
3634:src/keys.c    **** #endif
 8242              		.loc 1 3634 19 view .LVU2544
 8243 059c C9F80030 		str	r3, [r9]
3636:src/keys.c    **** 	    xeq(c);
 8244              		.loc 1 3636 6 is_stmt 1 view .LVU2545
3636:src/keys.c    **** 	    xeq(c);
 8245              		.loc 1 3636 37 is_stmt 0 view .LVU2546
 8246 05a0 B5FA85F5 		clz	r5, r5
3637:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8247              		.loc 1 3637 6 view .LVU2547
 8248 05a4 FFF7FEFF 		bl	xeq
 8249              	.LVL691:
3638:src/keys.c    **** 	  }
 8250              		.loc 1 3638 38 view .LVU2548
 8251 05a8 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8252 05ac 3368     		ldr	r3, [r6]
3636:src/keys.c    **** 	    xeq(c);
 8253              		.loc 1 3636 37 view .LVU2549
 8254 05ae 6D09     		lsrs	r5, r5, #5
 8255              	.LVL692:
3637:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8256              		.loc 1 3637 6 is_stmt 1 view .LVU2550
3638:src/keys.c    **** 	  }
 8257              		.loc 1 3638 6 view .LVU2551
3638:src/keys.c    **** 	  }
 8258              		.loc 1 3638 20 is_stmt 0 view .LVU2552
 8259 05b0 0028     		cmp	r0, #0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 251


 8260 05b2 08BF     		it	eq
 8261 05b4 0125     		moveq	r5, #1
 8262              	.LVL693:
3638:src/keys.c    **** 	  }
 8263              		.loc 1 3638 20 view .LVU2553
 8264 05b6 7EE5     		b	.L801
 8265              	.LVL694:
 8266              	.L1101:
 8267              	.LBB1409:
3607:src/keys.c    **** 	if (p > Alpha)
 8268              		.loc 1 3607 2 is_stmt 1 view .LVU2554
3607:src/keys.c    **** 	if (p > Alpha)
 8269              		.loc 1 3607 22 is_stmt 0 view .LVU2555
 8270 05b8 204C     		ldr	r4, .L1405+32
 8271 05ba 2068     		ldr	r0, [r4]
3607:src/keys.c    **** 	if (p > Alpha)
 8272              		.loc 1 3607 12 view .LVU2556
 8273 05bc 0021     		movs	r1, #0
 8274 05be 00F5F660 		add	r0, r0, #1968
 8275 05c2 FFF7FEFF 		bl	find_char
 8276              	.LVL695:
3608:src/keys.c    **** 	  *--p = '\0';
 8277              		.loc 1 3608 8 view .LVU2557
 8278 05c6 2368     		ldr	r3, [r4]
 8279              	.LVL696:
3608:src/keys.c    **** 	  *--p = '\0';
 8280              		.loc 1 3608 2 is_stmt 1 view .LVU2558
3608:src/keys.c    **** 	  *--p = '\0';
 8281              		.loc 1 3608 8 is_stmt 0 view .LVU2559
 8282 05c8 03F5F663 		add	r3, r3, #1968
3608:src/keys.c    **** 	  *--p = '\0';
 8283              		.loc 1 3608 5 view .LVU2560
 8284 05cc 9842     		cmp	r0, r3
 8285 05ce 00F2DD80 		bhi	.L1102
 8286 05d2 3368     		ldr	r3, [r6]
 8287              	.LBE1409:
3402:src/keys.c    ****   //print_debug(60,c);
 8288              		.loc 1 3402 7 view .LVU2561
 8289 05d4 0025     		movs	r5, #0
 8290              	.LBB1410:
3608:src/keys.c    **** 	  *--p = '\0';
 8291              		.loc 1 3608 5 view .LVU2562
 8292 05d6 3024     		movs	r4, #48
 8293 05d8 6DE5     		b	.L801
 8294              	.LVL697:
 8295              	.L1351:
3608:src/keys.c    **** 	  *--p = '\0';
 8296              		.loc 1 3608 5 view .LVU2563
 8297              	.LBE1410:
3628:src/keys.c    **** 	NonProgrammable = 0;
 8298              		.loc 1 3628 7 is_stmt 1 view .LVU2564
3628:src/keys.c    **** 	NonProgrammable = 0;
 8299              		.loc 1 3628 11 is_stmt 0 view .LVU2565
 8300 05da 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 8301              		.loc 1 3628 10 view .LVU2566
 8302 05de 5B06     		lsls	r3, r3, #25
ARM GAS  /tmp/ccc9ZrJ3.s 			page 252


 8303 05e0 7FF523AF 		bpl	.L1119
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8304              		.loc 1 3629 2 is_stmt 1 view .LVU2567
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8305              		.loc 1 3629 18 is_stmt 0 view .LVU2568
 8306 05e4 144B     		ldr	r3, .L1405+28
 8307 05e6 1D60     		str	r5, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8308              		.loc 1 3630 2 is_stmt 1 view .LVU2569
 8309              	.LVL698:
 8310              	.L1105:
3644:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8311              		.loc 1 3644 4 view .LVU2570
3644:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8312              		.loc 1 3644 11 is_stmt 0 view .LVU2571
 8313 05e8 114A     		ldr	r2, .L1405+20
3645:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8314              		.loc 1 3645 25 view .LVU2572
 8315 05ea 174B     		ldr	r3, .L1405+44
3644:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8316              		.loc 1 3644 11 view .LVU2573
 8317 05ec 1060     		str	r0, [r2]
3645:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8318              		.loc 1 3645 4 is_stmt 1 view .LVU2574
3645:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8319              		.loc 1 3645 25 is_stmt 0 view .LVU2575
 8320 05ee 0122     		movs	r2, #1
 8321 05f0 0C4E     		ldr	r6, .L1405+8
 8322 05f2 1A60     		str	r2, [r3]
3646:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8323              		.loc 1 3646 4 is_stmt 1 view .LVU2576
 8324 05f4 FFF7FEFF 		bl	finish_RPN
 8325              	.LVL699:
3647:src/keys.c    **** 	}
 8326              		.loc 1 3647 4 view .LVU2577
 8327 05f8 81E5     		b	.L1111
 8328              	.L1350:
3605:src/keys.c    ****       else if (State2.alphas) {
 8329              		.loc 1 3605 2 view .LVU2578
 8330 05fa FFF7FEFF 		bl	delprog
 8331              	.LVL700:
 8332 05fe 3024     		movs	r4, #48
 8333 0600 3368     		ldr	r3, [r6]
 8334 0602 58E5     		b	.L801
 8335              	.LVL701:
 8336              	.L780:
3439:src/keys.c    **** 	    DispMsg = TraceBuffer;
 8337              		.loc 1 3439 6 view .LVU2579
 8338 0604 134E     		ldr	r6, .L1405+56
 8339 0606 3146     		mov	r1, r6
 8340 0608 FFF7FEFF 		bl	prt
 8341              	.LVL702:
 8342 060c 2A46     		mov	r2, r5
 8343 060e 0146     		mov	r1, r0
 8344 0610 3046     		mov	r0, r6
 8345 0612 FFF7FEFF 		bl	scopy_char
 8346              	.LVL703:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 253


3440:src/keys.c    **** 	  }
 8347              		.loc 1 3440 6 view .LVU2580
3440:src/keys.c    **** 	  }
 8348              		.loc 1 3440 14 is_stmt 0 view .LVU2581
 8349 0616 0A4B     		ldr	r3, .L1405+36
 8350 0618 1E60     		str	r6, [r3]
 8351 061a 8BE5     		b	.L781
 8352              	.L1406:
 8353              		.align	2
 8354              	.L1405:
 8355 061c 00000000 		.word	StateWhileOn
 8356 0620 00000000 		.word	GoFast
 8357 0624 00000000 		.word	JustDisplayed
 8358 0628 00000000 		.word	Running
 8359 062c 00000000 		.word	ShowRPN
 8360 0630 00000000 		.word	OpCode
 8361 0634 00000000 		.word	nd_opcode
 8362 0638 00000000 		.word	NonProgrammable
 8363 063c 00000000 		.word	main_ram
 8364 0640 00000000 		.word	DispMsg
 8365 0644 0C000000 		.word	.LC2
 8366 0648 00000000 		.word	OpCodeDisplayPending
 8367 064c 00000000 		.word	WasDataEntry
 8368 0650 04000000 		.word	.LC1
 8369 0654 00000000 		.word	TraceBuffer
 8370              	.L803:
3544:src/keys.c    **** 	}
 8371              		.loc 1 3544 4 is_stmt 1 view .LVU2582
 8372              		.loc 1 3670 1 is_stmt 0 view .LVU2583
 8373 0658 03B0     		add	sp, sp, #12
 8374              		.cfi_remember_state
 8375              		.cfi_def_cfa_offset 36
 8376              		@ sp needed
 8377 065a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8378              		.cfi_restore 14
 8379              		.cfi_restore 11
 8380              		.cfi_restore 10
 8381              		.cfi_restore 9
 8382              		.cfi_restore 8
 8383              		.cfi_restore 7
 8384              		.cfi_restore 6
 8385              		.cfi_restore 5
 8386              		.cfi_restore 4
 8387              		.cfi_def_cfa_offset 0
 8388              	.LVL704:
3544:src/keys.c    **** 	}
 8389              		.loc 1 3544 4 view .LVU2584
 8390 065e FFF7FEBF 		b	finish_RPN
 8391              	.LVL705:
 8392              	.L1348:
 8393              		.cfi_restore_state
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8394              		.loc 1 3629 2 is_stmt 1 view .LVU2585
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8395              		.loc 1 3629 18 is_stmt 0 view .LVU2586
 8396 0662 BF4B     		ldr	r3, .L1407
 8397 0664 0022     		movs	r2, #0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 254


 8398 0666 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8399              		.loc 1 3630 2 is_stmt 1 view .LVU2587
 8400 0668 BEE7     		b	.L1105
 8401              	.LVL706:
 8402              	.L1327:
 8403              	.LBB1411:
 8404              	.LBB1341:
3272:src/keys.c    **** 
 8405              		.loc 1 3272 3 view .LVU2588
 8406              	.LBB982:
 8407              	.LBI982:
2874:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8408              		.loc 1 2874 12 view .LVU2589
 8409              	.LBB983:
2876:src/keys.c    **** #ifdef DM42
 8410              		.loc 1 2876 2 view .LVU2590
 8411 066a E4B2     		uxtb	r4, r4
 8412              	.LVL707:
2876:src/keys.c    **** #ifdef DM42
 8413              		.loc 1 2876 2 is_stmt 0 view .LVU2591
 8414 066c A4F10E03 		sub	r3, r4, #14
 8415 0670 192B     		cmp	r3, #25
 8416 0672 3AD8     		bhi	.L1312
 8417 0674 DFE803F0 		tbb	[pc, r3]
 8418              	.L827:
 8419 0678 3E       		.byte	(.L828-.L827)/2
 8420 0679 39       		.byte	(.L1312-.L827)/2
 8421 067a 3E       		.byte	(.L828-.L827)/2
 8422 067b 39       		.byte	(.L1312-.L827)/2
 8423 067c 39       		.byte	(.L1312-.L827)/2
 8424 067d 39       		.byte	(.L1312-.L827)/2
 8425 067e 39       		.byte	(.L1312-.L827)/2
 8426 067f 39       		.byte	(.L1312-.L827)/2
 8427 0680 39       		.byte	(.L1312-.L827)/2
 8428 0681 39       		.byte	(.L1312-.L827)/2
 8429 0682 39       		.byte	(.L1312-.L827)/2
 8430 0683 39       		.byte	(.L1312-.L827)/2
 8431 0684 39       		.byte	(.L1312-.L827)/2
 8432 0685 39       		.byte	(.L1312-.L827)/2
 8433 0686 39       		.byte	(.L1312-.L827)/2
 8434 0687 39       		.byte	(.L1312-.L827)/2
 8435 0688 39       		.byte	(.L1312-.L827)/2
 8436 0689 39       		.byte	(.L1312-.L827)/2
 8437 068a 4A       		.byte	(.L826-.L827)/2
 8438 068b 39       		.byte	(.L1312-.L827)/2
 8439 068c 39       		.byte	(.L1312-.L827)/2
 8440 068d 39       		.byte	(.L1312-.L827)/2
 8441 068e 39       		.byte	(.L1312-.L827)/2
 8442 068f 39       		.byte	(.L1312-.L827)/2
 8443 0690 39       		.byte	(.L1312-.L827)/2
 8444 0691 4A       		.byte	(.L826-.L827)/2
 8445              	.LVL708:
 8446              		.p2align 1
 8447              	.L1337:
2876:src/keys.c    **** #ifdef DM42
 8448              		.loc 1 2876 2 view .LVU2592
ARM GAS  /tmp/ccc9ZrJ3.s 			page 255


 8449              	.LBE983:
 8450              	.LBE982:
 8451              	.LBB986:
 8452              	.LBB809:
 277:src/keys.c    **** 			switch (c) {
 8453              		.loc 1 277 3 is_stmt 1 view .LVU2593
 277:src/keys.c    **** 			switch (c) {
 8454              		.loc 1 277 6 is_stmt 0 view .LVU2594
 8455 0692 BBF1030F 		cmp	fp, #3
 8456 0696 00F01282 		beq	.L1352
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8457              		.loc 1 294 3 is_stmt 1 view .LVU2595
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8458              		.loc 1 294 6 is_stmt 0 view .LVU2596
 8459 069a BBF1020F 		cmp	fp, #2
 8460 069e 00F0A485 		beq	.L1353
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8461              		.loc 1 296 3 is_stmt 1 view .LVU2597
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8462              		.loc 1 296 6 is_stmt 0 view .LVU2598
 8463 06a2 BBF1010F 		cmp	fp, #1
 8464 06a6 7FF4EAAD 		bne	.L927
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8465              		.loc 1 296 27 view .LVU2599
 8466 06aa 0C2C     		cmp	r4, #12
 8467 06ac 7FF4E7AD 		bne	.L927
 297:src/keys.c    **** 				SET_REAL;
 8468              		.loc 1 297 4 is_stmt 1 view .LVU2600
 297:src/keys.c    **** 				SET_REAL;
 8469              		.loc 1 297 7 is_stmt 0 view .LVU2601
 8470 06b0 11F0060F 		tst	r1, #6
 8471 06b4 01F04D80 		beq	.L1354
 301:src/keys.c    **** 				CmdLineLength = 0;
 8472              		.loc 1 301 9 is_stmt 1 view .LVU2602
 301:src/keys.c    **** 				CmdLineLength = 0;
 8473              		.loc 1 301 12 is_stmt 0 view .LVU2603
 8474 06b8 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 8475 06bc 002B     		cmp	r3, #0
 8476 06be 01F04580 		beq	.L1142
 302:src/keys.c    **** 				CmdLineEex = 0;
 8477              		.loc 1 302 5 is_stmt 1 view .LVU2604
 303:src/keys.c    **** 				CmdLineDot = 0;
 8478              		.loc 1 303 5 view .LVU2605
 304:src/keys.c    **** 			}
 8479              		.loc 1 304 5 view .LVU2606
 302:src/keys.c    **** 				CmdLineEex = 0;
 8480              		.loc 1 302 19 is_stmt 0 view .LVU2607
 8481 06c2 0023     		movs	r3, #0
 8482 06c4 A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 8483              		.loc 1 304 16 view .LVU2608
 8484 06c8 88F81E30 		strb	r3, [r8, #30]
 8485              	.LVL709:
 304:src/keys.c    **** 			}
 8486              		.loc 1 304 16 view .LVU2609
 8487              	.LBE809:
 8488              	.LBE986:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 256


3318:src/keys.c    **** 		if (is_bad_cmdline())
 8489              		.loc 1 3318 2 is_stmt 1 view .LVU2610
 8490              	.LBB987:
 8491              	.LBB810:
 306:src/keys.c    **** 		}
 8492              		.loc 1 306 11 is_stmt 0 view .LVU2611
 8493 06cc 1023     		movs	r3, #16
 8494              	.LVL710:
 8495              	.L910:
 306:src/keys.c    **** 		}
 8496              		.loc 1 306 11 view .LVU2612
 8497              	.LBE810:
 8498              	.LBE987:
3319:src/keys.c    **** 			return STATE_UNFINISHED;
 8499              		.loc 1 3319 3 is_stmt 1 view .LVU2613
 8500 06ce 0093     		str	r3, [sp]
3319:src/keys.c    **** 			return STATE_UNFINISHED;
 8501              		.loc 1 3319 7 is_stmt 0 view .LVU2614
 8502 06d0 FFF7FEFF 		bl	is_bad_cmdline
 8503              	.LVL711:
3319:src/keys.c    **** 			return STATE_UNFINISHED;
 8504              		.loc 1 3319 6 view .LVU2615
 8505 06d4 009B     		ldr	r3, [sp]
 8506 06d6 0446     		mov	r4, r0
 8507 06d8 38B9     		cbnz	r0, .L1312
 8508 06da 0093     		str	r3, [sp]
3321:src/keys.c    **** 		init_cat( cat );
 8509              		.loc 1 3321 3 is_stmt 1 view .LVU2616
 8510 06dc FFF7FEFF 		bl	init_cat
 8511              	.LVL712:
3322:src/keys.c    **** 		return STATE_UNFINISHED;
 8512              		.loc 1 3322 3 view .LVU2617
 8513 06e0 009B     		ldr	r3, [sp]
 8514 06e2 1846     		mov	r0, r3
 8515 06e4 FFF7FEFF 		bl	init_cat
 8516              	.LVL713:
3323:src/keys.c    **** 	}
 8517              		.loc 1 3323 3 view .LVU2618
 8518              	.LBE1341:
 8519              	.LBE1411:
3402:src/keys.c    ****   //print_debug(60,c);
 8520              		.loc 1 3402 7 is_stmt 0 view .LVU2619
 8521 06e8 2546     		mov	r5, r4
 8522              	.LVL714:
 8523              	.L1312:
3402:src/keys.c    ****   //print_debug(60,c);
 8524              		.loc 1 3402 7 view .LVU2620
 8525 06ea 3368     		ldr	r3, [r6]
 8526              	.LBB1412:
 8527              	.LBB1342:
3323:src/keys.c    **** 	}
 8528              		.loc 1 3323 10 view .LVU2621
 8529 06ec 3324     		movs	r4, #51
 8530 06ee E2E4     		b	.L801
 8531              	.LVL715:
 8532              	.L829:
 8533              	.LBB988:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 257


 8534              	.LBB984:
2885:src/keys.c    **** 	  }
 8535              		.loc 1 2885 26 is_stmt 1 view .LVU2622
 8536 06f0 FFF7FEFF 		bl	clpall
 8537              	.LVL716:
2885:src/keys.c    **** 	  }
 8538              		.loc 1 2885 36 view .LVU2623
 8539              	.L828:
2894:src/keys.c    **** 	  State2.digval = 0;
 8540              		.loc 1 2894 4 view .LVU2624
2894:src/keys.c    **** 	  State2.digval = 0;
 8541              		.loc 1 2894 19 is_stmt 0 view .LVU2625
 8542 06f4 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8543 06f8 3368     		ldr	r3, [r6]
 8544 06fa 6FF30202 		bfc	r2, #0, #3
2895:src/keys.c    **** 	  break;
 8545              		.loc 1 2895 18 view .LVU2626
 8546 06fe 0021     		movs	r1, #0
2894:src/keys.c    **** 	  State2.digval = 0;
 8547              		.loc 1 2894 19 view .LVU2627
 8548 0700 88F81420 		strb	r2, [r8, #20]
2895:src/keys.c    **** 	  break;
 8549              		.loc 1 2895 4 is_stmt 1 view .LVU2628
2895:src/keys.c    **** 	  break;
 8550              		.loc 1 2895 18 is_stmt 0 view .LVU2629
 8551 0704 A8F80810 		strh	r1, [r8, #8]	@ movhi
2896:src/keys.c    **** 	default:			// No state change
 8552              		.loc 1 2896 4 is_stmt 1 view .LVU2630
 8553              	.LBE984:
 8554              	.LBE988:
3272:src/keys.c    **** 
 8555              		.loc 1 3272 10 is_stmt 0 view .LVU2631
 8556 0708 3324     		movs	r4, #51
 8557              	.LVL717:
 8558              	.LBB989:
 8559              	.LBB985:
2896:src/keys.c    **** 	default:			// No state change
 8560              		.loc 1 2896 4 view .LVU2632
 8561 070a D4E4     		b	.L801
 8562              	.LVL718:
 8563              	.L826:
2881:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8564              		.loc 1 2881 4 is_stmt 1 view .LVU2633
2881:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8565              		.loc 1 2881 18 is_stmt 0 view .LVU2634
 8566 070c 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8567 0710 03F00703 		and	r3, r3, #7
 8568 0714 013B     		subs	r3, r3, #1
 8569 0716 032B     		cmp	r3, #3
 8570 0718 ECD8     		bhi	.L828
 8571 071a 01A2     		adr	r2, .L830
 8572 071c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8573              		.p2align 2
 8574              	.L830:
 8575 0720 3D070000 		.word	.L833+1
 8576 0724 37070000 		.word	.L832+1
 8577 0728 31070000 		.word	.L831+1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 258


 8578 072c F1060000 		.word	.L829+1
 8579              		.p2align 1
 8580              	.L831:
2884:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8581              		.loc 1 2884 26 is_stmt 1 view .LVU2635
 8582 0730 FFF7FEFF 		bl	clrprog
 8583              	.LVL719:
2884:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8584              		.loc 1 2884 37 view .LVU2636
2884:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8585              		.loc 1 2884 4 is_stmt 0 view .LVU2637
 8586 0734 DEE7     		b	.L828
 8587              	.L832:
2883:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8588              		.loc 1 2883 25 is_stmt 1 view .LVU2638
 8589 0736 FFF7FEFF 		bl	reset
 8590              	.LVL720:
2883:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8591              		.loc 1 2883 34 view .LVU2639
2883:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8592              		.loc 1 2883 4 is_stmt 0 view .LVU2640
 8593 073a DBE7     		b	.L828
 8594              	.L833:
2882:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8595              		.loc 1 2882 25 is_stmt 1 view .LVU2641
 8596 073c FFF7FEFF 		bl	clrall
 8597              	.LVL721:
2882:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8598              		.loc 1 2882 35 view .LVU2642
2882:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8599              		.loc 1 2882 4 is_stmt 0 view .LVU2643
 8600 0740 D8E7     		b	.L828
 8601              	.LVL722:
 8602              	.L1325:
2882:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8603              		.loc 1 2882 4 view .LVU2644
 8604              	.LBE985:
 8605              	.LBE989:
3239:src/keys.c    **** #else
 8606              		.loc 1 3239 47 view .LVU2645
 8607 0742 DFF83482 		ldr	r8, .L1407+24
 8608 0746 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
3239:src/keys.c    **** #else
 8609              		.loc 1 3239 36 view .LVU2646
 8610 074a 4BEA0302 		orr	r2, fp, r3
 8611 074e 12F0FF0F 		tst	r2, #255
 8612 0752 7FF42AAD 		bne	.L813
3239:src/keys.c    **** #else
 8613              		.loc 1 3239 76 view .LVU2647
 8614 0756 834A     		ldr	r2, .L1407+4
 8615 0758 D8F81430 		ldr	r3, [r8, #20]
 8616 075c 1A42     		tst	r2, r3
 8617 075e 7FF42CAD 		bne	.L823
3245:src/keys.c    **** 	stack_restore();
 8618              		.loc 1 3245 7 is_stmt 1 view .LVU2648
3245:src/keys.c    **** 	stack_restore();
 8619              		.loc 1 3245 11 is_stmt 0 view .LVU2649
ARM GAS  /tmp/ccc9ZrJ3.s 			page 259


 8620 0762 DFF80CA2 		ldr	r10, .L1407+16
 8621 0766 DAF80030 		ldr	r3, [r10]
 8622 076a 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3245:src/keys.c    **** 	stack_restore();
 8623              		.loc 1 3245 10 view .LVU2650
 8624 076e 03F04102 		and	r2, r3, #65
 8625 0772 412A     		cmp	r2, #65
 8626 0774 00F02E86 		beq	.L1355
 8627              	.LVL723:
 8628              	.L815:
3251:src/keys.c    ****       return STATE_UNFINISHED;
 8629              		.loc 1 3251 7 is_stmt 1 view .LVU2651
 8630 0778 FFF7FEFF 		bl	soft_init_state
 8631              	.LVL724:
3252:src/keys.c    ****     }
 8632              		.loc 1 3252 7 view .LVU2652
3252:src/keys.c    ****     }
 8633              		.loc 1 3252 14 is_stmt 0 view .LVU2653
 8634 077c 3324     		movs	r4, #51
 8635 077e 3368     		ldr	r3, [r6]
 8636 0780 99E4     		b	.L801
 8637              	.LVL725:
 8638              	.L1328:
3275:src/keys.c    **** 
 8639              		.loc 1 3275 3 is_stmt 1 view .LVU2654
3275:src/keys.c    **** 
 8640              		.loc 1 3275 10 is_stmt 0 view .LVU2655
 8641 0782 E0B2     		uxtb	r0, r4
 8642 0784 FFF7FEFF 		bl	process_arg
 8643              	.LVL726:
 8644 0788 0446     		mov	r4, r0
 8645              	.LVL727:
3275:src/keys.c    **** 
 8646              		.loc 1 3275 10 view .LVU2656
 8647 078a 29E6     		b	.L835
 8648              	.LVL728:
 8649              	.L1102:
3275:src/keys.c    **** 
 8650              		.loc 1 3275 10 view .LVU2657
 8651              	.LBE1342:
 8652              	.LBE1412:
 8653              	.LBB1413:
3609:src/keys.c    ****       }
 8654              		.loc 1 3609 4 is_stmt 1 view .LVU2658
3609:src/keys.c    ****       }
 8655              		.loc 1 3609 9 is_stmt 0 view .LVU2659
 8656 078c 0025     		movs	r5, #0
 8657 078e 00F8015C 		strb	r5, [r0, #-1]
 8658 0792 8FE6     		b	.L1309
 8659              	.LVL729:
 8660              	.L1331:
3609:src/keys.c    ****       }
 8661              		.loc 1 3609 9 view .LVU2660
 8662              	.LBE1413:
 8663              	.LBB1414:
 8664              	.LBB1343:
3284:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 260


 8665              		.loc 1 3284 3 is_stmt 1 view .LVU2661
 8666              	.LBB990:
 8667              	.LBI990:
2340:src/keys.c    **** 	int r = State2.test;
 8668              		.loc 1 2340 12 view .LVU2662
 8669              	.LBB991:
2341:src/keys.c    **** 	int cmpx = State2.cmplx;
 8670              		.loc 1 2341 2 view .LVU2663
2342:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8671              		.loc 1 2342 2 view .LVU2664
 8672              	.LBB992:
 8673              	.LBB993:
 8674              	.LBB994:
 8675              	.LBB995:
 143:src/keys.c    **** }
 8676              		.loc 1 143 23 is_stmt 0 view .LVU2665
 8677 0794 DFF8D0C1 		ldr	ip, .L1407+8
 8678              	.LBE995:
 8679              	.LBE994:
 234:src/keys.c    **** }
 8680              		.loc 1 234 28 view .LVU2666
 8681 0798 DFF8D0E1 		ldr	lr, .L1407+12
 8682              	.LBB999:
 8683              	.LBB996:
 143:src/keys.c    **** }
 8684              		.loc 1 143 23 view .LVU2667
 8685 079c E4B2     		uxtb	r4, r4
 8686              	.LVL730:
 143:src/keys.c    **** }
 8687              		.loc 1 143 23 view .LVU2668
 8688              	.LBE996:
 8689              	.LBE999:
 8690              	.LBE993:
 8691              	.LBE992:
2344:src/keys.c    **** 
 8692              		.loc 1 2344 44 view .LVU2669
 8693 079e 12F0020F 		tst	r2, #2
 8694              	.LBB1004:
 8695              	.LBB1002:
 8696              	.LBB1000:
 8697              	.LBB997:
 143:src/keys.c    **** }
 8698              		.loc 1 143 23 view .LVU2670
 8699 07a2 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 8700              	.LBE997:
 8701              	.LBE1000:
 234:src/keys.c    **** }
 8702              		.loc 1 234 28 view .LVU2671
 8703 07a6 1EF80CE0 		ldrb	lr, [lr, ip]	@ zero_extendqisi2
 8704              	.LBE1002:
 8705              	.LBE1004:
2342:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8706              		.loc 1 2342 19 view .LVU2672
 8707 07aa C2F3400B 		ubfx	fp, r2, #1, #1
 8708              	.LVL731:
2343:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8709              		.loc 1 2343 2 is_stmt 1 view .LVU2673
ARM GAS  /tmp/ccc9ZrJ3.s 			page 261


 8710              	.LBB1005:
 8711              	.LBI992:
 210:src/keys.c    **** {
 8712              		.loc 1 210 14 view .LVU2674
 8713              	.LBB1003:
 212:src/keys.c    ****     // K00 - K05
 8714              		.loc 1 212 3 view .LVU2675
 234:src/keys.c    **** }
 8715              		.loc 1 234 3 view .LVU2676
 8716              	.LBB1001:
 8717              	.LBI994:
 131:src/keys.c    **** {
 8718              		.loc 1 131 12 view .LVU2677
 8719              	.LBB998:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8720              		.loc 1 133 2 view .LVU2678
 143:src/keys.c    **** }
 8721              		.loc 1 143 2 view .LVU2679
 143:src/keys.c    **** }
 8722              		.loc 1 143 2 is_stmt 0 view .LVU2680
 8723              	.LBE998:
 8724              	.LBE1001:
 8725              	.LBE1003:
 8726              	.LBE1005:
2343:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8727              		.loc 1 2343 15 view .LVU2681
 8728 07ae 2EF0800C 		bic	ip, lr, #128
 8729              	.LVL732:
2344:src/keys.c    **** 
 8730              		.loc 1 2344 2 is_stmt 1 view .LVU2682
2344:src/keys.c    **** 
 8731              		.loc 1 2344 44 is_stmt 0 view .LVU2683
 8732 07b2 00F0C380 		beq	.L1356
 8733              	.LVL733:
2346:src/keys.c    **** 	State2.cmplx = 0;
 8734              		.loc 1 2346 2 is_stmt 1 view .LVU2684
2347:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8735              		.loc 1 2347 15 is_stmt 0 view .LVU2685
 8736 07b6 60F34102 		bfi	r2, r0, #1, #1
2348:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8737              		.loc 1 2348 5 view .LVU2686
 8738 07ba BCF1640F 		cmp	ip, #100
2346:src/keys.c    **** 	State2.cmplx = 0;
 8739              		.loc 1 2346 14 view .LVU2687
 8740 07be 4FF00700 		mov	r0, #7
2347:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8741              		.loc 1 2347 15 view .LVU2688
 8742 07c2 88F81520 		strb	r2, [r8, #21]
2346:src/keys.c    **** 	State2.cmplx = 0;
 8743              		.loc 1 2346 14 view .LVU2689
 8744 07c6 88F80F00 		strb	r0, [r8, #15]
2347:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8745              		.loc 1 2347 2 is_stmt 1 view .LVU2690
2348:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8746              		.loc 1 2348 2 view .LVU2691
2348:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8747              		.loc 1 2348 5 is_stmt 0 view .LVU2692
ARM GAS  /tmp/ccc9ZrJ3.s 			page 262


 8748 07ca 00F02385 		beq	.L1168
2344:src/keys.c    **** 
 8749              		.loc 1 2344 44 view .LVU2693
 8750 07ce 4FF0340A 		mov	r10, #52
 8751              	.LVL734:
 8752              	.L1127:
2349:src/keys.c    **** 		// Lettered register
 8753              		.loc 1 2349 5 view .LVU2694
 8754 07d2 BCF17F0F 		cmp	ip, #127
2344:src/keys.c    **** 
 8755              		.loc 1 2344 60 view .LVU2695
 8756 07d6 9A44     		add	r10, r10, r3
2349:src/keys.c    **** 		// Lettered register
 8757              		.loc 1 2349 2 is_stmt 1 view .LVU2696
2349:src/keys.c    **** 		// Lettered register
 8758              		.loc 1 2349 5 is_stmt 0 view .LVU2697
 8759 07d8 00F04381 		beq	.L867
 8760              	.LVL735:
2349:src/keys.c    **** 		// Lettered register
 8761              		.loc 1 2349 18 view .LVU2698
 8762 07dc BCF1630F 		cmp	ip, #99
 8763 07e0 40F26281 		bls	.L868
2349:src/keys.c    **** 		// Lettered register
 8764              		.loc 1 2349 37 view .LVU2699
 8765 07e4 BCF16F0F 		cmp	ip, #111
 8766 07e8 00F23B81 		bhi	.L867
2351:src/keys.c    **** 			if (n == regI_idx)
 8767              		.loc 1 2351 3 is_stmt 1 view .LVU2700
2351:src/keys.c    **** 			if (n == regI_idx)
 8768              		.loc 1 2351 6 is_stmt 0 view .LVU2701
 8769 07ec BBF1000F 		cmp	fp, #0
 8770 07f0 00F0A282 		beq	.L869
2351:src/keys.c    **** 			if (n == regI_idx)
 8771              		.loc 1 2351 12 view .LVU2702
 8772 07f4 1EF0010F 		tst	lr, #1
 8773 07f8 00F09E82 		beq	.L869
2352:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8774              		.loc 1 2352 4 is_stmt 1 view .LVU2703
2352:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8775              		.loc 1 2352 7 is_stmt 0 view .LVU2704
 8776 07fc BCF16D0F 		cmp	ip, #109
 8777 0800 40F03E81 		bne	.L870
2353:src/keys.c    **** 			// Disallow odd complex registers > A
 8778              		.loc 1 2353 5 is_stmt 1 view .LVU2705
2353:src/keys.c    **** 			// Disallow odd complex registers > A
 8779              		.loc 1 2353 30 is_stmt 0 view .LVU2706
 8780 0804 03F12904 		add	r4, r3, #41
 8781              	.LVL736:
2353:src/keys.c    **** 			// Disallow odd complex registers > A
 8782              		.loc 1 2353 30 view .LVU2707
 8783 0808 EAE5     		b	.L835
 8784              	.LVL737:
 8785              	.L1329:
2353:src/keys.c    **** 			// Disallow odd complex registers > A
 8786              		.loc 1 2353 30 view .LVU2708
 8787              	.LBE991:
 8788              	.LBE990:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 263


3278:src/keys.c    **** 
 8789              		.loc 1 3278 3 is_stmt 1 view .LVU2709
 8790              	.LBB1020:
 8791              	.LBI1020:
1702:src/keys.c    **** 	int pc = -1;
 8792              		.loc 1 1702 12 view .LVU2710
 8793              	.LBB1021:
1703:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 8794              		.loc 1 1703 2 view .LVU2711
1704:src/keys.c    **** 
 8795              		.loc 1 1704 2 view .LVU2712
 8796              	.LBB1022:
 8797              	.LBI1022:
 210:src/keys.c    **** {
 8798              		.loc 1 210 14 view .LVU2713
 8799              	.LBB1023:
 212:src/keys.c    ****     // K00 - K05
 8800              		.loc 1 212 3 view .LVU2714
 234:src/keys.c    **** }
 8801              		.loc 1 234 3 view .LVU2715
 8802              	.LBB1024:
 8803              	.LBI1024:
 131:src/keys.c    **** {
 8804              		.loc 1 131 12 view .LVU2716
 8805              	.LBB1025:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8806              		.loc 1 133 2 view .LVU2717
 143:src/keys.c    **** }
 8807              		.loc 1 143 2 view .LVU2718
 143:src/keys.c    **** }
 8808              		.loc 1 143 23 is_stmt 0 view .LVU2719
 8809 080a 574B     		ldr	r3, .L1407+8
 8810              	.LBE1025:
 8811              	.LBE1024:
 234:src/keys.c    **** }
 8812              		.loc 1 234 28 view .LVU2720
 8813 080c 574A     		ldr	r2, .L1407+12
 8814 080e E4B2     		uxtb	r4, r4
 8815              	.LVL738:
 8816              	.LBB1027:
 8817              	.LBB1026:
 143:src/keys.c    **** }
 8818              		.loc 1 143 23 view .LVU2721
 8819 0810 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8820              	.LBE1026:
 8821              	.LBE1027:
 234:src/keys.c    **** }
 8822              		.loc 1 234 28 view .LVU2722
 8823 0812 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 8824              	.LVL739:
 234:src/keys.c    **** }
 8825              		.loc 1 234 28 view .LVU2723
 8826              	.LBE1023:
 8827              	.LBE1022:
1706:src/keys.c    **** 		// Digit 0 - 9
 8828              		.loc 1 1706 2 is_stmt 1 view .LVU2724
1706:src/keys.c    **** 		// Digit 0 - 9
ARM GAS  /tmp/ccc9ZrJ3.s 			page 264


 8829              		.loc 1 1706 5 is_stmt 0 view .LVU2725
 8830 0814 0928     		cmp	r0, #9
 8831 0816 40F23F81 		bls	.L1357
1711:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8832              		.loc 1 1711 7 is_stmt 1 view .LVU2726
1711:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8833              		.loc 1 1711 18 is_stmt 0 view .LVU2727
 8834 081a 20F08000 		bic	r0, r0, #128
 8835              	.LVL740:
1711:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8836              		.loc 1 1711 10 view .LVU2728
 8837 081e 6428     		cmp	r0, #100
 8838 0820 00F07C82 		beq	.L1358
1712:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8839              		.loc 1 1712 7 is_stmt 1 view .LVU2729
1712:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8840              		.loc 1 1712 10 is_stmt 0 view .LVU2730
 8841 0824 6528     		cmp	r0, #101
 8842 0826 00F08082 		beq	.L1359
1713:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8843              		.loc 1 1713 7 is_stmt 1 view .LVU2731
1713:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8844              		.loc 1 1713 10 is_stmt 0 view .LVU2732
 8845 082a 6628     		cmp	r0, #102
 8846 082c 00F09E82 		beq	.L1360
1714:src/keys.c    **** #endif
 8847              		.loc 1 1714 7 is_stmt 1 view .LVU2733
1714:src/keys.c    **** #endif
 8848              		.loc 1 1714 10 is_stmt 0 view .LVU2734
 8849 0830 6728     		cmp	r0, #103
 8850 0832 00F09683 		beq	.L1361
1716:src/keys.c    **** 		// A - D
 8851              		.loc 1 1716 7 is_stmt 1 view .LVU2735
1716:src/keys.c    **** 		// A - D
 8852              		.loc 1 1716 10 is_stmt 0 view .LVU2736
 8853 0836 032C     		cmp	r4, #3
 8854 0838 40F2B884 		bls	.L1362
1721:src/keys.c    **** 		// .
 8855              		.loc 1 1721 7 is_stmt 1 view .LVU2737
1721:src/keys.c    **** 		// .
 8856              		.loc 1 1721 10 is_stmt 0 view .LVU2738
 8857 083c 262C     		cmp	r4, #38
 8858 083e 00F0F984 		beq	.L1363
1726:src/keys.c    **** 		// ENTER - short circuit processing
 8859              		.loc 1 1726 7 is_stmt 1 view .LVU2739
1726:src/keys.c    **** 		// ENTER - short circuit processing
 8860              		.loc 1 1726 10 is_stmt 0 view .LVU2740
 8861 0842 0C2C     		cmp	r4, #12
 8862 0844 00F0CA84 		beq	.L1364
1730:src/keys.c    **** 		// backspace
 8863              		.loc 1 1730 7 is_stmt 1 view .LVU2741
1730:src/keys.c    **** 		// backspace
 8864              		.loc 1 1730 10 is_stmt 0 view .LVU2742
 8865 0848 102C     		cmp	r4, #16
 8866 084a 00F0AB85 		beq	.L1365
1739:src/keys.c    **** 		// up
 8867              		.loc 1 1739 7 is_stmt 1 view .LVU2743
ARM GAS  /tmp/ccc9ZrJ3.s 			page 265


1739:src/keys.c    **** 		// up
 8868              		.loc 1 1739 10 is_stmt 0 view .LVU2744
 8869 084e 122C     		cmp	r4, #18
 8870 0850 00F03487 		beq	.L1366
1749:src/keys.c    **** 		// down
 8871              		.loc 1 1749 7 is_stmt 1 view .LVU2745
1749:src/keys.c    **** 		// down
 8872              		.loc 1 1749 10 is_stmt 0 view .LVU2746
 8873 0854 182C     		cmp	r4, #24
 8874 0856 7FF448AF 		bne	.L1312
1751:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8875              		.loc 1 1751 3 is_stmt 1 view .LVU2747
1752:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8876              		.loc 1 1752 18 is_stmt 0 view .LVU2748
 8877 085a 454C     		ldr	r4, .L1407+16
 8878              	.LVL741:
1751:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8879              		.loc 1 1751 3 view .LVU2749
 8880 085c 0120     		movs	r0, #1
 8881 085e FFF7FEFF 		bl	update_program_bounds
 8882              	.LVL742:
1752:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8883              		.loc 1 1752 3 is_stmt 1 view .LVU2750
1752:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8884              		.loc 1 1752 18 is_stmt 0 view .LVU2751
 8885 0862 2368     		ldr	r3, [r4]
1752:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8886              		.loc 1 1752 11 view .LVU2752
 8887 0864 0021     		movs	r1, #0
 8888 0866 B3F8EE07 		ldrh	r0, [r3, #2030]
 8889 086a FFF7FEFF 		bl	do_inc
 8890              	.LVL743:
1753:src/keys.c    **** 			rawpc = 1;
 8891              		.loc 1 1753 3 is_stmt 1 view .LVU2753
1753:src/keys.c    **** 			rawpc = 1;
 8892              		.loc 1 1753 6 is_stmt 0 view .LVU2754
 8893 086e 20B9     		cbnz	r0, .L847
1753:src/keys.c    **** 			rawpc = 1;
 8894              		.loc 1 1753 21 view .LVU2755
 8895 0870 2368     		ldr	r3, [r4]
1753:src/keys.c    **** 			rawpc = 1;
 8896              		.loc 1 1753 18 view .LVU2756
 8897 0872 5888     		ldrh	r0, [r3, #2]
 8898              	.LVL744:
1753:src/keys.c    **** 			rawpc = 1;
 8899              		.loc 1 1753 18 view .LVU2757
 8900 0874 0038     		subs	r0, r0, #0
 8901 0876 18BF     		it	ne
 8902 0878 0120     		movne	r0, #1
 8903              	.LVL745:
 8904              	.L847:
1759:src/keys.c    **** fin2:		State2.gtodot = 0;
 8905              		.loc 1 1759 7 is_stmt 1 view .LVU2758
 8906 087a FFF7FEFF 		bl	set_pc
 8907              	.LVL746:
 8908              	.L851:
1760:src/keys.c    **** 		State2.digval = 0;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 266


 8909              		.loc 1 1760 8 view .LVU2759
1760:src/keys.c    **** 		State2.digval = 0;
 8910              		.loc 1 1760 22 is_stmt 0 view .LVU2760
 8911 087e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 8912 0882 3368     		ldr	r3, [r6]
1761:src/keys.c    **** 		State2.numdigit = 0;
 8913              		.loc 1 1761 17 view .LVU2761
 8914 0884 0022     		movs	r2, #0
1760:src/keys.c    **** 		State2.digval = 0;
 8915              		.loc 1 1760 22 view .LVU2762
 8916 0886 6FF30001 		bfc	r1, #0, #1
 8917 088a 88F81510 		strb	r1, [r8, #21]
1761:src/keys.c    **** 		State2.numdigit = 0;
 8918              		.loc 1 1761 3 is_stmt 1 view .LVU2763
1761:src/keys.c    **** 		State2.numdigit = 0;
 8919              		.loc 1 1761 17 is_stmt 0 view .LVU2764
 8920 088e A8F80820 		strh	r2, [r8, #8]	@ movhi
1762:src/keys.c    **** 	}
 8921              		.loc 1 1762 3 is_stmt 1 view .LVU2765
1762:src/keys.c    **** 	}
 8922              		.loc 1 1762 19 is_stmt 0 view .LVU2766
 8923 0892 88F80B20 		strb	r2, [r8, #11]
 8924              	.LBE1021:
 8925              	.LBE1020:
3278:src/keys.c    **** 
 8926              		.loc 1 3278 10 view .LVU2767
 8927 0896 3324     		movs	r4, #51
 8928 0898 0DE4     		b	.L801
 8929              	.LVL747:
 8930              	.L1094:
3278:src/keys.c    **** 
 8931              		.loc 1 3278 10 view .LVU2768
 8932              	.LBE1343:
 8933              	.LBE1414:
 8934              	.LBB1415:
3581:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8935              		.loc 1 3581 4 is_stmt 1 view .LVU2769
 8936              	.LBB1395:
 8937              	.LBI1395:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8938              		.loc 1 552 13 view .LVU2770
 8939              	.LBB1396:
 553:src/keys.c    **** 		return;
 8940              		.loc 1 553 2 view .LVU2771
 553:src/keys.c    **** 		return;
 8941              		.loc 1 553 6 is_stmt 0 view .LVU2772
 8942 089a FFF7FEFF 		bl	is_bad_cmdline
 8943              	.LVL748:
 553:src/keys.c    **** 		return;
 8944              		.loc 1 553 5 view .LVU2773
 8945 089e 0546     		mov	r5, r0
 8946 08a0 0028     		cmp	r0, #0
 8947 08a2 40F0D580 		bne	.L1310
 8948 08a6 2046     		mov	r0, r4
 8949 08a8 FFF7FEFF 		bl	init_arg.part.0
 8950              	.LVL749:
 8951              	.LBE1396:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 267


 8952              	.LBE1395:
3582:src/keys.c    **** 	}
 8953              		.loc 1 3582 6 view .LVU2774
 8954 08ac 3324     		movs	r4, #51
 8955              	.LVL750:
3582:src/keys.c    **** 	}
 8956              		.loc 1 3582 6 view .LVU2775
 8957 08ae 3368     		ldr	r3, [r6]
 8958 08b0 01E4     		b	.L801
 8959              	.LVL751:
 8960              	.L1166:
3582:src/keys.c    **** 	}
 8961              		.loc 1 3582 6 view .LVU2776
 8962              	.LBE1415:
 8963              	.LBB1416:
 8964 08b2 1C46     		mov	r4, r3
 8965              	.LVL752:
3582:src/keys.c    **** 	}
 8966              		.loc 1 3582 6 view .LVU2777
 8967 08b4 1DE4     		b	.L1113
 8968              	.LVL753:
 8969              	.L1330:
3582:src/keys.c    **** 	}
 8970              		.loc 1 3582 6 view .LVU2778
 8971              	.LBE1416:
 8972              	.LBB1417:
 8973              	.LBB1344:
3281:src/keys.c    **** 
 8974              		.loc 1 3281 3 is_stmt 1 view .LVU2779
 8975              	.LBB1040:
 8976              	.LBB1041:
1583:src/keys.c    **** 	State2.dot = 0;
 8977              		.loc 1 1583 15 is_stmt 0 view .LVU2780
 8978 08b6 22F06203 		bic	r3, r2, #98
 8979              	.LBE1041:
 8980              	.LBE1040:
3281:src/keys.c    **** 
 8981              		.loc 1 3281 10 view .LVU2781
 8982 08ba E4B2     		uxtb	r4, r4
 8983              	.LVL754:
 8984              	.LBB1054:
 8985              	.LBI1040:
1573:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 8986              		.loc 1 1573 12 is_stmt 1 view .LVU2782
 8987              	.LBB1051:
1574:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 8988              		.loc 1 1574 2 view .LVU2783
1579:src/keys.c    **** 	int f = State2.dot;
 8989              		.loc 1 1579 2 view .LVU2784
1583:src/keys.c    **** 	State2.dot = 0;
 8990              		.loc 1 1583 15 is_stmt 0 view .LVU2785
 8991 08bc 88F81530 		strb	r3, [r8, #21]
1579:src/keys.c    **** 	int f = State2.dot;
 8992              		.loc 1 1579 20 view .LVU2786
 8993 08c0 C2F34009 		ubfx	r9, r2, #1, #1
 8994              	.LVL755:
1580:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 268


 8995              		.loc 1 1580 2 is_stmt 1 view .LVU2787
1580:src/keys.c    **** 
 8996              		.loc 1 1580 16 is_stmt 0 view .LVU2788
 8997 08c4 C2F3801B 		ubfx	fp, r2, #6, #1
 8998              	.LVL756:
1582:src/keys.c    **** 	State2.cmplx = 0;
 8999              		.loc 1 1582 2 is_stmt 1 view .LVU2789
1583:src/keys.c    **** 	State2.dot = 0;
 9000              		.loc 1 1583 2 view .LVU2790
1584:src/keys.c    **** #ifdef DM42
 9001              		.loc 1 1584 2 view .LVU2791
1586:src/keys.c    **** #endif
 9002              		.loc 1 1586 2 view .LVU2792
 9003              	.LBB1042:
 9004              	.LBI1042:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9005              		.loc 1 114 13 view .LVU2793
 9006              	.LBE1042:
 9007              	.LBE1051:
 9008              	.LBE1054:
 9009              	.LBE1344:
 9010              	.LBE1417:
 115:src/keys.c    **** }
 9011              		.loc 1 115 2 view .LVU2794
 9012              	.LBB1418:
 9013              	.LBB1345:
 9014              	.LBB1055:
 9015              	.LBB1052:
 9016              	.LBB1049:
 9017              	.LBB1043:
 9018              	.LBI1043:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9019              		.loc 1 104 20 view .LVU2795
 9020              	.LBB1044:
 105:src/keys.c    **** 	State2.shifts = shift;
 9021              		.loc 1 105 2 view .LVU2796
 9022              	.LBB1045:
 9023              	.LBI1045:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9024              		.loc 1 96 13 view .LVU2797
 9025              	.LBB1046:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9026              		.loc 1 97 2 view .LVU2798
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9027              		.loc 1 97 18 is_stmt 0 view .LVU2799
 9028 08c8 FFF7FEFF 		bl	shift_down
 9029              	.LVL757:
  98:src/keys.c    **** }
 9030              		.loc 1 98 2 is_stmt 1 view .LVU2800
 9031              	.LBE1046:
 9032              	.LBE1045:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9033              		.loc 1 106 2 view .LVU2801
 9034              	.LBE1044:
 9035              	.LBE1043:
 9036              	.LBE1049:
1588:src/keys.c    **** 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 269


 9037              		.loc 1 1588 2 is_stmt 0 view .LVU2802
 9038 08cc 292C     		cmp	r4, #41
 9039              	.LBB1050:
 9040              	.LBB1048:
 9041              	.LBB1047:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9042              		.loc 1 106 16 view .LVU2803
 9043 08ce 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 9044              		.loc 1 108 2 is_stmt 1 view .LVU2804
 9045              	.LVL758:
 108:src/keys.c    **** }
 9046              		.loc 1 108 2 is_stmt 0 view .LVU2805
 9047              	.LBE1047:
 9048              	.LBE1048:
 9049              	.LBE1050:
1588:src/keys.c    **** 
 9050              		.loc 1 1588 2 is_stmt 1 view .LVU2806
 9051 08d2 00F06784 		beq	.L856
 9052 08d6 15D8     		bhi	.L857
 9053 08d8 013C     		subs	r4, r4, #1
 9054              	.LVL759:
1588:src/keys.c    **** 
 9055              		.loc 1 1588 2 is_stmt 0 view .LVU2807
 9056 08da E3B2     		uxtb	r3, r4
 9057 08dc 022B     		cmp	r3, #2
 9058 08de 3FF604AF 		bhi	.L1312
1593:src/keys.c    **** 
 9059              		.loc 1 1593 3 is_stmt 1 view .LVU2808
1593:src/keys.c    **** 
 9060              		.loc 1 1593 54 is_stmt 0 view .LVU2809
 9061 08e2 244B     		ldr	r3, .L1407+20
 9062 08e4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 9063 08e8 03EB4404 		add	r4, r3, r4, lsl #1
 9064              	.LVL760:
1593:src/keys.c    **** 
 9065              		.loc 1 1593 27 view .LVU2810
 9066 08ec B9F1000F 		cmp	r9, #0
1593:src/keys.c    **** 
 9067              		.loc 1 1593 54 view .LVU2811
 9068 08f0 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1593:src/keys.c    **** 
 9069              		.loc 1 1593 27 view .LVU2812
 9070 08f4 14BF     		ite	ne
 9071 08f6 4FF4A063 		movne	r3, #1280
 9072 08fa 4FF40073 		moveq	r3, #512
1593:src/keys.c    **** 
 9073              		.loc 1 1593 37 view .LVU2813
 9074 08fe 1C43     		orrs	r4, r4, r3
 9075 0900 2046     		mov	r0, r4
 9076 0902 8FE5     		b	.L862
 9077              	.LVL761:
 9078              	.L857:
1588:src/keys.c    **** 
 9079              		.loc 1 1588 2 view .LVU2814
 9080 0904 2D2C     		cmp	r4, #45
 9081 0906 7FF4F0AE 		bne	.L1312
ARM GAS  /tmp/ccc9ZrJ3.s 			page 270


1596:src/keys.c    **** 		goto stay;
 9082              		.loc 1 1596 3 is_stmt 1 view .LVU2815
 9083 090a 89F00109 		eor	r9, r9, #1
 9084              	.LVL762:
1597:src/keys.c    **** 
 9085              		.loc 1 1597 3 view .LVU2816
 9086              	.L863:
1612:src/keys.c    **** 		State2.cmplx = cmplx;
 9087              		.loc 1 1612 4 view .LVU2817
1613:src/keys.c    **** 		State2.dot = f;
 9088              		.loc 1 1613 3 view .LVU2818
1614:src/keys.c    **** 		break;
 9089              		.loc 1 1614 3 view .LVU2819
1613:src/keys.c    **** 		State2.dot = f;
 9090              		.loc 1 1613 16 is_stmt 0 view .LVU2820
 9091 090e 4FEA4902 		lsl	r2, r9, #1
 9092 0912 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9093 0916 3368     		ldr	r3, [r6]
 9094 0918 42F02002 		orr	r2, r2, #32
 9095 091c 42EA8B12 		orr	r2, r2, fp, lsl #6
 9096 0920 02F06202 		and	r2, r2, #98
 9097 0924 21F06201 		bic	r1, r1, #98
 9098 0928 0A43     		orrs	r2, r2, r1
 9099 092a 88F81520 		strb	r2, [r8, #21]
1615:src/keys.c    **** 
 9100              		.loc 1 1615 3 is_stmt 1 view .LVU2821
1620:src/keys.c    **** }
 9101              		.loc 1 1620 9 is_stmt 0 view .LVU2822
 9102 092e 3324     		movs	r4, #51
 9103              	.LVL763:
1615:src/keys.c    **** 
 9104              		.loc 1 1615 3 view .LVU2823
 9105 0930 FFF7C1BB 		b	.L801
 9106              	.LVL764:
 9107              	.L1326:
1615:src/keys.c    **** 
 9108              		.loc 1 1615 3 view .LVU2824
 9109              	.LBE1052:
 9110              	.LBE1055:
3258:src/keys.c    **** 		return STATE_IGNORE;
 9111              		.loc 1 3258 3 is_stmt 1 view .LVU2825
3258:src/keys.c    **** 		return STATE_IGNORE;
 9112              		.loc 1 3258 15 is_stmt 0 view .LVU2826
 9113 0934 1D60     		str	r5, [r3]
3259:src/keys.c    **** 	}
 9114              		.loc 1 3259 3 is_stmt 1 view .LVU2827
 9115              	.LVL765:
3259:src/keys.c    **** 	}
 9116              		.loc 1 3259 3 is_stmt 0 view .LVU2828
 9117              	.LBE1345:
 9118              	.LBE1418:
3655:src/keys.c    **** #ifndef CONSOLE
 9119              		.loc 1 3655 3 is_stmt 1 view .LVU2829
 9120              	.LBB1419:
 9121              	.LBB1346:
3259:src/keys.c    **** 	}
 9122              		.loc 1 3259 10 is_stmt 0 view .LVU2830
ARM GAS  /tmp/ccc9ZrJ3.s 			page 271


 9123 0936 3224     		movs	r4, #50
 9124 0938 FFF7C0BB 		b	.L821
 9125              	.LVL766:
 9126              	.L1356:
 9127              	.LBB1056:
 9128              	.LBB1010:
2346:src/keys.c    **** 	State2.cmplx = 0;
 9129              		.loc 1 2346 2 is_stmt 1 view .LVU2831
2347:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9130              		.loc 1 2347 15 is_stmt 0 view .LVU2832
 9131 093c 6BF34102 		bfi	r2, fp, #1, #1
2346:src/keys.c    **** 	State2.cmplx = 0;
 9132              		.loc 1 2346 14 view .LVU2833
 9133 0940 0720     		movs	r0, #7
2348:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9134              		.loc 1 2348 5 view .LVU2834
 9135 0942 BCF1640F 		cmp	ip, #100
2347:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9136              		.loc 1 2347 15 view .LVU2835
 9137 0946 88F81520 		strb	r2, [r8, #21]
2346:src/keys.c    **** 	State2.cmplx = 0;
 9138              		.loc 1 2346 14 view .LVU2836
 9139 094a 88F80F00 		strb	r0, [r8, #15]
2347:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9140              		.loc 1 2347 2 is_stmt 1 view .LVU2837
2348:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9141              		.loc 1 2348 2 view .LVU2838
2348:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9142              		.loc 1 2348 5 is_stmt 0 view .LVU2839
 9143 094e 00F04884 		beq	.L1169
2344:src/keys.c    **** 
 9144              		.loc 1 2344 44 view .LVU2840
 9145 0952 4FF02D0A 		mov	r10, #45
 9146 0956 3CE7     		b	.L1127
 9147              	.LVL767:
 9148              	.L1167:
2344:src/keys.c    **** 
 9149              		.loc 1 2344 44 view .LVU2841
 9150              	.LBE1010:
 9151              	.LBE1056:
 9152              	.LBE1346:
 9153              	.LBE1419:
 9154              	.LBB1420:
 9155 0958 2C46     		mov	r4, r5
 9156              	.LVL768:
2344:src/keys.c    **** 
 9157              		.loc 1 2344 44 view .LVU2842
 9158 095a FFF7CABB 		b	.L1113
 9159              	.L1408:
 9160 095e 00BF     		.align	2
 9161              	.L1407:
 9162 0960 00000000 		.word	NonProgrammable
 9163 0964 00040800 		.word	525312
 9164 0968 00000000 		.word	.LANCHOR6
 9165 096c 00000000 		.word	.LANCHOR5
 9166 0970 00000000 		.word	main_ram
 9167 0974 00000000 		.word	.LANCHOR19
ARM GAS  /tmp/ccc9ZrJ3.s 			page 272


 9168 0978 00000000 		.word	StateWhileOn
 9169              	.LVL769:
 9170              	.L1332:
2344:src/keys.c    **** 
 9171              		.loc 1 2344 44 view .LVU2843
 9172              	.LBE1420:
 9173              	.LBB1421:
 9174              	.LBB1347:
3287:src/keys.c    **** 
 9175              		.loc 1 3287 3 is_stmt 1 view .LVU2844
 9176              	.LBB1057:
 9177              	.LBB1058:
2909:src/keys.c    **** 
 9178              		.loc 1 2909 12 is_stmt 0 view .LVU2845
 9179 097c CE4B     		ldr	r3, .L1409
 9180 097e 1B68     		ldr	r3, [r3]
2909:src/keys.c    **** 
 9181              		.loc 1 2909 31 view .LVU2846
 9182 0980 B3F9DE37 		ldrsh	r3, [r3, #2014]
 9183              	.LBE1058:
 9184              	.LBE1057:
3287:src/keys.c    **** 
 9185              		.loc 1 3287 10 view .LVU2847
 9186 0984 E4B2     		uxtb	r4, r4
 9187              	.LVL770:
 9188              	.LBB1077:
 9189              	.LBI1057:
2907:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9190              		.loc 1 2907 12 is_stmt 1 view .LVU2848
 9191              	.LBB1069:
2908:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9192              		.loc 1 2908 2 view .LVU2849
2909:src/keys.c    **** 
 9193              		.loc 1 2909 2 view .LVU2850
2909:src/keys.c    **** 
 9194              		.loc 1 2909 31 is_stmt 0 view .LVU2851
 9195 0986 002B     		cmp	r3, #0
 9196 0988 B4BF     		ite	lt
 9197 098a 0B23     		movlt	r3, #11
 9198 098c 0A23     		movge	r3, #10
 9199              	.LVL771:
2911:src/keys.c    **** 		if (--n < -2)
 9200              		.loc 1 2911 2 is_stmt 1 view .LVU2852
2911:src/keys.c    **** 		if (--n < -2)
 9201              		.loc 1 2911 5 is_stmt 0 view .LVU2853
 9202 098e 122C     		cmp	r4, #18
 9203 0990 00F08D81 		beq	.L1367
2915:src/keys.c    **** 		if (++n > max)
 9204              		.loc 1 2915 7 is_stmt 1 view .LVU2854
2915:src/keys.c    **** 		if (++n > max)
 9205              		.loc 1 2915 10 is_stmt 0 view .LVU2855
 9206 0994 182C     		cmp	r4, #24
 9207 0996 00F0D681 		beq	.L1368
2919:src/keys.c    **** 		State2.status = 0;
 9208              		.loc 1 2919 7 is_stmt 1 view .LVU2856
2919:src/keys.c    **** 		State2.status = 0;
 9209              		.loc 1 2919 10 is_stmt 0 view .LVU2857
ARM GAS  /tmp/ccc9ZrJ3.s 			page 273


 9210 099a 102C     		cmp	r4, #16
 9211 099c 00F04484 		beq	.L1369
 9212              	.LBB1059:
2924:src/keys.c    **** 		if (nn <= 9)
 9213              		.loc 1 2924 3 is_stmt 1 view .LVU2858
 9214              	.LVL772:
 9215              	.LBB1060:
 9216              	.LBI1060:
 210:src/keys.c    **** {
 9217              		.loc 1 210 14 view .LVU2859
 9218              	.LBB1061:
 212:src/keys.c    ****     // K00 - K05
 9219              		.loc 1 212 3 view .LVU2860
 234:src/keys.c    **** }
 9220              		.loc 1 234 3 view .LVU2861
 9221              	.LBB1062:
 9222              	.LBI1062:
 131:src/keys.c    **** {
 9223              		.loc 1 131 12 view .LVU2862
 9224              	.LBB1063:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9225              		.loc 1 133 2 view .LVU2863
 143:src/keys.c    **** }
 9226              		.loc 1 143 2 view .LVU2864
 143:src/keys.c    **** }
 9227              		.loc 1 143 23 is_stmt 0 view .LVU2865
 9228 09a0 C64A     		ldr	r2, .L1409+4
 9229              	.LBE1063:
 9230              	.LBE1062:
 234:src/keys.c    **** }
 9231              		.loc 1 234 28 view .LVU2866
 9232 09a2 C748     		ldr	r0, .L1409+8
 9233              	.LBB1065:
 9234              	.LBB1064:
 143:src/keys.c    **** }
 9235              		.loc 1 143 23 view .LVU2867
 9236 09a4 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9237 09a6 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 9238 09a8 02F07F02 		and	r2, r2, #127
 9239              	.LVL773:
 143:src/keys.c    **** }
 9240              		.loc 1 143 23 view .LVU2868
 9241              	.LBE1064:
 9242              	.LBE1065:
 9243              	.LBE1061:
 9244              	.LBE1060:
2925:src/keys.c    **** 			n = nn;
 9245              		.loc 1 2925 3 is_stmt 1 view .LVU2869
2925:src/keys.c    **** 			n = nn;
 9246              		.loc 1 2925 6 is_stmt 0 view .LVU2870
 9247 09ac 092A     		cmp	r2, #9
 9248 09ae 40F2D682 		bls	.L1135
2927:src/keys.c    **** 			n = n == max ? 10 : max;
 9249              		.loc 1 2927 11 view .LVU2871
 9250 09b2 702A     		cmp	r2, #112
 9251              	.LBE1059:
2908:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 274


 9252              		.loc 1 2908 6 view .LVU2872
 9253 09b4 A1F10301 		sub	r1, r1, #3
 9254              	.LVL774:
 9255              	.LBB1066:
2927:src/keys.c    **** 			n = n == max ? 10 : max;
 9256              		.loc 1 2927 8 is_stmt 1 view .LVU2873
2927:src/keys.c    **** 			n = n == max ? 10 : max;
 9257              		.loc 1 2927 11 is_stmt 0 view .LVU2874
 9258 09b8 00F01286 		beq	.L1370
2929:src/keys.c    **** 			n = 10; 
 9259              		.loc 1 2929 8 is_stmt 1 view .LVU2875
 9260              	.LBE1066:
2908:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9261              		.loc 1 2908 6 is_stmt 0 view .LVU2876
 9262 09bc 7F2A     		cmp	r2, #127
 9263 09be 0CBF     		ite	eq
 9264 09c0 0B46     		moveq	r3, r1
 9265              	.LVL775:
2908:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9266              		.loc 1 2908 6 view .LVU2877
 9267 09c2 0A23     		movne	r3, #10
 9268              	.LVL776:
 9269              	.L884:
2932:src/keys.c    **** 
 9270              		.loc 1 2932 2 is_stmt 1 view .LVU2878
2932:src/keys.c    **** 
 9271              		.loc 1 2932 20 is_stmt 0 view .LVU2879
 9272 09c4 0333     		adds	r3, r3, #3
 9273              	.LVL777:
2932:src/keys.c    **** 
 9274              		.loc 1 2932 16 view .LVU2880
 9275 09c6 88F80C30 		strb	r3, [r8, #12]
2934:src/keys.c    **** }
 9276              		.loc 1 2934 2 is_stmt 1 view .LVU2881
 9277              	.LBE1069:
 9278              	.LBE1077:
3287:src/keys.c    **** 
 9279              		.loc 1 3287 10 is_stmt 0 view .LVU2882
 9280 09ca 3324     		movs	r4, #51
 9281              	.LVL778:
3287:src/keys.c    **** 
 9282              		.loc 1 3287 10 view .LVU2883
 9283 09cc 3368     		ldr	r3, [r6]
 9284              	.LVL779:
 9285              	.LBB1078:
 9286              	.LBB1070:
2934:src/keys.c    **** }
 9287              		.loc 1 2934 9 view .LVU2884
 9288 09ce FFF772BB 		b	.L801
 9289              	.LVL780:
 9290              	.L1336:
2934:src/keys.c    **** }
 9291              		.loc 1 2934 9 view .LVU2885
 9292              	.LBE1070:
 9293              	.LBE1078:
3310:src/keys.c    **** 
 9294              		.loc 1 3310 3 is_stmt 1 view .LVU2886
ARM GAS  /tmp/ccc9ZrJ3.s 			page 275


 9295              	.LBB1079:
 9296              	.LBB1080:
 9297              	.LBB1081:
 9298              	.LBB1082:
 9299              	.LBB1083:
 9300              	.LBB1084:
 9301              	.LBB1085:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9302              		.loc 1 97 18 is_stmt 0 view .LVU2887
 9303 09d2 FFF7FEFF 		bl	shift_down
 9304              	.LVL781:
 9305              	.LBE1085:
 9306              	.LBE1084:
 9307              	.LBE1083:
 9308              	.LBE1082:
 9309              	.LBE1081:
 9310              	.LBE1080:
 9311              	.LBE1079:
3310:src/keys.c    **** 
 9312              		.loc 1 3310 10 view .LVU2888
 9313 09d6 E4B2     		uxtb	r4, r4
 9314              	.LVL782:
 9315              	.LBB1110:
 9316              	.LBI1079:
1627:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 9317              		.loc 1 1627 12 is_stmt 1 view .LVU2889
 9318              	.LBB1102:
1628:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9319              		.loc 1 1628 2 view .LVU2890
1633:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9320              		.loc 1 1633 2 view .LVU2891
1637:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9321              		.loc 1 1637 2 view .LVU2892
 9322              	.LBB1094:
 9323              	.LBI1081:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9324              		.loc 1 114 13 view .LVU2893
 9325              	.LBE1094:
 9326              	.LBE1102:
 9327              	.LBE1110:
 9328              	.LBE1347:
 9329              	.LBE1421:
 115:src/keys.c    **** }
 9330              		.loc 1 115 2 view .LVU2894
 9331              	.LBB1422:
 9332              	.LBB1348:
 9333              	.LBB1111:
 9334              	.LBB1103:
 9335              	.LBB1095:
 9336              	.LBB1091:
 9337              	.LBI1082:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9338              		.loc 1 104 20 view .LVU2895
 9339              	.LBB1088:
 105:src/keys.c    **** 	State2.shifts = shift;
 9340              		.loc 1 105 2 view .LVU2896
 9341              	.LBB1087:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 276


 9342              	.LBI1084:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9343              		.loc 1 96 13 view .LVU2897
 9344              	.LBB1086:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9345              		.loc 1 97 2 view .LVU2898
  98:src/keys.c    **** }
 9346              		.loc 1 98 2 view .LVU2899
  98:src/keys.c    **** }
 9347              		.loc 1 98 52 is_stmt 0 view .LVU2900
 9348 09d8 8346     		mov	fp, r0
 9349              	.LVL783:
  98:src/keys.c    **** }
 9350              		.loc 1 98 52 view .LVU2901
 9351 09da 08B9     		cbnz	r0, .L894
 9352 09dc 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9353              	.L894:
 9354              	.LVL784:
  98:src/keys.c    **** }
 9355              		.loc 1 98 52 view .LVU2902
 9356              	.LBE1086:
 9357              	.LBE1087:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9358              		.loc 1 106 2 is_stmt 1 view .LVU2903
 9359              	.LBE1088:
 9360              	.LBE1091:
 9361              	.LBE1095:
1640:src/keys.c    **** #ifdef DM42
 9362              		.loc 1 1640 15 is_stmt 0 view .LVU2904
 9363 09e0 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9364              	.LBB1096:
 9365              	.LBB1092:
 9366              	.LBB1089:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9367              		.loc 1 106 16 view .LVU2905
 9368 09e4 0023     		movs	r3, #0
 9369              	.LBE1089:
 9370              	.LBE1092:
 9371              	.LBE1096:
1640:src/keys.c    **** #ifdef DM42
 9372              		.loc 1 1640 15 view .LVU2906
 9373 09e6 63F38202 		bfi	r2, r3, #2, #1
1638:src/keys.c    **** 
 9374              		.loc 1 1638 23 view .LVU2907
 9375 09ea ABF1010A 		sub	r10, fp, #1
1640:src/keys.c    **** #ifdef DM42
 9376              		.loc 1 1640 15 view .LVU2908
 9377 09ee 88F81520 		strb	r2, [r8, #21]
 9378              	.LBB1097:
 9379              	.LBB1093:
 9380              	.LBB1090:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9381              		.loc 1 106 16 view .LVU2909
 9382 09f2 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9383              		.loc 1 108 2 is_stmt 1 view .LVU2910
 9384              	.LVL785:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 277


 108:src/keys.c    **** }
 9385              		.loc 1 108 2 is_stmt 0 view .LVU2911
 9386              	.LBE1090:
 9387              	.LBE1093:
 9388              	.LBE1097:
1638:src/keys.c    **** 
 9389              		.loc 1 1638 2 is_stmt 1 view .LVU2912
1638:src/keys.c    **** 
 9390              		.loc 1 1638 23 is_stmt 0 view .LVU2913
 9391 09f6 BAFA8AFA 		clz	r10, r10
1642:src/keys.c    **** 	display_current_menu ();
 9392              		.loc 1 1642 2 view .LVU2914
 9393 09fa FFF7FEFF 		bl	set_last_menu
 9394              	.LVL786:
1643:src/keys.c    **** #endif
 9395              		.loc 1 1643 2 view .LVU2915
 9396 09fe FFF7FEFF 		bl	display_current_menu
 9397              	.LVL787:
1646:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9398              		.loc 1 1646 5 view .LVU2916
 9399 0a02 2D2C     		cmp	r4, #45
1638:src/keys.c    **** 
 9400              		.loc 1 1638 23 view .LVU2917
 9401 0a04 4FEA5A1A 		lsr	r10, r10, #5
 9402              	.LVL788:
1640:src/keys.c    **** #ifdef DM42
 9403              		.loc 1 1640 2 is_stmt 1 view .LVU2918
1642:src/keys.c    **** 	display_current_menu ();
 9404              		.loc 1 1642 2 view .LVU2919
1643:src/keys.c    **** #endif
 9405              		.loc 1 1643 2 view .LVU2920
1646:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9406              		.loc 1 1646 2 view .LVU2921
1646:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9407              		.loc 1 1646 5 is_stmt 0 view .LVU2922
 9408 0a08 00F06881 		beq	.L1371
1664:src/keys.c    **** 	
 9409              		.loc 1 1664 2 is_stmt 1 view .LVU2923
1664:src/keys.c    **** 	
 9410              		.loc 1 1664 5 is_stmt 0 view .LVU2924
 9411 0a0c BBF1000F 		cmp	fp, #0
 9412 0a10 3FF46BAE 		beq	.L1312
1666:src/keys.c    **** 		return op_map[c - K10][f];
 9413              		.loc 1 1666 2 is_stmt 1 view .LVU2925
1666:src/keys.c    **** 		return op_map[c - K10][f];
 9414              		.loc 1 1666 15 is_stmt 0 view .LVU2926
 9415 0a14 A31F     		subs	r3, r4, #6
1666:src/keys.c    **** 		return op_map[c - K10][f];
 9416              		.loc 1 1666 5 view .LVU2927
 9417 0a16 DAB2     		uxtb	r2, r3
 9418 0a18 022A     		cmp	r2, #2
 9419 0a1a 40F29B81 		bls	.L1372
1669:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9420              		.loc 1 1669 2 is_stmt 1 view .LVU2928
1669:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9421              		.loc 1 1669 15 is_stmt 0 view .LVU2929
 9422 0a1e 0E3C     		subs	r4, r4, #14
ARM GAS  /tmp/ccc9ZrJ3.s 			page 278


 9423              	.LVL789:
1669:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9424              		.loc 1 1669 5 view .LVU2930
 9425 0a20 E3B2     		uxtb	r3, r4
 9426 0a22 012B     		cmp	r3, #1
 9427 0a24 3FF661AE 		bhi	.L1312
1670:src/keys.c    **** 
 9428              		.loc 1 1670 3 is_stmt 1 view .LVU2931
 9429 0a28 A64A     		ldr	r2, .L1409+12
 9430              	.LBB1098:
 9431              	.LBB1099:
 732:src/keys.c    **** }
 9432              		.loc 1 732 15 is_stmt 0 view .LVU2932
 9433 0a2a 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 9434 0a2e 3368     		ldr	r3, [r6]
 9435              	.LBE1099:
 9436              	.LBE1098:
1670:src/keys.c    **** 
 9437              		.loc 1 1670 3 view .LVU2933
 9438 0a30 02EB4402 		add	r2, r2, r4, lsl #1
1672:src/keys.c    **** }
 9439              		.loc 1 1672 9 view .LVU2934
 9440 0a34 3324     		movs	r4, #51
 9441              	.LVL790:
1670:src/keys.c    **** 
 9442              		.loc 1 1670 3 view .LVU2935
 9443 0a36 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9444              	.LVL791:
 9445              	.LBB1101:
 9446              	.LBI1098:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9447              		.loc 1 731 13 is_stmt 1 view .LVU2936
 9448              	.LBB1100:
 732:src/keys.c    **** }
 9449              		.loc 1 732 2 view .LVU2937
 732:src/keys.c    **** }
 9450              		.loc 1 732 15 is_stmt 0 view .LVU2938
 9451 0a3a 9142     		cmp	r1, r2
 9452 0a3c 08BF     		it	eq
 9453 0a3e 0022     		moveq	r2, #0
 9454              	.LVL792:
 732:src/keys.c    **** }
 9455              		.loc 1 732 15 view .LVU2939
 9456 0a40 88F81120 		strb	r2, [r8, #17]
 733:src/keys.c    **** 
 9457              		.loc 1 733 1 view .LVU2940
 9458 0a44 FFF737BB 		b	.L801
 9459              	.LVL793:
 9460              	.L896:
 733:src/keys.c    **** 
 9461              		.loc 1 733 1 view .LVU2941
 9462              	.LBE1100:
 9463              	.LBE1101:
1664:src/keys.c    **** 	
 9464              		.loc 1 1664 2 is_stmt 1 view .LVU2942
1664:src/keys.c    **** 	
 9465              		.loc 1 1664 5 is_stmt 0 view .LVU2943
ARM GAS  /tmp/ccc9ZrJ3.s 			page 279


 9466 0a48 BBF1000F 		cmp	fp, #0
 9467 0a4c 7FF44DAE 		bne	.L1312
 9468              	.LVL794:
 9469              	.L1310:
1664:src/keys.c    **** 	
 9470              		.loc 1 1664 5 view .LVU2944
 9471 0a50 3368     		ldr	r3, [r6]
 9472              	.LBE1103:
 9473              	.LBE1111:
 9474              	.LBE1348:
 9475              	.LBE1422:
3402:src/keys.c    ****   //print_debug(60,c);
 9476              		.loc 1 3402 7 view .LVU2945
 9477 0a52 0025     		movs	r5, #0
 9478              	.LBB1423:
3582:src/keys.c    **** 	}
 9479              		.loc 1 3582 6 view .LVU2946
 9480 0a54 3324     		movs	r4, #51
 9481 0a56 FFF72EBB 		b	.L801
 9482              	.LVL795:
 9483              	.L873:
3582:src/keys.c    **** 	}
 9484              		.loc 1 3582 6 view .LVU2947
 9485              	.LBE1423:
 9486              	.LBB1424:
 9487              	.LBB1349:
 9488              	.LBB1112:
 9489              	.LBB1011:
2368:src/keys.c    **** 		// digit 2..9, -> or .
 9490              		.loc 1 2368 7 is_stmt 1 view .LVU2948
2368:src/keys.c    **** 		// digit 2..9, -> or .
 9491              		.loc 1 2368 10 is_stmt 0 view .LVU2949
 9492 0a5a BCF1090F 		cmp	ip, #9
 9493 0a5e 40F29080 		bls	.L875
 9494              	.L867:
2368:src/keys.c    **** 		// digit 2..9, -> or .
 9495              		.loc 1 2368 19 view .LVU2950
 9496 0a62 2C2C     		cmp	r4, #44
 9497 0a64 00F08D80 		beq	.L875
2368:src/keys.c    **** 		// digit 2..9, -> or .
 9498              		.loc 1 2368 35 view .LVU2951
 9499 0a68 262C     		cmp	r4, #38
 9500 0a6a 00F08A80 		beq	.L875
2374:src/keys.c    **** 	case K11:					// tests vs register
 9501              		.loc 1 2374 2 is_stmt 1 view .LVU2952
 9502 0a6e 0C2C     		cmp	r4, #12
 9503 0a70 00F08381 		beq	.L878
 9504 0a74 102C     		cmp	r4, #16
 9505 0a76 3FF438AE 		beq	.L1312
 9506 0a7a 072C     		cmp	r4, #7
 9507 0a7c 00F07D81 		beq	.L878
 9508              	.L870:
2388:src/keys.c    **** 	State2.cmplx = cmpx;
 9509              		.loc 1 2388 2 view .LVU2953
2389:src/keys.c    **** 	return STATE_UNFINISHED;
 9510              		.loc 1 2389 15 is_stmt 0 view .LVU2954
 9511 0a80 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 280


2388:src/keys.c    **** 	State2.cmplx = cmpx;
 9512              		.loc 1 2388 14 view .LVU2955
 9513 0a84 88F80F30 		strb	r3, [r8, #15]
2389:src/keys.c    **** 	return STATE_UNFINISHED;
 9514              		.loc 1 2389 2 is_stmt 1 view .LVU2956
2389:src/keys.c    **** 	return STATE_UNFINISHED;
 9515              		.loc 1 2389 15 is_stmt 0 view .LVU2957
 9516 0a88 6BF34102 		bfi	r2, fp, #1, #1
 9517 0a8c 3368     		ldr	r3, [r6]
 9518              	.LVL796:
2389:src/keys.c    **** 	return STATE_UNFINISHED;
 9519              		.loc 1 2389 15 view .LVU2958
 9520 0a8e 88F81520 		strb	r2, [r8, #21]
2390:src/keys.c    **** }
 9521              		.loc 1 2390 2 is_stmt 1 view .LVU2959
2390:src/keys.c    **** }
 9522              		.loc 1 2390 9 is_stmt 0 view .LVU2960
 9523 0a92 3324     		movs	r4, #51
 9524              	.LVL797:
2390:src/keys.c    **** }
 9525              		.loc 1 2390 9 view .LVU2961
 9526 0a94 FFF70FBB 		b	.L801
 9527              	.LVL798:
 9528              	.L1357:
2390:src/keys.c    **** }
 9529              		.loc 1 2390 9 view .LVU2962
 9530              	.LBE1011:
 9531              	.LBE1112:
 9532              	.LBB1113:
 9533              	.LBB1030:
1708:src/keys.c    **** 	}
 9534              		.loc 1 1708 3 is_stmt 1 view .LVU2963
1708:src/keys.c    **** 	}
 9535              		.loc 1 1708 8 is_stmt 0 view .LVU2964
 9536 0a98 FFF7FEFF 		bl	gtodot_digit
 9537              	.LVL799:
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9538              		.loc 1 1757 2 is_stmt 1 view .LVU2965
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9539              		.loc 1 1757 5 is_stmt 0 view .LVU2966
 9540 0a9c 0028     		cmp	r0, #0
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9541              		.loc 1 1757 5 view .LVU2967
 9542 0a9e FFF624AE 		blt	.L1312
 9543              	.L838:
1758:src/keys.c    **** fin:		set_pc(rawpc);
 9544              		.loc 1 1758 3 is_stmt 1 view .LVU2968
1758:src/keys.c    **** fin:		set_pc(rawpc);
 9545              		.loc 1 1758 11 is_stmt 0 view .LVU2969
 9546 0aa2 FFF7FEFF 		bl	find_user_pc
 9547              	.LVL800:
1758:src/keys.c    **** fin:		set_pc(rawpc);
 9548              		.loc 1 1758 11 view .LVU2970
 9549 0aa6 E8E6     		b	.L847
 9550              	.LVL801:
 9551              	.L868:
1758:src/keys.c    **** fin:		set_pc(rawpc);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 281


 9552              		.loc 1 1758 11 view .LVU2971
 9553              	.LBE1030:
 9554              	.LBE1113:
 9555              	.LBB1114:
 9556              	.LBB1012:
2360:src/keys.c    **** 		// Special 0
 9557              		.loc 1 2360 7 is_stmt 1 view .LVU2972
2360:src/keys.c    **** 		// Special 0
 9558              		.loc 1 2360 10 is_stmt 0 view .LVU2973
 9559 0aa8 BCF1000F 		cmp	ip, #0
 9560 0aac 40F07786 		bne	.L871
2362:src/keys.c    **** 	}
 9561              		.loc 1 2362 3 is_stmt 1 view .LVU2974
2362:src/keys.c    **** 	}
 9562              		.loc 1 2362 18 is_stmt 0 view .LVU2975
 9563 0ab0 BBF1000F 		cmp	fp, #0
 9564 0ab4 14BF     		ite	ne
 9565 0ab6 2524     		movne	r4, #37
 9566              	.LVL802:
2362:src/keys.c    **** 	}
 9567              		.loc 1 2362 18 view .LVU2976
 9568 0ab8 1724     		moveq	r4, #23
2362:src/keys.c    **** 	}
 9569              		.loc 1 2362 47 view .LVU2977
 9570 0aba 1C44     		add	r4, r4, r3
 9571 0abc 90E4     		b	.L835
 9572              	.LVL803:
 9573              	.L1352:
2362:src/keys.c    **** 	}
 9574              		.loc 1 2362 47 view .LVU2978
 9575              	.LBE1012:
 9576              	.LBE1114:
 9577              	.LBB1115:
 9578              	.LBB811:
 278:src/keys.c    **** 				case K53:
 9579              		.loc 1 278 4 is_stmt 1 view .LVU2979
 9580 0abe 231F     		subs	r3, r4, #4
 9581 0ac0 1D2B     		cmp	r3, #29
 9582 0ac2 3FF6DCAB 		bhi	.L927
 9583 0ac6 01A0     		adr	r0, .L911
 9584 0ac8 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 9585              		.p2align 2
 9586              	.L911:
 9587 0acc 490B0000 		.word	.L914+1
 9588 0ad0 590B0000 		.word	.L913+1
 9589 0ad4 7F020000 		.word	.L927+1
 9590 0ad8 7F020000 		.word	.L927+1
 9591 0adc 7F020000 		.word	.L927+1
 9592 0ae0 7F020000 		.word	.L927+1
 9593 0ae4 7F020000 		.word	.L927+1
 9594 0ae8 7F020000 		.word	.L927+1
 9595 0aec 4D0B0000 		.word	.L912+1
 9596 0af0 7F020000 		.word	.L927+1
 9597 0af4 7F020000 		.word	.L927+1
 9598 0af8 7F020000 		.word	.L927+1
 9599 0afc 7F020000 		.word	.L927+1
 9600 0b00 7F020000 		.word	.L927+1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 282


 9601 0b04 7F020000 		.word	.L927+1
 9602 0b08 7F020000 		.word	.L927+1
 9603 0b0c 7F020000 		.word	.L927+1
 9604 0b10 7F020000 		.word	.L927+1
 9605 0b14 7F020000 		.word	.L927+1
 9606 0b18 7F020000 		.word	.L927+1
 9607 0b1c 7F020000 		.word	.L927+1
 9608 0b20 7F020000 		.word	.L927+1
 9609 0b24 7F020000 		.word	.L927+1
 9610 0b28 7F020000 		.word	.L927+1
 9611 0b2c 7F020000 		.word	.L927+1
 9612 0b30 7F020000 		.word	.L927+1
 9613 0b34 7F020000 		.word	.L927+1
 9614 0b38 7F020000 		.word	.L927+1
 9615 0b3c 7F020000 		.word	.L927+1
 9616 0b40 450B0000 		.word	.L1139+1
 9617              		.p2align 1
 9618              	.L1139:
 280:src/keys.c    **** 				case K04:
 9619              		.loc 1 280 13 is_stmt 0 view .LVU2980
 9620 0b44 0223     		movs	r3, #2
 9621 0b46 C2E5     		b	.L910
 9622              	.L914:
 277:src/keys.c    **** 			switch (c) {
 9623              		.loc 1 277 6 view .LVU2981
 9624 0b48 1223     		movs	r3, #18
 9625 0b4a C0E5     		b	.L910
 9626              	.L912:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9627              		.loc 1 286 6 is_stmt 1 view .LVU2982
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9628              		.loc 1 286 9 is_stmt 0 view .LVU2983
 9629 0b4c 11F0060F 		tst	r1, #6
 9630 0b50 40F0E985 		bne	.L1373
 289:src/keys.c    **** 				default:
 9631              		.loc 1 289 13 view .LVU2984
 9632 0b54 1123     		movs	r3, #17
 9633 0b56 BAE5     		b	.L910
 9634              	.L913:
 284:src/keys.c    **** 				case K20:
 9635              		.loc 1 284 6 is_stmt 1 view .LVU2985
 9636              	.LVL804:
 284:src/keys.c    **** 				case K20:
 9637              		.loc 1 284 6 is_stmt 0 view .LVU2986
 9638              	.LBE811:
 9639              	.LBE1115:
3318:src/keys.c    **** 		if (is_bad_cmdline())
 9640              		.loc 1 3318 2 is_stmt 1 view .LVU2987
 9641              	.LBB1116:
 9642              	.LBB812:
 284:src/keys.c    **** 				case K20:
 9643              		.loc 1 284 13 is_stmt 0 view .LVU2988
 9644 0b58 0923     		movs	r3, #9
 9645 0b5a B8E5     		b	.L910
 9646              	.LVL805:
 9647              	.L1380:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 283


 9648              		.loc 1 312 74 view .LVU2989
 9649 0b5c D8F81410 		ldr	r1, [r8, #20]
 9650 0b60 DFF874C1 		ldr	ip, .L1409+32
 9651 0b64 11EA0C0F 		tst	r1, ip
 9652 0b68 3FF4B1AD 		beq	.L910
 315:src/keys.c    ****     /*
 9653              		.loc 1 315 3 is_stmt 1 view .LVU2990
 315:src/keys.c    ****     /*
 9654              		.loc 1 315 23 is_stmt 0 view .LVU2991
 9655 0b6c 564B     		ldr	r3, .L1409+16
 315:src/keys.c    ****     /*
 9656              		.loc 1 315 6 view .LVU2992
 9657 0b6e 1942     		tst	r1, r3
 9658 0b70 3FF46CAB 		beq	.L1123
 9659              	.L920:
 9660              	.LBB804:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 9661              		.loc 1 384 5 is_stmt 1 view .LVU2993
 408:src/keys.c    **** 
 9662              		.loc 1 408 5 view .LVU2994
 413:src/keys.c    ****     col = smap[shift];
 9663              		.loc 1 413 5 view .LVU2995
 9664              	.LVL806:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9665              		.loc 1 414 5 view .LVU2996
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9666              		.loc 1 414 15 is_stmt 0 view .LVU2997
 9667 0b74 5549     		ldr	r1, .L1409+20
 413:src/keys.c    ****     col = smap[shift];
 9668              		.loc 1 413 8 view .LVU2998
 9669 0b76 564B     		ldr	r3, .L1409+24
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9670              		.loc 1 414 9 view .LVU2999
 9671 0b78 11F80BC0 		ldrb	ip, [r1, fp]	@ zero_extendqisi2
 9672              	.LVL807:
 415:src/keys.c    ****   }
 9673              		.loc 1 415 5 is_stmt 1 view .LVU3000
 415:src/keys.c    ****   }
 9674              		.loc 1 415 9 is_stmt 0 view .LVU3001
 9675 0b7c 0821     		movs	r1, #8
 9676 0b7e FFF772BB 		b	.L922
 9677              	.LVL808:
 9678              	.L875:
 415:src/keys.c    ****   }
 9679              		.loc 1 415 9 view .LVU3002
 9680              	.LBE804:
 9681              	.LBE812:
 9682              	.LBE1116:
 9683              	.LBB1117:
 9684              	.LBB1013:
2370:src/keys.c    **** 		return process_arg(c);
 9685              		.loc 1 2370 3 is_stmt 1 view .LVU3003
 9686              	.LBB1006:
 9687              	.LBI1006:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 9688              		.loc 1 552 13 view .LVU3004
 9689              	.LBB1007:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 284


 553:src/keys.c    **** 		return;
 9690              		.loc 1 553 2 view .LVU3005
 553:src/keys.c    **** 		return;
 9691              		.loc 1 553 6 is_stmt 0 view .LVU3006
 9692 0b82 FFF7FEFF 		bl	is_bad_cmdline
 9693              	.LVL809:
 553:src/keys.c    **** 		return;
 9694              		.loc 1 553 5 view .LVU3007
 9695 0b86 18B9     		cbnz	r0, .L877
 9696 0b88 5FFA8AF0 		uxtb	r0, r10
 9697 0b8c FFF7FEFF 		bl	init_arg.part.0
 9698              	.LVL810:
 9699              	.L877:
 553:src/keys.c    **** 		return;
 9700              		.loc 1 553 5 view .LVU3008
 9701              	.LBE1007:
 9702              	.LBE1006:
2371:src/keys.c    **** 	}
 9703              		.loc 1 2371 3 is_stmt 1 view .LVU3009
2371:src/keys.c    **** 	}
 9704              		.loc 1 2371 10 is_stmt 0 view .LVU3010
 9705 0b90 2046     		mov	r0, r4
 9706 0b92 FFF7FEFF 		bl	process_arg
 9707              	.LVL811:
 9708 0b96 0446     		mov	r4, r0
 9709              	.LVL812:
2371:src/keys.c    **** 	}
 9710              		.loc 1 2371 10 view .LVU3011
 9711 0b98 22E4     		b	.L835
 9712              	.LVL813:
 9713              	.L1333:
2371:src/keys.c    **** 	}
 9714              		.loc 1 2371 10 view .LVU3012
 9715              	.LBE1013:
 9716              	.LBE1117:
3293:src/keys.c    **** 		return STATE_UNFINISHED;
 9717              		.loc 1 3293 3 is_stmt 1 view .LVU3013
 9718              	.LBB1118:
 9719              	.LBI1118:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9720              		.loc 1 121 13 view .LVU3014
 9721              	.LBB1119:
 122:src/keys.c    **** }
 9722              		.loc 1 122 2 view .LVU3015
 122:src/keys.c    **** }
 9723              		.loc 1 122 16 is_stmt 0 view .LVU3016
 9724 0b9a 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9725 0b9e 3368     		ldr	r3, [r6]
 9726 0ba0 013A     		subs	r2, r2, #1
 9727 0ba2 18BF     		it	ne
 9728 0ba4 0122     		movne	r2, #1
 9729 0ba6 88F81020 		strb	r2, [r8, #16]
 9730              	.LVL814:
 122:src/keys.c    **** }
 9731              		.loc 1 122 16 view .LVU3017
 9732              	.LBE1119:
 9733              	.LBE1118:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 285


3294:src/keys.c    **** 	}
 9734              		.loc 1 3294 3 is_stmt 1 view .LVU3018
3294:src/keys.c    **** 	}
 9735              		.loc 1 3294 10 is_stmt 0 view .LVU3019
 9736 0baa 3324     		movs	r4, #51
 9737              	.LVL815:
3294:src/keys.c    **** 	}
 9738              		.loc 1 3294 10 view .LVU3020
 9739 0bac FFF783BA 		b	.L801
 9740              	.LVL816:
 9741              	.L1334:
3297:src/keys.c    **** 		return STATE_UNFINISHED;
 9742              		.loc 1 3297 3 is_stmt 1 view .LVU3021
 9743              	.LBB1120:
 9744              	.LBI1120:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9745              		.loc 1 121 13 view .LVU3022
 9746              	.LBB1121:
 122:src/keys.c    **** }
 9747              		.loc 1 122 2 view .LVU3023
 122:src/keys.c    **** }
 9748              		.loc 1 122 16 is_stmt 0 view .LVU3024
 9749 0bb0 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9750 0bb4 3368     		ldr	r3, [r6]
 9751 0bb6 022A     		cmp	r2, #2
 9752 0bb8 18BF     		it	ne
 9753 0bba 0221     		movne	r1, #2
 9754 0bbc 88F81010 		strb	r1, [r8, #16]
 9755              	.LVL817:
 122:src/keys.c    **** }
 9756              		.loc 1 122 16 view .LVU3025
 9757              	.LBE1121:
 9758              	.LBE1120:
3298:src/keys.c    **** 	}
 9759              		.loc 1 3298 3 is_stmt 1 view .LVU3026
3298:src/keys.c    **** 	}
 9760              		.loc 1 3298 10 is_stmt 0 view .LVU3027
 9761 0bc0 3324     		movs	r4, #51
 9762              	.LVL818:
3298:src/keys.c    **** 	}
 9763              		.loc 1 3298 10 view .LVU3028
 9764 0bc2 FFF778BA 		b	.L801
 9765              	.LVL819:
 9766              	.L1340:
 9767              	.LBB1122:
 9768              	.LBB813:
 423:src/keys.c    ****       break;
 9769              		.loc 1 423 7 is_stmt 1 view .LVU3029
 423:src/keys.c    ****       break;
 9770              		.loc 1 423 11 is_stmt 0 view .LVU3030
 9771 0bc6 6344     		add	r3, r3, ip
 9772              	.LVL820:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9773              		.loc 1 427 6 view .LVU3031
 9774 0bc8 1107     		lsls	r1, r2, #28
 423:src/keys.c    ****       break;
 9775              		.loc 1 423 11 view .LVU3032
ARM GAS  /tmp/ccc9ZrJ3.s 			page 286


 9776 0bca 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9777              	.LVL821:
 424:src/keys.c    ****     }
 9778              		.loc 1 424 7 is_stmt 1 view .LVU3033
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9779              		.loc 1 427 3 view .LVU3034
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9780              		.loc 1 427 6 is_stmt 0 view .LVU3035
 9781 0bcc 40F1C980 		bpl	.L1374
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9782              		.loc 1 427 20 view .LVU3036
 9783 0bd0 A3F10B02 		sub	r2, r3, #11
 9784 0bd4 042A     		cmp	r2, #4
 9785 0bd6 7FF67AAD 		bls	.L910
 9786              	.LVL822:
 9787              	.L933:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9788              		.loc 1 427 20 view .LVU3037
 9789              	.LBE813:
 9790              	.LBE1122:
3330:src/keys.c    **** 
 9791              		.loc 1 3330 3 is_stmt 1 view .LVU3038
 9792              	.LBB1123:
 9793              	.LBI1123:
2803:src/keys.c    **** 	enum shifts shift = reset_shift();
 9794              		.loc 1 2803 12 view .LVU3039
 9795              	.LBB1124:
2804:src/keys.c    **** 	unsigned int ch = 0;
 9796              		.loc 1 2804 2 view .LVU3040
 9797              	.LBB1125:
 9798              	.LBI1125:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9799              		.loc 1 114 13 view .LVU3041
 9800              	.LBE1125:
 9801              	.LBE1124:
 9802              	.LBE1123:
 9803              	.LBE1349:
 9804              	.LBE1424:
 115:src/keys.c    **** }
 9805              		.loc 1 115 2 view .LVU3042
 9806              	.LBB1425:
 9807              	.LBB1350:
 9808              	.LBB1160:
 9809              	.LBB1153:
 9810              	.LBB1132:
 9811              	.LBB1126:
 9812              	.LBI1126:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9813              		.loc 1 104 20 view .LVU3043
 9814              	.LBB1127:
 105:src/keys.c    **** 	State2.shifts = shift;
 9815              		.loc 1 105 2 view .LVU3044
 9816              	.LBB1128:
 9817              	.LBI1128:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9818              		.loc 1 96 13 view .LVU3045
 9819              	.LBB1129:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 287


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9820              		.loc 1 97 2 view .LVU3046
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9821              		.loc 1 97 18 is_stmt 0 view .LVU3047
 9822 0bda FFF7FEFF 		bl	shift_down
 9823              	.LVL823:
  98:src/keys.c    **** }
 9824              		.loc 1 98 2 is_stmt 1 view .LVU3048
  98:src/keys.c    **** }
 9825              		.loc 1 98 52 is_stmt 0 view .LVU3049
 9826 0bde 0146     		mov	r1, r0
 9827 0be0 08B9     		cbnz	r0, .L930
 9828 0be2 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9829              	.L930:
 9830              	.LVL824:
  98:src/keys.c    **** }
 9831              		.loc 1 98 52 view .LVU3050
 9832              	.LBE1129:
 9833              	.LBE1128:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9834              		.loc 1 106 2 is_stmt 1 view .LVU3051
 9835              	.LBE1127:
 9836              	.LBE1126:
 9837              	.LBE1132:
2808:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9838              		.loc 1 2808 5 is_stmt 0 view .LVU3052
 9839 0be6 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9840              	.LBB1133:
 9841              	.LBB1131:
 9842              	.LBB1130:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9843              		.loc 1 106 16 view .LVU3053
 9844 0bea 0023     		movs	r3, #0
 9845 0bec 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9846              		.loc 1 108 2 is_stmt 1 view .LVU3054
 9847              	.LVL825:
 108:src/keys.c    **** }
 9848              		.loc 1 108 2 is_stmt 0 view .LVU3055
 9849              	.LBE1130:
 9850              	.LBE1131:
 9851              	.LBE1133:
2805:src/keys.c    **** 	unsigned int opcode;
 9852              		.loc 1 2805 2 is_stmt 1 view .LVU3056
2806:src/keys.c    **** 
 9853              		.loc 1 2806 2 view .LVU3057
2808:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9854              		.loc 1 2808 2 view .LVU3058
2808:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9855              		.loc 1 2808 5 is_stmt 0 view .LVU3059
 9856 0bf0 0028     		cmp	r0, #0
 9857 0bf2 40F04D84 		bne	.L1375
2817:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 9858              		.loc 1 2817 2 is_stmt 1 view .LVU3060
 9859 0bf6 102C     		cmp	r4, #16
 9860 0bf8 00F02685 		beq	.L937
 9861 0bfc 242C     		cmp	r4, #36
ARM GAS  /tmp/ccc9ZrJ3.s 			page 288


 9862 0bfe 00F00585 		beq	.L938
 9863 0c02 0C2C     		cmp	r4, #12
 9864 0c04 00F0BF84 		beq	.L1376
 9865              	.L939:
2850:src/keys.c    **** 	if (ch == 0)
 9866              		.loc 1 2850 2 view .LVU3061
 9867              	.LBB1134:
 9868              	.LBB1135:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9869              		.loc 1 485 6 is_stmt 0 view .LVU3062
 9870 0c08 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9871              	.LVL826:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9872              		.loc 1 485 6 view .LVU3063
 9873              	.LBE1135:
 9874              	.LBI1134:
 435:src/keys.c    **** {
 9875              		.loc 1 435 12 is_stmt 1 view .LVU3064
 9876              	.LBB1140:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9877              		.loc 1 437 2 view .LVU3065
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9878              		.loc 1 485 2 view .LVU3066
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9879              		.loc 1 485 5 is_stmt 0 view .LVU3067
 9880 0c0c D806     		lsls	r0, r3, #27
 9881 0c0e 03D5     		bpl	.L943
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9882              		.loc 1 486 3 is_stmt 1 view .LVU3068
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9883              		.loc 1 486 6 is_stmt 0 view .LVU3069
 9884 0c10 0029     		cmp	r1, #0
 9885 0c12 40F0D085 		bne	.L1377
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 9886              		.loc 1 487 10 view .LVU3070
 9887 0c16 0421     		movs	r1, #4
 9888              	.LVL827:
 9889              	.L943:
 491:src/keys.c    **** }
 9890              		.loc 1 491 2 is_stmt 1 view .LVU3071
 9891              	.LBB1136:
 9892              	.LBI1136:
 131:src/keys.c    **** {
 9893              		.loc 1 131 12 view .LVU3072
 9894              	.LBB1137:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9895              		.loc 1 133 2 view .LVU3073
 143:src/keys.c    **** }
 9896              		.loc 1 143 2 view .LVU3074
 143:src/keys.c    **** }
 9897              		.loc 1 143 23 is_stmt 0 view .LVU3075
 9898 0c18 284B     		ldr	r3, .L1409+4
 9899              	.LBE1137:
 9900              	.LBE1136:
 491:src/keys.c    **** }
 9901              		.loc 1 491 49 view .LVU3076
 9902 0c1a 2E4A     		ldr	r2, .L1409+28
ARM GAS  /tmp/ccc9ZrJ3.s 			page 289


 9903              	.LBB1139:
 9904              	.LBB1138:
 143:src/keys.c    **** }
 9905              		.loc 1 143 23 view .LVU3077
 9906 0c1c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9907              	.LBE1138:
 9908              	.LBE1139:
 491:src/keys.c    **** }
 9909              		.loc 1 491 49 view .LVU3078
 9910 0c1e 0620     		movs	r0, #6
 9911 0c20 00FB0323 		mla	r3, r0, r3, r2
 9912              	.LBE1140:
 9913              	.LBE1134:
2850:src/keys.c    **** 	if (ch == 0)
 9914              		.loc 1 2850 5 view .LVU3079
 9915 0c24 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 9916              	.LVL828:
2851:src/keys.c    **** 		return STATE_UNFINISHED;
 9917              		.loc 1 2851 2 is_stmt 1 view .LVU3080
2851:src/keys.c    **** 		return STATE_UNFINISHED;
 9918              		.loc 1 2851 5 is_stmt 0 view .LVU3081
 9919 0c26 002C     		cmp	r4, #0
 9920 0c28 3FF45FAD 		beq	.L1312
 9921              	.L936:
2854:src/keys.c    **** 		State2.digval = ch;
 9922              		.loc 1 2854 2 is_stmt 1 view .LVU3082
2854:src/keys.c    **** 		State2.digval = ch;
 9923              		.loc 1 2854 12 is_stmt 0 view .LVU3083
 9924 0c2c 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2854:src/keys.c    **** 		State2.digval = ch;
 9925              		.loc 1 2854 5 view .LVU3084
 9926 0c30 002B     		cmp	r3, #0
 9927 0c32 00F03A85 		beq	.L1378
2858:src/keys.c    **** 		State2.digval2 = ch;
 9928              		.loc 1 2858 9 is_stmt 1 view .LVU3085
2858:src/keys.c    **** 		State2.digval2 = ch;
 9929              		.loc 1 2858 12 is_stmt 0 view .LVU3086
 9930 0c36 012B     		cmp	r3, #1
 9931 0c38 00F0C285 		beq	.L1379
2863:src/keys.c    **** 
 9932              		.loc 1 2863 2 is_stmt 1 view .LVU3087
 9933              	.LBB1142:
 9934              	.LBI1142:
2796:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 9935              		.loc 1 2796 13 view .LVU3088
 9936              	.LBB1143:
2798:src/keys.c    **** 	if (! State2.alphas )
 9937              		.loc 1 2798 2 view .LVU3089
2798:src/keys.c    **** 	if (! State2.alphas )
 9938              		.loc 1 2798 15 is_stmt 0 view .LVU3090
 9939 0c3c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2799:src/keys.c    **** 		State2.alphashift = 0;
 9940              		.loc 1 2799 6 view .LVU3091
 9941 0c40 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2798:src/keys.c    **** 	if (! State2.alphas )
 9942              		.loc 1 2798 15 view .LVU3092
 9943 0c44 6FF3C302 		bfc	r2, #3, #1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 290


 9944 0c48 88F81520 		strb	r2, [r8, #21]
2799:src/keys.c    **** 		State2.alphashift = 0;
 9945              		.loc 1 2799 2 is_stmt 1 view .LVU3093
2799:src/keys.c    **** 		State2.alphashift = 0;
 9946              		.loc 1 2799 5 is_stmt 0 view .LVU3094
 9947 0c4c 13F00802 		ands	r2, r3, #8
2800:src/keys.c    **** }
 9948              		.loc 1 2800 3 is_stmt 1 view .LVU3095
2800:src/keys.c    **** }
 9949              		.loc 1 2800 21 is_stmt 0 view .LVU3096
 9950 0c50 04BF     		itt	eq
 9951 0c52 62F30413 		bfieq	r3, r2, #4, #1
 9952 0c56 88F81630 		strbeq	r3, [r8, #22]
 9953              	.LVL829:
 9954              	.L942:
2800:src/keys.c    **** }
 9955              		.loc 1 2800 21 view .LVU3097
 9956              	.LBE1143:
 9957              	.LBE1142:
2866:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9958              		.loc 1 2866 2 is_stmt 1 view .LVU3098
2868:src/keys.c    **** }
 9959              		.loc 1 2868 2 view .LVU3099
2866:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9960              		.loc 1 2866 21 is_stmt 0 view .LVU3100
 9961 0c5a 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2867:src/keys.c    **** 	return opcode;
 9962              		.loc 1 2867 17 view .LVU3101
 9963 0c5e B8F80810 		ldrh	r1, [r8, #8]
2867:src/keys.c    **** 	return opcode;
 9964              		.loc 1 2867 34 view .LVU3102
 9965 0c62 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2866:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9966              		.loc 1 2866 29 view .LVU3103
 9967 0c66 1B02     		lsls	r3, r3, #8
2866:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9968              		.loc 1 2866 18 view .LVU3104
 9969 0c68 03F57043 		add	r3, r3, #61440
2867:src/keys.c    **** 	return opcode;
 9970              		.loc 1 2867 9 view .LVU3105
 9971 0c6c 0B44     		add	r3, r3, r1
2867:src/keys.c    **** 	return opcode;
 9972              		.loc 1 2867 25 view .LVU3106
 9973 0c6e 03EB0243 		add	r3, r3, r2, lsl #16
2866:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9974              		.loc 1 2866 9 view .LVU3107
 9975 0c72 03EB0464 		add	r4, r3, r4, lsl #24
 9976              	.LVL830:
2868:src/keys.c    **** }
 9977              		.loc 1 2868 9 view .LVU3108
 9978 0c76 FFF7B3BB 		b	.L835
 9979              	.LVL831:
 9980              	.L1335:
2868:src/keys.c    **** }
 9981              		.loc 1 2868 9 view .LVU3109
 9982              	.LBE1153:
 9983              	.LBE1160:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 291


3301:src/keys.c    **** 		State2.arrow = 0;
 9984              		.loc 1 3301 3 is_stmt 1 view .LVU3110
 9985              	.LBB1161:
 9986              	.LBI1161:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9987              		.loc 1 121 13 view .LVU3111
 9988              	.LBB1162:
 122:src/keys.c    **** }
 9989              		.loc 1 122 2 view .LVU3112
 122:src/keys.c    **** }
 9990              		.loc 1 122 16 is_stmt 0 view .LVU3113
 9991 0c7a 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 9992              	.LVL832:
 122:src/keys.c    **** }
 9993              		.loc 1 122 16 view .LVU3114
 9994 0c7e 3368     		ldr	r3, [r6]
 9995 0c80 032C     		cmp	r4, #3
 9996              	.LBE1162:
 9997              	.LBE1161:
3302:src/keys.c    **** 		return STATE_UNFINISHED;
 9998              		.loc 1 3302 16 view .LVU3115
 9999 0c82 60F38202 		bfi	r2, r0, #2, #1
 10000              	.LBB1165:
 10001              	.LBB1163:
 122:src/keys.c    **** }
 10002              		.loc 1 122 16 view .LVU3116
 10003 0c86 18BF     		it	ne
 10004 0c88 0321     		movne	r1, #3
 10005              	.LBE1163:
 10006              	.LBE1165:
3302:src/keys.c    **** 		return STATE_UNFINISHED;
 10007              		.loc 1 3302 16 view .LVU3117
 10008 0c8a 88F81520 		strb	r2, [r8, #21]
 10009              	.LBB1166:
 10010              	.LBB1164:
 122:src/keys.c    **** }
 10011              		.loc 1 122 16 view .LVU3118
 10012 0c8e 88F81010 		strb	r1, [r8, #16]
 10013              	.LVL833:
 122:src/keys.c    **** }
 10014              		.loc 1 122 16 view .LVU3119
 10015              	.LBE1164:
 10016              	.LBE1166:
3302:src/keys.c    **** 		return STATE_UNFINISHED;
 10017              		.loc 1 3302 3 is_stmt 1 view .LVU3120
3303:src/keys.c    **** 	}
 10018              		.loc 1 3303 3 view .LVU3121
3303:src/keys.c    **** 	}
 10019              		.loc 1 3303 10 is_stmt 0 view .LVU3122
 10020 0c92 3324     		movs	r4, #51
 10021 0c94 FFF70FBA 		b	.L801
 10022              	.LVL834:
 10023              	.L1338:
 10024              	.LBB1167:
 10025              	.LBB814:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10026              		.loc 1 312 16 view .LVU3123
ARM GAS  /tmp/ccc9ZrJ3.s 			page 292


 10027 0c98 BBF1030F 		cmp	fp, #3
 10028 0c9c 3FF45EAF 		beq	.L1380
 315:src/keys.c    ****     /*
 10029              		.loc 1 315 3 is_stmt 1 view .LVU3124
 315:src/keys.c    ****     /*
 10030              		.loc 1 315 23 is_stmt 0 view .LVU3125
 10031 0ca0 0949     		ldr	r1, .L1409+16
 10032 0ca2 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 10033              		.loc 1 315 6 view .LVU3126
 10034 0ca6 1942     		tst	r1, r3
 10035 0ca8 3FF4E9AA 		beq	.L927
 10036 0cac 62E7     		b	.L920
 10037              	.LVL835:
 10038              	.L1367:
 315:src/keys.c    ****     /*
 10039              		.loc 1 315 6 view .LVU3127
 10040              	.LBE814:
 10041              	.LBE1167:
 10042              	.LBB1168:
 10043              	.LBB1071:
2912:src/keys.c    **** 			n = max;
 10044              		.loc 1 2912 3 is_stmt 1 view .LVU3128
2912:src/keys.c    **** 			n = max;
 10045              		.loc 1 2912 6 is_stmt 0 view .LVU3129
 10046 0cae 0A1F     		subs	r2, r1, #4
 10047              	.LVL836:
2912:src/keys.c    **** 			n = max;
 10048              		.loc 1 2912 6 view .LVU3130
 10049 0cb0 0129     		cmp	r1, #1
 10050 0cb2 18BF     		it	ne
 10051 0cb4 1346     		movne	r3, r2
 10052              	.LVL837:
2912:src/keys.c    **** 			n = max;
 10053              		.loc 1 2912 6 view .LVU3131
 10054 0cb6 85E6     		b	.L884
 10055              	.L1410:
 10056              		.align	2
 10057              	.L1409:
 10058 0cb8 00000000 		.word	main_ram
 10059 0cbc 00000000 		.word	.LANCHOR6
 10060 0cc0 00000000 		.word	.LANCHOR5
 10061 0cc4 00000000 		.word	.LANCHOR21
 10062 0cc8 00080800 		.word	526336
 10063 0ccc 00000000 		.word	.LANCHOR22
 10064 0cd0 00000000 		.word	.LANCHOR16
 10065 0cd4 00000000 		.word	.LANCHOR15
 10066 0cd8 000A4000 		.word	4196864
 10067              	.LVL838:
 10068              	.L1371:
2912:src/keys.c    **** 			n = max;
 10069              		.loc 1 2912 6 view .LVU3132
 10070              	.LBE1071:
 10071              	.LBE1168:
 10072              	.LBB1169:
 10073              	.LBB1104:
1646:src/keys.c    **** 	  if (!C_LOCK_ON) {
ARM GAS  /tmp/ccc9ZrJ3.s 			page 293


 10074              		.loc 1 1646 19 view .LVU3133
 10075 0cdc D04B     		ldr	r3, .L1411
 10076 0cde 1B68     		ldr	r3, [r3]
 10077 0ce0 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 10078 0ce4 5A06     		lsls	r2, r3, #25
 10079 0ce6 7FF5AFAE 		bpl	.L896
1647:src/keys.c    **** 	    set_menu (17);
 10080              		.loc 1 1647 4 is_stmt 1 view .LVU3134
1647:src/keys.c    **** 	    set_menu (17);
 10081              		.loc 1 1647 7 is_stmt 0 view .LVU3135
 10082 0cea 13F00104 		ands	r4, r3, #1
 10083              	.LVL839:
1647:src/keys.c    **** 	    set_menu (17);
 10084              		.loc 1 1647 7 view .LVU3136
 10085 0cee 40F0BE83 		bne	.L897
1648:src/keys.c    **** 	    display_current_menu();
 10086              		.loc 1 1648 6 is_stmt 1 view .LVU3137
 10087 0cf2 1120     		movs	r0, #17
 10088 0cf4 FFF7FEFF 		bl	set_menu
 10089              	.LVL840:
1649:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10090              		.loc 1 1649 6 view .LVU3138
 10091 0cf8 FFF7FEFF 		bl	display_current_menu
 10092              	.LVL841:
1650:src/keys.c    **** 	  }
 10093              		.loc 1 1650 6 view .LVU3139
1650:src/keys.c    **** 	  }
 10094              		.loc 1 1650 6 is_stmt 0 view .LVU3140
 10095              	.LBE1104:
 10096              	.LBE1169:
 10097              	.LBE1350:
 10098              	.LBE1425:
3628:src/keys.c    **** 	NonProgrammable = 0;
 10099              		.loc 1 3628 7 is_stmt 1 view .LVU3141
3628:src/keys.c    **** 	NonProgrammable = 0;
 10100              		.loc 1 3628 11 is_stmt 0 view .LVU3142
 10101 0cfc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 10102              		.loc 1 3628 10 view .LVU3143
 10103 0d00 5D06     		lsls	r5, r3, #25
 10104 0d02 00F10085 		bmi	.L898
 10105              	.LBB1426:
 10106              	.LBB1351:
 10107              	.LBB1170:
 10108              	.LBB1105:
1650:src/keys.c    **** 	  }
 10109              		.loc 1 1650 13 view .LVU3144
 10110 0d06 40F2C114 		movw	r4, #449
 10111              	.LVL842:
 10112              	.L899:
1650:src/keys.c    **** 	  }
 10113              		.loc 1 1650 13 view .LVU3145
 10114              	.LBE1105:
 10115              	.LBE1170:
 10116              	.LBE1351:
 10117              	.LBE1426:
3628:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 294


 10118              		.loc 1 3628 26 view .LVU3146
 10119 0d0a C64B     		ldr	r3, .L1411+4
 10120 0d0c 1A68     		ldr	r2, [r3]
 10121 0d0e 002A     		cmp	r2, #0
 10122 0d10 00F0F684 		beq	.L1381
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10123              		.loc 1 3629 2 is_stmt 1 view .LVU3147
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10124              		.loc 1 3629 18 is_stmt 0 view .LVU3148
 10125 0d14 0022     		movs	r2, #0
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10126              		.loc 1 3630 32 view .LVU3149
 10127 0d16 2046     		mov	r0, r4
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10128              		.loc 1 3629 18 view .LVU3150
 10129 0d18 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10130              		.loc 1 3630 2 is_stmt 1 view .LVU3151
 10131 0d1a 65E4     		b	.L1105
 10132              	.LVL843:
 10133              	.L1358:
 10134              	.LBB1427:
 10135              	.LBB1352:
 10136              	.LBB1171:
 10137              	.LBB1031:
1711:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10138              		.loc 1 1711 44 view .LVU3152
1711:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10139              		.loc 1 1711 52 is_stmt 0 view .LVU3153
 10140 0d1c 0120     		movs	r0, #1
 10141 0d1e FFF7FEFF 		bl	gtodot_digit
 10142              	.LVL844:
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10143              		.loc 1 1757 2 is_stmt 1 view .LVU3154
 10144              	.LBE1031:
 10145              	.LBE1171:
3278:src/keys.c    **** 
 10146              		.loc 1 3278 10 is_stmt 0 view .LVU3155
 10147 0d22 3324     		movs	r4, #51
 10148              	.LVL845:
3278:src/keys.c    **** 
 10149              		.loc 1 3278 10 view .LVU3156
 10150 0d24 3368     		ldr	r3, [r6]
 10151 0d26 FFF7C6B9 		b	.L801
 10152              	.LVL846:
 10153              	.L1359:
 10154              	.LBB1172:
 10155              	.LBB1032:
1712:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10156              		.loc 1 1712 44 is_stmt 1 view .LVU3157
1712:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10157              		.loc 1 1712 52 is_stmt 0 view .LVU3158
 10158 0d2a 0220     		movs	r0, #2
 10159 0d2c FFF7FEFF 		bl	gtodot_digit
 10160              	.LVL847:
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10161              		.loc 1 1757 2 is_stmt 1 view .LVU3159
ARM GAS  /tmp/ccc9ZrJ3.s 			page 295


 10162              	.LBE1032:
 10163              	.LBE1172:
3278:src/keys.c    **** 
 10164              		.loc 1 3278 10 is_stmt 0 view .LVU3160
 10165 0d30 3324     		movs	r4, #51
 10166              	.LVL848:
3278:src/keys.c    **** 
 10167              		.loc 1 3278 10 view .LVU3161
 10168 0d32 3368     		ldr	r3, [r6]
 10169 0d34 FFF7BFB9 		b	.L801
 10170              	.LVL849:
 10171              	.L869:
 10172              	.LBB1173:
 10173              	.LBB1014:
2358:src/keys.c    **** 	}
 10174              		.loc 1 2358 3 is_stmt 1 view .LVU3162
2358:src/keys.c    **** 	}
 10175              		.loc 1 2358 10 is_stmt 0 view .LVU3163
 10176 0d38 0AF12000 		add	r0, r10, #32
 10177 0d3c 4CEA0020 		orr	r0, ip, r0, lsl #8
 10178 0d40 0446     		mov	r4, r0
 10179              	.LVL850:
2358:src/keys.c    **** 	}
 10180              		.loc 1 2358 10 view .LVU3164
 10181 0d42 FFF76FBB 		b	.L862
 10182              	.LVL851:
 10183              	.L1368:
2358:src/keys.c    **** 	}
 10184              		.loc 1 2358 10 view .LVU3165
 10185              	.LBE1014:
 10186              	.LBE1173:
 10187              	.LBB1174:
 10188              	.LBB1072:
2916:src/keys.c    **** 			n = -2;
 10189              		.loc 1 2916 3 is_stmt 1 view .LVU3166
2916:src/keys.c    **** 			n = -2;
 10190              		.loc 1 2916 6 is_stmt 0 view .LVU3167
 10191 0d46 0239     		subs	r1, r1, #2
 10192              	.LVL852:
2917:src/keys.c    **** 	}
 10193              		.loc 1 2917 6 view .LVU3168
 10194 0d48 9942     		cmp	r1, r3
 10195 0d4a D4BF     		ite	le
 10196 0d4c 0B46     		movle	r3, r1
 10197              	.LVL853:
2917:src/keys.c    **** 	}
 10198              		.loc 1 2917 6 view .LVU3169
 10199 0d4e 6FF00103 		mvngt	r3, #1
 10200 0d52 37E6     		b	.L884
 10201              	.LVL854:
 10202              	.L1372:
2917:src/keys.c    **** 	}
 10203              		.loc 1 2917 6 view .LVU3170
 10204              	.LBE1072:
 10205              	.LBE1174:
 10206              	.LBB1175:
 10207              	.LBB1106:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 296


1667:src/keys.c    **** 
 10208              		.loc 1 1667 3 is_stmt 1 view .LVU3171
1667:src/keys.c    **** 
 10209              		.loc 1 1667 25 is_stmt 0 view .LVU3172
 10210 0d54 B44A     		ldr	r2, .L1411+8
 10211 0d56 0AEB4303 		add	r3, r10, r3, lsl #1
 10212 0d5a 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10213              	.LVL855:
1667:src/keys.c    **** 
 10214              		.loc 1 1667 25 view .LVU3173
 10215 0d5e FFF73FBB 		b	.L835
 10216              	.LVL856:
 10217              	.L1374:
1667:src/keys.c    **** 
 10218              		.loc 1 1667 25 view .LVU3174
 10219              	.LBE1106:
 10220              	.LBE1175:
3318:src/keys.c    **** 		if (is_bad_cmdline())
 10221              		.loc 1 3318 2 is_stmt 1 view .LVU3175
3318:src/keys.c    **** 		if (is_bad_cmdline())
 10222              		.loc 1 3318 5 is_stmt 0 view .LVU3176
 10223 0d62 002B     		cmp	r3, #0
 10224 0d64 7FF4B3AC 		bne	.L910
 10225 0d68 FFF78CBA 		b	.L931
 10226              	.LVL857:
 10227              	.L1360:
 10228              	.LBB1176:
 10229              	.LBB1033:
1713:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10230              		.loc 1 1713 44 is_stmt 1 view .LVU3177
1713:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10231              		.loc 1 1713 52 is_stmt 0 view .LVU3178
 10232 0d6c 0320     		movs	r0, #3
 10233 0d6e FFF7FEFF 		bl	gtodot_digit
 10234              	.LVL858:
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10235              		.loc 1 1757 2 is_stmt 1 view .LVU3179
 10236              	.LBE1033:
 10237              	.LBE1176:
3278:src/keys.c    **** 
 10238              		.loc 1 3278 10 is_stmt 0 view .LVU3180
 10239 0d72 3324     		movs	r4, #51
 10240              	.LVL859:
3278:src/keys.c    **** 
 10241              		.loc 1 3278 10 view .LVU3181
 10242 0d74 3368     		ldr	r3, [r6]
 10243 0d76 FFF79EB9 		b	.L801
 10244              	.LVL860:
 10245              	.L878:
 10246              	.LBB1177:
 10247              	.LBB1015:
2377:src/keys.c    **** 		return STATE_UNFINISHED;
 10248              		.loc 1 2377 3 is_stmt 1 view .LVU3182
 10249              	.LBB1008:
 10250              	.LBI1008:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10251              		.loc 1 552 13 view .LVU3183
ARM GAS  /tmp/ccc9ZrJ3.s 			page 297


 10252              	.LBB1009:
 553:src/keys.c    **** 		return;
 10253              		.loc 1 553 2 view .LVU3184
 553:src/keys.c    **** 		return;
 10254              		.loc 1 553 6 is_stmt 0 view .LVU3185
 10255 0d7a FFF7FEFF 		bl	is_bad_cmdline
 10256              	.LVL861:
 553:src/keys.c    **** 		return;
 10257              		.loc 1 553 5 view .LVU3186
 10258 0d7e 0446     		mov	r4, r0
 10259              	.LVL862:
 553:src/keys.c    **** 		return;
 10260              		.loc 1 553 5 view .LVU3187
 10261 0d80 0028     		cmp	r0, #0
 10262 0d82 7FF4B2AC 		bne	.L1312
 10263 0d86 5FFA8AF0 		uxtb	r0, r10
 10264 0d8a FFF7FEFF 		bl	init_arg.part.0
 10265              	.LVL863:
 10266              	.LBE1009:
 10267              	.LBE1008:
 10268              	.LBE1015:
 10269              	.LBE1177:
 10270              	.LBE1352:
 10271              	.LBE1427:
3402:src/keys.c    ****   //print_debug(60,c);
 10272              		.loc 1 3402 7 view .LVU3188
 10273 0d8e 2546     		mov	r5, r4
 10274 0d90 3368     		ldr	r3, [r6]
 10275              	.LBB1428:
 10276              	.LBB1353:
 10277              	.LBB1178:
 10278              	.LBB1016:
2378:src/keys.c    **** 
 10279              		.loc 1 2378 10 view .LVU3189
 10280 0d92 3324     		movs	r4, #51
 10281 0d94 FFF78FB9 		b	.L801
 10282              	.LVL864:
 10283              	.L1342:
2378:src/keys.c    **** 
 10284              		.loc 1 2378 10 view .LVU3190
 10285              	.LBE1016:
 10286              	.LBE1178:
3333:src/keys.c    **** 
 10287              		.loc 1 3333 3 is_stmt 1 view .LVU3191
 10288              	.LBB1179:
 10289              	.LBI1179:
2986:src/keys.c    **** 	unsigned int pc = State2.digval;
 10290              		.loc 1 2986 12 view .LVU3192
 10291              	.LBB1180:
2987:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10292              		.loc 1 2987 2 view .LVU3193
2989:src/keys.c    **** 	const int opcode = getprog(pc);
 10293              		.loc 1 2989 27 is_stmt 0 view .LVU3194
 10294 0d98 262C     		cmp	r4, #38
2987:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10295              		.loc 1 2987 15 view .LVU3195
 10296 0d9a B8F808A0 		ldrh	r10, [r8, #8]
ARM GAS  /tmp/ccc9ZrJ3.s 			page 298


 10297              	.LVL865:
2988:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10298              		.loc 1 2988 2 is_stmt 1 view .LVU3196
2989:src/keys.c    **** 	const int opcode = getprog(pc);
 10299              		.loc 1 2989 27 is_stmt 0 view .LVU3197
 10300 0d9e 00F08983 		beq	.L1149
 10301              	.LVL866:
 10302              	.LBB1181:
 10303              	.LBI1181:
 210:src/keys.c    **** {
 10304              		.loc 1 210 14 is_stmt 1 view .LVU3198
 10305              	.LBB1182:
 212:src/keys.c    ****     // K00 - K05
 10306              		.loc 1 212 3 view .LVU3199
 234:src/keys.c    **** }
 10307              		.loc 1 234 3 view .LVU3200
 10308              	.LBB1183:
 10309              	.LBI1183:
 131:src/keys.c    **** {
 10310              		.loc 1 131 12 view .LVU3201
 10311              	.LBB1184:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10312              		.loc 1 133 2 view .LVU3202
 143:src/keys.c    **** }
 10313              		.loc 1 143 2 view .LVU3203
 143:src/keys.c    **** }
 10314              		.loc 1 143 23 is_stmt 0 view .LVU3204
 10315 0da2 A24B     		ldr	r3, .L1411+12
 10316              	.LBE1184:
 10317              	.LBE1183:
 234:src/keys.c    **** }
 10318              		.loc 1 234 28 view .LVU3205
 10319 0da4 A24A     		ldr	r2, .L1411+16
 10320              	.LBB1186:
 10321              	.LBB1185:
 143:src/keys.c    **** }
 10322              		.loc 1 143 23 view .LVU3206
 10323 0da6 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10324              	.LBE1185:
 10325              	.LBE1186:
 234:src/keys.c    **** }
 10326              		.loc 1 234 10 view .LVU3207
 10327 0da8 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10328              	.LVL867:
 234:src/keys.c    **** }
 10329              		.loc 1 234 10 view .LVU3208
 10330              	.LBE1182:
 10331              	.LBE1181:
2989:src/keys.c    **** 	const int opcode = getprog(pc);
 10332              		.loc 1 2989 27 view .LVU3209
 10333 0dac 2BF0800B 		bic	fp, fp, #128
 10334              	.L951:
 10335              	.LVL868:
2990:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10336              		.loc 1 2990 2 is_stmt 1 view .LVU3210
2990:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10337              		.loc 1 2990 21 is_stmt 0 view .LVU3211
ARM GAS  /tmp/ccc9ZrJ3.s 			page 299


 10338 0db0 5046     		mov	r0, r10
 10339 0db2 FFF7FEFF 		bl	getprog
 10340              	.LVL869:
2991:src/keys.c    **** 	const int direct = State2.runmode;
 10341              		.loc 1 2991 2 is_stmt 1 view .LVU3212
2991:src/keys.c    **** 	const int direct = State2.runmode;
 10342              		.loc 1 2991 20 is_stmt 0 view .LVU3213
 10343 0db6 00F47040 		and	r0, r0, #61440
 10344              	.LVL870:
2991:src/keys.c    **** 	const int direct = State2.runmode;
 10345              		.loc 1 2991 63 view .LVU3214
 10346 0dba B0F5704F 		cmp	r0, #61440
 10347 0dbe 00F0E184 		beq	.L1382
 10348 0dc2 0022     		movs	r2, #0
 10349              	.L952:
 10350              	.LVL871:
2992:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10351              		.loc 1 2992 2 is_stmt 1 view .LVU3215
2992:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10352              		.loc 1 2992 27 is_stmt 0 view .LVU3216
 10353 0dc4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10354 0dc8 0192     		str	r2, [sp, #4]
 10355              	.LVL872:
2992:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10356              		.loc 1 2992 27 view .LVU3217
 10357 0dca C3F38013 		ubfx	r3, r3, #6, #1
 10358 0dce 0093     		str	r3, [sp]
 10359              	.LVL873:
2993:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10360              		.loc 1 2993 2 is_stmt 1 view .LVU3218
 10361              	.LBB1187:
 10362              	.LBI1187:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10363              		.loc 1 114 13 view .LVU3219
 10364              	.LBE1187:
 10365              	.LBE1180:
 10366              	.LBE1179:
 10367              	.LBE1353:
 10368              	.LBE1428:
 115:src/keys.c    **** }
 10369              		.loc 1 115 2 view .LVU3220
 10370              	.LBB1429:
 10371              	.LBB1354:
 10372              	.LBB1211:
 10373              	.LBB1206:
 10374              	.LBB1194:
 10375              	.LBB1188:
 10376              	.LBI1188:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10377              		.loc 1 104 20 view .LVU3221
 10378              	.LBB1189:
 105:src/keys.c    **** 	State2.shifts = shift;
 10379              		.loc 1 105 2 view .LVU3222
 10380              	.LBB1190:
 10381              	.LBI1190:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10382              		.loc 1 96 13 view .LVU3223
ARM GAS  /tmp/ccc9ZrJ3.s 			page 300


 10383              	.LBB1191:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10384              		.loc 1 97 2 view .LVU3224
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10385              		.loc 1 97 18 is_stmt 0 view .LVU3225
 10386 0dd0 FFF7FEFF 		bl	shift_down
 10387              	.LVL874:
  98:src/keys.c    **** }
 10388              		.loc 1 98 2 is_stmt 1 view .LVU3226
  98:src/keys.c    **** }
 10389              		.loc 1 98 52 is_stmt 0 view .LVU3227
 10390 0dd4 019A     		ldr	r2, [sp, #4]
 10391 0dd6 0346     		mov	r3, r0
 10392 0dd8 08B9     		cbnz	r0, .L953
 10393 0dda 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10394              	.L953:
 10395              	.LVL875:
  98:src/keys.c    **** }
 10396              		.loc 1 98 52 view .LVU3228
 10397              	.LBE1191:
 10398              	.LBE1190:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10399              		.loc 1 106 2 is_stmt 1 view .LVU3229
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10400              		.loc 1 106 16 is_stmt 0 view .LVU3230
 10401 0dde 0021     		movs	r1, #0
 10402              	.LBE1189:
 10403              	.LBE1188:
 10404              	.LBE1194:
2996:src/keys.c    **** 		// Digits take you to that segment
 10405              		.loc 1 2996 5 view .LVU3231
 10406 0de0 BBF1020F 		cmp	fp, #2
 10407              	.LBB1195:
 10408              	.LBB1193:
 10409              	.LBB1192:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10410              		.loc 1 106 16 view .LVU3232
 10411 0de4 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10412              		.loc 1 108 2 is_stmt 1 view .LVU3233
 10413              	.LVL876:
 108:src/keys.c    **** }
 10414              		.loc 1 108 2 is_stmt 0 view .LVU3234
 10415              	.LBE1192:
 10416              	.LBE1193:
 10417              	.LBE1195:
2994:src/keys.c    **** 
 10418              		.loc 1 2994 2 is_stmt 1 view .LVU3235
2996:src/keys.c    **** 		// Digits take you to that segment
 10419              		.loc 1 2996 2 view .LVU3236
2996:src/keys.c    **** 		// Digits take you to that segment
 10420              		.loc 1 2996 5 is_stmt 0 view .LVU3237
 10421 0de8 40F2BD84 		bls	.L1383
3005:src/keys.c    **** 
 10422              		.loc 1 3005 2 is_stmt 1 view .LVU3238
3005:src/keys.c    **** 
 10423              		.loc 1 3005 12 is_stmt 0 view .LVU3239
ARM GAS  /tmp/ccc9ZrJ3.s 			page 301


 10424 0dec 44EA0323 		orr	r3, r4, r3, lsl #8
 10425              	.LVL877:
3005:src/keys.c    **** 
 10426              		.loc 1 3005 2 view .LVU3240
 10427 0df0 272B     		cmp	r3, #39
 10428 0df2 00F3BD80 		bgt	.L956
 10429 0df6 042B     		cmp	r3, #4
 10430 0df8 7FF777AC 		ble	.L1312
 10431 0dfc 053B     		subs	r3, r3, #5
 10432 0dfe 222B     		cmp	r3, #34
 10433 0e00 3FF673AC 		bhi	.L1312
 10434 0e04 01A1     		adr	r1, .L965
 10435 0e06 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10436 0e0a 00BF     		.p2align 2
 10437              	.L965:
 10438 0e0c EB0E0000 		.word	.L970+1
 10439 0e10 F70E0000 		.word	.L969+1
 10440 0e14 F70E0000 		.word	.L969+1
 10441 0e18 EB060000 		.word	.L1312+1
 10442 0e1c EB060000 		.word	.L1312+1
 10443 0e20 EB060000 		.word	.L1312+1
 10444 0e24 EB060000 		.word	.L1312+1
 10445 0e28 990E0000 		.word	.L1152+1
 10446 0e2c EB060000 		.word	.L1312+1
 10447 0e30 EB060000 		.word	.L1312+1
 10448 0e34 EB060000 		.word	.L1312+1
 10449 0e38 190F0000 		.word	.L968+1
 10450 0e3c EB060000 		.word	.L1312+1
 10451 0e40 050F0000 		.word	.L967+1
 10452 0e44 EB060000 		.word	.L1312+1
 10453 0e48 EB060000 		.word	.L1312+1
 10454 0e4c EB060000 		.word	.L1312+1
 10455 0e50 EB060000 		.word	.L1312+1
 10456 0e54 EB060000 		.word	.L1312+1
 10457 0e58 D50E0000 		.word	.L966+1
 10458 0e5c EB060000 		.word	.L1312+1
 10459 0e60 EB060000 		.word	.L1312+1
 10460 0e64 EB060000 		.word	.L1312+1
 10461 0e68 EB060000 		.word	.L1312+1
 10462 0e6c EB060000 		.word	.L1312+1
 10463 0e70 EB060000 		.word	.L1312+1
 10464 0e74 EB060000 		.word	.L1312+1
 10465 0e78 EB060000 		.word	.L1312+1
 10466 0e7c EB060000 		.word	.L1312+1
 10467 0e80 EB060000 		.word	.L1312+1
 10468 0e84 EB060000 		.word	.L1312+1
 10469 0e88 EB060000 		.word	.L1312+1
 10470 0e8c EB060000 		.word	.L1312+1
 10471 0e90 EB060000 		.word	.L1312+1
 10472 0e94 330F0000 		.word	.L964+1
 10473              		.p2align 1
 10474              	.L1152:
2994:src/keys.c    **** 
 10475              		.loc 1 2994 6 view .LVU3241
 10476 0e98 3324     		movs	r4, #51
 10477              	.LVL878:
 10478              	.L962:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 302


3027:src/keys.c    **** 		break;
 10479              		.loc 1 3027 3 is_stmt 1 view .LVU3242
 10480 0e9a 5046     		mov	r0, r10
 10481 0e9c FFF7FEFF 		bl	set_pc
 10482              	.LVL879:
3028:src/keys.c    **** 
 10483              		.loc 1 3028 3 view .LVU3243
 10484              	.L974:
3081:src/keys.c    **** 	State2.labellist = 0;
 10485              		.loc 1 3081 2 view .LVU3244
3082:src/keys.c    **** 	return check_confirm(op);
 10486              		.loc 1 3082 19 is_stmt 0 view .LVU3245
 10487 0ea0 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3081:src/keys.c    **** 	State2.labellist = 0;
 10488              		.loc 1 3081 16 view .LVU3246
 10489 0ea4 0022     		movs	r2, #0
 10490              	.LBB1196:
 10491              	.LBB1197:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10492              		.loc 1 705 5 view .LVU3247
 10493 0ea6 C4F30723 		ubfx	r3, r4, #8, #8
 10494              	.LBE1197:
 10495              	.LBE1196:
3082:src/keys.c    **** 	return check_confirm(op);
 10496              		.loc 1 3082 19 view .LVU3248
 10497 0eaa 62F38201 		bfi	r1, r2, #2, #1
 10498              	.LBB1202:
 10499              	.LBB1198:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10500              		.loc 1 705 5 view .LVU3249
 10501 0eae 012B     		cmp	r3, #1
 10502              	.LBE1198:
 10503              	.LBE1202:
3082:src/keys.c    **** 	return check_confirm(op);
 10504              		.loc 1 3082 19 view .LVU3250
 10505 0eb0 88F81710 		strb	r1, [r8, #23]
3081:src/keys.c    **** 	State2.labellist = 0;
 10506              		.loc 1 3081 16 view .LVU3251
 10507 0eb4 A8F80820 		strh	r2, [r8, #8]	@ movhi
3082:src/keys.c    **** 	return check_confirm(op);
 10508              		.loc 1 3082 2 is_stmt 1 view .LVU3252
3083:src/keys.c    **** }
 10509              		.loc 1 3083 2 view .LVU3253
 10510              	.LVL880:
 10511              	.LBB1203:
 10512              	.LBI1196:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10513              		.loc 1 704 12 view .LVU3254
 10514              	.LBB1199:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10515              		.loc 1 705 2 view .LVU3255
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10516              		.loc 1 705 5 is_stmt 0 view .LVU3256
 10517 0eb8 7FF492AA 		bne	.L835
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10518              		.loc 1 705 5 view .LVU3257
 10519 0ebc 2046     		mov	r0, r4
ARM GAS  /tmp/ccc9ZrJ3.s 			page 303


 10520 0ebe FFF7FEFF 		bl	check_confirm.part.0
 10521              	.LVL881:
 10522 0ec2 0446     		mov	r4, r0
 10523              	.LVL882:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10524              		.loc 1 705 5 view .LVU3258
 10525 0ec4 FFF78CBA 		b	.L835
 10526              	.LVL883:
 10527              	.L959:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10528              		.loc 1 705 5 view .LVU3259
 10529              	.LBE1199:
 10530              	.LBE1203:
3012:src/keys.c    **** 	case K_DOWN:				// Find next label
 10531              		.loc 1 3012 3 is_stmt 1 view .LVU3260
3012:src/keys.c    **** 	case K_DOWN:				// Find next label
 10532              		.loc 1 3012 8 is_stmt 0 view .LVU3261
 10533 0ec8 5046     		mov	r0, r10
 10534 0eca 0122     		movs	r2, #1
 10535 0ecc 0021     		movs	r1, #0
 10536 0ece FFF7FEFF 		bl	advance_to_next_label
 10537              	.LVL884:
 10538 0ed2 8246     		mov	r10, r0
 10539              	.LVL885:
 10540              	.L966:
3015:src/keys.c    **** 		return STATE_UNFINISHED;
 10541              		.loc 1 3015 3 is_stmt 1 view .LVU3262
3015:src/keys.c    **** 		return STATE_UNFINISHED;
 10542              		.loc 1 3015 19 is_stmt 0 view .LVU3263
 10543 0ed4 5046     		mov	r0, r10
 10544 0ed6 0022     		movs	r2, #0
 10545 0ed8 0121     		movs	r1, #1
 10546 0eda FFF7FEFF 		bl	advance_to_next_label
 10547              	.LVL886:
3016:src/keys.c    **** 
 10548              		.loc 1 3016 10 view .LVU3264
 10549 0ede 3324     		movs	r4, #51
 10550 0ee0 3368     		ldr	r3, [r6]
3015:src/keys.c    **** 		return STATE_UNFINISHED;
 10551              		.loc 1 3015 17 view .LVU3265
 10552 0ee2 A8F80800 		strh	r0, [r8, #8]	@ movhi
3016:src/keys.c    **** 
 10553              		.loc 1 3016 3 is_stmt 1 view .LVU3266
3016:src/keys.c    **** 
 10554              		.loc 1 3016 10 is_stmt 0 view .LVU3267
 10555 0ee6 FFF7E6B8 		b	.L801
 10556              	.LVL887:
 10557              	.L970:
 10558              	.L975:
3045:src/keys.c    **** 		goto xeq_or_gto;
 10559              		.loc 1 3045 3 is_stmt 1 view .LVU3268
3045:src/keys.c    **** 		goto xeq_or_gto;
 10560              		.loc 1 3045 6 is_stmt 0 view .LVU3269
 10561 0eea 02F50074 		add	r4, r2, #512
 10562              	.LVL888:
3046:src/keys.c    **** 
 10563              		.loc 1 3046 3 is_stmt 1 view .LVU3270
ARM GAS  /tmp/ccc9ZrJ3.s 			page 304


3051:src/keys.c    **** 			break;
 10564              		.loc 1 3051 3 view .LVU3271
3051:src/keys.c    **** 			break;
 10565              		.loc 1 3051 6 is_stmt 0 view .LVU3272
 10566 0eee 002A     		cmp	r2, #0
 10567 0ef0 D6D1     		bne	.L974
 10568 0ef2 FFF7FABB 		b	.L1312
 10569              	.LVL889:
 10570              	.L969:
3037:src/keys.c    **** 	  //#endif
 10571              		.loc 1 3037 3 is_stmt 1 view .LVU3273
3037:src/keys.c    **** 	  //#endif
 10572              		.loc 1 3037 38 is_stmt 0 view .LVU3274
 10573 0ef6 062C     		cmp	r4, #6
 10574 0ef8 40F2B114 		movw	r4, #433
 10575              	.LVL890:
3037:src/keys.c    **** 	  //#endif
 10576              		.loc 1 3037 38 view .LVU3275
 10577 0efc 08BF     		it	eq
 10578 0efe 4FF4D974 		moveq	r4, #434
 10579 0f02 CAE7     		b	.L962
 10580              	.LVL891:
 10581              	.L967:
3019:src/keys.c    **** 		return STATE_UNFINISHED;
 10582              		.loc 1 3019 3 is_stmt 1 view .LVU3276
3019:src/keys.c    **** 		return STATE_UNFINISHED;
 10583              		.loc 1 3019 19 is_stmt 0 view .LVU3277
 10584 0f04 5046     		mov	r0, r10
 10585 0f06 0021     		movs	r1, #0
 10586 0f08 FFF7FEFF 		bl	advance_to_previous_label
 10587              	.LVL892:
3020:src/keys.c    **** 
 10588              		.loc 1 3020 10 view .LVU3278
 10589 0f0c 3324     		movs	r4, #51
 10590              	.LVL893:
3020:src/keys.c    **** 
 10591              		.loc 1 3020 10 view .LVU3279
 10592 0f0e 3368     		ldr	r3, [r6]
3019:src/keys.c    **** 		return STATE_UNFINISHED;
 10593              		.loc 1 3019 17 view .LVU3280
 10594 0f10 A8F80800 		strh	r0, [r8, #8]	@ movhi
3020:src/keys.c    **** 
 10595              		.loc 1 3020 3 is_stmt 1 view .LVU3281
3020:src/keys.c    **** 
 10596              		.loc 1 3020 10 is_stmt 0 view .LVU3282
 10597 0f14 FFF7CFB8 		b	.L801
 10598              	.LVL894:
 10599              	.L968:
3081:src/keys.c    **** 	State2.labellist = 0;
 10600              		.loc 1 3081 2 is_stmt 1 view .LVU3283
3082:src/keys.c    **** 	return check_confirm(op);
 10601              		.loc 1 3082 19 is_stmt 0 view .LVU3284
 10602 0f18 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10603 0f1c 3368     		ldr	r3, [r6]
3081:src/keys.c    **** 	State2.labellist = 0;
 10604              		.loc 1 3081 16 view .LVU3285
 10605 0f1e 0022     		movs	r2, #0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 305


3082:src/keys.c    **** 	return check_confirm(op);
 10606              		.loc 1 3082 19 view .LVU3286
 10607 0f20 62F38201 		bfi	r1, r2, #2, #1
 10608 0f24 88F81710 		strb	r1, [r8, #23]
3081:src/keys.c    **** 	State2.labellist = 0;
 10609              		.loc 1 3081 16 view .LVU3287
 10610 0f28 A8F80820 		strh	r2, [r8, #8]	@ movhi
3082:src/keys.c    **** 	return check_confirm(op);
 10611              		.loc 1 3082 2 is_stmt 1 view .LVU3288
3083:src/keys.c    **** }
 10612              		.loc 1 3083 2 view .LVU3289
 10613              	.LVL895:
 10614              	.LBB1204:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10615              		.loc 1 704 12 view .LVU3290
 10616              	.LBB1200:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10617              		.loc 1 705 2 view .LVU3291
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10618              		.loc 1 705 2 is_stmt 0 view .LVU3292
 10619              	.LBE1200:
 10620              	.LBE1204:
 10621              	.LBE1206:
 10622              	.LBE1211:
 10623              	.LBE1354:
 10624              	.LBE1429:
3592:src/keys.c    ****     case STATE_SST:
 10625              		.loc 1 3592 5 is_stmt 1 view .LVU3293
 10626              	.LBB1430:
 10627              	.LBB1355:
 10628              	.LBB1212:
 10629              	.LBB1207:
2994:src/keys.c    **** 
 10630              		.loc 1 2994 6 is_stmt 0 view .LVU3294
 10631 0f2c 3324     		movs	r4, #51
 10632 0f2e FFF7C2B8 		b	.L801
 10633              	.LVL896:
 10634              	.L964:
3067:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10635              		.loc 1 3067 3 is_stmt 1 view .LVU3295
3067:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10636              		.loc 1 3067 6 is_stmt 0 view .LVU3296
 10637 0f32 009B     		ldr	r3, [sp]
 10638 0f34 002B     		cmp	r3, #0
 10639 0f36 3FF4D8AB 		beq	.L1312
3067:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10640              		.loc 1 3067 14 view .LVU3297
 10641 0f3a 002A     		cmp	r2, #0
 10642 0f3c 3FF4D5AB 		beq	.L1312
3068:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10643              		.loc 1 3068 4 is_stmt 1 view .LVU3298
 10644 0f40 5146     		mov	r1, r10
 10645 0f42 0120     		movs	r0, #1
 10646 0f44 FFF7FEFF 		bl	cmdgtocommon
 10647              	.LVL897:
3069:src/keys.c    **** 			break;
 10648              		.loc 1 3069 4 view .LVU3299
ARM GAS  /tmp/ccc9ZrJ3.s 			page 306


3070:src/keys.c    **** 		}
 10649              		.loc 1 3070 4 view .LVU3300
3081:src/keys.c    **** 	State2.labellist = 0;
 10650              		.loc 1 3081 2 view .LVU3301
3082:src/keys.c    **** 	return check_confirm(op);
 10651              		.loc 1 3082 19 is_stmt 0 view .LVU3302
 10652 0f48 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3081:src/keys.c    **** 	State2.labellist = 0;
 10653              		.loc 1 3081 16 view .LVU3303
 10654 0f4c 0023     		movs	r3, #0
3082:src/keys.c    **** 	return check_confirm(op);
 10655              		.loc 1 3082 19 view .LVU3304
 10656 0f4e 63F38202 		bfi	r2, r3, #2, #1
 10657 0f52 88F81720 		strb	r2, [r8, #23]
3081:src/keys.c    **** 	State2.labellist = 0;
 10658              		.loc 1 3081 16 view .LVU3305
 10659 0f56 A8F80830 		strh	r3, [r8, #8]	@ movhi
3082:src/keys.c    **** 	return check_confirm(op);
 10660              		.loc 1 3082 2 is_stmt 1 view .LVU3306
3083:src/keys.c    **** }
 10661              		.loc 1 3083 2 view .LVU3307
 10662              	.LVL898:
 10663              	.LBB1205:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10664              		.loc 1 704 12 view .LVU3308
 10665              	.LBB1201:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10666              		.loc 1 705 2 view .LVU3309
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10667              		.loc 1 705 2 is_stmt 0 view .LVU3310
 10668              	.LBE1201:
 10669              	.LBE1205:
 10670              	.LBE1207:
 10671              	.LBE1212:
 10672              	.LBE1355:
 10673              	.LBE1430:
3592:src/keys.c    ****     case STATE_SST:
 10674              		.loc 1 3592 5 is_stmt 1 view .LVU3311
 10675 0f5a FFF7F1B9 		b	.L811
 10676              	.LVL899:
 10677              	.L1135:
 10678              	.LBB1431:
 10679              	.LBB1356:
 10680              	.LBB1213:
 10681              	.LBB1073:
 10682              	.LBB1067:
2924:src/keys.c    **** 		if (nn <= 9)
 10683              		.loc 1 2924 7 is_stmt 0 view .LVU3312
 10684 0f5e 1346     		mov	r3, r2
 10685              	.LVL900:
2924:src/keys.c    **** 		if (nn <= 9)
 10686              		.loc 1 2924 7 view .LVU3313
 10687 0f60 30E5     		b	.L884
 10688              	.LVL901:
 10689              	.L1361:
2924:src/keys.c    **** 		if (nn <= 9)
 10690              		.loc 1 2924 7 view .LVU3314
ARM GAS  /tmp/ccc9ZrJ3.s 			page 307


 10691              	.LBE1067:
 10692              	.LBE1073:
 10693              	.LBE1213:
 10694              	.LBB1214:
 10695              	.LBB1034:
1714:src/keys.c    **** #endif
 10696              		.loc 1 1714 44 is_stmt 1 view .LVU3315
1714:src/keys.c    **** #endif
 10697              		.loc 1 1714 52 is_stmt 0 view .LVU3316
 10698 0f62 0420     		movs	r0, #4
 10699 0f64 FFF7FEFF 		bl	gtodot_digit
 10700              	.LVL902:
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10701              		.loc 1 1757 2 is_stmt 1 view .LVU3317
 10702              	.LBE1034:
 10703              	.LBE1214:
3278:src/keys.c    **** 
 10704              		.loc 1 3278 10 is_stmt 0 view .LVU3318
 10705 0f68 3324     		movs	r4, #51
 10706              	.LVL903:
3278:src/keys.c    **** 
 10707              		.loc 1 3278 10 view .LVU3319
 10708 0f6a 3368     		ldr	r3, [r6]
 10709 0f6c FFF7A3B8 		b	.L801
 10710              	.LVL904:
 10711              	.L956:
 10712              	.LBB1215:
 10713              	.LBB1208:
3005:src/keys.c    **** 
 10714              		.loc 1 3005 2 view .LVU3320
 10715 0f70 B3F58C7F 		cmp	r3, #280
 10716 0f74 47DC     		bgt	.L971
 10717 0f76 B3F5827F 		cmp	r3, #260
 10718 0f7a 7FF7B6AB 		ble	.L1312
 10719 0f7e 6FF48274 		mvn	r4, #260
 10720              	.LVL905:
3005:src/keys.c    **** 
 10721              		.loc 1 3005 2 view .LVU3321
 10722 0f82 2344     		add	r3, r3, r4
 10723 0f84 132B     		cmp	r3, #19
 10724 0f86 3FF6B0AB 		bhi	.L1312
 10725 0f8a 01A1     		adr	r1, .L960
 10726 0f8c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10727              		.p2align 2
 10728              	.L960:
 10729 0f90 E70F0000 		.word	.L963+1
 10730 0f94 EB060000 		.word	.L1312+1
 10731 0f98 EB060000 		.word	.L1312+1
 10732 0f9c EB060000 		.word	.L1312+1
 10733 0fa0 EB060000 		.word	.L1312+1
 10734 0fa4 EB060000 		.word	.L1312+1
 10735 0fa8 EB060000 		.word	.L1312+1
 10736 0fac EB060000 		.word	.L1312+1
 10737 0fb0 EB060000 		.word	.L1312+1
 10738 0fb4 EB060000 		.word	.L1312+1
 10739 0fb8 EB060000 		.word	.L1312+1
 10740 0fbc E10F0000 		.word	.L1151+1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 308


 10741 0fc0 EB060000 		.word	.L1312+1
 10742 0fc4 F50F0000 		.word	.L961+1
 10743 0fc8 EB060000 		.word	.L1312+1
 10744 0fcc EB060000 		.word	.L1312+1
 10745 0fd0 EB060000 		.word	.L1312+1
 10746 0fd4 EB060000 		.word	.L1312+1
 10747 0fd8 EB060000 		.word	.L1312+1
 10748 0fdc C90E0000 		.word	.L959+1
 10749              		.p2align 1
 10750              	.L1151:
 10751 0fe0 40F24314 		movw	r4, #323
 10752 0fe4 59E7     		b	.L962
 10753              	.L963:
3049:src/keys.c    **** 	xeq_or_gto:
 10754              		.loc 1 3049 3 is_stmt 1 view .LVU3322
3049:src/keys.c    **** 	xeq_or_gto:
 10755              		.loc 1 3049 6 is_stmt 0 view .LVU3323
 10756 0fe6 02F54074 		add	r4, r2, #768
 10757              	.LVL906:
3051:src/keys.c    **** 			break;
 10758              		.loc 1 3051 3 is_stmt 1 view .LVU3324
3051:src/keys.c    **** 			break;
 10759              		.loc 1 3051 6 is_stmt 0 view .LVU3325
 10760 0fea 002A     		cmp	r2, #0
 10761 0fec 7FF458AF 		bne	.L974
 10762 0ff0 FFF77BBB 		b	.L1312
 10763              	.LVL907:
 10764              	.L961:
3008:src/keys.c    **** 		goto next;
 10765              		.loc 1 3008 3 is_stmt 1 view .LVU3326
3008:src/keys.c    **** 		goto next;
 10766              		.loc 1 3008 8 is_stmt 0 view .LVU3327
 10767 0ff4 5046     		mov	r0, r10
 10768 0ff6 0121     		movs	r1, #1
 10769 0ff8 FFF7FEFF 		bl	advance_to_previous_label
 10770              	.LVL908:
 10771 0ffc 0121     		movs	r1, #1
 10772 0ffe FFF7FEFF 		bl	advance_to_previous_label
 10773              	.LVL909:
 10774 1002 8246     		mov	r10, r0
 10775              	.LVL910:
3009:src/keys.c    **** 
 10776              		.loc 1 3009 3 is_stmt 1 view .LVU3328
 10777 1004 66E7     		b	.L966
 10778              	.LVL911:
 10779              	.L971:
3005:src/keys.c    **** 
 10780              		.loc 1 3005 2 is_stmt 0 view .LVU3329
 10781 1006 40F22732 		movw	r2, #807
 10782 100a 9342     		cmp	r3, r2
 10783 100c 7FF46DAB 		bne	.L1312
3075:src/keys.c    **** 		goto set_pc_and_exit;
 10784              		.loc 1 3075 3 is_stmt 1 view .LVU3330
3075:src/keys.c    **** 		goto set_pc_and_exit;
 10785              		.loc 1 3075 18 is_stmt 0 view .LVU3331
 10786 1010 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10787 1014 61F38613 		bfi	r3, r1, #6, #1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 309


 10788 1018 88F81630 		strb	r3, [r8, #22]
3076:src/keys.c    **** 
 10789              		.loc 1 3076 3 is_stmt 1 view .LVU3332
2994:src/keys.c    **** 
 10790              		.loc 1 2994 6 is_stmt 0 view .LVU3333
 10791 101c 3324     		movs	r4, #51
 10792              	.LVL912:
3076:src/keys.c    **** 
 10793              		.loc 1 3076 3 view .LVU3334
 10794 101e 3CE7     		b	.L962
 10795              	.L1412:
 10796              		.align	2
 10797              	.L1411:
 10798 1020 00000000 		.word	main_ram
 10799 1024 00000000 		.word	NonProgrammable
 10800 1028 00000000 		.word	.LANCHOR20
 10801 102c 00000000 		.word	.LANCHOR6
 10802 1030 00000000 		.word	.LANCHOR5
 10803              	.LVL913:
 10804              	.L1343:
3076:src/keys.c    **** 
 10805              		.loc 1 3076 3 view .LVU3335
 10806              	.LBE1208:
 10807              	.LBE1215:
3336:src/keys.c    **** 
 10808              		.loc 1 3336 3 is_stmt 1 view .LVU3336
 10809              	.LBB1216:
 10810              	.LBI1216:
3117:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 10811              		.loc 1 3117 12 view .LVU3337
 10812              	.LBB1217:
3118:src/keys.c    **** 	enum shifts shift = reset_shift();
 10813              		.loc 1 3118 2 view .LVU3338
 10814              	.LBB1218:
 10815              	.LBI1218:
 210:src/keys.c    **** {
 10816              		.loc 1 210 14 view .LVU3339
 10817              	.LBB1219:
 212:src/keys.c    ****     // K00 - K05
 10818              		.loc 1 212 3 view .LVU3340
 234:src/keys.c    **** }
 10819              		.loc 1 234 3 view .LVU3341
 10820              	.LBB1220:
 10821              	.LBI1220:
 131:src/keys.c    **** {
 10822              		.loc 1 131 12 view .LVU3342
 10823              	.LBB1221:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10824              		.loc 1 133 2 view .LVU3343
 143:src/keys.c    **** }
 10825              		.loc 1 143 2 view .LVU3344
 143:src/keys.c    **** }
 10826              		.loc 1 143 23 is_stmt 0 view .LVU3345
 10827 1034 AA4B     		ldr	r3, .L1413
 10828              	.LBE1221:
 10829              	.LBE1220:
 234:src/keys.c    **** }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 310


 10830              		.loc 1 234 28 view .LVU3346
 10831 1036 AB4A     		ldr	r2, .L1413+4
 10832              	.LBB1223:
 10833              	.LBB1222:
 143:src/keys.c    **** }
 10834              		.loc 1 143 23 view .LVU3347
 10835 1038 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10836              	.LBE1222:
 10837              	.LBE1223:
 234:src/keys.c    **** }
 10838              		.loc 1 234 10 view .LVU3348
 10839 103a 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10840              	.LVL914:
 234:src/keys.c    **** }
 10841              		.loc 1 234 10 view .LVU3349
 10842              	.LBE1219:
 10843              	.LBE1218:
 10844              	.LBB1224:
 10845              	.LBB1225:
 10846              	.LBB1226:
 10847              	.LBB1227:
 10848              	.LBB1228:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10849              		.loc 1 97 18 view .LVU3350
 10850 103e FFF7FEFF 		bl	shift_down
 10851              	.LVL915:
 10852              	.LBE1228:
 10853              	.LBE1227:
 10854              	.LBE1226:
 10855              	.LBE1225:
 10856              	.LBE1224:
3118:src/keys.c    **** 	enum shifts shift = reset_shift();
 10857              		.loc 1 3118 15 view .LVU3351
 10858 1042 2BF0800B 		bic	fp, fp, #128
 10859              	.LVL916:
3119:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 10860              		.loc 1 3119 2 is_stmt 1 view .LVU3352
 10861              	.LBB1237:
 10862              	.LBI1224:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10863              		.loc 1 114 13 view .LVU3353
 10864              	.LBE1237:
 10865              	.LBE1217:
 10866              	.LBE1216:
 10867              	.LBE1356:
 10868              	.LBE1431:
 115:src/keys.c    **** }
 10869              		.loc 1 115 2 view .LVU3354
 10870              	.LBB1432:
 10871              	.LBB1357:
 10872              	.LBB1251:
 10873              	.LBB1244:
 10874              	.LBB1238:
 10875              	.LBB1234:
 10876              	.LBI1225:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10877              		.loc 1 104 20 view .LVU3355
ARM GAS  /tmp/ccc9ZrJ3.s 			page 311


 10878              	.LBB1231:
 105:src/keys.c    **** 	State2.shifts = shift;
 10879              		.loc 1 105 2 view .LVU3356
 10880              	.LBB1230:
 10881              	.LBI1227:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10882              		.loc 1 96 13 view .LVU3357
 10883              	.LBB1229:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10884              		.loc 1 97 2 view .LVU3358
  98:src/keys.c    **** }
 10885              		.loc 1 98 2 view .LVU3359
  98:src/keys.c    **** }
 10886              		.loc 1 98 52 is_stmt 0 view .LVU3360
 10887 1046 8146     		mov	r9, r0
 10888 1048 08B9     		cbnz	r0, .L978
 10889 104a 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 10890              	.L978:
 10891              	.LVL917:
  98:src/keys.c    **** }
 10892              		.loc 1 98 52 view .LVU3361
 10893              	.LBE1229:
 10894              	.LBE1230:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10895              		.loc 1 106 2 is_stmt 1 view .LVU3362
 10896              	.LBE1231:
 10897              	.LBE1234:
 10898              	.LBE1238:
3120:src/keys.c    **** 	const int g_max = global_regs();
 10899              		.loc 1 3120 31 is_stmt 0 view .LVU3363
 10900 104e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10901              	.LBB1239:
 10902              	.LBB1235:
 10903              	.LBB1232:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10904              		.loc 1 106 16 view .LVU3364
 10905 1052 0022     		movs	r2, #0
 10906              	.LBE1232:
 10907              	.LBE1235:
 10908              	.LBE1239:
3120:src/keys.c    **** 	const int g_max = global_regs();
 10909              		.loc 1 3120 46 view .LVU3365
 10910 1054 D907     		lsls	r1, r3, #31
 10911              	.LBB1240:
 10912              	.LBB1236:
 10913              	.LBB1233:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10914              		.loc 1 106 16 view .LVU3366
 10915 1056 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 10916              		.loc 1 108 2 is_stmt 1 view .LVU3367
 10917              	.LVL918:
 108:src/keys.c    **** }
 10918              		.loc 1 108 2 is_stmt 0 view .LVU3368
 10919              	.LBE1233:
 10920              	.LBE1236:
 10921              	.LBE1240:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 312


3120:src/keys.c    **** 	const int g_max = global_regs();
 10922              		.loc 1 3120 2 is_stmt 1 view .LVU3369
3120:src/keys.c    **** 	const int g_max = global_regs();
 10923              		.loc 1 3120 46 is_stmt 0 view .LVU3370
 10924 105a 00F10A83 		bmi	.L1384
 10925 105e 4FF0700A 		mov	r10, #112
 10926              	.L979:
 10927              	.LVL919:
3121:src/keys.c    **** 
 10928              		.loc 1 3121 2 is_stmt 1 view .LVU3371
3121:src/keys.c    **** 
 10929              		.loc 1 3121 20 is_stmt 0 view .LVU3372
 10930 1062 FFF7FEFF 		bl	global_regs
 10931              	.LVL920:
3123:src/keys.c    **** 		if (local_regs())
 10932              		.loc 1 3123 2 is_stmt 1 view .LVU3373
3123:src/keys.c    **** 		if (local_regs())
 10933              		.loc 1 3123 5 is_stmt 0 view .LVU3374
 10934 1066 BBF1700F 		cmp	fp, #112
 10935 106a 00F07084 		beq	.L1385
3129:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10936              		.loc 1 3129 7 is_stmt 1 view .LVU3375
3129:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10937              		.loc 1 3129 10 is_stmt 0 view .LVU3376
 10938 106e BBF1090F 		cmp	fp, #9
 10939 1072 40F20283 		bls	.L1386
3136:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10940              		.loc 1 3136 7 is_stmt 1 view .LVU3377
3136:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10941              		.loc 1 3136 29 is_stmt 0 view .LVU3378
 10942 1076 09F1FF33 		add	r3, r9, #-1
3136:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10943              		.loc 1 3136 10 view .LVU3379
 10944 107a DBB2     		uxtb	r3, r3
 10945 107c 012B     		cmp	r3, #1
 10946 107e 40F26D82 		bls	.L1387
 10947              	.L987:
3140:src/keys.c    **** 		State2.digval = n;
 10948              		.loc 1 3140 7 is_stmt 1 view .LVU3380
3140:src/keys.c    **** 		State2.digval = n;
 10949              		.loc 1 3140 10 is_stmt 0 view .LVU3381
 10950 1082 BBF17F0F 		cmp	fp, #127
 10951 1086 40F03083 		bne	.L1388
3145:src/keys.c    **** 	case K_DOWN:
 10952              		.loc 1 3145 2 is_stmt 1 view .LVU3382
 10953 108a 073C     		subs	r4, r4, #7
 10954              	.LVL921:
3145:src/keys.c    **** 	case K_DOWN:
 10955              		.loc 1 3145 2 is_stmt 0 view .LVU3383
 10956 108c 112C     		cmp	r4, #17
 10957 108e 3FF62CAB 		bhi	.L1312
 10958 1092 01A3     		adr	r3, .L1115
 10959 1094 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 10960              		.p2align 2
 10961              	.L1115:
 10962 1098 E1100000 		.word	.L1000+1
 10963 109c EB060000 		.word	.L1312+1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 313


 10964 10a0 EB060000 		.word	.L1312+1
 10965 10a4 EB060000 		.word	.L1312+1
 10966 10a8 EB060000 		.word	.L1312+1
 10967 10ac 91110000 		.word	.L999+1
 10968 10b0 EB060000 		.word	.L1312+1
 10969 10b4 EB060000 		.word	.L1312+1
 10970 10b8 EB060000 		.word	.L1312+1
 10971 10bc 73110000 		.word	.L997+1
 10972 10c0 EB060000 		.word	.L1312+1
 10973 10c4 45110000 		.word	.L993+1
 10974 10c8 EB060000 		.word	.L1312+1
 10975 10cc EB060000 		.word	.L1312+1
 10976 10d0 EB060000 		.word	.L1312+1
 10977 10d4 EB060000 		.word	.L1312+1
 10978 10d8 EB060000 		.word	.L1312+1
 10979 10dc 0F110000 		.word	.L990+1
 10980              		.p2align 1
 10981              	.L1000:
3184:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10982              		.loc 1 3184 3 is_stmt 1 view .LVU3384
3184:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10983              		.loc 1 3184 6 is_stmt 0 view .LVU3385
 10984 10e0 B9F1000F 		cmp	r9, #0
 10985 10e4 7FF401AB 		bne	.L1312
3188:src/keys.c    **** #endif
 10986              		.loc 1 3188 4 is_stmt 1 view .LVU3386
3188:src/keys.c    **** #endif
 10987              		.loc 1 3188 8 is_stmt 0 view .LVU3387
 10988 10e8 B8F80840 		ldrh	r4, [r8, #8]
 10989              	.LVL922:
3190:src/keys.c    **** 			State2.digval = 0;
 10990              		.loc 1 3190 4 is_stmt 1 view .LVU3388
3190:src/keys.c    **** 			State2.digval = 0;
 10991              		.loc 1 3190 24 is_stmt 0 view .LVU3389
 10992 10ec 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 10993 10f0 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3192:src/keys.c    **** 			return n;
 10994              		.loc 1 3192 19 view .LVU3390
 10995 10f4 88F80A90 		strb	r9, [r8, #10]
3193:src/keys.c    **** 		}
 10996              		.loc 1 3193 11 view .LVU3391
 10997 10f8 44F42854 		orr	r4, r4, #10752
 10998              	.LVL923:
3190:src/keys.c    **** 			State2.digval = 0;
 10999              		.loc 1 3190 24 view .LVU3392
 11000 10fc 69F3C303 		bfi	r3, r9, #3, #1
3191:src/keys.c    **** 			State2.digval2 = 0;
 11001              		.loc 1 3191 18 view .LVU3393
 11002 1100 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11003 1104 2046     		mov	r0, r4
 11004              	.LVL924:
3190:src/keys.c    **** 			State2.digval = 0;
 11005              		.loc 1 3190 24 view .LVU3394
 11006 1106 88F81730 		strb	r3, [r8, #23]
3191:src/keys.c    **** 			State2.digval2 = 0;
 11007              		.loc 1 3191 4 is_stmt 1 view .LVU3395
3192:src/keys.c    **** 			return n;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 314


 11008              		.loc 1 3192 4 view .LVU3396
3193:src/keys.c    **** 		}
 11009              		.loc 1 3193 4 view .LVU3397
3193:src/keys.c    **** 		}
 11010              		.loc 1 3193 11 is_stmt 0 view .LVU3398
 11011 110a FFF78BB9 		b	.L862
 11012              	.LVL925:
 11013              	.L990:
3147:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11014              		.loc 1 3147 3 is_stmt 1 view .LVU3399
3147:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11015              		.loc 1 3147 13 is_stmt 0 view .LVU3400
 11016 110e B8F80830 		ldrh	r3, [r8, #8]
3147:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11017              		.loc 1 3147 6 view .LVU3401
 11018 1112 002B     		cmp	r3, #0
 11019 1114 00F01986 		beq	.L991
3148:src/keys.c    **** 				State2.digval = global_regs();
 11020              		.loc 1 3148 4 is_stmt 1 view .LVU3402
3148:src/keys.c    **** 				State2.digval = global_regs();
 11021              		.loc 1 3148 8 is_stmt 0 view .LVU3403
 11022 1118 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3148:src/keys.c    **** 				State2.digval = global_regs();
 11023              		.loc 1 3148 7 view .LVU3404
 11024 111c D407     		lsls	r4, r2, #31
 11025              	.LVL926:
3148:src/keys.c    **** 				State2.digval = global_regs();
 11026              		.loc 1 3148 7 view .LVU3405
 11027 111e 02D4     		bmi	.L992
3148:src/keys.c    **** 				State2.digval = global_regs();
 11028              		.loc 1 3148 23 view .LVU3406
 11029 1120 642B     		cmp	r3, #100
 11030 1122 00F01886 		beq	.L1389
 11031              	.LVL927:
 11032              	.L992:
3150:src/keys.c    **** 		}
 11033              		.loc 1 3150 4 is_stmt 1 view .LVU3407
 11034 1126 B8F80830 		ldrh	r3, [r8, #8]
 11035 112a 013B     		subs	r3, r3, #1
 11036              	.L1302:
3150:src/keys.c    **** 		}
 11037              		.loc 1 3150 4 is_stmt 0 view .LVU3408
 11038 112c A8F80830 		strh	r3, [r8, #8]	@ movhi
 11039              	.LVL928:
 11040              	.L983:
3202:src/keys.c    **** 	return STATE_UNFINISHED;
 11041              		.loc 1 3202 2 is_stmt 1 view .LVU3409
3202:src/keys.c    **** 	return STATE_UNFINISHED;
 11042              		.loc 1 3202 16 is_stmt 0 view .LVU3410
 11043 1130 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11044 1134 3368     		ldr	r3, [r6]
 11045 1136 6FF3C502 		bfc	r2, #3, #3
 11046 113a 88F81420 		strb	r2, [r8, #20]
3203:src/keys.c    **** }
 11047              		.loc 1 3203 2 is_stmt 1 view .LVU3411
3203:src/keys.c    **** }
 11048              		.loc 1 3203 9 is_stmt 0 view .LVU3412
ARM GAS  /tmp/ccc9ZrJ3.s 			page 315


 11049 113e 3324     		movs	r4, #51
 11050 1140 FEF7B9BF 		b	.L801
 11051              	.LVL929:
 11052              	.L993:
3157:src/keys.c    **** 			State2.digval++;
 11053              		.loc 1 3157 3 is_stmt 1 view .LVU3413
3157:src/keys.c    **** 			State2.digval++;
 11054              		.loc 1 3157 13 is_stmt 0 view .LVU3414
 11055 1144 B8F80830 		ldrh	r3, [r8, #8]
3157:src/keys.c    **** 			State2.digval++;
 11056              		.loc 1 3157 27 view .LVU3415
 11057 1148 0AF1FF3A 		add	r10, r10, #-1
 11058              	.LVL930:
3157:src/keys.c    **** 			State2.digval++;
 11059              		.loc 1 3157 6 view .LVU3416
 11060 114c 5345     		cmp	r3, r10
 11061 114e 80F2F785 		bge	.L994
3158:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11062              		.loc 1 3158 4 is_stmt 1 view .LVU3417
3159:src/keys.c    **** 				State2.digval = regX_idx;
 11063              		.loc 1 3159 8 is_stmt 0 view .LVU3418
 11064 1152 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3158:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11065              		.loc 1 3158 17 view .LVU3419
 11066 1156 0133     		adds	r3, r3, #1
 11067 1158 9CB2     		uxth	r4, r3
 11068              	.LVL931:
3159:src/keys.c    **** 				State2.digval = regX_idx;
 11069              		.loc 1 3159 7 view .LVU3420
 11070 115a D007     		lsls	r0, r2, #31
 11071              	.LVL932:
3158:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11072              		.loc 1 3158 17 view .LVU3421
 11073 115c A8F80840 		strh	r4, [r8, #8]	@ movhi
3159:src/keys.c    **** 				State2.digval = regX_idx;
 11074              		.loc 1 3159 4 is_stmt 1 view .LVU3422
3159:src/keys.c    **** 				State2.digval = regX_idx;
 11075              		.loc 1 3159 7 is_stmt 0 view .LVU3423
 11076 1160 E6D4     		bmi	.L983
3159:src/keys.c    **** 				State2.digval = regX_idx;
 11077              		.loc 1 3159 43 view .LVU3424
 11078 1162 FFF7FEFF 		bl	global_regs
 11079              	.LVL933:
3159:src/keys.c    **** 				State2.digval = regX_idx;
 11080              		.loc 1 3159 23 view .LVU3425
 11081 1166 8442     		cmp	r4, r0
 11082 1168 E2D1     		bne	.L983
3160:src/keys.c    **** 		}
 11083              		.loc 1 3160 5 is_stmt 1 view .LVU3426
3160:src/keys.c    **** 		}
 11084              		.loc 1 3160 19 is_stmt 0 view .LVU3427
 11085 116a 6423     		movs	r3, #100
 11086 116c A8F80830 		strh	r3, [r8, #8]	@ movhi
 11087 1170 DEE7     		b	.L983
 11088              	.LVL934:
 11089              	.L997:
3174:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 316


 11090              		.loc 1 3174 3 is_stmt 1 view .LVU3428
3174:src/keys.c    **** 			return STATE_UNFINISHED;
 11091              		.loc 1 3174 7 is_stmt 0 view .LVU3429
 11092 1172 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3174:src/keys.c    **** 			return STATE_UNFINISHED;
 11093              		.loc 1 3174 6 view .LVU3430
 11094 1176 13F02002 		ands	r2, r3, #32
 11095 117a 7FF4B6AA 		bne	.L1312
3176:src/keys.c    **** 
 11096              		.loc 1 3176 3 is_stmt 1 view .LVU3431
3198:src/keys.c    **** 	State2.digval = 0;
 11097              		.loc 1 3198 2 view .LVU3432
3198:src/keys.c    **** 	State2.digval = 0;
 11098              		.loc 1 3198 22 is_stmt 0 view .LVU3433
 11099 117e 62F3C303 		bfi	r3, r2, #3, #1
 11100 1182 88F81730 		strb	r3, [r8, #23]
3199:src/keys.c    **** 	State2.digval2 = 0;
 11101              		.loc 1 3199 2 is_stmt 1 view .LVU3434
3199:src/keys.c    **** 	State2.digval2 = 0;
 11102              		.loc 1 3199 16 is_stmt 0 view .LVU3435
 11103 1186 A8F80820 		strh	r2, [r8, #8]	@ movhi
3200:src/keys.c    **** reset_window:
 11104              		.loc 1 3200 2 is_stmt 1 view .LVU3436
3200:src/keys.c    **** reset_window:
 11105              		.loc 1 3200 17 is_stmt 0 view .LVU3437
 11106 118a 88F80A20 		strb	r2, [r8, #10]
 11107 118e CFE7     		b	.L983
 11108              	.L999:
3179:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11109              		.loc 1 3179 3 is_stmt 1 view .LVU3438
3179:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11110              		.loc 1 3179 6 is_stmt 0 view .LVU3439
 11111 1190 B9F1010F 		cmp	r9, #1
 11112 1194 A4D1     		bne	.L1000
3180:src/keys.c    **** 			goto reset_window;
 11113              		.loc 1 3180 4 is_stmt 1 view .LVU3440
3180:src/keys.c    **** 			goto reset_window;
 11114              		.loc 1 3180 25 is_stmt 0 view .LVU3441
 11115 1196 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11116 119a 43F00403 		orr	r3, r3, #4
 11117 119e 88F81630 		strb	r3, [r8, #22]
3181:src/keys.c    **** 		}
 11118              		.loc 1 3181 4 is_stmt 1 view .LVU3442
 11119 11a2 C5E7     		b	.L983
 11120              	.LVL935:
 11121              	.L856:
3181:src/keys.c    **** 		}
 11122              		.loc 1 3181 4 is_stmt 0 view .LVU3443
 11123              	.LBE1244:
 11124              	.LBE1251:
 11125              	.LBB1252:
 11126              	.LBB1053:
1606:src/keys.c    **** #endif
 11127              		.loc 1 1606 4 is_stmt 1 view .LVU3444
1606:src/keys.c    **** #endif
 11128              		.loc 1 1606 18 view .LVU3445
1606:src/keys.c    **** #endif
ARM GAS  /tmp/ccc9ZrJ3.s 			page 317


 11129              		.loc 1 1606 18 is_stmt 0 view .LVU3446
 11130 11a4 8BF0010B 		eor	fp, fp, #1
 11131              	.LVL936:
1606:src/keys.c    **** #endif
 11132              		.loc 1 1606 18 view .LVU3447
 11133 11a8 FFF7B1BB 		b	.L863
 11134              	.LVL937:
 11135              	.L1362:
1606:src/keys.c    **** #endif
 11136              		.loc 1 1606 18 view .LVU3448
 11137              	.LBE1053:
 11138              	.LBE1252:
 11139              	.LBB1253:
 11140              	.LBB1035:
1718:src/keys.c    **** 		goto fin;
 11141              		.loc 1 1718 3 is_stmt 1 view .LVU3449
 11142              	.LBB1028:
 11143              	.LBI1028:
1690:src/keys.c    **** 	const int code = 100 + n;
 11144              		.loc 1 1690 12 view .LVU3450
 11145              	.LBB1029:
1691:src/keys.c    **** 	unsigned int pc = state_pc();
 11146              		.loc 1 1691 2 view .LVU3451
1692:src/keys.c    **** 
 11147              		.loc 1 1692 2 view .LVU3452
1692:src/keys.c    **** 
 11148              		.loc 1 1692 20 is_stmt 0 view .LVU3453
 11149 11ac DFF83CA1 		ldr	r10, .L1413+12
 11150 11b0 DAF80030 		ldr	r3, [r10]
 11151              	.LVL938:
1692:src/keys.c    **** 
 11152              		.loc 1 1692 15 view .LVU3454
 11153 11b4 B3F8E007 		ldrh	r0, [r3, #2016]
 11154              	.LVL939:
1694:src/keys.c    **** 		pc = 1;
 11155              		.loc 1 1694 2 is_stmt 1 view .LVU3455
1694:src/keys.c    **** 		pc = 1;
 11156              		.loc 1 1694 5 is_stmt 0 view .LVU3456
 11157 11b8 830B     		lsrs	r3, r0, #14
1695:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11158              		.loc 1 1695 6 view .LVU3457
 11159 11ba 032B     		cmp	r3, #3
 11160              	.LVL940:
1696:src/keys.c    **** 	if (pc > 0)
 11161              		.loc 1 1696 2 is_stmt 1 view .LVU3458
1696:src/keys.c    **** 	if (pc > 0)
 11162              		.loc 1 1696 7 is_stmt 0 view .LVU3459
 11163 11bc 08BF     		it	eq
 11164 11be 0120     		moveq	r0, #1
 11165              	.LVL941:
1696:src/keys.c    **** 	if (pc > 0)
 11166              		.loc 1 1696 7 view .LVU3460
 11167 11c0 04F16401 		add	r1, r4, #100
 11168              	.LVL942:
1696:src/keys.c    **** 	if (pc > 0)
 11169              		.loc 1 1696 7 view .LVU3461
 11170 11c4 0322     		movs	r2, #3
ARM GAS  /tmp/ccc9ZrJ3.s 			page 318


 11171              	.LVL943:
1696:src/keys.c    **** 	if (pc > 0)
 11172              		.loc 1 1696 7 view .LVU3462
 11173 11c6 FFF7FEFF 		bl	find_label_from
 11174              	.LVL944:
1697:src/keys.c    **** 		return pc;
 11175              		.loc 1 1697 2 is_stmt 1 view .LVU3463
1697:src/keys.c    **** 		return pc;
 11176              		.loc 1 1697 5 is_stmt 0 view .LVU3464
 11177 11ca 0028     		cmp	r0, #0
 11178 11cc 7FF455AB 		bne	.L847
1699:src/keys.c    **** }
 11179              		.loc 1 1699 2 is_stmt 1 view .LVU3465
1699:src/keys.c    **** }
 11180              		.loc 1 1699 9 is_stmt 0 view .LVU3466
 11181 11d0 DAF80030 		ldr	r3, [r10]
 11182 11d4 B3F8E007 		ldrh	r0, [r3, #2016]
 11183              	.LVL945:
1699:src/keys.c    **** }
 11184              		.loc 1 1699 9 view .LVU3467
 11185              	.LBE1029:
 11186              	.LBE1028:
1719:src/keys.c    **** 	}
 11187              		.loc 1 1719 3 is_stmt 1 view .LVU3468
 11188 11d8 FFF74FBB 		b	.L847
 11189              	.LVL946:
 11190              	.L1364:
1728:src/keys.c    **** 	}
 11191              		.loc 1 1728 3 view .LVU3469
1728:src/keys.c    **** 	}
 11192              		.loc 1 1728 6 is_stmt 0 view .LVU3470
 11193 11dc B8F80800 		ldrh	r0, [r8, #8]
 11194              	.LVL947:
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11195              		.loc 1 1757 2 is_stmt 1 view .LVU3471
 11196 11e0 5FE4     		b	.L838
 11197              	.LVL948:
 11198              	.L1169:
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11199              		.loc 1 1757 2 is_stmt 0 view .LVU3472
 11200              	.LBE1035:
 11201              	.LBE1253:
 11202              	.LBB1254:
 11203              	.LBB1017:
2366:src/keys.c    **** 	}
 11204              		.loc 1 2366 18 view .LVU3473
 11205 11e2 1E24     		movs	r4, #30
 11206              	.LVL949:
2366:src/keys.c    **** 	}
 11207              		.loc 1 2366 47 view .LVU3474
 11208 11e4 1C44     		add	r4, r4, r3
 11209 11e6 FFF7FBB8 		b	.L835
 11210              	.LVL950:
 11211              	.L1353:
2366:src/keys.c    **** 	}
 11212              		.loc 1 2366 47 view .LVU3475
 11213              	.LBE1017:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 319


 11214              	.LBE1254:
 11215              	.LBB1255:
 11216              	.LBB815:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11217              		.loc 1 294 27 view .LVU3476
 11218 11ea 242C     		cmp	r4, #36
 11219 11ec 7FF447A8 		bne	.L927
 11220              	.L1143:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11221              		.loc 1 295 11 view .LVU3477
 11222 11f0 1623     		movs	r3, #22
 11223 11f2 FFF76CBA 		b	.L910
 11224              	.LVL951:
 11225              	.L1344:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11226              		.loc 1 295 11 view .LVU3478
 11227              	.LBE815:
 11228              	.LBE1255:
3339:src/keys.c    **** 
 11229              		.loc 1 3339 3 is_stmt 1 view .LVU3479
 11230              	.LBB1256:
 11231              	.LBI1256:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11232              		.loc 1 114 13 view .LVU3480
 11233              	.LBE1256:
 11234              	.LBE1357:
 11235              	.LBE1432:
 115:src/keys.c    **** }
 11236              		.loc 1 115 2 view .LVU3481
 11237              	.LBB1433:
 11238              	.LBB1358:
 11239              	.LBB1263:
 11240              	.LBB1257:
 11241              	.LBI1257:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11242              		.loc 1 104 20 view .LVU3482
 11243              	.LBB1258:
 105:src/keys.c    **** 	State2.shifts = shift;
 11244              		.loc 1 105 2 view .LVU3483
 11245              	.LBB1259:
 11246              	.LBI1259:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11247              		.loc 1 96 13 view .LVU3484
 11248              	.LBB1260:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11249              		.loc 1 97 2 view .LVU3485
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11250              		.loc 1 97 18 is_stmt 0 view .LVU3486
 11251 11f6 FFF7FEFF 		bl	shift_down
 11252              	.LVL952:
  98:src/keys.c    **** }
 11253              		.loc 1 98 2 is_stmt 1 view .LVU3487
  98:src/keys.c    **** }
 11254              		.loc 1 98 52 is_stmt 0 view .LVU3488
 11255 11fa 0146     		mov	r1, r0
 11256 11fc 08B9     		cbnz	r0, .L1003
 11257 11fe 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 320


 11258              	.L1003:
 11259              	.LVL953:
  98:src/keys.c    **** }
 11260              		.loc 1 98 52 view .LVU3489
 11261              	.LBE1260:
 11262              	.LBE1259:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11263              		.loc 1 106 2 is_stmt 1 view .LVU3490
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11264              		.loc 1 106 16 is_stmt 0 view .LVU3491
 11265 1202 0022     		movs	r2, #0
 11266              	.LBE1258:
 11267              	.LBE1257:
 11268              	.LBE1263:
3339:src/keys.c    **** 
 11269              		.loc 1 3339 10 view .LVU3492
 11270 1204 2046     		mov	r0, r4
 11271              	.LBB1264:
 11272              	.LBB1262:
 11273              	.LBB1261:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11274              		.loc 1 106 16 view .LVU3493
 11275 1206 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11276              		.loc 1 108 2 is_stmt 1 view .LVU3494
 11277              	.LVL954:
 108:src/keys.c    **** }
 11278              		.loc 1 108 2 is_stmt 0 view .LVU3495
 11279              	.LBE1261:
 11280              	.LBE1262:
 11281              	.LBE1264:
3339:src/keys.c    **** 
 11282              		.loc 1 3339 10 view .LVU3496
 11283 120a FFF7FEFF 		bl	process_catalogue
 11284              	.LVL955:
3339:src/keys.c    **** 
 11285              		.loc 1 3339 10 view .LVU3497
 11286 120e 0446     		mov	r4, r0
 11287 1210 FFF7E6B8 		b	.L835
 11288              	.LVL956:
 11289              	.L1168:
 11290              	.LBB1265:
 11291              	.LBB1018:
2366:src/keys.c    **** 	}
 11292              		.loc 1 2366 18 view .LVU3498
 11293 1214 2724     		movs	r4, #39
 11294              	.LVL957:
2366:src/keys.c    **** 	}
 11295              		.loc 1 2366 47 view .LVU3499
 11296 1216 1C44     		add	r4, r4, r3
 11297 1218 FFF7E2B8 		b	.L835
 11298              	.LVL958:
 11299              	.L1144:
2366:src/keys.c    **** 	}
 11300              		.loc 1 2366 47 view .LVU3500
 11301              	.LBE1018:
 11302              	.LBE1265:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 321


 11303              	.LBB1266:
 11304              	.LBB816:
 11305              	.LBB805:
 371:src/keys.c    **** #ifndef WINGUI
 11306              		.loc 1 371 8 view .LVU3501
 11307 121c 324B     		ldr	r3, .L1413+8
 377:src/keys.c    ****   }
 11308              		.loc 1 377 9 view .LVU3502
 11309 121e 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 11310              		.loc 1 373 27 view .LVU3503
 11311 1220 4FF0010C 		mov	ip, #1
 11312 1224 FFF71FB8 		b	.L922
 11313              	.LVL959:
 11314              	.L1369:
 373:src/keys.c    **** #else
 11315              		.loc 1 373 27 view .LVU3504
 11316              	.LBE805:
 11317              	.LBE816:
 11318              	.LBE1266:
 11319              	.LBB1267:
 11320              	.LBB1074:
2920:src/keys.c    **** 		return STATE_UNFINISHED;
 11321              		.loc 1 2920 3 is_stmt 1 view .LVU3505
 11322 1228 3368     		ldr	r3, [r6]
 11323              	.LVL960:
2920:src/keys.c    **** 		return STATE_UNFINISHED;
 11324              		.loc 1 2920 17 is_stmt 0 view .LVU3506
 11325 122a 88F80C00 		strb	r0, [r8, #12]
2921:src/keys.c    **** 	} 
 11326              		.loc 1 2921 3 is_stmt 1 view .LVU3507
 11327              	.LBE1074:
 11328              	.LBE1267:
3287:src/keys.c    **** 
 11329              		.loc 1 3287 10 is_stmt 0 view .LVU3508
 11330 122e 3324     		movs	r4, #51
 11331              	.LVL961:
 11332              	.LBB1268:
 11333              	.LBB1075:
2921:src/keys.c    **** 	} 
 11334              		.loc 1 2921 10 view .LVU3509
 11335 1230 FEF741BF 		b	.L801
 11336              	.LVL962:
 11337              	.L1363:
2921:src/keys.c    **** 	} 
 11338              		.loc 1 2921 10 view .LVU3510
 11339              	.LBE1075:
 11340              	.LBE1268:
 11341              	.LBB1269:
 11342              	.LBB1036:
1723:src/keys.c    **** 		goto fin;
 11343              		.loc 1 1723 3 is_stmt 1 view .LVU3511
1723:src/keys.c    **** 		goto fin;
 11344              		.loc 1 1723 11 is_stmt 0 view .LVU3512
 11345 1234 2D4B     		ldr	r3, .L1413+12
 11346              	.LVL963:
1723:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 322


 11347              		.loc 1 1723 11 view .LVU3513
 11348 1236 1B68     		ldr	r3, [r3]
1723:src/keys.c    **** 		goto fin;
 11349              		.loc 1 1723 9 view .LVU3514
 11350 1238 5888     		ldrh	r0, [r3, #2]
 11351              	.LVL964:
1724:src/keys.c    **** 	}
 11352              		.loc 1 1724 3 is_stmt 1 view .LVU3515
 11353 123a FFF71EBB 		b	.L847
 11354              	.LVL965:
 11355              	.L1345:
1724:src/keys.c    **** 	}
 11356              		.loc 1 1724 3 is_stmt 0 view .LVU3516
 11357              	.LBE1036:
 11358              	.LBE1269:
3343:src/keys.c    **** #else
 11359              		.loc 1 3343 3 is_stmt 1 view .LVU3517
 11360              	.LBB1270:
 11361              	.LBI919:
1770:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11362              		.loc 1 1770 12 view .LVU3518
 11363              	.LBB972:
1771:src/keys.c    ****         int op = STATE_UNFINISHED;
 11364              		.loc 1 1771 2 view .LVU3519
1771:src/keys.c    ****         int op = STATE_UNFINISHED;
 11365              		.loc 1 1771 33 is_stmt 0 view .LVU3520
 11366 123e 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 11367              	.LBB921:
 11368              	.LBB922:
 11369              	.LBB923:
 11370              	.LBB924:
 11371              	.LBB925:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11372              		.loc 1 97 18 view .LVU3521
 11373 1242 FFF7FEFF 		bl	shift_down
 11374              	.LVL966:
 11375              	.LBE925:
 11376              	.LBE924:
 11377              	.LBE923:
 11378              	.LBE922:
 11379              	.LBE921:
1771:src/keys.c    ****         int op = STATE_UNFINISHED;
 11380              		.loc 1 1771 15 view .LVU3522
 11381 1246 CA46     		mov	r10, r9
 11382              	.LVL967:
1772:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11383              		.loc 1 1772 9 is_stmt 1 view .LVU3523
1773:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11384              		.loc 1 1773 2 view .LVU3524
 11385              	.LBB934:
 11386              	.LBI921:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11387              		.loc 1 114 13 view .LVU3525
 11388              	.LBE934:
 11389              	.LBE972:
 11390              	.LBE1270:
 11391              	.LBE1358:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 323


 11392              	.LBE1433:
 115:src/keys.c    **** }
 11393              		.loc 1 115 2 view .LVU3526
 11394              	.LBB1434:
 11395              	.LBB1359:
 11396              	.LBB1271:
 11397              	.LBB973:
 11398              	.LBB935:
 11399              	.LBB931:
 11400              	.LBI922:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11401              		.loc 1 104 20 view .LVU3527
 11402              	.LBB928:
 105:src/keys.c    **** 	State2.shifts = shift;
 11403              		.loc 1 105 2 view .LVU3528
 11404              	.LBB927:
 11405              	.LBI924:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11406              		.loc 1 96 13 view .LVU3529
 11407              	.LBB926:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11408              		.loc 1 97 2 view .LVU3530
  98:src/keys.c    **** }
 11409              		.loc 1 98 2 view .LVU3531
  98:src/keys.c    **** }
 11410              		.loc 1 98 52 is_stmt 0 view .LVU3532
 11411 1248 08B9     		cbnz	r0, .L1005
 11412 124a 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 11413              	.LVL968:
 11414              	.L1005:
  98:src/keys.c    **** }
 11415              		.loc 1 98 52 view .LVU3533
 11416              	.LBE926:
 11417              	.LBE927:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11418              		.loc 1 106 2 is_stmt 1 view .LVU3534
 11419              	.LBE928:
 11420              	.LBE931:
 11421              	.LBE935:
 11422              	.LBB936:
 11423              	.LBB937:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11424              		.loc 1 485 6 is_stmt 0 view .LVU3535
 11425 124e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 11426              	.LBE937:
 11427              	.LBE936:
 11428              	.LBB953:
 11429              	.LBB932:
 11430              	.LBB929:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11431              		.loc 1 106 16 view .LVU3536
 11432 1252 4FF0000C 		mov	ip, #0
 11433              	.LBE929:
 11434              	.LBE932:
 11435              	.LBE953:
 11436              	.LBB954:
 11437              	.LBB948:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 324


 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11438              		.loc 1 485 5 view .LVU3537
 11439 1256 CA06     		lsls	r2, r1, #27
 11440              	.LBE948:
 11441              	.LBE954:
 11442              	.LBB955:
 11443              	.LBB933:
 11444              	.LBB930:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11445              		.loc 1 106 16 view .LVU3538
 11446 1258 88F810C0 		strb	ip, [r8, #16]
 108:src/keys.c    **** }
 11447              		.loc 1 108 2 is_stmt 1 view .LVU3539
 11448              	.LVL969:
 108:src/keys.c    **** }
 11449              		.loc 1 108 2 is_stmt 0 view .LVU3540
 11450              	.LBE930:
 11451              	.LBE933:
 11452              	.LBE955:
1774:src/keys.c    **** 	State2.alpha_pos = 0;
 11453              		.loc 1 1774 2 is_stmt 1 view .LVU3541
1774:src/keys.c    **** 	State2.alpha_pos = 0;
 11454              		.loc 1 1774 11 is_stmt 0 view .LVU3542
 11455 125c 0346     		mov	r3, r0
 11456              	.LVL970:
 11457              	.LBB956:
 11458              	.LBI936:
 435:src/keys.c    **** {
 11459              		.loc 1 435 12 is_stmt 1 view .LVU3543
 11460              	.LBB949:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11461              		.loc 1 437 2 view .LVU3544
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11462              		.loc 1 485 2 view .LVU3545
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11463              		.loc 1 485 5 is_stmt 0 view .LVU3546
 11464 125e 4AD5     		bpl	.L1006
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11465              		.loc 1 486 3 is_stmt 1 view .LVU3547
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11466              		.loc 1 486 6 is_stmt 0 view .LVU3548
 11467 1260 0028     		cmp	r0, #0
 11468 1262 47D0     		beq	.L1157
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11469              		.loc 1 488 8 is_stmt 1 view .LVU3549
 11470              	.LBB938:
 11471              	.LBB939:
 143:src/keys.c    **** }
 11472              		.loc 1 143 23 is_stmt 0 view .LVU3550
 11473 1264 1E4A     		ldr	r2, .L1413
 11474              	.LBE939:
 11475              	.LBE938:
 491:src/keys.c    **** }
 11476              		.loc 1 491 49 view .LVU3551
 11477 1266 224B     		ldr	r3, .L1413+16
 11478              	.LBB944:
 11479              	.LBB940:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 325


 143:src/keys.c    **** }
 11480              		.loc 1 143 23 view .LVU3552
 11481 1268 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11482              	.LBE940:
 11483              	.LBE944:
 11484              	.LBE949:
 11485              	.LBE956:
1775:src/keys.c    **** 
 11486              		.loc 1 1775 19 view .LVU3553
 11487 126a 88F80DC0 		strb	ip, [r8, #13]
 11488              	.LBB957:
 11489              	.LBB950:
 489:src/keys.c    **** 	}
 11490              		.loc 1 489 10 view .LVU3554
 11491 126e 0228     		cmp	r0, #2
 491:src/keys.c    **** }
 11492              		.loc 1 491 49 view .LVU3555
 11493 1270 4FF0060C 		mov	ip, #6
 11494 1274 0CFB0232 		mla	r2, ip, r2, r3
 489:src/keys.c    **** 	}
 11495              		.loc 1 489 10 view .LVU3556
 11496 1278 14BF     		ite	ne
 11497 127a 0346     		movne	r3, r0
 11498 127c 0523     		moveq	r3, #5
 11499              	.LVL971:
 491:src/keys.c    **** }
 11500              		.loc 1 491 2 is_stmt 1 view .LVU3557
 11501              	.LBB945:
 11502              	.LBI938:
 131:src/keys.c    **** {
 11503              		.loc 1 131 12 view .LVU3558
 11504              	.LBB941:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11505              		.loc 1 133 2 view .LVU3559
 143:src/keys.c    **** }
 11506              		.loc 1 143 2 view .LVU3560
 143:src/keys.c    **** }
 11507              		.loc 1 143 2 is_stmt 0 view .LVU3561
 11508 127e 063C     		subs	r4, r4, #6
 11509              	.LVL972:
 143:src/keys.c    **** }
 11510              		.loc 1 143 2 view .LVU3562
 11511              	.LBE941:
 11512              	.LBE945:
 491:src/keys.c    **** }
 11513              		.loc 1 491 49 view .LVU3563
 11514 1280 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11515              	.LVL973:
 491:src/keys.c    **** }
 11516              		.loc 1 491 49 view .LVU3564
 11517              	.LBE950:
 11518              	.LBE957:
1775:src/keys.c    **** 
 11519              		.loc 1 1775 2 is_stmt 1 view .LVU3565
1777:src/keys.c    **** 	case K10:	// STO
 11520              		.loc 1 1777 2 view .LVU3566
 11521 1282 212C     		cmp	r4, #33
ARM GAS  /tmp/ccc9ZrJ3.s 			page 326


 11522 1284 23D8     		bhi	.L1009
 11523 1286 DFE814F0 		tbh	[pc, r4, lsl #1]
 11524              	.L1116:
 11525 128a 2905     		.2byte	(.L1018-.L1116)/2
 11526 128c ED04     		.2byte	(.L1017-.L1116)/2
 11527 128e 2200     		.2byte	(.L1009-.L1116)/2
 11528 1290 2200     		.2byte	(.L1009-.L1116)/2
 11529 1292 2200     		.2byte	(.L1009-.L1116)/2
 11530 1294 2200     		.2byte	(.L1009-.L1116)/2
 11531 1296 0005     		.2byte	(.L1016-.L1116)/2
 11532 1298 2200     		.2byte	(.L1009-.L1116)/2
 11533 129a 2200     		.2byte	(.L1009-.L1116)/2
 11534 129c 2200     		.2byte	(.L1009-.L1116)/2
 11535 129e E104     		.2byte	(.L1025-.L1116)/2
 11536 12a0 2200     		.2byte	(.L1009-.L1116)/2
 11537 12a2 D004     		.2byte	(.L1014-.L1116)/2
 11538 12a4 2200     		.2byte	(.L1009-.L1116)/2
 11539 12a6 2200     		.2byte	(.L1009-.L1116)/2
 11540 12a8 2200     		.2byte	(.L1009-.L1116)/2
 11541 12aa 2200     		.2byte	(.L1009-.L1116)/2
 11542 12ac 2200     		.2byte	(.L1009-.L1116)/2
 11543 12ae BE04     		.2byte	(.L1013-.L1116)/2
 11544 12b0 2200     		.2byte	(.L1009-.L1116)/2
 11545 12b2 2200     		.2byte	(.L1009-.L1116)/2
 11546 12b4 2200     		.2byte	(.L1009-.L1116)/2
 11547 12b6 2200     		.2byte	(.L1009-.L1116)/2
 11548 12b8 2200     		.2byte	(.L1009-.L1116)/2
 11549 12ba 2200     		.2byte	(.L1009-.L1116)/2
 11550 12bc 2200     		.2byte	(.L1009-.L1116)/2
 11551 12be 2200     		.2byte	(.L1009-.L1116)/2
 11552 12c0 2200     		.2byte	(.L1009-.L1116)/2
 11553 12c2 2200     		.2byte	(.L1009-.L1116)/2
 11554 12c4 2200     		.2byte	(.L1009-.L1116)/2
 11555 12c6 A604     		.2byte	(.L1012-.L1116)/2
 11556 12c8 2200     		.2byte	(.L1009-.L1116)/2
 11557 12ca 2200     		.2byte	(.L1009-.L1116)/2
 11558 12cc 9A04     		.2byte	(.L1010-.L1116)/2
 11559              	.LVL974:
 11560              		.p2align 1
 11561              	.L1009:
1884:src/keys.c    **** 		return STATE_UNFINISHED;
 11562              		.loc 1 1884 2 view .LVU3567
1884:src/keys.c    **** 		return STATE_UNFINISHED;
 11563              		.loc 1 1884 5 is_stmt 0 view .LVU3568
 11564 12ce 002A     		cmp	r2, #0
 11565 12d0 3FF4BEAB 		beq	.L1310
1886:src/keys.c    **** }
 11566              		.loc 1 1886 2 is_stmt 1 view .LVU3569
1886:src/keys.c    **** }
 11567              		.loc 1 1886 9 is_stmt 0 view .LVU3570
 11568 12d4 42F48844 		orr	r4, r2, #17408
 11569 12d8 2046     		mov	r0, r4
 11570              	.LVL975:
1886:src/keys.c    **** }
 11571              		.loc 1 1886 9 view .LVU3571
 11572 12da FFF7A3B8 		b	.L862
 11573              	.L1414:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 327


 11574 12de 00BF     		.align	2
 11575              	.L1413:
 11576 12e0 00000000 		.word	.LANCHOR6
 11577 12e4 00000000 		.word	.LANCHOR5
 11578 12e8 00000000 		.word	.LANCHOR17
 11579 12ec 00000000 		.word	main_ram
 11580 12f0 00000000 		.word	.LANCHOR15
 11581              	.LVL976:
 11582              	.L1157:
 11583              	.LBB958:
 11584              	.LBB951:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11585              		.loc 1 487 10 view .LVU3572
 11586 12f4 0423     		movs	r3, #4
 11587              	.L1006:
 11588              	.LVL977:
 491:src/keys.c    **** }
 11589              		.loc 1 491 2 is_stmt 1 view .LVU3573
 11590              	.LBB946:
 131:src/keys.c    **** {
 11591              		.loc 1 131 12 view .LVU3574
 11592              	.LBB942:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11593              		.loc 1 133 2 view .LVU3575
 143:src/keys.c    **** }
 11594              		.loc 1 143 2 view .LVU3576
 143:src/keys.c    **** }
 11595              		.loc 1 143 23 is_stmt 0 view .LVU3577
 11596 12f6 D14A     		ldr	r2, .L1415
 11597              	.LBE942:
 11598              	.LBE946:
 491:src/keys.c    **** }
 11599              		.loc 1 491 49 view .LVU3578
 11600 12f8 DFF848C3 		ldr	ip, .L1415+8
 11601              	.LBB947:
 11602              	.LBB943:
 143:src/keys.c    **** }
 11603              		.loc 1 143 23 view .LVU3579
 11604 12fc 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11605              	.LBE943:
 11606              	.LBE947:
 491:src/keys.c    **** }
 11607              		.loc 1 491 49 view .LVU3580
 11608 12fe 4FF0060E 		mov	lr, #6
 11609 1302 0EFB02C2 		mla	r2, lr, r2, ip
 11610 1306 063C     		subs	r4, r4, #6
 11611              	.LVL978:
 491:src/keys.c    **** }
 11612              		.loc 1 491 49 view .LVU3581
 11613              	.LBE951:
 11614              	.LBE958:
1775:src/keys.c    **** 
 11615              		.loc 1 1775 19 view .LVU3582
 11616 1308 4FF0000C 		mov	ip, #0
 11617              	.LBB959:
 11618              	.LBB952:
 491:src/keys.c    **** }
ARM GAS  /tmp/ccc9ZrJ3.s 			page 328


 11619              		.loc 1 491 49 view .LVU3583
 11620 130c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11621              	.LVL979:
 491:src/keys.c    **** }
 11622              		.loc 1 491 49 view .LVU3584
 11623              	.LBE952:
 11624              	.LBE959:
1775:src/keys.c    **** 
 11625              		.loc 1 1775 2 is_stmt 1 view .LVU3585
1775:src/keys.c    **** 
 11626              		.loc 1 1775 19 is_stmt 0 view .LVU3586
 11627 130e 88F80DC0 		strb	ip, [r8, #13]
1777:src/keys.c    **** 	case K10:	// STO
 11628              		.loc 1 1777 2 is_stmt 1 view .LVU3587
 11629 1312 212C     		cmp	r4, #33
 11630 1314 DBD8     		bhi	.L1009
 11631 1316 01A3     		adr	r3, .L1011
 11632 1318 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11633              		.p2align 2
 11634              	.L1011:
 11635 131c DD1C0000 		.word	.L1018+1
 11636 1320 651C0000 		.word	.L1017+1
 11637 1324 CF120000 		.word	.L1009+1
 11638 1328 CF120000 		.word	.L1009+1
 11639 132c CF120000 		.word	.L1009+1
 11640 1330 CF120000 		.word	.L1009+1
 11641 1334 8B1C0000 		.word	.L1016+1
 11642 1338 CF120000 		.word	.L1009+1
 11643 133c CF120000 		.word	.L1009+1
 11644 1340 CF120000 		.word	.L1009+1
 11645 1344 9B040000 		.word	.L1015+1
 11646 1348 CF120000 		.word	.L1009+1
 11647 134c 2B1C0000 		.word	.L1014+1
 11648 1350 CF120000 		.word	.L1009+1
 11649 1354 CF120000 		.word	.L1009+1
 11650 1358 CF120000 		.word	.L1009+1
 11651 135c CF120000 		.word	.L1009+1
 11652 1360 CF120000 		.word	.L1009+1
 11653 1364 071C0000 		.word	.L1013+1
 11654 1368 CF120000 		.word	.L1009+1
 11655 136c CF120000 		.word	.L1009+1
 11656 1370 CF120000 		.word	.L1009+1
 11657 1374 CF120000 		.word	.L1009+1
 11658 1378 CF120000 		.word	.L1009+1
 11659 137c CF120000 		.word	.L1009+1
 11660 1380 CF120000 		.word	.L1009+1
 11661 1384 CF120000 		.word	.L1009+1
 11662 1388 CF120000 		.word	.L1009+1
 11663 138c CF120000 		.word	.L1009+1
 11664 1390 CF120000 		.word	.L1009+1
 11665 1394 D71B0000 		.word	.L1012+1
 11666 1398 CF120000 		.word	.L1009+1
 11667 139c CF120000 		.word	.L1009+1
 11668 13a0 BF1B0000 		.word	.L1010+1
 11669              	.LVL980:
 11670              		.p2align 1
 11671              	.L1365:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 329


1777:src/keys.c    **** 	case K10:	// STO
 11672              		.loc 1 1777 2 is_stmt 0 view .LVU3588
 11673              	.LBE973:
 11674              	.LBE1271:
 11675              	.LBB1272:
 11676              	.LBB1037:
1732:src/keys.c    **** 			goto fin2;
 11677              		.loc 1 1732 3 is_stmt 1 view .LVU3589
1732:src/keys.c    **** 			goto fin2;
 11678              		.loc 1 1732 13 is_stmt 0 view .LVU3590
 11679 13a4 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11680              	.LVL981:
1732:src/keys.c    **** 			goto fin2;
 11681              		.loc 1 1732 6 view .LVU3591
 11682 13a8 002B     		cmp	r3, #0
 11683 13aa 3FF468AA 		beq	.L851
1735:src/keys.c    **** 			State2.digval /= 10;
 11684              		.loc 1 1735 4 is_stmt 1 view .LVU3592
1735:src/keys.c    **** 			State2.digval /= 10;
 11685              		.loc 1 1735 19 is_stmt 0 view .LVU3593
 11686 13ae 013B     		subs	r3, r3, #1
1736:src/keys.c    **** 		}
 11687              		.loc 1 1736 18 view .LVU3594
 11688 13b0 B8F80820 		ldrh	r2, [r8, #8]
 11689              	.LVL982:
1735:src/keys.c    **** 			State2.digval /= 10;
 11690              		.loc 1 1735 19 view .LVU3595
 11691 13b4 88F80B30 		strb	r3, [r8, #11]
1736:src/keys.c    **** 		}
 11692              		.loc 1 1736 4 is_stmt 1 view .LVU3596
1736:src/keys.c    **** 		}
 11693              		.loc 1 1736 18 is_stmt 0 view .LVU3597
 11694 13b8 0A21     		movs	r1, #10
 11695 13ba 3368     		ldr	r3, [r6]
 11696 13bc B2FBF1F2 		udiv	r2, r2, r1
 11697              	.LBE1037:
 11698              	.LBE1272:
3278:src/keys.c    **** 
 11699              		.loc 1 3278 10 view .LVU3598
 11700 13c0 3324     		movs	r4, #51
 11701              	.LVL983:
 11702              	.LBB1273:
 11703              	.LBB1038:
1736:src/keys.c    **** 		}
 11704              		.loc 1 1736 18 view .LVU3599
 11705 13c2 A8F80820 		strh	r2, [r8, #8]	@ movhi
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11706              		.loc 1 1757 2 is_stmt 1 view .LVU3600
 11707 13c6 FEF776BE 		b	.L801
 11708              	.LVL984:
 11709              	.L1347:
1757:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11710              		.loc 1 1757 2 is_stmt 0 view .LVU3601
 11711              	.LBE1038:
 11712              	.LBE1273:
3364:src/keys.c    **** 		// print_debug (3, c);
 11713              		.loc 1 3364 4 is_stmt 1 view .LVU3602
ARM GAS  /tmp/ccc9ZrJ3.s 			page 330


3364:src/keys.c    **** 		// print_debug (3, c);
 11714              		.loc 1 3364 11 is_stmt 0 view .LVU3603
 11715 13ca FFF7FEFF 		bl	process_h_shifted
 11716              	.LVL985:
 11717 13ce 0446     		mov	r4, r0
 11718 13d0 FFF706B8 		b	.L835
 11719              	.LVL986:
 11720              	.L1355:
3246:src/keys.c    **** 	CLEAR_REAL;
 11721              		.loc 1 3246 2 is_stmt 1 view .LVU3604
 11722              	.LBB1274:
 11723              	.LBI1274:
1235:src/keys.c    **** 	// called if number entry terminated by EXIT key
 11724              		.loc 1 1235 13 view .LVU3605
 11725              	.LBB1275:
1239:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11726              		.loc 1 1239 2 view .LVU3606
1239:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11727              		.loc 1 1239 5 is_stmt 0 view .LVU3607
 11728 13d4 13F0060F 		tst	r3, #6
 11729 13d8 2FD0     		beq	.L816
1240:src/keys.c    **** 		drop ( OP_DROPXY );
 11730              		.loc 1 1240 2 is_stmt 1 view .LVU3608
1240:src/keys.c    **** 		drop ( OP_DROPXY );
 11731              		.loc 1 1240 5 is_stmt 0 view .LVU3609
 11732 13da D906     		lsls	r1, r3, #27
 11733 13dc 40F1A981 		bpl	.L817
1241:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 11734              		.loc 1 1241 3 is_stmt 1 view .LVU3610
 11735 13e0 0F20     		movs	r0, #15
 11736 13e2 FFF7FEFF 		bl	drop
 11737              	.LVL987:
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11738              		.loc 1 1242 3 view .LVU3611
 11739 13e6 6A20     		movs	r0, #106
 11740 13e8 FFF7FEFF 		bl	get_reg_n
 11741              	.LVL988:
 11742 13ec 0446     		mov	r4, r0
 11743              	.LVL989:
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11744              		.loc 1 1242 33 is_stmt 0 view .LVU3612
 11745 13ee 6E20     		movs	r0, #110
 11746 13f0 FFF7FEFF 		bl	get_reg_n
 11747              	.LVL990:
 11748 13f4 0146     		mov	r1, r0
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11749              		.loc 1 1242 3 view .LVU3613
 11750 13f6 2046     		mov	r0, r4
 11751 13f8 FFF7FEFF 		bl	copyreg
 11752              	.LVL991:
1243:src/keys.c    **** 	}
 11753              		.loc 1 1243 3 is_stmt 1 view .LVU3614
 11754 13fc 6B20     		movs	r0, #107
 11755              	.L1300:
1247:src/keys.c    **** 	}
 11756              		.loc 1 1247 3 is_stmt 0 view .LVU3615
 11757 13fe FFF7FEFF 		bl	get_reg_n
ARM GAS  /tmp/ccc9ZrJ3.s 			page 331


 11758              	.LVL992:
 11759 1402 0446     		mov	r4, r0
1247:src/keys.c    **** 	}
 11760              		.loc 1 1247 33 view .LVU3616
 11761 1404 6F20     		movs	r0, #111
 11762 1406 FFF7FEFF 		bl	get_reg_n
 11763              	.LVL993:
 11764 140a 0146     		mov	r1, r0
1247:src/keys.c    **** 	}
 11765              		.loc 1 1247 3 view .LVU3617
 11766 140c 2046     		mov	r0, r4
 11767 140e FFF7FEFF 		bl	copyreg
 11768              	.LVL994:
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11769              		.loc 1 1249 2 is_stmt 1 view .LVU3618
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11770              		.loc 1 1249 22 is_stmt 0 view .LVU3619
 11771 1412 DAF80020 		ldr	r2, [r10]
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11772              		.loc 1 1249 20 view .LVU3620
 11773 1416 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11774              		.loc 1 1249 22 view .LVU3621
 11775 141a 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11776 141e C3F30013 		ubfx	r3, r3, #4, #1
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11777              		.loc 1 1249 20 view .LVU3622
 11778 1422 63F38611 		bfi	r1, r3, #6, #1
 11779 1426 88F81710 		strb	r1, [r8, #23]
1250:src/keys.c    **** 	CLEAR_POLAR_READY;
 11780              		.loc 1 1250 2 is_stmt 1 view .LVU3623
1251:src/keys.c    **** }
 11781              		.loc 1 1251 2 view .LVU3624
1250:src/keys.c    **** 	CLEAR_POLAR_READY;
 11782              		.loc 1 1250 2 is_stmt 0 view .LVU3625
 11783 142a B2F8AC37 		ldrh	r3, [r2, #1964]
 11784 142e 23F48873 		bic	r3, r3, #272
 11785 1432 43F48073 		orr	r3, r3, #256
 11786 1436 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 11787              	.L816:
 11788              	.LBE1275:
 11789              	.LBE1274:
3247:src/keys.c    **** 	CLEAR_IMAG;
 11790              		.loc 1 3247 2 is_stmt 1 view .LVU3626
 11791 143a DAF80020 		ldr	r2, [r10]
3248:src/keys.c    ****       }
 11792              		.loc 1 3248 2 view .LVU3627
3247:src/keys.c    **** 	CLEAR_IMAG;
 11793              		.loc 1 3247 2 is_stmt 0 view .LVU3628
 11794 143e 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11795 1442 23F00603 		bic	r3, r3, #6
 11796 1446 82F8AC37 		strb	r3, [r2, #1964]
 11797 144a FFF795B9 		b	.L815
 11798              	.LVL995:
 11799              	.L1043:
 11800              	.LBB1277:
 11801              	.LBB891:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 332


1290:src/keys.c    **** 		return process_fg_shifted (c);
 11802              		.loc 1 1290 2 is_stmt 1 view .LVU3629
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11803              		.loc 1 1290 5 is_stmt 0 view .LVU3630
 11804 144e 631F     		subs	r3, r4, #5
 11805 1450 032B     		cmp	r3, #3
 11806 1452 40F2D580 		bls	.L1304
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 11807              		.loc 1 1294 2 is_stmt 1 view .LVU3631
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 11808              		.loc 1 1294 5 is_stmt 0 view .LVU3632
 11809 1456 0F2C     		cmp	r4, #15
 11810 1458 40F00182 		bne	.L1298
 11811              	.L1121:
 11812              	.LVL996:
1321:src/keys.c    **** 		switch (c) {
 11813              		.loc 1 1321 3 is_stmt 1 view .LVU3633
 11814 145c 0020     		movs	r0, #0
 11815 145e FFF7FEFF 		bl	finish_cpx_entry
 11816              	.LVL997:
1322:src/keys.c    **** 		case (K60):
 11817              		.loc 1 1322 3 view .LVU3634
 11818              	.L1305:
1322:src/keys.c    **** 		case (K60):
 11819              		.loc 1 1322 3 is_stmt 0 view .LVU3635
 11820              	.LBE891:
 11821              	.LBE1277:
3359:src/keys.c    **** 	} else {
 11822              		.loc 1 3359 3 is_stmt 1 view .LVU3636
3359:src/keys.c    **** 	} else {
 11823              		.loc 1 3359 10 is_stmt 0 view .LVU3637
 11824 1462 2046     		mov	r0, r4
 11825              	.L1306:
 11826 1464 FFF7FEFF 		bl	process_cmplx
 11827              	.LVL998:
 11828 1468 0446     		mov	r4, r0
 11829 146a FEF7B9BF 		b	.L835
 11830              	.LVL999:
 11831              	.L897:
 11832              	.LBB1278:
 11833              	.LBB1107:
1653:src/keys.c    **** 	      set_last_menu();
 11834              		.loc 1 1653 6 is_stmt 1 view .LVU3638
1653:src/keys.c    **** 	      set_last_menu();
 11835              		.loc 1 1653 10 is_stmt 0 view .LVU3639
 11836 146e FFF7FEFF 		bl	get_last_menu
 11837              	.LVL1000:
1653:src/keys.c    **** 	      set_last_menu();
 11838              		.loc 1 1653 9 view .LVU3640
 11839 1472 1128     		cmp	r0, #17
 11840 1474 00F05481 		beq	.L900
1654:src/keys.c    **** 	    }
 11841              		.loc 1 1654 8 is_stmt 1 view .LVU3641
 11842 1478 FFF7FEFF 		bl	set_last_menu
 11843              	.LVL1001:
 11844              	.L901:
1659:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 333


 11845              		.loc 1 1659 6 view .LVU3642
 11846 147c FFF7FEFF 		bl	display_current_menu
 11847              	.LVL1002:
1660:src/keys.c    **** 	  }
 11848              		.loc 1 1660 6 view .LVU3643
1660:src/keys.c    **** 	  }
 11849              		.loc 1 1660 6 is_stmt 0 view .LVU3644
 11850              	.LBE1107:
 11851              	.LBE1278:
 11852              	.LBE1359:
 11853              	.LBE1434:
3628:src/keys.c    **** 	NonProgrammable = 0;
 11854              		.loc 1 3628 7 is_stmt 1 view .LVU3645
3628:src/keys.c    **** 	NonProgrammable = 0;
 11855              		.loc 1 3628 11 is_stmt 0 view .LVU3646
 11856 1480 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 11857              		.loc 1 3628 10 view .LVU3647
 11858 1484 5C06     		lsls	r4, r3, #25
 11859 1486 00F14481 		bmi	.L902
 11860              	.LBB1435:
 11861              	.LBB1360:
 11862              	.LBB1279:
 11863              	.LBB1108:
1660:src/keys.c    **** 	  }
 11864              		.loc 1 1660 13 view .LVU3648
 11865 148a 4FF4E174 		mov	r4, #450
 11866 148e 3CE4     		b	.L899
 11867              	.LVL1003:
 11868              	.L1375:
1660:src/keys.c    **** 	  }
 11869              		.loc 1 1660 13 view .LVU3649
 11870              	.LBE1108:
 11871              	.LBE1279:
 11872              	.LBB1280:
 11873              	.LBB1154:
2810:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11874              		.loc 1 2810 3 is_stmt 1 view .LVU3650
2810:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11875              		.loc 1 2810 12 is_stmt 0 view .LVU3651
 11876 1490 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 11877 1494 A2F1020C 		sub	ip, r2, #2
 11878 1498 DCF10002 		rsbs	r2, ip, #0
 11879 149c 2046     		mov	r0, r4
 11880 149e 42EB0C02 		adc	r2, r2, ip
 11881 14a2 FFF7FEFF 		bl	process_catalogue
 11882              	.LVL1004:
2811:src/keys.c    **** 			return opcode;
 11883              		.loc 1 2811 6 view .LVU3652
 11884 14a6 3328     		cmp	r0, #51
2810:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11885              		.loc 1 2810 12 view .LVU3653
 11886 14a8 0446     		mov	r4, r0
 11887              	.LVL1005:
2811:src/keys.c    **** 			return opcode;
 11888              		.loc 1 2811 3 is_stmt 1 view .LVU3654
2811:src/keys.c    **** 			return opcode;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 334


 11889              		.loc 1 2811 6 is_stmt 0 view .LVU3655
 11890 14aa 3EF403AE 		beq	.L1307
2813:src/keys.c    **** 		goto add_char;
 11891              		.loc 1 2813 3 is_stmt 1 view .LVU3656
2813:src/keys.c    **** 		goto add_char;
 11892              		.loc 1 2813 6 is_stmt 0 view .LVU3657
 11893 14ae C4B2     		uxtb	r4, r0
 11894              	.LVL1006:
2814:src/keys.c    **** 	}
 11895              		.loc 1 2814 3 is_stmt 1 view .LVU3658
 11896 14b0 FFF7BCBB 		b	.L936
 11897              	.LVL1007:
 11898              	.L1149:
2814:src/keys.c    **** 	}
 11899              		.loc 1 2814 3 is_stmt 0 view .LVU3659
 11900              	.LBE1154:
 11901              	.LBE1280:
 11902              	.LBB1281:
 11903              	.LBB1209:
2989:src/keys.c    **** 	const int opcode = getprog(pc);
 11904              		.loc 1 2989 27 view .LVU3660
 11905 14b4 4FF0030B 		mov	fp, #3
 11906              	.LVL1008:
2989:src/keys.c    **** 	const int opcode = getprog(pc);
 11907              		.loc 1 2989 27 view .LVU3661
 11908 14b8 7AE4     		b	.L951
 11909              	.LVL1009:
 11910              	.L1346:
2989:src/keys.c    **** 	const int opcode = getprog(pc);
 11911              		.loc 1 2989 27 view .LVU3662
 11912              	.LBE1209:
 11913              	.LBE1281:
3355:src/keys.c    **** 	}
 11914              		.loc 1 3355 3 is_stmt 1 view .LVU3663
 11915              	.LBB1282:
 11916              	.LBI824:
1276:src/keys.c    **** 
 11917              		.loc 1 1276 12 view .LVU3664
 11918              	.LBB892:
1278:src/keys.c    **** 
 11919              		.loc 1 1278 2 view .LVU3665
 11920              	.LBB826:
 11921              	.LBI826:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11922              		.loc 1 114 13 view .LVU3666
 11923              	.LBE826:
 11924              	.LBE892:
 11925              	.LBE1282:
 11926              	.LBE1360:
 11927              	.LBE1435:
 115:src/keys.c    **** }
 11928              		.loc 1 115 2 view .LVU3667
 11929              	.LBB1436:
 11930              	.LBB1361:
 11931              	.LBB1283:
 11932              	.LBB893:
 11933              	.LBB833:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 335


 11934              	.LBB827:
 11935              	.LBI827:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11936              		.loc 1 104 20 view .LVU3668
 11937              	.LBB828:
 105:src/keys.c    **** 	State2.shifts = shift;
 11938              		.loc 1 105 2 view .LVU3669
 11939              	.LBB829:
 11940              	.LBI829:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11941              		.loc 1 96 13 view .LVU3670
 11942              	.LBB830:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11943              		.loc 1 97 2 view .LVU3671
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11944              		.loc 1 97 18 is_stmt 0 view .LVU3672
 11945 14ba FFF7FEFF 		bl	shift_down
 11946              	.LVL1010:
  98:src/keys.c    **** }
 11947              		.loc 1 98 2 is_stmt 1 view .LVU3673
  98:src/keys.c    **** }
 11948              		.loc 1 98 52 is_stmt 0 view .LVU3674
 11949 14be 8346     		mov	fp, r0
 11950              	.LVL1011:
  98:src/keys.c    **** }
 11951              		.loc 1 98 52 view .LVU3675
 11952 14c0 08B9     		cbnz	r0, .L1039
 11953 14c2 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 11954              	.L1039:
 11955              	.LVL1012:
  98:src/keys.c    **** }
 11956              		.loc 1 98 52 view .LVU3676
 11957              	.LBE830:
 11958              	.LBE829:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11959              		.loc 1 106 2 is_stmt 1 view .LVU3677
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11960              		.loc 1 106 16 is_stmt 0 view .LVU3678
 11961 14c6 0023     		movs	r3, #0
 11962              	.LBE828:
 11963              	.LBE827:
 11964              	.LBE833:
1282:src/keys.c    **** 		return process_h_shifted (c);
 11965              		.loc 1 1282 5 view .LVU3679
 11966 14c8 042C     		cmp	r4, #4
 11967              	.LBB834:
 11968              	.LBB832:
 11969              	.LBB831:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11970              		.loc 1 106 16 view .LVU3680
 11971 14ca 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 11972              		.loc 1 108 2 is_stmt 1 view .LVU3681
 11973              	.LVL1013:
 108:src/keys.c    **** }
 11974              		.loc 1 108 2 is_stmt 0 view .LVU3682
 11975              	.LBE831:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 336


 11976              	.LBE832:
 11977              	.LBE834:
1282:src/keys.c    **** 		return process_h_shifted (c);
 11978              		.loc 1 1282 2 is_stmt 1 view .LVU3683
1282:src/keys.c    **** 		return process_h_shifted (c);
 11979              		.loc 1 1282 5 is_stmt 0 view .LVU3684
 11980 14ce 00F28C80 		bhi	.L1040
1282:src/keys.c    **** 		return process_h_shifted (c);
 11981              		.loc 1 1282 17 view .LVU3685
 11982 14d2 BBF1030F 		cmp	fp, #3
 11983 14d6 00F04484 		beq	.L1390
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 11984              		.loc 1 1287 2 is_stmt 1 view .LVU3686
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 11985              		.loc 1 1287 5 is_stmt 0 view .LVU3687
 11986 14da BBF1020F 		cmp	fp, #2
 11987 14de B6D0     		beq	.L1043
 11988              	.L1042:
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11989              		.loc 1 1290 2 is_stmt 1 view .LVU3688
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11990              		.loc 1 1290 5 is_stmt 0 view .LVU3689
 11991 14e0 631F     		subs	r3, r4, #5
 11992 14e2 032B     		cmp	r3, #3
 11993 14e4 00F29281 		bhi	.L1045
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11994              		.loc 1 1290 53 view .LVU3690
 11995 14e8 0BF1FF33 		add	r3, fp, #-1
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11996              		.loc 1 1290 32 view .LVU3691
 11997 14ec DBB2     		uxtb	r3, r3
 11998 14ee 012B     		cmp	r3, #1
 11999 14f0 40F28680 		bls	.L1304
 12000              	.L1046:
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 12001              		.loc 1 1320 2 is_stmt 1 view .LVU3692
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 12002              		.loc 1 1320 5 is_stmt 0 view .LVU3693
 12003 14f4 BBF1000F 		cmp	fp, #0
 12004 14f8 40F0B181 		bne	.L1298
1395:src/keys.c    **** 	case (K61):
 12005              		.loc 1 1395 2 is_stmt 1 view .LVU3694
 12006 14fc 231F     		subs	r3, r4, #4
 12007 14fe 292B     		cmp	r3, #41
 12008 1500 00F2A481 		bhi	.L1076
 12009 1504 DFE813F0 		tbh	[pc, r3, lsl #1]
 12010              	.L1078:
 12011 1508 9F01     		.2byte	(.L1079-.L1078)/2
 12012 150a A201     		.2byte	(.L1076-.L1078)/2
 12013 150c A201     		.2byte	(.L1076-.L1078)/2
 12014 150e A201     		.2byte	(.L1076-.L1078)/2
 12015 1510 A201     		.2byte	(.L1076-.L1078)/2
 12016 1512 A201     		.2byte	(.L1076-.L1078)/2
 12017 1514 A201     		.2byte	(.L1076-.L1078)/2
 12018 1516 A201     		.2byte	(.L1076-.L1078)/2
 12019 1518 A201     		.2byte	(.L1076-.L1078)/2
 12020 151a A201     		.2byte	(.L1076-.L1078)/2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 337


 12021 151c 7701     		.2byte	(.L1081-.L1078)/2
 12022 151e 9101     		.2byte	(.L1080-.L1078)/2
 12023 1520 9F01     		.2byte	(.L1079-.L1078)/2
 12024 1522 A201     		.2byte	(.L1076-.L1078)/2
 12025 1524 A201     		.2byte	(.L1076-.L1078)/2
 12026 1526 9101     		.2byte	(.L1080-.L1078)/2
 12027 1528 9101     		.2byte	(.L1080-.L1078)/2
 12028 152a 9101     		.2byte	(.L1080-.L1078)/2
 12029 152c A201     		.2byte	(.L1076-.L1078)/2
 12030 152e A201     		.2byte	(.L1076-.L1078)/2
 12031 1530 A201     		.2byte	(.L1076-.L1078)/2
 12032 1532 9101     		.2byte	(.L1080-.L1078)/2
 12033 1534 9101     		.2byte	(.L1080-.L1078)/2
 12034 1536 9101     		.2byte	(.L1080-.L1078)/2
 12035 1538 A201     		.2byte	(.L1076-.L1078)/2
 12036 153a A201     		.2byte	(.L1076-.L1078)/2
 12037 153c A201     		.2byte	(.L1076-.L1078)/2
 12038 153e 9101     		.2byte	(.L1080-.L1078)/2
 12039 1540 9101     		.2byte	(.L1080-.L1078)/2
 12040 1542 9101     		.2byte	(.L1080-.L1078)/2
 12041 1544 A201     		.2byte	(.L1076-.L1078)/2
 12042 1546 A201     		.2byte	(.L1076-.L1078)/2
 12043 1548 A201     		.2byte	(.L1076-.L1078)/2
 12044 154a 9101     		.2byte	(.L1080-.L1078)/2
 12045 154c 9101     		.2byte	(.L1080-.L1078)/2
 12046 154e A201     		.2byte	(.L1076-.L1078)/2
 12047 1550 A201     		.2byte	(.L1076-.L1078)/2
 12048 1552 A201     		.2byte	(.L1076-.L1078)/2
 12049 1554 A201     		.2byte	(.L1076-.L1078)/2
 12050 1556 A201     		.2byte	(.L1076-.L1078)/2
 12051 1558 9F01     		.2byte	(.L1079-.L1078)/2
 12052 155a EA01     		.2byte	(.L1077-.L1078)/2
 12053              	.LVL1014:
 12054              		.p2align 1
 12055              	.L1387:
1395:src/keys.c    **** 	case (K61):
 12056              		.loc 1 1395 2 is_stmt 0 view .LVU3695
 12057              	.LBE893:
 12058              	.LBE1283:
 12059              	.LBB1284:
 12060              	.LBB1245:
3136:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12061              		.loc 1 3136 50 view .LVU3696
 12062 155c 0D2C     		cmp	r4, #13
 12063 155e 7FF490AD 		bne	.L987
3137:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12064              		.loc 1 3137 3 is_stmt 1 view .LVU3697
 12065 1562 B9F1010F 		cmp	r9, #1
 12066 1566 14BF     		ite	ne
 12067 1568 2C20     		movne	r0, #44
 12068              	.LVL1015:
3137:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12069              		.loc 1 3137 3 is_stmt 0 view .LVU3698
 12070 156a 2B20     		moveq	r0, #43
 12071 156c FFF7FEFF 		bl	set_window
 12072              	.LVL1016:
3138:src/keys.c    **** 	}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 338


 12073              		.loc 1 3138 3 is_stmt 1 view .LVU3699
 12074              	.LBB1241:
 12075              	.LBI1241:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12076              		.loc 1 731 13 view .LVU3700
 12077              	.LBB1242:
 732:src/keys.c    **** }
 12078              		.loc 1 732 2 view .LVU3701
 732:src/keys.c    **** }
 12079              		.loc 1 732 15 is_stmt 0 view .LVU3702
 12080 1570 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12081 1574 3368     		ldr	r3, [r6]
 12082 1576 013A     		subs	r2, r2, #1
 12083 1578 18BF     		it	ne
 12084 157a 0122     		movne	r2, #1
 12085 157c 88F81120 		strb	r2, [r8, #17]
 12086              	.LVL1017:
 732:src/keys.c    **** }
 12087              		.loc 1 732 15 view .LVU3703
 12088              	.LBE1242:
 12089              	.LBE1241:
3145:src/keys.c    **** 	case K_DOWN:
 12090              		.loc 1 3145 2 is_stmt 1 view .LVU3704
3145:src/keys.c    **** 	case K_DOWN:
 12091              		.loc 1 3145 2 is_stmt 0 view .LVU3705
 12092              	.LBE1245:
 12093              	.LBE1284:
 12094              	.LBE1361:
 12095              	.LBE1436:
3592:src/keys.c    ****     case STATE_SST:
 12096              		.loc 1 3592 5 is_stmt 1 view .LVU3706
 12097              	.LBB1437:
 12098              	.LBB1362:
 12099              	.LBB1285:
 12100              	.LBB1246:
3196:src/keys.c    **** 	}
 12101              		.loc 1 3196 10 is_stmt 0 view .LVU3707
 12102 1580 3324     		movs	r4, #51
 12103 1582 FEF798BD 		b	.L801
 12104              	.LVL1018:
 12105              	.L1376:
3196:src/keys.c    **** 	}
 12106              		.loc 1 3196 10 view .LVU3708
 12107              	.LBE1246:
 12108              	.LBE1285:
 12109              	.LBB1286:
 12110              	.LBB1155:
2819:src/keys.c    **** 				break;
 12111              		.loc 1 2819 3 is_stmt 1 view .LVU3709
2819:src/keys.c    **** 				break;
 12112              		.loc 1 2819 6 is_stmt 0 view .LVU3710
 12113 1586 0029     		cmp	r1, #0
 12114 1588 7FF43EAB 		bne	.L939
2821:src/keys.c    **** 		if (State2.numdigit == 0)
 12115              		.loc 1 2821 3 is_stmt 1 view .LVU3711
 12116              	.LBB1144:
 12117              	.LBI1144:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 339


2796:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12118              		.loc 1 2796 13 view .LVU3712
 12119              	.LBB1145:
2798:src/keys.c    **** 	if (! State2.alphas )
 12120              		.loc 1 2798 2 view .LVU3713
2799:src/keys.c    **** 		State2.alphashift = 0;
 12121              		.loc 1 2799 6 is_stmt 0 view .LVU3714
 12122 158c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2798:src/keys.c    **** 	if (! State2.alphas )
 12123              		.loc 1 2798 15 view .LVU3715
 12124 1590 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2799:src/keys.c    **** 		State2.alphashift = 0;
 12125              		.loc 1 2799 5 view .LVU3716
 12126 1594 1C07     		lsls	r4, r3, #28
 12127              	.LVL1019:
2800:src/keys.c    **** }
 12128              		.loc 1 2800 21 view .LVU3717
 12129 1596 5CBF     		itt	pl
 12130 1598 61F30413 		bfipl	r3, r1, #4, #1
 12131 159c 88F81630 		strbpl	r3, [r8, #22]
 12132              	.LBE1145:
 12133              	.LBE1144:
2822:src/keys.c    **** 			return STATE_UNFINISHED;
 12134              		.loc 1 2822 13 view .LVU3718
 12135 15a0 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 12136              	.LBB1147:
 12137              	.LBB1146:
2798:src/keys.c    **** 	if (! State2.alphas )
 12138              		.loc 1 2798 15 view .LVU3719
 12139 15a4 61F3C302 		bfi	r2, r1, #3, #1
 12140 15a8 88F81520 		strb	r2, [r8, #21]
2799:src/keys.c    **** 		State2.alphashift = 0;
 12141              		.loc 1 2799 2 is_stmt 1 view .LVU3720
2800:src/keys.c    **** }
 12142              		.loc 1 2800 3 view .LVU3721
 12143              	.LBE1146:
 12144              	.LBE1147:
2822:src/keys.c    **** 			return STATE_UNFINISHED;
 12145              		.loc 1 2822 3 view .LVU3722
2822:src/keys.c    **** 			return STATE_UNFINISHED;
 12146              		.loc 1 2822 6 is_stmt 0 view .LVU3723
 12147 15ac 002B     		cmp	r3, #0
 12148 15ae 3FF49CA8 		beq	.L1312
2824:src/keys.c    **** 			State2.digval2 = 0;
 12149              		.loc 1 2824 8 is_stmt 1 view .LVU3724
2824:src/keys.c    **** 			State2.digval2 = 0;
 12150              		.loc 1 2824 11 is_stmt 0 view .LVU3725
 12151 15b2 012B     		cmp	r3, #1
2825:src/keys.c    **** 		goto fin;
 12152              		.loc 1 2825 19 view .LVU3726
 12153 15b4 4FF00004 		mov	r4, #0
2824:src/keys.c    **** 			State2.digval2 = 0;
 12154              		.loc 1 2824 11 view .LVU3727
 12155 15b8 7FF44FAB 		bne	.L942
2825:src/keys.c    **** 		goto fin;
 12156              		.loc 1 2825 4 is_stmt 1 view .LVU3728
2825:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 340


 12157              		.loc 1 2825 19 is_stmt 0 view .LVU3729
 12158 15bc 88F80A40 		strb	r4, [r8, #10]
 12159 15c0 FFF74BBB 		b	.L942
 12160              	.LVL1020:
 12161              	.L1339:
2825:src/keys.c    **** 		goto fin;
 12162              		.loc 1 2825 19 view .LVU3730
 12163 15c4 0093     		str	r3, [sp]
 12164              	.LBE1155:
 12165              	.LBE1286:
 12166              	.LBB1287:
 12167              	.LBB817:
 12168              	.LBB806:
 373:src/keys.c    **** #else
 12169              		.loc 1 373 45 view .LVU3731
 12170 15c6 FFF7FEFF 		bl	shift_down
 12171              	.LVL1021:
 373:src/keys.c    **** #else
 12172              		.loc 1 373 42 view .LVU3732
 12173 15ca 0328     		cmp	r0, #3
 12174 15cc 00F09080 		beq	.L923
 373:src/keys.c    **** #else
 12175              		.loc 1 373 73 view .LVU3733
 12176 15d0 009B     		ldr	r3, [sp]
 12177 15d2 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12178 15d6 9C46     		mov	ip, r3
 377:src/keys.c    ****   }
 12179              		.loc 1 377 9 view .LVU3734
 12180 15d8 0C21     		movs	r1, #12
 371:src/keys.c    **** #ifndef WINGUI
 12181              		.loc 1 371 8 view .LVU3735
 12182 15da 194B     		ldr	r3, .L1415+4
 12183 15dc FEF743BE 		b	.L922
 12184              	.LVL1022:
 12185              	.L1370:
 371:src/keys.c    **** #ifndef WINGUI
 12186              		.loc 1 371 8 view .LVU3736
 12187              	.LBE806:
 12188              	.LBE817:
 12189              	.LBE1287:
 12190              	.LBB1288:
 12191              	.LBB1076:
 12192              	.LBB1068:
2928:src/keys.c    **** 		else if (nn != NO_REG)
 12193              		.loc 1 2928 4 is_stmt 1 view .LVU3737
2930:src/keys.c    **** 	}
 12194              		.loc 1 2930 6 is_stmt 0 view .LVU3738
 12195 15e0 9942     		cmp	r1, r3
 12196 15e2 08BF     		it	eq
 12197 15e4 0A23     		moveq	r3, #10
 12198              	.LVL1023:
2930:src/keys.c    **** 	}
 12199              		.loc 1 2930 6 view .LVU3739
 12200 15e6 FFF7EDB9 		b	.L884
 12201              	.LVL1024:
 12202              	.L1040:
2930:src/keys.c    **** 	}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 341


 12203              		.loc 1 2930 6 view .LVU3740
 12204              	.LBE1068:
 12205              	.LBE1076:
 12206              	.LBE1288:
 12207              	.LBB1289:
 12208              	.LBB894:
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 12209              		.loc 1 1287 2 is_stmt 1 view .LVU3741
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 12210              		.loc 1 1287 5 is_stmt 0 view .LVU3742
 12211 15ea BBF1020F 		cmp	fp, #2
 12212 15ee 7FF477AF 		bne	.L1042
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 12213              		.loc 1 1287 26 view .LVU3743
 12214 15f2 A01F     		subs	r0, r4, #6
 12215 15f4 C0B2     		uxtb	r0, r0
 12216 15f6 0228     		cmp	r0, #2
 12217 15f8 3FF629AF 		bhi	.L1043
1288:src/keys.c    **** 	}
 12218              		.loc 1 1288 3 is_stmt 1 view .LVU3744
 12219 15fc FFF7FEFF 		bl	convert_regK
 12220              	.LVL1025:
1290:src/keys.c    **** 		return process_fg_shifted (c);
 12221              		.loc 1 1290 2 view .LVU3745
 12222              	.L1304:
1290:src/keys.c    **** 		return process_fg_shifted (c);
 12223              		.loc 1 1290 2 is_stmt 0 view .LVU3746
 12224              	.LBE894:
 12225              	.LBE1289:
3362:src/keys.c    **** 		if (shift == SHIFT_H)
 12226              		.loc 1 3362 4 is_stmt 1 view .LVU3747
3362:src/keys.c    **** 		if (shift == SHIFT_H)
 12227              		.loc 1 3362 11 is_stmt 0 view .LVU3748
 12228 1600 2046     		mov	r0, r4
 12229 1602 FFF7FEFF 		bl	process_fg_shifted
 12230              	.LVL1026:
 12231 1606 0446     		mov	r4, r0
 12232 1608 FEF7EABE 		b	.L835
 12233              	.LVL1027:
 12234              	.L938:
 12235              	.LBB1290:
 12236              	.LBB1156:
2839:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12237              		.loc 1 2839 3 is_stmt 1 view .LVU3749
2839:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12238              		.loc 1 2839 6 is_stmt 0 view .LVU3750
 12239 160c 0129     		cmp	r1, #1
 12240 160e 00F0E480 		beq	.L1313
2842:src/keys.c    **** 		return STATE_UNFINISHED;
 12241              		.loc 1 2842 4 is_stmt 1 view .LVU3751
 12242              	.LBB1148:
 12243              	.LBI1148:
2796:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12244              		.loc 1 2796 13 view .LVU3752
 12245              	.LBB1149:
2798:src/keys.c    **** 	if (! State2.alphas )
 12246              		.loc 1 2798 2 view .LVU3753
ARM GAS  /tmp/ccc9ZrJ3.s 			page 342


2798:src/keys.c    **** 	if (! State2.alphas )
 12247              		.loc 1 2798 15 is_stmt 0 view .LVU3754
 12248 1612 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2799:src/keys.c    **** 		State2.alphashift = 0;
 12249              		.loc 1 2799 6 view .LVU3755
 12250 1616 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2798:src/keys.c    **** 	if (! State2.alphas )
 12251              		.loc 1 2798 15 view .LVU3756
 12252 161a 60F3C302 		bfi	r2, r0, #3, #1
 12253 161e 88F81520 		strb	r2, [r8, #21]
2799:src/keys.c    **** 		State2.alphashift = 0;
 12254              		.loc 1 2799 2 is_stmt 1 view .LVU3757
2799:src/keys.c    **** 		State2.alphashift = 0;
 12255              		.loc 1 2799 5 is_stmt 0 view .LVU3758
 12256 1622 13F00802 		ands	r2, r3, #8
 12257 1626 7FF460A8 		bne	.L1312
 12258              	.LVL1028:
 12259              	.L947:
2800:src/keys.c    **** }
 12260              		.loc 1 2800 3 is_stmt 1 view .LVU3759
2800:src/keys.c    **** }
 12261              		.loc 1 2800 21 is_stmt 0 view .LVU3760
 12262 162a 62F30413 		bfi	r3, r2, #4, #1
 12263 162e 88F81630 		strb	r3, [r8, #22]
 12264 1632 3368     		ldr	r3, [r6]
 12265              	.LBE1149:
 12266              	.LBE1148:
2843:src/keys.c    **** 
 12267              		.loc 1 2843 10 view .LVU3761
 12268 1634 3324     		movs	r4, #51
 12269              	.LVL1029:
2843:src/keys.c    **** 
 12270              		.loc 1 2843 10 view .LVU3762
 12271 1636 FEF73EBD 		b	.L801
 12272              	.L1416:
 12273 163a 00BF     		.align	2
 12274              	.L1415:
 12275 163c 00000000 		.word	.LANCHOR6
 12276 1640 00000000 		.word	.LANCHOR17
 12277 1644 00000000 		.word	.LANCHOR15
 12278              	.LVL1030:
 12279              	.L937:
2829:src/keys.c    **** 			if (State2.numdigit == 0)
 12280              		.loc 1 2829 3 is_stmt 1 view .LVU3763
2829:src/keys.c    **** 			if (State2.numdigit == 0)
 12281              		.loc 1 2829 6 is_stmt 0 view .LVU3764
 12282 1648 0329     		cmp	r1, #3
 12283 164a 3FF4E5AA 		beq	.L943
2830:src/keys.c    **** 				reset_multi();
 12284              		.loc 1 2830 4 is_stmt 1 view .LVU3765
2830:src/keys.c    **** 				reset_multi();
 12285              		.loc 1 2830 14 is_stmt 0 view .LVU3766
 12286 164e 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2830:src/keys.c    **** 				reset_multi();
 12287              		.loc 1 2830 7 view .LVU3767
 12288 1652 002A     		cmp	r2, #0
 12289 1654 40F09781 		bne	.L944
ARM GAS  /tmp/ccc9ZrJ3.s 			page 343


2831:src/keys.c    **** 			else
 12290              		.loc 1 2831 5 is_stmt 1 view .LVU3768
 12291              	.LBB1150:
 12292              	.LBI1150:
2796:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12293              		.loc 1 2796 13 view .LVU3769
 12294              	.LBB1151:
2798:src/keys.c    **** 	if (! State2.alphas )
 12295              		.loc 1 2798 2 view .LVU3770
2798:src/keys.c    **** 	if (! State2.alphas )
 12296              		.loc 1 2798 15 is_stmt 0 view .LVU3771
 12297 1658 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12298              	.LVL1031:
2799:src/keys.c    **** 		State2.alphashift = 0;
 12299              		.loc 1 2799 6 view .LVU3772
 12300 165c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2798:src/keys.c    **** 	if (! State2.alphas )
 12301              		.loc 1 2798 15 view .LVU3773
 12302 1660 62F3C301 		bfi	r1, r2, #3, #1
2799:src/keys.c    **** 		State2.alphashift = 0;
 12303              		.loc 1 2799 5 view .LVU3774
 12304 1664 13F00802 		ands	r2, r3, #8
2798:src/keys.c    **** 	if (! State2.alphas )
 12305              		.loc 1 2798 15 view .LVU3775
 12306 1668 88F81510 		strb	r1, [r8, #21]
2799:src/keys.c    **** 		State2.alphashift = 0;
 12307              		.loc 1 2799 2 is_stmt 1 view .LVU3776
2799:src/keys.c    **** 		State2.alphashift = 0;
 12308              		.loc 1 2799 5 is_stmt 0 view .LVU3777
 12309 166c DDD0     		beq	.L947
 12310 166e FFF73CB8 		b	.L1312
 12311              	.LVL1032:
 12312              	.L1384:
2799:src/keys.c    **** 		State2.alphashift = 0;
 12313              		.loc 1 2799 5 view .LVU3778
 12314              	.LBE1151:
 12315              	.LBE1150:
 12316              	.LBE1156:
 12317              	.LBE1290:
 12318              	.LBB1291:
 12319              	.LBB1247:
3120:src/keys.c    **** 	const int g_max = global_regs();
 12320              		.loc 1 3120 33 view .LVU3779
 12321 1672 FFF7FEFF 		bl	local_regs
 12322              	.LVL1033:
 12323 1676 8246     		mov	r10, r0
 12324 1678 F3E4     		b	.L979
 12325              	.LVL1034:
 12326              	.L1386:
 12327              	.LBB1243:
3130:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12328              		.loc 1 3130 3 is_stmt 1 view .LVU3780
3130:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12329              		.loc 1 3130 19 is_stmt 0 view .LVU3781
 12330 167a B8F80810 		ldrh	r1, [r8, #8]
3130:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12331              		.loc 1 3130 27 view .LVU3782
ARM GAS  /tmp/ccc9ZrJ3.s 			page 344


 12332 167e 0A23     		movs	r3, #10
3130:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12333              		.loc 1 3130 32 view .LVU3783
 12334 1680 03FB01B2 		mla	r2, r3, r1, fp
3130:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12335              		.loc 1 3130 37 view .LVU3784
 12336 1684 6424     		movs	r4, #100
 12337              	.LVL1035:
3130:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12338              		.loc 1 3130 37 view .LVU3785
 12339 1686 B2FBF4F3 		udiv	r3, r2, r4
 12340 168a 04FB1323 		mls	r3, r4, r3, r2
 12341              	.LVL1036:
3131:src/keys.c    **** 			dv = n;
 12342              		.loc 1 3131 3 is_stmt 1 view .LVU3786
3131:src/keys.c    **** 			dv = n;
 12343              		.loc 1 3131 6 is_stmt 0 view .LVU3787
 12344 168e 5345     		cmp	r3, r10
 12345 1690 09DA     		bge	.L985
3131:src/keys.c    **** 			dv = n;
 12346              		.loc 1 3131 21 view .LVU3788
 12347 1692 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3131:src/keys.c    **** 			dv = n;
 12348              		.loc 1 3131 17 view .LVU3789
 12349 1696 D207     		lsls	r2, r2, #31
 12350 1698 3FF548AD 		bmi	.L1302
3131:src/keys.c    **** 			dv = n;
 12351              		.loc 1 3131 36 view .LVU3790
 12352 169c 8842     		cmp	r0, r1
 12353 169e 02DD     		ble	.L985
3131:src/keys.c    **** 			dv = n;
 12354              		.loc 1 3131 63 view .LVU3791
 12355 16a0 9842     		cmp	r0, r3
 12356 16a2 3FF743AD 		bgt	.L1302
 12357              	.L985:
3132:src/keys.c    **** 		State2.digval = dv;
 12358              		.loc 1 3132 4 is_stmt 1 view .LVU3792
3132:src/keys.c    **** 		State2.digval = dv;
 12359              		.loc 1 3132 7 is_stmt 0 view .LVU3793
 12360 16a6 5B46     		mov	r3, fp
 12361              	.LVL1037:
3133:src/keys.c    **** 		goto reset_window;
 12362              		.loc 1 3133 3 is_stmt 1 view .LVU3794
 12363 16a8 40E5     		b	.L1302
 12364              	.LVL1038:
 12365              	.L1378:
3133:src/keys.c    **** 		goto reset_window;
 12366              		.loc 1 3133 3 is_stmt 0 view .LVU3795
 12367              	.LBE1243:
 12368              	.LBE1247:
 12369              	.LBE1291:
 12370              	.LBB1292:
 12371              	.LBB1157:
2855:src/keys.c    **** 		State2.numdigit = 1;
 12372              		.loc 1 2855 3 is_stmt 1 view .LVU3796
2856:src/keys.c    **** 		return STATE_UNFINISHED;
 12373              		.loc 1 2856 19 is_stmt 0 view .LVU3797
ARM GAS  /tmp/ccc9ZrJ3.s 			page 345


 12374 16aa 0122     		movs	r2, #1
2855:src/keys.c    **** 		State2.numdigit = 1;
 12375              		.loc 1 2855 17 view .LVU3798
 12376 16ac A8F80840 		strh	r4, [r8, #8]	@ movhi
2856:src/keys.c    **** 		return STATE_UNFINISHED;
 12377              		.loc 1 2856 3 is_stmt 1 view .LVU3799
 12378 16b0 3368     		ldr	r3, [r6]
2856:src/keys.c    **** 		return STATE_UNFINISHED;
 12379              		.loc 1 2856 19 is_stmt 0 view .LVU3800
 12380 16b2 88F80B20 		strb	r2, [r8, #11]
2857:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12381              		.loc 1 2857 3 is_stmt 1 view .LVU3801
2857:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12382              		.loc 1 2857 10 is_stmt 0 view .LVU3802
 12383 16b6 3324     		movs	r4, #51
 12384              	.LVL1039:
2857:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12385              		.loc 1 2857 10 view .LVU3803
 12386 16b8 FEF7FDBC 		b	.L801
 12387              	.LVL1040:
 12388              	.L1366:
2857:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12389              		.loc 1 2857 10 view .LVU3804
 12390              	.LBE1157:
 12391              	.LBE1292:
 12392              	.LBB1293:
 12393              	.LBB1039:
1741:src/keys.c    **** 		if (rawpc == 1)
 12394              		.loc 1 1741 3 is_stmt 1 view .LVU3805
1741:src/keys.c    **** 		if (rawpc == 1)
 12395              		.loc 1 1741 11 is_stmt 0 view .LVU3806
 12396 16bc DFF898A3 		ldr	r10, .L1417+8
 12397 16c0 DAF80030 		ldr	r3, [r10]
 12398              	.LVL1041:
1741:src/keys.c    **** 		if (rawpc == 1)
 12399              		.loc 1 1741 9 view .LVU3807
 12400 16c4 B3F8E007 		ldrh	r0, [r3, #2016]
 12401              	.LVL1042:
1742:src/keys.c    **** 			rawpc = 0;
 12402              		.loc 1 1742 3 is_stmt 1 view .LVU3808
1743:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12403              		.loc 1 1743 10 is_stmt 0 view .LVU3809
 12404 16c8 0128     		cmp	r0, #1
 12405              	.LVL1043:
1744:src/keys.c    **** 		update_program_bounds(1);
 12406              		.loc 1 1744 3 is_stmt 1 view .LVU3810
 12407 16ca 08BF     		it	eq
 12408 16cc 0020     		moveq	r0, #0
 12409              	.LVL1044:
1744:src/keys.c    **** 		update_program_bounds(1);
 12410              		.loc 1 1744 3 is_stmt 0 view .LVU3811
 12411 16ce 0021     		movs	r1, #0
 12412 16d0 FFF7FEFF 		bl	do_dec
 12413              	.LVL1045:
1744:src/keys.c    **** 		update_program_bounds(1);
 12414              		.loc 1 1744 3 view .LVU3812
 12415 16d4 FFF7FEFF 		bl	set_pc
ARM GAS  /tmp/ccc9ZrJ3.s 			page 346


 12416              	.LVL1046:
1745:src/keys.c    **** 		rawpc = ProgBegin;
 12417              		.loc 1 1745 3 is_stmt 1 view .LVU3813
 12418 16d8 0120     		movs	r0, #1
 12419 16da FFF7FEFF 		bl	update_program_bounds
 12420              	.LVL1047:
1746:src/keys.c    **** 		goto fin;
 12421              		.loc 1 1746 3 view .LVU3814
1746:src/keys.c    **** 		goto fin;
 12422              		.loc 1 1746 11 is_stmt 0 view .LVU3815
 12423 16de DAF80030 		ldr	r3, [r10]
1746:src/keys.c    **** 		goto fin;
 12424              		.loc 1 1746 9 view .LVU3816
 12425 16e2 B3F8EC07 		ldrh	r0, [r3, #2028]
 12426              	.LVL1048:
1747:src/keys.c    **** 	}
 12427              		.loc 1 1747 3 is_stmt 1 view .LVU3817
 12428 16e6 FFF7C8B8 		b	.L847
 12429              	.LVL1049:
 12430              	.L1388:
1747:src/keys.c    **** 	}
 12431              		.loc 1 1747 3 is_stmt 0 view .LVU3818
 12432              	.LBE1039:
 12433              	.LBE1293:
 12434              	.LBB1294:
 12435              	.LBB1248:
3141:src/keys.c    **** 		goto reset_window;
 12436              		.loc 1 3141 3 is_stmt 1 view .LVU3819
3141:src/keys.c    **** 		goto reset_window;
 12437              		.loc 1 3141 17 is_stmt 0 view .LVU3820
 12438 16ea A8F808B0 		strh	fp, [r8, #8]	@ movhi
3142:src/keys.c    **** 	}
 12439              		.loc 1 3142 3 is_stmt 1 view .LVU3821
 12440 16ee 1FE5     		b	.L983
 12441              	.LVL1050:
 12442              	.L923:
3142:src/keys.c    **** 	}
 12443              		.loc 1 3142 3 is_stmt 0 view .LVU3822
 12444 16f0 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12445              	.LBE1248:
 12446              	.LBE1294:
 12447              	.LBB1295:
 12448              	.LBB818:
 12449              	.LBB807:
 371:src/keys.c    **** #ifndef WINGUI
 12450              		.loc 1 371 8 view .LVU3823
 12451 16f4 D64B     		ldr	r3, .L1417
 377:src/keys.c    ****   }
 12452              		.loc 1 377 9 view .LVU3824
 12453 16f6 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 12454              		.loc 1 373 73 view .LVU3825
 12455 16f8 4FF0020C 		mov	ip, #2
 12456 16fc FEF7B3BD 		b	.L922
 12457              	.LVL1051:
 12458              	.L1381:
 373:src/keys.c    **** #else
ARM GAS  /tmp/ccc9ZrJ3.s 			page 347


 12459              		.loc 1 373 73 view .LVU3826
 12460 1700 2046     		mov	r0, r4
 12461 1702 FEF797BE 		b	.L1108
 12462              	.LVL1052:
 12463              	.L898:
 373:src/keys.c    **** #else
 12464              		.loc 1 373 73 view .LVU3827
 12465              	.LBE807:
 12466              	.LBE818:
 12467              	.LBE1295:
 12468              	.LBE1362:
 12469              	.LBE1437:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12470              		.loc 1 3629 2 is_stmt 1 view .LVU3828
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12471              		.loc 1 3629 18 is_stmt 0 view .LVU3829
 12472 1706 D34B     		ldr	r3, .L1417+4
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12473              		.loc 1 3630 32 view .LVU3830
 12474 1708 40F2C110 		movw	r0, #449
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12475              		.loc 1 3629 18 view .LVU3831
 12476 170c 1C60     		str	r4, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12477              		.loc 1 3630 2 is_stmt 1 view .LVU3832
 12478 170e FEF76BBF 		b	.L1105
 12479              	.LVL1053:
 12480              	.L902:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12481              		.loc 1 3629 2 view .LVU3833
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12482              		.loc 1 3629 18 is_stmt 0 view .LVU3834
 12483 1712 D04B     		ldr	r3, .L1417+4
 12484 1714 0022     		movs	r2, #0
 12485 1716 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12486              		.loc 1 3630 2 is_stmt 1 view .LVU3835
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12487              		.loc 1 3630 32 is_stmt 0 view .LVU3836
 12488 1718 4FF4E170 		mov	r0, #450
 12489 171c FEF764BF 		b	.L1105
 12490              	.LVL1054:
 12491              	.L900:
 12492              	.LBB1438:
 12493              	.LBB1363:
 12494              	.LBB1296:
 12495              	.LBB1109:
1657:src/keys.c    **** 	    }
 12496              		.loc 1 1657 8 is_stmt 1 view .LVU3837
 12497 1720 FFF7FEFF 		bl	set_default_menu
 12498              	.LVL1055:
 12499 1724 AAE6     		b	.L901
 12500              	.LVL1056:
 12501              	.L1373:
1657:src/keys.c    **** 	    }
 12502              		.loc 1 1657 8 is_stmt 0 view .LVU3838
 12503              	.LBE1109:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 348


 12504              	.LBE1296:
 12505              	.LBB1297:
 12506              	.LBB819:
 287:src/keys.c    **** 					}
 12507              		.loc 1 287 7 is_stmt 1 view .LVU3839
 12508 1726 0120     		movs	r0, #1
 12509 1728 FFF7FEFF 		bl	finish_cpx_entry
 12510              	.LVL1057:
 287:src/keys.c    **** 					}
 12511              		.loc 1 287 7 is_stmt 0 view .LVU3840
 12512              	.LBE819:
 12513              	.LBE1297:
3318:src/keys.c    **** 		if (is_bad_cmdline())
 12514              		.loc 1 3318 2 is_stmt 1 view .LVU3841
 12515              	.LBB1298:
 12516              	.LBB820:
 289:src/keys.c    **** 				default:
 12517              		.loc 1 289 13 is_stmt 0 view .LVU3842
 12518 172c 1123     		movs	r3, #17
 12519 172e FEF7CEBF 		b	.L910
 12520              	.LVL1058:
 12521              	.L817:
 289:src/keys.c    **** 				default:
 12522              		.loc 1 289 13 view .LVU3843
 12523              	.LBE820:
 12524              	.LBE1298:
 12525              	.LBB1299:
 12526              	.LBB1276:
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12527              		.loc 1 1246 3 is_stmt 1 view .LVU3844
 12528 1732 6420     		movs	r0, #100
 12529 1734 FFF7FEFF 		bl	get_reg_n
 12530              	.LVL1059:
 12531 1738 0446     		mov	r4, r0
 12532              	.LVL1060:
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12533              		.loc 1 1246 33 is_stmt 0 view .LVU3845
 12534 173a 6E20     		movs	r0, #110
 12535 173c FFF7FEFF 		bl	get_reg_n
 12536              	.LVL1061:
 12537 1740 0146     		mov	r1, r0
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12538              		.loc 1 1246 3 view .LVU3846
 12539 1742 2046     		mov	r0, r4
 12540 1744 FFF7FEFF 		bl	copyreg
 12541              	.LVL1062:
1247:src/keys.c    **** 	}
 12542              		.loc 1 1247 3 is_stmt 1 view .LVU3847
 12543 1748 6520     		movs	r0, #101
 12544 174a 58E6     		b	.L1300
 12545              	.LVL1063:
 12546              	.L1142:
1247:src/keys.c    **** 	}
 12547              		.loc 1 1247 3 is_stmt 0 view .LVU3848
 12548              	.LBE1276:
 12549              	.LBE1299:
 12550              	.LBB1300:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 349


 12551              	.LBB821:
 306:src/keys.c    **** 		}
 12552              		.loc 1 306 11 view .LVU3849
 12553 174c 1023     		movs	r3, #16
 12554 174e FEF7BEBF 		b	.L910
 12555              	.L1354:
 298:src/keys.c    **** 				stack_begin (1);
 12556              		.loc 1 298 5 is_stmt 1 view .LVU3850
 12557 1752 41F00201 		orr	r1, r1, #2
 12558 1756 80F8AC17 		strb	r1, [r0, #1964]
 299:src/keys.c    **** 			}
 12559              		.loc 1 299 5 view .LVU3851
 12560 175a 5846     		mov	r0, fp
 12561 175c FFF7FEFF 		bl	stack_begin
 12562              	.LVL1064:
 299:src/keys.c    **** 			}
 12563              		.loc 1 299 5 is_stmt 0 view .LVU3852
 12564              	.LBE821:
 12565              	.LBE1300:
3318:src/keys.c    **** 		if (is_bad_cmdline())
 12566              		.loc 1 3318 2 is_stmt 1 view .LVU3853
 12567              	.LBB1301:
 12568              	.LBB822:
 306:src/keys.c    **** 		}
 12569              		.loc 1 306 11 is_stmt 0 view .LVU3854
 12570 1760 1023     		movs	r3, #16
 12571 1762 FEF7B4BF 		b	.L910
 12572              	.LVL1065:
 12573              	.L1383:
 306:src/keys.c    **** 		}
 12574              		.loc 1 306 11 view .LVU3855
 12575              	.LBE822:
 12576              	.LBE1301:
 12577              	.LBB1302:
 12578              	.LBB1210:
2998:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12579              		.loc 1 2998 3 is_stmt 1 view .LVU3856
2998:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12580              		.loc 1 2998 8 is_stmt 0 view .LVU3857
 12581 1766 4FEA8B34 		lsl	r4, fp, #14
 12582              	.LVL1066:
2998:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12583              		.loc 1 2998 6 view .LVU3858
 12584 176a 44F00104 		orr	r4, r4, #1
 12585              	.LVL1067:
2999:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12586              		.loc 1 2999 3 is_stmt 1 view .LVU3859
2999:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12587              		.loc 1 2999 9 is_stmt 0 view .LVU3860
 12588 176e 2046     		mov	r0, r4
 12589 1770 FFF7FEFF 		bl	is_label_or_end_at
 12590              	.LVL1068:
2999:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12591              		.loc 1 2999 6 view .LVU3861
 12592 1774 0246     		mov	r2, r0
 12593 1776 60B1     		cbz	r0, .L1391
 12594              	.L955:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 350


3001:src/keys.c    **** 		return STATE_UNFINISHED;
 12595              		.loc 1 3001 3 is_stmt 1 view .LVU3862
3001:src/keys.c    **** 		return STATE_UNFINISHED;
 12596              		.loc 1 3001 17 is_stmt 0 view .LVU3863
 12597 1778 A8F80840 		strh	r4, [r8, #8]	@ movhi
3002:src/keys.c    **** 	}
 12598              		.loc 1 3002 3 is_stmt 1 view .LVU3864
 12599 177c 3368     		ldr	r3, [r6]
3002:src/keys.c    **** 	}
 12600              		.loc 1 3002 10 is_stmt 0 view .LVU3865
 12601 177e 3324     		movs	r4, #51
 12602              	.LVL1069:
3002:src/keys.c    **** 	}
 12603              		.loc 1 3002 10 view .LVU3866
 12604 1780 FEF799BC 		b	.L801
 12605              	.LVL1070:
 12606              	.L1382:
2991:src/keys.c    **** 	const int direct = State2.runmode;
 12607              		.loc 1 2991 37 view .LVU3867
 12608 1784 5046     		mov	r0, r10
 12609 1786 FFF7FEFF 		bl	getprog
 12610              	.LVL1071:
2991:src/keys.c    **** 	const int direct = State2.runmode;
 12611              		.loc 1 2991 63 view .LVU3868
 12612 178a 20F47062 		bic	r2, r0, #3840
 12613 178e FFF719BB 		b	.L952
 12614              	.LVL1072:
 12615              	.L1391:
3000:src/keys.c    **** 		State2.digval = pc;
 12616              		.loc 1 3000 4 is_stmt 1 view .LVU3869
3000:src/keys.c    **** 		State2.digval = pc;
 12617              		.loc 1 3000 9 is_stmt 0 view .LVU3870
 12618 1792 2046     		mov	r0, r4
 12619 1794 0121     		movs	r1, #1
 12620 1796 FFF7FEFF 		bl	advance_to_next_label
 12621              	.LVL1073:
 12622 179a 0446     		mov	r4, r0
 12623              	.LVL1074:
3000:src/keys.c    **** 		State2.digval = pc;
 12624              		.loc 1 3000 9 view .LVU3871
 12625 179c ECE7     		b	.L955
 12626              	.LVL1075:
 12627              	.L871:
3000:src/keys.c    **** 		State2.digval = pc;
 12628              		.loc 1 3000 9 view .LVU3872
 12629              	.LBE1210:
 12630              	.LBE1302:
 12631              	.LBB1303:
 12632              	.LBB1019:
2364:src/keys.c    **** 		// Special 1
 12633              		.loc 1 2364 7 is_stmt 1 view .LVU3873
2364:src/keys.c    **** 		// Special 1
 12634              		.loc 1 2364 10 is_stmt 0 view .LVU3874
 12635 179e BCF1010F 		cmp	ip, #1
 12636 17a2 7FF45AA9 		bne	.L873
2366:src/keys.c    **** 	}
 12637              		.loc 1 2366 3 is_stmt 1 view .LVU3875
ARM GAS  /tmp/ccc9ZrJ3.s 			page 351


2366:src/keys.c    **** 	}
 12638              		.loc 1 2366 18 is_stmt 0 view .LVU3876
 12639 17a6 BBF1000F 		cmp	fp, #0
 12640 17aa 14BF     		ite	ne
 12641 17ac 2724     		movne	r4, #39
 12642              	.LVL1076:
2366:src/keys.c    **** 	}
 12643              		.loc 1 2366 18 view .LVU3877
 12644 17ae 1E24     		moveq	r4, #30
2366:src/keys.c    **** 	}
 12645              		.loc 1 2366 47 view .LVU3878
 12646 17b0 1C44     		add	r4, r4, r3
 12647 17b2 FEF715BE 		b	.L835
 12648              	.LVL1077:
 12649              	.L1377:
2366:src/keys.c    **** 	}
 12650              		.loc 1 2366 47 view .LVU3879
 12651              	.LBE1019:
 12652              	.LBE1303:
 12653              	.LBB1304:
 12654              	.LBB1158:
 12655              	.LBB1152:
 12656              	.LBB1141:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 12657              		.loc 1 488 8 is_stmt 1 view .LVU3880
 489:src/keys.c    **** 	}
 12658              		.loc 1 489 10 is_stmt 0 view .LVU3881
 12659 17b6 0229     		cmp	r1, #2
 12660 17b8 08BF     		it	eq
 12661 17ba 0521     		moveq	r1, #5
 12662              	.LVL1078:
 489:src/keys.c    **** 	}
 12663              		.loc 1 489 10 view .LVU3882
 12664 17bc FFF72CBA 		b	.L943
 12665              	.LVL1079:
 12666              	.L1379:
 489:src/keys.c    **** 	}
 12667              		.loc 1 489 10 view .LVU3883
 12668              	.LBE1141:
 12669              	.LBE1152:
2859:src/keys.c    **** 		State2.numdigit = 2;
 12670              		.loc 1 2859 3 is_stmt 1 view .LVU3884
2860:src/keys.c    **** 		return STATE_UNFINISHED;
 12671              		.loc 1 2860 19 is_stmt 0 view .LVU3885
 12672 17c0 0222     		movs	r2, #2
2859:src/keys.c    **** 		State2.numdigit = 2;
 12673              		.loc 1 2859 18 view .LVU3886
 12674 17c2 88F80A40 		strb	r4, [r8, #10]
2860:src/keys.c    **** 		return STATE_UNFINISHED;
 12675              		.loc 1 2860 3 is_stmt 1 view .LVU3887
 12676 17c6 3368     		ldr	r3, [r6]
2860:src/keys.c    **** 		return STATE_UNFINISHED;
 12677              		.loc 1 2860 19 is_stmt 0 view .LVU3888
 12678 17c8 88F80B20 		strb	r2, [r8, #11]
2861:src/keys.c    **** 	}
 12679              		.loc 1 2861 3 is_stmt 1 view .LVU3889
2861:src/keys.c    **** 	}
ARM GAS  /tmp/ccc9ZrJ3.s 			page 352


 12680              		.loc 1 2861 10 is_stmt 0 view .LVU3890
 12681 17cc 3324     		movs	r4, #51
 12682              	.LVL1080:
2861:src/keys.c    **** 	}
 12683              		.loc 1 2861 10 view .LVU3891
 12684 17ce FEF772BC 		b	.L801
 12685              	.LVL1081:
 12686              	.L1349:
2861:src/keys.c    **** 	}
 12687              		.loc 1 2861 10 view .LVU3892
 12688              	.LBE1158:
 12689              	.LBE1304:
 12690              	.LBE1363:
 12691              	.LBE1438:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12692              		.loc 1 3629 2 is_stmt 1 view .LVU3893
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12693              		.loc 1 3629 18 is_stmt 0 view .LVU3894
 12694 17d2 0022     		movs	r2, #0
 12695 17d4 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12696              		.loc 1 3630 2 is_stmt 1 view .LVU3895
 12697 17d6 FEF707BF 		b	.L1105
 12698              	.LVL1082:
 12699              	.L1313:
 12700              	.LBB1439:
 12701              	.LBB1364:
 12702              	.LBB1305:
 12703              	.LBB974:
1862:src/keys.c    **** 		else if (shift == SHIFT_H)
 12704              		.loc 1 1862 4 view .LVU3896
1862:src/keys.c    **** 		else if (shift == SHIFT_H)
 12705              		.loc 1 1862 34 is_stmt 0 view .LVU3897
 12706 17da 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 12707 17de 3368     		ldr	r3, [r6]
 12708 17e0 C2F30011 		ubfx	r1, r2, #4, #1
1862:src/keys.c    **** 		else if (shift == SHIFT_H)
 12709              		.loc 1 1862 26 view .LVU3898
 12710 17e4 C1F10101 		rsb	r1, r1, #1
1862:src/keys.c    **** 		else if (shift == SHIFT_H)
 12711              		.loc 1 1862 22 view .LVU3899
 12712 17e8 61F30412 		bfi	r2, r1, #4, #1
 12713 17ec 88F81620 		strb	r2, [r8, #22]
1872:src/keys.c    **** 
 12714              		.loc 1 1872 10 view .LVU3900
 12715 17f0 3324     		movs	r4, #51
 12716 17f2 FEF760BC 		b	.L801
 12717              	.LVL1083:
 12718              	.L1081:
1872:src/keys.c    **** 
 12719              		.loc 1 1872 10 view .LVU3901
 12720              	.LBE974:
 12721              	.LBE1305:
 12722              	.LBB1306:
 12723              	.LBB895:
1415:src/keys.c    **** 			return process_cmplx(c);
 12724              		.loc 1 1415 3 is_stmt 1 view .LVU3902
ARM GAS  /tmp/ccc9ZrJ3.s 			page 353


1415:src/keys.c    **** 			return process_cmplx(c);
 12725              		.loc 1 1415 18 is_stmt 0 view .LVU3903
 12726 17f6 DAF80030 		ldr	r3, [r10]
 12727 17fa 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
1415:src/keys.c    **** 			return process_cmplx(c);
 12728              		.loc 1 1415 6 view .LVU3904
 12729 17fe 13F0060F 		tst	r3, #6
1416:src/keys.c    **** 		}
 12730              		.loc 1 1416 11 view .LVU3905
 12731 1802 4FF00E00 		mov	r0, #14
1415:src/keys.c    **** 			return process_cmplx(c);
 12732              		.loc 1 1415 6 view .LVU3906
 12733 1806 7EF466AD 		bne	.L1303
 12734 180a 2BE6     		b	.L1306
 12735              	.L1045:
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 12736              		.loc 1 1294 2 is_stmt 1 view .LVU3907
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 12737              		.loc 1 1294 5 is_stmt 0 view .LVU3908
 12738 180c 0F2C     		cmp	r4, #15
 12739 180e 7FF471AE 		bne	.L1046
1295:src/keys.c    **** 			reset_shift();
 12740              		.loc 1 1295 3 is_stmt 1 view .LVU3909
1295:src/keys.c    **** 			reset_shift();
 12741              		.loc 1 1295 6 is_stmt 0 view .LVU3910
 12742 1812 BBF1010F 		cmp	fp, #1
 12743 1816 00F0B382 		beq	.L1392
 12744              	.LBB835:
1311:src/keys.c    **** #endif
 12745              		.loc 1 1311 4 is_stmt 1 view .LVU3911
 12746              	.LVL1084:
1313:src/keys.c    **** 				finish_cpx_entry(1);
 12747              		.loc 1 1313 4 view .LVU3912
1313:src/keys.c    **** 				finish_cpx_entry(1);
 12748              		.loc 1 1313 7 is_stmt 0 view .LVU3913
 12749 181a BBF1030F 		cmp	fp, #3
 12750 181e 00F0A682 		beq	.L1393
 12751              	.LBE835:
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 12752              		.loc 1 1320 2 is_stmt 1 view .LVU3914
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 12753              		.loc 1 1320 5 is_stmt 0 view .LVU3915
 12754 1822 BBF1000F 		cmp	fp, #0
 12755 1826 7FF419AE 		bne	.L1121
 12756              	.LVL1085:
 12757              	.L1080:
1408:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 12758              		.loc 1 1408 3 is_stmt 1 view .LVU3916
1408:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 12759              		.loc 1 1408 8 is_stmt 0 view .LVU3917
 12760 182a DAF80020 		ldr	r2, [r10]
1408:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 12761              		.loc 1 1408 18 view .LVU3918
 12762 182e 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1408:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 12763              		.loc 1 1408 6 view .LVU3919
 12764 1832 13F0060F 		tst	r3, #6
ARM GAS  /tmp/ccc9ZrJ3.s 			page 354


 12765 1836 06D1     		bne	.L1079
1409:src/keys.c    **** 			stack_begin (1);
 12766              		.loc 1 1409 4 is_stmt 1 view .LVU3920
 12767 1838 43F00203 		orr	r3, r3, #2
 12768 183c 82F8AC37 		strb	r3, [r2, #1964]
1410:src/keys.c    **** 		}
 12769              		.loc 1 1410 4 view .LVU3921
 12770 1840 0120     		movs	r0, #1
 12771 1842 FFF7FEFF 		bl	stack_begin
 12772              	.LVL1086:
1412:src/keys.c    **** 	case (K22): // CHS
 12773              		.loc 1 1412 3 view .LVU3922
 12774              	.L1079:
1424:src/keys.c    **** 	case (K_CMPLX):
 12775              		.loc 1 1424 4 view .LVU3923
1424:src/keys.c    **** 	case (K_CMPLX):
 12776              		.loc 1 1424 11 is_stmt 0 view .LVU3924
 12777 1846 2046     		mov	r0, r4
 12778 1848 FEF745BD 		b	.L1303
 12779              	.L1076:
1441:src/keys.c    **** 	}
 12780              		.loc 1 1441 10 is_stmt 1 view .LVU3925
1443:src/keys.c    **** 	return process_cmplx(c);
 12781              		.loc 1 1443 2 view .LVU3926
 12782 184c 0020     		movs	r0, #0
 12783 184e FFF7FEFF 		bl	finish_cpx_entry
 12784              	.LVL1087:
1444:src/keys.c    **** 
 12785              		.loc 1 1444 2 view .LVU3927
1444:src/keys.c    **** 
 12786              		.loc 1 1444 9 is_stmt 0 view .LVU3928
 12787 1852 2046     		mov	r0, r4
 12788 1854 FFF7FEFF 		bl	process_cmplx
 12789              	.LVL1088:
 12790 1858 0446     		mov	r4, r0
 12791              	.LVL1089:
1444:src/keys.c    **** 
 12792              		.loc 1 1444 9 view .LVU3929
 12793 185a FEF7C1BD 		b	.L835
 12794              	.LVL1090:
 12795              	.L1298:
1321:src/keys.c    **** 		switch (c) {
 12796              		.loc 1 1321 3 is_stmt 1 view .LVU3930
 12797 185e 0020     		movs	r0, #0
 12798 1860 FFF7FEFF 		bl	finish_cpx_entry
 12799              	.LVL1091:
1322:src/keys.c    **** 		case (K60):
 12800              		.loc 1 1322 3 view .LVU3931
 12801 1864 A4F10D03 		sub	r3, r4, #13
 12802 1868 192B     		cmp	r3, #25
 12803 186a 3FF6FAAD 		bhi	.L1305
 12804 186e 01A2     		adr	r2, .L1054
 12805 1870 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 12806              		.p2align 2
 12807              	.L1054:
 12808 1874 D51A0000 		.word	.L1061+1
 12809 1878 B11A0000 		.word	.L1060+1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 355


 12810 187c 63140000 		.word	.L1305+1
 12811 1880 5D1A0000 		.word	.L1059+1
 12812 1884 63140000 		.word	.L1305+1
 12813 1888 63140000 		.word	.L1305+1
 12814 188c 63140000 		.word	.L1305+1
 12815 1890 63140000 		.word	.L1305+1
 12816 1894 63140000 		.word	.L1305+1
 12817 1898 3F1A0000 		.word	.L1058+1
 12818 189c 63140000 		.word	.L1305+1
 12819 18a0 3D1B0000 		.word	.L1057+1
 12820 18a4 63140000 		.word	.L1305+1
 12821 18a8 63140000 		.word	.L1305+1
 12822 18ac 63140000 		.word	.L1305+1
 12823 18b0 1F1B0000 		.word	.L1056+1
 12824 18b4 63140000 		.word	.L1305+1
 12825 18b8 63140000 		.word	.L1305+1
 12826 18bc 63140000 		.word	.L1305+1
 12827 18c0 63140000 		.word	.L1305+1
 12828 18c4 63140000 		.word	.L1305+1
 12829 18c8 63140000 		.word	.L1305+1
 12830 18cc 63140000 		.word	.L1305+1
 12831 18d0 C5190000 		.word	.L1055+1
 12832 18d4 63140000 		.word	.L1305+1
 12833 18d8 A7190000 		.word	.L1053+1
 12834              		.p2align 1
 12835              	.L1077:
1426:src/keys.c    **** 			CLEAR_REAL;
 12836              		.loc 1 1426 3 view .LVU3932
1426:src/keys.c    **** 			CLEAR_REAL;
 12837              		.loc 1 1426 7 is_stmt 0 view .LVU3933
 12838 18dc DAF80020 		ldr	r2, [r10]
 12839 18e0 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1426:src/keys.c    **** 			CLEAR_REAL;
 12840              		.loc 1 1426 6 view .LVU3934
 12841 18e4 9907     		lsls	r1, r3, #30
 12842 18e6 13D4     		bmi	.L1394
1433:src/keys.c    **** 			finish_cpx_entry (1);
 12843              		.loc 1 1433 8 is_stmt 1 view .LVU3935
1433:src/keys.c    **** 			finish_cpx_entry (1);
 12844              		.loc 1 1433 11 is_stmt 0 view .LVU3936
 12845 18e8 5C07     		lsls	r4, r3, #29
 12846              	.LVL1092:
1433:src/keys.c    **** 			finish_cpx_entry (1);
 12847              		.loc 1 1433 11 view .LVU3937
 12848 18ea 06D5     		bpl	.L1086
1434:src/keys.c    **** 		}
 12849              		.loc 1 1434 4 is_stmt 1 view .LVU3938
 12850 18ec 0120     		movs	r0, #1
 12851 18ee FFF7FEFF 		bl	finish_cpx_entry
 12852              	.LVL1093:
1440:src/keys.c    **** 	default:;
 12853              		.loc 1 1440 10 is_stmt 0 view .LVU3939
 12854 18f2 3324     		movs	r4, #51
 12855 18f4 3368     		ldr	r3, [r6]
 12856 18f6 FEF7DEBB 		b	.L801
 12857              	.L1086:
1437:src/keys.c    **** 			stack_begin (1);
ARM GAS  /tmp/ccc9ZrJ3.s 			page 356


 12858              		.loc 1 1437 4 is_stmt 1 view .LVU3940
 12859 18fa 43F00403 		orr	r3, r3, #4
 12860 18fe 82F8AC37 		strb	r3, [r2, #1964]
1438:src/keys.c    **** 		}
 12861              		.loc 1 1438 4 view .LVU3941
 12862 1902 0120     		movs	r0, #1
 12863 1904 FFF7FEFF 		bl	stack_begin
 12864              	.LVL1094:
1440:src/keys.c    **** 	default:;
 12865              		.loc 1 1440 10 is_stmt 0 view .LVU3942
 12866 1908 3324     		movs	r4, #51
 12867 190a 3368     		ldr	r3, [r6]
 12868 190c FEF7D3BB 		b	.L801
 12869              	.LVL1095:
 12870              	.L1394:
1427:src/keys.c    **** 			SET_IMAG;
 12871              		.loc 1 1427 4 is_stmt 1 view .LVU3943
1428:src/keys.c    **** 			do_command_line();
 12872              		.loc 1 1428 4 view .LVU3944
1427:src/keys.c    **** 			SET_IMAG;
 12873              		.loc 1 1427 4 is_stmt 0 view .LVU3945
 12874 1910 23F00603 		bic	r3, r3, #6
 12875              	.LBB836:
 12876              	.LBB837:
1191:src/keys.c    **** 		State2.state_lift = 0;
 12877              		.loc 1 1191 5 view .LVU3946
 12878 1914 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 12879              	.LBE837:
 12880              	.LBE836:
1427:src/keys.c    **** 			SET_IMAG;
 12881              		.loc 1 1427 4 view .LVU3947
 12882 1918 43F00403 		orr	r3, r3, #4
 12883 191c 82F8AC37 		strb	r3, [r2, #1964]
1429:src/keys.c    **** 			State2.state_lift = 0;
 12884              		.loc 1 1429 4 is_stmt 1 view .LVU3948
 12885              	.LBB840:
 12886              	.LBI836:
1190:src/keys.c    **** 	if (CmdLineLength) {
 12887              		.loc 1 1190 13 view .LVU3949
 12888              	.LBB838:
1191:src/keys.c    **** 		State2.state_lift = 0;
 12889              		.loc 1 1191 2 view .LVU3950
1191:src/keys.c    **** 		State2.state_lift = 0;
 12890              		.loc 1 1191 5 is_stmt 0 view .LVU3951
 12891 1920 0029     		cmp	r1, #0
 12892 1922 37D1     		bne	.L1395
 12893              	.L1085:
 12894              	.LBE838:
 12895              	.LBE840:
1430:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12896              		.loc 1 1430 4 is_stmt 1 view .LVU3952
1430:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12897              		.loc 1 1430 22 is_stmt 0 view .LVU3953
 12898 1924 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1431:src/keys.c    **** 		}
 12899              		.loc 1 1431 4 view .LVU3954
 12900 1928 6420     		movs	r0, #100
ARM GAS  /tmp/ccc9ZrJ3.s 			page 357


1430:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12901              		.loc 1 1430 22 view .LVU3955
 12902 192a 6FF38613 		bfc	r3, #6, #1
 12903 192e 88F81730 		strb	r3, [r8, #23]
1431:src/keys.c    **** 		}
 12904              		.loc 1 1431 4 is_stmt 1 view .LVU3956
 12905 1932 FFF7FEFF 		bl	get_reg_n
 12906              	.LVL1096:
 12907 1936 0446     		mov	r4, r0
 12908              	.LVL1097:
1431:src/keys.c    **** 		}
 12909              		.loc 1 1431 4 is_stmt 0 view .LVU3957
 12910 1938 6520     		movs	r0, #101
 12911 193a FFF7FEFF 		bl	get_reg_n
 12912              	.LVL1098:
 12913 193e 0146     		mov	r1, r0
 12914 1940 2046     		mov	r0, r4
 12915 1942 FFF7FEFF 		bl	swap_reg
 12916              	.LVL1099:
1440:src/keys.c    **** 	default:;
 12917              		.loc 1 1440 10 view .LVU3958
 12918 1946 3324     		movs	r4, #51
 12919 1948 3368     		ldr	r3, [r6]
 12920 194a FEF7B4BB 		b	.L801
 12921              	.LVL1100:
 12922              	.L1385:
1440:src/keys.c    **** 	default:;
 12923              		.loc 1 1440 10 view .LVU3959
 12924              	.LBE895:
 12925              	.LBE1306:
 12926              	.LBB1307:
 12927              	.LBB1249:
3124:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12928              		.loc 1 3124 3 is_stmt 1 view .LVU3960
3124:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12929              		.loc 1 3124 7 is_stmt 0 view .LVU3961
 12930 194e FFF7FEFF 		bl	local_regs
 12931              	.LVL1101:
3124:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12932              		.loc 1 3124 6 view .LVU3962
 12933 1952 68B1     		cbz	r0, .L981
3125:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12934              		.loc 1 3125 4 is_stmt 1 view .LVU3963
3125:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12935              		.loc 1 3125 19 is_stmt 0 view .LVU3964
 12936 1954 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3125:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12937              		.loc 1 3125 34 view .LVU3965
 12938 1958 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3125:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12939              		.loc 1 3125 19 view .LVU3966
 12940 195c 03F00101 		and	r1, r3, #1
3125:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12941              		.loc 1 3125 34 view .LVU3967
 12942 1960 0A43     		orrs	r2, r1, r2
 12943 1962 0CBF     		ite	eq
 12944 1964 0122     		moveq	r2, #1
ARM GAS  /tmp/ccc9ZrJ3.s 			page 358


 12945 1966 0022     		movne	r2, #0
3125:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12946              		.loc 1 3125 17 view .LVU3968
 12947 1968 62F30003 		bfi	r3, r2, #0, #1
 12948 196c 88F81630 		strb	r3, [r8, #22]
 12949              	.L981:
3126:src/keys.c    **** 		goto reset_window;
 12950              		.loc 1 3126 3 is_stmt 1 view .LVU3969
3126:src/keys.c    **** 		goto reset_window;
 12951              		.loc 1 3126 32 is_stmt 0 view .LVU3970
 12952 1970 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3126:src/keys.c    **** 		goto reset_window;
 12953              		.loc 1 3126 17 view .LVU3971
 12954 1974 13F0010F 		tst	r3, #1
 12955 1978 14BF     		ite	ne
 12956 197a 0023     		movne	r3, #0
 12957 197c 6423     		moveq	r3, #100
 12958 197e A8F80830 		strh	r3, [r8, #8]	@ movhi
3127:src/keys.c    **** 	}
 12959              		.loc 1 3127 3 is_stmt 1 view .LVU3972
 12960 1982 FFF7D5BB 		b	.L983
 12961              	.LVL1102:
 12962              	.L944:
3127:src/keys.c    **** 	}
 12963              		.loc 1 3127 3 is_stmt 0 view .LVU3973
 12964              	.LBE1249:
 12965              	.LBE1307:
 12966              	.LBB1308:
 12967              	.LBB1159:
2833:src/keys.c    **** 			return STATE_UNFINISHED;
 12968              		.loc 1 2833 5 is_stmt 1 view .LVU3974
2833:src/keys.c    **** 			return STATE_UNFINISHED;
 12969              		.loc 1 2833 20 is_stmt 0 view .LVU3975
 12970 1986 013A     		subs	r2, r2, #1
 12971 1988 3368     		ldr	r3, [r6]
 12972 198a 88F80B20 		strb	r2, [r8, #11]
2834:src/keys.c    **** 		}
 12973              		.loc 1 2834 11 view .LVU3976
 12974 198e 3324     		movs	r4, #51
 12975              	.LVL1103:
2834:src/keys.c    **** 		}
 12976              		.loc 1 2834 11 view .LVU3977
 12977 1990 FEF791BB 		b	.L801
 12978              	.LVL1104:
 12979              	.L1395:
2834:src/keys.c    **** 		}
 12980              		.loc 1 2834 11 view .LVU3978
 12981              	.LBE1159:
 12982              	.LBE1308:
 12983              	.LBB1309:
 12984              	.LBB896:
 12985              	.LBB841:
 12986              	.LBB839:
1192:src/keys.c    **** 		process_cmdline();
 12987              		.loc 1 1192 3 is_stmt 1 view .LVU3979
1192:src/keys.c    **** 		process_cmdline();
 12988              		.loc 1 1192 21 is_stmt 0 view .LVU3980
ARM GAS  /tmp/ccc9ZrJ3.s 			page 359


 12989 1994 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 12990 1998 6FF38613 		bfc	r3, #6, #1
 12991 199c 88F81730 		strb	r3, [r8, #23]
1193:src/keys.c    **** 	}
 12992              		.loc 1 1193 3 is_stmt 1 view .LVU3981
 12993 19a0 FFF7FEFF 		bl	process_cmdline
 12994              	.LVL1105:
 12995 19a4 BEE7     		b	.L1085
 12996              	.L1053:
1193:src/keys.c    **** 	}
 12997              		.loc 1 1193 3 is_stmt 0 view .LVU3982
 12998              	.LBE839:
 12999              	.LBE841:
1354:src/keys.c    **** 				return OP_NIL | OP_C_IM;
 13000              		.loc 1 1354 4 is_stmt 1 view .LVU3983
1354:src/keys.c    **** 				return OP_NIL | OP_C_IM;
 13001              		.loc 1 1354 7 is_stmt 0 view .LVU3984
 13002 19a6 BBF1010F 		cmp	fp, #1
 13003 19aa 35D0     		beq	.L1070
1357:src/keys.c    **** 				return OP_NIL | OP_C_RE;
 13004              		.loc 1 1357 9 is_stmt 1 view .LVU3985
1357:src/keys.c    **** 				return OP_NIL | OP_C_RE;
 13005              		.loc 1 1357 12 is_stmt 0 view .LVU3986
 13006 19ac BBF1020F 		cmp	fp, #2
 13007 19b0 27D0     		beq	.L1396
 13008              	.L1066:
1391:src/keys.c    **** 		return STATE_UNFINISHED;
 13009              		.loc 1 1391 3 is_stmt 1 view .LVU3987
 13010              	.LBB842:
 13011              	.LBI842:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13012              		.loc 1 114 13 view .LVU3988
 13013              	.LBE842:
 13014              	.LBE896:
 13015              	.LBE1309:
 13016              	.LBE1364:
 13017              	.LBE1439:
 115:src/keys.c    **** }
 13018              		.loc 1 115 2 view .LVU3989
 13019              	.LVL1106:
 13020              	.LBB1440:
 13021              	.LBB1365:
 13022              	.LBB1310:
 13023              	.LBB897:
 13024              	.LBB847:
 13025              	.LBB843:
 13026              	.LBI843:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13027              		.loc 1 104 20 view .LVU3990
 13028              	.LBB844:
 105:src/keys.c    **** 	State2.shifts = shift;
 13029              		.loc 1 105 2 view .LVU3991
 13030              	.LBB845:
 13031              	.LBI845:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13032              		.loc 1 96 13 view .LVU3992
 13033              	.LBB846:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 360


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13034              		.loc 1 97 2 view .LVU3993
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13035              		.loc 1 97 18 is_stmt 0 view .LVU3994
 13036 19b2 FFF7FEFF 		bl	shift_down
 13037              	.LVL1107:
  98:src/keys.c    **** }
 13038              		.loc 1 98 2 is_stmt 1 view .LVU3995
 13039              	.LBE846:
 13040              	.LBE845:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13041              		.loc 1 106 2 view .LVU3996
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13042              		.loc 1 106 16 is_stmt 0 view .LVU3997
 13043 19b6 0022     		movs	r2, #0
 13044 19b8 3368     		ldr	r3, [r6]
 13045 19ba 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13046              		.loc 1 108 2 is_stmt 1 view .LVU3998
 13047              	.LVL1108:
 108:src/keys.c    **** }
 13048              		.loc 1 108 2 is_stmt 0 view .LVU3999
 13049              	.LBE844:
 13050              	.LBE843:
 13051              	.LBE847:
1392:src/keys.c    **** 	}
 13052              		.loc 1 1392 3 is_stmt 1 view .LVU4000
1392:src/keys.c    **** 	}
 13053              		.loc 1 1392 10 is_stmt 0 view .LVU4001
 13054 19be 3324     		movs	r4, #51
 13055              	.LVL1109:
1392:src/keys.c    **** 	}
 13056              		.loc 1 1392 10 view .LVU4002
 13057 19c0 FEF779BB 		b	.L801
 13058              	.LVL1110:
 13059              	.L1055:
1324:src/keys.c    **** 		case (K21): // x<->y key
 13060              		.loc 1 1324 5 is_stmt 1 view .LVU4003
1324:src/keys.c    **** 		case (K21): // x<->y key
 13061              		.loc 1 1324 8 is_stmt 0 view .LVU4004
 13062 19c4 BBF1030F 		cmp	fp, #3
 13063 19c8 00F0D580 		beq	.L1397
1326:src/keys.c    **** 				reset_shift();
 13064              		.loc 1 1326 4 is_stmt 1 view .LVU4005
1326:src/keys.c    **** 				reset_shift();
 13065              		.loc 1 1326 25 is_stmt 0 view .LVU4006
 13066 19cc 0BF1FF33 		add	r3, fp, #-1
1326:src/keys.c    **** 				reset_shift();
 13067              		.loc 1 1326 7 view .LVU4007
 13068 19d0 DBB2     		uxtb	r3, r3
 13069 19d2 012B     		cmp	r3, #1
 13070 19d4 EDD8     		bhi	.L1066
 13071              	.L1120:
1327:src/keys.c    **** 				CLEAR_POLAR_READY;
 13072              		.loc 1 1327 5 is_stmt 1 view .LVU4008
 13073              	.LBB848:
 13074              	.LBI848:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 361


 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13075              		.loc 1 114 13 view .LVU4009
 13076              	.LBE848:
 13077              	.LBE897:
 13078              	.LBE1310:
 13079              	.LBE1365:
 13080              	.LBE1440:
 115:src/keys.c    **** }
 13081              		.loc 1 115 2 view .LVU4010
 13082              	.LVL1111:
 13083              	.LBB1441:
 13084              	.LBB1366:
 13085              	.LBB1311:
 13086              	.LBB898:
 13087              	.LBB855:
 13088              	.LBB849:
 13089              	.LBI849:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13090              		.loc 1 104 20 view .LVU4011
 13091              	.LBB850:
 105:src/keys.c    **** 	State2.shifts = shift;
 13092              		.loc 1 105 2 view .LVU4012
 13093              	.LBB851:
 13094              	.LBI851:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13095              		.loc 1 96 13 view .LVU4013
 13096              	.LBB852:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13097              		.loc 1 97 2 view .LVU4014
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13098              		.loc 1 97 18 is_stmt 0 view .LVU4015
 13099 19d6 FFF7FEFF 		bl	shift_down
 13100              	.LVL1112:
  98:src/keys.c    **** }
 13101              		.loc 1 98 2 is_stmt 1 view .LVU4016
 13102              	.LBE852:
 13103              	.LBE851:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13104              		.loc 1 106 2 view .LVU4017
 13105              	.LBE850:
 13106              	.LBE849:
 13107              	.LBE855:
1328:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
 13108              		.loc 1 1328 5 is_stmt 0 view .LVU4018
 13109 19da DAF80010 		ldr	r1, [r10]
 13110              	.LBB856:
 13111              	.LBB854:
 13112              	.LBB853:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13113              		.loc 1 106 16 view .LVU4019
 13114 19de 0022     		movs	r2, #0
 13115 19e0 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13116              		.loc 1 108 2 is_stmt 1 view .LVU4020
 13117              	.LVL1113:
 108:src/keys.c    **** }
 13118              		.loc 1 108 2 is_stmt 0 view .LVU4021
ARM GAS  /tmp/ccc9ZrJ3.s 			page 362


 13119              	.LBE853:
 13120              	.LBE854:
 13121              	.LBE856:
1328:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
 13122              		.loc 1 1328 5 is_stmt 1 view .LVU4022
 13123 19e4 91F8AD37 		ldrb	r3, [r1, #1965]	@ zero_extendqisi2
 13124 19e8 43F00103 		orr	r3, r3, #1
 13125 19ec 81F8AD37 		strb	r3, [r1, #1965]
1329:src/keys.c    **** 			}
 13126              		.loc 1 1329 5 view .LVU4023
 13127              	.LVL1114:
1329:src/keys.c    **** 			}
 13128              		.loc 1 1329 5 is_stmt 0 view .LVU4024
 13129              	.LBE898:
 13130              	.LBE1311:
 13131              	.LBE1366:
 13132              	.LBE1441:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13133              		.loc 1 3628 7 is_stmt 1 view .LVU4025
3628:src/keys.c    **** 	NonProgrammable = 0;
 13134              		.loc 1 3628 11 is_stmt 0 view .LVU4026
 13135 19f0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 13136              		.loc 1 3628 10 view .LVU4027
 13137 19f4 5D06     		lsls	r5, r3, #25
 13138 19f6 00F19B80 		bmi	.L1065
 13139              	.LBB1442:
 13140              	.LBB1367:
 13141              	.LBB1312:
 13142              	.LBB899:
1329:src/keys.c    **** 			}
 13143              		.loc 1 1329 12 view .LVU4028
 13144 19fa 43F26514 		movw	r4, #12645
 13145 19fe FFF784B9 		b	.L899
 13146              	.LVL1115:
 13147              	.L1396:
1329:src/keys.c    **** 			}
 13148              		.loc 1 1329 12 view .LVU4029
 13149              	.LBE899:
 13150              	.LBE1312:
 13151              	.LBE1367:
 13152              	.LBE1442:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13153              		.loc 1 3628 7 is_stmt 1 view .LVU4030
3628:src/keys.c    **** 	NonProgrammable = 0;
 13154              		.loc 1 3628 11 is_stmt 0 view .LVU4031
 13155 1a02 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 13156              		.loc 1 3628 10 view .LVU4032
 13157 1a06 5A06     		lsls	r2, r3, #25
 13158 1a08 11D5     		bpl	.L1163
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13159              		.loc 1 3629 2 is_stmt 1 view .LVU4033
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13160              		.loc 1 3629 18 is_stmt 0 view .LVU4034
 13161 1a0a 124B     		ldr	r3, .L1417+4
 13162 1a0c 0022     		movs	r2, #0
ARM GAS  /tmp/ccc9ZrJ3.s 			page 363


 13163 1a0e 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13164              		.loc 1 3630 2 is_stmt 1 view .LVU4035
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13165              		.loc 1 3630 32 is_stmt 0 view .LVU4036
 13166 1a10 40F2C510 		movw	r0, #453
 13167 1a14 FEF7E8BD 		b	.L1105
 13168              	.LVL1116:
 13169              	.L1070:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13170              		.loc 1 3628 7 is_stmt 1 view .LVU4037
3628:src/keys.c    **** 	NonProgrammable = 0;
 13171              		.loc 1 3628 11 is_stmt 0 view .LVU4038
 13172 1a18 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 13173              		.loc 1 3628 10 view .LVU4039
 13174 1a1c 5906     		lsls	r1, r3, #25
 13175 1a1e 0AD5     		bpl	.L1162
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13176              		.loc 1 3629 2 is_stmt 1 view .LVU4040
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13177              		.loc 1 3629 18 is_stmt 0 view .LVU4041
 13178 1a20 0C4B     		ldr	r3, .L1417+4
 13179 1a22 0022     		movs	r2, #0
 13180 1a24 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13181              		.loc 1 3630 2 is_stmt 1 view .LVU4042
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13182              		.loc 1 3630 32 is_stmt 0 view .LVU4043
 13183 1a26 4FF4E370 		mov	r0, #454
 13184 1a2a FEF7DDBD 		b	.L1105
 13185              	.LVL1117:
 13186              	.L1163:
 13187              	.LBB1443:
 13188              	.LBB1368:
 13189              	.LBB1313:
 13190              	.LBB900:
1358:src/keys.c    **** 			}
 13191              		.loc 1 1358 12 view .LVU4044
 13192 1a2e 40F2C514 		movw	r4, #453
 13193 1a32 FFF76AB9 		b	.L899
 13194              	.LVL1118:
 13195              	.L1162:
1355:src/keys.c    **** 			}
 13196              		.loc 1 1355 12 view .LVU4045
 13197 1a36 4FF4E374 		mov	r4, #454
 13198 1a3a FFF766B9 		b	.L899
 13199              	.LVL1119:
 13200              	.L1058:
1369:src/keys.c    **** 		case (K34): // divide key
 13201              		.loc 1 1369 4 is_stmt 1 view .LVU4046
1371:src/keys.c    **** 				reset_shift();
 13202              		.loc 1 1371 4 view .LVU4047
1371:src/keys.c    **** 				reset_shift();
 13203              		.loc 1 1371 7 is_stmt 0 view .LVU4048
 13204 1a3e BBF1030F 		cmp	fp, #3
 13205 1a42 28D0     		beq	.L1398
ARM GAS  /tmp/ccc9ZrJ3.s 			page 364


1376:src/keys.c    **** 			}
 13206              		.loc 1 1376 5 is_stmt 1 view .LVU4049
1376:src/keys.c    **** 			}
 13207              		.loc 1 1376 12 is_stmt 0 view .LVU4050
 13208 1a44 1620     		movs	r0, #22
 13209 1a46 FFF7FEFF 		bl	process_cmplx
 13210              	.LVL1120:
 13211 1a4a 0446     		mov	r4, r0
 13212              	.LVL1121:
1376:src/keys.c    **** 			}
 13213              		.loc 1 1376 12 view .LVU4051
 13214 1a4c FEF7C8BC 		b	.L835
 13215              	.L1418:
 13216              		.align	2
 13217              	.L1417:
 13218 1a50 00000000 		.word	.LANCHOR17
 13219 1a54 00000000 		.word	NonProgrammable
 13220 1a58 00000000 		.word	main_ram
 13221              	.LVL1122:
 13222              	.L1059:
1378:src/keys.c    **** 		case (K24): // <- key
 13223              		.loc 1 1378 4 is_stmt 1 view .LVU4052
1380:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13224              		.loc 1 1380 4 view .LVU4053
1380:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13225              		.loc 1 1380 8 is_stmt 0 view .LVU4054
 13226 1a5c DAF80030 		ldr	r3, [r10]
1380:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13227              		.loc 1 1380 7 view .LVU4055
 13228 1a60 93F9AC37 		ldrsb	r3, [r3, #1964]
 13229 1a64 002B     		cmp	r3, #0
 13230 1a66 A4DB     		blt	.L1066
1381:src/keys.c    **** 				zero_X ();
 13231              		.loc 1 1381 4 is_stmt 1 view .LVU4056
1381:src/keys.c    **** 				zero_X ();
 13232              		.loc 1 1381 7 is_stmt 0 view .LVU4057
 13233 1a68 BBF1030F 		cmp	fp, #3
 13234 1a6c A1D1     		bne	.L1066
1382:src/keys.c    **** 				State2.state_lift = 0;
 13235              		.loc 1 1382 5 is_stmt 1 view .LVU4058
 13236 1a6e FFF7FEFF 		bl	zero_X
 13237              	.LVL1123:
1383:src/keys.c    **** 				SET_REAL;
 13238              		.loc 1 1383 5 view .LVU4059
1383:src/keys.c    **** 				SET_REAL;
 13239              		.loc 1 1383 23 is_stmt 0 view .LVU4060
 13240 1a72 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1384:src/keys.c    **** 				stack_begin (0);
 13241              		.loc 1 1384 5 view .LVU4061
 13242 1a76 DAF80020 		ldr	r2, [r10]
1383:src/keys.c    **** 				SET_REAL;
 13243              		.loc 1 1383 23 view .LVU4062
 13244 1a7a 6FF38613 		bfc	r3, #6, #1
 13245 1a7e 88F81730 		strb	r3, [r8, #23]
1384:src/keys.c    **** 				stack_begin (0);
 13246              		.loc 1 1384 5 is_stmt 1 view .LVU4063
 13247 1a82 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 365


 13248 1a86 43F00203 		orr	r3, r3, #2
 13249 1a8a 82F8AC37 		strb	r3, [r2, #1964]
1385:src/keys.c    **** 			}
 13250              		.loc 1 1385 5 view .LVU4064
 13251 1a8e 0020     		movs	r0, #0
 13252 1a90 FFF7FEFF 		bl	stack_begin
 13253              	.LVL1124:
 13254 1a94 8DE7     		b	.L1066
 13255              	.L1398:
1372:src/keys.c    **** 				return OP_CDYA | OP_CDOTDIV;
 13256              		.loc 1 1372 5 view .LVU4065
 13257              	.LBB857:
 13258              	.LBI857:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13259              		.loc 1 114 13 view .LVU4066
 13260              	.LBE857:
 13261              	.LBE900:
 13262              	.LBE1313:
 13263              	.LBE1368:
 13264              	.LBE1443:
 115:src/keys.c    **** }
 13265              		.loc 1 115 2 view .LVU4067
 13266              	.LVL1125:
 13267              	.LBB1444:
 13268              	.LBB1369:
 13269              	.LBB1314:
 13270              	.LBB901:
 13271              	.LBB866:
 13272              	.LBB858:
 13273              	.LBI858:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13274              		.loc 1 104 20 view .LVU4068
 13275              	.LBB859:
 105:src/keys.c    **** 	State2.shifts = shift;
 13276              		.loc 1 105 2 view .LVU4069
 13277              	.LBB860:
 13278              	.LBI860:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13279              		.loc 1 96 13 view .LVU4070
 13280              	.LBB861:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13281              		.loc 1 97 2 view .LVU4071
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13282              		.loc 1 97 18 is_stmt 0 view .LVU4072
 13283 1a96 FFF7FEFF 		bl	shift_down
 13284              	.LVL1126:
  98:src/keys.c    **** }
 13285              		.loc 1 98 2 is_stmt 1 view .LVU4073
 13286              	.LBE861:
 13287              	.LBE860:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13288              		.loc 1 106 2 view .LVU4074
 13289              	.LBE859:
 13290              	.LBE858:
 13291              	.LBE866:
 13292              	.LBE901:
 13293              	.LBE1314:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 366


 13294              	.LBE1369:
 13295              	.LBE1444:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13296              		.loc 1 3628 11 is_stmt 0 view .LVU4075
 13297 1a9a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13298              	.LBB1445:
 13299              	.LBB1370:
 13300              	.LBB1315:
 13301              	.LBB902:
 13302              	.LBB867:
 13303              	.LBB864:
 13304              	.LBB862:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13305              		.loc 1 106 16 view .LVU4076
 13306 1a9e 0023     		movs	r3, #0
 13307              	.LBE862:
 13308              	.LBE864:
 13309              	.LBE867:
 13310              	.LBE902:
 13311              	.LBE1315:
 13312              	.LBE1370:
 13313              	.LBE1445:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13314              		.loc 1 3628 10 view .LVU4077
 13315 1aa0 5006     		lsls	r0, r2, #25
 13316              	.LBB1446:
 13317              	.LBB1371:
 13318              	.LBB1316:
 13319              	.LBB903:
 13320              	.LBB868:
 13321              	.LBB865:
 13322              	.LBB863:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13323              		.loc 1 106 16 view .LVU4078
 13324 1aa2 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13325              		.loc 1 108 2 is_stmt 1 view .LVU4079
 13326              	.LVL1127:
 108:src/keys.c    **** }
 13327              		.loc 1 108 2 is_stmt 0 view .LVU4080
 13328              	.LBE863:
 13329              	.LBE865:
 13330              	.LBE868:
1373:src/keys.c    **** 			}
 13331              		.loc 1 1373 5 is_stmt 1 view .LVU4081
1373:src/keys.c    **** 			}
 13332              		.loc 1 1373 5 is_stmt 0 view .LVU4082
 13333              	.LBE903:
 13334              	.LBE1316:
 13335              	.LBE1371:
 13336              	.LBE1446:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13337              		.loc 1 3628 7 is_stmt 1 view .LVU4083
3628:src/keys.c    **** 	NonProgrammable = 0;
 13338              		.loc 1 3628 10 is_stmt 0 view .LVU4084
 13339 1aa6 25D4     		bmi	.L1075
 13340              	.LBB1447:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 367


 13341              	.LBB1372:
 13342              	.LBB1317:
 13343              	.LBB904:
1373:src/keys.c    **** 			}
 13344              		.loc 1 1373 12 view .LVU4085
 13345 1aa8 40F23464 		movw	r4, #1588
 13346 1aac FFF72DB9 		b	.L899
 13347              	.LVL1128:
 13348              	.L1060:
1346:src/keys.c    **** 				return OP_NIL | OP_C_MIM;
 13349              		.loc 1 1346 4 is_stmt 1 view .LVU4086
1346:src/keys.c    **** 				return OP_NIL | OP_C_MIM;
 13350              		.loc 1 1346 7 is_stmt 0 view .LVU4087
 13351 1ab0 BBF1010F 		cmp	fp, #1
 13352 1ab4 28D0     		beq	.L1068
1349:src/keys.c    **** 				return OP_NIL | OP_C_MRE;
 13353              		.loc 1 1349 9 is_stmt 1 view .LVU4088
1349:src/keys.c    **** 				return OP_NIL | OP_C_MRE;
 13354              		.loc 1 1349 12 is_stmt 0 view .LVU4089
 13355 1ab6 BBF1030F 		cmp	fp, #3
 13356 1aba 7FF47AAF 		bne	.L1066
 13357              	.LVL1129:
1349:src/keys.c    **** 				return OP_NIL | OP_C_MRE;
 13358              		.loc 1 1349 12 view .LVU4090
 13359              	.LBE904:
 13360              	.LBE1317:
 13361              	.LBE1372:
 13362              	.LBE1447:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13363              		.loc 1 3628 7 is_stmt 1 view .LVU4091
3628:src/keys.c    **** 	NonProgrammable = 0;
 13364              		.loc 1 3628 11 is_stmt 0 view .LVU4092
 13365 1abe 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 13366              		.loc 1 3628 10 view .LVU4093
 13367 1ac2 5806     		lsls	r0, r3, #25
 13368 1ac4 1CD5     		bpl	.L1161
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13369              		.loc 1 3629 2 is_stmt 1 view .LVU4094
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13370              		.loc 1 3629 18 is_stmt 0 view .LVU4095
 13371 1ac6 C34B     		ldr	r3, .L1419
 13372 1ac8 0022     		movs	r2, #0
 13373 1aca 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13374              		.loc 1 3630 2 is_stmt 1 view .LVU4096
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13375              		.loc 1 3630 32 is_stmt 0 view .LVU4097
 13376 1acc 4FF4E270 		mov	r0, #452
 13377 1ad0 FEF78ABD 		b	.L1105
 13378              	.LVL1130:
 13379              	.L1061:
 13380              	.LBB1448:
 13381              	.LBB1373:
 13382              	.LBB1318:
 13383              	.LBB905:
1326:src/keys.c    **** 				reset_shift();
ARM GAS  /tmp/ccc9ZrJ3.s 			page 368


 13384              		.loc 1 1326 4 is_stmt 1 view .LVU4098
1326:src/keys.c    **** 				reset_shift();
 13385              		.loc 1 1326 25 is_stmt 0 view .LVU4099
 13386 1ad4 0BF1FF33 		add	r3, fp, #-1
1326:src/keys.c    **** 				reset_shift();
 13387              		.loc 1 1326 7 view .LVU4100
 13388 1ad8 DBB2     		uxtb	r3, r3
 13389 1ada 012B     		cmp	r3, #1
 13390 1adc 7FF67BAF 		bls	.L1120
1331:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
 13391              		.loc 1 1331 9 is_stmt 1 view .LVU4101
1331:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
 13392              		.loc 1 1331 12 is_stmt 0 view .LVU4102
 13393 1ae0 BBF1030F 		cmp	fp, #3
 13394 1ae4 7FF465AF 		bne	.L1066
1332:src/keys.c    **** 			}
 13395              		.loc 1 1332 5 is_stmt 1 view .LVU4103
1332:src/keys.c    **** 			}
 13396              		.loc 1 1332 12 is_stmt 0 view .LVU4104
 13397 1ae8 0D20     		movs	r0, #13
 13398 1aea FFF7FEFF 		bl	process_cmplx
 13399              	.LVL1131:
 13400 1aee 0446     		mov	r4, r0
 13401              	.LVL1132:
1332:src/keys.c    **** 			}
 13402              		.loc 1 1332 12 view .LVU4105
 13403 1af0 FEF776BC 		b	.L835
 13404              	.LVL1133:
 13405              	.L1075:
1332:src/keys.c    **** 			}
 13406              		.loc 1 1332 12 view .LVU4106
 13407              	.LBE905:
 13408              	.LBE1318:
 13409              	.LBE1373:
 13410              	.LBE1448:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13411              		.loc 1 3629 2 is_stmt 1 view .LVU4107
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13412              		.loc 1 3629 18 is_stmt 0 view .LVU4108
 13413 1af4 B74A     		ldr	r2, .L1419
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13414              		.loc 1 3630 32 view .LVU4109
 13415 1af6 40F23460 		movw	r0, #1588
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13416              		.loc 1 3629 18 view .LVU4110
 13417 1afa 1360     		str	r3, [r2]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13418              		.loc 1 3630 2 is_stmt 1 view .LVU4111
 13419 1afc FEF774BD 		b	.L1105
 13420              	.LVL1134:
 13421              	.L1161:
 13422              	.LBB1449:
 13423              	.LBB1374:
 13424              	.LBB1319:
 13425              	.LBB906:
1350:src/keys.c    **** 			}
 13426              		.loc 1 1350 12 is_stmt 0 view .LVU4112
ARM GAS  /tmp/ccc9ZrJ3.s 			page 369


 13427 1b00 4FF4E274 		mov	r4, #452
 13428 1b04 FFF701B9 		b	.L899
 13429              	.LVL1135:
 13430              	.L1068:
1350:src/keys.c    **** 			}
 13431              		.loc 1 1350 12 view .LVU4113
 13432              	.LBE906:
 13433              	.LBE1319:
 13434              	.LBE1374:
 13435              	.LBE1449:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13436              		.loc 1 3628 7 is_stmt 1 view .LVU4114
3628:src/keys.c    **** 	NonProgrammable = 0;
 13437              		.loc 1 3628 11 is_stmt 0 view .LVU4115
 13438 1b08 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 13439              		.loc 1 3628 10 view .LVU4116
 13440 1b0c 5C06     		lsls	r4, r3, #25
 13441 1b0e 25D5     		bpl	.L1160
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13442              		.loc 1 3629 2 is_stmt 1 view .LVU4117
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13443              		.loc 1 3629 18 is_stmt 0 view .LVU4118
 13444 1b10 B04B     		ldr	r3, .L1419
 13445 1b12 0022     		movs	r2, #0
 13446 1b14 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13447              		.loc 1 3630 2 is_stmt 1 view .LVU4119
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13448              		.loc 1 3630 32 is_stmt 0 view .LVU4120
 13449 1b16 40F2C310 		movw	r0, #451
 13450 1b1a FEF765BD 		b	.L1105
 13451              	.LVL1136:
 13452              	.L1056:
 13453              	.LBB1450:
 13454              	.LBB1375:
 13455              	.LBB1320:
 13456              	.LBB907:
1362:src/keys.c    **** 				reset_shift();
 13457              		.loc 1 1362 4 is_stmt 1 view .LVU4121
1362:src/keys.c    **** 				reset_shift();
 13458              		.loc 1 1362 7 is_stmt 0 view .LVU4122
 13459 1b1e BBF1030F 		cmp	fp, #3
 13460 1b22 33D0     		beq	.L1399
1367:src/keys.c    **** 			}
 13461              		.loc 1 1367 5 is_stmt 1 view .LVU4123
1367:src/keys.c    **** 			}
 13462              		.loc 1 1367 12 is_stmt 0 view .LVU4124
 13463 1b24 1C20     		movs	r0, #28
 13464 1b26 FFF7FEFF 		bl	process_cmplx
 13465              	.LVL1137:
 13466 1b2a 0446     		mov	r4, r0
 13467              	.LVL1138:
1367:src/keys.c    **** 			}
 13468              		.loc 1 1367 12 view .LVU4125
 13469 1b2c FEF758BC 		b	.L835
 13470              	.LVL1139:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 370


 13471              	.L1065:
1367:src/keys.c    **** 			}
 13472              		.loc 1 1367 12 view .LVU4126
 13473              	.LBE907:
 13474              	.LBE1320:
 13475              	.LBE1375:
 13476              	.LBE1450:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13477              		.loc 1 3629 2 is_stmt 1 view .LVU4127
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13478              		.loc 1 3629 18 is_stmt 0 view .LVU4128
 13479 1b30 A84B     		ldr	r3, .L1419
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13480              		.loc 1 3630 32 view .LVU4129
 13481 1b32 43F26510 		movw	r0, #12645
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13482              		.loc 1 3629 18 view .LVU4130
 13483 1b36 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13484              		.loc 1 3630 2 is_stmt 1 view .LVU4131
 13485 1b38 FEF756BD 		b	.L1105
 13486              	.LVL1140:
 13487              	.L1057:
 13488              	.LBB1451:
 13489              	.LBB1376:
 13490              	.LBB1321:
 13491              	.LBB908:
1336:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
 13492              		.loc 1 1336 4 view .LVU4132
1336:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
 13493              		.loc 1 1336 7 is_stmt 0 view .LVU4133
 13494 1b3c BBF1010F 		cmp	fp, #1
 13495 1b40 10D0     		beq	.L1400
1339:src/keys.c    **** 				SET_POLAR_DISPLAY;
 13496              		.loc 1 1339 9 is_stmt 1 view .LVU4134
1339:src/keys.c    **** 				SET_POLAR_DISPLAY;
 13497              		.loc 1 1339 12 is_stmt 0 view .LVU4135
 13498 1b42 BBF1020F 		cmp	fp, #2
 13499 1b46 7FF434AF 		bne	.L1066
1340:src/keys.c    **** 				CLEAR_POLAR_READY;
 13500              		.loc 1 1340 5 is_stmt 1 view .LVU4136
 13501 1b4a DAF80020 		ldr	r2, [r10]
1341:src/keys.c    **** 				update_speed(0); // new polar display calculated from keyboard needs a speed boost
 13502              		.loc 1 1341 5 view .LVU4137
1340:src/keys.c    **** 				CLEAR_POLAR_READY;
 13503              		.loc 1 1340 5 is_stmt 0 view .LVU4138
 13504 1b4e B2F8AC37 		ldrh	r3, [r2, #1964]
 13505 1b52 43F4C073 		orr	r3, r3, #384
 13506 1b56 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 13507 1b5a 2AE7     		b	.L1066
 13508              	.LVL1141:
 13509              	.L1160:
1347:src/keys.c    **** 			}
 13510              		.loc 1 1347 12 view .LVU4139
 13511 1b5c 40F2C314 		movw	r4, #451
 13512 1b60 FFF7D3B8 		b	.L899
 13513              	.LVL1142:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 371


 13514              	.L1400:
1337:src/keys.c    **** 			}
 13515              		.loc 1 1337 5 is_stmt 1 view .LVU4140
 13516 1b64 DAF80030 		ldr	r3, [r10]
 13517 1b68 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 13518 1b6c 6FF3C712 		bfc	r2, #7, #1
 13519 1b70 83F8AC27 		strb	r2, [r3, #1964]
 13520 1b74 1DE7     		b	.L1066
 13521              	.L1397:
 13522              	.LVL1143:
1337:src/keys.c    **** 			}
 13523              		.loc 1 1337 5 is_stmt 0 view .LVU4141
 13524              	.LBE908:
 13525              	.LBE1321:
 13526              	.LBE1376:
 13527              	.LBE1451:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13528              		.loc 1 3628 7 is_stmt 1 view .LVU4142
3628:src/keys.c    **** 	NonProgrammable = 0;
 13529              		.loc 1 3628 11 is_stmt 0 view .LVU4143
 13530 1b76 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3628:src/keys.c    **** 	NonProgrammable = 0;
 13531              		.loc 1 3628 10 view .LVU4144
 13532 1b7a 5D06     		lsls	r5, r3, #25
 13533 1b7c 15D5     		bpl	.L1106
 13534              	.LVL1144:
 13535              	.L1104:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13536              		.loc 1 3629 2 is_stmt 1 view .LVU4145
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13537              		.loc 1 3629 18 is_stmt 0 view .LVU4146
 13538 1b7e 954B     		ldr	r3, .L1419
 13539 1b80 0022     		movs	r2, #0
 13540 1b82 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13541              		.loc 1 3630 2 is_stmt 1 view .LVU4147
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13542              		.loc 1 3630 32 is_stmt 0 view .LVU4148
 13543 1b84 4FF48170 		mov	r0, #258
 13544 1b88 FEF72EBD 		b	.L1105
 13545              	.LVL1145:
 13546              	.L1399:
 13547              	.LBB1452:
 13548              	.LBB1377:
 13549              	.LBB1322:
 13550              	.LBB909:
1363:src/keys.c    **** 				return OP_CDYA | OP_CDOT;
 13551              		.loc 1 1363 5 is_stmt 1 view .LVU4149
 13552              	.LBB869:
 13553              	.LBI869:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13554              		.loc 1 114 13 view .LVU4150
 13555              	.LBE869:
 13556              	.LBE909:
 13557              	.LBE1322:
 13558              	.LBE1377:
 13559              	.LBE1452:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 372


 115:src/keys.c    **** }
 13560              		.loc 1 115 2 view .LVU4151
 13561              	.LBB1453:
 13562              	.LBB1378:
 13563              	.LBB1323:
 13564              	.LBB910:
 13565              	.LBB878:
 13566              	.LBB870:
 13567              	.LBI870:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13568              		.loc 1 104 20 view .LVU4152
 13569              	.LBB871:
 105:src/keys.c    **** 	State2.shifts = shift;
 13570              		.loc 1 105 2 view .LVU4153
 13571              	.LBB872:
 13572              	.LBI872:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13573              		.loc 1 96 13 view .LVU4154
 13574              	.LBB873:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13575              		.loc 1 97 2 view .LVU4155
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13576              		.loc 1 97 18 is_stmt 0 view .LVU4156
 13577 1b8c FFF7FEFF 		bl	shift_down
 13578              	.LVL1146:
  98:src/keys.c    **** }
 13579              		.loc 1 98 2 is_stmt 1 view .LVU4157
 13580              	.LBE873:
 13581              	.LBE872:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13582              		.loc 1 106 2 view .LVU4158
 13583              	.LBE871:
 13584              	.LBE870:
 13585              	.LBE878:
 13586              	.LBE910:
 13587              	.LBE1323:
 13588              	.LBE1378:
 13589              	.LBE1453:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13590              		.loc 1 3628 11 is_stmt 0 view .LVU4159
 13591 1b90 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13592              	.LBB1454:
 13593              	.LBB1379:
 13594              	.LBB1324:
 13595              	.LBB911:
 13596              	.LBB879:
 13597              	.LBB876:
 13598              	.LBB874:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13599              		.loc 1 106 16 view .LVU4160
 13600 1b94 0023     		movs	r3, #0
 13601              	.LBE874:
 13602              	.LBE876:
 13603              	.LBE879:
 13604              	.LBE911:
 13605              	.LBE1324:
 13606              	.LBE1379:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 373


 13607              	.LBE1454:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13608              		.loc 1 3628 10 view .LVU4161
 13609 1b96 5406     		lsls	r4, r2, #25
 13610              	.LVL1147:
 13611              	.LBB1455:
 13612              	.LBB1380:
 13613              	.LBB1325:
 13614              	.LBB912:
 13615              	.LBB880:
 13616              	.LBB877:
 13617              	.LBB875:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13618              		.loc 1 106 16 view .LVU4162
 13619 1b98 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13620              		.loc 1 108 2 is_stmt 1 view .LVU4163
 13621              	.LVL1148:
 108:src/keys.c    **** }
 13622              		.loc 1 108 2 is_stmt 0 view .LVU4164
 13623              	.LBE875:
 13624              	.LBE877:
 13625              	.LBE880:
1364:src/keys.c    **** 			}
 13626              		.loc 1 1364 5 is_stmt 1 view .LVU4165
1364:src/keys.c    **** 			}
 13627              		.loc 1 1364 5 is_stmt 0 view .LVU4166
 13628              	.LBE912:
 13629              	.LBE1325:
 13630              	.LBE1380:
 13631              	.LBE1455:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13632              		.loc 1 3628 7 is_stmt 1 view .LVU4167
3628:src/keys.c    **** 	NonProgrammable = 0;
 13633              		.loc 1 3628 10 is_stmt 0 view .LVU4168
 13634 1b9c 09D4     		bmi	.L1073
 13635              	.LBB1456:
 13636              	.LBB1381:
 13637              	.LBB1326:
 13638              	.LBB913:
1364:src/keys.c    **** 			}
 13639              		.loc 1 1364 12 view .LVU4169
 13640 1b9e 40F23364 		movw	r4, #1587
 13641 1ba2 FFF7B2B8 		b	.L899
 13642              	.LVL1149:
 13643              	.L1034:
1364:src/keys.c    **** 			}
 13644              		.loc 1 1364 12 view .LVU4170
 13645              	.LBE913:
 13646              	.LBE1326:
 13647              	.LBE1381:
 13648              	.LBE1456:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13649              		.loc 1 3628 7 is_stmt 1 view .LVU4171
3628:src/keys.c    **** 	NonProgrammable = 0;
 13650              		.loc 1 3628 10 is_stmt 0 view .LVU4172
 13651 1ba6 4906     		lsls	r1, r1, #25
ARM GAS  /tmp/ccc9ZrJ3.s 			page 374


 13652 1ba8 E9D4     		bmi	.L1104
 13653              	.LVL1150:
 13654              	.L1106:
 13655              	.LBB1457:
 13656              	.LBB1382:
 13657              	.LBB1327:
 13658              	.LBB975:
1864:src/keys.c    **** 		else if (shift == SHIFT_N) {
 13659              		.loc 1 1864 11 view .LVU4173
 13660 1baa 4FF48174 		mov	r4, #258
 13661 1bae FFF7ACB8 		b	.L899
 13662              	.LVL1151:
 13663              	.L1073:
1864:src/keys.c    **** 		else if (shift == SHIFT_N) {
 13664              		.loc 1 1864 11 view .LVU4174
 13665              	.LBE975:
 13666              	.LBE1327:
 13667              	.LBE1382:
 13668              	.LBE1457:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13669              		.loc 1 3629 2 is_stmt 1 view .LVU4175
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13670              		.loc 1 3629 18 is_stmt 0 view .LVU4176
 13671 1bb2 884A     		ldr	r2, .L1419
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13672              		.loc 1 3630 32 view .LVU4177
 13673 1bb4 40F23360 		movw	r0, #1587
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13674              		.loc 1 3629 18 view .LVU4178
 13675 1bb8 1360     		str	r3, [r2]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13676              		.loc 1 3630 2 is_stmt 1 view .LVU4179
 13677 1bba FEF715BD 		b	.L1105
 13678              	.LVL1152:
 13679              	.L1010:
 13680              	.LBB1458:
 13681              	.LBB1383:
 13682              	.LBB1328:
 13683              	.LBB976:
1875:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13684              		.loc 1 1875 3 view .LVU4180
1875:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13685              		.loc 1 1875 6 is_stmt 0 view .LVU4181
 13686 1bbe 0128     		cmp	r0, #1
 13687 1bc0 7FF485AB 		bne	.L1009
 13688              	.LVL1153:
1875:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13689              		.loc 1 1875 6 view .LVU4182
 13690              	.LBE976:
 13691              	.LBE1328:
 13692              	.LBE1383:
 13693              	.LBE1458:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13694              		.loc 1 3628 7 is_stmt 1 view .LVU4183
3628:src/keys.c    **** 	NonProgrammable = 0;
 13695              		.loc 1 3628 10 is_stmt 0 view .LVU4184
 13696 1bc4 4A06     		lsls	r2, r1, #25
ARM GAS  /tmp/ccc9ZrJ3.s 			page 375


 13697              	.LVL1154:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13698              		.loc 1 3628 10 view .LVU4185
 13699 1bc6 1AD5     		bpl	.L1158
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13700              		.loc 1 3629 2 is_stmt 1 view .LVU4186
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13701              		.loc 1 3629 18 is_stmt 0 view .LVU4187
 13702 1bc8 824B     		ldr	r3, .L1419
 13703 1bca 0022     		movs	r2, #0
 13704 1bcc 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13705              		.loc 1 3630 2 is_stmt 1 view .LVU4188
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13706              		.loc 1 3630 32 is_stmt 0 view .LVU4189
 13707 1bce 40F23B10 		movw	r0, #315
 13708              	.LVL1155:
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13709              		.loc 1 3630 32 view .LVU4190
 13710 1bd2 FEF709BD 		b	.L1105
 13711              	.LVL1156:
 13712              	.L1012:
 13713              	.LBB1459:
 13714              	.LBB1384:
 13715              	.LBB1329:
 13716              	.LBB977:
1861:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13717              		.loc 1 1861 3 is_stmt 1 view .LVU4191
1861:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13718              		.loc 1 1861 6 is_stmt 0 view .LVU4192
 13719 1bd6 0128     		cmp	r0, #1
 13720 1bd8 3FF4FFAD 		beq	.L1313
1863:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13721              		.loc 1 1863 8 is_stmt 1 view .LVU4193
1863:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13722              		.loc 1 1863 11 is_stmt 0 view .LVU4194
 13723 1bdc 0328     		cmp	r0, #3
 13724 1bde E2D0     		beq	.L1034
1865:src/keys.c    **** #ifdef DM42
 13725              		.loc 1 1865 8 is_stmt 1 view .LVU4195
1865:src/keys.c    **** #ifdef DM42
 13726              		.loc 1 1865 11 is_stmt 0 view .LVU4196
 13727 1be0 0028     		cmp	r0, #0
 13728 1be2 7EF482AD 		bne	.L1312
1867:src/keys.c    **** 		  display_current_menu();
 13729              		.loc 1 1867 5 is_stmt 1 view .LVU4197
 13730 1be6 4FF0FF30 		mov	r0, #-1
 13731              	.LVL1157:
1867:src/keys.c    **** 		  display_current_menu();
 13732              		.loc 1 1867 5 is_stmt 0 view .LVU4198
 13733 1bea FFF7FEFF 		bl	set_menu
 13734              	.LVL1158:
1868:src/keys.c    **** #endif
 13735              		.loc 1 1868 5 is_stmt 1 view .LVU4199
1872:src/keys.c    **** 
 13736              		.loc 1 1872 10 is_stmt 0 view .LVU4200
 13737 1bee 3324     		movs	r4, #51
ARM GAS  /tmp/ccc9ZrJ3.s 			page 376


1868:src/keys.c    **** #endif
 13738              		.loc 1 1868 5 view .LVU4201
 13739 1bf0 FFF7FEFF 		bl	display_current_menu
 13740              	.LVL1159:
1870:src/keys.c    **** 		}
 13741              		.loc 1 1870 5 is_stmt 1 view .LVU4202
 13742 1bf4 FFF7FEFF 		bl	init_state
 13743              	.LVL1160:
 13744 1bf8 3368     		ldr	r3, [r6]
 13745 1bfa FEF75CBA 		b	.L801
 13746              	.LVL1161:
 13747              	.L1158:
1876:src/keys.c    **** 		break;
 13748              		.loc 1 1876 11 is_stmt 0 view .LVU4203
 13749 1bfe 40F23B14 		movw	r4, #315
 13750 1c02 FFF782B8 		b	.L899
 13751              	.LVL1162:
 13752              	.L1013:
1849:src/keys.c    **** 	    if ( State2.runmode ) {
 13753              		.loc 1 1849 4 is_stmt 1 view .LVU4204
1849:src/keys.c    **** 	    if ( State2.runmode ) {
 13754              		.loc 1 1849 7 is_stmt 0 view .LVU4205
 13755 1c06 0028     		cmp	r0, #0
 13756 1c08 7FF461AB 		bne	.L1009
1850:src/keys.c    **** 	      // Alpha scroll right
 13757              		.loc 1 1850 6 is_stmt 1 view .LVU4206
1850:src/keys.c    **** 	      // Alpha scroll right
 13758              		.loc 1 1850 9 is_stmt 0 view .LVU4207
 13759 1c0c 4906     		lsls	r1, r1, #25
 13760 1c0e 7EF55CAC 		bpl	.L1031
1852:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13761              		.loc 1 1852 8 is_stmt 1 view .LVU4208
1852:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13762              		.loc 1 1852 11 is_stmt 0 view .LVU4209
 13763 1c12 B9F1000F 		cmp	r9, #0
 13764 1c16 3EF468AD 		beq	.L1312
1853:src/keys.c    **** 	      return STATE_UNFINISHED;
 13765              		.loc 1 1853 3 is_stmt 1 view .LVU4210
1853:src/keys.c    **** 	      return STATE_UNFINISHED;
 13766              		.loc 1 1853 31 is_stmt 0 view .LVU4211
 13767 1c1a 09F1FF33 		add	r3, r9, #-1
1853:src/keys.c    **** 	      return STATE_UNFINISHED;
 13768              		.loc 1 1853 20 view .LVU4212
 13769 1c1e 88F80D30 		strb	r3, [r8, #13]
1854:src/keys.c    **** 	    }
 13770              		.loc 1 1854 15 view .LVU4213
 13771 1c22 3324     		movs	r4, #51
 13772 1c24 3368     		ldr	r3, [r6]
 13773 1c26 FEF746BA 		b	.L801
 13774              	.L1014:
1820:src/keys.c    **** 	    if ( State2.runmode ) {
 13775              		.loc 1 1820 4 is_stmt 1 view .LVU4214
1820:src/keys.c    **** 	    if ( State2.runmode ) {
 13776              		.loc 1 1820 7 is_stmt 0 view .LVU4215
 13777 1c2a 0028     		cmp	r0, #0
 13778 1c2c 7FF44FAB 		bne	.L1009
1821:src/keys.c    **** 	      // Alpha scroll left
ARM GAS  /tmp/ccc9ZrJ3.s 			page 377


 13779              		.loc 1 1821 6 is_stmt 1 view .LVU4216
1821:src/keys.c    **** 	      // Alpha scroll left
 13780              		.loc 1 1821 9 is_stmt 0 view .LVU4217
 13781 1c30 4806     		lsls	r0, r1, #25
 13782              	.LVL1163:
1821:src/keys.c    **** 	      // Alpha scroll left
 13783              		.loc 1 1821 9 view .LVU4218
 13784 1c32 7EF542AC 		bpl	.L1027
1829:src/keys.c    **** 		alpha_pos += 1;
 13785              		.loc 1 1829 8 is_stmt 1 view .LVU4219
1829:src/keys.c    **** 		alpha_pos += 1;
 13786              		.loc 1 1829 11 is_stmt 0 view .LVU4220
 13787 1c36 B9F1000F 		cmp	r9, #0
 13788 1c3a 64D1     		bne	.L1028
 13789              	.LVL1164:
 13790              	.L1030:
1830:src/keys.c    **** 	      }
 13791              		.loc 1 1830 3 is_stmt 1 view .LVU4221
1830:src/keys.c    **** 	      }
 13792              		.loc 1 1830 13 is_stmt 0 view .LVU4222
 13793 1c3c 09F1010A 		add	r10, r9, #1
 13794              	.LVL1165:
 13795              	.L1029:
1837:src/keys.c    **** #else
 13796              		.loc 1 1837 8 is_stmt 1 view .LVU4223
 13797 1c40 3368     		ldr	r3, [r6]
1837:src/keys.c    **** #else
 13798              		.loc 1 1837 25 is_stmt 0 view .LVU4224
 13799 1c42 88F80DA0 		strb	r10, [r8, #13]
1842:src/keys.c    **** 	    }
 13800              		.loc 1 1842 8 is_stmt 1 view .LVU4225
1842:src/keys.c    **** 	    }
 13801              		.loc 1 1842 15 is_stmt 0 view .LVU4226
 13802 1c46 3324     		movs	r4, #51
 13803 1c48 FEF735BA 		b	.L801
 13804              	.LVL1166:
 13805              	.L1025:
1815:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13806              		.loc 1 1815 3 is_stmt 1 view .LVU4227
1815:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13807              		.loc 1 1815 6 is_stmt 0 view .LVU4228
 13808 1c4c 0328     		cmp	r0, #3
 13809 1c4e 7FF43EAB 		bne	.L1009
 13810              	.LVL1167:
1815:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13811              		.loc 1 1815 6 view .LVU4229
 13812              	.LBE977:
 13813              	.LBE1329:
 13814              	.LBE1384:
 13815              	.LBE1459:
3628:src/keys.c    **** 	NonProgrammable = 0;
 13816              		.loc 1 3628 7 is_stmt 1 view .LVU4230
3628:src/keys.c    **** 	NonProgrammable = 0;
 13817              		.loc 1 3628 10 is_stmt 0 view .LVU4231
 13818 1c52 4B06     		lsls	r3, r1, #25
 13819 1c54 53D5     		bpl	.L1164
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccc9ZrJ3.s 			page 378


 13820              		.loc 1 3629 2 is_stmt 1 view .LVU4232
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13821              		.loc 1 3629 18 is_stmt 0 view .LVU4233
 13822 1c56 5F4B     		ldr	r3, .L1419
 13823 1c58 0022     		movs	r2, #0
 13824              	.LVL1168:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13825              		.loc 1 3629 18 view .LVU4234
 13826 1c5a 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13827              		.loc 1 3630 2 is_stmt 1 view .LVU4235
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13828              		.loc 1 3630 32 is_stmt 0 view .LVU4236
 13829 1c5c 4FF4BA70 		mov	r0, #372
 13830              	.LVL1169:
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13831              		.loc 1 3630 32 view .LVU4237
 13832 1c60 FEF7C2BC 		b	.L1105
 13833              	.LVL1170:
 13834              	.L1017:
 13835              	.LBB1460:
 13836              	.LBB1385:
 13837              	.LBB1330:
 13838              	.LBB978:
1786:src/keys.c    **** 			init_arg(RARG_ARCL);
 13839              		.loc 1 1786 3 is_stmt 1 view .LVU4238
1786:src/keys.c    **** 			init_arg(RARG_ARCL);
 13840              		.loc 1 1786 6 is_stmt 0 view .LVU4239
 13841 1c64 0128     		cmp	r0, #1
 13842 1c66 57D0     		beq	.L1401
1789:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13843              		.loc 1 1789 10 is_stmt 1 view .LVU4240
1789:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13844              		.loc 1 1789 13 is_stmt 0 view .LVU4241
 13845 1c68 0328     		cmp	r0, #3
 13846 1c6a 7FF430AB 		bne	.L1009
1790:src/keys.c    **** 			return STATE_UNFINISHED;
 13847              		.loc 1 1790 4 is_stmt 1 view .LVU4242
 13848              	.LVL1171:
 13849              	.LBB960:
 13850              	.LBI960:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13851              		.loc 1 552 13 view .LVU4243
 13852              	.LBB961:
 553:src/keys.c    **** 		return;
 13853              		.loc 1 553 2 view .LVU4244
 553:src/keys.c    **** 		return;
 13854              		.loc 1 553 6 is_stmt 0 view .LVU4245
 13855 1c6e FFF7FEFF 		bl	is_bad_cmdline
 13856              	.LVL1172:
 553:src/keys.c    **** 		return;
 13857              		.loc 1 553 5 view .LVU4246
 13858 1c72 0346     		mov	r3, r0
 13859 1c74 0028     		cmp	r0, #0
 13860 1c76 7EF438AD 		bne	.L1312
 13861 1c7a 7320     		movs	r0, #115
 13862              	.LBE961:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 379


 13863              	.LBE960:
 13864              	.LBE978:
 13865              	.LBE1330:
 13866              	.LBE1385:
 13867              	.LBE1460:
3402:src/keys.c    ****   //print_debug(60,c);
 13868              		.loc 1 3402 7 view .LVU4247
 13869 1c7c 1D46     		mov	r5, r3
 13870              	.LBB1461:
 13871              	.LBB1386:
 13872              	.LBB1331:
 13873              	.LBB979:
1791:src/keys.c    **** 		}
 13874              		.loc 1 1791 11 view .LVU4248
 13875 1c7e 3324     		movs	r4, #51
 13876              	.LBB963:
 13877              	.LBB962:
 13878 1c80 FFF7FEFF 		bl	init_arg.part.0
 13879              	.LVL1173:
 13880 1c84 3368     		ldr	r3, [r6]
 13881 1c86 FEF716BA 		b	.L801
 13882              	.LVL1174:
 13883              	.L1016:
1791:src/keys.c    **** 		}
 13884              		.loc 1 1791 11 view .LVU4249
 13885              	.LBE962:
 13886              	.LBE963:
1796:src/keys.c    **** 			break;
 13887              		.loc 1 1796 3 is_stmt 1 view .LVU4250
1796:src/keys.c    **** 			break;
 13888              		.loc 1 1796 24 is_stmt 0 view .LVU4251
 13889 1c8a 831E     		subs	r3, r0, #2
1796:src/keys.c    **** 			break;
 13890              		.loc 1 1796 6 view .LVU4252
 13891 1c8c DBB2     		uxtb	r3, r3
 13892 1c8e 012B     		cmp	r3, #1
 13893 1c90 7FF61DAB 		bls	.L1009
1798:src/keys.c    **** 			State2.multi = 1;
 13894              		.loc 1 1798 3 is_stmt 1 view .LVU4253
1798:src/keys.c    **** 			State2.multi = 1;
 13895              		.loc 1 1798 6 is_stmt 0 view .LVU4254
 13896 1c94 0128     		cmp	r0, #1
 13897 1c96 02D1     		bne	.L1023
1798:src/keys.c    **** 			State2.multi = 1;
 13898              		.loc 1 1798 24 view .LVU4255
 13899 1c98 11F04001 		ands	r1, r1, #64
 13900 1c9c 0FD0     		beq	.L1402
 13901              	.L1023:
1804:src/keys.c    **** 		State2.alphashift = 0;
 13902              		.loc 1 1804 3 is_stmt 1 view .LVU4256
1805:src/keys.c    **** #ifdef DM42
 13903              		.loc 1 1805 3 view .LVU4257
1804:src/keys.c    **** 		State2.alphashift = 0;
 13904              		.loc 1 1804 17 is_stmt 0 view .LVU4258
 13905 1c9e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1807:src/keys.c    **** 		display_current_menu();
 13906              		.loc 1 1807 3 view .LVU4259
ARM GAS  /tmp/ccc9ZrJ3.s 			page 380


 13907 1ca2 4FF0FF30 		mov	r0, #-1
 13908              	.LVL1175:
1804:src/keys.c    **** 		State2.alphashift = 0;
 13909              		.loc 1 1804 17 view .LVU4260
 13910 1ca6 23F01803 		bic	r3, r3, #24
 13911 1caa 88F81630 		strb	r3, [r8, #22]
1807:src/keys.c    **** 		display_current_menu();
 13912              		.loc 1 1807 3 is_stmt 1 view .LVU4261
1810:src/keys.c    **** 
 13913              		.loc 1 1810 10 is_stmt 0 view .LVU4262
 13914 1cae 3324     		movs	r4, #51
1807:src/keys.c    **** 		display_current_menu();
 13915              		.loc 1 1807 3 view .LVU4263
 13916 1cb0 FFF7FEFF 		bl	set_menu
 13917              	.LVL1176:
1808:src/keys.c    **** #endif
 13918              		.loc 1 1808 3 is_stmt 1 view .LVU4264
 13919 1cb4 FFF7FEFF 		bl	display_current_menu
 13920              	.LVL1177:
1810:src/keys.c    **** 
 13921              		.loc 1 1810 3 view .LVU4265
 13922 1cb8 3368     		ldr	r3, [r6]
1810:src/keys.c    **** 
 13923              		.loc 1 1810 10 is_stmt 0 view .LVU4266
 13924 1cba FEF7FCB9 		b	.L801
 13925              	.LVL1178:
 13926              	.L1402:
1799:src/keys.c    **** 			State2.numdigit = 0;
 13927              		.loc 1 1799 4 is_stmt 1 view .LVU4267
1799:src/keys.c    **** 			State2.numdigit = 0;
 13928              		.loc 1 1799 17 is_stmt 0 view .LVU4268
 13929 1cbe 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 13930              	.LVL1179:
1800:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 13931              		.loc 1 1800 20 view .LVU4269
 13932 1cc2 88F80B10 		strb	r1, [r8, #11]
1799:src/keys.c    **** 			State2.numdigit = 0;
 13933              		.loc 1 1799 17 view .LVU4270
 13934 1cc6 42F00802 		orr	r2, r2, #8
1801:src/keys.c    **** 			return STATE_UNFINISHED;
 13935              		.loc 1 1801 12 view .LVU4271
 13936 1cca 0A21     		movs	r1, #10
 13937 1ccc 3368     		ldr	r3, [r6]
 13938 1cce 88F81F10 		strb	r1, [r8, #31]
1799:src/keys.c    **** 			State2.numdigit = 0;
 13939              		.loc 1 1799 17 view .LVU4272
 13940 1cd2 88F81520 		strb	r2, [r8, #21]
1800:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 13941              		.loc 1 1800 4 is_stmt 1 view .LVU4273
1801:src/keys.c    **** 			return STATE_UNFINISHED;
 13942              		.loc 1 1801 4 view .LVU4274
1802:src/keys.c    **** 		}
 13943              		.loc 1 1802 4 view .LVU4275
1802:src/keys.c    **** 		}
 13944              		.loc 1 1802 11 is_stmt 0 view .LVU4276
 13945 1cd6 3324     		movs	r4, #51
 13946 1cd8 FEF7EDB9 		b	.L801
ARM GAS  /tmp/ccc9ZrJ3.s 			page 381


 13947              	.LVL1180:
 13948              	.L1018:
1779:src/keys.c    **** 			init_arg(RARG_ASTO);
 13949              		.loc 1 1779 3 is_stmt 1 view .LVU4277
1779:src/keys.c    **** 			init_arg(RARG_ASTO);
 13950              		.loc 1 1779 6 is_stmt 0 view .LVU4278
 13951 1cdc 0128     		cmp	r0, #1
 13952 1cde 7FF4F6AA 		bne	.L1009
1780:src/keys.c    **** 			return STATE_UNFINISHED;
 13953              		.loc 1 1780 4 is_stmt 1 view .LVU4279
 13954              	.LVL1181:
 13955              	.LBB964:
 13956              	.LBI964:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13957              		.loc 1 552 13 view .LVU4280
 13958              	.LBB965:
 553:src/keys.c    **** 		return;
 13959              		.loc 1 553 2 view .LVU4281
 553:src/keys.c    **** 		return;
 13960              		.loc 1 553 6 is_stmt 0 view .LVU4282
 13961 1ce2 FFF7FEFF 		bl	is_bad_cmdline
 13962              	.LVL1182:
 553:src/keys.c    **** 		return;
 13963              		.loc 1 553 5 view .LVU4283
 13964 1ce6 0346     		mov	r3, r0
 13965 1ce8 0028     		cmp	r0, #0
 13966 1cea 7EF4FEAC 		bne	.L1312
 13967 1cee 2620     		movs	r0, #38
 13968              	.LBE965:
 13969              	.LBE964:
 13970              	.LBE979:
 13971              	.LBE1331:
 13972              	.LBE1386:
 13973              	.LBE1461:
3402:src/keys.c    ****   //print_debug(60,c);
 13974              		.loc 1 3402 7 view .LVU4284
 13975 1cf0 1D46     		mov	r5, r3
 13976              	.LBB1462:
 13977              	.LBB1387:
 13978              	.LBB1332:
 13979              	.LBB980:
1781:src/keys.c    **** 		}
 13980              		.loc 1 1781 11 view .LVU4285
 13981 1cf2 3324     		movs	r4, #51
 13982              	.LBB967:
 13983              	.LBB966:
 13984 1cf4 FFF7FEFF 		bl	init_arg.part.0
 13985              	.LVL1183:
 13986 1cf8 3368     		ldr	r3, [r6]
 13987 1cfa FEF7DCB9 		b	.L801
 13988              	.LVL1184:
 13989              	.L1164:
1781:src/keys.c    **** 		}
 13990              		.loc 1 1781 11 view .LVU4286
 13991              	.LBE966:
 13992              	.LBE967:
1816:src/keys.c    **** 		break;
ARM GAS  /tmp/ccc9ZrJ3.s 			page 382


 13993              		.loc 1 1816 11 view .LVU4287
 13994 1cfe 4FF4BA74 		mov	r4, #372
 13995 1d02 FFF702B8 		b	.L899
 13996              	.LVL1185:
 13997              	.L1028:
1829:src/keys.c    **** 		alpha_pos += 1;
 13998              		.loc 1 1829 33 view .LVU4288
 13999 1d06 FFF7FEFF 		bl	alen
 14000              	.LVL1186:
1829:src/keys.c    **** 		alpha_pos += 1;
 14001              		.loc 1 1829 41 view .LVU4289
 14002 1d0a 09EB4903 		add	r3, r9, r9, lsl #1
1829:src/keys.c    **** 		alpha_pos += 1;
 14003              		.loc 1 1829 39 view .LVU4290
 14004 1d0e A0EB4300 		sub	r0, r0, r3, lsl #1
1829:src/keys.c    **** 		alpha_pos += 1;
 14005              		.loc 1 1829 29 view .LVU4291
 14006 1d12 1328     		cmp	r0, #19
 14007 1d14 92D8     		bhi	.L1030
 14008 1d16 93E7     		b	.L1029
 14009              	.LVL1187:
 14010              	.L1401:
1787:src/keys.c    **** 			return STATE_UNFINISHED;
 14011              		.loc 1 1787 4 is_stmt 1 view .LVU4292
 14012              	.LBB968:
 14013              	.LBI968:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14014              		.loc 1 552 13 view .LVU4293
 14015              	.LBB969:
 553:src/keys.c    **** 		return;
 14016              		.loc 1 553 2 view .LVU4294
 553:src/keys.c    **** 		return;
 14017              		.loc 1 553 6 is_stmt 0 view .LVU4295
 14018 1d18 FFF7FEFF 		bl	is_bad_cmdline
 14019              	.LVL1188:
 553:src/keys.c    **** 		return;
 14020              		.loc 1 553 5 view .LVU4296
 14021 1d1c 0346     		mov	r3, r0
 14022 1d1e 0028     		cmp	r0, #0
 14023 1d20 7EF4E3AC 		bne	.L1312
 14024 1d24 2720     		movs	r0, #39
 14025              	.LBE969:
 14026              	.LBE968:
 14027              	.LBE980:
 14028              	.LBE1332:
 14029              	.LBE1387:
 14030              	.LBE1462:
3402:src/keys.c    ****   //print_debug(60,c);
 14031              		.loc 1 3402 7 view .LVU4297
 14032 1d26 1D46     		mov	r5, r3
 14033              	.LBB1463:
 14034              	.LBB1388:
 14035              	.LBB1333:
 14036              	.LBB981:
1788:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 14037              		.loc 1 1788 11 view .LVU4298
 14038 1d28 3324     		movs	r4, #51
ARM GAS  /tmp/ccc9ZrJ3.s 			page 383


 14039              	.LBB971:
 14040              	.LBB970:
 14041 1d2a FFF7FEFF 		bl	init_arg.part.0
 14042              	.LVL1189:
 14043 1d2e 3368     		ldr	r3, [r6]
 14044 1d30 FEF7C1B9 		b	.L801
 14045              	.LVL1190:
 14046              	.L1294:
1788:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 14047              		.loc 1 1788 11 view .LVU4299
 14048              	.LBE970:
 14049              	.LBE971:
 14050              	.LBE981:
 14051              	.LBE1333:
 14052              	.LBE1388:
 14053              	.LBE1463:
3628:src/keys.c    **** 	NonProgrammable = 0;
 14054              		.loc 1 3628 26 discriminator 1 view .LVU4300
 14055 1d34 1368     		ldr	r3, [r2]
 14056 1d36 002B     		cmp	r3, #0
 14057 1d38 7EF422AC 		bne	.L1107
 14058 1d3c FEF77ABB 		b	.L1108
 14059              	.LVL1191:
 14060              	.L994:
 14061              	.LBB1464:
 14062              	.LBB1389:
 14063              	.LBB1334:
 14064              	.LBB1250:
3163:src/keys.c    **** 		goto reset_window;
 14065              		.loc 1 3163 4 is_stmt 1 view .LVU4301
3163:src/keys.c    **** 		goto reset_window;
 14066              		.loc 1 3163 18 is_stmt 0 view .LVU4302
 14067 1d40 0023     		movs	r3, #0
 14068 1d42 A8F80830 		strh	r3, [r8, #8]	@ movhi
 14069 1d46 FFF7F3B9 		b	.L983
 14070              	.LVL1192:
 14071              	.L991:
3153:src/keys.c    **** 		goto reset_window;
 14072              		.loc 1 3153 4 is_stmt 1 view .LVU4303
3153:src/keys.c    **** 		goto reset_window;
 14073              		.loc 1 3153 24 is_stmt 0 view .LVU4304
 14074 1d4a 0AF1FF3A 		add	r10, r10, #-1
 14075              	.LVL1193:
3153:src/keys.c    **** 		goto reset_window;
 14076              		.loc 1 3153 18 view .LVU4305
 14077 1d4e A8F808A0 		strh	r10, [r8, #8]	@ movhi
 14078 1d52 FFF7EDB9 		b	.L983
 14079              	.LVL1194:
 14080              	.L1389:
3149:src/keys.c    **** 			--State2.digval;
 14081              		.loc 1 3149 5 is_stmt 1 view .LVU4306
3149:src/keys.c    **** 			--State2.digval;
 14082              		.loc 1 3149 21 is_stmt 0 view .LVU4307
 14083 1d56 FFF7FEFF 		bl	global_regs
 14084              	.LVL1195:
3149:src/keys.c    **** 			--State2.digval;
 14085              		.loc 1 3149 19 view .LVU4308
ARM GAS  /tmp/ccc9ZrJ3.s 			page 384


 14086 1d5a A8F80800 		strh	r0, [r8, #8]	@ movhi
 14087 1d5e FFF7E2B9 		b	.L992
 14088              	.LVL1196:
 14089              	.L1390:
3149:src/keys.c    **** 			--State2.digval;
 14090              		.loc 1 3149 19 view .LVU4309
 14091              	.LBE1250:
 14092              	.LBE1334:
 14093              	.LBB1335:
 14094              	.LBB914:
1283:src/keys.c    **** 	}
 14095              		.loc 1 1283 3 is_stmt 1 view .LVU4310
1283:src/keys.c    **** 	}
 14096              		.loc 1 1283 10 is_stmt 0 view .LVU4311
 14097 1d62 2046     		mov	r0, r4
 14098 1d64 FFF7FEFF 		bl	process_h_shifted
 14099              	.LVL1197:
 14100 1d68 0446     		mov	r4, r0
 14101              	.LVL1198:
1283:src/keys.c    **** 	}
 14102              		.loc 1 1283 10 view .LVU4312
 14103 1d6a FEF739BB 		b	.L835
 14104              	.LVL1199:
 14105              	.L1393:
 14106              	.LBB881:
1314:src/keys.c    **** 				return process_cmplx(c);
 14107              		.loc 1 1314 5 is_stmt 1 view .LVU4313
 14108 1d6e 0120     		movs	r0, #1
 14109 1d70 FFF7FEFF 		bl	finish_cpx_entry
 14110              	.LVL1200:
1315:src/keys.c    **** 			}
 14111              		.loc 1 1315 5 view .LVU4314
1315:src/keys.c    **** 			}
 14112              		.loc 1 1315 12 is_stmt 0 view .LVU4315
 14113 1d74 2046     		mov	r0, r4
 14114 1d76 FFF7FEFF 		bl	process_cmplx
 14115              	.LVL1201:
 14116 1d7a 0446     		mov	r4, r0
 14117              	.LVL1202:
1315:src/keys.c    **** 			}
 14118              		.loc 1 1315 12 view .LVU4316
 14119 1d7c FEF730BB 		b	.L835
 14120              	.LVL1203:
 14121              	.L1392:
1315:src/keys.c    **** 			}
 14122              		.loc 1 1315 12 view .LVU4317
 14123              	.LBE881:
1296:src/keys.c    **** 			if ( CmdLineLength ) {
 14124              		.loc 1 1296 4 is_stmt 1 view .LVU4318
 14125              	.LBB882:
 14126              	.LBI882:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14127              		.loc 1 114 13 view .LVU4319
 14128              	.LBE882:
 14129              	.LBE914:
 14130              	.LBE1335:
 14131              	.LBE1389:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 385


 14132              	.LBE1464:
 115:src/keys.c    **** }
 14133              		.loc 1 115 2 view .LVU4320
 14134              	.LBB1465:
 14135              	.LBB1390:
 14136              	.LBB1336:
 14137              	.LBB915:
 14138              	.LBB889:
 14139              	.LBB883:
 14140              	.LBI883:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14141              		.loc 1 104 20 view .LVU4321
 14142              	.LBB884:
 105:src/keys.c    **** 	State2.shifts = shift;
 14143              		.loc 1 105 2 view .LVU4322
 14144              	.LBB885:
 14145              	.LBI885:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14146              		.loc 1 96 13 view .LVU4323
 14147              	.LBB886:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14148              		.loc 1 97 2 view .LVU4324
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14149              		.loc 1 97 18 is_stmt 0 view .LVU4325
 14150 1d80 FFF7FEFF 		bl	shift_down
 14151              	.LVL1204:
  98:src/keys.c    **** }
 14152              		.loc 1 98 2 is_stmt 1 view .LVU4326
 14153              	.LBE886:
 14154              	.LBE885:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14155              		.loc 1 106 2 view .LVU4327
 14156              	.LBE884:
 14157              	.LBE883:
 14158              	.LBE889:
1297:src/keys.c    **** 				State2.state_lift = 0;
 14159              		.loc 1 1297 7 is_stmt 0 view .LVU4328
 14160 1d84 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 14161              	.LBB890:
 14162              	.LBB888:
 14163              	.LBB887:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14164              		.loc 1 106 16 view .LVU4329
 14165 1d88 0023     		movs	r3, #0
 14166 1d8a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14167              		.loc 1 108 2 is_stmt 1 view .LVU4330
 14168              	.LVL1205:
 108:src/keys.c    **** }
 14169              		.loc 1 108 2 is_stmt 0 view .LVU4331
 14170              	.LBE887:
 14171              	.LBE888:
 14172              	.LBE890:
1297:src/keys.c    **** 				State2.state_lift = 0;
 14173              		.loc 1 1297 4 is_stmt 1 view .LVU4332
1297:src/keys.c    **** 				State2.state_lift = 0;
 14174              		.loc 1 1297 7 is_stmt 0 view .LVU4333
ARM GAS  /tmp/ccc9ZrJ3.s 			page 386


 14175 1d8e 6AB1     		cbz	r2, .L1048
1298:src/keys.c    **** 				return OP_NIL | OP_PIB;
 14176              		.loc 1 1298 5 is_stmt 1 view .LVU4334
1298:src/keys.c    **** 				return OP_NIL | OP_PIB;
 14177              		.loc 1 1298 23 is_stmt 0 view .LVU4335
 14178 1d90 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 14179              	.LBE915:
 14180              	.LBE1336:
 14181              	.LBE1390:
 14182              	.LBE1465:
3628:src/keys.c    **** 	NonProgrammable = 0;
 14183              		.loc 1 3628 11 view .LVU4336
 14184 1d94 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 14185              	.LBB1466:
 14186              	.LBB1391:
 14187              	.LBB1337:
 14188              	.LBB916:
1298:src/keys.c    **** 				return OP_NIL | OP_PIB;
 14189              		.loc 1 1298 23 view .LVU4337
 14190 1d98 63F38612 		bfi	r2, r3, #6, #1
 14191 1d9c 88F81720 		strb	r2, [r8, #23]
1299:src/keys.c    **** 			}
 14192              		.loc 1 1299 5 is_stmt 1 view .LVU4338
 14193              	.LVL1206:
1299:src/keys.c    **** 			}
 14194              		.loc 1 1299 5 is_stmt 0 view .LVU4339
 14195              	.LBE916:
 14196              	.LBE1337:
 14197              	.LBE1391:
 14198              	.LBE1466:
3628:src/keys.c    **** 	NonProgrammable = 0;
 14199              		.loc 1 3628 7 is_stmt 1 view .LVU4340
3628:src/keys.c    **** 	NonProgrammable = 0;
 14200              		.loc 1 3628 10 is_stmt 0 view .LVU4341
 14201 1da0 4A06     		lsls	r2, r1, #25
 14202 1da2 0DD4     		bmi	.L1049
 14203              	.LBB1467:
 14204              	.LBB1392:
 14205              	.LBB1338:
 14206              	.LBB917:
1299:src/keys.c    **** 			}
 14207              		.loc 1 1299 12 view .LVU4342
 14208 1da4 4FF4E474 		mov	r4, #456
 14209 1da8 FEF7AFBF 		b	.L899
 14210              	.LVL1207:
 14211              	.L1048:
1299:src/keys.c    **** 			}
 14212              		.loc 1 1299 12 view .LVU4343
 14213              	.LBE917:
 14214              	.LBE1338:
 14215              	.LBE1392:
 14216              	.LBE1467:
3628:src/keys.c    **** 	NonProgrammable = 0;
 14217              		.loc 1 3628 7 is_stmt 1 view .LVU4344
3628:src/keys.c    **** 	NonProgrammable = 0;
 14218              		.loc 1 3628 11 is_stmt 0 view .LVU4345
 14219 1dac 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 387


3628:src/keys.c    **** 	NonProgrammable = 0;
 14220              		.loc 1 3628 10 view .LVU4346
 14221 1db0 5B06     		lsls	r3, r3, #25
 14222 1db2 0BD5     		bpl	.L1159
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14223              		.loc 1 3629 2 is_stmt 1 view .LVU4347
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14224              		.loc 1 3629 18 is_stmt 0 view .LVU4348
 14225 1db4 074B     		ldr	r3, .L1419
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14226              		.loc 1 3630 32 view .LVU4349
 14227 1db6 40F2C710 		movw	r0, #455
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14228              		.loc 1 3629 18 view .LVU4350
 14229 1dba 1A60     		str	r2, [r3]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14230              		.loc 1 3630 2 is_stmt 1 view .LVU4351
 14231 1dbc FEF714BC 		b	.L1105
 14232              	.LVL1208:
 14233              	.L1049:
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14234              		.loc 1 3629 2 view .LVU4352
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14235              		.loc 1 3629 18 is_stmt 0 view .LVU4353
 14236 1dc0 044A     		ldr	r2, .L1419
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14237              		.loc 1 3630 32 view .LVU4354
 14238 1dc2 4FF4E470 		mov	r0, #456
3629:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14239              		.loc 1 3629 18 view .LVU4355
 14240 1dc6 1360     		str	r3, [r2]
3630:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14241              		.loc 1 3630 2 is_stmt 1 view .LVU4356
 14242 1dc8 FEF70EBC 		b	.L1105
 14243              	.LVL1209:
 14244              	.L1159:
 14245              	.LBB1468:
 14246              	.LBB1393:
 14247              	.LBB1339:
 14248              	.LBB918:
1302:src/keys.c    **** 			}
 14249              		.loc 1 1302 12 is_stmt 0 view .LVU4357
 14250 1dcc 40F2C714 		movw	r4, #455
 14251 1dd0 FEF79BBF 		b	.L899
 14252              	.L1420:
 14253              		.align	2
 14254              	.L1419:
 14255 1dd4 00000000 		.word	NonProgrammable
 14256              	.LBE918:
 14257              	.LBE1339:
 14258              	.LBE1393:
 14259              	.LBE1468:
 14260              		.cfi_endproc
 14261              	.LFE63:
 14263              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14264              		.align	1
 14265              		.p2align 2,,3
ARM GAS  /tmp/ccc9ZrJ3.s 			page 388


 14266              		.global	process_keycode_with_shift
 14267              		.syntax unified
 14268              		.thumb
 14269              		.thumb_func
 14270              		.fpu fpv4-sp-d16
 14272              	process_keycode_with_shift:
 14273              	.LFB62:
3376:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14274              		.loc 1 3376 61 is_stmt 1 view -0
 14275              		.cfi_startproc
 14276              		@ args = 0, pretend = 0, frame = 8
 14277              		@ frame_needed = 0, uses_anonymous_args = 0
 14278 0000 30B5     		push	{r4, r5, lr}
 14279              		.cfi_def_cfa_offset 12
 14280              		.cfi_offset 4, -12
 14281              		.cfi_offset 5, -8
 14282              		.cfi_offset 14, -4
 14283 0002 83B0     		sub	sp, sp, #12
 14284              		.cfi_def_cfa_offset 24
3376:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14285              		.loc 1 3376 61 is_stmt 0 view .LVU4359
 14286 0004 02AB     		add	r3, sp, #8
 14287 0006 03E90300 		stmdb	r3, {r0, r1}
 14288 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14289              	.LVL1210:
3377:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14290              		.loc 1 3377 4 is_stmt 1 view .LVU4360
3377:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14291              		.loc 1 3377 7 is_stmt 0 view .LVU4361
 14292 000e 2E2C     		cmp	r4, #46
 14293 0010 10D0     		beq	.L1421
3378:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14294              		.loc 1 3378 4 is_stmt 1 view .LVU4362
3378:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14295              		.loc 1 3378 7 is_stmt 0 view .LVU4363
 14296 0012 332C     		cmp	r4, #51
 14297 0014 1DD0     		beq	.L1428
3387:src/keys.c    ****      nd_opcode = remapped.shift;
 14298              		.loc 1 3387 7 view .LVU4364
 14299 0016 342C     		cmp	r4, #52
 14300 0018 019D     		ldr	r5, [sp, #4]
3387:src/keys.c    ****      nd_opcode = remapped.shift;
 14301              		.loc 1 3387 4 is_stmt 1 view .LVU4365
3387:src/keys.c    ****      nd_opcode = remapped.shift;
 14302              		.loc 1 3387 7 is_stmt 0 view .LVU4366
 14303 001a 0DD0     		beq	.L1429
3391:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14304              		.loc 1 3391 9 is_stmt 1 view .LVU4367
3391:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14305              		.loc 1 3391 12 is_stmt 0 view .LVU4368
 14306 001c 002D     		cmp	r5, #0
 14307 001e 03DB     		blt	.L1426
3391:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14308              		.loc 1 3391 34 is_stmt 1 discriminator 1 view .LVU4369
 14309              	.LVL1211:
 14310              	.LBB1469:
 14311              	.LBI1469:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 389


 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14312              		.loc 1 104 20 discriminator 1 view .LVU4370
 14313              	.LBB1470:
 105:src/keys.c    **** 	State2.shifts = shift;
 14314              		.loc 1 105 2 discriminator 1 view .LVU4371
 14315              	.LBB1471:
 14316              	.LBI1471:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14317              		.loc 1 96 13 discriminator 1 view .LVU4372
 14318              	.LBB1472:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14319              		.loc 1 97 2 discriminator 1 view .LVU4373
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14320              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4374
 14321 0020 FFF7FEFF 		bl	shift_down
 14322              	.LVL1212:
  98:src/keys.c    **** }
 14323              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4375
 14324              	.LBE1472:
 14325              	.LBE1471:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14326              		.loc 1 106 2 discriminator 1 view .LVU4376
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14327              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4377
 14328 0024 194B     		ldr	r3, .L1430
 14329              	.LBE1470:
 14330              	.LBE1469:
3391:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14331              		.loc 1 3391 34 discriminator 1 view .LVU4378
 14332 0026 1D74     		strb	r5, [r3, #16]
 14333              	.LBB1474:
 14334              	.LBB1473:
 108:src/keys.c    **** }
 14335              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4379
 14336              	.LVL1213:
 14337              	.L1426:
 108:src/keys.c    **** }
 14338              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4380
 14339              	.LBE1473:
 14340              	.LBE1474:
3392:src/keys.c    ****  }
 14341              		.loc 1 3392 4 is_stmt 1 view .LVU4381
 14342 0028 2046     		mov	r0, r4
3393:src/keys.c    ****  
 14343              		.loc 1 3393 2 is_stmt 0 view .LVU4382
 14344 002a 03B0     		add	sp, sp, #12
 14345              		.cfi_remember_state
 14346              		.cfi_def_cfa_offset 12
 14347              		@ sp needed
 14348 002c BDE83040 		pop	{r4, r5, lr}
 14349              		.cfi_restore 14
 14350              		.cfi_restore 5
 14351              		.cfi_restore 4
 14352              		.cfi_def_cfa_offset 0
 14353              	.LVL1214:
3392:src/keys.c    ****  }
 14354              		.loc 1 3392 4 view .LVU4383
ARM GAS  /tmp/ccc9ZrJ3.s 			page 390


 14355 0030 FFF7FEBF 		b	process_keycode
 14356              	.LVL1215:
 14357              	.L1421:
 14358              		.cfi_restore_state
3393:src/keys.c    ****  
 14359              		.loc 1 3393 2 view .LVU4384
 14360 0034 03B0     		add	sp, sp, #12
 14361              		.cfi_remember_state
 14362              		.cfi_def_cfa_offset 12
 14363              		@ sp needed
 14364 0036 30BD     		pop	{r4, r5, pc}
 14365              	.LVL1216:
 14366              	.L1429:
 14367              		.cfi_restore_state
3388:src/keys.c    ****      set_shift(SHIFT_N);
 14368              		.loc 1 3388 6 is_stmt 1 view .LVU4385
3388:src/keys.c    ****      set_shift(SHIFT_N);
 14369              		.loc 1 3388 16 is_stmt 0 view .LVU4386
 14370 0038 154B     		ldr	r3, .L1430+4
 14371 003a 1D60     		str	r5, [r3]
3389:src/keys.c    ****    }
 14372              		.loc 1 3389 6 is_stmt 1 view .LVU4387
 14373              	.LVL1217:
 14374              	.LBB1475:
 14375              	.LBI1475:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14376              		.loc 1 104 20 view .LVU4388
 14377              	.LBB1476:
 105:src/keys.c    **** 	State2.shifts = shift;
 14378              		.loc 1 105 2 view .LVU4389
 14379              	.LBB1477:
 14380              	.LBI1477:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14381              		.loc 1 96 13 view .LVU4390
 14382              	.LBB1478:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14383              		.loc 1 97 2 view .LVU4391
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14384              		.loc 1 97 18 is_stmt 0 view .LVU4392
 14385 003c FFF7FEFF 		bl	shift_down
 14386              	.LVL1218:
  98:src/keys.c    **** }
 14387              		.loc 1 98 2 is_stmt 1 view .LVU4393
 14388              	.LBE1478:
 14389              	.LBE1477:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14390              		.loc 1 106 2 view .LVU4394
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14391              		.loc 1 106 16 is_stmt 0 view .LVU4395
 14392 0040 124B     		ldr	r3, .L1430
 14393 0042 0022     		movs	r2, #0
 14394              	.LBE1476:
 14395              	.LBE1475:
3392:src/keys.c    ****  }
 14396              		.loc 1 3392 4 view .LVU4396
 14397 0044 2046     		mov	r0, r4
 14398              	.LBB1480:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 391


 14399              	.LBB1479:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14400              		.loc 1 106 16 view .LVU4397
 14401 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14402              		.loc 1 108 2 is_stmt 1 view .LVU4398
 14403              	.LVL1219:
 108:src/keys.c    **** }
 14404              		.loc 1 108 2 is_stmt 0 view .LVU4399
 14405              	.LBE1479:
 14406              	.LBE1480:
3392:src/keys.c    ****  }
 14407              		.loc 1 3392 4 is_stmt 1 view .LVU4400
3393:src/keys.c    ****  
 14408              		.loc 1 3393 2 is_stmt 0 view .LVU4401
 14409 0048 03B0     		add	sp, sp, #12
 14410              		.cfi_remember_state
 14411              		.cfi_def_cfa_offset 12
 14412              		@ sp needed
 14413 004a BDE83040 		pop	{r4, r5, lr}
 14414              		.cfi_restore 14
 14415              		.cfi_restore 5
 14416              		.cfi_restore 4
 14417              		.cfi_def_cfa_offset 0
 14418              	.LVL1220:
3392:src/keys.c    ****  }
 14419              		.loc 1 3392 4 view .LVU4402
 14420 004e FFF7FEBF 		b	process_keycode
 14421              	.LVL1221:
 14422              	.L1428:
 14423              		.cfi_restore_state
3379:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14424              		.loc 1 3379 6 is_stmt 1 view .LVU4403
 14425 0052 104B     		ldr	r3, .L1430+8
 14426 0054 41F23010 		movw	r0, #4400
 14427 0058 9847     		blx	r3
 14428              	.LVL1222:
3379:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14429              		.loc 1 3379 31 view .LVU4404
 14430 005a 0A20     		movs	r0, #10
 14431 005c 0E4B     		ldr	r3, .L1430+12
 14432 005e 9847     		blx	r3
 14433              	.LVL1223:
3379:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14434              		.loc 1 3379 46 view .LVU4405
 14435 0060 0E4B     		ldr	r3, .L1430+16
 14436 0062 9847     		blx	r3
 14437              	.LVL1224:
3380:src/keys.c    ****        // Was error just wait for confirmation
 14438              		.loc 1 3380 6 view .LVU4406
3380:src/keys.c    ****        // Was error just wait for confirmation
 14439              		.loc 1 3380 11 is_stmt 0 view .LVU4407
 14440 0064 0E4B     		ldr	r3, .L1430+20
 14441 0066 0120     		movs	r0, #1
 14442 0068 9847     		blx	r3
 14443              	.LVL1225:
3380:src/keys.c    ****        // Was error just wait for confirmation
ARM GAS  /tmp/ccc9ZrJ3.s 			page 392


 14444              		.loc 1 3380 9 view .LVU4408
 14445 006a 0228     		cmp	r0, #2
 14446 006c 01D1     		bne	.L1424
3382:src/keys.c    ****      }
 14447              		.loc 1 3382 8 is_stmt 1 view .LVU4409
 14448 006e 0D4B     		ldr	r3, .L1430+24
 14449 0070 9847     		blx	r3
 14450              	.LVL1226:
 14451              	.L1424:
3384:src/keys.c    ****      return;
 14452              		.loc 1 3384 6 view .LVU4410
 14453 0072 084B     		ldr	r3, .L1430+8
 14454 0074 42F26020 		movw	r0, #8800
 14455 0078 9847     		blx	r3
 14456              	.LVL1227:
3384:src/keys.c    ****      return;
 14457              		.loc 1 3384 31 view .LVU4411
 14458 007a 074B     		ldr	r3, .L1430+12
 14459 007c 0A20     		movs	r0, #10
 14460 007e 9847     		blx	r3
 14461              	.LVL1228:
3384:src/keys.c    ****      return;
 14462              		.loc 1 3384 46 view .LVU4412
 14463 0080 064B     		ldr	r3, .L1430+16
3393:src/keys.c    ****  
 14464              		.loc 1 3393 2 is_stmt 0 view .LVU4413
 14465 0082 03B0     		add	sp, sp, #12
 14466              		.cfi_def_cfa_offset 12
 14467              		@ sp needed
 14468 0084 BDE83040 		pop	{r4, r5, lr}
 14469              		.cfi_restore 14
 14470              		.cfi_restore 5
 14471              		.cfi_restore 4
 14472              		.cfi_def_cfa_offset 0
 14473              	.LVL1229:
3384:src/keys.c    ****      return;
 14474              		.loc 1 3384 46 view .LVU4414
 14475 0088 1847     		bx	r3	@ indirect register sibling call
 14476              	.LVL1230:
 14477              	.L1431:
 14478 008a 00BF     		.align	2
 14479              	.L1430:
 14480 008c 00000000 		.word	StateWhileOn
 14481 0090 00000000 		.word	nd_opcode
 14482 0094 F5020008 		.word	134218485
 14483 0098 05040008 		.word	134218757
 14484 009c F9020008 		.word	134218489
 14485 00a0 79030008 		.word	134218617
 14486 00a4 99030008 		.word	134218649
 14487              		.cfi_endproc
 14488              	.LFE62:
 14490              		.comm	nd_opcode,4,4
 14491              		.comm	NonProgrammable,4,4
 14492              		.comm	GoFast,4,4
 14493              		.comm	OpCodeDisplayPending,4,4
 14494              		.comm	OpCode,4,4
 14495              		.comm	WasDataEntry,4,4
ARM GAS  /tmp/ccc9ZrJ3.s 			page 393


 14496              		.section	.bss.was_paused.9793,"aw",%nobits
 14497              		.align	2
 14498              		.set	.LANCHOR18,. + 0
 14501              	was_paused.9793:
 14502 0000 00000000 		.space	4
 14503              		.section	.rodata.alpha_arrows,"a"
 14504              		.align	2
 14507              	alpha_arrows:
 14508 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14508      03049F5E 
 14508      7F
 14509              		.section	.rodata.alpha_catalogue,"a"
 14510              		.align	2
 14513              	alpha_catalogue:
 14514 0000 0D4AC280 		.ascii	"\015J\302\200\236\265\312\242~\324\266-\233j\333(J\260"
 14514      9EB5CAA2 
 14514      7ED4B62D 
 14514      9B6ADB28 
 14514      4AB0
 14515              		.section	.rodata.alpha_compares,"a"
 14516              		.align	2
 14519              	alpha_compares:
 14520 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14520      0A3E5B5D 
 14520      7B7D
 14521              		.section	.rodata.alpha_letters,"a"
 14522              		.align	2
 14523              		.set	.LANCHOR9,. + 0
 14526              	alpha_letters:
 14527 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14527      88C4C5C6 
 14527      C784C8C9 
 14527      CA
 14528 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14528      CECFD0D1 
 14528      D2D3D415 
 14528      D5
 14529 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14529      DADBDC01 
 14529      1902DD1A 
 14529      DE
 14530 0027 DF       		.ascii	"\337"
 14531              		.section	.rodata.alpha_letters_lower,"a"
 14532              		.align	2
 14533              		.set	.LANCHOR10,. + 0
 14536              	alpha_letters_lower:
 14537 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14537      89E4E5E6 
 14537      E785E8E9 
 14537      EA
 14538 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14538      EEEFF0F1 
 14538      F2F3F416 
 14538      F5
 14539 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14539      FAFBFC01 
 14539      1902FD1A 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 394


 14539      FE
 14540 0027 FF       		.ascii	"\377"
 14541              		.section	.rodata.alpha_subscripts,"a"
 14542              		.align	2
 14545              	alpha_subscripts:
 14546 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14546      9A80D798 
 14546      BB1486BC 
 14546      F7
 14547 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14547      BF818B9C 
 14547      8C999D90 
 14547      9B
 14548              		.section	.rodata.alpha_symbols,"a"
 14549              		.align	2
 14552              	alpha_symbols:
 14553 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14553      222A405F 
 14553      7E25240C 
 14553      1E1F8EAE 
 14553      926023
 14554              		.section	.rodata.alphamap.9277,"a"
 14555              		.align	2
 14556              		.set	.LANCHOR15,. + 0
 14559              	alphamap.9277:
 14560 0000 41004100 		.ascii	"A\000A\000a\240"
 14560      61A0
 14561 0006 42004200 		.ascii	"B\000B\000b\241"
 14561      62A1
 14562 000c 43008200 		.ascii	"C\000\202\000c\242"
 14562      63A2
 14563 0012 44008300 		.ascii	"D\000\203\000d\243"
 14563      64A3
 14564 0018 450D4500 		.ascii	"E\015E\000e\244"
 14564      65A4
 14565 001e 46009400 		.ascii	"F\000\224\000f\264"
 14565      66B4
 14566 0024 47008200 		.ascii	"G\000\202\000g\242"
 14566      67A2
 14567 002a 48005800 		.ascii	"H\000X\000h\265"
 14567      68B5
 14568 0030 49004900 		.ascii	"I\000I\000i\250"
 14568      69A8
 14569 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14569      6A00
 14570 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14570      6BA9
 14571 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14571      6CAA
 14572 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14572      00A6
 14573 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14573      6DAB
 14574 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14574      6EAC
 14575 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14575      6FB7
ARM GAS  /tmp/ccc9ZrJ3.s 			page 395


 14576 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14576      0000
 14577 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14577      0000
 14578 006c 50378F26 		.ascii	"P7\217&p\257"
 14578      70AF
 14579 0072 5138007C 		.ascii	"Q8\000|q\000"
 14579      7100
 14580 0078 5239520B 		.ascii	"R9R\013r\260"
 14580      72B0
 14581 007e 532F915C 		.ascii	"S/\221\\s\261"
 14581      73B1
 14582 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14582      0000
 14583 008a 54345400 		.ascii	"T4T\000t\262"
 14583      74B2
 14584 0090 55350000 		.ascii	"U5\000\000u\000"
 14584      7500
 14585 0096 56360000 		.ascii	"V6\000\000v\000"
 14585      7600
 14586 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14586      7700
 14587 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14587      0000
 14588 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14588      78AD
 14589 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14589      79B3
 14590 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14590      7AA5
 14591 00ba 2D282900 		.ascii	"-()\000\000\000"
 14591      0000
 14592 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14592      0000
 14593 00c6 3A308720 		.ascii	":0\207 ;\247"
 14593      3BA7
 14594 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14594      2EB6
 14595 00d2 3F002100 		.ascii	"?\000!\000?\000"
 14595      3F00
 14596 00d8 202B3D00 		.ascii	" +=\000  "
 14596      2020
 14597 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14597      0000
 14598              		.section	.rodata.amap.9268,"a"
 14599              		.align	2
 14600              		.set	.LANCHOR16,. + 0
 14603              	amap.9268:
 14604 0000 04       		.byte	4
 14605 0001 000D00   		.ascii	"\000\015\000"
 14606 0004 05       		.byte	5
 14607 0005 000E09   		.ascii	"\000\016\011"
 14608 0008 2C       		.byte	44
 14609 0009 000D00   		.ascii	"\000\015\000"
 14610 000c 2D       		.byte	45
 14611 000d 000E09   		.ascii	"\000\016\011"
 14612 0010 08       		.byte	8
ARM GAS  /tmp/ccc9ZrJ3.s 			page 396


 14613 0011 00000F   		.ascii	"\000\000\017"
 14614 0014 1F       		.byte	31
 14615 0015 00000C   		.ascii	"\000\000\014"
 14616 0018 21       		.byte	33
 14617 0019 00000A   		.ascii	"\000\000\012"
 14618 001c 26       		.byte	38
 14619 001d 00000B   		.ascii	"\000\000\013"
 14620              		.section	.rodata.catalogue,"a"
 14621              		.align	2
 14624              	catalogue:
 14625 0000 465B46A0 		.ascii	"F[F\240\301b\230\264\014\242;X\346\374}G\262\361\011"
 14625      C16298B4 
 14625      0CA23B58 
 14625      E6FC7D47 
 14625      B2F109
 14626 0013 8166D3B4 		.ascii	"\201f\323\264\361\220D\331\304i\002m\322\344\275 q\\"
 14626      F19044D9 
 14626      C469026D 
 14626      D2E4BD20 
 14626      715C
 14627 0025 66D5B668 		.ascii	"f\325\266h\234\334\265\322s\030'=\270q\021'Y\252L\230"
 14627      9CDCB5D2 
 14627      7318273D 
 14627      B8711127 
 14627      59AA4C98 
 14628 0039 F69DA669 		.ascii	"\366\235\246i\030\326\361\3130\333\327\005\037\311P"
 14628      18D6F1CB 
 14628      30DBD705 
 14628      1FC950
 14629 0048 4C9320C8 		.ascii	"L\223 \310P\204\234\302\313\2127\011\221p\303V\000\312"
 14629      50849CC2 
 14629      CB8A3709 
 14629      9170C356 
 14629      00CA
 14630 005a 45514459 		.ascii	"EQDY\030o\212\307\035\214s\212\002z\327*\211\373Z\324"
 14630      186F8AC7 
 14630      1D8C738A 
 14630      027AD72A 
 14630      89FB5AD4 
 14631 006e B62D9B6A 		.ascii	"\266-\233j\333\265J\022\255\251LZ\326\271\253k\034\006"
 14631      DBB54A12 
 14631      ADA94C5A 
 14631      D6B9AB6B 
 14631      1C06
 14632 0080 259A435D 		.ascii	"%\232C]\266\311\325^\227v\304"
 14632      B6C9D55E 
 14632      9776C4
 14633              		.section	.rodata.catalogue_sizes.9591,"a"
 14634              		.align	2
 14635              		.set	.LANCHOR8,. + 0
 14638              	catalogue_sizes.9591:
 14639 0000 006F1E11 		.ascii	"\000o\036\0216=C\205%8\016\023\012\011(\032LLX\016\023"
 14639      363D4385 
 14639      25380E13 
 14639      0A09281A 
 14639      4C4C580E 
 14640              		.section	.rodata.catalogues.9599,"a"
ARM GAS  /tmp/ccc9ZrJ3.s 			page 397


 14641              		.align	2
 14642              		.set	.LANCHOR12,. + 0
 14645              	catalogues.9599:
 14646 0000 00000000 		.word	0
 14647 0004 00000000 		.word	catalogue
 14648 0008 00000000 		.word	cplx_catalogue
 14649 000c 00000000 		.word	stats_catalogue
 14650 0010 00000000 		.word	prob_catalogue
 14651 0014 00000000 		.word	int_catalogue
 14652 0018 00000000 		.word	prog_catalogue
 14653 001c 00000000 		.word	program_xfcn
 14654 0020 00000000 		.word	test_catalogue
 14655 0024 00000000 		.word	mode_catalogue
 14656 0028 00000000 		.word	alpha_catalogue
 14657 002c 00000000 		.word	alpha_symbols
 14658 0030 00000000 		.word	alpha_compares
 14659 0034 00000000 		.word	alpha_arrows
 14660 0038 00000000 		.word	alpha_letters
 14661 003c 00000000 		.word	alpha_subscripts
 14662 0040 00000000 		.word	0
 14663 0044 00000000 		.word	0
 14664 0048 00000000 		.word	0
 14665 004c 00000000 		.word	sums_catalogue
 14666 0050 00000000 		.word	matrix_catalogue
 14667              		.section	.rodata.cmap.9267,"a"
 14668              		.align	2
 14669              		.set	.LANCHOR17,. + 0
 14672              	cmap.9267:
 14673 0000 04       		.byte	4
 14674 0001 120012   		.ascii	"\022\000\022"
 14675 0004 05       		.byte	5
 14676 0005 090909   		.ascii	"\011\011\011"
 14677 0008 06       		.byte	6
 14678 0009 151515   		.ascii	"\025\025\025"
 14679 000c 0C       		.byte	12
 14680 000d 100011   		.ascii	"\020\000\021"
 14681 0010 19       		.byte	25
 14682 0011 040004   		.ascii	"\004\000\004"
 14683 0014 1A       		.byte	26
 14684 0015 030003   		.ascii	"\003\000\003"
 14685 0018 1B       		.byte	27
 14686 0019 130013   		.ascii	"\023\000\023"
 14687 001c 1C       		.byte	28
 14688 001d 140014   		.ascii	"\024\000\024"
 14689 0020 1E       		.byte	30
 14690 0021 171717   		.ascii	"\027\027\027"
 14691 0024 1F       		.byte	31
 14692 0025 080808   		.ascii	"\010\010\010"
 14693 0028 20       		.byte	32
 14694 0029 060606   		.ascii	"\006\006\006"
 14695 002c 21       		.byte	33
 14696 002d 010502   		.ascii	"\001\005\002"
 14697              		.section	.rodata.conv_catalogue,"a"
 14698              		.align	2
 14699              		.set	.LANCHOR11,. + 0
 14702              	conv_catalogue:
 14703 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
ARM GAS  /tmp/ccc9ZrJ3.s 			page 398


 14703      2B2DDD37 
 14703      27393133 
 14703      111605DC 
 14703      DE19
 14704 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14704      0D0F8D08 
 14704      8F0A2A2C 
 14704      47434517 
 14704      3F30
 14705 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14705      02062622 
 14705      20282435 
 14705      2F012310 
 14705      0C0E2112 
 14706 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 14706      1E292E09 
 14706      36383E3A 
 14706      3C4025DF 
 14706      3D8B8E03 
 14707 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14707      4A484642 
 14707      441F
 14708              		.section	.rodata.conv_mapping.9638,"a"
 14709              		.align	2
 14710              		.set	.LANCHOR14,. + 0
 14713              	conv_mapping.9638:
 14714 0000 8502     		.short	645
 14715 0002 8402     		.short	644
 14716 0004 8602     		.short	646
 14717 0006 8702     		.short	647
 14718 0008 8202     		.short	642
 14719 000a 8302     		.short	643
 14720 000c 3202     		.short	562
 14721 000e 3302     		.short	563
 14722 0010 3402     		.short	564
 14723 0012 3502     		.short	565
 14724 0014 3602     		.short	566
 14725 0016 3702     		.short	567
 14726              		.section	.rodata.cplx_catalogue,"a"
 14727              		.align	2
 14730              	cplx_catalogue:
 14731 0000 7DA91CE6 		.ascii	"}\251\034\346\027;\316\341\015\360}\340\2702\177\252"
 14731      173BCEE1 
 14731      0DF07DE0 
 14731      B8327FAA 
 14732 0010 AA9AB1EF 		.ascii	"\252\232\261\357\241\340\367\226\004|_7\326\244\252"
 14732      A1E0F796 
 14732      047C5F37 
 14732      D6A4AA
 14733 001f ECFA1A0E 		.ascii	"\354\372\032\016\235\336\240"
 14733      9DDEA0
 14734              		.section	.rodata.disp.9449,"a"
 14735              		.align	2
 14736              		.set	.LANCHOR21,. + 0
 14739              	disp.9449:
 14740 0000 03       		.byte	3
 14741 0001 02       		.byte	2
ARM GAS  /tmp/ccc9ZrJ3.s 			page 399


 14742 0002 05       		.byte	5
 14743 0003 04       		.byte	4
 14744              		.section	.rodata.int_catalogue,"a"
 14745              		.align	2
 14748              	int_catalogue:
 14749 0000 46712307 		.ascii	"Fq#\007\024@\335BY\323\020\231\314U\032@\233v\211\270"
 14749      1440DD42 
 14749      59D31099 
 14749      CC551A40 
 14749      9B7689B8 
 14750 0014 25318C65 		.ascii	"%1\214e\247i\227\366\221\274_\234\263\015\275%p\314"
 14750      A76997F6 
 14750      91BC5F9C 
 14750      B30DBD25 
 14750      70CC
 14751 0026 3904C370 		.ascii	"9\004\303p\374LhB1\014G.dCS)\030o\212\307\036\327*\255"
 14751      FC4C6842 
 14751      310C472E 
 14751      64435329 
 14751      186F8AC7 
 14752 003e 6B52D8B6 		.ascii	"kR\330\266m\253n\325*\323\0245\334w@"
 14752      6DAB6ED5 
 14752      2AD31435 
 14752      DC7740
 14753              		.section	.rodata.linear_key_map.9233,"a"
 14754              		.align	2
 14755              		.set	.LANCHOR6,. + 0
 14758              	linear_key_map.9233:
 14759 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 14759      04050607 
 14759      08090A0B 
 14759      0C
 14760 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 14760      00111213 
 14760      14150016 
 14760      17
 14761 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 14761      1B1C1D1E 
 14761      1F002021 
 14761      22232425 
 14761      25252525 
 14762 002e 25       		.ascii	"%"
 14763              		.section	.rodata.linear_key_map.9237,"a"
 14764              		.align	2
 14765              		.set	.LANCHOR1,. + 0
 14768              	linear_key_map.9237:
 14769 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 14769      04050607 
 14769      08222222 
 14769      090A0B
 14770 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 14770      0F101112 
 14770      00131415 
 14770      16
 14771 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 14771      1A1B1C00 
 14771      1D1E1F20 
ARM GAS  /tmp/ccc9ZrJ3.s 			page 400


 14771      21222222 
 14772 002c 040522   		.ascii	"\004\005\""
 14773              		.section	.rodata.map.9249,"a"
 14774              		.align	2
 14775              		.set	.LANCHOR5,. + 0
 14778              	map.9249:
 14779 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 14779      FF7F7F7F 
 14779      6D6E6F6C 
 14779      FFFFFFFF 
 14780 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 14780      097F7FE7 
 14780      05067F7F 
 14780      E4
 14781 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 14781      00F07F7F 
 14781      FFFFFFFF 
 14781      FF
 14782 002a FF       		.ascii	"\377"
 14783              		.section	.rodata.matrix_catalogue,"a"
 14784              		.align	2
 14787              	matrix_catalogue:
 14788 0000 661DA364 		.ascii	"f\035\243d\3305\335\203m\222rY7!\327r\231ve\331e\231"
 14788      D835DD83 
 14788      6D927259 
 14788      3721D772 
 14788      997665D9 
 14789 0016 5650     		.ascii	"VP"
 14790              		.section	.rodata.mode_catalogue,"a"
 14791              		.align	2
 14794              	mode_catalogue:
 14795 0000 2948C290 		.ascii	")H\302\220\213\306\206c\364\376@\017\363\250\351\037"
 14795      8BC68663 
 14795      F4FE400F 
 14795      F3A8E91F 
 14796 0010 8801FC7C 		.ascii	"\210\001\374|\277\311\201\214\317$I\302lb\031I2H\232"
 14796      BFC9818C 
 14796      CF2449C2 
 14796      6C621949 
 14796      32489A
 14797 0023 19327210 		.ascii	"\0312r\020\203\31322 \2072\012c\020\3072Js\024\306#"
 14797      83CB3232 
 14797      2087320A 
 14797      6310C732 
 14797      4A7314C6 
 14798 0038 8CE0E039 		.ascii	"\214\340\3409\311\210b\024\215\302\3173\310\231"
 14798      C9886214 
 14798      8DC2CF33 
 14798      C899
 14799              		.section	.rodata.op_map.9321,"a"
 14800              		.align	2
 14801              		.set	.LANCHOR2,. + 0
 14804              	op_map.9321:
 14805 0000 1500     		.short	21
 14806 0002 0B02     		.short	523
 14807 0004 0003     		.short	768
 14808 0006 0A02     		.short	522
ARM GAS  /tmp/ccc9ZrJ3.s 			page 401


 14809 0008 1300     		.short	19
 14810 000a 1400     		.short	20
 14811 000c 0300     		.short	3
 14812 000e 0A00     		.short	10
 14813 0010 0701     		.short	263
 14814 0012 0000     		.short	0
 14815 0014 6531     		.short	12645
 14816 0016 0300     		.short	3
 14817 0018 0200     		.short	2
 14818 001a 0100     		.short	1
 14819 001c 4400     		.short	68
 14820 001e 0C00     		.short	12
 14821 0020 0D00     		.short	13
 14822 0022 0E00     		.short	14
 14823 0024 0403     		.short	772
 14824 0026 2F00     		.short	47
 14825 0028 0900     		.short	9
 14826 002a 0A00     		.short	10
 14827 002c 0B00     		.short	11
 14828 002e 0303     		.short	771
 14829 0030 2E00     		.short	46
 14830 0032 0600     		.short	6
 14831 0034 0700     		.short	7
 14832 0036 0800     		.short	8
 14833 0038 0203     		.short	770
 14834 003a 3300     		.short	51
 14835 003c 0500     		.short	5
 14836 003e 0400     		.short	4
 14837 0040 3B01     		.short	315
 14838 0042 0103     		.short	769
 14839 0044 0001     		.short	256
 14840              		.section	.rodata.op_map.9344,"a"
 14841              		.align	2
 14842              		.set	.LANCHOR3,. + 0
 14845              	op_map.9344:
 14846 0000 0100     		.short	1
 14847 0002 0000     		.short	0
 14848 0004 20F2     		.short	-3552
 14849 0006 23F2     		.short	-3549
 14850 0008 21F2     		.short	-3551
 14851 000a 24F2     		.short	-3548
 14852 000c 22F2     		.short	-3550
 14853 000e 25F2     		.short	-3547
 14854 0010 47F1     		.short	-3769
 14855 0012 46F1     		.short	-3770
 14856 0014 4E01     		.short	334
 14857 0016 4D01     		.short	333
 14858 0018 5C01     		.short	348
 14859 001a 35F1     		.short	-3787
 14860 001c 5B01     		.short	347
 14861 001e 36F1     		.short	-3786
 14862 0020 3301     		.short	307
 14863 0022 37F1     		.short	-3785
 14864 0024 3300     		.short	51
 14865 0026 0C01     		.short	268
 14866 0028 2B00     		.short	43
 14867 002a 2C00     		.short	44
ARM GAS  /tmp/ccc9ZrJ3.s 			page 402


 14868 002c 028B     		.short	-29950
 14869 002e 088B     		.short	-29944
 14870 0030 0A8B     		.short	-29942
 14871 0032 108B     		.short	-29936
 14872 0034 4301     		.short	323
 14873 0036 3D01     		.short	317
 14874 0038 0902     		.short	521
 14875 003a 0802     		.short	520
 14876 003c 1002     		.short	528
 14877 003e 0D02     		.short	525
 14878 0040 0F02     		.short	527
 14879 0042 0E02     		.short	526
 14880 0044 0003     		.short	768
 14881 0046 0803     		.short	776
 14882 0048 0BF2     		.short	-3573
 14883 004a 1603     		.short	790
 14884 004c 1203     		.short	786
 14885 004e 1303     		.short	787
 14886 0050 3DF2     		.short	-3523
 14887 0052 3EF2     		.short	-3522
 14888 0054 24F1     		.short	-3804
 14889 0056 1EF1     		.short	-3810
 14890 0058 75F2     		.short	-3467
 14891 005a 27F1     		.short	-3801
 14892 005c 0A02     		.short	522
 14893 005e 1602     		.short	534
 14894 0060 5100     		.short	81
 14895 0062 5200     		.short	82
 14896 0064 0000     		.short	0
 14897 0066 0100     		.short	1
 14898 0068 48F0     		.short	-4024
 14899 006a 4BF0     		.short	-4021
 14900 006c 47F0     		.short	-4025
 14901 006e 46F0     		.short	-4026
 14902 0070 77F2     		.short	-3465
 14903 0072 78F2     		.short	-3464
 14904 0074 3300     		.short	51
 14905 0076 3300     		.short	51
 14906 0078 0502     		.short	517
 14907 007a 0602     		.short	518
 14908 007c 0402     		.short	516
 14909 007e 0002     		.short	512
 14910 0080 4200     		.short	66
 14911 0082 3801     		.short	312
 14912 0084 3A00     		.short	58
 14913 0086 3B00     		.short	59
 14914 0088 0001     		.short	256
 14915 008a 0001     		.short	256
 14916              		.section	.rodata.op_map.9367,"a"
 14917              		.align	2
 14918              		.set	.LANCHOR0,. + 0
 14921              	op_map.9367:
 14922 0000 4C80     		.short	-32692
 14923 0002 4D80     		.short	-32691
 14924 0004 4E80     		.short	-32690
 14925 0006 4F80     		.short	-32689
 14926 0008 3300     		.short	51
ARM GAS  /tmp/ccc9ZrJ3.s 			page 403


 14927 000a 3300     		.short	51
 14928 000c 3300     		.short	51
 14929 000e 2180     		.short	-32735
 14930 0010 0801     		.short	264
 14931 0012 8780     		.short	-32633
 14932 0014 1180     		.short	-32751
 14933 0016 7C02     		.short	636
 14934 0018 6660     		.short	24678
 14935 001a 3F01     		.short	319
 14936 001c 4580     		.short	-32699
 14937 001e 1C03     		.short	796
 14938 0020 1D03     		.short	797
 14939 0022 1E03     		.short	798
 14940 0024 0603     		.short	774
 14941 0026 2F02     		.short	559
 14942 0028 3300     		.short	51
 14943 002a 3300     		.short	51
 14944 002c 3300     		.short	51
 14945 002e 3300     		.short	51
 14946 0030 3300     		.short	51
 14947 0032 3300     		.short	51
 14948 0034 3300     		.short	51
 14949 0036 3300     		.short	51
 14950 0038 1640     		.short	16406
 14951 003a 0201     		.short	258
 14952 003c 6D80     		.short	-32659
 14953 003e 5001     		.short	336
 14954 0040 3300     		.short	51
 14955 0042 1540     		.short	16405
 14956 0044 0001     		.short	256
 14957              		.section	.rodata.op_map.9422,"a"
 14958              		.align	2
 14959              		.set	.LANCHOR7,. + 0
 14962              	op_map.9422:
 14963 0000 0100     		.short	1
 14964 0002 0100     		.short	1
 14965 0004 0000     		.short	0
 14966 0006 0000     		.short	0
 14967 0008 0B05     		.short	1291
 14968 000a 2005     		.short	1312
 14969 000c 2305     		.short	1315
 14970 000e 3300     		.short	51
 14971 0010 0006     		.short	1536
 14972 0012 2105     		.short	1313
 14973 0014 2405     		.short	1316
 14974 0016 3300     		.short	51
 14975 0018 0A05     		.short	1290
 14976 001a 2205     		.short	1314
 14977 001c 2505     		.short	1317
 14978 001e 3300     		.short	51
 14979 0020 3300     		.short	51
 14980 0022 4701     		.short	327
 14981 0024 4601     		.short	326
 14982 0026 3300     		.short	51
 14983 0028 3300     		.short	51
 14984 002a 3300     		.short	51
 14985 002c 3300     		.short	51
ARM GAS  /tmp/ccc9ZrJ3.s 			page 404


 14986 002e 3300     		.short	51
 14987 0030 15FF     		.short	-235
 14988 0032 3300     		.short	51
 14989 0034 3300     		.short	51
 14990 0036 3300     		.short	51
 14991 0038 1AFF     		.short	-230
 14992 003a 3300     		.short	51
 14993 003c 3300     		.short	51
 14994 003e 8CFF     		.short	-116
 14995 0040 0901     		.short	265
 14996 0042 3300     		.short	51
 14997 0044 3300     		.short	51
 14998 0046 0A01     		.short	266
 14999 0048 0B01     		.short	267
 15000 004a 3300     		.short	51
 15001 004c 0D01     		.short	269
 15002 004e 0D01     		.short	269
 15003 0050 663F     		.short	16230
 15004 0052 3300     		.short	51
 15005 0054 3300     		.short	51
 15006 0056 1FFF     		.short	-225
 15007 0058 3805     		.short	1336
 15008 005a 3300     		.short	51
 15009 005c 3300     		.short	51
 15010 005e 3905     		.short	1337
 15011 0060 6621     		.short	8550
 15012 0062 3300     		.short	51
 15013 0064 3300     		.short	51
 15014 0066 6621     		.short	8550
 15015 0068 3300     		.short	51
 15016 006a 3300     		.short	51
 15017 006c 3300     		.short	51
 15018 006e 3300     		.short	51
 15019 0070 3300     		.short	51
 15020 0072 0905     		.short	1289
 15021 0074 0805     		.short	1288
 15022 0076 3300     		.short	51
 15023 0078 07A8     		.short	-22521
 15024 007a 1005     		.short	1296
 15025 007c 0D05     		.short	1293
 15026 007e 3300     		.short	51
 15027 0080 08A8     		.short	-22520
 15028 0082 0F05     		.short	1295
 15029 0084 0E05     		.short	1294
 15030 0086 3300     		.short	51
 15031 0088 09A8     		.short	-22519
 15032 008a 0006     		.short	1536
 15033 008c 0806     		.short	1544
 15034 008e 3300     		.short	51
 15035 0090 0406     		.short	1540
 15036 0092 0B05     		.short	1291
 15037 0094 1606     		.short	1558
 15038 0096 3300     		.short	51
 15039 0098 3300     		.short	51
 15040 009a 1206     		.short	1554
 15041 009c 1306     		.short	1555
 15042 009e 2F05     		.short	1327
ARM GAS  /tmp/ccc9ZrJ3.s 			page 405


 15043 00a0 04A8     		.short	-22524
 15044 00a2 3300     		.short	51
 15045 00a4 3300     		.short	51
 15046 00a6 3300     		.short	51
 15047 00a8 05A8     		.short	-22523
 15048 00aa 3300     		.short	51
 15049 00ac 3300     		.short	51
 15050 00ae 3300     		.short	51
 15051 00b0 06A8     		.short	-22522
 15052 00b2 3300     		.short	51
 15053 00b4 3300     		.short	51
 15054 00b6 3300     		.short	51
 15055 00b8 0306     		.short	1539
 15056 00ba 0A05     		.short	1290
 15057 00bc 1605     		.short	1302
 15058 00be 1605     		.short	1302
 15059 00c0 3300     		.short	51
 15060 00c2 3300     		.short	51
 15061 00c4 3300     		.short	51
 15062 00c6 3300     		.short	51
 15063 00c8 01A8     		.short	-22527
 15064 00ca 0000     		.short	0
 15065 00cc 0100     		.short	1
 15066 00ce 3300     		.short	51
 15067 00d0 02A8     		.short	-22526
 15068 00d2 3300     		.short	51
 15069 00d4 3300     		.short	51
 15070 00d6 3300     		.short	51
 15071 00d8 03A8     		.short	-22525
 15072 00da 3300     		.short	51
 15073 00dc 3300     		.short	51
 15074 00de 3300     		.short	51
 15075 00e0 0206     		.short	1538
 15076 00e2 3300     		.short	51
 15077 00e4 3300     		.short	51
 15078 00e6 3300     		.short	51
 15079 00e8 3300     		.short	51
 15080 00ea 3300     		.short	51
 15081 00ec 3300     		.short	51
 15082 00ee 0201     		.short	258
 15083 00f0 00A8     		.short	-22528
 15084 00f2 0505     		.short	1285
 15085 00f4 0605     		.short	1286
 15086 00f6 3300     		.short	51
 15087 00f8 B801     		.short	440
 15088 00fa 0405     		.short	1284
 15089 00fc 0005     		.short	1280
 15090 00fe 3300     		.short	51
 15091 0100 3300     		.short	51
 15092 0102 3300     		.short	51
 15093 0104 3300     		.short	51
 15094 0106 3300     		.short	51
 15095 0108 0106     		.short	1537
 15096 010a 3300     		.short	51
 15097 010c 3300     		.short	51
 15098 010e 3300     		.short	51
 15099 0110 0001     		.short	256
ARM GAS  /tmp/ccc9ZrJ3.s 			page 406


 15100 0112 0001     		.short	256
 15101 0114 0001     		.short	256
 15102 0116 0001     		.short	256
 15103              		.section	.rodata.op_map.9434,"a"
 15104              		.align	2
 15105              		.set	.LANCHOR19,. + 0
 15108              	op_map.9434:
 15109 0000 2A27     		.ascii	"*'"
 15110 0002 2B28     		.ascii	"+("
 15111 0004 2C29     		.ascii	",)"
 15112              		.section	.rodata.op_map.9448,"a"
 15113              		.align	2
 15114              		.set	.LANCHOR20,. + 0
 15117              	op_map.9448:
 15118 0000 1A02     		.short	538
 15119 0002 7B02     		.short	635
 15120 0004 1B02     		.short	539
 15121 0006 7A02     		.short	634
 15122 0008 1C02     		.short	540
 15123 000a 3300     		.short	51
 15124              		.section	.rodata.op_map2.9345,"a"
 15125              		.align	2
 15126              		.set	.LANCHOR4,. + 0
 15129              	op_map2.9345:
 15130 0000 3300     		.short	51
 15131 0002 3300     		.short	51
 15132 0004 0003     		.short	768
 15133 0006 0A02     		.short	522
 15134              		.section	.rodata.opcode_breaks,"a"
 15135              		.align	2
 15136              		.set	.LANCHOR13,. + 0
 15139              	opcode_breaks:
 15140 0000 34CD9C35 		.ascii	"4\315\2345\014\2345"
 15140      0C9C35
 15141              		.section	.rodata.prob_catalogue,"a"
 15142              		.align	2
 15145              	prob_catalogue:
 15146 0000 5414F5B5 		.ascii	"T\024\365\265QYVE\321fST\305\261NQ\226\245\035HVU\205"
 15146      51595645 
 15146      D1665354 
 15146      C5B14E51 
 15146      96A51D48 
 15147 0017 C15A57D5 		.ascii	"\301ZW\325\345\311`X\226\025\315cW\025\265\305]U\225"
 15147      E5C96058 
 15147      9615CD63 
 15147      5715B5C5 
 15147      5D5595
 15148 002a 55BD5754 		.ascii	"U\275WT\325%\271TP\326\225\021ER\224\225\255KY\323\325"
 15148      D525B954 
 15148      50D69511 
 15148      45529495 
 15148      AD4B59D3 
 15149 003f 05425016 		.ascii	"\005BP\026\200"
 15149      80
 15150              		.section	.rodata.prog_catalogue,"a"
 15151              		.align	2
 15154              	prog_catalogue:
ARM GAS  /tmp/ccc9ZrJ3.s 			page 407


 15155 0000 B98D1CE8 		.ascii	"\271\215\034\350y\035G\201\310t*3\213\274B\272\356\321"
 15155      791D4781 
 15155      C8742A33 
 15155      8BBC42BA 
 15155      EED1
 15156 0012 BAB1C08E 		.ascii	"\272\261\300\216\013\342\3713/\013\262\356\312N#\220"
 15156      0BE2F933 
 15156      2F0BB2EE 
 15156      CA4E2390 
 15157 0022 E738CE8C 		.ascii	"\3478\316\214\254\3367r\240\320\3349G\003\233(\264\215"
 15157      ACDE3772 
 15157      A0D0DC39 
 15157      47039B28 
 15157      B48D
 15158 0034 F1D8CD1B 		.ascii	"\361\330\315\033K\022\274\262,\016\033\224\322\015\355"
 15158      4B12BCB2 
 15158      2C0E1B94 
 15158      D20DED
 15159 0043 1302C32A 		.ascii	"\023\002\303*r \350\313\260l,|\256+q\354\324"
 15159      7220E8CB 
 15159      B06C2C7C 
 15159      AE2B71EC 
 15159      D4
 15160              		.section	.rodata.program_xfcn,"a"
 15161              		.align	2
 15164              	program_xfcn:
 15165 0000 465B46A3 		.ascii	"F[F\243\0220X\246/\024@\312#\265\216o\335BY\323\037"
 15165      123058A6 
 15165      2F1440CA 
 15165      23B58E6F 
 15165      DD4259D3 
 15166 0015 51ECBC42 		.ascii	"Q\354\274B`Y\264\355<d\0216s\025F\220&\335.K\322\007"
 15166      6059B4ED 
 15166      3C641136 
 15166      73154690 
 15166      26DD2E4B 
 15167 002b 15C66D5B 		.ascii	"\025\306m[f\211\315\313]'1\202s\333\202Q\304D\235f\251"
 15167      6689CDCB 
 15167      5D273182 
 15167      73DB8251 
 15167      C4449D66 
 15168 0040 3263F18C 		.ascii	"2c\361\214e\247i\227\366\221\215o\027\347,\303o\\\024"
 15168      65A76997 
 15168      F6918D6F 
 15168      17E72CC3 
 15168      6F5C14
 15169 0053 7F252570 		.ascii	"\177%%p\3149\004\303p\374\223\023\3102\021\241\010I"
 15169      CC3904C3 
 15169      70FC9313 
 15169      C83211A1 
 15169      0849
 15170 0065 F1030B11 		.ascii	"\361\003\013\021\313\2127\011\221p\303V\000\312EQDY"
 15170      CB8A3709 
 15170      9170C356 
 15170      00CA4551 
 15170      4459
 15171 0077 186F8AC7 		.ascii	"\030o\212\307\035\214s\212\002z\327*\211\373Z\324\266"
ARM GAS  /tmp/ccc9ZrJ3.s 			page 408


 15171      1D8C738A 
 15171      027AD72A 
 15171      89FB5AD4 
 15171      B6
 15172 0088 2D9B6ADB 		.ascii	"-\233j\333\265J\022\255\251LZ\326\271\253k\034\006%"
 15172      B54A12AD 
 15172      A94C5AD6 
 15172      B9AB6B1C 
 15172      0625
 15173 009a 9A435DC7 		.ascii	"\232C]\307m\262uW\245\335\261w@"
 15173      6DB27557 
 15173      A5DDB177 
 15173      40
 15174              		.section	.rodata.smap.9269,"a"
 15175              		.align	2
 15176              		.set	.LANCHOR22,. + 0
 15179              	smap.9269:
 15180 0000 00010002 		.ascii	"\000\001\000\002"
 15181              		.section	.rodata.stats_catalogue,"a"
 15182              		.align	2
 15185              	stats_catalogue:
 15186 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\324T\027\205"
 15186      5D17C971 
 15186      58611685 
 15186      95D45417 
 15186      85
 15187 0011 514C575D 		.ascii	"QLW]\300"
 15187      C0
 15188              		.section	.rodata.sums_catalogue,"a"
 15189              		.align	2
 15192              	sums_catalogue:
 15193 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15193      4A1384C1 
 15193      20451104 
 15193      F11C4911 
 15193      8500
 15194              		.section	.rodata.test_catalogue,"a"
 15195              		.align	2
 15198              	test_catalogue:
 15199 0000 C5F16CD0 		.ascii	"\305\361l\320\353/\313\334\023\010\302\260\222\363\003"
 15199      EB2FCBDC 
 15199      1308C2B0 
 15199      92F303
 15200 000f C1707C18 		.ascii	"\301p|\030\323.\361\333\310\2356\213\202\370\2725\013"
 15200      D32EF1DB 
 15200      C89D368B 
 15200      82F8BA35 
 15200      0B
 15201 0020 9340F0B7 		.ascii	"\223@\360\267\356\003T\326\267\256+\204\267<@"
 15201      EE0354D6 
 15201      B7AE2B84 
 15201      B73C40
 15202              		.text
 15203              	.Letext0:
 15204              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15205              		.file 3 "dmcp/dmcp.h"
 15206              		.file 4 "src/decNumber/decContext.h"
ARM GAS  /tmp/ccc9ZrJ3.s 			page 409


 15207              		.file 5 "src/decNumber/decNumber.h"
 15208              		.file 6 "src/decNumber/decimal64.h"
 15209              		.file 7 "src/decNumber/decimal128.h"
 15210              		.file 8 "src/xeq.h"
 15211              		.file 9 "src/data.h"
 15212              		.file 10 "src/keys.h"
 15213              		.file 11 "src/display.h"
 15214              		.file 12 "src/consts.h"
 15215              		.file 13 "src/storage.h"
 15216              		.file 14 "src/stats.h"
 15217              		.file 15 "src/catalogues.h"
 15218              		.file 16 "src/lcd.h"
 15219              		.file 17 "src/int.h"
 15220              		.file 18 "src/decn.h"
ARM GAS  /tmp/ccc9ZrJ3.s 			page 410


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccc9ZrJ3.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccc9ZrJ3.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccc9ZrJ3.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccc9ZrJ3.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccc9ZrJ3.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccc9ZrJ3.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccc9ZrJ3.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccc9ZrJ3.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccc9ZrJ3.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccc9ZrJ3.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccc9ZrJ3.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccc9ZrJ3.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccc9ZrJ3.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccc9ZrJ3.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccc9ZrJ3.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccc9ZrJ3.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccc9ZrJ3.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/ccc9ZrJ3.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccc9ZrJ3.s:1117   .text.arg_eval:0000000000000090 $d
     /tmp/ccc9ZrJ3.s:1124   .text.arg_digit:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:1131   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccc9ZrJ3.s:1392   .text.arg_digit:00000000000000fc $d
     /tmp/ccc9ZrJ3.s:1400   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:1407   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccc9ZrJ3.s:1465   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccc9ZrJ3.s:1470   .text.process_h_shifted:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:1477   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/ccc9ZrJ3.s:1725   .text.process_h_shifted:00000000000000c8 $d
     /tmp/ccc9ZrJ3.s:1733   .text.intltr:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:1740   .text.intltr:0000000000000000 intltr
     /tmp/ccc9ZrJ3.s:1803   .text.intltr:0000000000000030 $d
     /tmp/ccc9ZrJ3.s:1809   .text.process_normal:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:1816   .text.process_normal:0000000000000000 process_normal
     /tmp/ccc9ZrJ3.s:1877   .text.process_normal:0000000000000022 $d
     /tmp/ccc9ZrJ3.s:1923   .text.process_normal:000000000000007e $t
     /tmp/ccc9ZrJ3.s:1972   .text.process_normal:00000000000000ac $d
     /tmp/ccc9ZrJ3.s:1991   .text.process_normal:00000000000000f8 $t
     /tmp/ccc9ZrJ3.s:2002   .text.process_normal:0000000000000104 $d
     /tmp/ccc9ZrJ3.s:2045   .text.process_normal:00000000000001b0 $t
     /tmp/ccc9ZrJ3.s:2246   .text.process_normal:0000000000000264 $d
     /tmp/ccc9ZrJ3.s:2255   .text.process_fg_shifted:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:2262   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/ccc9ZrJ3.s:2390   .text.process_fg_shifted:000000000000003e $d
     /tmp/ccc9ZrJ3.s:2589   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/ccc9ZrJ3.s 			page 411


     /tmp/ccc9ZrJ3.s:2630   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/ccc9ZrJ3.s:2826   .text.process_fg_shifted:0000000000000294 $d
     /tmp/ccc9ZrJ3.s:2835   .text.set_window:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:2842   .text.set_window:0000000000000000 set_window
     /tmp/ccc9ZrJ3.s:2989   .text.set_window:000000000000008c $d
     /tmp/ccc9ZrJ3.s:2996   .text.arg_storcl:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:3003   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccc9ZrJ3.s:3119   .text.arg_storcl:0000000000000040 $d
     /tmp/ccc9ZrJ3.s:3124   .text.process_arg:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:3131   .text.process_arg:0000000000000000 process_arg
     /tmp/ccc9ZrJ3.s:3337   .text.process_arg:000000000000008a $d
     /tmp/ccc9ZrJ3.s:3341   .text.process_arg:0000000000000090 $t
     /tmp/ccc9ZrJ3.s:3430   .text.process_arg:00000000000000f0 $d
     /tmp/ccc9ZrJ3.s:3477   .text.process_arg:00000000000001a8 $t
     /tmp/ccc9ZrJ3.s:3880   .text.process_arg:000000000000032c $d
     /tmp/ccc9ZrJ3.s:3889   .text.process_arg:0000000000000340 $t
     /tmp/ccc9ZrJ3.s:4380   .text.process_arg:000000000000054c $d
     /tmp/ccc9ZrJ3.s:4385   .text.cur_shift:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:4393   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccc9ZrJ3.s:4421   .text.cur_shift:0000000000000010 $d
     /tmp/ccc9ZrJ3.s:4426   .text.reset_shift:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:4434   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccc9ZrJ3.s:4492   .text.reset_shift:0000000000000014 $d
     /tmp/ccc9ZrJ3.s:4497   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:4505   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccc9ZrJ3.s:4533   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccc9ZrJ3.s:4538   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:4546   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccc9ZrJ3.s:4604   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccc9ZrJ3.s:4609   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:4617   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccc9ZrJ3.s:4653   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccc9ZrJ3.s:4659   .text.init_state:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:4667   .text.init_state:0000000000000000 init_state
     /tmp/ccc9ZrJ3.s:4790   .text.init_state:0000000000000078 $d
     /tmp/ccc9ZrJ3.s:4797   .text.process_cmplx:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:4804   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/ccc9ZrJ3.s:5087   .text.process_cmplx:00000000000000b0 $d
     /tmp/ccc9ZrJ3.s:5094   .text.soft_init_state:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:5102   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccc9ZrJ3.s:5197   .text.soft_init_state:0000000000000048 $d
     /tmp/ccc9ZrJ3.s:5203   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:5211   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/ccc9ZrJ3.s:5377   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/ccc9ZrJ3.s:5384   .text.stack_begin:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:5392   .text.stack_begin:0000000000000000 stack_begin
     /tmp/ccc9ZrJ3.s:5532   .text.stack_begin:00000000000000b4 $d
     /tmp/ccc9ZrJ3.s:5538   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:5546   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccc9ZrJ3.s:5567   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccc9ZrJ3.s:5573   .text.current_catalogue:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:5581   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccc9ZrJ3.s:5837   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccc9ZrJ3.s:5847   .text.process_catalogue:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:5854   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccc9ZrJ3.s:6183   .text.process_catalogue:00000000000000fe $d
     /tmp/ccc9ZrJ3.s:6215   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/ccc9ZrJ3.s 			page 412


     /tmp/ccc9ZrJ3.s:6723   .text.process_catalogue:00000000000002dc $d
     /tmp/ccc9ZrJ3.s:6744   .text.process_catalogue:00000000000002fc $t
     /tmp/ccc9ZrJ3.s:6774   .text.find_pos:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:6782   .text.find_pos:0000000000000000 find_pos
     /tmp/ccc9ZrJ3.s:6955   .text.find_pos:0000000000000080 $d
     /tmp/ccc9ZrJ3.s:6961   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:6969   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccc9ZrJ3.s:7001   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccc9ZrJ3.s:7007   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:7017   .text.process_keycode:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:7025   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccc9ZrJ3.s:7644   .text.process_keycode:00000000000002e0 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccc9ZrJ3.s:7667   .text.process_keycode:0000000000000320 $t
     /tmp/ccc9ZrJ3.s:7866   .text.process_keycode:00000000000003f0 $d
     /tmp/ccc9ZrJ3.s:7875   .text.process_keycode:0000000000000414 $t
     /tmp/ccc9ZrJ3.s:8355   .text.process_keycode:000000000000061c $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccc9ZrJ3.s:8373   .text.process_keycode:0000000000000658 $t
     /tmp/ccc9ZrJ3.s:8419   .text.process_keycode:0000000000000678 $d
     /tmp/ccc9ZrJ3.s:8446   .text.process_keycode:0000000000000692 $t
     /tmp/ccc9ZrJ3.s:8575   .text.process_keycode:0000000000000720 $d
     /tmp/ccc9ZrJ3.s:8579   .text.process_keycode:0000000000000730 $t
     /tmp/ccc9ZrJ3.s:9162   .text.process_keycode:0000000000000960 $d
     /tmp/ccc9ZrJ3.s:9179   .text.process_keycode:000000000000097c $t
     /tmp/ccc9ZrJ3.s:9587   .text.process_keycode:0000000000000acc $d
     /tmp/ccc9ZrJ3.s:9617   .text.process_keycode:0000000000000b44 $t
     /tmp/ccc9ZrJ3.s:10058  .text.process_keycode:0000000000000cb8 $d
     /tmp/ccc9ZrJ3.s:10075  .text.process_keycode:0000000000000cdc $t
     /tmp/ccc9ZrJ3.s:10438  .text.process_keycode:0000000000000e0c $d
     /tmp/ccc9ZrJ3.s:10473  .text.process_keycode:0000000000000e98 $t
     /tmp/ccc9ZrJ3.s:10729  .text.process_keycode:0000000000000f90 $d
     /tmp/ccc9ZrJ3.s:10749  .text.process_keycode:0000000000000fe0 $t
     /tmp/ccc9ZrJ3.s:10798  .text.process_keycode:0000000000001020 $d
     /tmp/ccc9ZrJ3.s:10827  .text.process_keycode:0000000000001034 $t
     /tmp/ccc9ZrJ3.s:10962  .text.process_keycode:0000000000001098 $d
     /tmp/ccc9ZrJ3.s:10980  .text.process_keycode:00000000000010e0 $t
     /tmp/ccc9ZrJ3.s:11525  .text.process_keycode:000000000000128a $d
     /tmp/ccc9ZrJ3.s:11560  .text.process_keycode:00000000000012ce $t
     /tmp/ccc9ZrJ3.s:11576  .text.process_keycode:00000000000012e0 $d
     /tmp/ccc9ZrJ3.s:11586  .text.process_keycode:00000000000012f4 $t
     /tmp/ccc9ZrJ3.s:11635  .text.process_keycode:000000000000131c $d
     /tmp/ccc9ZrJ3.s:11670  .text.process_keycode:00000000000013a4 $t
     /tmp/ccc9ZrJ3.s:12011  .text.process_keycode:0000000000001508 $d
     /tmp/ccc9ZrJ3.s:12054  .text.process_keycode:000000000000155c $t
     /tmp/ccc9ZrJ3.s:12275  .text.process_keycode:000000000000163c $d
     /tmp/ccc9ZrJ3.s:12282  .text.process_keycode:0000000000001648 $t
     /tmp/ccc9ZrJ3.s:12808  .text.process_keycode:0000000000001874 $d
     /tmp/ccc9ZrJ3.s:12834  .text.process_keycode:00000000000018dc $t
     /tmp/ccc9ZrJ3.s:13218  .text.process_keycode:0000000000001a50 $d
     /tmp/ccc9ZrJ3.s:13226  .text.process_keycode:0000000000001a5c $t
     /tmp/ccc9ZrJ3.s:14255  .text.process_keycode:0000000000001dd4 $d
     /tmp/ccc9ZrJ3.s:14264  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccc9ZrJ3.s:14272  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
ARM GAS  /tmp/ccc9ZrJ3.s 			page 413


     /tmp/ccc9ZrJ3.s:14480  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccc9ZrJ3.s:14497  .bss.was_paused.9793:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14501  .bss.was_paused.9793:0000000000000000 was_paused.9793
     /tmp/ccc9ZrJ3.s:14504  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14507  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccc9ZrJ3.s:14510  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14513  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccc9ZrJ3.s:14516  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14519  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccc9ZrJ3.s:14522  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14526  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccc9ZrJ3.s:14532  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14536  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccc9ZrJ3.s:14542  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14545  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccc9ZrJ3.s:14549  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14552  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccc9ZrJ3.s:14555  .rodata.alphamap.9277:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14559  .rodata.alphamap.9277:0000000000000000 alphamap.9277
     /tmp/ccc9ZrJ3.s:14599  .rodata.amap.9268:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14603  .rodata.amap.9268:0000000000000000 amap.9268
     /tmp/ccc9ZrJ3.s:14621  .rodata.catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14624  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccc9ZrJ3.s:14634  .rodata.catalogue_sizes.9591:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14638  .rodata.catalogue_sizes.9591:0000000000000000 catalogue_sizes.9591
     /tmp/ccc9ZrJ3.s:14641  .rodata.catalogues.9599:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14645  .rodata.catalogues.9599:0000000000000000 catalogues.9599
     /tmp/ccc9ZrJ3.s:14730  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccc9ZrJ3.s:15185  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccc9ZrJ3.s:15145  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccc9ZrJ3.s:14748  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccc9ZrJ3.s:15154  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccc9ZrJ3.s:15164  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccc9ZrJ3.s:15198  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccc9ZrJ3.s:14794  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccc9ZrJ3.s:15192  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccc9ZrJ3.s:14787  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccc9ZrJ3.s:14668  .rodata.cmap.9267:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14672  .rodata.cmap.9267:0000000000000000 cmap.9267
     /tmp/ccc9ZrJ3.s:14698  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14702  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccc9ZrJ3.s:14709  .rodata.conv_mapping.9638:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14713  .rodata.conv_mapping.9638:0000000000000000 conv_mapping.9638
     /tmp/ccc9ZrJ3.s:14727  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14735  .rodata.disp.9449:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14739  .rodata.disp.9449:0000000000000000 disp.9449
     /tmp/ccc9ZrJ3.s:14745  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14754  .rodata.linear_key_map.9233:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14758  .rodata.linear_key_map.9233:0000000000000000 linear_key_map.9233
     /tmp/ccc9ZrJ3.s:14764  .rodata.linear_key_map.9237:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14768  .rodata.linear_key_map.9237:0000000000000000 linear_key_map.9237
     /tmp/ccc9ZrJ3.s:14774  .rodata.map.9249:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14778  .rodata.map.9249:0000000000000000 map.9249
     /tmp/ccc9ZrJ3.s:14784  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14791  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14800  .rodata.op_map.9321:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14804  .rodata.op_map.9321:0000000000000000 op_map.9321
ARM GAS  /tmp/ccc9ZrJ3.s 			page 414


     /tmp/ccc9ZrJ3.s:14841  .rodata.op_map.9344:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14845  .rodata.op_map.9344:0000000000000000 op_map.9344
     /tmp/ccc9ZrJ3.s:14917  .rodata.op_map.9367:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14921  .rodata.op_map.9367:0000000000000000 op_map.9367
     /tmp/ccc9ZrJ3.s:14958  .rodata.op_map.9422:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:14962  .rodata.op_map.9422:0000000000000000 op_map.9422
     /tmp/ccc9ZrJ3.s:15104  .rodata.op_map.9434:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15108  .rodata.op_map.9434:0000000000000000 op_map.9434
     /tmp/ccc9ZrJ3.s:15113  .rodata.op_map.9448:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15117  .rodata.op_map.9448:0000000000000000 op_map.9448
     /tmp/ccc9ZrJ3.s:15125  .rodata.op_map2.9345:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15129  .rodata.op_map2.9345:0000000000000000 op_map2.9345
     /tmp/ccc9ZrJ3.s:15135  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15139  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccc9ZrJ3.s:15142  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15151  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15161  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15175  .rodata.smap.9269:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15179  .rodata.smap.9269:0000000000000000 smap.9269
     /tmp/ccc9ZrJ3.s:15182  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15189  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:15195  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccc9ZrJ3.s:2431   .text.process_fg_shifted:0000000000000067 $d
     /tmp/ccc9ZrJ3.s:2431   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
get_reg_n
swap_reg
ARM GAS  /tmp/ccc9ZrJ3.s 			page 415


copyreg
op_p2r
RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
stoprog
is_key_pressed
set_running_off
xeq_sst_bst
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
get_last_menu
convert_regK
local_regs
set_default_menu
alen

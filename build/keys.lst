ARM GAS  /tmp/ccXySG1f.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccXySG1f.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/ccXySG1f.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/ccXySG1f.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/ccXySG1f.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/ccXySG1f.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/ccXySG1f.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccXySG1f.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/ccXySG1f.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/ccXySG1f.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/ccXySG1f.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** 
 638:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 639:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 640:src/keys.c    **** #endif							//JM5
 641:src/keys.c    **** 
 642:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 643:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 644:src/keys.c    **** #endif							//JM5
 645:src/keys.c    **** 
 646:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 647:src/keys.c    **** 	UState.show_y = 1;
 648:src/keys.c    **** #endif
 649:src/keys.c    **** 
 650:src/keys.c    **** #ifdef DEFAULT_TO_J
 651:src/keys.c    **** 	SET_CPX_J;
 652:src/keys.c    **** #endif
 653:src/keys.c    **** 
 654:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 655:src/keys.c    **** 	cpx_nop(OP_CYES);
 656:src/keys.c    **** #endif
ARM GAS  /tmp/ccXySG1f.s 			page 13


 657:src/keys.c    **** 
 658:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 659:src/keys.c    **** 	cpx_nop(OP_CYES);
 660:src/keys.c    **** 	cpx_nop(OP_C_ON);
 661:src/keys.c    **** #endif
 662:src/keys.c    **** #endif
 663:src/keys.c    **** 
 664:src/keys.c    **** 	State2.test = TST_NONE;
 665:src/keys.c    **** 	State2.runmode = 1;
 666:src/keys.c    **** 	update_program_bounds(1);
 667:src/keys.c    **** 	set_lift();
 668:src/keys.c    **** 
 669:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 670:src/keys.c    **** 	// but must not be cleared.
 671:src/keys.c    **** 	Voltage = v;
 672:src/keys.c    **** 	LastKey = k;
 673:src/keys.c    **** #ifndef REALBUILD
 674:src/keys.c    **** 	State2.trace = b;
 675:src/keys.c    **** 	State2.flags = a;
 676:src/keys.c    **** #else
 677:src/keys.c    **** 	TestFlag = t;
 678:src/keys.c    **** #endif
 679:src/keys.c    **** 	ShowRegister = regX_idx;
 680:src/keys.c    **** }
 681:src/keys.c    **** 
 682:src/keys.c    **** void soft_init_state(void) {
 683:src/keys.c    **** 	int soft;
 684:src/keys.c    **** 	unsigned int runmode;
 685:src/keys.c    **** 	unsigned int alphas;
 686:src/keys.c    **** 
 687:src/keys.c    **** 	if (CmdLineLength) {
 688:src/keys.c    **** 		CmdLineLength = 0;
 689:src/keys.c    **** 		CmdLineEex = 0;
 690:src/keys.c    **** 		CmdLineDot = 0;
 691:src/keys.c    **** 		return;
 692:src/keys.c    **** 	}
 693:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 694:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 695:src/keys.c    **** 	runmode = State2.runmode;
 696:src/keys.c    **** 	alphas = State2.alphas;
 697:src/keys.c    **** 	init_state();
 698:src/keys.c    **** 	if (soft) {
 699:src/keys.c    **** 		State2.runmode = runmode;
 700:src/keys.c    **** 		State2.alphas = alphas;
 701:src/keys.c    **** 	}
 702:src/keys.c    **** }
 703:src/keys.c    **** 
 704:src/keys.c    **** static int check_confirm(int op) {
 705:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 706:src/keys.c    **** 		const int nilop = argKIND(op);
 707:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 708:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 709:src/keys.c    **** 			return STATE_UNFINISHED;
 710:src/keys.c    **** 		}
 711:src/keys.c    **** #ifndef DM42		
 712:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 713:src/keys.c    **** #endif
ARM GAS  /tmp/ccXySG1f.s 			page 14


 714:src/keys.c    **** #ifdef DM42
 715:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 716:src/keys.c    **** #endif
 717:src/keys.c    **** #ifdef INFRARED
 718:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 719:src/keys.c    **** #endif
 720:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 721:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 722:src/keys.c    **** #endif
 723:src/keys.c    **** 		) {
 724:src/keys.c    **** 			// These commands are not programmable
 725:src/keys.c    **** 			NonProgrammable = 1;
 726:src/keys.c    **** 		}
 727:src/keys.c    **** 	}
 728:src/keys.c    **** 	return op;
 729:src/keys.c    **** }
 730:src/keys.c    **** 
 731:src/keys.c    **** static void set_smode(const enum single_disp d) {
 732:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 733:src/keys.c    **** }
 734:src/keys.c    **** 
 735:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 736:src/keys.c    **** 	const int code = 100 + n;
 737:src/keys.c    **** 	unsigned int pc = state_pc();
 738:src/keys.c    **** 
 739:src/keys.c    **** 	if (State2.runmode) {
 740:src/keys.c    **** 		if (isXROM(pc))
 741:src/keys.c    **** 			pc = 1;
 742:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 743:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 744:src/keys.c    **** 	}
 745:src/keys.c    **** 	return dflt;
 746:src/keys.c    **** }
 747:src/keys.c    **** 
 748:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 749:src/keys.c    ****  * as digits.
 750:src/keys.c    ****  */
 751:src/keys.c    **** static int intltr(int d) {
 752:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 753:src/keys.c    **** }
 754:src/keys.c    **** 
 755:src/keys.c    **** /*
 756:src/keys.c    ****  *  Process a key code in the unshifted mode.
 757:src/keys.c    ****  */
 758:src/keys.c    **** static int process_normal(const keycode c)
 759:src/keys.c    **** {
 760:src/keys.c    **** 	static const unsigned short int op_map[] = {
 761:src/keys.c    **** 		// Row 1
 762:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 763:src/keys.c    **** 		OP_MON  | OP_RECIP,
 764:src/keys.c    **** 		OP_DYA  | OP_POW,
 765:src/keys.c    **** 		OP_MON  | OP_SQRT,
 766:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 767:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 768:src/keys.c    **** 		// Row 2
 769:src/keys.c    **** 		RARG_STO,
 770:src/keys.c    **** 		RARG_RCL,
ARM GAS  /tmp/ccXySG1f.s 			page 15


 771:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 772:src/keys.c    **** 		// Row 3
 773:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 774:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 775:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 776:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 777:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 778:src/keys.c    **** 		// Row 4
 779:src/keys.c    **** 		RARG_XEQ,
 780:src/keys.c    **** 		OP_SPEC | OP_7,
 781:src/keys.c    **** 		OP_SPEC | OP_8,
 782:src/keys.c    **** 		OP_SPEC | OP_9,
 783:src/keys.c    **** 		OP_DYA  | OP_DIV,
 784:src/keys.c    **** 		// Row 5
 785:src/keys.c    **** 		STATE_BST,
 786:src/keys.c    **** 		OP_SPEC | OP_4,
 787:src/keys.c    **** 		OP_SPEC | OP_5,
 788:src/keys.c    **** 		OP_SPEC | OP_6,
 789:src/keys.c    **** 		OP_DYA  | OP_MUL,
 790:src/keys.c    **** 		// Row 6
 791:src/keys.c    **** 		STATE_SST,		// SST
 792:src/keys.c    **** 		OP_SPEC | OP_1,
 793:src/keys.c    **** 		OP_SPEC | OP_2,
 794:src/keys.c    **** 		OP_SPEC | OP_3,
 795:src/keys.c    **** 		OP_DYA  | OP_SUB,
 796:src/keys.c    **** 		// Row 7
 797:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 798:src/keys.c    **** 		OP_SPEC | OP_0,
 799:src/keys.c    **** 		OP_SPEC | OP_DOT,
 800:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 801:src/keys.c    **** 		OP_DYA  | OP_ADD,
 802:src/keys.c    **** #ifdef DM42
 803:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 804:src/keys.c    **** #endif
 805:src/keys.c    **** 	};
 806:src/keys.c    **** 
 807:src/keys.c    **** 	int lc = keycode_to_linear(c);
 808:src/keys.c    **** 	int op = op_map[lc];
 809:src/keys.c    **** 	
 810:src/keys.c    **** 	// The switch handles all the special cases
 811:src/keys.c    **** #ifdef DM42
 812:src/keys.c    **** 	int op_int;
 813:src/keys.c    **** 	if (UState.intm) {
 814:src/keys.c    **** 	  switch (c) {
 815:src/keys.c    **** 	  case K00:
 816:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 817:src/keys.c    **** 	    if (intltr(10)) {
 818:src/keys.c    **** 	      return op;
 819:src/keys.c    **** 	    }
 820:src/keys.c    **** 	    else {
 821:src/keys.c    **** 	      return check_f_key(0, op);
 822:src/keys.c    **** 	    }
 823:src/keys.c    **** 	  case K01:
 824:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 825:src/keys.c    **** 	    if (intltr(11)) {
 826:src/keys.c    **** 	      return op;
 827:src/keys.c    **** 	    }
ARM GAS  /tmp/ccXySG1f.s 			page 16


 828:src/keys.c    **** 	    else {
 829:src/keys.c    **** 	      return check_f_key(1, op);
 830:src/keys.c    **** 	    }
 831:src/keys.c    **** 	  case K03:
 832:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 833:src/keys.c    **** 	    if (intltr(12)) {
 834:src/keys.c    **** 	      return op_int;
 835:src/keys.c    **** 	    }
 836:src/keys.c    **** 	    else {
 837:src/keys.c    **** 	      return check_f_key(2, op);
 838:src/keys.c    **** 	    }
 839:src/keys.c    **** 	  case K30:
 840:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 841:src/keys.c    **** 	    if (intltr(15)) {
 842:src/keys.c    **** 	      return op_int;
 843:src/keys.c    **** 	    }
 844:src/keys.c    **** 	  default:;
 845:src/keys.c    **** 	  }
 846:src/keys.c    **** 	}
 847:src/keys.c    **** #endif  
 848:src/keys.c    **** 
 849:src/keys.c    **** 	switch (c) {
 850:src/keys.c    **** #ifdef DM42
 851:src/keys.c    **** 	case K00:
 852:src/keys.c    **** 		return check_f_key(0, op);
 853:src/keys.c    **** 	case K01:
 854:src/keys.c    **** 		return check_f_key(1, op);
 855:src/keys.c    **** 	case K03:
 856:src/keys.c    **** 		return check_f_key(2, op);
 857:src/keys.c    **** #else
 858:src/keys.c    **** 	case K00:
 859:src/keys.c    **** 	case K01:
 860:src/keys.c    **** 		if (UState.intm)
 861:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 862:src/keys.c    **** 	case K02:
 863:src/keys.c    **** 	case K03:
 864:src/keys.c    **** 		if (intltr(lc + 10)) {
 865:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 866:src/keys.c    **** 			return op;
 867:src/keys.c    **** 		}
 868:src/keys.c    **** 		return check_f_key(lc, op);
 869:src/keys.c    **** #endif		
 870:src/keys.c    **** 	case K_ARROW:
 871:src/keys.c    **** #ifndef DM42
 872:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 873:src/keys.c    **** 		if (intltr(14))
 874:src/keys.c    **** 			return op;
 875:src/keys.c    **** #else
 876:src/keys.c    **** 		if (UState.intm)
 877:src/keys.c    **** 			return op;
 878:src/keys.c    **** #endif
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 		if (is_bad_cmdline())
 881:src/keys.c    **** 			return STATE_UNFINISHED;
 882:src/keys.c    **** 		process_cmdline_set_lift();
 883:src/keys.c    **** 		State2.arrow = 1;
 884:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccXySG1f.s 			page 17


 885:src/keys.c    **** 		set_menu (M_Arrow); // arrow menu
 886:src/keys.c    **** 		display_current_menu ();
 887:src/keys.c    **** 		lcd_refresh ();
 888:src/keys.c    **** #else
 889:src/keys.c    **** 		set_shift(SHIFT_G);
 890:src/keys.c    **** #endif
 891:src/keys.c    **** 		break;
 892:src/keys.c    **** 
 893:src/keys.c    **** 	case K_CMPLX:
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 	  if (UState.intm)
 896:src/keys.c    **** 	    break; // return nothing
 897:src/keys.c    **** 	  State2.cmplx = 1;
 898:src/keys.c    **** #else
 899:src/keys.c    **** 	  if (UState.intm)
 900:src/keys.c    **** 	    return op;
 901:src/keys.c    **** 	  State2.cmplx = 1;
 902:src/keys.c    **** #endif
 903:src/keys.c    **** 	  break;
 904:src/keys.c    **** 
 905:src/keys.c    **** 	case K24:				// <-
 906:src/keys.c    **** 		if (State2.disp_temp)
 907:src/keys.c    **** 			return STATE_UNFINISHED;
 908:src/keys.c    **** 		if (State2.runmode)
 909:src/keys.c    **** 			return op;
 910:src/keys.c    **** 		return STATE_BACKSPACE;
 911:src/keys.c    **** 
 912:src/keys.c    **** 	case K10:				// STO
 913:src/keys.c    **** 	case K11:				// RCL
 914:src/keys.c    **** 	case K30:				// XEQ
 915:src/keys.c    **** 		init_arg((enum rarg)op);
 916:src/keys.c    **** 		break;
 917:src/keys.c    **** 
 918:src/keys.c    **** 	default:
 919:src/keys.c    **** 		return op;			// Keys handled by table
 920:src/keys.c    **** 	}
 921:src/keys.c    **** 	return STATE_UNFINISHED;
 922:src/keys.c    **** }
 923:src/keys.c    **** 
 924:src/keys.c    **** 
 925:src/keys.c    **** /*
 926:src/keys.c    ****  *  Process a key code after f or g shift
 927:src/keys.c    ****  */
 928:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 929:src/keys.c    **** 
 930:src/keys.c    **** #define NO_INT 0xf000
 931:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 932:src/keys.c    **** 		// Row 1
 933:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 934:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 935:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 936:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 937:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 938:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 939:src/keys.c    **** 		// Row 2
 940:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 941:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
ARM GAS  /tmp/ccXySG1f.s 			page 18


 942:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 943:src/keys.c    **** 		// Row 3
 944:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 945:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 946:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 947:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 948:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 949:src/keys.c    **** 		// Row 4
 950:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 951:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 952:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 953:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 954:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 955:src/keys.c    **** 		// Row 5
 956:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 957:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 958:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 959:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 960:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 961:src/keys.c    **** 		// Row 6
 962:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 963:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 964:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 965:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 966:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 967:src/keys.c    **** 		// Row 7
 968:src/keys.c    **** #ifdef INFRARED
 969:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 970:src/keys.c    **** #else
 971:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 972:src/keys.c    **** #endif
 973:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 974:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 975:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 976:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 977:src/keys.c    **** #ifdef DM42
 978:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 979:src/keys.c    **** #endif
 980:src/keys.c    **** 	};
 981:src/keys.c    **** 
 982:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 983:src/keys.c    **** 		STATE_UNFINISHED,
 984:src/keys.c    **** 		STATE_UNFINISHED,
 985:src/keys.c    **** 		OP_DYA  | OP_POW,
 986:src/keys.c    **** 		OP_MON  | OP_SQRT
 987:src/keys.c    **** 	};
 988:src/keys.c    **** 
 989:src/keys.c    **** 	enum shifts shift = reset_shift();
 990:src/keys.c    **** 	int lc = keycode_to_linear(c);
 991:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 992:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 993:src/keys.c    **** 	if (no_int)
 994:src/keys.c    **** 		op &= ~NO_INT;
 995:src/keys.c    **** 
 996:src/keys.c    **** 	switch (c) {
 997:src/keys.c    **** 	case K00:
 998:src/keys.c    **** 	  if (! UState.intm) {
ARM GAS  /tmp/ccXySG1f.s 			page 19


 999:src/keys.c    **** 	    //	    print_debug(100,0);
1000:src/keys.c    **** 	    State2.hyp = 1;
1001:src/keys.c    **** 	    State2.dot = op;
1002:src/keys.c    **** 	    // State2.cmplx = 0;
1003:src/keys.c    **** 	    return STATE_UNFINISHED;
1004:src/keys.c    **** 	  }
1005:src/keys.c    **** 	  // fall through
1006:src/keys.c    **** 	case K01:
1007:src/keys.c    **** #ifdef DM42
1008:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1009:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1010:src/keys.c    **** 	  }
1011:src/keys.c    **** 	  break;
1012:src/keys.c    **** #endif
1013:src/keys.c    **** #ifndef DM42
1014:src/keys.c    **** 	case K02:
1015:src/keys.c    **** #endif
1016:src/keys.c    **** 	case K03:
1017:src/keys.c    **** #ifdef DM42
1018:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1019:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1020:src/keys.c    **** 		}
1021:src/keys.c    **** 		break;
1022:src/keys.c    **** #else
1023:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1024:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1025:src/keys.c    **** 		}
1026:src/keys.c    **** 		break;
1027:src/keys.c    **** #endif
1028:src/keys.c    **** 	case K20:				// Alpha
1029:src/keys.c    **** 		if (shift == SHIFT_F) {
1030:src/keys.c    **** 			if (is_bad_cmdline())
1031:src/keys.c    **** 				return STATE_UNFINISHED;
1032:src/keys.c    **** 			process_cmdline_set_lift();
1033:src/keys.c    **** 			State2.alphas = 1;
1034:src/keys.c    **** #ifdef DM42
1035:src/keys.c    **** 			set_menu(M_Alpha);
1036:src/keys.c    **** 			display_current_menu();
1037:src/keys.c    **** #endif
1038:src/keys.c    **** 		}
1039:src/keys.c    **** 		break;
1040:src/keys.c    **** #ifdef DM42
1041:src/keys.c    **** 	case K31:
1042:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1043:src/keys.c    **** 	    return OP_SPEC | OP_D;
1044:src/keys.c    **** 	  }
1045:src/keys.c    **** 	  break;
1046:src/keys.c    **** 	case K30:
1047:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1048:src/keys.c    **** 	    return OP_SPEC | OP_E;
1049:src/keys.c    **** 	  }
1050:src/keys.c    **** 	  break;
1051:src/keys.c    **** #endif
1052:src/keys.c    **** 	case K51:
1053:src/keys.c    **** 		if (is_bad_cmdline())
1054:src/keys.c    **** 			return STATE_UNFINISHED;
1055:src/keys.c    **** 		process_cmdline_set_lift();
ARM GAS  /tmp/ccXySG1f.s 			page 20


1056:src/keys.c    **** 		State2.test = op;
1057:src/keys.c    **** 		return STATE_UNFINISHED;
1058:src/keys.c    **** 
1059:src/keys.c    **** 	case K50:
1060:src/keys.c    **** #ifndef REALBUILD
1061:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1062:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1063:src/keys.c    **** 			return STATE_UNFINISHED;
1064:src/keys.c    **** 		}
1065:src/keys.c    **** #endif
1066:src/keys.c    **** 	case K52:
1067:src/keys.c    **** 	case K53:
1068:src/keys.c    **** 	case K63:
1069:src/keys.c    **** 	case K64:
1070:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1071:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1072:src/keys.c    **** 				init_arg((enum rarg) op);
1073:src/keys.c    **** 			}
1074:src/keys.c    **** 			return STATE_UNFINISHED;
1075:src/keys.c    **** 		}
1076:src/keys.c    **** 		break;
1077:src/keys.c    **** 
1078:src/keys.c    **** 	default:
1079:src/keys.c    **** 		break;
1080:src/keys.c    **** 	}
1081:src/keys.c    **** 	if (no_int && UState.intm)
1082:src/keys.c    **** 		return STATE_UNFINISHED;
1083:src/keys.c    **** 
1084:src/keys.c    **** 	return check_confirm(op);
1085:src/keys.c    **** #undef NO_INT
1086:src/keys.c    **** }
1087:src/keys.c    **** 
1088:src/keys.c    **** /*
1089:src/keys.c    ****  *  Process a key code after h shift
1090:src/keys.c    ****  */
1091:src/keys.c    **** static int process_h_shifted(const keycode c) {
1092:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1093:src/keys.c    **** #define NO_INT   0x4000
1094:src/keys.c    **** 	static const unsigned short int op_map[] = {
1095:src/keys.c    **** 		// Row 1
1096:src/keys.c    **** 		_RARG   | RARG_STD,
1097:src/keys.c    **** 		_RARG   | RARG_FIX,
1098:src/keys.c    **** 		_RARG   | RARG_SCI,
1099:src/keys.c    **** 		_RARG   | RARG_ENG,
1100:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1101:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1102:src/keys.c    **** 		// Row 2
1103:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1104:src/keys.c    **** 		_RARG   | RARG_VIEW,
1105:src/keys.c    **** 		OP_NIL  | OP_RUP,
1106:src/keys.c    **** 		// Row 3
1107:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1108:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1109:src/keys.c    **** 		OP_MON  | OP_NOT,
1110:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1111:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1112:src/keys.c    **** 		// Row 4
ARM GAS  /tmp/ccXySG1f.s 			page 21


1113:src/keys.c    **** 		_RARG   | RARG_GTO,
1114:src/keys.c    **** 		OP_DYA  | OP_LAND,
1115:src/keys.c    **** 		OP_DYA  | OP_LOR,
1116:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1117:src/keys.c    **** 		OP_DYA  | OP_MOD,
1118:src/keys.c    **** 		// Row 5
1119:src/keys.c    **** 		OP_MON  | OP_FACT,
1120:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1121:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1122:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1123:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1124:src/keys.c    **** 		// Row 6
1125:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1126:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1127:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1128:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1129:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1130:src/keys.c    **** 		// Row 7
1131:src/keys.c    **** 		OP_NIL | OP_OFF,
1132:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1133:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1134:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1135:src/keys.c    **** #else
1136:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1137:src/keys.c    **** #endif
1138:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1139:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1140:src/keys.c    **** #ifdef DM42
1141:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1142:src/keys.c    **** #endif
1143:src/keys.c    **** 	};
1144:src/keys.c    **** 
1145:src/keys.c    **** 	int lc = keycode_to_linear(c);
1146:src/keys.c    **** 	int op = op_map[lc];
1147:src/keys.c    **** 	reset_shift();
1148:src/keys.c    **** 
1149:src/keys.c    **** 	// The switch handles all the special cases
1150:src/keys.c    **** 	switch (c) {
1151:src/keys.c    **** 	case K62:
1152:src/keys.c    **** 		if (UState.intm)
1153:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1154:src/keys.c    **** 		else
1155:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1156:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1157:src/keys.c    **** #else
1158:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1159:src/keys.c    **** #endif
1160:src/keys.c    **** 		break;
1161:src/keys.c    **** 
1162:src/keys.c    **** 	case K63:					// Program<->Run mode
1163:src/keys.c    **** 		if (is_bad_cmdline())
1164:src/keys.c    **** 			return STATE_UNFINISHED;
1165:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1166:src/keys.c    **** 		process_cmdline_set_lift();
1167:src/keys.c    **** 		update_program_bounds(1);
1168:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1169:src/keys.c    **** 			set_pc(0);
ARM GAS  /tmp/ccXySG1f.s 			page 22


1170:src/keys.c    **** 		break;
1171:src/keys.c    **** 
1172:src/keys.c    **** 	default:
1173:src/keys.c    **** 		break;
1174:src/keys.c    **** 	}
1175:src/keys.c    **** 
1176:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1177:src/keys.c    **** 		if (op & _RARG) {
1178:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1179:src/keys.c    **** 			op = STATE_UNFINISHED;
1180:src/keys.c    **** 		}
1181:src/keys.c    **** 	}
1182:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1183:src/keys.c    **** #undef _RARG
1184:src/keys.c    **** #undef NO_INT
1185:src/keys.c    **** }
1186:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1187:src/keys.c    **** 
1188:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1189:src/keys.c    **** 
1190:src/keys.c    **** static void do_command_line ( void ) {
1191:src/keys.c    **** 	if (CmdLineLength) {
1192:src/keys.c    **** 		State2.state_lift = 0;
1193:src/keys.c    **** 		process_cmdline();
1194:src/keys.c    **** 	}
1195:src/keys.c    **** }
1196:src/keys.c    **** 
1197:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1198:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1199:src/keys.c    **** // The argument sets the lift state after entry is finished.
1200:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1201:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1202:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1203:src/keys.c    **** 
1204:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1205:src/keys.c    **** 		CLEAR_REAL;
1206:src/keys.c    **** 		do_command_line();
1207:src/keys.c    **** 	}
1208:src/keys.c    **** 	else if (IMAG_FLAG) {
1209:src/keys.c    **** 		CLEAR_IMAG;
1210:src/keys.c    **** 		do_command_line();
1211:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1212:src/keys.c    **** 	}
1213:src/keys.c    **** */
1214:src/keys.c    **** 	do_command_line();
1215:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1216:src/keys.c    **** 	CLEAR_REAL;
1217:src/keys.c    **** 	CLEAR_IMAG;
1218:src/keys.c    **** 
1219:src/keys.c    **** 	State2.state_lift = lift;
1220:src/keys.c    **** 
1221:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1222:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1223:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1224:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1225:src/keys.c    **** 		//call p2r
1226:src/keys.c    **** 		update_speed(0);
ARM GAS  /tmp/ccXySG1f.s 			page 23


1227:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1228:src/keys.c    **** #ifdef RP_PREFIX
1229:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1230:src/keys.c    **** #endif
1231:src/keys.c    **** 		SET_POLAR_READY;
1232:src/keys.c    **** 	}
1233:src/keys.c    **** }
1234:src/keys.c    **** 
1235:src/keys.c    **** static void stack_restore ( void ) { 
1236:src/keys.c    **** 	// called if number entry terminated by EXIT key
1237:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1238:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1239:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1240:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1241:src/keys.c    **** 		drop ( OP_DROPXY );
1242:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1243:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1244:src/keys.c    **** 	}
1245:src/keys.c    **** 	else { // X, Y have been overwritten
1246:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1247:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1248:src/keys.c    **** 	}
1249:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1250:src/keys.c    **** 	CLEAR_INIT_LIFT;
1251:src/keys.c    **** 	CLEAR_POLAR_READY;
1252:src/keys.c    **** }
1253:src/keys.c    **** 
1254:src/keys.c    **** void stack_begin ( int zero_y ) { 
1255:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1256:src/keys.c    **** 	// zeros y if requested. 
1257:src/keys.c    **** 	CLEAR_POLAR_READY;
1258:src/keys.c    **** 	if ( State2.state_lift ){
1259:src/keys.c    **** 		SET_INIT_LIFT;
1260:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1261:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1262:src/keys.c    **** 		lift();
1263:src/keys.c    **** 		zero_X();
1264:src/keys.c    **** 		lift();
1265:src/keys.c    **** 		State2.state_lift = 0;
1266:src/keys.c    **** 	}
1267:src/keys.c    **** 	else {
1268:src/keys.c    **** 		CLEAR_INIT_LIFT;
1269:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1271:src/keys.c    **** 		zero_X();
1272:src/keys.c    **** 		if ( zero_y ) zero_Y();
1273:src/keys.c    **** 	}
1274:src/keys.c    **** }
1275:src/keys.c    **** 
1276:src/keys.c    ****  static int process_c_lock ( const keycode c ) { // main function - called from process (c) functio
1277:src/keys.c    **** 
1278:src/keys.c    ****    enum shifts shift = cur_shift();
1279:src/keys.c    **** 
1280:src/keys.c    ****    // Individual keys needing special treatment
1281:src/keys.c    **** 
1282:src/keys.c    ****    if ( (c < K05) && shift == SHIFT_H ){ // display modes
1283:src/keys.c    ****      return process_h_shifted (c);
ARM GAS  /tmp/ccXySG1f.s 			page 24


1284:src/keys.c    ****    }
1285:src/keys.c    **** 
1286:src/keys.c    **** 
1287:src/keys.c    ****    if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because oth
1288:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
1289:src/keys.c    ****    }
1290:src/keys.c    ****    if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, H
1291:src/keys.c    ****      return process_fg_shifted (c);
1292:src/keys.c    ****    }
1293:src/keys.c    **** 
1294:src/keys.c    ****    if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry comple
1295:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
1296:src/keys.c    ****        reset_shift();
1297:src/keys.c    ****        if ( CmdLineLength ) {
1298:src/keys.c    **** 	 State2.state_lift = 0;
1299:src/keys.c    **** 	 return OP_NIL | OP_PIB;
1300:src/keys.c    ****        }
1301:src/keys.c    ****        else {
1302:src/keys.c    **** 	 return OP_NIL | OP_PIA;
1303:src/keys.c    ****        }
1304:src/keys.c    ****      }
1305:src/keys.c    ****      else {
1306:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1307:src/keys.c    ****        const int eex_pi = 1;
1308:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1309:src/keys.c    ****        const int eex_pi = get_user_flag(regL_idx);
1310:src/keys.c    **** #else
1311:src/keys.c    ****        const int eex_pi = 0;
1312:src/keys.c    **** #endif
1313:src/keys.c    ****        if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // norma
1314:src/keys.c    **** 	 finish_cpx_entry(1);
1315:src/keys.c    **** 	 return process_cmplx(c);
1316:src/keys.c    ****        }
1317:src/keys.c    ****      }
1318:src/keys.c    ****    }
1319:src/keys.c    **** 
1320:src/keys.c    ****    if (shift != SHIFT_N) { // other shifted keys - special cases first.
1321:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
1322:src/keys.c    ****      switch (c) {
1323:src/keys.c    ****      case (K60):
1324:src/keys.c    ****        reset_shift();
1325:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1326:src/keys.c    ****      case (K21): // x<->y key
1327:src/keys.c    ****        if (shift == SHIFT_F || shift == SHIFT_G) { // exchanges real and imag parts with either shi
1328:src/keys.c    **** 	 reset_shift();
1329:src/keys.c    **** 	 CLEAR_POLAR_READY;
1330:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
1331:src/keys.c    ****        }
1332:src/keys.c    ****        else if (shift == SHIFT_H) {
1333:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
1334:src/keys.c    ****        }
1335:src/keys.c    ****        break;
1336:src/keys.c    ****      case (K40): // up-arrow key
1337:src/keys.c    ****        if (shift == SHIFT_F) {
1338:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
1339:src/keys.c    ****        }
1340:src/keys.c    ****        else if (shift == SHIFT_G) {
ARM GAS  /tmp/ccXySG1f.s 			page 25


1341:src/keys.c    **** 	 SET_POLAR_DISPLAY;
1342:src/keys.c    **** 	 CLEAR_POLAR_READY;
1343:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
1344:src/keys.c    ****        }
1345:src/keys.c    ****        else if (shift == SHIFT_H) { // ND addition on DM42 - should work on ordinary calculator too
1346:src/keys.c    **** 	 return process_cmplx (c);
1347:src/keys.c    ****        }
1348:src/keys.c    ****        break;
1349:src/keys.c    ****      case (K22): // +/- key
1350:src/keys.c    ****        reset_shift();
1351:src/keys.c    ****        if (shift == SHIFT_F ) {
1352:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
1353:src/keys.c    ****        }
1354:src/keys.c    ****        else if (shift == SHIFT_H) {
1355:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
1356:src/keys.c    ****        }
1357:src/keys.c    ****        break;
1358:src/keys.c    ****      case (K62): // IP/FP key
1359:src/keys.c    ****        reset_shift();
1360:src/keys.c    ****        if (shift == SHIFT_F) {
1361:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
1362:src/keys.c    ****        }
1363:src/keys.c    ****        else if (shift == SHIFT_G) {
1364:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
1365:src/keys.c    ****        }
1366:src/keys.c    ****        break;
1367:src/keys.c    ****      case (K44): // x (times) key
1368:src/keys.c    ****        if (shift == SHIFT_H) { // real*real + i imag*imag
1369:src/keys.c    **** 	 reset_shift();
1370:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
1371:src/keys.c    ****        }
1372:src/keys.c    ****        else {
1373:src/keys.c    **** 	 return process_cmplx(c);
1374:src/keys.c    ****        }
1375:src/keys.c    ****        break;
1376:src/keys.c    ****      case (K34): // divide key
1377:src/keys.c    ****        if (shift == SHIFT_H) { // real/real + i imag/imag
1378:src/keys.c    **** 	 reset_shift();
1379:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
1380:src/keys.c    ****        }
1381:src/keys.c    ****        else {
1382:src/keys.c    **** 	 return process_cmplx(c);
1383:src/keys.c    ****        }
1384:src/keys.c    ****        break;
1385:src/keys.c    ****      case (K24): // <- key
1386:src/keys.c    ****        if (POLAR_DISPLAY) break;
1387:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
1388:src/keys.c    **** 	 zero_X ();
1389:src/keys.c    **** 	 State2.state_lift = 0;
1390:src/keys.c    **** 	 SET_REAL;
1391:src/keys.c    **** 	 stack_begin (0);
1392:src/keys.c    ****        }
1393:src/keys.c    ****        break;
1394:src/keys.c    ****      default:
1395:src/keys.c    ****        return process_cmplx(c); // for shifted keys not listed above
1396:src/keys.c    ****      }
1397:src/keys.c    ****      reset_shift(); // for the keys listed above; functions complete
ARM GAS  /tmp/ccXySG1f.s 			page 26


1398:src/keys.c    ****      return STATE_UNFINISHED;
1399:src/keys.c    ****    }
1400:src/keys.c    **** 
1401:src/keys.c    ****    switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally n
1402:src/keys.c    ****    case (K61):
1403:src/keys.c    ****    case (K62):
1404:src/keys.c    ****    case (K51):
1405:src/keys.c    ****    case (K52):
1406:src/keys.c    ****    case (K53):
1407:src/keys.c    ****    case (K41):
1408:src/keys.c    ****    case (K42):
1409:src/keys.c    ****    case (K43):
1410:src/keys.c    ****    case (K31):
1411:src/keys.c    ****    case (K32):
1412:src/keys.c    ****    case (K33):
1413:src/keys.c    ****    case (K23): // 0.123456789EEX
1414:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1415:src/keys.c    ****        SET_REAL; // start and continuation of real entry
1416:src/keys.c    ****        stack_begin (1);
1417:src/keys.c    ****      }
1418:src/keys.c    ****      return process_normal(c);
1419:src/keys.c    ****    case (K22): // CHS
1420:src/keys.c    ****      //	case (K23): // EEX
1421:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1422:src/keys.c    ****        return process_cmplx(c);
1423:src/keys.c    ****      }
1424:src/keys.c    ****      else {
1425:src/keys.c    ****        return process_normal(c);
1426:src/keys.c    ****      }
1427:src/keys.c    ****    case (K24): // backspace
1428:src/keys.c    ****    case (K04): // arrow
1429:src/keys.c    ****    case (K_ARROW):
1430:src/keys.c    ****      return process_normal(c);
1431:src/keys.c    ****    case (K_CMPLX):
1432:src/keys.c    ****      if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1433:src/keys.c    ****        CLEAR_REAL;
1434:src/keys.c    ****        SET_IMAG;
1435:src/keys.c    ****        do_command_line();
1436:src/keys.c    ****        State2.state_lift = 0;
1437:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1438:src/keys.c    ****      }
1439:src/keys.c    ****      else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1440:src/keys.c    ****        finish_cpx_entry (1);
1441:src/keys.c    ****      }
1442:src/keys.c    ****      else { // down here we need a part that deals with CPX being pressed without a real part being
1443:src/keys.c    ****        SET_IMAG;
1444:src/keys.c    ****        stack_begin (1);
1445:src/keys.c    ****      }
1446:src/keys.c    ****      return STATE_UNFINISHED;
1447:src/keys.c    ****    default:;
1448:src/keys.c    ****    }
1449:src/keys.c    ****    finish_cpx_entry(0);
1450:src/keys.c    ****    return process_cmplx(c);
1451:src/keys.c    **** 
1452:src/keys.c    ****  }
1453:src/keys.c    **** 
1454:src/keys.c    **** #endif
ARM GAS  /tmp/ccXySG1f.s 			page 27


1455:src/keys.c    **** 
1456:src/keys.c    **** /*
1457:src/keys.c    ****  *  Process a key code after CPX
1458:src/keys.c    ****  */
1459:src/keys.c    **** static int process_cmplx(const keycode c) {
1460:src/keys.c    **** #define _RARG   0xFF00
1461:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1462:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1463:src/keys.c    **** 
1464:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1465:src/keys.c    **** 		// Row 1
1466:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1467:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1468:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1469:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1470:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1471:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1472:src/keys.c    **** 		// Row 2
1473:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1474:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1475:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1476:src/keys.c    **** 		// Row 3
1477:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1478:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1479:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1480:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1481:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1482:src/keys.c    **** 		// Row 4
1483:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1484:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1485:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1486:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1487:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1488:src/keys.c    **** 		// Row 5
1489:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1490:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1491:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1492:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1493:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1494:src/keys.c    **** 		// Row 6
1495:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1497:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1498:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1499:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1500:src/keys.c    **** 		// Row 7
1501:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1502:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1503:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1504:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1505:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1506:src/keys.c    **** #else
1507:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1508:src/keys.c    **** #endif
1509:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1510:src/keys.c    **** #ifdef DM42
1511:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
ARM GAS  /tmp/ccXySG1f.s 			page 28


1512:src/keys.c    **** #endif
1513:src/keys.c    **** 	};
1514:src/keys.c    **** 
1515:src/keys.c    **** 	enum shifts shift = reset_shift();
1516:src/keys.c    **** 	int lc = keycode_to_linear(c);
1517:src/keys.c    **** 	int op = op_map[lc][shift];
1518:src/keys.c    **** 	State2.cmplx = 0;
1519:src/keys.c    **** 
1520:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1521:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1522:src/keys.c    **** 		return STATE_UNFINISHED;
1523:src/keys.c    **** 	}
1524:src/keys.c    **** 	if (c == K00) {
1525:src/keys.c    **** 		// HYP
1526:src/keys.c    **** 		process_cmdline_set_lift();
1527:src/keys.c    **** 		//		print_debug(100,1);
1528:src/keys.c    **** 		State2.hyp = 1;
1529:src/keys.c    **** 		State2.dot = op;
1530:src/keys.c    **** 		State2.cmplx = 1;
1531:src/keys.c    **** 		return STATE_UNFINISHED;
1532:src/keys.c    **** 	}
1533:src/keys.c    **** 
1534:src/keys.c    **** 	if (shift != SHIFT_N) {
1535:src/keys.c    **** 		switch (c) {
1536:src/keys.c    **** 		case K_CMPLX:
1537:src/keys.c    **** 			set_shift(shift);
1538:src/keys.c    **** 			break;
1539:src/keys.c    **** 
1540:src/keys.c    **** 		case K51:
1541:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1542:src/keys.c    **** 				if (is_bad_cmdline())
1543:src/keys.c    **** 					return STATE_UNFINISHED;
1544:src/keys.c    **** 				process_cmdline_set_lift();
1545:src/keys.c    **** 				State2.cmplx = 1;
1546:src/keys.c    **** 				State2.test = op;
1547:src/keys.c    **** 			}
1548:src/keys.c    **** 			return STATE_UNFINISHED;
1549:src/keys.c    **** 
1550:src/keys.c    **** 		case K60:
1551:src/keys.c    **** 			init_state();
1552:src/keys.c    **** 			break;
1553:src/keys.c    **** 
1554:src/keys.c    **** 		default:
1555:src/keys.c    **** 			break;
1556:src/keys.c    **** 		}
1557:src/keys.c    **** 	}
1558:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1559:src/keys.c    **** 	return check_confirm(op);
1560:src/keys.c    **** #else
1561:src/keys.c    **** 	return op;
1562:src/keys.c    **** #endif
1563:src/keys.c    **** 
1564:src/keys.c    **** #undef _RARG
1565:src/keys.c    **** #undef CSWAPXZ
1566:src/keys.c    **** #undef CNUM
1567:src/keys.c    **** }
1568:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 29


1569:src/keys.c    **** 
1570:src/keys.c    **** 
1571:src/keys.c    **** /*
1572:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1573:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1574:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1575:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1576:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1577:src/keys.c    ****  * the ON key are dealt with by our caller.
1578:src/keys.c    ****  */
1579:src/keys.c    **** static int process_hyp(const keycode c) {
1580:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1581:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1582:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1583:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1584:src/keys.c    **** 	};
1585:src/keys.c    **** 	int cmplx = State2.cmplx;
1586:src/keys.c    **** 	int f = State2.dot;
1587:src/keys.c    **** 
1588:src/keys.c    **** 	State2.hyp = 0;
1589:src/keys.c    **** 	State2.cmplx = 0;
1590:src/keys.c    **** 	State2.dot = 0;
1591:src/keys.c    **** #ifdef DM42
1592:src/keys.c    **** 	reset_shift();
1593:src/keys.c    **** #endif
1594:src/keys.c    **** 	switch ((int)c) {
1595:src/keys.c    **** 
1596:src/keys.c    **** 	case K01:
1597:src/keys.c    **** 	case K02:
1598:src/keys.c    **** 	case K03:
1599:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1600:src/keys.c    **** 
1601:src/keys.c    **** 	case K_CMPLX:
1602:src/keys.c    **** 		cmplx = ! cmplx;
1603:src/keys.c    **** 		goto stay;
1604:src/keys.c    **** 
1605:src/keys.c    **** #ifndef DM42
1606:src/keys.c    **** 	case K_F: 
1607:src/keys.c    **** 	case K_G:
1608:src/keys.c    **** 		f = (c == K_F);
1609:src/keys.c    **** 		// fall through
1610:src/keys.c    **** #else
1611:src/keys.c    **** 	case K_F:
1612:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1613:src/keys.c    **** #endif
1614:src/keys.c    **** 	stay:
1615:src/keys.c    **** 		// process_cmdline_set_lift();
1616:src/keys.c    **** 	  //	  print_debug(100,2);
1617:src/keys.c    **** 	  
1618:src/keys.c    **** 	  State2.hyp = 1;
1619:src/keys.c    **** 		State2.cmplx = cmplx;
1620:src/keys.c    **** 		State2.dot = f;
1621:src/keys.c    **** 		break;
1622:src/keys.c    **** 
1623:src/keys.c    **** 	default:
1624:src/keys.c    **** 		break;
1625:src/keys.c    **** 	}
ARM GAS  /tmp/ccXySG1f.s 			page 30


1626:src/keys.c    **** 	return STATE_UNFINISHED;
1627:src/keys.c    **** }
1628:src/keys.c    **** 
1629:src/keys.c    **** 
1630:src/keys.c    **** /*
1631:src/keys.c    ****  *  Process a key code after ->
1632:src/keys.c    ****  */
1633:src/keys.c    **** static int process_arrow(const keycode c) {
1634:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1635:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1636:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1637:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1638:src/keys.c    **** 	};
1639:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1640:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1641:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1642:src/keys.c    **** 	};
1643:src/keys.c    **** 	const int shift = reset_shift();
1644:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1645:src/keys.c    **** 
1646:src/keys.c    **** 	State2.arrow = 0;
1647:src/keys.c    **** #ifdef DM42
1648:src/keys.c    **** 	set_last_menu ();
1649:src/keys.c    **** 	display_current_menu ();
1650:src/keys.c    **** #endif
1651:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1652:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1653:src/keys.c    **** 	  if (!C_LOCK_ON) {
1654:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1655:src/keys.c    **** 	  }
1656:src/keys.c    **** 	  else {
1657:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1658:src/keys.c    **** 	  }
1659:src/keys.c    **** 	}
1660:src/keys.c    **** #endif
1661:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1662:src/keys.c    **** 	
1663:src/keys.c    **** 	if (c >= K10 && c <= K12)
1664:src/keys.c    **** 		return op_map[c - K10][f];
1665:src/keys.c    **** 
1666:src/keys.c    **** 	if (c == K22 || c == K23)
1667:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1668:src/keys.c    **** 
1669:src/keys.c    **** 	return STATE_UNFINISHED;
1670:src/keys.c    **** }
1671:src/keys.c    **** 
1672:src/keys.c    **** 
1673:src/keys.c    **** /* Process a GTO . sequence
1674:src/keys.c    ****  */
1675:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1675 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1676:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1676 2 view .LVU1
1677:src/keys.c    **** 	const int lib = nLIB(state_pc());
ARM GAS  /tmp/ccXySG1f.s 			page 31


  35              		.loc 1 1677 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1675:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1675 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1676:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1676 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1677 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1676:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1676 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1677 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1676:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1676 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1675:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1675 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1678:src/keys.c    **** 
1679:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1679 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1676:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1676 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1677:src/keys.c    **** 
  63              		.loc 1 1677 2 is_stmt 1 view .LVU12
  64              		.loc 1 1679 2 view .LVU13
  65              		.loc 1 1679 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1679 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1679 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1680:src/keys.c    **** 		return val;
1681:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1681 2 is_stmt 1 view .LVU17
  77              		.loc 1 1681 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1681 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
ARM GAS  /tmp/ccXySG1f.s 			page 32


  81              		.loc 1 1681 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1681 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1681 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1682:src/keys.c    **** 		return val;
1683:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1683 2 is_stmt 1 view .LVU23
  91              		.loc 1 1683 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1684:src/keys.c    **** 	return -1;
  94              		.loc 1 1684 2 is_stmt 1 view .LVU25
1681:src/keys.c    **** 		return val;
  95              		.loc 1 1681 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1684 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1685:src/keys.c    **** }
 102              		.loc 1 1685 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1685 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 735:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 735 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 736:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 736 2 view .LVU31
 735:src/keys.c    **** 	const int code = 100 + n;
ARM GAS  /tmp/ccXySG1f.s 			page 33


 132              		.loc 1 735 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 739:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 739 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 737:src/keys.c    **** 
 143              		.loc 1 737 2 is_stmt 1 view .LVU34
 739:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 739 2 view .LVU35
 739:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 739 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 735:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 735 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 739:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 739 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 737:src/keys.c    **** 
 151              		.loc 1 737 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 737:src/keys.c    **** 
 154              		.loc 1 737 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 737:src/keys.c    **** 
 157              		.loc 1 737 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 740:src/keys.c    **** 			pc = 1;
 160              		.loc 1 740 3 is_stmt 1 view .LVU42
 740:src/keys.c    **** 			pc = 1;
 161              		.loc 1 740 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 741:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 741 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 742 3 is_stmt 1 view .LVU45
 736:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 736 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 742 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
ARM GAS  /tmp/ccXySG1f.s 			page 34


 173              		.loc 1 742 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 742 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 742 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 745:src/keys.c    **** }
 186              		.loc 1 745 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 746:src/keys.c    **** 
 188              		.loc 1 746 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 743:src/keys.c    **** 	}
 192              		.loc 1 743 4 is_stmt 1 view .LVU53
 743:src/keys.c    **** 	}
 193              		.loc 1 743 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 746:src/keys.c    **** 
 195              		.loc 1 746 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 746:src/keys.c    **** 
 199              		.loc 1 746 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1686:src/keys.c    **** 
1687:src/keys.c    **** static int gtodot_fkey(int n) {
1688:src/keys.c    **** 	const int code = 100 + n;
1689:src/keys.c    **** 	unsigned int pc = state_pc();
1690:src/keys.c    **** 
1691:src/keys.c    **** 	if(isXROM(pc))
ARM GAS  /tmp/ccXySG1f.s 			page 35


1692:src/keys.c    **** 		pc = 1;
1693:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1694:src/keys.c    **** 	if (pc > 0)
1695:src/keys.c    **** 		return pc;
1696:src/keys.c    **** 	return state_pc();
1697:src/keys.c    **** }
1698:src/keys.c    **** 
1699:src/keys.c    **** static int process_gtodot(const keycode c) {
1700:src/keys.c    **** 	int pc = -1;
1701:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1702:src/keys.c    **** 
1703:src/keys.c    **** 	if (rawpc <= 9) {
1704:src/keys.c    **** 		// Digit 0 - 9
1705:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1706:src/keys.c    **** 	}
1707:src/keys.c    **** #ifdef DM42
1708:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1709:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1710:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1711:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1712:src/keys.c    **** #endif
1713:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1714:src/keys.c    **** 		// A - D
1715:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1716:src/keys.c    **** 		goto fin;
1717:src/keys.c    **** 	}
1718:src/keys.c    **** 	else if (c == K62) {
1719:src/keys.c    **** 		// .
1720:src/keys.c    **** 		rawpc = ProgSize;
1721:src/keys.c    **** 		goto fin;
1722:src/keys.c    **** 	}
1723:src/keys.c    **** 	else if (c == K20) {
1724:src/keys.c    **** 		// ENTER - short circuit processing
1725:src/keys.c    **** 		pc = State2.digval;
1726:src/keys.c    **** 	}
1727:src/keys.c    **** 	else if (c == K24) {
1728:src/keys.c    **** 		// backspace
1729:src/keys.c    **** 		if (State2.numdigit == 0) {
1730:src/keys.c    **** 			goto fin2;
1731:src/keys.c    **** 		} else {
1732:src/keys.c    **** 			State2.numdigit--;
1733:src/keys.c    **** 			State2.digval /= 10;
1734:src/keys.c    **** 		}
1735:src/keys.c    **** 	}
1736:src/keys.c    **** 	else if (c == K_UP) {
1737:src/keys.c    **** 		// up
1738:src/keys.c    **** 		rawpc = state_pc();
1739:src/keys.c    **** 		if (rawpc == 1)
1740:src/keys.c    **** 			rawpc = 0;
1741:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1742:src/keys.c    **** 		update_program_bounds(1);
1743:src/keys.c    **** 		rawpc = ProgBegin;
1744:src/keys.c    **** 		goto fin;
1745:src/keys.c    **** 	}
1746:src/keys.c    **** 	else if (c == K_DOWN) {
1747:src/keys.c    **** 		// down
1748:src/keys.c    **** 		update_program_bounds(1);
ARM GAS  /tmp/ccXySG1f.s 			page 36


1749:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1750:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1751:src/keys.c    **** 			rawpc = 1;
1752:src/keys.c    **** 		goto fin;
1753:src/keys.c    **** 	}
1754:src/keys.c    **** 	if (pc >= 0) {
1755:src/keys.c    **** 		rawpc = find_user_pc(pc);
1756:src/keys.c    **** fin:		set_pc(rawpc);
1757:src/keys.c    **** fin2:		State2.gtodot = 0;
1758:src/keys.c    **** 		State2.digval = 0;
1759:src/keys.c    **** 		State2.numdigit = 0;
1760:src/keys.c    **** 	}
1761:src/keys.c    **** 	return STATE_UNFINISHED;
1762:src/keys.c    **** }
1763:src/keys.c    **** 
1764:src/keys.c    **** 
1765:src/keys.c    **** /* Process a keystroke in alpha mode
1766:src/keys.c    ****  */
1767:src/keys.c    **** static int process_alpha(const keycode c) {
1768:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1769:src/keys.c    ****         int op = STATE_UNFINISHED;
1770:src/keys.c    **** 	const enum shifts shift = reset_shift();
1771:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1772:src/keys.c    **** 	State2.alpha_pos = 0;
1773:src/keys.c    **** 
1774:src/keys.c    **** 	switch (c) {
1775:src/keys.c    **** 	case K10:	// STO
1776:src/keys.c    **** 		if (shift == SHIFT_F) {
1777:src/keys.c    **** 			init_arg(RARG_ASTO);
1778:src/keys.c    **** 			return STATE_UNFINISHED;
1779:src/keys.c    **** 		}
1780:src/keys.c    **** 		break;
1781:src/keys.c    **** 
1782:src/keys.c    **** 	case K11:	// RCL - maybe view
1783:src/keys.c    **** 		if (shift == SHIFT_F) {
1784:src/keys.c    **** 			init_arg(RARG_ARCL);
1785:src/keys.c    **** 			return STATE_UNFINISHED;
1786:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1787:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1788:src/keys.c    **** 			return STATE_UNFINISHED;
1789:src/keys.c    **** 		}
1790:src/keys.c    **** 		break;
1791:src/keys.c    **** 
1792:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1793:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1794:src/keys.c    **** 			break;
1795:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1796:src/keys.c    **** 			State2.multi = 1;
1797:src/keys.c    **** 			State2.numdigit = 0;
1798:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1799:src/keys.c    **** 			return STATE_UNFINISHED;
1800:src/keys.c    **** 		}
1801:src/keys.c    **** 		State2.alphas = 0;
1802:src/keys.c    **** 		State2.alphashift = 0;
1803:src/keys.c    **** #ifdef DM42
1804:src/keys.c    **** 		set_menu(M_Last);
1805:src/keys.c    **** 		display_current_menu();
ARM GAS  /tmp/ccXySG1f.s 			page 37


1806:src/keys.c    **** #endif
1807:src/keys.c    **** 		return op;
1808:src/keys.c    **** 
1809:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1810:src/keys.c    **** 		if (shift == SHIFT_N)
1811:src/keys.c    **** 			return STATE_BACKSPACE;
1812:src/keys.c    **** 		if (shift == SHIFT_H)
1813:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1814:src/keys.c    **** 		break;
1815:src/keys.c    **** 
1816:src/keys.c    **** 	case K_UP:
1817:src/keys.c    **** 	  if (shift == SHIFT_N) {
1818:src/keys.c    **** 	    if ( State2.runmode ) {
1819:src/keys.c    **** 	      // Alpha scroll left
1820:src/keys.c    **** #ifdef DM42
1821:src/keys.c    **** 	      /* 
1822:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1823:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1824:src/keys.c    **** 	       */
1825:src/keys.c    **** #ifdef BIGGER_DISPLAY
1826:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1827:src/keys.c    **** 		alpha_pos += 1;
1828:src/keys.c    **** 	      }
1829:src/keys.c    **** #else
1830:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1831:src/keys.c    **** 		alpha_pos += 1;
1832:src/keys.c    **** 	      }
1833:src/keys.c    **** #endif
1834:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1835:src/keys.c    **** #else
1836:src/keys.c    **** 	      int n = alpha_pos + 1;
1837:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1838:src/keys.c    **** #endif
1839:src/keys.c    **** 	      return STATE_UNFINISHED;
1840:src/keys.c    **** 	    }
1841:src/keys.c    **** 	    return STATE_BST;
1842:src/keys.c    **** 	  }
1843:src/keys.c    **** 	  break;
1844:src/keys.c    **** 
1845:src/keys.c    **** 	case K_DOWN:
1846:src/keys.c    **** 	  if (shift == SHIFT_N) {
1847:src/keys.c    **** 	    if ( State2.runmode ) {
1848:src/keys.c    **** 	      // Alpha scroll right
1849:src/keys.c    **** 	      if (alpha_pos > 0)
1850:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1851:src/keys.c    **** 	      return STATE_UNFINISHED;
1852:src/keys.c    **** 	    }
1853:src/keys.c    **** 	    return STATE_SST;
1854:src/keys.c    **** 	  }
1855:src/keys.c    **** 	  break;
1856:src/keys.c    **** 
1857:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1858:src/keys.c    **** 		if (shift == SHIFT_F)
1859:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1860:src/keys.c    **** 		else if (shift == SHIFT_H)
1861:src/keys.c    **** 			return OP_NIL | OP_OFF;
1862:src/keys.c    **** 		else if (shift == SHIFT_N) {
ARM GAS  /tmp/ccXySG1f.s 			page 38


1863:src/keys.c    **** #ifdef DM42
1864:src/keys.c    **** 		  set_menu(M_Last);
1865:src/keys.c    **** 		  display_current_menu();
1866:src/keys.c    **** #endif
1867:src/keys.c    **** 		  init_state();
1868:src/keys.c    **** 		}
1869:src/keys.c    **** 		return STATE_UNFINISHED;
1870:src/keys.c    **** 
1871:src/keys.c    **** 	case K63:
1872:src/keys.c    **** 		if (shift == SHIFT_F)
1873:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1874:src/keys.c    **** 		break;
1875:src/keys.c    **** 
1876:src/keys.c    **** 	default:
1877:src/keys.c    **** 		break;
1878:src/keys.c    **** 	}
1879:src/keys.c    **** 
1880:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1881:src/keys.c    **** 	if (ch == 0)
1882:src/keys.c    **** 		return STATE_UNFINISHED;
1883:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1884:src/keys.c    **** }
1885:src/keys.c    **** 
1886:src/keys.c    **** /*
1887:src/keys.c    ****  *  Code to handle all commands with arguments
1888:src/keys.c    ****  */
1889:src/keys.c    **** static void reset_arg(void) {
1890:src/keys.c    **** 	init_arg((enum rarg) 0);
1891:src/keys.c    **** 	State2.rarg = 0;
1892:src/keys.c    **** }
1893:src/keys.c    **** 
1894:src/keys.c    ****  static int arg_eval(unsigned int val) {
1895:src/keys.c    ****    const unsigned int base = CmdBase;
1896:src/keys.c    ****    int r = RARG(base, val 
1897:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1898:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1899:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1900:src/keys.c    **** 
1901:src/keys.c    ****    if (! State2.ind) {
1902:src/keys.c    ****      /*
1903:src/keys.c    ****       *  Central argument checking for some commands
1904:src/keys.c    ****       */
1905:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1906:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1907:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1908:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1909:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1910:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1911:src/keys.c    ****        if ( val == 0 )
1912:src/keys.c    **** 	 return STATE_UNFINISHED;
1913:src/keys.c    ****        r = RARG(base, val);
1914:src/keys.c    ****      }
1915:src/keys.c    **** #endif
1916:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1917:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1918:src/keys.c    ****        if (C_LOCKED) {
1919:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
ARM GAS  /tmp/ccXySG1f.s 			page 39


1920:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1921:src/keys.c    ****        }
1922:src/keys.c    ****        else {
1923:src/keys.c    **** 	 return STATE_UNFINISHED;
1924:src/keys.c    ****        }
1925:src/keys.c    ****      }
1926:src/keys.c    **** #else
1927:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1928:src/keys.c    ****        // Disallow odd complex register > 98
1929:src/keys.c    ****        return STATE_UNFINISHED;
1930:src/keys.c    **** #endif
1931:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1932:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1933:src/keys.c    ****        return STATE_UNFINISHED;
1934:src/keys.c    ****    }
1935:src/keys.c    ****    // Build op-code
1936:src/keys.c    ****    reset_arg();
1937:src/keys.c    ****    return r;
1938:src/keys.c    ****  }
1939:src/keys.c    **** 
1940:src/keys.c    **** static int arg_digit(int n) {
1941:src/keys.c    **** 	int lim;
1942:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1943:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1944:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1945:src/keys.c    **** #else
1946:src/keys.c    **** 	const unsigned int base = CmdBase;
1947:src/keys.c    **** #endif
1948:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1949:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1950:src/keys.c    **** 	
1951:src/keys.c    **** 	if (State2.local) {
1952:src/keys.c    **** 		// Handle local registers and flags
1953:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1954:src/keys.c    **** 		if (State2.runmode) {
1955:src/keys.c    **** 			if (LocalRegs == 0)
1956:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1957:src/keys.c    **** 			if (is_reg) {
1958:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1959:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1960:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1961:src/keys.c    **** 			}
1962:src/keys.c    **** 		}
1963:src/keys.c    **** 	}
1964:src/keys.c    **** 	else if (is_reg)						// normal register
1965:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1966:src/keys.c    **** 	else {
1967:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1968:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1969:src/keys.c    **** 			lim = RARG_IND - 1;
1970:src/keys.c    **** 	}
1971:src/keys.c    **** 	if ((int) val > lim)
1972:src/keys.c    **** 		return STATE_UNFINISHED;
1973:src/keys.c    **** 
1974:src/keys.c    **** 	State2.digval = val;
1975:src/keys.c    **** 	++State2.numdigit;
1976:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
ARM GAS  /tmp/ccXySG1f.s 			page 40


1977:src/keys.c    **** 		int result = arg_eval(val);
1978:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1979:src/keys.c    **** 			--State2.numdigit;
1980:src/keys.c    **** 			State2.digval /= 10;
1981:src/keys.c    **** 		}
1982:src/keys.c    **** 		return result;
1983:src/keys.c    **** 	}
1984:src/keys.c    **** 	return STATE_UNFINISHED;
1985:src/keys.c    **** }
1986:src/keys.c    **** 
1987:src/keys.c    **** static int arg_fkey(int n) {
1988:src/keys.c    **** 	const unsigned int b = CmdBase;
1989:src/keys.c    **** 
1990:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1991:src/keys.c    **** 	{
1992:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1993:src/keys.c    **** 			return STATE_UNFINISHED;
1994:src/keys.c    **** 		if (argcmds[b].lim < 100)
1995:src/keys.c    **** 			return STATE_UNFINISHED;
1996:src/keys.c    **** 		return arg_eval(n + 100);
1997:src/keys.c    **** 	}
1998:src/keys.c    **** 	return STATE_UNFINISHED;
1999:src/keys.c    **** }
2000:src/keys.c    **** 
2001:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2002:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2003:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2004:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2005:src/keys.c    **** #else
2006:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2007:src/keys.c    **** #endif
2008:src/keys.c    **** }
2009:src/keys.c    **** 
2010:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2011:src/keys.c    **** 	unsigned int b = CmdBase;
2012:src/keys.c    **** 
2013:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2014:src/keys.c    **** 		CmdBase += n;
2015:src/keys.c    **** 		return 1;
2016:src/keys.c    **** 	}
2017:src/keys.c    **** 	/* And we can turn off the operation too */
2018:src/keys.c    **** 	if (b >= n) {
2019:src/keys.c    **** 		b -= n;
2020:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2021:src/keys.c    **** 			CmdBase = b;
2022:src/keys.c    **** 			return 1;
2023:src/keys.c    **** 		}
2024:src/keys.c    **** 	}
2025:src/keys.c    **** 	return 0;
2026:src/keys.c    **** }
2027:src/keys.c    **** 
2028:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2029:src/keys.c    **** 
2030:src/keys.c    **** 	if (State2.numdigit == 0) {
2031:src/keys.c    **** 		// Only valid at beginning of entry
2032:src/keys.c    **** 		if (State2.dot || State2.local) {
2033:src/keys.c    **** 			// '..' or ENTER '.' = X
ARM GAS  /tmp/ccXySG1f.s 			page 41


2034:src/keys.c    **** 			State2.local = 0;
2035:src/keys.c    **** 			return arg_eval(regX_idx);
2036:src/keys.c    **** 		}
2037:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2038:src/keys.c    **** 			// local register or flag select
2039:src/keys.c    **** 			State2.local = 1;
2040:src/keys.c    **** 		}
2041:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2042:src/keys.c    **** 			// Special GTO . sequence
2043:src/keys.c    **** 			if (! State2.ind) {
2044:src/keys.c    **** 				State2.gtodot = 1;
2045:src/keys.c    **** 				reset_arg();
2046:src/keys.c    **** 			}
2047:src/keys.c    **** 		}
2048:src/keys.c    **** 	}
2049:src/keys.c    **** 	return STATE_UNFINISHED;
2050:src/keys.c    **** }
2051:src/keys.c    **** 
2052:src/keys.c    **** static int process_arg_shuffle(int r) {
2053:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2054:src/keys.c    **** 	if (State2.numdigit < 4)
2055:src/keys.c    **** 		return STATE_UNFINISHED;
2056:src/keys.c    **** 	return arg_eval(State2.digval);
2057:src/keys.c    **** }
2058:src/keys.c    **** 
2059:src/keys.c    **** 
2060:src/keys.c    **** static int process_arg(const keycode c) {
2061:src/keys.c    **** 	unsigned int base = CmdBase;
2062:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2063:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2064:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2065:src/keys.c    **** 	const enum shifts shift = reset_shift();
2066:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2067:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2068:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2069:src/keys.c    **** 
2070:src/keys.c    **** 	n &= ~NO_SHORT;
2071:src/keys.c    **** 	if (base >= NUM_RARG) {
2072:src/keys.c    **** 		reset_arg();
2073:src/keys.c    **** 		return STATE_UNFINISHED;
2074:src/keys.c    **** 	}
2075:src/keys.c    **** #ifdef DM42
2076:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2077:src/keys.c    **** 	  switch (n) {
2078:src/keys.c    **** 	  case regX_idx:
2079:src/keys.c    **** 	    return arg_digit(1);
2080:src/keys.c    **** 	  case regY_idx:
2081:src/keys.c    **** 	    return arg_digit(2);
2082:src/keys.c    **** 	  case regZ_idx:
2083:src/keys.c    **** 	    return arg_digit(3);
2084:src/keys.c    **** 	  case regT_idx:
2085:src/keys.c    **** 	    return arg_digit(4);
2086:src/keys.c    **** 	  case 5:
2087:src/keys.c    **** 	  case 6:
2088:src/keys.c    **** 	  case 7:
2089:src/keys.c    **** 	  case 8:
2090:src/keys.c    **** 	  case 9:
ARM GAS  /tmp/ccXySG1f.s 			page 42


2091:src/keys.c    **** 	  case 0:
2092:src/keys.c    **** 	    return arg_digit(n);
2093:src/keys.c    **** 	  }
2094:src/keys.c    **** 	}
2095:src/keys.c    **** #else
2096:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2097:src/keys.c    **** 		return arg_digit(n);
2098:src/keys.c    **** #endif	
2099:src/keys.c    **** 	if (shorthand)
2100:src/keys.c    **** 		// row column shorthand addressing
2101:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2102:src/keys.c    **** 
2103:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2104:src/keys.c    **** #ifdef DM42
2105:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2106:src/keys.c    **** 		switch ((int)c) {
2107:src/keys.c    **** 		case K_UP:	// up arrow
2108:src/keys.c    **** 		  if (base == RARG_FIX) {
2109:src/keys.c    **** 		    base = RARG_SIG;
2110:src/keys.c    **** 		    break;
2111:src/keys.c    **** 		  }
2112:src/keys.c    **** 		  if (base == RARG_SIG) {
2113:src/keys.c    **** 		    base = RARG_SIG0;
2114:src/keys.c    **** 		    break;
2115:src/keys.c    **** 		  }
2116:src/keys.c    **** 		  if (base == RARG_SIG0) {
2117:src/keys.c    **** 		    base = RARG_FIX;
2118:src/keys.c    **** 		    break;
2119:src/keys.c    **** 		  }
2120:src/keys.c    **** 		case K_DOWN:	// down arrow
2121:src/keys.c    **** 		case K01:	// B
2122:src/keys.c    **** 		  if (base == RARG_FIX) {
2123:src/keys.c    **** 		    base = RARG_SIG0;
2124:src/keys.c    **** 		    break;
2125:src/keys.c    **** 		  }
2126:src/keys.c    **** 		  if (base == RARG_SIG) {
2127:src/keys.c    **** 		    base = RARG_FIX;
2128:src/keys.c    **** 		    break;
2129:src/keys.c    **** 		  }
2130:src/keys.c    **** 		  if (base == RARG_SIG0) {
2131:src/keys.c    **** 		    base = RARG_SIG;
2132:src/keys.c    **** 		    break;
2133:src/keys.c    **** 		  }
2134:src/keys.c    **** 		}
2135:src/keys.c    **** 	}
2136:src/keys.c    **** 		CmdBase = base;
2137:src/keys.c    **** #else
2138:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2139:src/keys.c    **** 		switch ((int)c) {
2140:src/keys.c    **** 		case K_UP:	// up arrow
2141:src/keys.c    **** 			if (--base < RARG_FIX)
2142:src/keys.c    **** 				base = RARG_SIG0;
2143:src/keys.c    **** 			break;
2144:src/keys.c    **** 
2145:src/keys.c    **** 		case K_DOWN:	// down arrow
2146:src/keys.c    **** 		case K01:	// B
2147:src/keys.c    **** 			if (++base > RARG_SIG0)
ARM GAS  /tmp/ccXySG1f.s 			page 43


2148:src/keys.c    **** 				base = RARG_FIX;
2149:src/keys.c    **** 			break;
2150:src/keys.c    **** 		}
2151:src/keys.c    **** 		CmdBase = base;
2152:src/keys.c    **** 	}
2153:src/keys.c    **** #endif
2154:src/keys.c    **** #endif
2155:src/keys.c    **** 	/*
2156:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2157:src/keys.c    **** 	 *  Handle the rest here.
2158:src/keys.c    **** 	 */
2159:src/keys.c    **** 	switch ((int)c) {
2160:src/keys.c    **** 	case K_F:
2161:src/keys.c    **** 		if (label_addressing)
2162:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2163:src/keys.c    **** 		break;
2164:src/keys.c    **** 
2165:src/keys.c    **** 	case K_ARROW:		// arrow
2166:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2167:src/keys.c    **** 			State2.ind = ! State2.ind;
2168:src/keys.c    **** 			if (! stack_reg)
2169:src/keys.c    **** 				State2.dot = 0;
2170:src/keys.c    **** 		}
2171:src/keys.c    **** 		break;
2172:src/keys.c    **** 
2173:src/keys.c    **** 	case K_CMPLX:
2174:src/keys.c    **** 		if (State2.ind || State2.dot)
2175:src/keys.c    **** 			break;
2176:src/keys.c    **** 		if (base == RARG_STO)
2177:src/keys.c    **** 			CmdBase = RARG_STOM;
2178:src/keys.c    **** 		else if (base == RARG_RCL)
2179:src/keys.c    **** 			CmdBase = RARG_RCLM;
2180:src/keys.c    **** 		break;
2181:src/keys.c    **** #ifdef DM42
2182:src/keys.c    **** 	case K41:       // T
2183:src/keys.c    **** 	  if (State2.shuffle)
2184:src/keys.c    **** 	    return process_arg_shuffle(3);
2185:src/keys.c    **** 	case K51:       // X
2186:src/keys.c    **** 	  if (State2.shuffle)
2187:src/keys.c    **** 	    return process_arg_shuffle(0);
2188:src/keys.c    **** 	case K52:	// Y
2189:src/keys.c    **** 	  if (State2.shuffle)
2190:src/keys.c    **** 	    return process_arg_shuffle(1);
2191:src/keys.c    **** 	case K53:       // Z
2192:src/keys.c    **** 	  if (State2.shuffle)
2193:src/keys.c    **** 	    return process_arg_shuffle(2);
2194:src/keys.c    **** #else
2195:src/keys.c    **** 	case K63:	// Y
2196:src/keys.c    **** 	  if (State2.shuffle)
2197:src/keys.c    **** 	    return process_arg_shuffle(1);
2198:src/keys.c    **** #endif
2199:src/keys.c    **** 	case K00:	// A
2200:src/keys.c    **** 	case K01:	// B
2201:src/keys.c    **** 	case K02:	// C
2202:src/keys.c    **** 	case K03:	// D
2203:src/keys.c    **** #ifdef DM42
2204:src/keys.c    **** 	case K12:	// I (lastY)
ARM GAS  /tmp/ccXySG1f.s 			page 44


2205:src/keys.c    **** 	case K13:	// J
2206:src/keys.c    **** 	case K14:	// K
2207:src/keys.c    **** 	case K15:	// L (lastX)
2208:src/keys.c    **** #else
2209:src/keys.c    **** 	case K12:	// I (lastY)
2210:src/keys.c    **** 	case K21:	// J
2211:src/keys.c    **** 	case K22:	// K
2212:src/keys.c    **** 	case K23:	// L (lastX)
2213:src/keys.c    **** #endif
2214:src/keys.c    **** 	  if (State2.dot || stack_reg)
2215:src/keys.c    **** 			return arg_eval(n);
2216:src/keys.c    **** 		if ( c <= K03 )
2217:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2218:src/keys.c    **** 		break;
2219:src/keys.c    **** #ifdef DM42
2220:src/keys.c    **** 	case K62:	// '.'
2221:src/keys.c    **** 		return process_arg_dot(base);
2222:src/keys.c    **** 
2223:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2224:src/keys.c    **** 	case K64:		// plus
2225:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2226:src/keys.c    **** 			return arg_eval(n);
2227:src/keys.c    **** 		break;
2228:src/keys.c    **** 	case K54:               // minus
2229:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2230:src/keys.c    **** 			reset_arg();
2231:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2232:src/keys.c    **** 		}
2233:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2234:src/keys.c    **** 		break;
2235:src/keys.c    **** 	case K44:		// multiply
2236:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2237:src/keys.c    **** 			return arg_eval(n);
2238:src/keys.c    **** 		break;
2239:src/keys.c    **** 	case K34:
2240:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2241:src/keys.c    **** 		break;
2242:src/keys.c    **** #else
2243:src/keys.c    **** 	case K62:	// X, '.'
2244:src/keys.c    **** 		if (State2.shuffle)
2245:src/keys.c    **** 			return process_arg_shuffle(0);
2246:src/keys.c    **** 		return process_arg_dot(base);
2247:src/keys.c    **** 
2248:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2249:src/keys.c    **** 	case K64:		// Z register
2250:src/keys.c    **** 		if (State2.shuffle)
2251:src/keys.c    **** 			return process_arg_shuffle(2);
2252:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2253:src/keys.c    **** 			return arg_eval(n);
2254:src/keys.c    **** 		break;
2255:src/keys.c    **** 
2256:src/keys.c    **** 	case K54:
2257:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2258:src/keys.c    **** 			reset_arg();
2259:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2260:src/keys.c    **** 		}
2261:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
ARM GAS  /tmp/ccXySG1f.s 			page 45


2262:src/keys.c    **** 		break;
2263:src/keys.c    **** 
2264:src/keys.c    **** 	case K44:		// T register
2265:src/keys.c    **** 		if (State2.shuffle)
2266:src/keys.c    **** 			return process_arg_shuffle(3);
2267:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2268:src/keys.c    **** 			return arg_eval(n);
2269:src/keys.c    **** 		break;
2270:src/keys.c    **** 
2271:src/keys.c    **** 	case K34:
2272:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2273:src/keys.c    **** 		break;
2274:src/keys.c    **** #endif
2275:src/keys.c    **** 	case K_UP:
2276:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2277:src/keys.c    **** 		break;
2278:src/keys.c    **** 
2279:src/keys.c    **** 	case K_DOWN:
2280:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2281:src/keys.c    **** 		break;
2282:src/keys.c    **** 
2283:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2284:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2285:src/keys.c    **** 			if (argcmds[base].label) {
2286:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2287:src/keys.c    **** 				State2.multi = 1;
2288:src/keys.c    **** 				State2.alphashift = 0;
2289:src/keys.c    **** 				State2.rarg = 0;
2290:src/keys.c    **** 			} else if (base == RARG_SCI) {
2291:src/keys.c    **** 				reset_arg();
2292:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2293:src/keys.c    **** 			} else if (base == RARG_ENG) {
2294:src/keys.c    **** 				reset_arg();
2295:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2296:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2297:src/keys.c    **** 				State2.dot = 1;
2298:src/keys.c    **** 		} else if (State2.numdigit > 0)
2299:src/keys.c    **** 			return arg_eval(State2.digval);
2300:src/keys.c    **** 		else if (stack_reg)
2301:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2302:src/keys.c    **** 		break;
2303:src/keys.c    **** 
2304:src/keys.c    **** 	case K24:	// <-
2305:src/keys.c    **** 		if (State2.numdigit == 0) {
2306:src/keys.c    **** 			if (State2.dot)
2307:src/keys.c    **** 				State2.dot = 0;
2308:src/keys.c    **** 			else if (State2.local)
2309:src/keys.c    **** 				State2.local = 0;
2310:src/keys.c    **** 			else if (State2.ind)
2311:src/keys.c    **** 				State2.ind = 0;
2312:src/keys.c    **** 			else
2313:src/keys.c    **** 				goto reset;
2314:src/keys.c    **** 		}
2315:src/keys.c    **** 		else {
2316:src/keys.c    **** 			--State2.numdigit;
2317:src/keys.c    **** 			if (State2.shuffle)
2318:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
ARM GAS  /tmp/ccXySG1f.s 			page 46


2319:src/keys.c    **** 			else
2320:src/keys.c    **** 				State2.digval /= 10;
2321:src/keys.c    **** 		}
2322:src/keys.c    **** 		break;
2323:src/keys.c    **** 
2324:src/keys.c    **** 	case K60:
2325:src/keys.c    **** 	reset:
2326:src/keys.c    **** 		reset_arg();
2327:src/keys.c    **** 	default:
2328:src/keys.c    **** 		break;
2329:src/keys.c    **** 	}
2330:src/keys.c    **** 	return STATE_UNFINISHED;
2331:src/keys.c    **** }
2332:src/keys.c    **** 
2333:src/keys.c    **** 
2334:src/keys.c    **** /*
2335:src/keys.c    ****  *  Process arguments to the diverse test commands
2336:src/keys.c    ****  */
2337:src/keys.c    **** static int process_test(const keycode c) {
2338:src/keys.c    **** 	int r = State2.test;
2339:src/keys.c    **** 	int cmpx = State2.cmplx;
2340:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2341:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2342:src/keys.c    **** 
2343:src/keys.c    **** 	State2.test = TST_NONE;
2344:src/keys.c    **** 	State2.cmplx = 0;
2345:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2346:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2347:src/keys.c    **** 		// Lettered register
2348:src/keys.c    **** 		if (cmpx && (n & 1)) {
2349:src/keys.c    **** 			if (n == regI_idx)
2350:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2351:src/keys.c    **** 			// Disallow odd complex registers > A
2352:src/keys.c    **** 			goto again;
2353:src/keys.c    **** 		}
2354:src/keys.c    **** 		// Return the command with the register completed
2355:src/keys.c    **** 		return RARG(base, n);
2356:src/keys.c    **** 	}
2357:src/keys.c    **** 	else if ( n == 0 ) {
2358:src/keys.c    **** 		// Special 0
2359:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2360:src/keys.c    **** 	}
2361:src/keys.c    **** 	else if ( n == 1 ) {
2362:src/keys.c    **** 		// Special 1
2363:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2364:src/keys.c    **** 	}
2365:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
2366:src/keys.c    **** 		// digit 2..9, -> or .
2367:src/keys.c    **** 		init_arg((enum rarg)base);
2368:src/keys.c    **** 		return process_arg(c);
2369:src/keys.c    **** 	}
2370:src/keys.c    **** 
2371:src/keys.c    **** 	switch (c) {
2372:src/keys.c    **** 	case K11:					// tests vs register
2373:src/keys.c    **** 	case K20:
2374:src/keys.c    **** 		init_arg((enum rarg)base);
2375:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccXySG1f.s 			page 47


2376:src/keys.c    **** 
2377:src/keys.c    **** 	//case K60:
2378:src/keys.c    **** 	case K24:
2379:src/keys.c    **** 		return STATE_UNFINISHED;
2380:src/keys.c    **** 
2381:src/keys.c    **** 	default:
2382:src/keys.c    **** 		break;
2383:src/keys.c    **** 	}
2384:src/keys.c    **** again:
2385:src/keys.c    **** 	State2.test = r;
2386:src/keys.c    **** 	State2.cmplx = cmpx;
2387:src/keys.c    **** 	return STATE_UNFINISHED;
2388:src/keys.c    **** }
2389:src/keys.c    **** 
2390:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2391:src/keys.c    **** /*
2392:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2393:src/keys.c    ****  */
2394:src/keys.c    **** #define USER_CAT_MAX 100
2395:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2396:src/keys.c    **** 
2397:src/keys.c    **** static int build_user_cat(void)
2398:src/keys.c    **** {
2399:src/keys.c    **** 	// find the label 'CAT'
2400:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2401:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2402:src/keys.c    **** 	int len = 0;
2403:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2404:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2405:src/keys.c    **** 		char buf1[16];
2406:src/keys.c    **** 		int i;
2407:src/keys.c    **** 		s_opcode op;
2408:src/keys.c    **** 	next:
2409:src/keys.c    **** 		pc = do_inc(pc, 0);
2410:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2411:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2412:src/keys.c    **** 			break;
2413:src/keys.c    **** 		if (isDBL(op))
2414:src/keys.c    **** 			continue;
2415:src/keys.c    **** 		if (isRARG(op)) {
2416:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2417:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2418:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2419:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2420:src/keys.c    **** 		}
2421:src/keys.c    **** 		catcmd(op, buf1);
2422:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2423:src/keys.c    **** 			// Find a position in the table to insert the new entry
2424:src/keys.c    **** 			char buf2[16];
2425:src/keys.c    **** 			const char *p, *q;
2426:src/keys.c    **** 			int diff = 0;
2427:src/keys.c    **** 			if (op == UserCat[i]) {
2428:src/keys.c    **** 				// duplicate entry - ignore
2429:src/keys.c    **** 				goto next;
2430:src/keys.c    **** 			}
2431:src/keys.c    **** 			p = buf1;
2432:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
ARM GAS  /tmp/ccXySG1f.s 			page 48


2433:src/keys.c    **** 				++p;
2434:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2435:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2436:src/keys.c    **** 				++q;
2437:src/keys.c    **** 			diff = 0;
2438:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2439:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2440:src/keys.c    **** 			}
2441:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2442:src/keys.c    **** 				// identical according to sort order, insert after
2443:src/keys.c    **** 				++i;
2444:src/keys.c    **** 				break;
2445:src/keys.c    **** 			}
2446:src/keys.c    **** 			if (diff > 0) {
2447:src/keys.c    **** 				// insert new entry before the one found because this is greater
2448:src/keys.c    **** 				break;
2449:src/keys.c    **** 			}
2450:src/keys.c    **** 		}
2451:src/keys.c    **** 		if (i < len) {
2452:src/keys.c    **** 			// Make room
2453:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2454:src/keys.c    **** 		}
2455:src/keys.c    **** 		UserCat[i] = op;
2456:src/keys.c    **** 		++len;
2457:src/keys.c    **** 	}
2458:src/keys.c    **** 	// return the number of entries
2459:src/keys.c    **** 	return len;
2460:src/keys.c    **** }
2461:src/keys.c    **** #endif
2462:src/keys.c    **** 
2463:src/keys.c    **** /* Return the number of entries in the current catalogue.
2464:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2465:src/keys.c    ****  * likely be the most space efficient method.
2466:src/keys.c    ****  */
2467:src/keys.c    **** int current_catalogue_max(void) {
2468:src/keys.c    **** 	// A quick table of catalogue sizes
2469:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2470:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2471:src/keys.c    **** 	{
2472:src/keys.c    **** 		0, // NONE
2473:src/keys.c    **** 		SIZE_catalogue,
2474:src/keys.c    **** 		SIZE_cplx_catalogue,
2475:src/keys.c    **** 		SIZE_stats_catalogue,
2476:src/keys.c    **** 		SIZE_prob_catalogue,
2477:src/keys.c    **** 		SIZE_int_catalogue,
2478:src/keys.c    **** 		SIZE_prog_catalogue,
2479:src/keys.c    **** 		SIZE_program_xfcn,
2480:src/keys.c    **** 		SIZE_test_catalogue,
2481:src/keys.c    **** 		SIZE_mode_catalogue,
2482:src/keys.c    **** 		SIZE_alpha_catalogue,
2483:src/keys.c    **** 		SIZE_alpha_symbols,
2484:src/keys.c    **** 		SIZE_alpha_compares,
2485:src/keys.c    **** 		SIZE_alpha_arrows,
2486:src/keys.c    **** 		SIZE_alpha_letters,
2487:src/keys.c    **** 		SIZE_alpha_subscripts,
2488:src/keys.c    **** 		NUM_CONSTS_CAT,
2489:src/keys.c    **** 		NUM_CONSTS_CAT,
ARM GAS  /tmp/ccXySG1f.s 			page 49


2490:src/keys.c    **** 		SIZE_conv_catalogue,
2491:src/keys.c    **** 		SIZE_sums_catalogue,
2492:src/keys.c    **** 		SIZE_matrix_catalogue,
2493:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2494:src/keys.c    **** 		SIZE_internal_catalogue,
2495:src/keys.c    **** #endif
2496:src/keys.c    **** 	};
2497:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2498:src/keys.c    **** 	const int cat = State2.catalogue;
2499:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2500:src/keys.c    **** #else
2501:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2502:src/keys.c    **** #endif
2503:src/keys.c    **** }
2504:src/keys.c    **** 
2505:src/keys.c    **** 
2506:src/keys.c    **** /* Look up the character position in the given byte array and
2507:src/keys.c    ****  * build the alpha op-code for it.
2508:src/keys.c    ****  */
2509:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2510:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2511:src/keys.c    **** }
2512:src/keys.c    **** 
2513:src/keys.c    **** 
2514:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2515:src/keys.c    ****  */
2516:src/keys.c    **** opcode current_catalogue(int n) {
2517:src/keys.c    **** 	// A quick table of catalogue tables
2518:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2519:src/keys.c    **** 	static const void *catalogues[] =
2520:src/keys.c    **** 	{
2521:src/keys.c    **** 		NULL, // NONE
2522:src/keys.c    **** 		catalogue,
2523:src/keys.c    **** 		cplx_catalogue,
2524:src/keys.c    **** 		stats_catalogue,
2525:src/keys.c    **** 		prob_catalogue,
2526:src/keys.c    **** 		int_catalogue,
2527:src/keys.c    **** 		prog_catalogue,
2528:src/keys.c    **** 		program_xfcn,
2529:src/keys.c    **** 		test_catalogue,
2530:src/keys.c    **** 		mode_catalogue,
2531:src/keys.c    **** 		alpha_catalogue,
2532:src/keys.c    **** 		alpha_symbols,
2533:src/keys.c    **** 		alpha_compares,
2534:src/keys.c    **** 		alpha_arrows,
2535:src/keys.c    **** 		alpha_letters,
2536:src/keys.c    **** 		alpha_subscripts,
2537:src/keys.c    **** 		NULL,
2538:src/keys.c    **** 		NULL,
2539:src/keys.c    **** 		NULL, //CONV
2540:src/keys.c    **** 		sums_catalogue,
2541:src/keys.c    **** 		matrix_catalogue,
2542:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2543:src/keys.c    **** 		internal_catalogue,
2544:src/keys.c    **** #endif
2545:src/keys.c    **** 	};
2546:src/keys.c    **** 	const unsigned char *cat;
ARM GAS  /tmp/ccXySG1f.s 			page 50


2547:src/keys.c    **** 	unsigned int c = State2.catalogue;
2548:src/keys.c    **** 	int m, i;
2549:src/keys.c    **** 	unsigned p, q;
2550:src/keys.c    **** 
2551:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2552:src/keys.c    **** 		if (n == OP_ZERO)
2553:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2554:src/keys.c    **** 		return CONST(n);
2555:src/keys.c    **** 	}
2556:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2557:src/keys.c    **** 		if (n == OP_ZERO)
2558:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2559:src/keys.c    **** 		return CONST_CMPLX(n);
2560:src/keys.c    **** 	}
2561:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2562:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2563:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2564:src/keys.c    **** 			// Monadic conversion routine
2565:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2566:src/keys.c    **** 		else
2567:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2568:src/keys.c    **** 	}
2569:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2570:src/keys.c    **** 	if (c == CATALOGUE_USER)
2571:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2572:src/keys.c    **** #endif
2573:src/keys.c    **** 
2574:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2575:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2576:src/keys.c    **** 	else
2577:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2578:src/keys.c    **** 
2579:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2580:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2581:src/keys.c    **** 	}
2582:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2583:src/keys.c    **** 		return OP_NIL | OP_NOP;
2584:src/keys.c    **** 
2585:src/keys.c    **** 	/* Unpack the opcode */
2586:src/keys.c    **** 	cat += n + (n >> 2);
2587:src/keys.c    **** 	p = cat[0];
2588:src/keys.c    **** 	q = cat[1];
2589:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2590:src/keys.c    **** 
2591:src/keys.c    **** 	/* Now figure out which opcode it really is */
2592:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2593:src/keys.c    **** 		if (m < opcode_breaks[i])
2594:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2595:src/keys.c    **** 		m -= opcode_breaks[i];
2596:src/keys.c    **** 	}
2597:src/keys.c    **** 	return RARG_BASEOP(m);
2598:src/keys.c    **** }
2599:src/keys.c    **** 
2600:src/keys.c    **** 
2601:src/keys.c    **** /*
2602:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2603:src/keys.c    ****  *  in multi character commands.
ARM GAS  /tmp/ccXySG1f.s 			page 51


2604:src/keys.c    ****  */
2605:src/keys.c    **** static int forbidden_alpha(int pos) {
2606:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2607:src/keys.c    **** }
2608:src/keys.c    **** 
2609:src/keys.c    **** /*
2610:src/keys.c    ****  *  Catalogue navigation
2611:src/keys.c    ****  */
2612:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2613:src/keys.c    ****    int pos = State.catpos;
2614:src/keys.c    ****    int ch;
2615:src/keys.c    ****    const int ctmax = current_catalogue_max();
2616:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2617:src/keys.c    **** 
2618:src/keys.c    ****    if (shift == SHIFT_N) {
2619:src/keys.c    ****      switch (c) {
2620:src/keys.c    **** #ifdef DM42
2621:src/keys.c    ****      case K05:			// XEQ accepts command
2622:src/keys.c    **** #else	  
2623:src/keys.c    ****      case K30:			// XEQ accepts command
2624:src/keys.c    **** #endif						  
2625:src/keys.c    ****      case K20:			// Enter accepts command
2626:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2627:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2628:src/keys.c    **** 
2629:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2630:src/keys.c    **** 
2631:src/keys.c    **** 	 if (isRARG(op)) {
2632:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2633:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2634:src/keys.c    **** 	     return op;
2635:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2636:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2637:src/keys.c    **** 	   else
2638:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2639:src/keys.c    **** 	 }
2640:src/keys.c    **** 	 else {
2641:src/keys.c    **** 	   return check_confirm(op);
2642:src/keys.c    **** 	 }
2643:src/keys.c    ****        } else
2644:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2645:src/keys.c    ****        return STATE_UNFINISHED;
2646:src/keys.c    **** 
2647:src/keys.c    ****      case K24:			// backspace
2648:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2649:src/keys.c    **** 	 if (--CmdLineLength > 0)
2650:src/keys.c    **** 	   goto search;
2651:src/keys.c    **** 	 pos = 0;
2652:src/keys.c    **** 	 goto set_pos;
2653:src/keys.c    ****        } else
2654:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2655:src/keys.c    ****        return STATE_UNFINISHED;
2656:src/keys.c    **** 
2657:src/keys.c    ****      case K60:
2658:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2659:src/keys.c    ****        return STATE_UNFINISHED;
2660:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 52


2661:src/keys.c    ****      case K_UP:
2662:src/keys.c    ****        CmdLineLength = 0;
2663:src/keys.c    ****        if (pos == 0)
2664:src/keys.c    **** 	 goto set_max;
2665:src/keys.c    ****        else
2666:src/keys.c    **** 	 --pos;
2667:src/keys.c    ****        goto set_pos;
2668:src/keys.c    **** 
2669:src/keys.c    ****      case K_DOWN:
2670:src/keys.c    ****        CmdLineLength = 0;
2671:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2672:src/keys.c    ****        if (pos >= ctmax)
2673:src/keys.c    **** 	 pos = 0;
2674:src/keys.c    ****        goto set_pos;
2675:src/keys.c    **** 
2676:src/keys.c    ****      default:
2677:src/keys.c    ****        break;
2678:src/keys.c    ****      }
2679:src/keys.c    ****    } else if (shift == SHIFT_F) {
2680:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2681:src/keys.c    ****        /*
2682:src/keys.c    **** 	* f 1/x in conversion catalogue
2683:src/keys.c    **** 	*/
2684:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2685:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2686:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2687:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2688:src/keys.c    **** 	*/
2689:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2690:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2691:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2692:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2693:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2694:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2695:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2696:src/keys.c    ****        };
2697:src/keys.c    ****        const opcode op = current_catalogue(pos);
2698:src/keys.c    ****        int i;
2699:src/keys.c    **** 
2700:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2701:src/keys.c    ****        if (isRARG(op))
2702:src/keys.c    **** 	 return op ^ 1;
2703:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2704:src/keys.c    **** 	 if (op == conv_mapping[i])
2705:src/keys.c    **** 	   return conv_mapping[i^1];
2706:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2707:src/keys.c    ****      }
2708:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2709:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2710:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2711:src/keys.c    ****        return STATE_UNFINISHED;
2712:src/keys.c    ****      }
2713:src/keys.c    ****    } else if (shift == SHIFT_G) {
2714:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2715:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2716:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2717:src/keys.c    ****      }
ARM GAS  /tmp/ccXySG1f.s 			page 53


2718:src/keys.c    ****    }
2719:src/keys.c    **** 
2720:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2721:src/keys.c    ****     * jump to the appropriate catalogue entry.
2722:src/keys.c    ****     */
2723:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2724:src/keys.c    ****    reset_shift();
2725:src/keys.c    ****    if (ch == '\0')
2726:src/keys.c    ****      return STATE_UNFINISHED;
2727:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2728:src/keys.c    ****      // No multi character search in alpha catalogues
2729:src/keys.c    ****      CmdLineLength = 0;
2730:src/keys.c    ****    }
2731:src/keys.c    ****    if (CmdLineLength < 10)
2732:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2733:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2734:src/keys.c    **** 
2735:src/keys.c    ****  search:
2736:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2737:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2738:src/keys.c    ****      char buf[16];
2739:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2740:src/keys.c    ****      int i;
2741:src/keys.c    **** 
2742:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2743:src/keys.c    ****        cmd++;
2744:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2745:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2746:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2747:src/keys.c    ****        if (c > cl)
2748:src/keys.c    **** 	 goto set_pos;
2749:src/keys.c    ****        else if (c < cl)
2750:src/keys.c    **** 	 break;
2751:src/keys.c    ****      }
2752:src/keys.c    ****      if (Cmdline[i] == '\0')
2753:src/keys.c    ****        goto set_pos;
2754:src/keys.c    ****    }
2755:src/keys.c    ****  set_max:
2756:src/keys.c    ****    pos = ctmax - 1;
2757:src/keys.c    ****  set_pos:
2758:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2759:src/keys.c    ****      --pos;
2760:src/keys.c    ****    State.catpos = pos;
2761:src/keys.c    ****    return STATE_UNFINISHED;
2762:src/keys.c    ****  }
2763:src/keys.c    **** 
2764:src/keys.c    **** #ifndef REALBUILD
2765:src/keys.c    **** int find_pos(const char* text) {
2766:src/keys.c    **** 	int pos;
2767:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2768:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2769:src/keys.c    **** 		char buf[16];
2770:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2771:src/keys.c    **** 		int i;
2772:src/keys.c    **** 
2773:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2774:src/keys.c    **** 			cmd++;
ARM GAS  /tmp/ccXySG1f.s 			page 54


2775:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2776:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2777:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2778:src/keys.c    **** 			if (c > cl)
2779:src/keys.c    **** 				return pos;
2780:src/keys.c    **** 			else if (c < cl)
2781:src/keys.c    **** 				break;
2782:src/keys.c    **** 		}
2783:src/keys.c    **** 		if (text[i] == '\0')
2784:src/keys.c    **** 			return pos;
2785:src/keys.c    **** 	}
2786:src/keys.c    **** 	return pos;
2787:src/keys.c    **** }
2788:src/keys.c    **** 
2789:src/keys.c    **** #endif
2790:src/keys.c    **** 
2791:src/keys.c    **** /* Multi (2) word instruction entry
2792:src/keys.c    ****  */
2793:src/keys.c    **** static void reset_multi(void) {
2794:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2795:src/keys.c    **** 	State2.multi = 0;
2796:src/keys.c    **** 	if (! State2.alphas )
2797:src/keys.c    **** 		State2.alphashift = 0;
2798:src/keys.c    **** }
2799:src/keys.c    **** 
2800:src/keys.c    **** static int process_multi(const keycode c) {
2801:src/keys.c    **** 	enum shifts shift = reset_shift();
2802:src/keys.c    **** 	unsigned int ch = 0;
2803:src/keys.c    **** 	unsigned int opcode;
2804:src/keys.c    **** 
2805:src/keys.c    **** 	if (State2.catalogue) {
2806:src/keys.c    **** 		// Alpha catalogue from within multi character command
2807:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2808:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2809:src/keys.c    **** 			return opcode;
2810:src/keys.c    **** 		ch = (unsigned char) opcode;
2811:src/keys.c    **** 		goto add_char;
2812:src/keys.c    **** 	}
2813:src/keys.c    **** 
2814:src/keys.c    **** 	switch (c) {
2815:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2816:src/keys.c    **** 		if (shift != SHIFT_N)
2817:src/keys.c    **** 				break;
2818:src/keys.c    **** 		reset_multi();
2819:src/keys.c    **** 		if (State2.numdigit == 0)
2820:src/keys.c    **** 			return STATE_UNFINISHED;
2821:src/keys.c    **** 		else if (State2.numdigit == 1)
2822:src/keys.c    **** 			State2.digval2 = 0;
2823:src/keys.c    **** 		goto fin;
2824:src/keys.c    **** 
2825:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2826:src/keys.c    **** 		if (shift != SHIFT_H) {
2827:src/keys.c    **** 			if (State2.numdigit == 0)
2828:src/keys.c    **** 				reset_multi();
2829:src/keys.c    **** 			else
2830:src/keys.c    **** 				State2.numdigit--;
2831:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccXySG1f.s 			page 55


2832:src/keys.c    **** 		}
2833:src/keys.c    **** 		break;
2834:src/keys.c    **** 
2835:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2836:src/keys.c    **** 		if (shift == SHIFT_F)
2837:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2838:src/keys.c    **** 		else
2839:src/keys.c    **** 			reset_multi();
2840:src/keys.c    **** 		return STATE_UNFINISHED;
2841:src/keys.c    **** 
2842:src/keys.c    **** 	default:
2843:src/keys.c    **** 		break;
2844:src/keys.c    **** 		}
2845:src/keys.c    **** 
2846:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2847:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2848:src/keys.c    **** 	if (ch == 0)
2849:src/keys.c    **** 		return STATE_UNFINISHED;
2850:src/keys.c    **** add_char:
2851:src/keys.c    **** 	if (State2.numdigit == 0) {
2852:src/keys.c    **** 		State2.digval = ch;
2853:src/keys.c    **** 		State2.numdigit = 1;
2854:src/keys.c    **** 		return STATE_UNFINISHED;
2855:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2856:src/keys.c    **** 		State2.digval2 = ch;
2857:src/keys.c    **** 		State2.numdigit = 2;
2858:src/keys.c    **** 		return STATE_UNFINISHED;
2859:src/keys.c    **** 	}
2860:src/keys.c    **** 	reset_multi();
2861:src/keys.c    **** 
2862:src/keys.c    **** fin:
2863:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2864:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2865:src/keys.c    **** 	return opcode;
2866:src/keys.c    **** }
2867:src/keys.c    **** 
2868:src/keys.c    **** 
2869:src/keys.c    **** /* Handle YES/NO confirmations
2870:src/keys.c    ****  */
2871:src/keys.c    **** static int process_confirm(const keycode c) {
2872:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2873:src/keys.c    **** 	switch (c) {
2874:src/keys.c    **** #ifdef DM42
2875:src/keys.c    **** 	case K52:
2876:src/keys.c    **** #endif
2877:src/keys.c    **** 	case K63:			// Yes
2878:src/keys.c    **** 	  switch (State2.confirm) {
2879:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2880:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2881:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2882:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2883:src/keys.c    **** 	  }
2884:src/keys.c    **** 	case K24:
2885:src/keys.c    **** #ifdef DM42
2886:src/keys.c    **** 	case K22:
2887:src/keys.c    **** #else
2888:src/keys.c    **** 	case K32:
ARM GAS  /tmp/ccXySG1f.s 			page 56


2889:src/keys.c    **** #endif
2890:src/keys.c    **** 	  // No
2891:src/keys.c    **** 	  State2.confirm = 0;
2892:src/keys.c    **** 	  State2.digval = 0;
2893:src/keys.c    **** 	  break;
2894:src/keys.c    **** 	default:			// No state change
2895:src/keys.c    **** 	  break;
2896:src/keys.c    **** 	}
2897:src/keys.c    **** 	return STATE_UNFINISHED;
2898:src/keys.c    **** }
2899:src/keys.c    **** 
2900:src/keys.c    **** 
2901:src/keys.c    **** /*
2902:src/keys.c    ****  *  STATUS
2903:src/keys.c    ****  */
2904:src/keys.c    **** static int process_status(const keycode c) {
2905:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2906:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2907:src/keys.c    **** 
2908:src/keys.c    **** 	if (c == K_UP) {
2909:src/keys.c    **** 		if (--n < -2)
2910:src/keys.c    **** 			n = max;
2911:src/keys.c    **** 	}
2912:src/keys.c    **** 	else if (c == K_DOWN) {
2913:src/keys.c    **** 		if (++n > max)
2914:src/keys.c    **** 			n = -2;
2915:src/keys.c    **** 	}
2916:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2917:src/keys.c    **** 		State2.status = 0;
2918:src/keys.c    **** 		return STATE_UNFINISHED;
2919:src/keys.c    **** 	} 
2920:src/keys.c    **** 	else {
2921:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2922:src/keys.c    **** 		if (nn <= 9)
2923:src/keys.c    **** 			n = nn;
2924:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2925:src/keys.c    **** 			n = n == max ? 10 : max;
2926:src/keys.c    **** 		else if (nn != NO_REG)
2927:src/keys.c    **** 			n = 10; 
2928:src/keys.c    **** 	}
2929:src/keys.c    **** 	State2.status = n + 3;
2930:src/keys.c    **** 
2931:src/keys.c    **** 	return STATE_UNFINISHED;
2932:src/keys.c    **** }
2933:src/keys.c    **** 
2934:src/keys.c    **** 
2935:src/keys.c    **** /*
2936:src/keys.c    ****  *  CAT helper
2937:src/keys.c    ****  */
2938:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2938 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2939:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2939 2 view .LVU58
2938:src/keys.c    **** 	const unsigned int op = getprog(pc);
ARM GAS  /tmp/ccXySG1f.s 			page 57


 223              		.loc 1 2938 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2938:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2938 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2939 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2940:src/keys.c    **** 
2941:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2941 2 is_stmt 1 view .LVU62
 234              		.loc 1 2941 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2941 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2941 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2941 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2942:src/keys.c    **** }
 245              		.loc 1 2942 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2941:src/keys.c    **** }
 249              		.loc 1 2941 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2942 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2941:src/keys.c    **** }
 256              		.loc 1 2941 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2941:src/keys.c    **** }
 259              		.loc 1 2941 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2942 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2942 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
ARM GAS  /tmp/ccXySG1f.s 			page 58


 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2943:src/keys.c    **** 
2944:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2944 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2944 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2944 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2945:src/keys.c    **** 	do {
 294              		.loc 1 2945 2 is_stmt 1 view .LVU77
2946:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2946 3 view .LVU78
2947:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2947 4 view .LVU79
2944:src/keys.c    **** 	do {
 297              		.loc 1 2944 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2947 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2948:src/keys.c    **** 				pc = do_inc(pc, 0);
2949:src/keys.c    **** 				if (PcWrapped)
2950:src/keys.c    **** 					break;
2951:src/keys.c    **** 			}
2952:src/keys.c    **** 			else
2953:src/keys.c    **** 				inc = 1;
2954:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2954 4 is_stmt 1 view .LVU82
 304              		.loc 1 2954 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2954 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2954 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2954 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2948:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2948 5 is_stmt 1 view .LVU87
ARM GAS  /tmp/ccXySG1f.s 			page 59


2948:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2948 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2949:src/keys.c    **** 					break;
 323              		.loc 1 2949 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2948:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2948 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2949:src/keys.c    **** 					break;
 328              		.loc 1 2949 5 is_stmt 1 view .LVU91
2949:src/keys.c    **** 					break;
 329              		.loc 1 2949 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2955:src/keys.c    **** 				return pc;
2956:src/keys.c    **** 			}
2957:src/keys.c    **** 		}
2958:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2958 3 is_stmt 1 view .LVU93
 333              		.loc 1 2958 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2958 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2959:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2959 10 is_stmt 1 view .LVU96
 342              		.loc 1 2959 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2959 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2960:src/keys.c    **** 	return pc;
2961:src/keys.c    **** }
 351              		.loc 1 2961 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2961 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
ARM GAS  /tmp/ccXySG1f.s 			page 60


 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
ARM GAS  /tmp/ccXySG1f.s 			page 61


 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB301:
 432              	.LBI301:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE301:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB318:
 438              	.LBB302:
 439              	.LBI302:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB303:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB304:
 444              	.LBI304:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB305:
ARM GAS  /tmp/ccXySG1f.s 			page 62


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE305:
 453              	.LBE304:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE303:
 462              	.LBE302:
 463              	.LBE318:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
ARM GAS  /tmp/ccXySG1f.s 			page 63


 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB319:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE319:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB320:
 505              	.LBB315:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB312:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB309:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB306:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE306:
 518              	.LBE309:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
ARM GAS  /tmp/ccXySG1f.s 			page 64


 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE312:
 527              	.LBE315:
 528              	.LBE320:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB321:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
 558              	.LBE321:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB322:
 562              	.LBB316:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB313:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccXySG1f.s 			page 65


 565              		.loc 1 105 2 view .LVU185
 566              	.LBB310:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB307:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE307:
 575              	.LBE310:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE313:
 584              	.LBE316:
 585              	.LBE322:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
ARM GAS  /tmp/ccXySG1f.s 			page 66


 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB323:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE323:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB324:
 612              	.LBB317:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB314:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB311:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB308:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE308:
 625              	.LBE311:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE314:
 634              	.LBE317:
 635              	.LBE324:
 610:src/keys.c    **** 
 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
ARM GAS  /tmp/ccXySG1f.s 			page 67


 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
ARM GAS  /tmp/ccXySG1f.s 			page 68


 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2962:src/keys.c    **** 
2963:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2963 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2963 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2963 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2964:src/keys.c    **** 	do {
 717              		.loc 1 2964 2 is_stmt 1 view .LVU239
2965:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2965 3 view .LVU240
2966:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2966 4 view .LVU241
 720              		.loc 1 2966 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2967:src/keys.c    **** 			if (PcWrapped)
2968:src/keys.c    **** 				break;
2969:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2969 4 is_stmt 1 view .LVU243
2970:src/keys.c    **** 				return pc;
2971:src/keys.c    **** 			}
2972:src/keys.c    **** 		}
2973:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2973 3 view .LVU244
 727              		.loc 1 2973 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2967:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2967 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
ARM GAS  /tmp/ccXySG1f.s 			page 69


 732              		.loc 1 2973 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2974:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2974 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2966:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2966 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2967:src/keys.c    **** 				break;
 739              		.loc 1 2967 4 is_stmt 1 view .LVU250
2973:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2973 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2974 3 is_stmt 1 view .LVU252
2967:src/keys.c    **** 				break;
 744              		.loc 1 2967 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2969:src/keys.c    **** 				return pc;
 746              		.loc 1 2969 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2969:src/keys.c    **** 				return pc;
 750              		.loc 1 2969 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2975:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2976:src/keys.c    **** 	return pc;
2977:src/keys.c    **** }
 753              		.loc 1 2977 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2974:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2974 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2975:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2975 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2974:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2974 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2975:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2975 10 is_stmt 1 view .LVU260
2975:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2975 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2975:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2975 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
ARM GAS  /tmp/ccXySG1f.s 			page 70


 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2977 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2977 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 704 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB325:
 706:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 706 3 view .LVU266
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 707 3 view .LVU267
 706:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 706 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 707 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 707 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 715:src/keys.c    **** #endif
 812              		.loc 1 715 7 is_stmt 1 view .LVU271
 715:src/keys.c    **** #endif
 813              		.loc 1 715 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 715:src/keys.c    **** #endif
 815              		.loc 1 715 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 725:src/keys.c    **** 		}
 818              		.loc 1 725 4 is_stmt 1 view .LVU274
 725:src/keys.c    **** 		}
 819              		.loc 1 725 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
ARM GAS  /tmp/ccXySG1f.s 			page 71


 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE325:
 729:src/keys.c    **** 
 825              		.loc 1 729 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB326:
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 708 4 is_stmt 1 view .LVU277
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 708 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 708 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 708 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 709:src/keys.c    **** 		}
 839              		.loc 1 709 4 is_stmt 1 view .LVU281
 709:src/keys.c    **** 		}
 840              		.loc 1 709 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 709:src/keys.c    **** 		}
 843              		.loc 1 709 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE326:
 851              		.cfi_endproc
 852              	.LFE64:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 552 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
ARM GAS  /tmp/ccXySG1f.s 			page 72


 870              		.loc 1 555 2 view .LVU285
 555:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 555 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 560:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 560 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 555 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 556 2 is_stmt 1 view .LVU289
 557:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 557 2 view .LVU290
 560:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 560 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 557 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 560 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 557 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 558 2 is_stmt 1 view .LVU295
 558:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 558 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 559 2 is_stmt 1 view .LVU297
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 2 view .LVU298
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 561 2 view .LVU299
 562:src/keys.c    **** }
 898              		.loc 1 562 2 view .LVU300
 563:src/keys.c    **** 
 899              		.loc 1 563 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE66:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
ARM GAS  /tmp/ccXySG1f.s 			page 73


 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB34:
1889:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1889 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1890:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1890 2 view .LVU303
 923              	.LVL67:
 924              	.LBB327:
 925              	.LBI327:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 552 13 view .LVU304
 927              	.LBB328:
 553:src/keys.c    **** 		return;
 928              		.loc 1 553 2 view .LVU305
 929              	.LBE328:
 930              	.LBE327:
1889:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1889 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB330:
 937              	.LBB329:
 553:src/keys.c    **** 		return;
 938              		.loc 1 553 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 553:src/keys.c    **** 		return;
 941              		.loc 1 553 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 553:src/keys.c    **** 		return;
 946              		.loc 1 553 5 view .LVU309
 947              	.LBE329:
 948              	.LBE330:
1891:src/keys.c    **** }
 949              		.loc 1 1891 2 is_stmt 1 view .LVU310
1891:src/keys.c    **** }
 950              		.loc 1 1891 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1892:src/keys.c    **** 
 955              		.loc 1 1892 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
ARM GAS  /tmp/ccXySG1f.s 			page 74


 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE34:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB35:
1894:src/keys.c    ****    const unsigned int base = CmdBase;
 975              		.loc 1 1894 40 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1895:src/keys.c    ****    int r = RARG(base, val 
 979              		.loc 1 1895 4 view .LVU314
1894:src/keys.c    ****    const unsigned int base = CmdBase;
 980              		.loc 1 1894 40 is_stmt 0 view .LVU315
 981 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 982              		.cfi_def_cfa_offset 24
 983              		.cfi_offset 3, -24
 984              		.cfi_offset 4, -20
 985              		.cfi_offset 5, -16
 986              		.cfi_offset 6, -12
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
1895:src/keys.c    ****    int r = RARG(base, val 
 989              		.loc 1 1895 30 view .LVU316
 990 0002 234B     		ldr	r3, .L109
1896:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 991              		.loc 1 1896 12 view .LVU317
 992 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 993 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1895:src/keys.c    ****    int r = RARG(base, val 
 994              		.loc 1 1895 23 view .LVU318
 995 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 996              	.LVL71:
1896:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 997              		.loc 1 1896 4 is_stmt 1 view .LVU319
1896:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 998              		.loc 1 1896 12 is_stmt 0 view .LVU320
 999 000a EE07     		lsls	r6, r5, #31
1899:src/keys.c    **** 
 1000              		.loc 1 1899 34 view .LVU321
 1001 000c 214E     		ldr	r6, .L109+4
 1002 000e 3668     		ldr	r6, [r6]
1896:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1003              		.loc 1 1896 12 view .LVU322
 1004 0010 01F08003 		and	r3, r1, #128
1899:src/keys.c    **** 
 1005              		.loc 1 1899 32 view .LVU323
 1006 0014 96F8EA77 		ldrb	r7, [r6, #2026]	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 75


1896:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1896 12 view .LVU324
 1008 0018 0344     		add	r3, r3, r0
 1009 001a 02F12004 		add	r4, r2, #32
 1010 001e 48BF     		it	mi
 1011 0020 7033     		addmi	r3, r3, #112
 1012 0022 2402     		lsls	r4, r4, #8
1899:src/keys.c    **** 
 1013              		.loc 1 1899 79 view .LVU325
 1014 0024 3F07     		lsls	r7, r7, #28
1896:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1896 12 view .LVU326
 1016 0026 44EA0304 		orr	r4, r4, r3
 1017              	.LVL72:
1899:src/keys.c    **** 
 1018              		.loc 1 1899 4 is_stmt 1 view .LVU327
1899:src/keys.c    **** 
 1019              		.loc 1 1899 79 is_stmt 0 view .LVU328
 1020 002a 25D5     		bpl	.L92
1899:src/keys.c    **** 
 1021              		.loc 1 1899 79 discriminator 2 view .LVU329
 1022 002c 15F0400F 		tst	r5, #64
 1023 0030 0CBF     		ite	eq
 1024 0032 0425     		moveq	r5, #4
 1025 0034 0825     		movne	r5, #8
 1026              	.L87:
 1027              	.LVL73:
1901:src/keys.c    ****      /*
 1028              		.loc 1 1901 4 is_stmt 1 discriminator 6 view .LVU330
1901:src/keys.c    ****      /*
 1029              		.loc 1 1901 7 is_stmt 0 discriminator 6 view .LVU331
 1030 0036 0B06     		lsls	r3, r1, #24
 1031 0038 1AD4     		bmi	.L88
1917:src/keys.c    ****        if (C_LOCKED) {
 1032              		.loc 1 1917 6 is_stmt 1 view .LVU332
1917:src/keys.c    ****        if (C_LOCKED) {
 1033              		.loc 1 1917 23 is_stmt 0 view .LVU333
 1034 003a 174B     		ldr	r3, .L109+8
 1035 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1036 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1917:src/keys.c    ****        if (C_LOCKED) {
 1037              		.loc 1 1917 9 view .LVU334
 1038 0042 DF06     		lsls	r7, r3, #27
 1039 0044 10D5     		bpl	.L89
1917:src/keys.c    ****        if (C_LOCKED) {
 1040              		.loc 1 1917 55 discriminator 1 view .LVU335
 1041 0046 96F8AC37 		ldrb	r3, [r6, #1964]	@ zero_extendqisi2
 1042 004a 03F04103 		and	r3, r3, #65
1917:src/keys.c    ****        if (C_LOCKED) {
 1043              		.loc 1 1917 40 discriminator 1 view .LVU336
 1044 004e 412B     		cmp	r3, #65
 1045 0050 0CBF     		ite	eq
 1046 0052 0021     		moveq	r1, #0
 1047 0054 6221     		movne	r1, #98
1917:src/keys.c    ****        if (C_LOCKED) {
 1048              		.loc 1 1917 30 discriminator 1 view .LVU337
 1049 0056 8142     		cmp	r1, r0
ARM GAS  /tmp/ccXySG1f.s 			page 76


 1050 0058 06D2     		bcs	.L89
1917:src/keys.c    ****        if (C_LOCKED) {
 1051              		.loc 1 1917 86 discriminator 6 view .LVU338
 1052 005a C107     		lsls	r1, r0, #31
 1053 005c 04D5     		bpl	.L89
1918:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1054              		.loc 1 1918 8 is_stmt 1 view .LVU339
1918:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1055              		.loc 1 1918 11 is_stmt 0 view .LVU340
 1056 005e 412B     		cmp	r3, #65
 1057 0060 11D0     		beq	.L107
 1058              	.LVL74:
 1059              	.L96:
1923:src/keys.c    ****        }
 1060              		.loc 1 1923 10 view .LVU341
 1061 0062 3324     		movs	r4, #51
 1062              	.LVL75:
1938:src/keys.c    **** 
 1063              		.loc 1 1938 2 view .LVU342
 1064 0064 2046     		mov	r0, r4
 1065              	.LVL76:
1938:src/keys.c    **** 
 1066              		.loc 1 1938 2 view .LVU343
 1067 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1068              	.LVL77:
 1069              	.L89:
1931:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1070              		.loc 1 1931 6 is_stmt 1 view .LVU344
1931:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1071              		.loc 1 1931 31 is_stmt 0 view .LVU345
 1072 0068 A2F12203 		sub	r3, r2, #34
1931:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1931 9 view .LVU346
 1074 006c 012B     		cmp	r3, #1
 1075 006e 05D9     		bls	.L108
 1076              	.LVL78:
 1077              	.L88:
1936:src/keys.c    ****    return r;
 1078              		.loc 1 1936 4 is_stmt 1 view .LVU347
 1079 0070 FFF7FEFF 		bl	reset_arg
 1080              	.LVL79:
1937:src/keys.c    ****  }
 1081              		.loc 1 1937 4 view .LVU348
 1082              	.L85:
1938:src/keys.c    **** 
 1083              		.loc 1 1938 2 is_stmt 0 view .LVU349
 1084 0074 2046     		mov	r0, r4
 1085 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1086              	.LVL80:
 1087              	.L92:
1899:src/keys.c    **** 
 1088              		.loc 1 1899 79 view .LVU350
 1089 0078 0425     		movs	r5, #4
 1090 007a DCE7     		b	.L87
 1091              	.LVL81:
 1092              	.L108:
1931:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
ARM GAS  /tmp/ccXySG1f.s 			page 77


 1093              		.loc 1 1931 76 discriminator 1 view .LVU351
 1094 007c C5F16405 		rsb	r5, r5, #100
 1095              	.LVL82:
1931:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1931 55 discriminator 1 view .LVU352
 1097 0080 8542     		cmp	r5, r0
 1098 0082 F5D2     		bcs	.L88
 1099 0084 EDE7     		b	.L96
 1100              	.LVL83:
 1101              	.L107:
1919:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1102              		.loc 1 1919 3 is_stmt 1 view .LVU353
 1103 0086 1920     		movs	r0, #25
 1104              	.LVL84:
1919:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1105              		.loc 1 1919 3 is_stmt 0 view .LVU354
 1106 0088 FFF7FEFF 		bl	error_message
 1107              	.LVL85:
1920:src/keys.c    ****        }
 1108              		.loc 1 1920 3 is_stmt 1 view .LVU355
1920:src/keys.c    ****        }
 1109              		.loc 1 1920 10 is_stmt 0 view .LVU356
 1110 008c 3324     		movs	r4, #51
 1111              	.LVL86:
1920:src/keys.c    ****        }
 1112              		.loc 1 1920 10 view .LVU357
 1113 008e F1E7     		b	.L85
 1114              	.L110:
 1115              		.align	2
 1116              	.L109:
 1117 0090 00000000 		.word	StateWhileOn
 1118 0094 00000000 		.word	main_ram
 1119 0098 00000000 		.word	argcmds
 1120              		.cfi_endproc
 1121              	.LFE35:
 1123              		.section	.text.arg_digit,"ax",%progbits
 1124              		.align	1
 1125              		.p2align 2,,3
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	arg_digit:
 1132              	.LVL87:
 1133              	.LFB36:
1940:src/keys.c    **** 	int lim;
 1134              		.loc 1 1940 29 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
1941:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1138              		.loc 1 1941 2 view .LVU359
1943:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1139              		.loc 1 1943 2 view .LVU360
1940:src/keys.c    **** 	int lim;
 1140              		.loc 1 1940 29 is_stmt 0 view .LVU361
 1141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccXySG1f.s 			page 78


 1142              		.cfi_def_cfa_offset 20
 1143              		.cfi_offset 4, -20
 1144              		.cfi_offset 5, -16
 1145              		.cfi_offset 6, -12
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
1944:src/keys.c    **** #else
 1148              		.loc 1 1944 29 view .LVU362
 1149 0002 3E4D     		ldr	r5, .L158
1940:src/keys.c    **** 	int lim;
 1150              		.loc 1 1940 29 view .LVU363
 1151 0004 83B0     		sub	sp, sp, #12
 1152              		.cfi_def_cfa_offset 32
1940:src/keys.c    **** 	int lim;
 1153              		.loc 1 1940 29 view .LVU364
 1154 0006 0446     		mov	r4, r0
1943:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1155              		.loc 1 1943 17 view .LVU365
 1156 0008 01A8     		add	r0, sp, #4
 1157              	.LVL88:
1943:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1158              		.loc 1 1943 17 view .LVU366
 1159 000a FFF7FEFF 		bl	get_dispmode_digs
 1160              	.LVL89:
1944:src/keys.c    **** #else
 1161              		.loc 1 1944 29 view .LVU367
 1162 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1163              	.LVL90:
1944:src/keys.c    **** #else
 1164              		.loc 1 1944 2 is_stmt 1 view .LVU368
 1165 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1944:src/keys.c    **** #else
 1166              		.loc 1 1944 130 is_stmt 0 view .LVU369
 1167 0012 11F0400C 		ands	ip, r1, #64
 1168 0016 01D0     		beq	.L114
1944:src/keys.c    **** #else
 1169              		.loc 1 1944 44 discriminator 2 view .LVU370
 1170 0018 502E     		cmp	r6, #80
 1171 001a 64D0     		beq	.L154
 1172              	.LVL91:
 1173              	.L114:
1948:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1174              		.loc 1 1948 2 is_stmt 1 discriminator 8 view .LVU371
1949:src/keys.c    **** 	
 1175              		.loc 1 1949 34 is_stmt 0 discriminator 8 view .LVU372
 1176 001c 384A     		ldr	r2, .L158+4
1948:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1177              		.loc 1 1948 33 discriminator 8 view .LVU373
 1178 001e 2B89     		ldrh	r3, [r5, #8]
1949:src/keys.c    **** 	
 1179              		.loc 1 1949 34 discriminator 8 view .LVU374
 1180 0020 02EB0612 		add	r2, r2, r6, lsl #4
1948:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1181              		.loc 1 1948 41 discriminator 8 view .LVU375
 1182 0024 03EB8303 		add	r3, r3, r3, lsl #2
1949:src/keys.c    **** 	
 1183              		.loc 1 1949 34 discriminator 8 view .LVU376
ARM GAS  /tmp/ccXySG1f.s 			page 79


 1184 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1948:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1185              		.loc 1 1948 46 discriminator 8 view .LVU377
 1186 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1187              	.LVL92:
1949:src/keys.c    **** 	
 1188              		.loc 1 1949 2 is_stmt 1 discriminator 8 view .LVU378
1949:src/keys.c    **** 	
 1189              		.loc 1 1949 39 is_stmt 0 discriminator 8 view .LVU379
 1190 002e BB07     		lsls	r3, r7, #30
 1191 0030 32D4     		bmi	.L153
1949:src/keys.c    **** 	
 1192              		.loc 1 1949 39 discriminator 2 view .LVU380
 1193 0032 95F91530 		ldrsb	r3, [r5, #21]
 1194 0036 002B     		cmp	r3, #0
 1195 0038 2EDB     		blt	.L153
 1196              	.LVL93:
1951:src/keys.c    **** 		// Handle local registers and flags
 1197              		.loc 1 1951 2 is_stmt 1 view .LVU381
1951:src/keys.c    **** 		// Handle local registers and flags
 1198              		.loc 1 1951 5 is_stmt 0 view .LVU382
 1199 003a C907     		lsls	r1, r1, #31
 1200 003c 4BD5     		bpl	.L120
1953:src/keys.c    **** 		if (State2.runmode) {
 1201              		.loc 1 1953 3 is_stmt 1 view .LVU383
1953:src/keys.c    **** 		if (State2.runmode) {
 1202              		.loc 1 1953 7 is_stmt 0 view .LVU384
 1203 003e 0F23     		movs	r3, #15
 1204 0040 0193     		str	r3, [sp, #4]
1954:src/keys.c    **** 			if (LocalRegs == 0)
 1205              		.loc 1 1954 3 is_stmt 1 view .LVU385
1954:src/keys.c    **** 			if (LocalRegs == 0)
 1206              		.loc 1 1954 6 is_stmt 0 view .LVU386
 1207 0042 BCF1000F 		cmp	ip, #0
 1208 0046 05D0     		beq	.L123
1955:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1209              		.loc 1 1955 4 is_stmt 1 view .LVU387
1955:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1210              		.loc 1 1955 8 is_stmt 0 view .LVU388
 1211 0048 2E4B     		ldr	r3, .L158+8
 1212 004a 1B68     		ldr	r3, [r3]
1955:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1213              		.loc 1 1955 7 view .LVU389
 1214 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1215 0050 002B     		cmp	r3, #0
 1216 0052 3DD0     		beq	.L125
 1217              	.LVL94:
 1218              	.L123:
1965:src/keys.c    **** 	else {
 1219              		.loc 1 1965 65 view .LVU390
 1220 0054 0F20     		movs	r0, #15
 1221              	.L122:
1971:src/keys.c    **** 		return STATE_UNFINISHED;
 1222              		.loc 1 1971 2 is_stmt 1 view .LVU391
1971:src/keys.c    **** 		return STATE_UNFINISHED;
 1223              		.loc 1 1971 5 is_stmt 0 view .LVU392
 1224 0056 8442     		cmp	r4, r0
ARM GAS  /tmp/ccXySG1f.s 			page 80


 1225 0058 3ADC     		bgt	.L125
 1226              	.L157:
1974:src/keys.c    **** 	++State2.numdigit;
 1227              		.loc 1 1974 2 is_stmt 1 view .LVU393
1975:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1228              		.loc 1 1975 2 is_stmt 0 view .LVU394
 1229 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1974:src/keys.c    **** 	++State2.numdigit;
 1230              		.loc 1 1974 16 view .LVU395
 1231 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1975:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1232              		.loc 1 1975 2 is_stmt 1 view .LVU396
 1233 005e 0137     		adds	r7, r7, #1
1976:src/keys.c    **** 		int result = arg_eval(val);
 1234              		.loc 1 1976 16 is_stmt 0 view .LVU397
 1235 0060 04EB8403 		add	r3, r4, r4, lsl #2
1975:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1236              		.loc 1 1975 2 view .LVU398
 1237 0064 FFB2     		uxtb	r7, r7
1976:src/keys.c    **** 		int result = arg_eval(val);
 1238              		.loc 1 1976 5 view .LVU399
 1239 0066 B0EB430F 		cmp	r0, r3, lsl #1
1975:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1240              		.loc 1 1975 2 view .LVU400
 1241 006a EF72     		strb	r7, [r5, #11]
1976:src/keys.c    **** 		int result = arg_eval(val);
 1242              		.loc 1 1976 2 is_stmt 1 view .LVU401
1976:src/keys.c    **** 		int result = arg_eval(val);
 1243              		.loc 1 1976 5 is_stmt 0 view .LVU402
 1244 006c 04DB     		blt	.L131
1976:src/keys.c    **** 		int result = arg_eval(val);
 1245              		.loc 1 1976 49 discriminator 1 view .LVU403
 1246 006e 3046     		mov	r0, r6
 1247 0070 FFF7FEFF 		bl	num_arg_digits
 1248              	.LVL95:
1976:src/keys.c    **** 		int result = arg_eval(val);
 1249              		.loc 1 1976 27 discriminator 1 view .LVU404
 1250 0074 8742     		cmp	r7, r0
 1251 0076 2BDB     		blt	.L125
 1252              	.L131:
 1253              	.LBB331:
1977:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1254              		.loc 1 1977 3 is_stmt 1 view .LVU405
1977:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1255              		.loc 1 1977 16 is_stmt 0 view .LVU406
 1256 0078 2046     		mov	r0, r4
 1257 007a FFF7FEFF 		bl	arg_eval
 1258              	.LVL96:
1978:src/keys.c    **** 			--State2.numdigit;
 1259              		.loc 1 1978 3 is_stmt 1 view .LVU407
1978:src/keys.c    **** 			--State2.numdigit;
 1260              		.loc 1 1978 6 is_stmt 0 view .LVU408
 1261 007e 3328     		cmp	r0, #51
 1262 0080 08D1     		bne	.L111
1979:src/keys.c    **** 			State2.digval /= 10;
 1263              		.loc 1 1979 4 is_stmt 1 view .LVU409
1980:src/keys.c    **** 		}
ARM GAS  /tmp/ccXySG1f.s 			page 81


 1264              		.loc 1 1980 18 is_stmt 0 view .LVU410
 1265 0082 2B89     		ldrh	r3, [r5, #8]
 1266 0084 2049     		ldr	r1, .L158+12
1979:src/keys.c    **** 			State2.digval /= 10;
 1267              		.loc 1 1979 4 view .LVU411
 1268 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1980:src/keys.c    **** 		}
 1269              		.loc 1 1980 18 view .LVU412
 1270 0088 A1FB0313 		umull	r1, r3, r1, r3
 1271 008c DB08     		lsrs	r3, r3, #3
1979:src/keys.c    **** 			State2.digval /= 10;
 1272              		.loc 1 1979 4 view .LVU413
 1273 008e 013A     		subs	r2, r2, #1
1980:src/keys.c    **** 		}
 1274              		.loc 1 1980 18 view .LVU414
 1275 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1979:src/keys.c    **** 			State2.digval /= 10;
 1276              		.loc 1 1979 4 view .LVU415
 1277 0092 EA72     		strb	r2, [r5, #11]
1980:src/keys.c    **** 		}
 1278              		.loc 1 1980 4 is_stmt 1 view .LVU416
 1279              	.L111:
 1280              	.LBE331:
1985:src/keys.c    **** 
 1281              		.loc 1 1985 1 is_stmt 0 view .LVU417
 1282 0094 03B0     		add	sp, sp, #12
 1283              		.cfi_remember_state
 1284              		.cfi_def_cfa_offset 20
 1285              		@ sp needed
 1286 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1287              	.LVL97:
 1288              	.L153:
 1289              		.cfi_restore_state
1951:src/keys.c    **** 		// Handle local registers and flags
 1290              		.loc 1 1951 2 is_stmt 1 view .LVU418
1951:src/keys.c    **** 		// Handle local registers and flags
 1291              		.loc 1 1951 5 is_stmt 0 view .LVU419
 1292 0098 C807     		lsls	r0, r1, #31
 1293 009a 12D5     		bpl	.L155
1953:src/keys.c    **** 		if (State2.runmode) {
 1294              		.loc 1 1953 3 is_stmt 1 view .LVU420
1953:src/keys.c    **** 		if (State2.runmode) {
 1295              		.loc 1 1953 7 is_stmt 0 view .LVU421
 1296 009c 0F23     		movs	r3, #15
 1297 009e 0193     		str	r3, [sp, #4]
1954:src/keys.c    **** 			if (LocalRegs == 0)
 1298              		.loc 1 1954 3 is_stmt 1 view .LVU422
1954:src/keys.c    **** 			if (LocalRegs == 0)
 1299              		.loc 1 1954 6 is_stmt 0 view .LVU423
 1300 00a0 BCF1000F 		cmp	ip, #0
 1301 00a4 D6D0     		beq	.L123
1955:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1302              		.loc 1 1955 4 is_stmt 1 view .LVU424
1955:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1303              		.loc 1 1955 8 is_stmt 0 view .LVU425
 1304 00a6 174B     		ldr	r3, .L158+8
 1305 00a8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXySG1f.s 			page 82


1955:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1306              		.loc 1 1955 7 view .LVU426
 1307 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1308 00ae 7BB1     		cbz	r3, .L125
1958:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1309              		.loc 1 1958 5 is_stmt 1 view .LVU427
1958:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1310              		.loc 1 1958 11 is_stmt 0 view .LVU428
 1311 00b0 F0B2     		uxtb	r0, r6
 1312 00b2 FFF7FEFF 		bl	local_regs_rarg
 1313              	.LVL98:
1958:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1314              		.loc 1 1958 45 view .LVU429
 1315 00b6 0138     		subs	r0, r0, #1
1959:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1316              		.loc 1 1959 5 is_stmt 1 view .LVU430
1959:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1317              		.loc 1 1959 8 is_stmt 0 view .LVU431
 1318 00b8 0F28     		cmp	r0, #15
 1319 00ba 06DD     		ble	.L152
1960:src/keys.c    **** 			}
 1320              		.loc 1 1960 6 is_stmt 1 view .LVU432
1960:src/keys.c    **** 			}
 1321              		.loc 1 1960 10 is_stmt 0 view .LVU433
 1322 00bc 0F20     		movs	r0, #15
 1323 00be 0190     		str	r0, [sp, #4]
 1324 00c0 C9E7     		b	.L122
 1325              	.L155:
1965:src/keys.c    **** 	else {
 1326              		.loc 1 1965 3 is_stmt 1 view .LVU434
1965:src/keys.c    **** 	else {
 1327              		.loc 1 1965 65 is_stmt 0 view .LVU435
 1328 00c2 BCF1000F 		cmp	ip, #0
 1329 00c6 13D1     		bne	.L156
 1330 00c8 6320     		movs	r0, #99
 1331              	.LVL99:
 1332              	.L152:
1971:src/keys.c    **** 		return STATE_UNFINISHED;
 1333              		.loc 1 1971 5 view .LVU436
 1334 00ca 8442     		cmp	r4, r0
1969:src/keys.c    **** 	}
 1335              		.loc 1 1969 8 view .LVU437
 1336 00cc 0190     		str	r0, [sp, #4]
1971:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1971 2 is_stmt 1 view .LVU438
1971:src/keys.c    **** 		return STATE_UNFINISHED;
 1338              		.loc 1 1971 5 is_stmt 0 view .LVU439
 1339 00ce C4DD     		ble	.L157
 1340              	.L125:
1956:src/keys.c    **** 			if (is_reg) {
 1341              		.loc 1 1956 12 view .LVU440
 1342 00d0 3320     		movs	r0, #51
1985:src/keys.c    **** 
 1343              		.loc 1 1985 1 view .LVU441
 1344 00d2 03B0     		add	sp, sp, #12
 1345              		.cfi_remember_state
 1346              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccXySG1f.s 			page 83


 1347              		@ sp needed
 1348 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1349              	.LVL100:
 1350              	.L120:
 1351              		.cfi_restore_state
1964:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1352              		.loc 1 1964 7 is_stmt 1 view .LVU442
1967:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1353              		.loc 1 1967 3 view .LVU443
1967:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1354              		.loc 1 1967 9 is_stmt 0 view .LVU444
 1355 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1967:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1356              		.loc 1 1967 7 view .LVU445
 1357 00d8 0190     		str	r0, [sp, #4]
1968:src/keys.c    **** 			lim = RARG_IND - 1;
 1358              		.loc 1 1968 3 is_stmt 1 view .LVU446
1968:src/keys.c    **** 			lim = RARG_IND - 1;
 1359              		.loc 1 1968 6 is_stmt 0 view .LVU447
 1360 00da 7F28     		cmp	r0, #127
 1361 00dc BBDD     		ble	.L122
1968:src/keys.c    **** 			lim = RARG_IND - 1;
 1362              		.loc 1 1968 23 discriminator 1 view .LVU448
 1363 00de FB07     		lsls	r3, r7, #31
 1364 00e0 B9D5     		bpl	.L122
1969:src/keys.c    **** 	}
 1365              		.loc 1 1969 4 is_stmt 1 view .LVU449
1969:src/keys.c    **** 	}
 1366              		.loc 1 1969 8 is_stmt 0 view .LVU450
 1367 00e2 7F20     		movs	r0, #127
 1368 00e4 F1E7     		b	.L152
 1369              	.LVL101:
 1370              	.L154:
1944:src/keys.c    **** #else
 1371              		.loc 1 1944 93 discriminator 4 view .LVU451
 1372 00e6 0438     		subs	r0, r0, #4
 1373              	.LVL102:
1944:src/keys.c    **** #else
 1374              		.loc 1 1944 68 discriminator 4 view .LVU452
 1375 00e8 0128     		cmp	r0, #1
1944:src/keys.c    **** #else
 1376              		.loc 1 1944 130 discriminator 4 view .LVU453
 1377 00ea 98BF     		it	ls
 1378 00ec 8D26     		movls	r6, #141
 1379 00ee 95E7     		b	.L114
 1380              	.LVL103:
 1381              	.L156:
1965:src/keys.c    **** 	else {
 1382              		.loc 1 1965 26 discriminator 1 view .LVU454
 1383 00f0 F0B2     		uxtb	r0, r6
 1384 00f2 FFF7FEFF 		bl	global_regs_rarg
 1385              	.LVL104:
1965:src/keys.c    **** 	else {
 1386              		.loc 1 1965 61 discriminator 1 view .LVU455
 1387 00f6 0138     		subs	r0, r0, #1
 1388 00f8 E7E7     		b	.L152
 1389              	.L159:
ARM GAS  /tmp/ccXySG1f.s 			page 84


 1390 00fa 00BF     		.align	2
 1391              	.L158:
 1392 00fc 00000000 		.word	StateWhileOn
 1393 0100 00000000 		.word	argcmds
 1394 0104 00000000 		.word	main_ram
 1395 0108 CDCCCCCC 		.word	-858993459
 1396              		.cfi_endproc
 1397              	.LFE36:
 1399              		.section	.text.process_arg_shuffle,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	process_arg_shuffle:
 1408              	.LVL105:
 1409              	.LFB41:
2052:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1410              		.loc 1 2052 39 is_stmt 1 view -0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
2053:src/keys.c    **** 	if (State2.numdigit < 4)
 1415              		.loc 1 2053 2 view .LVU457
2052:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1416              		.loc 1 2052 39 is_stmt 0 view .LVU458
 1417 0000 10B4     		push	{r4}
 1418              		.cfi_def_cfa_offset 4
 1419              		.cfi_offset 4, -4
2053:src/keys.c    **** 	if (State2.numdigit < 4)
 1420              		.loc 1 2053 31 view .LVU459
 1421 0002 0A4A     		ldr	r2, .L163
 1422 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2053:src/keys.c    **** 	if (State2.numdigit < 4)
 1423              		.loc 1 2053 16 view .LVU460
 1424 0006 1189     		ldrh	r1, [r2, #8]
2053:src/keys.c    **** 	if (State2.numdigit < 4)
 1425              		.loc 1 2053 43 view .LVU461
 1426 0008 5C00     		lsls	r4, r3, #1
2053:src/keys.c    **** 	if (State2.numdigit < 4)
 1427              		.loc 1 2053 21 view .LVU462
 1428 000a A040     		lsls	r0, r0, r4
 1429              	.LVL106:
2053:src/keys.c    **** 	if (State2.numdigit < 4)
 1430              		.loc 1 2053 40 view .LVU463
 1431 000c 0133     		adds	r3, r3, #1
 1432 000e DBB2     		uxtb	r3, r3
2053:src/keys.c    **** 	if (State2.numdigit < 4)
 1433              		.loc 1 2053 16 view .LVU464
 1434 0010 0844     		add	r0, r0, r1
 1435 0012 80B2     		uxth	r0, r0
2054:src/keys.c    **** 		return STATE_UNFINISHED;
 1436              		.loc 1 2054 5 view .LVU465
 1437 0014 032B     		cmp	r3, #3
2053:src/keys.c    **** 	if (State2.numdigit < 4)
ARM GAS  /tmp/ccXySG1f.s 			page 85


 1438              		.loc 1 2053 40 view .LVU466
 1439 0016 D372     		strb	r3, [r2, #11]
2053:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2053 16 view .LVU467
 1441 0018 1081     		strh	r0, [r2, #8]	@ movhi
2054:src/keys.c    **** 		return STATE_UNFINISHED;
 1442              		.loc 1 2054 2 is_stmt 1 view .LVU468
2054:src/keys.c    **** 		return STATE_UNFINISHED;
 1443              		.loc 1 2054 5 is_stmt 0 view .LVU469
 1444 001a 03D9     		bls	.L161
2056:src/keys.c    **** }
 1445              		.loc 1 2056 2 is_stmt 1 view .LVU470
2057:src/keys.c    **** 
 1446              		.loc 1 2057 1 is_stmt 0 view .LVU471
 1447 001c 5DF8044B 		ldr	r4, [sp], #4
 1448              		.cfi_remember_state
 1449              		.cfi_restore 4
 1450              		.cfi_def_cfa_offset 0
2056:src/keys.c    **** }
 1451              		.loc 1 2056 9 view .LVU472
 1452 0020 FFF7FEBF 		b	arg_eval
 1453              	.LVL107:
 1454              	.L161:
 1455              		.cfi_restore_state
2057:src/keys.c    **** 
 1456              		.loc 1 2057 1 view .LVU473
 1457 0024 3320     		movs	r0, #51
 1458 0026 5DF8044B 		ldr	r4, [sp], #4
 1459              		.cfi_restore 4
 1460              		.cfi_def_cfa_offset 0
 1461 002a 7047     		bx	lr
 1462              	.L164:
 1463              		.align	2
 1464              	.L163:
 1465 002c 00000000 		.word	StateWhileOn
 1466              		.cfi_endproc
 1467              	.LFE41:
 1469              		.section	.text.process_h_shifted,"ax",%progbits
 1470              		.align	1
 1471              		.p2align 2,,3
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu fpv4-sp-d16
 1477              	process_h_shifted:
 1478              	.LVL108:
 1479              	.LFB21:
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1480              		.loc 1 1091 47 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
1094:src/keys.c    **** 		// Row 1
 1484              		.loc 1 1094 2 view .LVU475
1145:src/keys.c    **** 	int op = op_map[lc];
 1485              		.loc 1 1145 2 view .LVU476
 1486              	.LBB332:
ARM GAS  /tmp/ccXySG1f.s 			page 86


 1487              	.LBB333:
 158:src/keys.c    **** }
 1488              		.loc 1 158 23 is_stmt 0 view .LVU477
 1489 0000 314A     		ldr	r2, .L196
 1490              	.LBE333:
 1491              	.LBE332:
1146:src/keys.c    **** 	reset_shift();
 1492              		.loc 1 1146 17 view .LVU478
 1493 0002 324B     		ldr	r3, .L196+4
 1494              	.LBB336:
 1495              	.LBB334:
 158:src/keys.c    **** }
 1496              		.loc 1 158 23 view .LVU479
 1497 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1498              	.LBE334:
 1499              	.LBE336:
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1500              		.loc 1 1091 47 view .LVU480
 1501 0006 70B5     		push	{r4, r5, r6, lr}
 1502              		.cfi_def_cfa_offset 16
 1503              		.cfi_offset 4, -16
 1504              		.cfi_offset 5, -12
 1505              		.cfi_offset 6, -8
 1506              		.cfi_offset 14, -4
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1507              		.loc 1 1091 47 view .LVU481
 1508 0008 0446     		mov	r4, r0
 1509              	.LVL109:
 1510              	.LBB337:
 1511              	.LBI332:
 146:src/keys.c    **** {
 1512              		.loc 1 146 12 is_stmt 1 view .LVU482
 1513              	.LBB335:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1514              		.loc 1 148 2 view .LVU483
 158:src/keys.c    **** }
 1515              		.loc 1 158 2 view .LVU484
 158:src/keys.c    **** }
 1516              		.loc 1 158 2 is_stmt 0 view .LVU485
 1517              	.LBE335:
 1518              	.LBE337:
1146:src/keys.c    **** 	reset_shift();
 1519              		.loc 1 1146 2 is_stmt 1 view .LVU486
 1520              	.LBB338:
 1521              	.LBB339:
 1522              	.LBB340:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1523              		.loc 1 106 16 is_stmt 0 view .LVU487
 1524 000a 314E     		ldr	r6, .L196+8
 1525              	.LBE340:
 1526              	.LBE339:
 1527              	.LBE338:
1146:src/keys.c    **** 	reset_shift();
 1528              		.loc 1 1146 17 view .LVU488
 1529 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1530              	.LVL110:
1147:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 87


 1531              		.loc 1 1147 2 is_stmt 1 view .LVU489
 1532              	.LBB347:
 1533              	.LBI338:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1534              		.loc 1 114 13 view .LVU490
 1535              	.LBE347:
 115:src/keys.c    **** }
 1536              		.loc 1 115 2 view .LVU491
 1537              	.LBB348:
 1538              	.LBB345:
 1539              	.LBI339:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1540              		.loc 1 104 20 view .LVU492
 1541              	.LBB343:
 105:src/keys.c    **** 	State2.shifts = shift;
 1542              		.loc 1 105 2 view .LVU493
 1543              	.LBB341:
 1544              	.LBI341:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1545              		.loc 1 96 13 view .LVU494
 1546              	.LBB342:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1547              		.loc 1 97 2 view .LVU495
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1548              		.loc 1 97 18 is_stmt 0 view .LVU496
 1549 0010 FFF7FEFF 		bl	shift_down
 1550              	.LVL111:
  98:src/keys.c    **** }
 1551              		.loc 1 98 2 is_stmt 1 view .LVU497
 1552              	.LBE342:
 1553              	.LBE341:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1554              		.loc 1 106 2 view .LVU498
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1555              		.loc 1 106 16 is_stmt 0 view .LVU499
 1556 0014 0023     		movs	r3, #0
 1557              	.LBE343:
 1558              	.LBE345:
 1559              	.LBE348:
1150:src/keys.c    **** 	case K62:
 1560              		.loc 1 1150 2 view .LVU500
 1561 0016 262C     		cmp	r4, #38
 1562              	.LBB349:
 1563              	.LBB346:
 1564              	.LBB344:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1565              		.loc 1 106 16 view .LVU501
 1566 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1567              		.loc 1 108 2 is_stmt 1 view .LVU502
 1568              	.LVL112:
 108:src/keys.c    **** }
 1569              		.loc 1 108 2 is_stmt 0 view .LVU503
 1570              	.LBE344:
 1571              	.LBE346:
 1572              	.LBE349:
1150:src/keys.c    **** 	case K62:
ARM GAS  /tmp/ccXySG1f.s 			page 88


 1573              		.loc 1 1150 2 is_stmt 1 view .LVU504
 1574 001a 27D0     		beq	.L166
 1575 001c 272C     		cmp	r4, #39
 1576 001e 19D1     		bne	.L168
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1577              		.loc 1 1163 3 view .LVU505
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1578              		.loc 1 1163 7 is_stmt 0 view .LVU506
 1579 0020 FFF7FEFF 		bl	is_bad_cmdline
 1580              	.LVL113:
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1581              		.loc 1 1163 6 view .LVU507
 1582 0024 00BB     		cbnz	r0, .L178
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1583              		.loc 1 1165 3 is_stmt 1 view .LVU508
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1584              		.loc 1 1165 30 is_stmt 0 view .LVU509
 1585 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1586 0028 C3F38012 		ubfx	r2, r3, #6, #1
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1587              		.loc 1 1165 22 view .LVU510
 1588 002c C2F10102 		rsb	r2, r2, #1
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1589              		.loc 1 1165 18 view .LVU511
 1590 0030 62F38613 		bfi	r3, r2, #6, #1
 1591 0034 B375     		strb	r3, [r6, #22]
1166:src/keys.c    **** 		update_program_bounds(1);
 1592              		.loc 1 1166 3 is_stmt 1 view .LVU512
 1593 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1594              	.LVL114:
1167:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1595              		.loc 1 1167 3 view .LVU513
 1596 003a 0120     		movs	r0, #1
 1597 003c FFF7FEFF 		bl	update_program_bounds
 1598              	.LVL115:
1168:src/keys.c    **** 			set_pc(0);
 1599              		.loc 1 1168 3 view .LVU514
1168:src/keys.c    **** 			set_pc(0);
 1600              		.loc 1 1168 7 is_stmt 0 view .LVU515
 1601 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1168:src/keys.c    **** 			set_pc(0);
 1602              		.loc 1 1168 6 view .LVU516
 1603 0042 10F04000 		ands	r0, r0, #64
 1604 0046 05D1     		bne	.L168
1168:src/keys.c    **** 			set_pc(0);
 1605              		.loc 1 1168 27 discriminator 1 view .LVU517
 1606 0048 224B     		ldr	r3, .L196+12
 1607 004a 1B68     		ldr	r3, [r3]
1168:src/keys.c    **** 			set_pc(0);
 1608              		.loc 1 1168 24 discriminator 1 view .LVU518
 1609 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1610 0050 012A     		cmp	r2, #1
 1611 0052 32D0     		beq	.L192
 1612              	.L168:
1176:src/keys.c    **** 		if (op & _RARG) {
 1613              		.loc 1 1176 2 is_stmt 1 view .LVU519
1176:src/keys.c    **** 		if (op & _RARG) {
ARM GAS  /tmp/ccXySG1f.s 			page 89


 1614              		.loc 1 1176 5 is_stmt 0 view .LVU520
 1615 0054 332D     		cmp	r5, #51
 1616 0056 07D0     		beq	.L178
 1617              	.LVL116:
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1618              		.loc 1 1177 3 is_stmt 1 view .LVU521
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1619              		.loc 1 1177 6 is_stmt 0 view .LVU522
 1620 0058 2804     		lsls	r0, r5, #16
 1621 005a 14D5     		bpl	.L193
 1622              	.L176:
1178:src/keys.c    **** 			op = STATE_UNFINISHED;
 1623              		.loc 1 1178 4 is_stmt 1 view .LVU523
 1624              	.LVL117:
 1625              	.LBB350:
 1626              	.LBI350:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1627              		.loc 1 552 13 view .LVU524
 1628              	.LBB351:
 553:src/keys.c    **** 		return;
 1629              		.loc 1 553 2 view .LVU525
 553:src/keys.c    **** 		return;
 1630              		.loc 1 553 6 is_stmt 0 view .LVU526
 1631 005c FFF7FEFF 		bl	is_bad_cmdline
 1632              	.LVL118:
 553:src/keys.c    **** 		return;
 1633              		.loc 1 553 5 view .LVU527
 1634 0060 10B9     		cbnz	r0, .L178
 1635 0062 E8B2     		uxtb	r0, r5
 1636 0064 FFF7FEFF 		bl	init_arg.part.0
 1637              	.LVL119:
 1638              	.L178:
 553:src/keys.c    **** 		return;
 1639              		.loc 1 553 5 view .LVU528
 1640              	.LBE351:
 1641              	.LBE350:
1182:src/keys.c    **** #undef _RARG
 1642              		.loc 1 1182 2 is_stmt 1 view .LVU529
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1643              		.loc 1 1091 47 is_stmt 0 view .LVU530
 1644 0068 3320     		movs	r0, #51
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1645              		.loc 1 1185 1 view .LVU531
 1646 006a 70BD     		pop	{r4, r5, r6, pc}
 1647              	.LVL120:
 1648              	.L166:
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1649              		.loc 1 1152 3 is_stmt 1 view .LVU532
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1650              		.loc 1 1152 7 is_stmt 0 view .LVU533
 1651 006c 194B     		ldr	r3, .L196+12
 1652 006e 1B68     		ldr	r3, [r3]
 1653 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1654              		.loc 1 1152 6 view .LVU534
 1655 0074 D607     		lsls	r6, r2, #31
 1656 0076 0FD4     		bmi	.L194
ARM GAS  /tmp/ccXySG1f.s 			page 90


1158:src/keys.c    **** #endif
 1657              		.loc 1 1158 4 is_stmt 1 view .LVU535
1158:src/keys.c    **** #endif
 1658              		.loc 1 1158 8 is_stmt 0 view .LVU536
 1659 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1158:src/keys.c    **** #endif
 1660              		.loc 1 1158 7 view .LVU537
 1661 007c 9C06     		lsls	r4, r3, #26
 1662 007e 14D5     		bpl	.L195
 1663 0080 40F24F10 		movw	r0, #335
 1664              	.LVL121:
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1665              		.loc 1 1185 1 view .LVU538
 1666 0084 70BD     		pop	{r4, r5, r6, pc}
 1667              	.L193:
 1668              	.LVL122:
1182:src/keys.c    **** #undef _RARG
 1669              		.loc 1 1182 2 is_stmt 1 view .LVU539
1182:src/keys.c    **** #undef _RARG
 1670              		.loc 1 1182 9 is_stmt 0 view .LVU540
 1671 0086 134B     		ldr	r3, .L196+12
 1672 0088 1B68     		ldr	r3, [r3]
 1673 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1182:src/keys.c    **** #undef _RARG
 1674              		.loc 1 1182 57 view .LVU541
 1675 008e D907     		lsls	r1, r3, #31
 1676 0090 10D4     		bmi	.L177
 1677              	.LVL123:
 1678              	.L180:
1182:src/keys.c    **** #undef _RARG
 1679              		.loc 1 1182 57 view .LVU542
 1680 0092 25F48040 		bic	r0, r5, #16384
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1681              		.loc 1 1185 1 view .LVU543
 1682 0096 70BD     		pop	{r4, r5, r6, pc}
 1683              	.LVL124:
 1684              	.L194:
1153:src/keys.c    **** 		else
 1685              		.loc 1 1153 4 is_stmt 1 view .LVU544
1153:src/keys.c    **** 		else
 1686              		.loc 1 1153 57 is_stmt 0 view .LVU545
 1687 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1688 009c 002B     		cmp	r3, #0
 1689 009e 40F25315 		movw	r5, #339
 1690              	.LVL125:
1153:src/keys.c    **** 		else
 1691              		.loc 1 1153 57 view .LVU546
 1692 00a2 A8BF     		it	ge
 1693 00a4 4FF4AA75 		movge	r5, #340
 1694 00a8 F3E7     		b	.L180
 1695              	.LVL126:
 1696              	.L195:
1176:src/keys.c    **** 		if (op & _RARG) {
 1697              		.loc 1 1176 2 is_stmt 1 view .LVU547
1176:src/keys.c    **** 		if (op & _RARG) {
 1698              		.loc 1 1176 5 is_stmt 0 view .LVU548
 1699 00aa 332D     		cmp	r5, #51
ARM GAS  /tmp/ccXySG1f.s 			page 91


 1700 00ac DCD0     		beq	.L178
 1701              	.LVL127:
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1702              		.loc 1 1177 3 is_stmt 1 view .LVU549
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1703              		.loc 1 1177 6 is_stmt 0 view .LVU550
 1704 00ae 2B04     		lsls	r3, r5, #16
 1705 00b0 D4D4     		bmi	.L176
 1706 00b2 EEE7     		b	.L180
 1707              	.LVL128:
 1708              	.L177:
1182:src/keys.c    **** #undef _RARG
 1709              		.loc 1 1182 21 view .LVU551
 1710 00b4 6A04     		lsls	r2, r5, #17
 1711 00b6 D7D4     		bmi	.L178
 1712 00b8 EBE7     		b	.L180
 1713              	.L192:
1168:src/keys.c    **** 			set_pc(0);
 1714              		.loc 1 1168 43 discriminator 2 view .LVU552
 1715 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1716 00be 012B     		cmp	r3, #1
 1717 00c0 C8D1     		bne	.L168
1169:src/keys.c    **** 		break;
 1718              		.loc 1 1169 4 is_stmt 1 view .LVU553
 1719 00c2 FFF7FEFF 		bl	set_pc
 1720              	.LVL129:
 1721 00c6 C5E7     		b	.L168
 1722              	.L197:
 1723              		.align	2
 1724              	.L196:
 1725 00c8 00000000 		.word	.LANCHOR1
 1726 00cc 00000000 		.word	.LANCHOR0
 1727 00d0 00000000 		.word	StateWhileOn
 1728 00d4 00000000 		.word	main_ram
 1729              		.cfi_endproc
 1730              	.LFE21:
 1732              		.section	.text.intltr,"ax",%progbits
 1733              		.align	1
 1734              		.p2align 2,,3
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu fpv4-sp-d16
 1740              	intltr:
 1741              	.LVL130:
 1742              	.LFB18:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1743              		.loc 1 751 26 view -0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 752:src/keys.c    **** }
 1747              		.loc 1 752 2 view .LVU555
 752:src/keys.c    **** }
 1748              		.loc 1 752 10 is_stmt 0 view .LVU556
 1749 0000 0B4B     		ldr	r3, .L207
 1750 0002 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXySG1f.s 			page 92


 1751 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 752:src/keys.c    **** }
 1752              		.loc 1 752 22 view .LVU557
 1753 0008 13F00103 		ands	r3, r3, #1
 1754 000c 05D0     		beq	.L200
 752:src/keys.c    **** }
 1755              		.loc 1 752 26 discriminator 1 view .LVU558
 1756 000e 094B     		ldr	r3, .L207+4
 1757 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 752:src/keys.c    **** }
 1758              		.loc 1 752 22 discriminator 1 view .LVU559
 1759 0012 5B06     		lsls	r3, r3, #25
 1760 0014 03D4     		bmi	.L206
 752:src/keys.c    **** }
 1761              		.loc 1 752 22 view .LVU560
 1762 0016 0120     		movs	r0, #1
 1763              	.LVL131:
 753:src/keys.c    **** 
 1764              		.loc 1 753 1 view .LVU561
 1765 0018 7047     		bx	lr
 1766              	.LVL132:
 1767              	.L200:
 752:src/keys.c    **** }
 1768              		.loc 1 752 22 view .LVU562
 1769 001a 1846     		mov	r0, r3
 1770              	.LVL133:
 752:src/keys.c    **** }
 1771              		.loc 1 752 22 view .LVU563
 1772 001c 7047     		bx	lr
 1773              	.LVL134:
 1774              	.L206:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1775              		.loc 1 751 26 view .LVU564
 1776 001e 10B5     		push	{r4, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 1780 0020 0446     		mov	r4, r0
 1781              	.LVL135:
 1782              	.LBB354:
 1783              	.LBI354:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1784              		.loc 1 751 12 is_stmt 1 view .LVU565
 1785              	.LBB355:
 752:src/keys.c    **** }
 1786              		.loc 1 752 52 is_stmt 0 view .LVU566
 1787 0022 FFF7FEFF 		bl	int_base
 1788              	.LVL136:
 752:src/keys.c    **** }
 1789              		.loc 1 752 43 view .LVU567
 1790 0026 8442     		cmp	r4, r0
 1791 0028 ACBF     		ite	ge
 1792 002a 0020     		movge	r0, #0
 1793 002c 0120     		movlt	r0, #1
 1794              	.LBE355:
 1795              	.LBE354:
 753:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 93


 1796              		.loc 1 753 1 view .LVU568
 1797 002e 10BD     		pop	{r4, pc}
 1798              	.LVL137:
 1799              	.L208:
 753:src/keys.c    **** 
 1800              		.loc 1 753 1 view .LVU569
 1801              		.align	2
 1802              	.L207:
 1803 0030 00000000 		.word	main_ram
 1804 0034 00000000 		.word	StateWhileOn
 1805              		.cfi_endproc
 1806              	.LFE18:
 1808              		.section	.text.process_normal,"ax",%progbits
 1809              		.align	1
 1810              		.p2align 2,,3
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv4-sp-d16
 1816              	process_normal:
 1817              	.LVL138:
 1818              	.LFB19:
 759:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1819              		.loc 1 759 1 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 760:src/keys.c    **** 		// Row 1
 1823              		.loc 1 760 2 view .LVU571
 807:src/keys.c    **** 	int op = op_map[lc];
 1824              		.loc 1 807 2 view .LVU572
 1825              	.LBB356:
 1826              	.LBI356:
 146:src/keys.c    **** {
 1827              		.loc 1 146 12 view .LVU573
 1828              	.LBB357:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1829              		.loc 1 148 2 view .LVU574
 158:src/keys.c    **** }
 1830              		.loc 1 158 2 view .LVU575
 158:src/keys.c    **** }
 1831              		.loc 1 158 2 is_stmt 0 view .LVU576
 1832              	.LBE357:
 1833              	.LBE356:
 808:src/keys.c    **** 	
 1834              		.loc 1 808 2 is_stmt 1 view .LVU577
 813:src/keys.c    **** 	  switch (c) {
 1835              		.loc 1 813 6 is_stmt 0 view .LVU578
 1836 0000 984B     		ldr	r3, .L240
 1837              	.LBB360:
 1838              	.LBB358:
 158:src/keys.c    **** }
 1839              		.loc 1 158 23 view .LVU579
 1840 0002 994A     		ldr	r2, .L240+4
 1841              	.LBE358:
 1842              	.LBE360:
 813:src/keys.c    **** 	  switch (c) {
ARM GAS  /tmp/ccXySG1f.s 			page 94


 1843              		.loc 1 813 6 view .LVU580
 1844 0004 1B68     		ldr	r3, [r3]
 1845              	.LBB361:
 1846              	.LBB359:
 158:src/keys.c    **** }
 1847              		.loc 1 158 23 view .LVU581
 1848 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1849              	.LBE359:
 1850              	.LBE361:
 808:src/keys.c    **** 	
 1851              		.loc 1 808 17 view .LVU582
 1852 0008 984A     		ldr	r2, .L240+8
 813:src/keys.c    **** 	  switch (c) {
 1853              		.loc 1 813 6 view .LVU583
 1854 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 759:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1855              		.loc 1 759 1 view .LVU584
 1856 000e 10B5     		push	{r4, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 4, -8
 1859              		.cfi_offset 14, -4
 808:src/keys.c    **** 	
 1860              		.loc 1 808 17 view .LVU585
 1861 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 813:src/keys.c    **** 	  switch (c) {
 1862              		.loc 1 813 5 view .LVU586
 1863 0014 DB07     		lsls	r3, r3, #31
 808:src/keys.c    **** 	
 1864              		.loc 1 808 6 view .LVU587
 1865 0016 2246     		mov	r2, r4
 1866              	.LVL139:
 812:src/keys.c    **** 	if (UState.intm) {
 1867              		.loc 1 812 2 is_stmt 1 view .LVU588
 813:src/keys.c    **** 	  switch (c) {
 1868              		.loc 1 813 2 view .LVU589
 813:src/keys.c    **** 	  switch (c) {
 1869              		.loc 1 813 5 is_stmt 0 view .LVU590
 1870 0018 42D4     		bmi	.L236
 844:src/keys.c    **** 	  }
 1871              		.loc 1 844 12 is_stmt 1 view .LVU591
 849:src/keys.c    **** #ifdef DM42
 1872              		.loc 1 849 2 view .LVU592
 1873 001a 2D28     		cmp	r0, #45
 1874 001c 3ED8     		bhi	.L209
 1875 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1876              	.L228:
 1877 0022 0801     		.2byte	(.L224-.L228)/2
 1878 0024 0E01     		.2byte	(.L225-.L228)/2
 1879 0026 3D00     		.2byte	(.L209-.L228)/2
 1880 0028 CF00     		.2byte	(.L223-.L228)/2
 1881 002a 3D00     		.2byte	(.L209-.L228)/2
 1882 002c 3D00     		.2byte	(.L209-.L228)/2
 1883 002e 3400     		.2byte	(.L218-.L228)/2
 1884 0030 3400     		.2byte	(.L218-.L228)/2
 1885 0032 3D00     		.2byte	(.L209-.L228)/2
 1886 0034 3D00     		.2byte	(.L209-.L228)/2
 1887 0036 3D00     		.2byte	(.L209-.L228)/2
ARM GAS  /tmp/ccXySG1f.s 			page 95


 1888 0038 3D00     		.2byte	(.L209-.L228)/2
 1889 003a 3D00     		.2byte	(.L209-.L228)/2
 1890 003c 3D00     		.2byte	(.L209-.L228)/2
 1891 003e 3D00     		.2byte	(.L209-.L228)/2
 1892 0040 3D00     		.2byte	(.L209-.L228)/2
 1893 0042 E900     		.2byte	(.L222-.L228)/2
 1894 0044 3D00     		.2byte	(.L209-.L228)/2
 1895 0046 3400     		.2byte	(.L218-.L228)/2
 1896 0048 3D00     		.2byte	(.L209-.L228)/2
 1897 004a 3D00     		.2byte	(.L209-.L228)/2
 1898 004c 3D00     		.2byte	(.L209-.L228)/2
 1899 004e 3D00     		.2byte	(.L209-.L228)/2
 1900 0050 3D00     		.2byte	(.L209-.L228)/2
 1901 0052 3D00     		.2byte	(.L209-.L228)/2
 1902 0054 3D00     		.2byte	(.L209-.L228)/2
 1903 0056 3D00     		.2byte	(.L209-.L228)/2
 1904 0058 3D00     		.2byte	(.L209-.L228)/2
 1905 005a 3D00     		.2byte	(.L209-.L228)/2
 1906 005c 3D00     		.2byte	(.L209-.L228)/2
 1907 005e 3D00     		.2byte	(.L209-.L228)/2
 1908 0060 3D00     		.2byte	(.L209-.L228)/2
 1909 0062 3D00     		.2byte	(.L209-.L228)/2
 1910 0064 3D00     		.2byte	(.L209-.L228)/2
 1911 0066 3D00     		.2byte	(.L209-.L228)/2
 1912 0068 3D00     		.2byte	(.L209-.L228)/2
 1913 006a 3D00     		.2byte	(.L209-.L228)/2
 1914 006c 3D00     		.2byte	(.L209-.L228)/2
 1915 006e 3D00     		.2byte	(.L209-.L228)/2
 1916 0070 3D00     		.2byte	(.L209-.L228)/2
 1917 0072 3D00     		.2byte	(.L209-.L228)/2
 1918 0074 3D00     		.2byte	(.L209-.L228)/2
 1919 0076 3D00     		.2byte	(.L209-.L228)/2
 1920 0078 3D00     		.2byte	(.L209-.L228)/2
 1921 007a F400     		.2byte	(.L221-.L228)/2
 1922 007c C700     		.2byte	(.L227-.L228)/2
 1923              		.p2align 1
 1924              	.L212:
 840:src/keys.c    **** 	    if (intltr(15)) {
 1925              		.loc 1 840 6 view .LVU593
 1926              	.LVL140:
 841:src/keys.c    **** 	      return op_int;
 1927              		.loc 1 841 6 view .LVU594
 841:src/keys.c    **** 	      return op_int;
 1928              		.loc 1 841 10 is_stmt 0 view .LVU595
 1929 007e 0F20     		movs	r0, #15
 1930              	.LVL141:
 841:src/keys.c    **** 	      return op_int;
 1931              		.loc 1 841 10 view .LVU596
 1932 0080 FFF7FEFF 		bl	intltr
 1933              	.LVL142:
 841:src/keys.c    **** 	      return op_int;
 1934              		.loc 1 841 9 view .LVU597
 1935 0084 0028     		cmp	r0, #0
 1936 0086 40F0EB80 		bne	.L237
 1937              	.LVL143:
 1938              	.L218:
 915:src/keys.c    **** 		break;
ARM GAS  /tmp/ccXySG1f.s 			page 96


 1939              		.loc 1 915 3 is_stmt 1 view .LVU598
 1940              	.LBB362:
 1941              	.LBI362:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1942              		.loc 1 552 13 view .LVU599
 1943              	.LBB363:
 553:src/keys.c    **** 		return;
 1944              		.loc 1 553 2 view .LVU600
 553:src/keys.c    **** 		return;
 1945              		.loc 1 553 6 is_stmt 0 view .LVU601
 1946 008a FFF7FEFF 		bl	is_bad_cmdline
 1947              	.LVL144:
 553:src/keys.c    **** 		return;
 1948              		.loc 1 553 5 view .LVU602
 1949 008e 0028     		cmp	r0, #0
 1950 0090 40F09380 		bne	.L235
 1951 0094 E0B2     		uxtb	r0, r4
 1952 0096 FFF7FEFF 		bl	init_arg.part.0
 1953              	.LVL145:
 1954              	.LBE363:
 1955              	.LBE362:
 921:src/keys.c    **** }
 1956              		.loc 1 921 9 view .LVU603
 1957 009a 3322     		movs	r2, #51
 1958              	.LVL146:
 1959              	.L209:
 922:src/keys.c    **** 
 1960              		.loc 1 922 1 view .LVU604
 1961 009c 1046     		mov	r0, r2
 1962 009e 10BD     		pop	{r4, pc}
 1963              	.LVL147:
 1964              	.L236:
 814:src/keys.c    **** 	  case K00:
 1965              		.loc 1 814 4 is_stmt 1 view .LVU605
 1966 00a0 1228     		cmp	r0, #18
 1967 00a2 29D8     		bhi	.L211
 1968 00a4 01A3     		adr	r3, .L213
 1969 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1970 00aa 00BF     		.p2align 2
 1971              	.L213:
 1972 00ac E9010000 		.word	.L216+1
 1973 00b0 DB010000 		.word	.L215+1
 1974 00b4 F9000000 		.word	.L211+1
 1975 00b8 CD010000 		.word	.L214+1
 1976 00bc F9000000 		.word	.L211+1
 1977 00c0 F9000000 		.word	.L211+1
 1978 00c4 F9000000 		.word	.L211+1
 1979 00c8 F9000000 		.word	.L211+1
 1980 00cc F9000000 		.word	.L211+1
 1981 00d0 F9000000 		.word	.L211+1
 1982 00d4 F9000000 		.word	.L211+1
 1983 00d8 F9000000 		.word	.L211+1
 1984 00dc F9000000 		.word	.L211+1
 1985 00e0 F9000000 		.word	.L211+1
 1986 00e4 F9000000 		.word	.L211+1
 1987 00e8 F9000000 		.word	.L211+1
 1988 00ec F9000000 		.word	.L211+1
ARM GAS  /tmp/ccXySG1f.s 			page 97


 1989 00f0 F9000000 		.word	.L211+1
 1990 00f4 7F000000 		.word	.L212+1
 1991              		.p2align 1
 1992              	.L211:
 844:src/keys.c    **** 	  }
 1993              		.loc 1 844 12 view .LVU606
 849:src/keys.c    **** #ifdef DM42
 1994              		.loc 1 849 2 view .LVU607
 1995 00f8 C31E     		subs	r3, r0, #3
 1996 00fa 2A2B     		cmp	r3, #42
 1997 00fc CED8     		bhi	.L209
 1998 00fe 01A1     		adr	r1, .L220
 1999 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2000              		.p2align 2
 2001              	.L220:
 2002 0104 C1010000 		.word	.L223+1
 2003 0108 9D000000 		.word	.L209+1
 2004 010c 9D000000 		.word	.L209+1
 2005 0110 8B000000 		.word	.L218+1
 2006 0114 8B000000 		.word	.L218+1
 2007 0118 9D000000 		.word	.L209+1
 2008 011c 9D000000 		.word	.L209+1
 2009 0120 9D000000 		.word	.L209+1
 2010 0124 9D000000 		.word	.L209+1
 2011 0128 9D000000 		.word	.L209+1
 2012 012c 9D000000 		.word	.L209+1
 2013 0130 9D000000 		.word	.L209+1
 2014 0134 9D000000 		.word	.L209+1
 2015 0138 F5010000 		.word	.L222+1
 2016 013c 9D000000 		.word	.L209+1
 2017 0140 8B000000 		.word	.L218+1
 2018 0144 9D000000 		.word	.L209+1
 2019 0148 9D000000 		.word	.L209+1
 2020 014c 9D000000 		.word	.L209+1
 2021 0150 9D000000 		.word	.L209+1
 2022 0154 9D000000 		.word	.L209+1
 2023 0158 9D000000 		.word	.L209+1
 2024 015c 9D000000 		.word	.L209+1
 2025 0160 9D000000 		.word	.L209+1
 2026 0164 9D000000 		.word	.L209+1
 2027 0168 9D000000 		.word	.L209+1
 2028 016c 9D000000 		.word	.L209+1
 2029 0170 9D000000 		.word	.L209+1
 2030 0174 9D000000 		.word	.L209+1
 2031 0178 9D000000 		.word	.L209+1
 2032 017c 9D000000 		.word	.L209+1
 2033 0180 9D000000 		.word	.L209+1
 2034 0184 9D000000 		.word	.L209+1
 2035 0188 9D000000 		.word	.L209+1
 2036 018c 9D000000 		.word	.L209+1
 2037 0190 9D000000 		.word	.L209+1
 2038 0194 9D000000 		.word	.L209+1
 2039 0198 9D000000 		.word	.L209+1
 2040 019c 9D000000 		.word	.L209+1
 2041 01a0 9D000000 		.word	.L209+1
 2042 01a4 9D000000 		.word	.L209+1
 2043 01a8 0B020000 		.word	.L221+1
ARM GAS  /tmp/ccXySG1f.s 			page 98


 2044 01ac BB010000 		.word	.L235+1
 2045              		.p2align 1
 2046              	.L227:
 897:src/keys.c    **** #else
 2047              		.loc 1 897 4 view .LVU608
 897:src/keys.c    **** #else
 2048              		.loc 1 897 17 is_stmt 0 view .LVU609
 2049 01b0 2F4A     		ldr	r2, .L240+12
 2050              	.LVL148:
 897:src/keys.c    **** #else
 2051              		.loc 1 897 17 view .LVU610
 2052 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2053 01b4 43F00203 		orr	r3, r3, #2
 2054 01b8 5375     		strb	r3, [r2, #21]
 2055              	.LVL149:
 2056              	.L235:
 903:src/keys.c    **** 
 2057              		.loc 1 903 4 is_stmt 1 view .LVU611
 921:src/keys.c    **** }
 2058              		.loc 1 921 9 is_stmt 0 view .LVU612
 2059 01ba 3322     		movs	r2, #51
 922:src/keys.c    **** 
 2060              		.loc 1 922 1 view .LVU613
 2061 01bc 1046     		mov	r0, r2
 2062 01be 10BD     		pop	{r4, pc}
 2063              	.LVL150:
 2064              	.L223:
 856:src/keys.c    **** #else
 2065              		.loc 1 856 3 is_stmt 1 view .LVU614
 856:src/keys.c    **** #else
 2066              		.loc 1 856 10 is_stmt 0 view .LVU615
 2067 01c0 2146     		mov	r1, r4
 2068 01c2 0220     		movs	r0, #2
 922:src/keys.c    **** 
 2069              		.loc 1 922 1 view .LVU616
 2070 01c4 BDE81040 		pop	{r4, lr}
 2071              		.cfi_remember_state
 2072              		.cfi_restore 14
 2073              		.cfi_restore 4
 2074              		.cfi_def_cfa_offset 0
 2075              	.LVL151:
 856:src/keys.c    **** #else
 2076              		.loc 1 856 10 view .LVU617
 2077 01c8 FFF7FEBF 		b	check_f_key
 2078              	.LVL152:
 2079              	.L214:
 2080              		.cfi_restore_state
 832:src/keys.c    **** 	    if (intltr(12)) {
 2081              		.loc 1 832 6 is_stmt 1 view .LVU618
 833:src/keys.c    **** 	      return op_int;
 2082              		.loc 1 833 6 view .LVU619
 833:src/keys.c    **** 	      return op_int;
 2083              		.loc 1 833 10 is_stmt 0 view .LVU620
 2084 01cc 0C20     		movs	r0, #12
 2085              	.LVL153:
 833:src/keys.c    **** 	      return op_int;
 2086              		.loc 1 833 10 view .LVU621
ARM GAS  /tmp/ccXySG1f.s 			page 99


 2087 01ce FFF7FEFF 		bl	intltr
 2088              	.LVL154:
 833:src/keys.c    **** 	      return op_int;
 2089              		.loc 1 833 9 view .LVU622
 2090 01d2 0028     		cmp	r0, #0
 2091 01d4 F4D0     		beq	.L223
 834:src/keys.c    **** 	    }
 2092              		.loc 1 834 15 view .LVU623
 2093 01d6 1122     		movs	r2, #17
 2094 01d8 60E7     		b	.L209
 2095              	.LVL155:
 2096              	.L215:
 824:src/keys.c    **** 	    if (intltr(11)) {
 2097              		.loc 1 824 6 is_stmt 1 view .LVU624
 825:src/keys.c    **** 	      return op;
 2098              		.loc 1 825 6 view .LVU625
 825:src/keys.c    **** 	      return op;
 2099              		.loc 1 825 10 is_stmt 0 view .LVU626
 2100 01da 0B20     		movs	r0, #11
 2101              	.LVL156:
 825:src/keys.c    **** 	      return op;
 2102              		.loc 1 825 10 view .LVU627
 2103 01dc FFF7FEFF 		bl	intltr
 2104              	.LVL157:
 825:src/keys.c    **** 	      return op;
 2105              		.loc 1 825 9 view .LVU628
 2106 01e0 0028     		cmp	r0, #0
 2107 01e2 37D0     		beq	.L238
 826:src/keys.c    **** 	    }
 2108              		.loc 1 826 15 view .LVU629
 2109 01e4 1022     		movs	r2, #16
 2110 01e6 59E7     		b	.L209
 2111              	.LVL158:
 2112              	.L216:
 816:src/keys.c    **** 	    if (intltr(10)) {
 2113              		.loc 1 816 6 is_stmt 1 view .LVU630
 817:src/keys.c    **** 	      return op;
 2114              		.loc 1 817 6 view .LVU631
 817:src/keys.c    **** 	      return op;
 2115              		.loc 1 817 10 is_stmt 0 view .LVU632
 2116 01e8 0A20     		movs	r0, #10
 2117              	.LVL159:
 817:src/keys.c    **** 	      return op;
 2118              		.loc 1 817 10 view .LVU633
 2119 01ea FFF7FEFF 		bl	intltr
 2120              	.LVL160:
 817:src/keys.c    **** 	      return op;
 2121              		.loc 1 817 9 view .LVU634
 2122 01ee 60B3     		cbz	r0, .L239
 818:src/keys.c    **** 	    }
 2123              		.loc 1 818 15 view .LVU635
 2124 01f0 0F22     		movs	r2, #15
 2125 01f2 53E7     		b	.L209
 2126              	.LVL161:
 2127              	.L222:
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2128              		.loc 1 906 3 is_stmt 1 view .LVU636
ARM GAS  /tmp/ccXySG1f.s 			page 100


 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2129              		.loc 1 906 7 is_stmt 0 view .LVU637
 2130 01f4 1E4B     		ldr	r3, .L240+12
 2131 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2132              	.LVL162:
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2133              		.loc 1 906 6 view .LVU638
 2134 01f8 9106     		lsls	r1, r2, #26
 2135 01fa DED4     		bmi	.L235
 908:src/keys.c    **** 			return op;
 2136              		.loc 1 908 3 is_stmt 1 view .LVU639
 908:src/keys.c    **** 			return op;
 2137              		.loc 1 908 7 is_stmt 0 view .LVU640
 2138 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 910:src/keys.c    **** 
 2139              		.loc 1 910 10 view .LVU641
 2140 01fe 13F0400F 		tst	r3, #64
 2141 0202 14BF     		ite	ne
 2142 0204 2246     		movne	r2, r4
 2143 0206 3022     		moveq	r2, #48
 2144 0208 48E7     		b	.L209
 2145              	.LVL163:
 2146              	.L221:
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 880 3 is_stmt 1 view .LVU642
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 880 7 is_stmt 0 view .LVU643
 2149 020a FFF7FEFF 		bl	is_bad_cmdline
 2150              	.LVL164:
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 880 6 view .LVU644
 2152 020e 0028     		cmp	r0, #0
 2153 0210 D3D1     		bne	.L235
 882:src/keys.c    **** 		State2.arrow = 1;
 2154              		.loc 1 882 3 is_stmt 1 view .LVU645
 2155 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2156              	.LVL165:
 883:src/keys.c    **** #ifdef DM42
 2157              		.loc 1 883 3 view .LVU646
 883:src/keys.c    **** #ifdef DM42
 2158              		.loc 1 883 16 is_stmt 0 view .LVU647
 2159 0216 164A     		ldr	r2, .L240+12
 2160 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2161 021a 43F00403 		orr	r3, r3, #4
 2162 021e 5375     		strb	r3, [r2, #21]
 885:src/keys.c    **** 		display_current_menu ();
 2163              		.loc 1 885 3 is_stmt 1 view .LVU648
 2164 0220 0920     		movs	r0, #9
 2165 0222 FFF7FEFF 		bl	set_menu
 2166              	.LVL166:
 886:src/keys.c    **** 		lcd_refresh ();
 2167              		.loc 1 886 3 view .LVU649
 2168 0226 FFF7FEFF 		bl	display_current_menu
 2169              	.LVL167:
 887:src/keys.c    **** #else
 2170              		.loc 1 887 3 view .LVU650
 2171 022a 124B     		ldr	r3, .L240+16
ARM GAS  /tmp/ccXySG1f.s 			page 101


 2172 022c 9847     		blx	r3
 2173              	.LVL168:
 891:src/keys.c    **** 
 2174              		.loc 1 891 3 view .LVU651
 921:src/keys.c    **** }
 2175              		.loc 1 921 9 is_stmt 0 view .LVU652
 2176 022e 3322     		movs	r2, #51
 891:src/keys.c    **** 
 2177              		.loc 1 891 3 view .LVU653
 2178 0230 34E7     		b	.L209
 2179              	.LVL169:
 2180              	.L224:
 852:src/keys.c    **** 	case K01:
 2181              		.loc 1 852 3 is_stmt 1 view .LVU654
 852:src/keys.c    **** 	case K01:
 2182              		.loc 1 852 10 is_stmt 0 view .LVU655
 2183 0232 2146     		mov	r1, r4
 2184 0234 0020     		movs	r0, #0
 2185              	.LVL170:
 922:src/keys.c    **** 
 2186              		.loc 1 922 1 view .LVU656
 2187 0236 BDE81040 		pop	{r4, lr}
 2188              		.cfi_remember_state
 2189              		.cfi_restore 14
 2190              		.cfi_restore 4
 2191              		.cfi_def_cfa_offset 0
 852:src/keys.c    **** 	case K01:
 2192              		.loc 1 852 10 view .LVU657
 2193 023a FFF7FEBF 		b	check_f_key
 2194              	.LVL171:
 2195              	.L225:
 2196              		.cfi_restore_state
 854:src/keys.c    **** 	case K03:
 2197              		.loc 1 854 3 is_stmt 1 view .LVU658
 854:src/keys.c    **** 	case K03:
 2198              		.loc 1 854 10 is_stmt 0 view .LVU659
 2199 023e 2146     		mov	r1, r4
 2200 0240 0120     		movs	r0, #1
 2201              	.LVL172:
 922:src/keys.c    **** 
 2202              		.loc 1 922 1 view .LVU660
 2203 0242 BDE81040 		pop	{r4, lr}
 2204              		.cfi_remember_state
 2205              		.cfi_restore 14
 2206              		.cfi_restore 4
 2207              		.cfi_def_cfa_offset 0
 854:src/keys.c    **** 	case K03:
 2208              		.loc 1 854 10 view .LVU661
 2209 0246 FFF7FEBF 		b	check_f_key
 2210              	.LVL173:
 2211              	.L239:
 2212              		.cfi_restore_state
 821:src/keys.c    **** 	    }
 2213              		.loc 1 821 8 is_stmt 1 view .LVU662
 922:src/keys.c    **** 
 2214              		.loc 1 922 1 is_stmt 0 view .LVU663
 2215 024a BDE81040 		pop	{r4, lr}
ARM GAS  /tmp/ccXySG1f.s 			page 102


 2216              		.cfi_remember_state
 2217              		.cfi_restore 14
 2218              		.cfi_restore 4
 2219              		.cfi_def_cfa_offset 0
 821:src/keys.c    **** 	    }
 2220              		.loc 1 821 15 view .LVU664
 2221 024e 0F21     		movs	r1, #15
 2222 0250 FFF7FEBF 		b	check_f_key
 2223              	.LVL174:
 2224              	.L238:
 2225              		.cfi_restore_state
 829:src/keys.c    **** 	    }
 2226              		.loc 1 829 8 is_stmt 1 view .LVU665
 922:src/keys.c    **** 
 2227              		.loc 1 922 1 is_stmt 0 view .LVU666
 2228 0254 BDE81040 		pop	{r4, lr}
 2229              		.cfi_remember_state
 2230              		.cfi_restore 14
 2231              		.cfi_restore 4
 2232              		.cfi_def_cfa_offset 0
 829:src/keys.c    **** 	    }
 2233              		.loc 1 829 15 view .LVU667
 2234 0258 1021     		movs	r1, #16
 2235 025a 0120     		movs	r0, #1
 2236 025c FFF7FEBF 		b	check_f_key
 2237              	.LVL175:
 2238              	.L237:
 2239              		.cfi_restore_state
 842:src/keys.c    **** 	    }
 2240              		.loc 1 842 15 view .LVU668
 2241 0260 1422     		movs	r2, #20
 2242 0262 1BE7     		b	.L209
 2243              	.L241:
 2244              		.align	2
 2245              	.L240:
 2246 0264 00000000 		.word	main_ram
 2247 0268 00000000 		.word	.LANCHOR1
 2248 026c 00000000 		.word	.LANCHOR2
 2249 0270 00000000 		.word	StateWhileOn
 2250 0274 31020008 		.word	134218289
 2251              		.cfi_endproc
 2252              	.LFE19:
 2254              		.section	.text.process_fg_shifted,"ax",%progbits
 2255              		.align	1
 2256              		.p2align 2,,3
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2260              		.fpu fpv4-sp-d16
 2262              	process_fg_shifted:
 2263              	.LVL176:
 2264              	.LFB20:
 928:src/keys.c    **** 
 2265              		.loc 1 928 48 is_stmt 1 view -0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccXySG1f.s 			page 103


 931:src/keys.c    **** 		// Row 1
 2269              		.loc 1 931 2 view .LVU670
 982:src/keys.c    **** 		STATE_UNFINISHED,
 2270              		.loc 1 982 2 view .LVU671
 989:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2271              		.loc 1 989 2 view .LVU672
 2272              	.LBB364:
 2273              	.LBI364:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2274              		.loc 1 114 13 view .LVU673
 2275              	.LBE364:
 115:src/keys.c    **** }
 2276              		.loc 1 115 2 view .LVU674
 2277              	.LBB381:
 2278              	.LBB365:
 2279              	.LBI365:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2280              		.loc 1 104 20 view .LVU675
 2281              	.LBB366:
 105:src/keys.c    **** 	State2.shifts = shift;
 2282              		.loc 1 105 2 view .LVU676
 2283              	.LBB367:
 2284              	.LBI367:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2285              		.loc 1 96 13 view .LVU677
 2286              	.LBB368:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2287              		.loc 1 97 2 view .LVU678
 2288              	.LBE368:
 2289              	.LBE367:
 2290              	.LBE366:
 2291              	.LBE365:
 2292              	.LBE381:
 928:src/keys.c    **** 
 2293              		.loc 1 928 48 is_stmt 0 view .LVU679
 2294 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2295              		.cfi_def_cfa_offset 24
 2296              		.cfi_offset 4, -24
 2297              		.cfi_offset 5, -20
 2298              		.cfi_offset 6, -16
 2299              		.cfi_offset 7, -12
 2300              		.cfi_offset 8, -8
 2301              		.cfi_offset 14, -4
 928:src/keys.c    **** 
 2302              		.loc 1 928 48 view .LVU680
 2303 0004 0446     		mov	r4, r0
 2304              	.LBB382:
 2305              	.LBB377:
 2306              	.LBB373:
 2307              	.LBB371:
 2308              	.LBB369:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2309              		.loc 1 97 18 view .LVU681
 2310 0006 FFF7FEFF 		bl	shift_down
 2311              	.LVL177:
  98:src/keys.c    **** }
 2312              		.loc 1 98 2 is_stmt 1 view .LVU682
ARM GAS  /tmp/ccXySG1f.s 			page 104


  98:src/keys.c    **** }
 2313              		.loc 1 98 52 is_stmt 0 view .LVU683
 2314 000a 0028     		cmp	r0, #0
 2315 000c 72D0     		beq	.L289
 2316 000e DFF89482 		ldr	r8, .L303+16
 2317 0012 0546     		mov	r5, r0
 2318              	.L243:
 2319              	.LVL178:
  98:src/keys.c    **** }
 2320              		.loc 1 98 52 view .LVU684
 2321              	.LBE369:
 2322              	.LBE371:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2323              		.loc 1 106 2 is_stmt 1 view .LVU685
 2324              	.LBE373:
 2325              	.LBE377:
 2326              	.LBE382:
 2327              	.LBB383:
 2328              	.LBB384:
 158:src/keys.c    **** }
 2329              		.loc 1 158 23 is_stmt 0 view .LVU686
 2330 0014 9F4B     		ldr	r3, .L303
 2331              	.LBE384:
 2332              	.LBE383:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2333              		.loc 1 991 21 view .LVU687
 2334 0016 A049     		ldr	r1, .L303+4
 2335              	.LBB387:
 2336              	.LBB385:
 158:src/keys.c    **** }
 2337              		.loc 1 158 23 view .LVU688
 2338 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2339              	.LBE385:
 2340              	.LBE387:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2341              		.loc 1 991 21 view .LVU689
 2342 001a 4300     		lsls	r3, r0, #1
 2343 001c 022D     		cmp	r5, #2
 2344 001e 08BF     		it	eq
 2345 0020 0133     		addeq	r3, r3, #1
 2346              	.LBB388:
 2347              	.LBB378:
 2348              	.LBB374:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2349              		.loc 1 106 16 view .LVU690
 2350 0022 0022     		movs	r2, #0
 2351              	.LBE374:
 2352              	.LBE378:
 2353              	.LBE388:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2354              		.loc 1 991 21 view .LVU691
 2355 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2356              	.LBB389:
 2357              	.LBB379:
 2358              	.LBB375:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2359              		.loc 1 106 16 view .LVU692
ARM GAS  /tmp/ccXySG1f.s 			page 105


 2360 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2361              		.loc 1 108 2 is_stmt 1 view .LVU693
 2362              	.LVL179:
 108:src/keys.c    **** }
 2363              		.loc 1 108 2 is_stmt 0 view .LVU694
 2364              	.LBE375:
 2365              	.LBE379:
 2366              	.LBE389:
 990:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2367              		.loc 1 990 2 is_stmt 1 view .LVU695
 2368              	.LBB390:
 2369              	.LBI383:
 146:src/keys.c    **** {
 2370              		.loc 1 146 12 view .LVU696
 2371              	.LBB386:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2372              		.loc 1 148 2 view .LVU697
 158:src/keys.c    **** }
 2373              		.loc 1 158 2 view .LVU698
 158:src/keys.c    **** }
 2374              		.loc 1 158 2 is_stmt 0 view .LVU699
 2375              	.LBE386:
 2376              	.LBE390:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2377              		.loc 1 991 2 is_stmt 1 view .LVU700
 992:src/keys.c    **** 	if (no_int)
 2378              		.loc 1 992 2 view .LVU701
 2379 002c 06F47047 		and	r7, r6, #61440
 2380              	.LVL180:
 993:src/keys.c    **** 		op &= ~NO_INT;
 2381              		.loc 1 993 2 view .LVU702
 993:src/keys.c    **** 		op &= ~NO_INT;
 2382              		.loc 1 993 5 is_stmt 0 view .LVU703
 2383 0030 B7F5704F 		cmp	r7, #61440
 2384 0034 63D0     		beq	.L297
 996:src/keys.c    **** 	case K00:
 2385              		.loc 1 996 2 is_stmt 1 view .LVU704
 2386 0036 282C     		cmp	r4, #40
 2387 0038 34D8     		bhi	.L264
 2388 003a DFE804F0 		tbb	[pc, r4]
 2389              	.L265:
 2390 003e D3       		.byte	(.L255-.L265)/2
 2391 003f 39       		.byte	(.L253-.L265)/2
 2392 0040 33       		.byte	(.L264-.L265)/2
 2393 0041 39       		.byte	(.L253-.L265)/2
 2394 0042 33       		.byte	(.L264-.L265)/2
 2395 0043 33       		.byte	(.L264-.L265)/2
 2396 0044 33       		.byte	(.L264-.L265)/2
 2397 0045 33       		.byte	(.L264-.L265)/2
 2398 0046 33       		.byte	(.L264-.L265)/2
 2399 0047 33       		.byte	(.L264-.L265)/2
 2400 0048 33       		.byte	(.L264-.L265)/2
 2401 0049 33       		.byte	(.L264-.L265)/2
 2402 004a 15       		.byte	(.L252-.L265)/2
 2403 004b 33       		.byte	(.L264-.L265)/2
 2404 004c 33       		.byte	(.L264-.L265)/2
ARM GAS  /tmp/ccXySG1f.s 			page 106


 2405 004d 33       		.byte	(.L264-.L265)/2
 2406 004e 33       		.byte	(.L264-.L265)/2
 2407 004f 33       		.byte	(.L264-.L265)/2
 2408 0050 E0       		.byte	(.L251-.L265)/2
 2409 0051 B9       		.byte	(.L250-.L265)/2
 2410 0052 33       		.byte	(.L264-.L265)/2
 2411 0053 33       		.byte	(.L264-.L265)/2
 2412 0054 33       		.byte	(.L264-.L265)/2
 2413 0055 33       		.byte	(.L264-.L265)/2
 2414 0056 33       		.byte	(.L264-.L265)/2
 2415 0057 33       		.byte	(.L264-.L265)/2
 2416 0058 33       		.byte	(.L264-.L265)/2
 2417 0059 33       		.byte	(.L264-.L265)/2
 2418 005a 33       		.byte	(.L264-.L265)/2
 2419 005b 33       		.byte	(.L264-.L265)/2
 2420 005c 44       		.byte	(.L249-.L265)/2
 2421 005d CB       		.byte	(.L248-.L265)/2
 2422 005e 49       		.byte	(.L246-.L265)/2
 2423 005f 49       		.byte	(.L246-.L265)/2
 2424 0060 33       		.byte	(.L264-.L265)/2
 2425 0061 33       		.byte	(.L264-.L265)/2
 2426 0062 33       		.byte	(.L264-.L265)/2
 2427 0063 33       		.byte	(.L264-.L265)/2
 2428 0064 33       		.byte	(.L264-.L265)/2
 2429 0065 49       		.byte	(.L246-.L265)/2
 2430 0066 49       		.byte	(.L246-.L265)/2
 2431 0067 00       		.p2align 1
 2432              	.L252:
1029:src/keys.c    **** 			if (is_bad_cmdline())
 2433              		.loc 1 1029 3 view .LVU705
1029:src/keys.c    **** 			if (is_bad_cmdline())
 2434              		.loc 1 1029 6 is_stmt 0 view .LVU706
 2435 0068 012D     		cmp	r5, #1
 2436 006a 11D1     		bne	.L258
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2437              		.loc 1 1030 4 is_stmt 1 view .LVU707
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2438              		.loc 1 1030 8 is_stmt 0 view .LVU708
 2439 006c FFF7FEFF 		bl	is_bad_cmdline
 2440              	.LVL181:
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2441              		.loc 1 1030 7 view .LVU709
 2442 0070 0028     		cmp	r0, #0
 2443 0072 40F0B380 		bne	.L291
1032:src/keys.c    **** 			State2.alphas = 1;
 2444              		.loc 1 1032 4 is_stmt 1 view .LVU710
 2445 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2446              	.LVL182:
1033:src/keys.c    **** #ifdef DM42
 2447              		.loc 1 1033 4 view .LVU711
1033:src/keys.c    **** #ifdef DM42
 2448              		.loc 1 1033 18 is_stmt 0 view .LVU712
 2449 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1035:src/keys.c    **** 			display_current_menu();
 2450              		.loc 1 1035 4 view .LVU713
 2451 007e 1020     		movs	r0, #16
1033:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccXySG1f.s 			page 107


 2452              		.loc 1 1033 18 view .LVU714
 2453 0080 43F00803 		orr	r3, r3, #8
 2454 0084 88F81630 		strb	r3, [r8, #22]
1035:src/keys.c    **** 			display_current_menu();
 2455              		.loc 1 1035 4 is_stmt 1 view .LVU715
 2456 0088 FFF7FEFF 		bl	set_menu
 2457              	.LVL183:
1036:src/keys.c    **** #endif
 2458              		.loc 1 1036 4 view .LVU716
 2459 008c FFF7FEFF 		bl	display_current_menu
 2460              	.LVL184:
 2461              	.L258:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2462              		.loc 1 1081 2 view .LVU717
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2463              		.loc 1 1081 5 is_stmt 0 view .LVU718
 2464 0090 B7F5704F 		cmp	r7, #61440
 2465 0094 06D1     		bne	.L264
 2466              	.L245:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2467              		.loc 1 1081 13 discriminator 1 view .LVU719
 2468 0096 814B     		ldr	r3, .L303+8
 2469 0098 1B68     		ldr	r3, [r3]
 2470 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2471 009e DA07     		lsls	r2, r3, #31
 2472 00a0 00F19C80 		bmi	.L291
 2473              	.L264:
1084:src/keys.c    **** #undef NO_INT
 2474              		.loc 1 1084 2 is_stmt 1 view .LVU720
 2475              	.LVL185:
 2476              	.LBB391:
 2477              	.LBI391:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2478              		.loc 1 704 12 view .LVU721
 2479              	.LBB392:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2480              		.loc 1 705 2 view .LVU722
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2481              		.loc 1 705 6 is_stmt 0 view .LVU723
 2482 00a4 3312     		asrs	r3, r6, #8
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2483              		.loc 1 705 5 view .LVU724
 2484 00a6 012B     		cmp	r3, #1
 2485 00a8 1FD0     		beq	.L267
 2486              	.LVL186:
 2487              	.L242:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2488              		.loc 1 705 5 view .LVU725
 2489              	.LBE392:
 2490              	.LBE391:
1086:src/keys.c    **** 
 2491              		.loc 1 1086 1 view .LVU726
 2492 00aa 3046     		mov	r0, r6
 2493 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2494              	.LVL187:
 2495              	.L253:
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
ARM GAS  /tmp/ccXySG1f.s 			page 108


 2496              		.loc 1 1018 4 is_stmt 1 view .LVU727
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2497              		.loc 1 1018 8 is_stmt 0 view .LVU728
 2498 00b0 7A4B     		ldr	r3, .L303+8
 2499 00b2 1B68     		ldr	r3, [r3]
 2500 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2501              		.loc 1 1018 7 view .LVU729
 2502 00b8 DB07     		lsls	r3, r3, #31
 2503 00ba 00F19980 		bmi	.L294
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2504              		.loc 1 1081 2 is_stmt 1 view .LVU730
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2505              		.loc 1 1081 5 is_stmt 0 view .LVU731
 2506 00be B7F5704F 		cmp	r7, #61440
 2507 00c2 EFD1     		bne	.L264
 2508 00c4 E7E7     		b	.L245
 2509              	.L249:
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2510              		.loc 1 1061 3 is_stmt 1 view .LVU732
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2511              		.loc 1 1061 18 is_stmt 0 view .LVU733
 2512 00c6 FFF7FEFF 		bl	shift_down
 2513              	.LVL188:
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2514              		.loc 1 1061 6 view .LVU734
 2515 00ca 0028     		cmp	r0, #0
 2516 00cc 40F0BA80 		bne	.L298
 2517              	.L246:
1070:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2518              		.loc 1 1070 3 is_stmt 1 view .LVU735
1070:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2519              		.loc 1 1070 6 is_stmt 0 view .LVU736
 2520 00d0 B6F59C7F 		cmp	r6, #312
 2521 00d4 40F0A580 		bne	.L299
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2522              		.loc 1 1081 2 is_stmt 1 view .LVU737
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2523              		.loc 1 1081 5 is_stmt 0 view .LVU738
 2524 00d8 B7F5704F 		cmp	r7, #61440
 2525 00dc 05D1     		bne	.L267
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2526              		.loc 1 1081 13 view .LVU739
 2527 00de 6F4B     		ldr	r3, .L303+8
 2528 00e0 1B68     		ldr	r3, [r3]
 2529 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2530 00e6 DB07     		lsls	r3, r3, #31
 2531 00e8 78D4     		bmi	.L291
 2532              	.LVL189:
 2533              	.L267:
 2534              	.LBB395:
 2535              	.LBB393:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2536              		.loc 1 1081 13 view .LVU740
 2537 00ea 3046     		mov	r0, r6
 2538              	.LBE393:
 2539              	.LBE395:
ARM GAS  /tmp/ccXySG1f.s 			page 109


1086:src/keys.c    **** 
 2540              		.loc 1 1086 1 view .LVU741
 2541 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2542              		.cfi_remember_state
 2543              		.cfi_restore 14
 2544              		.cfi_restore 8
 2545              		.cfi_restore 7
 2546              		.cfi_restore 6
 2547              		.cfi_restore 5
 2548              		.cfi_restore 4
 2549              		.cfi_def_cfa_offset 0
 2550              	.LVL190:
 2551              	.LBB396:
 2552              	.LBB394:
1086:src/keys.c    **** 
 2553              		.loc 1 1086 1 view .LVU742
 2554 00f0 FFF7FEBF 		b	check_confirm.part.0
 2555              	.LVL191:
 2556              	.L289:
 2557              		.cfi_restore_state
1086:src/keys.c    **** 
 2558              		.loc 1 1086 1 view .LVU743
 2559              	.LBE394:
 2560              	.LBE396:
 2561              	.LBB397:
 2562              	.LBB380:
 2563              	.LBB376:
 2564              	.LBB372:
 2565              	.LBB370:
  98:src/keys.c    **** }
 2566              		.loc 1 98 52 view .LVU744
 2567 00f4 DFF8AC81 		ldr	r8, .L303+16
 2568 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2569 00fc 8AE7     		b	.L243
 2570              	.LVL192:
 2571              	.L297:
  98:src/keys.c    **** }
 2572              		.loc 1 98 52 view .LVU745
 2573              	.LBE370:
 2574              	.LBE372:
 2575              	.LBE376:
 2576              	.LBE380:
 2577              	.LBE397:
 994:src/keys.c    **** 
 2578              		.loc 1 994 3 is_stmt 1 view .LVU746
 994:src/keys.c    **** 
 2579              		.loc 1 994 6 is_stmt 0 view .LVU747
 2580 00fe 26F47046 		bic	r6, r6, #61440
 2581              	.LVL193:
 996:src/keys.c    **** 	case K00:
 2582              		.loc 1 996 2 is_stmt 1 view .LVU748
 2583 0102 282C     		cmp	r4, #40
 2584 0104 C7D8     		bhi	.L245
 2585 0106 01A3     		adr	r3, .L247
 2586 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2587              		.p2align 2
 2588              	.L247:
ARM GAS  /tmp/ccXySG1f.s 			page 110


 2589 010c E5010000 		.word	.L255+1
 2590 0110 B1000000 		.word	.L253+1
 2591 0114 97000000 		.word	.L245+1
 2592 0118 B1000000 		.word	.L253+1
 2593 011c 97000000 		.word	.L245+1
 2594 0120 97000000 		.word	.L245+1
 2595 0124 97000000 		.word	.L245+1
 2596 0128 97000000 		.word	.L245+1
 2597 012c 97000000 		.word	.L245+1
 2598 0130 97000000 		.word	.L245+1
 2599 0134 97000000 		.word	.L245+1
 2600 0138 97000000 		.word	.L245+1
 2601 013c 69000000 		.word	.L252+1
 2602 0140 97000000 		.word	.L245+1
 2603 0144 97000000 		.word	.L245+1
 2604 0148 97000000 		.word	.L245+1
 2605 014c 97000000 		.word	.L245+1
 2606 0150 97000000 		.word	.L245+1
 2607 0154 FF010000 		.word	.L251+1
 2608 0158 B1010000 		.word	.L250+1
 2609 015c 97000000 		.word	.L245+1
 2610 0160 97000000 		.word	.L245+1
 2611 0164 97000000 		.word	.L245+1
 2612 0168 97000000 		.word	.L245+1
 2613 016c 97000000 		.word	.L245+1
 2614 0170 97000000 		.word	.L245+1
 2615 0174 97000000 		.word	.L245+1
 2616 0178 97000000 		.word	.L245+1
 2617 017c 97000000 		.word	.L245+1
 2618 0180 97000000 		.word	.L245+1
 2619 0184 C7000000 		.word	.L249+1
 2620 0188 D5010000 		.word	.L248+1
 2621 018c D1000000 		.word	.L246+1
 2622 0190 D1000000 		.word	.L246+1
 2623 0194 97000000 		.word	.L245+1
 2624 0198 97000000 		.word	.L245+1
 2625 019c 97000000 		.word	.L245+1
 2626 01a0 97000000 		.word	.L245+1
 2627 01a4 97000000 		.word	.L245+1
 2628 01a8 D1000000 		.word	.L246+1
 2629 01ac D1000000 		.word	.L246+1
 2630              		.p2align 1
 2631              	.L250:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2632              		.loc 1 1042 4 view .LVU749
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2633              		.loc 1 1042 7 is_stmt 0 view .LVU750
 2634 01b0 022D     		cmp	r5, #2
 2635 01b2 7FF46DAF 		bne	.L258
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2636              		.loc 1 1042 27 discriminator 1 view .LVU751
 2637 01b6 394B     		ldr	r3, .L303+8
 2638 01b8 1B68     		ldr	r3, [r3]
 2639 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2640 01be DC07     		lsls	r4, r3, #31
 2641 01c0 7FF566AF 		bpl	.L258
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
ARM GAS  /tmp/ccXySG1f.s 			page 111


 2642              		.loc 1 1042 45 discriminator 2 view .LVU752
 2643 01c4 0D20     		movs	r0, #13
 2644              	.LVL194:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2645              		.loc 1 1042 45 discriminator 2 view .LVU753
 2646 01c6 FFF7FEFF 		bl	intltr
 2647              	.LVL195:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2648              		.loc 1 1042 42 discriminator 2 view .LVU754
 2649 01ca 0028     		cmp	r0, #0
 2650 01cc 3FF460AF 		beq	.L258
1043:src/keys.c    **** 	  }
 2651              		.loc 1 1043 13 view .LVU755
 2652 01d0 1226     		movs	r6, #18
 2653              	.LVL196:
1043:src/keys.c    **** 	  }
 2654              		.loc 1 1043 13 view .LVU756
 2655 01d2 6AE7     		b	.L242
 2656              	.LVL197:
 2657              	.L248:
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2658              		.loc 1 1053 3 is_stmt 1 view .LVU757
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2659              		.loc 1 1053 7 is_stmt 0 view .LVU758
 2660 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2661              	.LVL198:
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2662              		.loc 1 1053 6 view .LVU759
 2663 01d8 0028     		cmp	r0, #0
 2664 01da 40D0     		beq	.L300
 2665              	.LVL199:
 2666              	.L291:
1074:src/keys.c    **** 		}
 2667              		.loc 1 1074 11 view .LVU760
 2668 01dc 3326     		movs	r6, #51
 2669              	.LVL200:
1086:src/keys.c    **** 
 2670              		.loc 1 1086 1 view .LVU761
 2671 01de 3046     		mov	r0, r6
 2672 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2673              	.LVL201:
 2674              	.L255:
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2675              		.loc 1 998 4 is_stmt 1 view .LVU762
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2676              		.loc 1 998 8 is_stmt 0 view .LVU763
 2677 01e4 2D4B     		ldr	r3, .L303+8
 2678 01e6 1B68     		ldr	r3, [r3]
 2679 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2680              		.loc 1 998 7 view .LVU764
 2681 01ec DA07     		lsls	r2, r3, #31
 2682 01ee 3CD5     		bpl	.L301
 2683              	.L294:
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2684              		.loc 1 1018 20 discriminator 1 view .LVU765
 2685 01f0 012D     		cmp	r5, #1
ARM GAS  /tmp/ccXySG1f.s 			page 112


 2686 01f2 48D0     		beq	.L302
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2687              		.loc 1 1081 2 is_stmt 1 view .LVU766
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2688              		.loc 1 1081 5 is_stmt 0 view .LVU767
 2689 01f4 B7F5704F 		cmp	r7, #61440
 2690 01f8 7FF454AF 		bne	.L264
 2691 01fc EEE7     		b	.L291
 2692              	.L251:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2693              		.loc 1 1047 4 is_stmt 1 view .LVU768
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2694              		.loc 1 1047 7 is_stmt 0 view .LVU769
 2695 01fe 022D     		cmp	r5, #2
 2696 0200 7FF446AF 		bne	.L258
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2697              		.loc 1 1047 27 discriminator 1 view .LVU770
 2698 0204 254B     		ldr	r3, .L303+8
 2699 0206 1B68     		ldr	r3, [r3]
 2700 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2701 020c D807     		lsls	r0, r3, #31
 2702              	.LVL202:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2703              		.loc 1 1047 27 discriminator 1 view .LVU771
 2704 020e 7FF53FAF 		bpl	.L258
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2705              		.loc 1 1047 45 discriminator 2 view .LVU772
 2706 0212 0E20     		movs	r0, #14
 2707 0214 FFF7FEFF 		bl	intltr
 2708              	.LVL203:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2709              		.loc 1 1047 42 discriminator 2 view .LVU773
 2710 0218 0028     		cmp	r0, #0
 2711 021a 3FF439AF 		beq	.L258
1048:src/keys.c    **** 	  }
 2712              		.loc 1 1048 13 view .LVU774
 2713 021e 1326     		movs	r6, #19
 2714              	.LVL204:
1048:src/keys.c    **** 	  }
 2715              		.loc 1 1048 13 view .LVU775
 2716 0220 43E7     		b	.L242
 2717              	.LVL205:
 2718              	.L299:
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2719              		.loc 1 1071 4 is_stmt 1 view .LVU776
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2720              		.loc 1 1071 7 is_stmt 0 view .LVU777
 2721 0222 B7F5704F 		cmp	r7, #61440
 2722 0226 05D1     		bne	.L263
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2723              		.loc 1 1071 18 discriminator 1 view .LVU778
 2724 0228 1C4B     		ldr	r3, .L303+8
 2725 022a 1B68     		ldr	r3, [r3]
 2726 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2727              		.loc 1 1071 8 discriminator 1 view .LVU779
 2728 0230 D907     		lsls	r1, r3, #31
ARM GAS  /tmp/ccXySG1f.s 			page 113


 2729 0232 D3D4     		bmi	.L291
 2730              	.L263:
1072:src/keys.c    **** 			}
 2731              		.loc 1 1072 5 is_stmt 1 view .LVU780
 2732              	.LVL206:
 2733              	.LBB398:
 2734              	.LBI398:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2735              		.loc 1 552 13 view .LVU781
 2736              	.LBB399:
 553:src/keys.c    **** 		return;
 2737              		.loc 1 553 2 view .LVU782
 553:src/keys.c    **** 		return;
 2738              		.loc 1 553 6 is_stmt 0 view .LVU783
 2739 0234 FFF7FEFF 		bl	is_bad_cmdline
 2740              	.LVL207:
 553:src/keys.c    **** 		return;
 2741              		.loc 1 553 5 view .LVU784
 2742 0238 0028     		cmp	r0, #0
 2743 023a CFD1     		bne	.L291
 2744 023c F0B2     		uxtb	r0, r6
 2745 023e FFF7FEFF 		bl	init_arg.part.0
 2746              	.LVL208:
 2747 0242 CBE7     		b	.L291
 2748              	.LVL209:
 2749              	.L298:
 553:src/keys.c    **** 		return;
 2750              		.loc 1 553 5 view .LVU785
 2751              	.LBE399:
 2752              	.LBE398:
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2753              		.loc 1 1062 4 is_stmt 1 view .LVU786
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2754              		.loc 1 1062 26 is_stmt 0 view .LVU787
 2755 0244 A5F10105 		sub	r5, #1
 2756              	.LVL210:
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2757              		.loc 1 1062 17 view .LVU788
 2758 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2759              		.loc 1 1062 26 view .LVU789
 2760 024c B5FA85F5 		clz	r5, r5
 2761 0250 6D09     		lsrs	r5, r5, #5
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2762              		.loc 1 1062 17 view .LVU790
 2763 0252 65F3C713 		bfi	r3, r5, #7, #1
 2764 0256 88F81730 		strb	r3, [r8, #23]
1063:src/keys.c    **** 		}
 2765              		.loc 1 1063 4 is_stmt 1 view .LVU791
1063:src/keys.c    **** 		}
 2766              		.loc 1 1063 11 is_stmt 0 view .LVU792
 2767 025a 3326     		movs	r6, #51
 2768              	.LVL211:
1063:src/keys.c    **** 		}
 2769              		.loc 1 1063 11 view .LVU793
 2770 025c 25E7     		b	.L242
 2771              	.LVL212:
ARM GAS  /tmp/ccXySG1f.s 			page 114


 2772              	.L300:
1055:src/keys.c    **** 		State2.test = op;
 2773              		.loc 1 1055 3 is_stmt 1 view .LVU794
 2774 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2775              	.LVL213:
1056:src/keys.c    **** 		return STATE_UNFINISHED;
 2776              		.loc 1 1056 3 view .LVU795
1056:src/keys.c    **** 		return STATE_UNFINISHED;
 2777              		.loc 1 1056 15 is_stmt 0 view .LVU796
 2778 0262 88F80F60 		strb	r6, [r8, #15]
1057:src/keys.c    **** 
 2779              		.loc 1 1057 3 is_stmt 1 view .LVU797
1057:src/keys.c    **** 
 2780              		.loc 1 1057 10 is_stmt 0 view .LVU798
 2781 0266 3326     		movs	r6, #51
 2782              	.LVL214:
1057:src/keys.c    **** 
 2783              		.loc 1 1057 10 view .LVU799
 2784 0268 1FE7     		b	.L242
 2785              	.LVL215:
 2786              	.L301:
1000:src/keys.c    **** 	    State2.dot = op;
 2787              		.loc 1 1000 6 is_stmt 1 view .LVU800
1001:src/keys.c    **** 	    // State2.cmplx = 0;
 2788              		.loc 1 1001 6 view .LVU801
1000:src/keys.c    **** 	    State2.dot = op;
 2789              		.loc 1 1000 17 is_stmt 0 view .LVU802
 2790 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2791 026e 06F00103 		and	r3, r6, #1
 2792 0272 9B01     		lsls	r3, r3, #6
 2793 0274 43F02003 		orr	r3, r3, #32
 2794 0278 22F06002 		bic	r2, r2, #96
 2795 027c 1343     		orrs	r3, r3, r2
 2796 027e 88F81530 		strb	r3, [r8, #21]
1003:src/keys.c    **** 	  }
 2797              		.loc 1 1003 6 is_stmt 1 view .LVU803
1003:src/keys.c    **** 	  }
 2798              		.loc 1 1003 13 is_stmt 0 view .LVU804
 2799 0282 3326     		movs	r6, #51
 2800              	.LVL216:
1003:src/keys.c    **** 	  }
 2801              		.loc 1 1003 13 view .LVU805
 2802 0284 11E7     		b	.L242
 2803              	.LVL217:
 2804              	.L302:
1019:src/keys.c    **** 		}
 2805              		.loc 1 1019 4 is_stmt 1 view .LVU806
1019:src/keys.c    **** 		}
 2806              		.loc 1 1019 34 is_stmt 0 view .LVU807
 2807 0286 064B     		ldr	r3, .L303+12
1086:src/keys.c    **** 
 2808              		.loc 1 1086 1 view .LVU808
 2809 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2810              		.cfi_restore 14
 2811              		.cfi_restore 8
 2812              		.cfi_restore 7
 2813              		.cfi_restore 6
ARM GAS  /tmp/ccXySG1f.s 			page 115


 2814              		.cfi_restore 5
 2815              		.cfi_restore 4
 2816              		.cfi_def_cfa_offset 0
 2817              	.LVL218:
1019:src/keys.c    **** 		}
 2818              		.loc 1 1019 11 view .LVU809
 2819 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2820 0290 FFF7FEBF 		b	check_f_key
 2821              	.LVL219:
 2822              	.L304:
1019:src/keys.c    **** 		}
 2823              		.loc 1 1019 11 view .LVU810
 2824              		.align	2
 2825              	.L303:
 2826 0294 00000000 		.word	.LANCHOR1
 2827 0298 00000000 		.word	.LANCHOR3
 2828 029c 00000000 		.word	main_ram
 2829 02a0 00000000 		.word	.LANCHOR4
 2830 02a4 00000000 		.word	StateWhileOn
 2831              		.cfi_endproc
 2832              	.LFE20:
 2834              		.section	.text.set_window,"ax",%progbits
 2835              		.align	1
 2836              		.p2align 2,,3
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2840              		.fpu fpv4-sp-d16
 2842              	set_window:
 2843              	.LVL220:
 2844              	.LFB58:
2978:src/keys.c    **** 
2979:src/keys.c    **** 
2980:src/keys.c    **** /*
2981:src/keys.c    ****  *  CAT command
2982:src/keys.c    ****  */
2983:src/keys.c    **** static int process_labellist(const keycode c) {
2984:src/keys.c    **** 	unsigned int pc = State2.digval;
2985:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2986:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2987:src/keys.c    **** 	const int opcode = getprog(pc);
2988:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2989:src/keys.c    **** 	const int direct = State2.runmode;
2990:src/keys.c    **** 	const enum shifts shift = reset_shift();
2991:src/keys.c    **** 	int op = STATE_UNFINISHED;
2992:src/keys.c    **** 
2993:src/keys.c    **** 	if (n < REGION_XROM) {
2994:src/keys.c    **** 		// Digits take you to that segment
2995:src/keys.c    **** 		pc = addrLIB(1, n);
2996:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2997:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2998:src/keys.c    **** 		State2.digval = pc;
2999:src/keys.c    **** 		return STATE_UNFINISHED;
3000:src/keys.c    **** 	}
3001:src/keys.c    **** 
3002:src/keys.c    **** 	switch (c | (shift << 8)) {
3003:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 116


3004:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3005:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3006:src/keys.c    **** 		goto next;
3007:src/keys.c    **** 
3008:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3009:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3010:src/keys.c    **** 	case K_DOWN:				// Find next label
3011:src/keys.c    **** 	next:
3012:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3013:src/keys.c    **** 		return STATE_UNFINISHED;
3014:src/keys.c    **** 
3015:src/keys.c    **** 	case K_UP:				// Find previous label
3016:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3017:src/keys.c    **** 		return STATE_UNFINISHED;
3018:src/keys.c    **** 
3019:src/keys.c    **** 	case K24:				// <- exits
3020:src/keys.c    **** 		break;
3021:src/keys.c    **** 
3022:src/keys.c    **** 	case K20:				// ENTER^
3023:src/keys.c    **** 	set_pc_and_exit:
3024:src/keys.c    **** 		set_pc(pc);			// forced branch
3025:src/keys.c    **** 		break;
3026:src/keys.c    **** 
3027:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3028:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3029:src/keys.c    **** 		goto set_pc_and_exit;
3030:src/keys.c    **** 
3031:src/keys.c    **** 	case K10:				// STO
3032:src/keys.c    **** 	case K11:				// RCL
3033:src/keys.c    **** 	  //#ifndef DM42	
3034:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3035:src/keys.c    **** 	  //#endif
3036:src/keys.c    **** /* #ifdef DM42 */
3037:src/keys.c    **** /* 	        op = OP_NIL; */
3038:src/keys.c    **** /* #endif	     */
3039:src/keys.c    **** 	  goto set_pc_and_exit;
3040:src/keys.c    **** #ifdef DM42
3041:src/keys.c    **** 	case K05:				// XEQ
3042:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3043:src/keys.c    **** 		goto xeq_or_gto;
3044:src/keys.c    **** 
3045:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3046:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3047:src/keys.c    **** 	xeq_or_gto:
3048:src/keys.c    **** 		if (label)
3049:src/keys.c    **** 			break;
3050:src/keys.c    **** 		return STATE_UNFINISHED;
3051:src/keys.c    **** #else
3052:src/keys.c    **** 	case K30:				// XEQ
3053:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3054:src/keys.c    **** 		goto xeq_or_gto;
3055:src/keys.c    **** 
3056:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3057:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3058:src/keys.c    **** 	xeq_or_gto:
3059:src/keys.c    **** 		if (label)
3060:src/keys.c    **** 			break;
ARM GAS  /tmp/ccXySG1f.s 			page 117


3061:src/keys.c    **** 		return STATE_UNFINISHED;
3062:src/keys.c    **** #endif		
3063:src/keys.c    **** 	case K63:				// R/S
3064:src/keys.c    **** 		if (direct && label) {
3065:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3066:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3067:src/keys.c    **** 			break;
3068:src/keys.c    **** 		}
3069:src/keys.c    **** 		return STATE_UNFINISHED;
3070:src/keys.c    **** 
3071:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3072:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3073:src/keys.c    **** 		goto set_pc_and_exit;
3074:src/keys.c    **** 
3075:src/keys.c    **** 	default:
3076:src/keys.c    **** 		return STATE_UNFINISHED;
3077:src/keys.c    **** 	}
3078:src/keys.c    **** 	State2.digval = 0;
3079:src/keys.c    **** 	State2.labellist = 0;
3080:src/keys.c    **** 	return check_confirm(op);
3081:src/keys.c    **** }
3082:src/keys.c    **** 
3083:src/keys.c    **** 
3084:src/keys.c    **** static void set_window(int c) {
 2845              		.loc 1 3084 31 is_stmt 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
3085:src/keys.c    **** 
3086:src/keys.c    **** 	if (State2.runmode) {
 2849              		.loc 1 3086 2 view .LVU812
3084:src/keys.c    **** 
 2850              		.loc 1 3084 31 is_stmt 0 view .LVU813
 2851 0000 38B5     		push	{r3, r4, r5, lr}
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 3, -16
 2854              		.cfi_offset 4, -12
 2855              		.cfi_offset 5, -8
 2856              		.cfi_offset 14, -4
 2857              		.loc 1 3086 6 view .LVU814
 2858 0002 224C     		ldr	r4, .L320
 2859 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2860              		.loc 1 3086 5 view .LVU815
 2861 0006 5A06     		lsls	r2, r3, #25
 2862 0008 00D4     		bmi	.L317
 2863              	.LVL221:
 2864              	.L305:
3087:src/keys.c    **** 		process_cmdline_set_lift();
3088:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3089:src/keys.c    **** 		State2.disp_freeze = 0;
3090:src/keys.c    **** 		display();	
3091:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3092:src/keys.c    **** 			if (UState.intm) {
3093:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3094:src/keys.c    **** 					State2.window--;
3095:src/keys.c    **** 				return;
3096:src/keys.c    **** 			}
ARM GAS  /tmp/ccXySG1f.s 			page 118


3097:src/keys.c    **** 			else 
3098:src/keys.c    **** 				State2.window = is_dblmode();
3099:src/keys.c    **** 		}
3100:src/keys.c    **** 		else {
3101:src/keys.c    **** 			if (UState.intm) {
3102:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3103:src/keys.c    **** 					State2.window++;
3104:src/keys.c    **** 				return;
3105:src/keys.c    **** 			}
3106:src/keys.c    **** 			else
3107:src/keys.c    **** 				State2.window = 0;
3108:src/keys.c    **** 		}
3109:src/keys.c    **** 		set_smode(SDISP_SHOW);
3110:src/keys.c    **** 	}
3111:src/keys.c    **** }
 2865              		.loc 1 3111 1 view .LVU816
 2866 000a 38BD     		pop	{r3, r4, r5, pc}
 2867              	.LVL222:
 2868              	.L317:
3087:src/keys.c    **** 		process_cmdline_set_lift();
 2869              		.loc 1 3087 3 is_stmt 1 view .LVU817
 2870 000c 0546     		mov	r5, r0
 2871 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2872              	.LVL223:
3089:src/keys.c    **** 		display();	
 2873              		.loc 1 3089 3 view .LVU818
3089:src/keys.c    **** 		display();	
 2874              		.loc 1 3089 22 is_stmt 0 view .LVU819
 2875 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2876 0014 6FF30413 		bfc	r3, #4, #1
 2877 0018 E375     		strb	r3, [r4, #23]
3090:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2878              		.loc 1 3090 3 is_stmt 1 view .LVU820
 2879 001a FFF7FEFF 		bl	display
 2880              	.LVL224:
3091:src/keys.c    **** 			if (UState.intm) {
 2881              		.loc 1 3091 3 view .LVU821
3092:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2882              		.loc 1 3092 8 is_stmt 0 view .LVU822
 2883 001e 1C4B     		ldr	r3, .L320+4
 2884 0020 1B68     		ldr	r3, [r3]
3091:src/keys.c    **** 			if (UState.intm) {
 2885              		.loc 1 3091 6 view .LVU823
 2886 0022 2C2D     		cmp	r5, #44
3092:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2887              		.loc 1 3092 8 view .LVU824
 2888 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
3091:src/keys.c    **** 			if (UState.intm) {
 2889              		.loc 1 3091 6 view .LVU825
 2890 0028 18D0     		beq	.L318
3101:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2891              		.loc 1 3101 4 is_stmt 1 view .LVU826
3101:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2892              		.loc 1 3101 7 is_stmt 0 view .LVU827
 2893 002a 13F00103 		ands	r3, r3, #1
 2894 002e 09D1     		bne	.L319
3107:src/keys.c    **** 		}
ARM GAS  /tmp/ccXySG1f.s 			page 119


 2895              		.loc 1 3107 5 is_stmt 1 view .LVU828
3107:src/keys.c    **** 		}
 2896              		.loc 1 3107 19 is_stmt 0 view .LVU829
 2897 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2898 0032 63F3C502 		bfi	r2, r3, #3, #3
 2899 0036 2275     		strb	r2, [r4, #20]
 2900              	.L311:
3109:src/keys.c    **** 	}
 2901              		.loc 1 3109 3 is_stmt 1 view .LVU830
 2902              	.LVL225:
 2903              	.LBB406:
 2904              	.LBI406:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2905              		.loc 1 731 13 view .LVU831
 2906              	.LBB407:
 732:src/keys.c    **** }
 2907              		.loc 1 732 2 view .LVU832
 732:src/keys.c    **** }
 2908              		.loc 1 732 15 is_stmt 0 view .LVU833
 2909 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2910 003a 013B     		subs	r3, r3, #1
 2911 003c 18BF     		it	ne
 2912 003e 0123     		movne	r3, #1
 2913 0040 6374     		strb	r3, [r4, #17]
 2914              	.LVL226:
 732:src/keys.c    **** }
 2915              		.loc 1 732 15 view .LVU834
 2916              	.LBE407:
 2917              	.LBE406:
 2918              		.loc 1 3111 1 view .LVU835
 2919 0042 38BD     		pop	{r3, r4, r5, pc}
 2920              	.LVL227:
 2921              	.L319:
3102:src/keys.c    **** 					State2.window++;
 2922              		.loc 1 3102 5 is_stmt 1 view .LVU836
3102:src/keys.c    **** 					State2.window++;
 2923              		.loc 1 3102 22 is_stmt 0 view .LVU837
 2924 0044 134A     		ldr	r2, .L320+8
3102:src/keys.c    **** 					State2.window++;
 2925              		.loc 1 3102 42 view .LVU838
 2926 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3102:src/keys.c    **** 					State2.window++;
 2927              		.loc 1 3102 8 view .LVU839
 2928 0048 1168     		ldr	r1, [r2]
3102:src/keys.c    **** 					State2.window++;
 2929              		.loc 1 3102 42 view .LVU840
 2930 004a C3F3C202 		ubfx	r2, r3, #3, #3
3102:src/keys.c    **** 					State2.window++;
 2931              		.loc 1 3102 8 view .LVU841
 2932 004e 8A42     		cmp	r2, r1
 2933 0050 DBDA     		bge	.L305
3103:src/keys.c    **** 				return;
 2934              		.loc 1 3103 6 is_stmt 1 view .LVU842
3103:src/keys.c    **** 				return;
 2935              		.loc 1 3103 19 is_stmt 0 view .LVU843
 2936 0052 0132     		adds	r2, r2, #1
 2937 0054 62F3C503 		bfi	r3, r2, #3, #3
ARM GAS  /tmp/ccXySG1f.s 			page 120


 2938 0058 2375     		strb	r3, [r4, #20]
 2939              		.loc 1 3111 1 view .LVU844
 2940 005a 38BD     		pop	{r3, r4, r5, pc}
 2941              	.LVL228:
 2942              	.L318:
3092:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2943              		.loc 1 3092 4 is_stmt 1 view .LVU845
3092:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2944              		.loc 1 3092 7 is_stmt 0 view .LVU846
 2945 005c DB07     		lsls	r3, r3, #31
 2946 005e 0ED5     		bpl	.L309
 2947              	.LBB408:
 2948              	.LBI408:
3084:src/keys.c    **** 
 2949              		.loc 1 3084 13 is_stmt 1 view .LVU847
 2950              	.LVL229:
 2951              	.LBB409:
3093:src/keys.c    **** 					State2.window--;
 2952              		.loc 1 3093 5 view .LVU848
3093:src/keys.c    **** 					State2.window--;
 2953              		.loc 1 3093 22 is_stmt 0 view .LVU849
 2954 0060 0C4B     		ldr	r3, .L320+8
3093:src/keys.c    **** 					State2.window--;
 2955              		.loc 1 3093 8 view .LVU850
 2956 0062 1B68     		ldr	r3, [r3]
 2957 0064 002B     		cmp	r3, #0
 2958 0066 D0DD     		ble	.L305
3093:src/keys.c    **** 					State2.window--;
 2959              		.loc 1 3093 43 view .LVU851
 2960 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3093:src/keys.c    **** 					State2.window--;
 2961              		.loc 1 3093 26 view .LVU852
 2962 006a 13F0380F 		tst	r3, #56
 2963 006e CCD0     		beq	.L305
3094:src/keys.c    **** 				return;
 2964              		.loc 1 3094 6 is_stmt 1 view .LVU853
3094:src/keys.c    **** 				return;
 2965              		.loc 1 3094 12 is_stmt 0 view .LVU854
 2966 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3094:src/keys.c    **** 				return;
 2967              		.loc 1 3094 19 view .LVU855
 2968 0074 0732     		adds	r2, r2, #7
 2969 0076 62F3C503 		bfi	r3, r2, #3, #3
 2970 007a 2375     		strb	r3, [r4, #20]
 2971              	.LBE409:
 2972              	.LBE408:
 2973              		.loc 1 3111 1 view .LVU856
 2974 007c 38BD     		pop	{r3, r4, r5, pc}
 2975              	.LVL230:
 2976              	.L309:
3098:src/keys.c    **** 		}
 2977              		.loc 1 3098 5 is_stmt 1 view .LVU857
3098:src/keys.c    **** 		}
 2978              		.loc 1 3098 21 is_stmt 0 view .LVU858
 2979 007e FFF7FEFF 		bl	is_dblmode
 2980              	.LVL231:
3098:src/keys.c    **** 		}
ARM GAS  /tmp/ccXySG1f.s 			page 121


 2981              		.loc 1 3098 19 view .LVU859
 2982 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2983 0084 60F3C503 		bfi	r3, r0, #3, #3
 2984 0088 2375     		strb	r3, [r4, #20]
 2985 008a D5E7     		b	.L311
 2986              	.L321:
 2987              		.align	2
 2988              	.L320:
 2989 008c 00000000 		.word	StateWhileOn
 2990 0090 00000000 		.word	main_ram
 2991 0094 00000000 		.word	IntMaxWindow
 2992              		.cfi_endproc
 2993              	.LFE58:
 2995              		.section	.text.arg_storcl,"ax",%progbits
 2996              		.align	1
 2997              		.p2align 2,,3
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3001              		.fpu fpv4-sp-d16
 3003              	arg_storcl:
 3004              	.LVL232:
 3005              	.LFB39:
2010:src/keys.c    **** 	unsigned int b = CmdBase;
 3006              		.loc 1 2010 56 is_stmt 1 view -0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 0
 3009              		@ frame_needed = 0, uses_anonymous_args = 0
 3010              		@ link register save eliminated.
2011:src/keys.c    **** 
 3011              		.loc 1 2011 2 view .LVU861
2011:src/keys.c    **** 
 3012              		.loc 1 2011 19 is_stmt 0 view .LVU862
 3013 0000 0F4A     		ldr	r2, .L354
 3014 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3015              	.LVL233:
2013:src/keys.c    **** 		CmdBase += n;
 3016              		.loc 1 2013 2 is_stmt 1 view .LVU863
 3017              	.LBB418:
 3018              	.LBI418:
2001:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3019              		.loc 1 2001 12 view .LVU864
 3020              	.LBB419:
2006:src/keys.c    **** #endif
 3021              		.loc 1 2006 2 view .LVU865
2006:src/keys.c    **** #endif
 3022              		.loc 1 2006 41 is_stmt 0 view .LVU866
 3023 0004 032B     		cmp	r3, #3
 3024 0006 14D0     		beq	.L323
2006:src/keys.c    **** #endif
 3025              		.loc 1 2006 24 view .LVU867
 3026 0008 0A2B     		cmp	r3, #10
 3027 000a 12D0     		beq	.L323
 3028              	.LVL234:
 3029              	.LBB420:
 3030              	.LBI420:
2001:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
ARM GAS  /tmp/ccXySG1f.s 			page 122


 3031              		.loc 1 2001 12 is_stmt 1 view .LVU868
 3032              	.LBB421:
2006:src/keys.c    **** #endif
 3033              		.loc 1 2006 41 is_stmt 0 view .LVU869
 3034 000c 19B1     		cbz	r1, .L324
2006:src/keys.c    **** #endif
 3035              		.loc 1 2006 51 view .LVU870
 3036 000e 152B     		cmp	r3, #21
 3037 0010 0FD0     		beq	.L323
2006:src/keys.c    **** #endif
 3038              		.loc 1 2006 70 view .LVU871
 3039 0012 1A2B     		cmp	r3, #26
 3040 0014 0DD0     		beq	.L323
 3041              	.L324:
 3042              	.LVL235:
2006:src/keys.c    **** #endif
 3043              		.loc 1 2006 70 view .LVU872
 3044              	.LBE421:
 3045              	.LBE420:
 3046              	.LBE419:
 3047              	.LBE418:
2018:src/keys.c    **** 		b -= n;
 3048              		.loc 1 2018 2 is_stmt 1 view .LVU873
2018:src/keys.c    **** 		b -= n;
 3049              		.loc 1 2018 5 is_stmt 0 view .LVU874
 3050 0016 8342     		cmp	r3, r0
 3051 0018 09D3     		bcc	.L329
2019:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3052              		.loc 1 2019 3 is_stmt 1 view .LVU875
2019:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3053              		.loc 1 2019 5 is_stmt 0 view .LVU876
 3054 001a 1B1A     		subs	r3, r3, r0
 3055              	.LVL236:
2020:src/keys.c    **** 			CmdBase = b;
 3056              		.loc 1 2020 3 is_stmt 1 view .LVU877
 3057              	.LBB422:
 3058              	.LBI422:
2001:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3059              		.loc 1 2001 12 view .LVU878
 3060              	.LBB423:
2006:src/keys.c    **** #endif
 3061              		.loc 1 2006 2 view .LVU879
2006:src/keys.c    **** #endif
 3062              		.loc 1 2006 41 is_stmt 0 view .LVU880
 3063 001c 032B     		cmp	r3, #3
 3064 001e 0CD0     		beq	.L327
2006:src/keys.c    **** #endif
 3065              		.loc 1 2006 24 view .LVU881
 3066 0020 0A2B     		cmp	r3, #10
 3067 0022 0AD0     		beq	.L327
 3068              	.LVL237:
 3069              	.LBB424:
 3070              	.LBI424:
2001:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3071              		.loc 1 2001 12 is_stmt 1 view .LVU882
 3072              	.LBB425:
2006:src/keys.c    **** #endif
ARM GAS  /tmp/ccXySG1f.s 			page 123


 3073              		.loc 1 2006 41 is_stmt 0 view .LVU883
 3074 0024 19B1     		cbz	r1, .L329
2006:src/keys.c    **** #endif
 3075              		.loc 1 2006 51 view .LVU884
 3076 0026 152B     		cmp	r3, #21
 3077 0028 07D0     		beq	.L327
2006:src/keys.c    **** #endif
 3078              		.loc 1 2006 70 view .LVU885
 3079 002a 1A2B     		cmp	r3, #26
 3080 002c 05D0     		beq	.L327
 3081              	.LVL238:
 3082              	.L329:
2006:src/keys.c    **** #endif
 3083              		.loc 1 2006 70 view .LVU886
 3084              	.LBE425:
 3085              	.LBE424:
 3086              	.LBE423:
 3087              	.LBE422:
2025:src/keys.c    **** }
 3088              		.loc 1 2025 9 view .LVU887
 3089 002e 0020     		movs	r0, #0
 3090              	.LVL239:
2026:src/keys.c    **** 
 3091              		.loc 1 2026 1 view .LVU888
 3092 0030 7047     		bx	lr
 3093              	.LVL240:
 3094              	.L323:
2014:src/keys.c    **** 		return 1;
 3095              		.loc 1 2014 3 is_stmt 1 view .LVU889
2014:src/keys.c    **** 		return 1;
 3096              		.loc 1 2014 11 is_stmt 0 view .LVU890
 3097 0032 1844     		add	r0, r0, r3
 3098              	.LVL241:
2014:src/keys.c    **** 		return 1;
 3099              		.loc 1 2014 11 view .LVU891
 3100 0034 D077     		strb	r0, [r2, #31]
2015:src/keys.c    **** 	}
 3101              		.loc 1 2015 3 is_stmt 1 view .LVU892
2015:src/keys.c    **** 	}
 3102              		.loc 1 2015 10 is_stmt 0 view .LVU893
 3103 0036 0120     		movs	r0, #1
 3104 0038 7047     		bx	lr
 3105              	.LVL242:
 3106              	.L327:
2021:src/keys.c    **** 			return 1;
 3107              		.loc 1 2021 4 is_stmt 1 view .LVU894
2021:src/keys.c    **** 			return 1;
 3108              		.loc 1 2021 12 is_stmt 0 view .LVU895
 3109 003a D377     		strb	r3, [r2, #31]
2022:src/keys.c    **** 		}
 3110              		.loc 1 2022 4 is_stmt 1 view .LVU896
2022:src/keys.c    **** 		}
 3111              		.loc 1 2022 11 is_stmt 0 view .LVU897
 3112 003c 0120     		movs	r0, #1
 3113              	.LVL243:
2022:src/keys.c    **** 		}
 3114              		.loc 1 2022 11 view .LVU898
ARM GAS  /tmp/ccXySG1f.s 			page 124


 3115 003e 7047     		bx	lr
 3116              	.L355:
 3117              		.align	2
 3118              	.L354:
 3119 0040 00000000 		.word	StateWhileOn
 3120              		.cfi_endproc
 3121              	.LFE39:
 3123              		.section	.text.process_arg,"ax",%progbits
 3124              		.align	1
 3125              		.p2align 2,,3
 3126              		.syntax unified
 3127              		.thumb
 3128              		.thumb_func
 3129              		.fpu fpv4-sp-d16
 3131              	process_arg:
 3132              	.LVL244:
 3133              	.LFB42:
2060:src/keys.c    **** 	unsigned int base = CmdBase;
 3134              		.loc 1 2060 41 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 8
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
2061:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3138              		.loc 1 2061 2 view .LVU900
2060:src/keys.c    **** 	unsigned int base = CmdBase;
 3139              		.loc 1 2060 41 is_stmt 0 view .LVU901
 3140 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3141              		.cfi_def_cfa_offset 36
 3142              		.cfi_offset 4, -36
 3143              		.cfi_offset 5, -32
 3144              		.cfi_offset 6, -28
 3145              		.cfi_offset 7, -24
 3146              		.cfi_offset 8, -20
 3147              		.cfi_offset 9, -16
 3148              		.cfi_offset 10, -12
 3149              		.cfi_offset 11, -8
 3150              		.cfi_offset 14, -4
2061:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3151              		.loc 1 2061 22 view .LVU902
 3152 0004 C94C     		ldr	r4, .L500
2063:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3153              		.loc 1 2063 31 view .LVU903
 3154 0006 DFF834A3 		ldr	r10, .L500+16
2061:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3155              		.loc 1 2061 22 view .LVU904
 3156 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3157              	.LBB447:
 3158              	.LBB448:
 3159              	.LBB449:
 3160              	.LBB450:
 143:src/keys.c    **** }
 3161              		.loc 1 143 23 view .LVU905
 3162 000c C84A     		ldr	r2, .L500+4
 3163              	.LBE450:
 3164              	.LBE449:
 234:src/keys.c    **** }
 3165              		.loc 1 234 28 view .LVU906
ARM GAS  /tmp/ccXySG1f.s 			page 125


 3166 000e C94E     		ldr	r6, .L500+8
 3167              	.LBB453:
 3168              	.LBB451:
 143:src/keys.c    **** }
 3169              		.loc 1 143 23 view .LVU907
 3170 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3171              	.LBE451:
 3172              	.LBE453:
 3173              	.LBE448:
 3174              	.LBE447:
2064:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3175              		.loc 1 2064 20 view .LVU908
 3176 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3177              	.LBB457:
 3178              	.LBB455:
 234:src/keys.c    **** }
 3179              		.loc 1 234 28 view .LVU909
 3180 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3181              	.LBE455:
 3182              	.LBE457:
2063:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3183              		.loc 1 2063 31 view .LVU910
 3184 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2060:src/keys.c    **** 	unsigned int base = CmdBase;
 3185              		.loc 1 2060 41 view .LVU911
 3186 001c 83B0     		sub	sp, sp, #12
 3187              		.cfi_def_cfa_offset 48
2063:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3188              		.loc 1 2063 31 view .LVU912
 3189 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2061:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3190              		.loc 1 2061 15 view .LVU913
 3191 0020 0095     		str	r5, [sp]
 3192              	.LVL245:
2062:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3193              		.loc 1 2062 2 is_stmt 1 view .LVU914
2063:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3194              		.loc 1 2063 40 is_stmt 0 view .LVU915
 3195 0022 4A07     		lsls	r2, r1, #29
 3196 0024 58BF     		it	pl
 3197 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2064:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3198              		.loc 1 2064 20 view .LVU916
 3199 002a 0193     		str	r3, [sp, #4]
2063:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3200              		.loc 1 2063 40 view .LVU917
 3201 002c 54BF     		ite	pl
 3202 002e 4FEAD878 		lsrpl	r8, r8, #31
 3203 0032 4FF00108 		movmi	r8, #1
2060:src/keys.c    **** 	unsigned int base = CmdBase;
 3204              		.loc 1 2060 41 view .LVU918
 3205 0036 0746     		mov	r7, r0
 3206              	.LVL246:
 3207              	.LBB458:
 3208              	.LBI447:
 210:src/keys.c    **** {
 3209              		.loc 1 210 14 is_stmt 1 view .LVU919
ARM GAS  /tmp/ccXySG1f.s 			page 126


 3210              	.LBB456:
 212:src/keys.c    ****     // K00 - K05
 3211              		.loc 1 212 3 view .LVU920
 234:src/keys.c    **** }
 3212              		.loc 1 234 3 view .LVU921
 3213              	.LBB454:
 3214              	.LBI449:
 131:src/keys.c    **** {
 3215              		.loc 1 131 12 view .LVU922
 3216              	.LBB452:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3217              		.loc 1 133 2 view .LVU923
 143:src/keys.c    **** }
 3218              		.loc 1 143 2 view .LVU924
 143:src/keys.c    **** }
 3219              		.loc 1 143 2 is_stmt 0 view .LVU925
 3220              	.LBE452:
 3221              	.LBE454:
 234:src/keys.c    **** }
 3222              		.loc 1 234 10 view .LVU926
 3223 0038 4E46     		mov	r6, r9
 3224              	.LVL247:
 234:src/keys.c    **** }
 3225              		.loc 1 234 10 view .LVU927
 3226              	.LBE456:
 3227              	.LBE458:
2063:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3228              		.loc 1 2063 2 is_stmt 1 view .LVU928
2064:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3229              		.loc 1 2064 2 view .LVU929
2065:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3230              		.loc 1 2065 2 view .LVU930
 3231              	.LBB459:
 3232              	.LBI459:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3233              		.loc 1 114 13 view .LVU931
 3234              	.LBE459:
 115:src/keys.c    **** }
 3235              		.loc 1 115 2 view .LVU932
 3236              	.LBB472:
 3237              	.LBB460:
 3238              	.LBI460:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3239              		.loc 1 104 20 view .LVU933
 3240              	.LBB461:
 105:src/keys.c    **** 	State2.shifts = shift;
 3241              		.loc 1 105 2 view .LVU934
 3242              	.LBB462:
 3243              	.LBI462:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3244              		.loc 1 96 13 view .LVU935
 3245              	.LBB463:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3246              		.loc 1 97 2 view .LVU936
 3247              	.LBE463:
 3248              	.LBE462:
 3249              	.LBE461:
ARM GAS  /tmp/ccXySG1f.s 			page 127


 3250              	.LBE460:
 3251              	.LBE472:
2063:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3252              		.loc 1 2063 31 is_stmt 0 view .LVU937
 3253 003a 4FEA051B 		lsl	fp, r5, #4
 3254              	.LBB473:
 3255              	.LBB469:
 3256              	.LBB466:
 3257              	.LBB465:
 3258              	.LBB464:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3259              		.loc 1 97 18 view .LVU938
 3260 003e FFF7FEFF 		bl	shift_down
 3261              	.LVL248:
  98:src/keys.c    **** }
 3262              		.loc 1 98 2 is_stmt 1 view .LVU939
  98:src/keys.c    **** }
 3263              		.loc 1 98 52 is_stmt 0 view .LVU940
 3264 0042 00B9     		cbnz	r0, .L358
 3265 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3266              	.LVL249:
 3267              	.L358:
  98:src/keys.c    **** }
 3268              		.loc 1 98 52 view .LVU941
 3269              	.LBE464:
 3270              	.LBE465:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3271              		.loc 1 106 2 is_stmt 1 view .LVU942
 3272              	.LBE466:
 3273              	.LBE469:
 3274              	.LBE473:
2066:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3275              		.loc 1 2066 38 is_stmt 0 view .LVU943
 3276 0046 D344     		add	fp, fp, r10
 3277              	.LBB474:
 3278              	.LBB470:
 3279              	.LBB467:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3280              		.loc 1 106 16 view .LVU944
 3281 0048 4FF0000E 		mov	lr, #0
 3282              	.LBE467:
 3283              	.LBE470:
 3284              	.LBE474:
2066:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3285              		.loc 1 2066 38 view .LVU945
 3286 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3287              	.LBB475:
 3288              	.LBB471:
 3289              	.LBB468:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3290              		.loc 1 106 16 view .LVU946
 3291 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3292              		.loc 1 108 2 is_stmt 1 view .LVU947
 3293              	.LVL250:
 108:src/keys.c    **** }
 3294              		.loc 1 108 2 is_stmt 0 view .LVU948
ARM GAS  /tmp/ccXySG1f.s 			page 128


 3295              	.LBE468:
 3296              	.LBE471:
 3297              	.LBE475:
2066:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3298              		.loc 1 2066 2 is_stmt 1 view .LVU949
2066:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3299              		.loc 1 2066 61 is_stmt 0 view .LVU950
 3300 0054 8B06     		lsls	r3, r1, #26
 3301 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3302 005a 19D5     		bpl	.L359
2066:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3303              		.loc 1 2066 61 discriminator 1 view .LVU951
 3304 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3305 005e 11F0C00F 		tst	r1, #192
 3306 0062 1FD0     		beq	.L488
 3307              	.LVL251:
2070:src/keys.c    **** 	if (base >= NUM_RARG) {
 3308              		.loc 1 2070 2 is_stmt 1 view .LVU952
2071:src/keys.c    **** 		reset_arg();
 3309              		.loc 1 2071 5 is_stmt 0 view .LVU953
 3310 0064 8E2D     		cmp	r5, #142
2070:src/keys.c    **** 	if (base >= NUM_RARG) {
 3311              		.loc 1 2070 4 view .LVU954
 3312 0066 29F08006 		bic	r6, r9, #128
 3313              	.LVL252:
2071:src/keys.c    **** 		reset_arg();
 3314              		.loc 1 2071 2 is_stmt 1 view .LVU955
2071:src/keys.c    **** 		reset_arg();
 3315              		.loc 1 2071 5 is_stmt 0 view .LVU956
 3316 006a 15D8     		bhi	.L388
2066:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3317              		.loc 1 2066 61 view .LVU957
 3318 006c F446     		mov	ip, lr
 3319              	.L368:
2076:src/keys.c    **** 	  switch (n) {
 3320              		.loc 1 2076 35 discriminator 1 view .LVU958
 3321 006e 6169     		ldr	r1, [r4, #20]
 3322 0070 11F4103F 		tst	r1, #147456
 3323 0074 2ED1     		bne	.L370
2077:src/keys.c    **** 	  case regX_idx:
 3324              		.loc 1 2077 4 is_stmt 1 view .LVU959
 3325 0076 672E     		cmp	r6, #103
 3326 0078 2CD8     		bhi	.L370
2077:src/keys.c    **** 	  case regX_idx:
 3327              		.loc 1 2077 4 is_stmt 0 view .LVU960
 3328 007a 632E     		cmp	r6, #99
 3329 007c 24D9     		bls	.L430
 3330 007e 653E     		subs	r6, r6, #101
 3331              	.LVL253:
2077:src/keys.c    **** 	  case regX_idx:
 3332              		.loc 1 2077 4 view .LVU961
 3333 0080 022E     		cmp	r6, #2
 3334 0082 00F26082 		bhi	.L373
 3335 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3336              	.L375:
 3337 008a 1101     		.2byte	(.L377-.L375)/2
 3338 008c 0B01     		.2byte	(.L376-.L375)/2
ARM GAS  /tmp/ccXySG1f.s 			page 129


 3339 008e 1301     		.2byte	(.L374-.L375)/2
 3340              	.LVL254:
 3341              		.p2align 1
 3342              	.L359:
2070:src/keys.c    **** 	if (base >= NUM_RARG) {
 3343              		.loc 1 2070 2 is_stmt 1 view .LVU962
2071:src/keys.c    **** 		reset_arg();
 3344              		.loc 1 2071 5 is_stmt 0 view .LVU963
 3345 0090 8E2D     		cmp	r5, #142
2070:src/keys.c    **** 	if (base >= NUM_RARG) {
 3346              		.loc 1 2070 4 view .LVU964
 3347 0092 29F08006 		bic	r6, r9, #128
 3348              	.LVL255:
2071:src/keys.c    **** 		reset_arg();
 3349              		.loc 1 2071 2 is_stmt 1 view .LVU965
2071:src/keys.c    **** 		reset_arg();
 3350              		.loc 1 2071 5 is_stmt 0 view .LVU966
 3351 0096 EAD9     		bls	.L368
 3352              	.LVL256:
 3353              	.L388:
2326:src/keys.c    **** 	default:
 3354              		.loc 1 2326 3 is_stmt 1 view .LVU967
 3355 0098 FFF7FEFF 		bl	reset_arg
 3356              	.LVL257:
 3357              	.L481:
2330:src/keys.c    **** }
 3358              		.loc 1 2330 9 is_stmt 0 view .LVU968
 3359 009c 3320     		movs	r0, #51
 3360              	.L356:
2331:src/keys.c    **** 
 3361              		.loc 1 2331 1 view .LVU969
 3362 009e 03B0     		add	sp, sp, #12
 3363              		.cfi_remember_state
 3364              		.cfi_def_cfa_offset 36
 3365              		@ sp needed
 3366 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3367              	.LVL258:
 3368              	.L488:
 3369              		.cfi_restore_state
2067:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3370              		.loc 1 2067 2 is_stmt 1 view .LVU970
2067:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3371              		.loc 1 2067 35 is_stmt 0 view .LVU971
 3372 00a4 292F     		cmp	r7, #41
 3373 00a6 00F0C080 		beq	.L361
2068:src/keys.c    **** 
 3374              		.loc 1 2068 11 view .LVU972
 3375 00aa 0128     		cmp	r0, #1
 3376 00ac 00F0D180 		beq	.L362
2068:src/keys.c    **** 
 3377              		.loc 1 2068 32 discriminator 3 view .LVU973
 3378 00b0 B9F1090F 		cmp	r9, #9
 3379 00b4 00F2B680 		bhi	.L363
 3380              	.LVL259:
2070:src/keys.c    **** 	if (base >= NUM_RARG) {
 3381              		.loc 1 2070 2 is_stmt 1 view .LVU974
2071:src/keys.c    **** 		reset_arg();
ARM GAS  /tmp/ccXySG1f.s 			page 130


 3382              		.loc 1 2071 2 view .LVU975
2071:src/keys.c    **** 		reset_arg();
 3383              		.loc 1 2071 5 is_stmt 0 view .LVU976
 3384 00b8 8E2D     		cmp	r5, #142
 3385 00ba EDD8     		bhi	.L388
2076:src/keys.c    **** 	  switch (n) {
 3386              		.loc 1 2076 35 view .LVU977
 3387 00bc 6169     		ldr	r1, [r4, #20]
 3388 00be 11F4103F 		tst	r1, #147456
2066:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3389              		.loc 1 2066 61 view .LVU978
 3390 00c2 4FF0010C 		mov	ip, #1
2076:src/keys.c    **** 	  switch (n) {
 3391              		.loc 1 2076 35 view .LVU979
 3392 00c6 05D1     		bne	.L370
 3393              	.L430:
2077:src/keys.c    **** 	  case regX_idx:
 3394              		.loc 1 2077 4 view .LVU980
 3395 00c8 16B1     		cbz	r6, .L372
 3396 00ca 721F     		subs	r2, r6, #5
 3397 00cc 042A     		cmp	r2, #4
 3398 00ce 01D8     		bhi	.L370
 3399              	.L372:
2092:src/keys.c    **** 	  }
 3400              		.loc 1 2092 6 is_stmt 1 view .LVU981
2092:src/keys.c    **** 	  }
 3401              		.loc 1 2092 13 is_stmt 0 view .LVU982
 3402 00d0 3046     		mov	r0, r6
 3403              	.LVL260:
2092:src/keys.c    **** 	  }
 3404              		.loc 1 2092 13 view .LVU983
 3405 00d2 E6E0     		b	.L482
 3406              	.LVL261:
 3407              	.L370:
2099:src/keys.c    **** 		// row column shorthand addressing
 3408              		.loc 1 2099 2 is_stmt 1 view .LVU984
2105:src/keys.c    **** 		switch ((int)c) {
 3409              		.loc 1 2105 2 view .LVU985
2105:src/keys.c    **** 		switch ((int)c) {
 3410              		.loc 1 2105 5 is_stmt 0 view .LVU986
 3411 00d4 4D2D     		cmp	r5, #77
 3412 00d6 00F0B180 		beq	.L489
2105:src/keys.c    **** 		switch ((int)c) {
 3413              		.loc 1 2105 23 discriminator 1 view .LVU987
 3414 00da 05F17302 		add	r2, r5, #115
 3415 00de D2B2     		uxtb	r2, r2
 3416 00e0 012A     		cmp	r2, #1
 3417 00e2 61D9     		bls	.L490
 3418              	.LVL262:
 3419              	.L379:
2136:src/keys.c    **** #else
 3420              		.loc 1 2136 3 is_stmt 1 view .LVU988
2136:src/keys.c    **** #else
 3421              		.loc 1 2136 11 is_stmt 0 view .LVU989
 3422 00e4 E577     		strb	r5, [r4, #31]
2159:src/keys.c    **** 	case K_F:
 3423              		.loc 1 2159 2 is_stmt 1 view .LVU990
ARM GAS  /tmp/ccXySG1f.s 			page 131


 3424 00e6 2D2F     		cmp	r7, #45
 3425 00e8 D8D8     		bhi	.L481
 3426 00ea 01A3     		adr	r3, .L383
 3427 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3428              		.p2align 2
 3429              	.L383:
 3430 00f0 C1010000 		.word	.L400+1
 3431 00f4 C1010000 		.word	.L400+1
 3432 00f8 C1010000 		.word	.L400+1
 3433 00fc C1010000 		.word	.L400+1
 3434 0100 9D000000 		.word	.L481+1
 3435 0104 9D000000 		.word	.L481+1
 3436 0108 9D000000 		.word	.L481+1
 3437 010c 9D000000 		.word	.L481+1
 3438 0110 C1010000 		.word	.L400+1
 3439 0114 C1010000 		.word	.L400+1
 3440 0118 C1010000 		.word	.L400+1
 3441 011c C1010000 		.word	.L400+1
 3442 0120 45040000 		.word	.L399+1
 3443 0124 9D000000 		.word	.L481+1
 3444 0128 9D000000 		.word	.L481+1
 3445 012c 9D000000 		.word	.L481+1
 3446 0130 C7020000 		.word	.L398+1
 3447 0134 9D000000 		.word	.L481+1
 3448 0138 19020000 		.word	.L397+1
 3449 013c 9D000000 		.word	.L481+1
 3450 0140 9D000000 		.word	.L481+1
 3451 0144 9D000000 		.word	.L481+1
 3452 0148 F3020000 		.word	.L396+1
 3453 014c 9D000000 		.word	.L481+1
 3454 0150 FF020000 		.word	.L395+1
 3455 0154 0B030000 		.word	.L394+1
 3456 0158 9D000000 		.word	.L481+1
 3457 015c 9D000000 		.word	.L481+1
 3458 0160 81020000 		.word	.L393+1
 3459 0164 9D000000 		.word	.L481+1
 3460 0168 9D000000 		.word	.L481+1
 3461 016c 1F030000 		.word	.L392+1
 3462 0170 4D040000 		.word	.L391+1
 3463 0174 41030000 		.word	.L390+1
 3464 0178 4D030000 		.word	.L389+1
 3465 017c 9D000000 		.word	.L481+1
 3466 0180 99000000 		.word	.L388+1
 3467 0184 9D000000 		.word	.L481+1
 3468 0188 67030000 		.word	.L387+1
 3469 018c 9D000000 		.word	.L481+1
 3470 0190 AD030000 		.word	.L386+1
 3471 0194 CD030000 		.word	.L385+1
 3472 0198 9D000000 		.word	.L481+1
 3473 019c 9D000000 		.word	.L481+1
 3474 01a0 ED030000 		.word	.L384+1
 3475 01a4 25040000 		.word	.L382+1
 3476              	.LVL263:
 3477              		.p2align 1
 3478              	.L490:
2106:src/keys.c    **** 		case K_UP:	// up arrow
 3479              		.loc 1 2106 3 view .LVU991
ARM GAS  /tmp/ccXySG1f.s 			page 132


 3480 01a8 122F     		cmp	r7, #18
 3481 01aa 2FD0     		beq	.L426
 3482 01ac 182F     		cmp	r7, #24
 3483 01ae 01D0     		beq	.L427
 3484 01b0 012F     		cmp	r7, #1
 3485 01b2 97D1     		bne	.L379
 3486              	.L427:
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3487              		.loc 1 2122 5 view .LVU992
2126:src/keys.c    **** 		    base = RARG_FIX;
 3488              		.loc 1 2126 5 view .LVU993
2126:src/keys.c    **** 		    base = RARG_FIX;
 3489              		.loc 1 2126 8 is_stmt 0 view .LVU994
 3490 01b4 8D2D     		cmp	r5, #141
 3491 01b6 7DD1     		bne	.L491
 3492 01b8 4D23     		movs	r3, #77
 3493 01ba 0093     		str	r3, [sp]
 3494              	.LVL264:
2127:src/keys.c    **** 		    break;
 3495              		.loc 1 2127 12 view .LVU995
 3496 01bc 1D46     		mov	r5, r3
 3497 01be 91E7     		b	.L379
 3498              	.LVL265:
 3499              	.L400:
2214:src/keys.c    **** 			return arg_eval(n);
 3500              		.loc 1 2214 4 is_stmt 1 view .LVU996
2214:src/keys.c    **** 			return arg_eval(n);
 3501              		.loc 1 2214 8 is_stmt 0 view .LVU997
 3502 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2214:src/keys.c    **** 			return arg_eval(n);
 3503              		.loc 1 2214 7 view .LVU998
 3504 01c2 5306     		lsls	r3, r2, #25
 3505 01c4 6AD4     		bmi	.L415
2214:src/keys.c    **** 			return arg_eval(n);
 3506              		.loc 1 2214 19 discriminator 1 view .LVU999
 3507 01c6 B8F1000F 		cmp	r8, #0
 3508 01ca 67D1     		bne	.L415
2216:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3509              		.loc 1 2216 3 is_stmt 1 view .LVU1000
2216:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3510              		.loc 1 2216 6 is_stmt 0 view .LVU1001
 3511 01cc 032F     		cmp	r7, #3
 3512 01ce 3FF665AF 		bhi	.L481
2217:src/keys.c    **** 		break;
 3513              		.loc 1 2217 4 is_stmt 1 view .LVU1002
 3514              	.LVL266:
 3515              	.LBB476:
 3516              	.LBI476:
1987:src/keys.c    **** 	const unsigned int b = CmdBase;
 3517              		.loc 1 1987 12 view .LVU1003
 3518              	.LBB477:
1988:src/keys.c    **** 
 3519              		.loc 1 1988 2 view .LVU1004
1990:src/keys.c    **** 	{
 3520              		.loc 1 1990 2 view .LVU1005
1990:src/keys.c    **** 	{
 3521              		.loc 1 1990 16 is_stmt 0 view .LVU1006
ARM GAS  /tmp/ccXySG1f.s 			page 133


 3522 01d2 009B     		ldr	r3, [sp]
 3523 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3524 01d8 1801     		lsls	r0, r3, #4
 3525 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1990:src/keys.c    **** 	{
 3526              		.loc 1 1990 5 view .LVU1007
 3527 01dc 8D06     		lsls	r5, r1, #26
 3528 01de 05D4     		bmi	.L406
1990:src/keys.c    **** 	{
 3529              		.loc 1 1990 40 view .LVU1008
 3530 01e0 A3F15109 		sub	r9, r3, #81
1990:src/keys.c    **** 	{
 3531              		.loc 1 1990 23 view .LVU1009
 3532 01e4 B9F10A0F 		cmp	r9, #10
 3533 01e8 3FF658AF 		bhi	.L481
 3534              	.L406:
1992:src/keys.c    **** 			return STATE_UNFINISHED;
 3535              		.loc 1 1992 3 is_stmt 1 view .LVU1010
1992:src/keys.c    **** 			return STATE_UNFINISHED;
 3536              		.loc 1 1992 6 is_stmt 0 view .LVU1011
 3537 01ec 1106     		lsls	r1, r2, #24
 3538 01ee 3FF555AF 		bmi	.L481
1992:src/keys.c    **** 			return STATE_UNFINISHED;
 3539              		.loc 1 1992 18 view .LVU1012
 3540 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3541 01f4 002A     		cmp	r2, #0
 3542 01f6 7FF451AF 		bne	.L481
1994:src/keys.c    **** 			return STATE_UNFINISHED;
 3543              		.loc 1 1994 3 is_stmt 1 view .LVU1013
1994:src/keys.c    **** 			return STATE_UNFINISHED;
 3544              		.loc 1 1994 17 is_stmt 0 view .LVU1014
 3545 01fa 0AEB0003 		add	r3, r10, r0
1994:src/keys.c    **** 			return STATE_UNFINISHED;
 3546              		.loc 1 1994 6 view .LVU1015
 3547 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3548 0200 632B     		cmp	r3, #99
 3549 0202 7FF64BAF 		bls	.L481
1996:src/keys.c    **** 	}
 3550              		.loc 1 1996 3 is_stmt 1 view .LVU1016
1996:src/keys.c    **** 	}
 3551              		.loc 1 1996 10 is_stmt 0 view .LVU1017
 3552 0206 07F16400 		add	r0, r7, #100
 3553 020a 34E0     		b	.L483
 3554              	.LVL267:
 3555              	.L426:
1996:src/keys.c    **** 	}
 3556              		.loc 1 1996 10 view .LVU1018
 3557              	.LBE477:
 3558              	.LBE476:
2108:src/keys.c    **** 		    base = RARG_SIG;
 3559              		.loc 1 2108 5 is_stmt 1 view .LVU1019
2112:src/keys.c    **** 		    base = RARG_SIG0;
 3560              		.loc 1 2112 5 view .LVU1020
2112:src/keys.c    **** 		    base = RARG_SIG0;
 3561              		.loc 1 2112 8 is_stmt 0 view .LVU1021
 3562 020c 8D2D     		cmp	r5, #141
 3563 020e 01D0     		beq	.L476
ARM GAS  /tmp/ccXySG1f.s 			page 134


2116:src/keys.c    **** 		    base = RARG_FIX;
 3564              		.loc 1 2116 5 is_stmt 1 view .LVU1022
2116:src/keys.c    **** 		    base = RARG_FIX;
 3565              		.loc 1 2116 8 is_stmt 0 view .LVU1023
 3566 0210 8E2D     		cmp	r5, #142
 3567 0212 56D0     		beq	.L492
 3568              	.L476:
2136:src/keys.c    **** #else
 3569              		.loc 1 2136 3 is_stmt 1 view .LVU1024
2136:src/keys.c    **** #else
 3570              		.loc 1 2136 11 is_stmt 0 view .LVU1025
 3571 0214 8E23     		movs	r3, #142
 3572              	.LVL268:
 3573              	.L480:
2136:src/keys.c    **** #else
 3574              		.loc 1 2136 11 view .LVU1026
 3575 0216 E377     		strb	r3, [r4, #31]
2159:src/keys.c    **** 	case K_F:
 3576              		.loc 1 2159 2 is_stmt 1 view .LVU1027
 3577              	.L397:
2276:src/keys.c    **** 		break;
 3578              		.loc 1 2276 3 view .LVU1028
 3579 0218 0021     		movs	r1, #0
 3580 021a 0620     		movs	r0, #6
 3581              	.LVL269:
2276:src/keys.c    **** 		break;
 3582              		.loc 1 2276 3 is_stmt 0 view .LVU1029
 3583 021c FFF7FEFF 		bl	arg_storcl
 3584              	.LVL270:
2277:src/keys.c    **** 
 3585              		.loc 1 2277 3 is_stmt 1 view .LVU1030
2330:src/keys.c    **** }
 3586              		.loc 1 2330 9 is_stmt 0 view .LVU1031
 3587 0220 3320     		movs	r0, #51
2277:src/keys.c    **** 
 3588              		.loc 1 2277 3 view .LVU1032
 3589 0222 3CE7     		b	.L356
 3590              	.LVL271:
 3591              	.L363:
2068:src/keys.c    **** 
 3592              		.loc 1 2068 42 discriminator 4 view .LVU1033
 3593 0224 19F0800F 		tst	r9, #128
 3594 0228 13D0     		beq	.L362
 3595              	.L361:
 3596              	.LVL272:
2070:src/keys.c    **** 	if (base >= NUM_RARG) {
 3597              		.loc 1 2070 2 is_stmt 1 view .LVU1034
2071:src/keys.c    **** 		reset_arg();
 3598              		.loc 1 2071 5 is_stmt 0 view .LVU1035
 3599 022a 8E2D     		cmp	r5, #142
2070:src/keys.c    **** 	if (base >= NUM_RARG) {
 3600              		.loc 1 2070 4 view .LVU1036
 3601 022c 29F08006 		bic	r6, r9, #128
 3602              	.LVL273:
2071:src/keys.c    **** 		reset_arg();
 3603              		.loc 1 2071 2 is_stmt 1 view .LVU1037
2066:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
ARM GAS  /tmp/ccXySG1f.s 			page 135


 3604              		.loc 1 2066 61 is_stmt 0 view .LVU1038
 3605 0230 98BF     		it	ls
 3606 0232 4FF0010C 		movls	ip, #1
2071:src/keys.c    **** 		reset_arg();
 3607              		.loc 1 2071 5 view .LVU1039
 3608 0236 7FF61AAF 		bls	.L368
 3609 023a 2DE7     		b	.L388
 3610              	.L489:
2106:src/keys.c    **** 		case K_UP:	// up arrow
 3611              		.loc 1 2106 3 is_stmt 1 view .LVU1040
 3612 023c 122F     		cmp	r7, #18
 3613 023e 00F00B81 		beq	.L438
 3614 0242 182F     		cmp	r7, #24
 3615 0244 02D0     		beq	.L440
 3616 0246 012F     		cmp	r7, #1
 3617 0248 7FF44CAF 		bne	.L379
 3618              	.L440:
 3619 024c 8E25     		movs	r5, #142
 3620              	.LVL274:
2123:src/keys.c    **** 		    break;
 3621              		.loc 1 2123 12 is_stmt 0 view .LVU1041
 3622 024e 0095     		str	r5, [sp]
 3623 0250 48E7     		b	.L379
 3624              	.LVL275:
 3625              	.L362:
2070:src/keys.c    **** 	if (base >= NUM_RARG) {
 3626              		.loc 1 2070 2 is_stmt 1 view .LVU1042
2071:src/keys.c    **** 		reset_arg();
 3627              		.loc 1 2071 2 view .LVU1043
2071:src/keys.c    **** 		reset_arg();
 3628              		.loc 1 2071 5 is_stmt 0 view .LVU1044
 3629 0252 8E2D     		cmp	r5, #142
 3630 0254 3FF620AF 		bhi	.L388
2099:src/keys.c    **** 		// row column shorthand addressing
 3631              		.loc 1 2099 2 is_stmt 1 view .LVU1045
2101:src/keys.c    **** 
 3632              		.loc 1 2101 3 view .LVU1046
 3633              	.LVL276:
 3634              	.LBB478:
 3635              	.LBI478:
 179:src/keys.c    **** {
 3636              		.loc 1 179 5 view .LVU1047
 3637              	.LBB479:
 181:src/keys.c    **** }
 3638              		.loc 1 181 2 view .LVU1048
 181:src/keys.c    **** }
 3639              		.loc 1 181 18 is_stmt 0 view .LVU1049
 3640 0258 374B     		ldr	r3, .L500+12
 3641 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3642              		.loc 1 181 24 view .LVU1050
 3643 025e 03F0FC00 		and	r0, r3, #252
 3644              	.LVL277:
 181:src/keys.c    **** }
 3645              		.loc 1 181 24 view .LVU1051
 3646 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
ARM GAS  /tmp/ccXySG1f.s 			page 136


 3647              		.loc 1 181 18 view .LVU1052
 3648 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3649              		.loc 1 181 24 view .LVU1053
 3650 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3651              		.loc 1 181 33 view .LVU1054
 3652 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3653              		.loc 1 181 12 view .LVU1055
 3654 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3655              		.loc 1 181 33 view .LVU1056
 3656 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3657              	.LBE479:
 3658              	.LBE478:
2101:src/keys.c    **** 
 3659              		.loc 1 2101 10 view .LVU1057
 3660 0274 3844     		add	r0, r0, r7
 3661              	.LVL278:
 3662              	.L483:
2331:src/keys.c    **** 
 3663              		.loc 1 2331 1 view .LVU1058
 3664 0276 03B0     		add	sp, sp, #12
 3665              		.cfi_remember_state
 3666              		.cfi_def_cfa_offset 36
 3667              		@ sp needed
 3668 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3669              		.cfi_restore 14
 3670              		.cfi_restore 11
 3671              		.cfi_restore 10
 3672              		.cfi_restore 9
 3673              		.cfi_restore 8
 3674              		.cfi_restore 7
 3675              		.cfi_restore 6
 3676              		.cfi_restore 5
 3677              		.cfi_restore 4
 3678              		.cfi_def_cfa_offset 0
 3679              	.LVL279:
2101:src/keys.c    **** 
 3680              		.loc 1 2101 10 view .LVU1059
 3681 027c FFF7FEBF 		b	arg_eval
 3682              	.LVL280:
 3683              	.L393:
 3684              		.cfi_restore_state
2236:src/keys.c    **** 			return arg_eval(n);
 3685              		.loc 1 2236 3 is_stmt 1 view .LVU1060
2236:src/keys.c    **** 			return arg_eval(n);
 3686              		.loc 1 2236 7 is_stmt 0 view .LVU1061
 3687 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2236:src/keys.c    **** 			return arg_eval(n);
 3688              		.loc 1 2236 6 view .LVU1062
 3689 0282 5F06     		lsls	r7, r3, #25
 3690 0284 0AD4     		bmi	.L415
2236:src/keys.c    **** 			return arg_eval(n);
 3691              		.loc 1 2236 25 discriminator 1 view .LVU1063
 3692 0286 0121     		movs	r1, #1
ARM GAS  /tmp/ccXySG1f.s 			page 137


 3693 0288 0320     		movs	r0, #3
 3694              	.LVL281:
2236:src/keys.c    **** 			return arg_eval(n);
 3695              		.loc 1 2236 25 discriminator 1 view .LVU1064
 3696 028a FFF7FEFF 		bl	arg_storcl
 3697              	.LVL282:
2236:src/keys.c    **** 			return arg_eval(n);
 3698              		.loc 1 2236 18 discriminator 1 view .LVU1065
 3699 028e 0028     		cmp	r0, #0
 3700 0290 7FF404AF 		bne	.L481
2236:src/keys.c    **** 			return arg_eval(n);
 3701              		.loc 1 2236 63 discriminator 2 view .LVU1066
 3702 0294 B8F1000F 		cmp	r8, #0
 3703 0298 3FF400AF 		beq	.L481
 3704              	.L415:
2237:src/keys.c    **** 		break;
 3705              		.loc 1 2237 4 is_stmt 1 view .LVU1067
2237:src/keys.c    **** 		break;
 3706              		.loc 1 2237 11 is_stmt 0 view .LVU1068
 3707 029c 3046     		mov	r0, r6
 3708 029e EAE7     		b	.L483
 3709              	.LVL283:
 3710              	.L376:
2083:src/keys.c    **** 	  case regT_idx:
 3711              		.loc 1 2083 6 is_stmt 1 view .LVU1069
2083:src/keys.c    **** 	  case regT_idx:
 3712              		.loc 1 2083 13 is_stmt 0 view .LVU1070
 3713 02a0 0320     		movs	r0, #3
 3714              	.LVL284:
 3715              	.L482:
2331:src/keys.c    **** 
 3716              		.loc 1 2331 1 view .LVU1071
 3717 02a2 03B0     		add	sp, sp, #12
 3718              		.cfi_remember_state
 3719              		.cfi_def_cfa_offset 36
 3720              		@ sp needed
 3721 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3722              		.cfi_restore 14
 3723              		.cfi_restore 11
 3724              		.cfi_restore 10
 3725              		.cfi_restore 9
 3726              		.cfi_restore 8
 3727              		.cfi_restore 7
 3728              		.cfi_restore 6
 3729              		.cfi_restore 5
 3730              		.cfi_restore 4
 3731              		.cfi_def_cfa_offset 0
 3732              	.LVL285:
2081:src/keys.c    **** 	  case regZ_idx:
 3733              		.loc 1 2081 13 view .LVU1072
 3734 02a8 FFF7FEBF 		b	arg_digit
 3735              	.LVL286:
 3736              	.L377:
 3737              		.cfi_restore_state
2081:src/keys.c    **** 	  case regZ_idx:
 3738              		.loc 1 2081 6 is_stmt 1 view .LVU1073
2081:src/keys.c    **** 	  case regZ_idx:
ARM GAS  /tmp/ccXySG1f.s 			page 138


 3739              		.loc 1 2081 13 is_stmt 0 view .LVU1074
 3740 02ac 0220     		movs	r0, #2
 3741              	.LVL287:
2081:src/keys.c    **** 	  case regZ_idx:
 3742              		.loc 1 2081 13 view .LVU1075
 3743 02ae F8E7     		b	.L482
 3744              	.LVL288:
 3745              	.L374:
2085:src/keys.c    **** 	  case 5:
 3746              		.loc 1 2085 6 is_stmt 1 view .LVU1076
2085:src/keys.c    **** 	  case 5:
 3747              		.loc 1 2085 13 is_stmt 0 view .LVU1077
 3748 02b0 0420     		movs	r0, #4
 3749              	.LVL289:
2085:src/keys.c    **** 	  case 5:
 3750              		.loc 1 2085 13 view .LVU1078
 3751 02b2 F6E7     		b	.L482
 3752              	.LVL290:
 3753              	.L491:
2130:src/keys.c    **** 		    base = RARG_SIG;
 3754              		.loc 1 2130 5 is_stmt 1 view .LVU1079
2130:src/keys.c    **** 		    base = RARG_SIG;
 3755              		.loc 1 2130 8 is_stmt 0 view .LVU1080
 3756 02b4 8E2D     		cmp	r5, #142
 3757 02b6 40F00B81 		bne	.L436
 3758 02ba 8D23     		movs	r3, #141
 3759 02bc 0093     		str	r3, [sp]
 3760              	.LVL291:
2131:src/keys.c    **** 		    break;
 3761              		.loc 1 2131 12 view .LVU1081
 3762 02be 1D46     		mov	r5, r3
 3763 02c0 10E7     		b	.L379
 3764              	.LVL292:
 3765              	.L492:
2131:src/keys.c    **** 		    break;
 3766              		.loc 1 2131 12 view .LVU1082
 3767 02c2 4D23     		movs	r3, #77
 3768 02c4 A7E7     		b	.L480
 3769              	.LVL293:
 3770              	.L398:
2305:src/keys.c    **** 			if (State2.dot)
 3771              		.loc 1 2305 3 is_stmt 1 view .LVU1083
2305:src/keys.c    **** 			if (State2.dot)
 3772              		.loc 1 2305 13 is_stmt 0 view .LVU1084
 3773 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2305:src/keys.c    **** 			if (State2.dot)
 3774              		.loc 1 2305 6 view .LVU1085
 3775 02c8 002B     		cmp	r3, #0
 3776 02ca 40F0EC80 		bne	.L422
2306:src/keys.c    **** 				State2.dot = 0;
 3777              		.loc 1 2306 4 is_stmt 1 view .LVU1086
2306:src/keys.c    **** 				State2.dot = 0;
 3778              		.loc 1 2306 8 is_stmt 0 view .LVU1087
 3779 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2306:src/keys.c    **** 				State2.dot = 0;
 3780              		.loc 1 2306 7 view .LVU1088
 3781 02d0 13F04001 		ands	r1, r3, #64
ARM GAS  /tmp/ccXySG1f.s 			page 139


 3782 02d4 40F0A080 		bne	.L423
2308:src/keys.c    **** 				State2.local = 0;
 3783              		.loc 1 2308 9 is_stmt 1 view .LVU1089
2308:src/keys.c    **** 				State2.local = 0;
 3784              		.loc 1 2308 13 is_stmt 0 view .LVU1090
 3785 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2308:src/keys.c    **** 				State2.local = 0;
 3786              		.loc 1 2308 12 view .LVU1091
 3787 02da 12F00100 		ands	r0, r2, #1
 3788              	.LVL294:
2308:src/keys.c    **** 				State2.local = 0;
 3789              		.loc 1 2308 12 view .LVU1092
 3790 02de 40F01181 		bne	.L493
2310:src/keys.c    **** 				State2.ind = 0;
 3791              		.loc 1 2310 9 is_stmt 1 view .LVU1093
2310:src/keys.c    **** 				State2.ind = 0;
 3792              		.loc 1 2310 12 is_stmt 0 view .LVU1094
 3793 02e2 1906     		lsls	r1, r3, #24
 3794 02e4 7FF5D8AE 		bpl	.L388
2311:src/keys.c    **** 			else
 3795              		.loc 1 2311 5 is_stmt 1 view .LVU1095
2311:src/keys.c    **** 			else
 3796              		.loc 1 2311 16 is_stmt 0 view .LVU1096
 3797 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3798 02ec 6375     		strb	r3, [r4, #21]
2330:src/keys.c    **** }
 3799              		.loc 1 2330 9 view .LVU1097
 3800 02ee 3320     		movs	r0, #51
 3801 02f0 D5E6     		b	.L356
 3802              	.LVL295:
 3803              	.L396:
2240:src/keys.c    **** 		break;
 3804              		.loc 1 2240 3 is_stmt 1 view .LVU1098
 3805 02f2 0121     		movs	r1, #1
 3806 02f4 0420     		movs	r0, #4
 3807              	.LVL296:
2240:src/keys.c    **** 		break;
 3808              		.loc 1 2240 3 is_stmt 0 view .LVU1099
 3809 02f6 FFF7FEFF 		bl	arg_storcl
 3810              	.LVL297:
2241:src/keys.c    **** #else
 3811              		.loc 1 2241 3 is_stmt 1 view .LVU1100
2330:src/keys.c    **** }
 3812              		.loc 1 2330 9 is_stmt 0 view .LVU1101
 3813 02fa 3320     		movs	r0, #51
2241:src/keys.c    **** #else
 3814              		.loc 1 2241 3 view .LVU1102
 3815 02fc CFE6     		b	.L356
 3816              	.LVL298:
 3817              	.L395:
2280:src/keys.c    **** 		break;
 3818              		.loc 1 2280 3 is_stmt 1 view .LVU1103
 3819 02fe 0021     		movs	r1, #0
 3820 0300 0520     		movs	r0, #5
 3821              	.LVL299:
2280:src/keys.c    **** 		break;
 3822              		.loc 1 2280 3 is_stmt 0 view .LVU1104
ARM GAS  /tmp/ccXySG1f.s 			page 140


 3823 0302 FFF7FEFF 		bl	arg_storcl
 3824              	.LVL300:
2281:src/keys.c    **** 
 3825              		.loc 1 2281 3 is_stmt 1 view .LVU1105
2330:src/keys.c    **** }
 3826              		.loc 1 2330 9 is_stmt 0 view .LVU1106
 3827 0306 3320     		movs	r0, #51
2281:src/keys.c    **** 
 3828              		.loc 1 2281 3 view .LVU1107
 3829 0308 C9E6     		b	.L356
 3830              	.LVL301:
 3831              	.L394:
2183:src/keys.c    **** 	    return process_arg_shuffle(3);
 3832              		.loc 1 2183 4 is_stmt 1 view .LVU1108
2183:src/keys.c    **** 	    return process_arg_shuffle(3);
 3833              		.loc 1 2183 8 is_stmt 0 view .LVU1109
 3834 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2183:src/keys.c    **** 	    return process_arg_shuffle(3);
 3835              		.loc 1 2183 7 view .LVU1110
 3836 030c 9507     		lsls	r5, r2, #30
 3837 030e 7FF557AF 		bpl	.L400
2184:src/keys.c    **** 	case K51:       // X
 3838              		.loc 1 2184 6 is_stmt 1 view .LVU1111
2184:src/keys.c    **** 	case K51:       // X
 3839              		.loc 1 2184 13 is_stmt 0 view .LVU1112
 3840 0312 0320     		movs	r0, #3
 3841              	.LVL302:
 3842              	.L484:
2331:src/keys.c    **** 
 3843              		.loc 1 2331 1 view .LVU1113
 3844 0314 03B0     		add	sp, sp, #12
 3845              		.cfi_remember_state
 3846              		.cfi_def_cfa_offset 36
 3847              		@ sp needed
 3848 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3849              		.cfi_restore 14
 3850              		.cfi_restore 11
 3851              		.cfi_restore 10
 3852              		.cfi_restore 9
 3853              		.cfi_restore 8
 3854              		.cfi_restore 7
 3855              		.cfi_restore 6
 3856              		.cfi_restore 5
 3857              		.cfi_restore 4
 3858              		.cfi_def_cfa_offset 0
 3859              	.LVL303:
2193:src/keys.c    **** #else
 3860              		.loc 1 2193 13 view .LVU1114
 3861 031a FFF7FEBF 		b	process_arg_shuffle
 3862              	.LVL304:
 3863              	.L392:
 3864              		.cfi_restore_state
2186:src/keys.c    **** 	    return process_arg_shuffle(0);
 3865              		.loc 1 2186 4 is_stmt 1 view .LVU1115
2186:src/keys.c    **** 	    return process_arg_shuffle(0);
 3866              		.loc 1 2186 8 is_stmt 0 view .LVU1116
 3867 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 141


2186:src/keys.c    **** 	    return process_arg_shuffle(0);
 3868              		.loc 1 2186 7 view .LVU1117
 3869 0320 9007     		lsls	r0, r2, #30
 3870              	.LVL305:
2186:src/keys.c    **** 	    return process_arg_shuffle(0);
 3871              		.loc 1 2186 7 view .LVU1118
 3872 0322 7FF54DAF 		bpl	.L400
2187:src/keys.c    **** 	case K52:	// Y
 3873              		.loc 1 2187 6 is_stmt 1 view .LVU1119
2187:src/keys.c    **** 	case K52:	// Y
 3874              		.loc 1 2187 13 is_stmt 0 view .LVU1120
 3875 0326 0020     		movs	r0, #0
 3876 0328 F4E7     		b	.L484
 3877              	.L501:
 3878 032a 00BF     		.align	2
 3879              	.L500:
 3880 032c 00000000 		.word	StateWhileOn
 3881 0330 00000000 		.word	.LANCHOR6
 3882 0334 00000000 		.word	.LANCHOR5
 3883 0338 ABAAAAAA 		.word	-1431655765
 3884 033c 00000000 		.word	argcmds
 3885              	.LVL306:
 3886              	.L390:
2192:src/keys.c    **** 	    return process_arg_shuffle(2);
 3887              		.loc 1 2192 4 is_stmt 1 view .LVU1121
2192:src/keys.c    **** 	    return process_arg_shuffle(2);
 3888              		.loc 1 2192 8 is_stmt 0 view .LVU1122
 3889 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2192:src/keys.c    **** 	    return process_arg_shuffle(2);
 3890              		.loc 1 2192 7 view .LVU1123
 3891 0342 9207     		lsls	r2, r2, #30
 3892 0344 7FF53CAF 		bpl	.L400
2193:src/keys.c    **** #else
 3893              		.loc 1 2193 6 is_stmt 1 view .LVU1124
2193:src/keys.c    **** #else
 3894              		.loc 1 2193 13 is_stmt 0 view .LVU1125
 3895 0348 0220     		movs	r0, #2
 3896              	.LVL307:
2193:src/keys.c    **** #else
 3897              		.loc 1 2193 13 view .LVU1126
 3898 034a E3E7     		b	.L484
 3899              	.LVL308:
 3900              	.L389:
2229:src/keys.c    **** 			reset_arg();
 3901              		.loc 1 2229 3 is_stmt 1 view .LVU1127
2229:src/keys.c    **** 			reset_arg();
 3902              		.loc 1 2229 6 is_stmt 0 view .LVU1128
 3903 034c 009B     		ldr	r3, [sp]
 3904 034e 212B     		cmp	r3, #33
 3905 0350 00F0B980 		beq	.L412
2229:src/keys.c    **** 			reset_arg();
 3906              		.loc 1 2229 25 discriminator 1 view .LVU1129
 3907 0354 732B     		cmp	r3, #115
 3908 0356 00F0B680 		beq	.L412
2233:src/keys.c    **** 		break;
 3909              		.loc 1 2233 3 is_stmt 1 view .LVU1130
 3910 035a 0121     		movs	r1, #1
ARM GAS  /tmp/ccXySG1f.s 			page 142


 3911 035c 0220     		movs	r0, #2
 3912              	.LVL309:
2233:src/keys.c    **** 		break;
 3913              		.loc 1 2233 3 is_stmt 0 view .LVU1131
 3914 035e FFF7FEFF 		bl	arg_storcl
 3915              	.LVL310:
2234:src/keys.c    **** 	case K44:		// multiply
 3916              		.loc 1 2234 3 is_stmt 1 view .LVU1132
2330:src/keys.c    **** }
 3917              		.loc 1 2330 9 is_stmt 0 view .LVU1133
 3918 0362 3320     		movs	r0, #51
2234:src/keys.c    **** 	case K44:		// multiply
 3919              		.loc 1 2234 3 view .LVU1134
 3920 0364 9BE6     		b	.L356
 3921              	.LVL311:
 3922              	.L387:
2221:src/keys.c    **** 
 3923              		.loc 1 2221 3 is_stmt 1 view .LVU1135
 3924              	.LBB480:
 3925              	.LBI480:
2028:src/keys.c    **** 
 3926              		.loc 1 2028 12 view .LVU1136
 3927              	.LBB481:
2030:src/keys.c    **** 		// Only valid at beginning of entry
 3928              		.loc 1 2030 2 view .LVU1137
2030:src/keys.c    **** 		// Only valid at beginning of entry
 3929              		.loc 1 2030 5 is_stmt 0 view .LVU1138
 3930 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3931 0368 002A     		cmp	r2, #0
 3932 036a 7FF497AE 		bne	.L481
2032:src/keys.c    **** 			// '..' or ENTER '.' = X
 3933              		.loc 1 2032 3 is_stmt 1 view .LVU1139
2032:src/keys.c    **** 			// '..' or ENTER '.' = X
 3934              		.loc 1 2032 6 is_stmt 0 view .LVU1140
 3935 036e 11F4A03F 		tst	r1, #81920
 3936 0372 40F0C180 		bne	.L494
2037:src/keys.c    **** 			// local register or flag select
 3937              		.loc 1 2037 3 is_stmt 1 view .LVU1141
2037:src/keys.c    **** 			// local register or flag select
 3938              		.loc 1 2037 20 is_stmt 0 view .LVU1142
 3939 0376 009B     		ldr	r3, [sp]
 3940 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3941 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2037:src/keys.c    **** 			// local register or flag select
 3942              		.loc 1 2037 6 view .LVU1143
 3943 037e 1A07     		lsls	r2, r3, #28
 3944 0380 00F1A880 		bmi	.L408
2037:src/keys.c    **** 			// local register or flag select
 3945              		.loc 1 2037 27 view .LVU1144
 3946 0384 94F91530 		ldrsb	r3, [r4, #21]
 3947 0388 002B     		cmp	r3, #0
 3948 038a C0F2A380 		blt	.L408
2041:src/keys.c    **** 			// Special GTO . sequence
 3949              		.loc 1 2041 8 is_stmt 1 view .LVU1145
2041:src/keys.c    **** 			// Special GTO . sequence
 3950              		.loc 1 2041 29 is_stmt 0 view .LVU1146
 3951 038e 009B     		ldr	r3, [sp]
ARM GAS  /tmp/ccXySG1f.s 			page 143


 3952 0390 A3F14409 		sub	r9, r3, #68
2041:src/keys.c    **** 			// Special GTO . sequence
 3953              		.loc 1 2041 11 view .LVU1147
 3954 0394 B9F1010F 		cmp	r9, #1
 3955 0398 3FF680AE 		bhi	.L481
2043:src/keys.c    **** 				State2.gtodot = 1;
 3956              		.loc 1 2043 4 is_stmt 1 view .LVU1148
2044:src/keys.c    **** 				reset_arg();
 3957              		.loc 1 2044 5 view .LVU1149
2044:src/keys.c    **** 				reset_arg();
 3958              		.loc 1 2044 19 is_stmt 0 view .LVU1150
 3959 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3960 039e 43F00103 		orr	r3, r3, #1
 3961 03a2 6375     		strb	r3, [r4, #21]
2045:src/keys.c    **** 			}
 3962              		.loc 1 2045 5 is_stmt 1 view .LVU1151
 3963 03a4 FFF7FEFF 		bl	reset_arg
 3964              	.LVL312:
2049:src/keys.c    **** }
 3965              		.loc 1 2049 9 is_stmt 0 view .LVU1152
 3966 03a8 3320     		movs	r0, #51
 3967 03aa 78E6     		b	.L356
 3968              	.LVL313:
 3969              	.L386:
2049:src/keys.c    **** }
 3970              		.loc 1 2049 9 view .LVU1153
 3971              	.LBE481:
 3972              	.LBE480:
2225:src/keys.c    **** 			return arg_eval(n);
 3973              		.loc 1 2225 3 is_stmt 1 view .LVU1154
2225:src/keys.c    **** 			return arg_eval(n);
 3974              		.loc 1 2225 7 is_stmt 0 view .LVU1155
 3975 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2225:src/keys.c    **** 			return arg_eval(n);
 3976              		.loc 1 2225 6 view .LVU1156
 3977 03ae 5B06     		lsls	r3, r3, #25
 3978 03b0 3FF574AF 		bmi	.L415
2225:src/keys.c    **** 			return arg_eval(n);
 3979              		.loc 1 2225 25 discriminator 1 view .LVU1157
 3980 03b4 0121     		movs	r1, #1
 3981 03b6 0846     		mov	r0, r1
 3982              	.LVL314:
2225:src/keys.c    **** 			return arg_eval(n);
 3983              		.loc 1 2225 25 discriminator 1 view .LVU1158
 3984 03b8 FFF7FEFF 		bl	arg_storcl
 3985              	.LVL315:
2225:src/keys.c    **** 			return arg_eval(n);
 3986              		.loc 1 2225 18 discriminator 1 view .LVU1159
 3987 03bc 0028     		cmp	r0, #0
 3988 03be 7FF46DAE 		bne	.L481
2236:src/keys.c    **** 			return arg_eval(n);
 3989              		.loc 1 2236 63 view .LVU1160
 3990 03c2 B8F1000F 		cmp	r8, #0
 3991 03c6 3FF469AE 		beq	.L481
 3992 03ca 67E7     		b	.L415
 3993              	.LVL316:
 3994              	.L385:
ARM GAS  /tmp/ccXySG1f.s 			page 144


2161:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3995              		.loc 1 2161 3 is_stmt 1 view .LVU1161
2161:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3996              		.loc 1 2161 6 is_stmt 0 view .LVU1162
 3997 03cc BCF1000F 		cmp	ip, #0
 3998 03d0 3FF464AE 		beq	.L481
2162:src/keys.c    **** 		break;
 3999              		.loc 1 2162 4 is_stmt 1 view .LVU1163
 4000              	.LVL317:
 4001              	.LBB484:
 4002              	.LBI484:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4003              		.loc 1 104 20 view .LVU1164
 4004              	.LBB485:
 105:src/keys.c    **** 	State2.shifts = shift;
 4005              		.loc 1 105 2 view .LVU1165
 4006              	.LBB486:
 4007              	.LBI486:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4008              		.loc 1 96 13 view .LVU1166
 4009              	.LBB487:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4010              		.loc 1 97 2 view .LVU1167
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4011              		.loc 1 97 18 is_stmt 0 view .LVU1168
 4012 03d4 FFF7FEFF 		bl	shift_down
 4013              	.LVL318:
  98:src/keys.c    **** }
 4014              		.loc 1 98 2 is_stmt 1 view .LVU1169
 4015              	.LBE487:
 4016              	.LBE486:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4017              		.loc 1 106 2 view .LVU1170
 4018              	.LBE485:
 4019              	.LBE484:
2162:src/keys.c    **** 		break;
 4020              		.loc 1 2162 4 is_stmt 0 view .LVU1171
 4021 03d8 019B     		ldr	r3, [sp, #4]
 4022 03da B3F1010A 		subs	r10, r3, #1
 4023 03de 18BF     		it	ne
 4024 03e0 4FF0010A 		movne	r10, #1
 4025 03e4 84F810A0 		strb	r10, [r4, #16]
 4026              	.LBB490:
 4027              	.LBB488:
 108:src/keys.c    **** }
 4028              		.loc 1 108 2 is_stmt 1 view .LVU1172
 4029              	.LBE488:
 4030              	.LBE490:
2330:src/keys.c    **** }
 4031              		.loc 1 2330 9 is_stmt 0 view .LVU1173
 4032 03e8 3320     		movs	r0, #51
 4033              	.LBB491:
 4034              	.LBB489:
 108:src/keys.c    **** }
 4035              		.loc 1 108 9 view .LVU1174
 4036 03ea 58E6     		b	.L356
 4037              	.LVL319:
ARM GAS  /tmp/ccXySG1f.s 			page 145


 4038              	.L384:
 108:src/keys.c    **** }
 4039              		.loc 1 108 9 view .LVU1175
 4040              	.LBE489:
 4041              	.LBE491:
2166:src/keys.c    **** 			State2.ind = ! State2.ind;
 4042              		.loc 1 2166 3 is_stmt 1 view .LVU1176
2166:src/keys.c    **** 			State2.ind = ! State2.ind;
 4043              		.loc 1 2166 7 is_stmt 0 view .LVU1177
 4044 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2166:src/keys.c    **** 			State2.ind = ! State2.ind;
 4045              		.loc 1 2166 6 view .LVU1178
 4046 03ee 5706     		lsls	r7, r2, #25
 4047 03f0 3FF554AE 		bmi	.L481
2166:src/keys.c    **** 			State2.ind = ! State2.ind;
 4048              		.loc 1 2166 35 discriminator 1 view .LVU1179
 4049 03f4 009B     		ldr	r3, [sp]
 4050 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4051 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2166:src/keys.c    **** 			State2.ind = ! State2.ind;
 4052              		.loc 1 2166 19 discriminator 1 view .LVU1180
 4053 03fe DE07     		lsls	r6, r3, #31
 4054              	.LVL320:
2166:src/keys.c    **** 			State2.ind = ! State2.ind;
 4055              		.loc 1 2166 19 discriminator 1 view .LVU1181
 4056 0400 7FF54CAE 		bpl	.L481
2167:src/keys.c    **** 			if (! stack_reg)
 4057              		.loc 1 2167 4 is_stmt 1 view .LVU1182
2167:src/keys.c    **** 			if (! stack_reg)
 4058              		.loc 1 2167 17 is_stmt 0 view .LVU1183
 4059 0404 D343     		mvns	r3, r2
 4060 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2167:src/keys.c    **** 			if (! stack_reg)
 4061              		.loc 1 2167 15 view .LVU1184
 4062 040a 63F3C712 		bfi	r2, r3, #7, #1
 4063 040e 6275     		strb	r2, [r4, #21]
2168:src/keys.c    **** 				State2.dot = 0;
 4064              		.loc 1 2168 4 is_stmt 1 view .LVU1185
2168:src/keys.c    **** 				State2.dot = 0;
 4065              		.loc 1 2168 7 is_stmt 0 view .LVU1186
 4066 0410 B8F1000F 		cmp	r8, #0
 4067 0414 7FF442AE 		bne	.L481
 4068              	.L423:
2169:src/keys.c    **** 		}
 4069              		.loc 1 2169 5 is_stmt 1 view .LVU1187
2169:src/keys.c    **** 		}
 4070              		.loc 1 2169 16 is_stmt 0 view .LVU1188
 4071 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4072 041a 6FF38613 		bfc	r3, #6, #1
 4073 041e 6375     		strb	r3, [r4, #21]
2330:src/keys.c    **** }
 4074              		.loc 1 2330 9 view .LVU1189
 4075 0420 3320     		movs	r0, #51
 4076              	.LVL321:
2330:src/keys.c    **** }
 4077              		.loc 1 2330 9 view .LVU1190
 4078 0422 3CE6     		b	.L356
ARM GAS  /tmp/ccXySG1f.s 			page 146


 4079              	.LVL322:
 4080              	.L382:
2174:src/keys.c    **** 			break;
 4081              		.loc 1 2174 3 is_stmt 1 view .LVU1191
2174:src/keys.c    **** 			break;
 4082              		.loc 1 2174 18 is_stmt 0 view .LVU1192
 4083 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2174:src/keys.c    **** 			break;
 4084              		.loc 1 2174 6 view .LVU1193
 4085 0426 13F0C00F 		tst	r3, #192
 4086 042a 7FF437AE 		bne	.L481
2176:src/keys.c    **** 			CmdBase = RARG_STOM;
 4087              		.loc 1 2176 3 is_stmt 1 view .LVU1194
2176:src/keys.c    **** 			CmdBase = RARG_STOM;
 4088              		.loc 1 2176 6 is_stmt 0 view .LVU1195
 4089 042e 009B     		ldr	r3, [sp]
 4090 0430 032B     		cmp	r3, #3
 4091 0432 5DD0     		beq	.L495
2178:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4092              		.loc 1 2178 8 is_stmt 1 view .LVU1196
2178:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4093              		.loc 1 2178 11 is_stmt 0 view .LVU1197
 4094 0434 009B     		ldr	r3, [sp]
 4095 0436 0A2B     		cmp	r3, #10
 4096 0438 7FF430AE 		bne	.L481
2179:src/keys.c    **** 		break;
 4097              		.loc 1 2179 4 is_stmt 1 view .LVU1198
2179:src/keys.c    **** 		break;
 4098              		.loc 1 2179 12 is_stmt 0 view .LVU1199
 4099 043c 7823     		movs	r3, #120
 4100 043e E377     		strb	r3, [r4, #31]
2330:src/keys.c    **** }
 4101              		.loc 1 2330 9 view .LVU1200
 4102 0440 3320     		movs	r0, #51
 4103              	.LVL323:
2330:src/keys.c    **** }
 4104              		.loc 1 2330 9 view .LVU1201
 4105 0442 2CE6     		b	.L356
 4106              	.LVL324:
 4107              	.L399:
2284:src/keys.c    **** 			if (argcmds[base].label) {
 4108              		.loc 1 2284 3 is_stmt 1 view .LVU1202
2284:src/keys.c    **** 			if (argcmds[base].label) {
 4109              		.loc 1 2284 6 is_stmt 0 view .LVU1203
 4110 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4111 0446 4AB1     		cbz	r2, .L496
2298:src/keys.c    **** 			return arg_eval(State2.digval);
 4112              		.loc 1 2298 10 is_stmt 1 view .LVU1204
2299:src/keys.c    **** 		else if (stack_reg)
 4113              		.loc 1 2299 4 view .LVU1205
2299:src/keys.c    **** 		else if (stack_reg)
 4114              		.loc 1 2299 11 is_stmt 0 view .LVU1206
 4115 0448 2089     		ldrh	r0, [r4, #8]
 4116              	.LVL325:
2299:src/keys.c    **** 		else if (stack_reg)
 4117              		.loc 1 2299 11 view .LVU1207
 4118 044a 14E7     		b	.L483
ARM GAS  /tmp/ccXySG1f.s 			page 147


 4119              	.LVL326:
 4120              	.L391:
2189:src/keys.c    **** 	    return process_arg_shuffle(1);
 4121              		.loc 1 2189 4 is_stmt 1 view .LVU1208
2189:src/keys.c    **** 	    return process_arg_shuffle(1);
 4122              		.loc 1 2189 8 is_stmt 0 view .LVU1209
 4123 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2189:src/keys.c    **** 	    return process_arg_shuffle(1);
 4124              		.loc 1 2189 7 view .LVU1210
 4125 044e 9107     		lsls	r1, r2, #30
 4126 0450 7FF5B6AE 		bpl	.L400
2190:src/keys.c    **** 	case K53:       // Z
 4127              		.loc 1 2190 6 is_stmt 1 view .LVU1211
2190:src/keys.c    **** 	case K53:       // Z
 4128              		.loc 1 2190 13 is_stmt 0 view .LVU1212
 4129 0454 0120     		movs	r0, #1
 4130              	.LVL327:
2190:src/keys.c    **** 	case K53:       // Z
 4131              		.loc 1 2190 13 view .LVU1213
 4132 0456 5DE7     		b	.L484
 4133              	.LVL328:
 4134              	.L438:
2106:src/keys.c    **** 		case K_UP:	// up arrow
 4135              		.loc 1 2106 3 view .LVU1214
 4136 0458 8D23     		movs	r3, #141
 4137              	.LVL329:
2136:src/keys.c    **** #else
 4138              		.loc 1 2136 3 is_stmt 1 view .LVU1215
 4139 045a DCE6     		b	.L480
 4140              	.L496:
2284:src/keys.c    **** 			if (argcmds[base].label) {
 4141              		.loc 1 2284 43 is_stmt 0 discriminator 1 view .LVU1216
 4142 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4143 045e 12F0C00F 		tst	r2, #192
 4144 0462 13D1     		bne	.L417
2285:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4145              		.loc 1 2285 4 is_stmt 1 view .LVU1217
2285:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4146              		.loc 1 2285 21 is_stmt 0 view .LVU1218
 4147 0464 009B     		ldr	r3, [sp]
 4148 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4149 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2285:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4150              		.loc 1 2285 7 view .LVU1219
 4151 046c 9E06     		lsls	r6, r3, #26
 4152              	.LVL330:
2285:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4153              		.loc 1 2285 7 view .LVU1220
 4154 046e 4ED4     		bmi	.L497
2290:src/keys.c    **** 				reset_arg();
 4155              		.loc 1 2290 11 is_stmt 1 view .LVU1221
2290:src/keys.c    **** 				reset_arg();
 4156              		.loc 1 2290 14 is_stmt 0 view .LVU1222
 4157 0470 0099     		ldr	r1, [sp]
 4158 0472 4E29     		cmp	r1, #78
 4159 0474 5DD0     		beq	.L498
2293:src/keys.c    **** 				reset_arg();
ARM GAS  /tmp/ccXySG1f.s 			page 148


 4160              		.loc 1 2293 11 is_stmt 1 view .LVU1223
2293:src/keys.c    **** 				reset_arg();
 4161              		.loc 1 2293 14 is_stmt 0 view .LVU1224
 4162 0476 0099     		ldr	r1, [sp]
 4163 0478 4F29     		cmp	r1, #79
 4164 047a 5FD0     		beq	.L499
2296:src/keys.c    **** 				State2.dot = 1;
 4165              		.loc 1 2296 11 is_stmt 1 view .LVU1225
2296:src/keys.c    **** 				State2.dot = 1;
 4166              		.loc 1 2296 14 is_stmt 0 view .LVU1226
 4167 047c 5807     		lsls	r0, r3, #29
 4168              	.LVL331:
2296:src/keys.c    **** 				State2.dot = 1;
 4169              		.loc 1 2296 14 view .LVU1227
 4170 047e 7FF50DAE 		bpl	.L481
2297:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4171              		.loc 1 2297 5 is_stmt 1 view .LVU1228
2297:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4172              		.loc 1 2297 16 is_stmt 0 view .LVU1229
 4173 0482 42F04002 		orr	r2, r2, #64
 4174 0486 6275     		strb	r2, [r4, #21]
2330:src/keys.c    **** }
 4175              		.loc 1 2330 9 view .LVU1230
 4176 0488 3320     		movs	r0, #51
 4177 048a 08E6     		b	.L356
 4178              	.LVL332:
 4179              	.L417:
2298:src/keys.c    **** 			return arg_eval(State2.digval);
 4180              		.loc 1 2298 10 is_stmt 1 view .LVU1231
2300:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4181              		.loc 1 2300 8 view .LVU1232
2300:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4182              		.loc 1 2300 11 is_stmt 0 view .LVU1233
 4183 048c B8F1000F 		cmp	r8, #0
 4184 0490 3FF404AE 		beq	.L481
2301:src/keys.c    **** 		break;
 4185              		.loc 1 2301 4 is_stmt 1 view .LVU1234
2301:src/keys.c    **** 		break;
 4186              		.loc 1 2301 27 is_stmt 0 view .LVU1235
 4187 0494 C2F38013 		ubfx	r3, r2, #6, #1
2301:src/keys.c    **** 		break;
 4188              		.loc 1 2301 19 view .LVU1236
 4189 0498 C3F10103 		rsb	r3, r3, #1
2301:src/keys.c    **** 		break;
 4190              		.loc 1 2301 15 view .LVU1237
 4191 049c 63F38612 		bfi	r2, r3, #6, #1
 4192 04a0 6275     		strb	r2, [r4, #21]
2330:src/keys.c    **** }
 4193              		.loc 1 2330 9 view .LVU1238
 4194 04a2 3320     		movs	r0, #51
 4195              	.LVL333:
2330:src/keys.c    **** }
 4196              		.loc 1 2330 9 view .LVU1239
 4197 04a4 FBE5     		b	.L356
 4198              	.LVL334:
 4199              	.L422:
2316:src/keys.c    **** 			if (State2.shuffle)
ARM GAS  /tmp/ccXySG1f.s 			page 149


 4200              		.loc 1 2316 4 is_stmt 1 view .LVU1240
2317:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4201              		.loc 1 2317 8 is_stmt 0 view .LVU1241
 4202 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2316:src/keys.c    **** 			if (State2.shuffle)
 4203              		.loc 1 2316 4 view .LVU1242
 4204 04a8 013B     		subs	r3, r3, #1
 4205 04aa DBB2     		uxtb	r3, r3
2317:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4206              		.loc 1 2317 7 view .LVU1243
 4207 04ac 9207     		lsls	r2, r2, #30
2316:src/keys.c    **** 			if (State2.shuffle)
 4208              		.loc 1 2316 4 view .LVU1244
 4209 04ae E372     		strb	r3, [r4, #11]
2317:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4210              		.loc 1 2317 4 is_stmt 1 view .LVU1245
2317:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4211              		.loc 1 2317 7 is_stmt 0 view .LVU1246
 4212 04b0 16D5     		bpl	.L425
2318:src/keys.c    **** 			else
 4213              		.loc 1 2318 5 is_stmt 1 view .LVU1247
2318:src/keys.c    **** 			else
 4214              		.loc 1 2318 19 is_stmt 0 view .LVU1248
 4215 04b2 2289     		ldrh	r2, [r4, #8]
2318:src/keys.c    **** 			else
 4216              		.loc 1 2318 46 view .LVU1249
 4217 04b4 5B00     		lsls	r3, r3, #1
2318:src/keys.c    **** 			else
 4218              		.loc 1 2318 26 view .LVU1250
 4219 04b6 0321     		movs	r1, #3
 4220 04b8 01FA03F3 		lsl	r3, r1, r3
2318:src/keys.c    **** 			else
 4221              		.loc 1 2318 19 view .LVU1251
 4222 04bc 22EA0303 		bic	r3, r2, r3
 4223 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2330:src/keys.c    **** }
 4224              		.loc 1 2330 9 view .LVU1252
 4225 04c2 3320     		movs	r0, #51
 4226              	.LVL335:
2330:src/keys.c    **** }
 4227              		.loc 1 2330 9 view .LVU1253
 4228 04c4 EBE5     		b	.L356
 4229              	.LVL336:
 4230              	.L412:
2230:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4231              		.loc 1 2230 4 is_stmt 1 view .LVU1254
 4232 04c6 FFF7FEFF 		bl	reset_arg
 4233              	.LVL337:
2231:src/keys.c    **** 		}
 4234              		.loc 1 2231 4 view .LVU1255
2231:src/keys.c    **** 		}
 4235              		.loc 1 2231 11 is_stmt 0 view .LVU1256
 4236 04ca 40F27510 		movw	r0, #373
 4237 04ce E6E5     		b	.L356
 4238              	.LVL338:
 4239              	.L436:
2231:src/keys.c    **** 		}
ARM GAS  /tmp/ccXySG1f.s 			page 150


 4240              		.loc 1 2231 11 view .LVU1257
 4241 04d0 8E25     		movs	r5, #142
 4242              	.LVL339:
2231:src/keys.c    **** 		}
 4243              		.loc 1 2231 11 view .LVU1258
 4244 04d2 07E6     		b	.L379
 4245              	.LVL340:
 4246              	.L408:
 4247              	.LBB492:
 4248              	.LBB482:
2039:src/keys.c    **** 		}
 4249              		.loc 1 2039 4 is_stmt 1 view .LVU1259
2039:src/keys.c    **** 		}
 4250              		.loc 1 2039 17 is_stmt 0 view .LVU1260
 4251 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4252 04d6 43F00103 		orr	r3, r3, #1
 4253 04da A375     		strb	r3, [r4, #22]
2049:src/keys.c    **** }
 4254              		.loc 1 2049 9 view .LVU1261
 4255 04dc 3320     		movs	r0, #51
 4256              	.LVL341:
2039:src/keys.c    **** 		}
 4257              		.loc 1 2039 17 view .LVU1262
 4258 04de DEE5     		b	.L356
 4259              	.LVL342:
 4260              	.L425:
2039:src/keys.c    **** 		}
 4261              		.loc 1 2039 17 view .LVU1263
 4262              	.LBE482:
 4263              	.LBE492:
2320:src/keys.c    **** 		}
 4264              		.loc 1 2320 5 is_stmt 1 view .LVU1264
2320:src/keys.c    **** 		}
 4265              		.loc 1 2320 19 is_stmt 0 view .LVU1265
 4266 04e0 2389     		ldrh	r3, [r4, #8]
 4267 04e2 1A4A     		ldr	r2, .L502
 4268 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4269 04e8 DB08     		lsrs	r3, r3, #3
 4270 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2330:src/keys.c    **** }
 4271              		.loc 1 2330 9 view .LVU1266
 4272 04ec 3320     		movs	r0, #51
 4273              	.LVL343:
2330:src/keys.c    **** }
 4274              		.loc 1 2330 9 view .LVU1267
 4275 04ee D6E5     		b	.L356
 4276              	.LVL344:
 4277              	.L495:
2177:src/keys.c    **** 		else if (base == RARG_RCL)
 4278              		.loc 1 2177 4 is_stmt 1 view .LVU1268
2177:src/keys.c    **** 		else if (base == RARG_RCL)
 4279              		.loc 1 2177 12 is_stmt 0 view .LVU1269
 4280 04f0 7723     		movs	r3, #119
 4281 04f2 E377     		strb	r3, [r4, #31]
2330:src/keys.c    **** }
 4282              		.loc 1 2330 9 view .LVU1270
 4283 04f4 3320     		movs	r0, #51
ARM GAS  /tmp/ccXySG1f.s 			page 151


 4284              	.LVL345:
2330:src/keys.c    **** }
 4285              		.loc 1 2330 9 view .LVU1271
 4286 04f6 D2E5     		b	.L356
 4287              	.LVL346:
 4288              	.L494:
 4289              	.LBB493:
 4290              	.LBB483:
2034:src/keys.c    **** 			return arg_eval(regX_idx);
 4291              		.loc 1 2034 4 is_stmt 1 view .LVU1272
2034:src/keys.c    **** 			return arg_eval(regX_idx);
 4292              		.loc 1 2034 17 is_stmt 0 view .LVU1273
 4293 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4294 04fa 62F30003 		bfi	r3, r2, #0, #1
2035:src/keys.c    **** 		}
 4295              		.loc 1 2035 11 view .LVU1274
 4296 04fe 6420     		movs	r0, #100
 4297              	.LVL347:
2034:src/keys.c    **** 			return arg_eval(regX_idx);
 4298              		.loc 1 2034 17 view .LVU1275
 4299 0500 A375     		strb	r3, [r4, #22]
2035:src/keys.c    **** 		}
 4300              		.loc 1 2035 4 is_stmt 1 view .LVU1276
 4301 0502 B8E6     		b	.L483
 4302              	.L493:
2035:src/keys.c    **** 		}
 4303              		.loc 1 2035 4 is_stmt 0 view .LVU1277
 4304              	.LBE483:
 4305              	.LBE493:
2309:src/keys.c    **** 			else if (State2.ind)
 4306              		.loc 1 2309 5 is_stmt 1 view .LVU1278
2309:src/keys.c    **** 			else if (State2.ind)
 4307              		.loc 1 2309 18 is_stmt 0 view .LVU1279
 4308 0504 61F30002 		bfi	r2, r1, #0, #1
 4309 0508 A275     		strb	r2, [r4, #22]
2330:src/keys.c    **** }
 4310              		.loc 1 2330 9 view .LVU1280
 4311 050a 3320     		movs	r0, #51
 4312 050c C7E5     		b	.L356
 4313              	.LVL348:
 4314              	.L497:
2286:src/keys.c    **** 				State2.multi = 1;
 4315              		.loc 1 2286 5 is_stmt 1 view .LVU1281
 4316              	.LBB494:
 4317              	.LBI494:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4318              		.loc 1 552 13 view .LVU1282
 4319              	.LBB495:
 553:src/keys.c    **** 		return;
 4320              		.loc 1 553 2 view .LVU1283
 553:src/keys.c    **** 		return;
 4321              		.loc 1 553 6 is_stmt 0 view .LVU1284
 4322 050e FFF7FEFF 		bl	is_bad_cmdline
 4323              	.LVL349:
 553:src/keys.c    **** 		return;
 4324              		.loc 1 553 5 view .LVU1285
 4325 0512 20B9     		cbnz	r0, .L419
ARM GAS  /tmp/ccXySG1f.s 			page 152


 4326              	.LBE495:
 4327              	.LBE494:
2286:src/keys.c    **** 				State2.multi = 1;
 4328              		.loc 1 2286 31 view .LVU1286
 4329 0514 A5F14200 		sub	r0, r5, #66
 4330              	.LBB497:
 4331              	.LBB496:
 4332 0518 C0B2     		uxtb	r0, r0
 4333 051a FFF7FEFF 		bl	init_arg.part.0
 4334              	.LVL350:
 4335              	.L419:
2286:src/keys.c    **** 				State2.multi = 1;
 4336              		.loc 1 2286 31 view .LVU1287
 4337              	.LBE496:
 4338              	.LBE497:
2287:src/keys.c    **** 				State2.alphashift = 0;
 4339              		.loc 1 2287 5 is_stmt 1 view .LVU1288
2288:src/keys.c    **** 				State2.rarg = 0;
 4340              		.loc 1 2288 5 view .LVU1289
2289:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4341              		.loc 1 2289 5 view .LVU1290
2287:src/keys.c    **** 				State2.alphashift = 0;
 4342              		.loc 1 2287 18 is_stmt 0 view .LVU1291
 4343 051e 6369     		ldr	r3, [r4, #20]
 4344 0520 23F44013 		bic	r3, r3, #3145728
 4345 0524 23F40063 		bic	r3, r3, #2048
 4346 0528 43F40063 		orr	r3, r3, #2048
 4347 052c 6361     		str	r3, [r4, #20]
2330:src/keys.c    **** }
 4348              		.loc 1 2330 9 view .LVU1292
 4349 052e 3320     		movs	r0, #51
 4350 0530 B5E5     		b	.L356
 4351              	.LVL351:
 4352              	.L498:
2291:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4353              		.loc 1 2291 5 is_stmt 1 view .LVU1293
 4354 0532 FFF7FEFF 		bl	reset_arg
 4355              	.LVL352:
2292:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4356              		.loc 1 2292 5 view .LVU1294
2292:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4357              		.loc 1 2292 12 is_stmt 0 view .LVU1295
 4358 0536 40F25510 		movw	r0, #341
 4359 053a B0E5     		b	.L356
 4360              	.LVL353:
 4361              	.L499:
2294:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4362              		.loc 1 2294 5 is_stmt 1 view .LVU1296
 4363 053c FFF7FEFF 		bl	reset_arg
 4364              	.LVL354:
2295:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4365              		.loc 1 2295 5 view .LVU1297
2295:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4366              		.loc 1 2295 12 is_stmt 0 view .LVU1298
 4367 0540 4FF4AB70 		mov	r0, #342
 4368 0544 ABE5     		b	.L356
 4369              	.LVL355:
ARM GAS  /tmp/ccXySG1f.s 			page 153


 4370              	.L373:
2079:src/keys.c    **** 	  case regY_idx:
 4371              		.loc 1 2079 6 is_stmt 1 view .LVU1299
2079:src/keys.c    **** 	  case regY_idx:
 4372              		.loc 1 2079 13 is_stmt 0 view .LVU1300
 4373 0546 0120     		movs	r0, #1
 4374              	.LVL356:
2079:src/keys.c    **** 	  case regY_idx:
 4375              		.loc 1 2079 13 view .LVU1301
 4376 0548 ABE6     		b	.L482
 4377              	.L503:
 4378 054a 00BF     		.align	2
 4379              	.L502:
 4380 054c CDCCCCCC 		.word	-858993459
 4381              		.cfi_endproc
 4382              	.LFE42:
 4384              		.section	.text.cur_shift,"ax",%progbits
 4385              		.align	1
 4386              		.p2align 2,,3
 4387              		.global	cur_shift
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv4-sp-d16
 4393              	cur_shift:
 4394              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4395              		.loc 1 96 29 is_stmt 1 view -0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4399              		.loc 1 97 2 view .LVU1303
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4400              		.loc 1 96 29 is_stmt 0 view .LVU1304
 4401 0000 08B5     		push	{r3, lr}
 4402              		.cfi_def_cfa_offset 8
 4403              		.cfi_offset 3, -8
 4404              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4405              		.loc 1 97 18 view .LVU1305
 4406 0002 FFF7FEFF 		bl	shift_down
 4407              	.LVL357:
  98:src/keys.c    **** }
 4408              		.loc 1 98 2 is_stmt 1 view .LVU1306
  98:src/keys.c    **** }
 4409              		.loc 1 98 52 is_stmt 0 view .LVU1307
 4410 0006 08B9     		cbnz	r0, .L505
  98:src/keys.c    **** }
 4411              		.loc 1 98 52 discriminator 1 view .LVU1308
 4412 0008 014B     		ldr	r3, .L507
 4413 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4414              	.LVL358:
 4415              	.L505:
  99:src/keys.c    **** 
 4416              		.loc 1 99 1 discriminator 4 view .LVU1309
 4417 000c 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccXySG1f.s 			page 154


 4418              	.L508:
 4419 000e 00BF     		.align	2
 4420              	.L507:
 4421 0010 00000000 		.word	StateWhileOn
 4422              		.cfi_endproc
 4423              	.LFE0:
 4425              		.section	.text.reset_shift,"ax",%progbits
 4426              		.align	1
 4427              		.p2align 2,,3
 4428              		.global	reset_shift
 4429              		.syntax unified
 4430              		.thumb
 4431              		.thumb_func
 4432              		.fpu fpv4-sp-d16
 4434              	reset_shift:
 4435              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4436              		.loc 1 114 31 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 0
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4440              		.loc 1 115 2 view .LVU1311
 4441              	.LVL359:
 4442              	.LBB498:
 4443              	.LBI498:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4444              		.loc 1 104 20 view .LVU1312
 4445              	.LBB499:
 105:src/keys.c    **** 	State2.shifts = shift;
 4446              		.loc 1 105 2 view .LVU1313
 4447              	.LBB500:
 4448              	.LBI500:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4449              		.loc 1 96 13 view .LVU1314
 4450              	.LBB501:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4451              		.loc 1 97 2 view .LVU1315
 4452              	.LBE501:
 4453              	.LBE500:
 4454              	.LBE499:
 4455              	.LBE498:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4456              		.loc 1 114 31 is_stmt 0 view .LVU1316
 4457 0000 08B5     		push	{r3, lr}
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 3, -8
 4460              		.cfi_offset 14, -4
 4461              	.LBB505:
 4462              	.LBB504:
 4463              	.LBB503:
 4464              	.LBB502:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4465              		.loc 1 97 18 view .LVU1317
 4466 0002 FFF7FEFF 		bl	shift_down
 4467              	.LVL360:
  98:src/keys.c    **** }
ARM GAS  /tmp/ccXySG1f.s 			page 155


 4468              		.loc 1 98 2 is_stmt 1 view .LVU1318
  98:src/keys.c    **** }
 4469              		.loc 1 98 52 is_stmt 0 view .LVU1319
 4470 0006 034B     		ldr	r3, .L514
 4471 0008 00B9     		cbnz	r0, .L510
 4472 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4473              	.LVL361:
 4474              	.L510:
  98:src/keys.c    **** }
 4475              		.loc 1 98 52 view .LVU1320
 4476              	.LBE502:
 4477              	.LBE503:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4478              		.loc 1 106 2 is_stmt 1 view .LVU1321
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4479              		.loc 1 106 16 is_stmt 0 view .LVU1322
 4480 000c 0022     		movs	r2, #0
 4481 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4482              		.loc 1 108 2 is_stmt 1 view .LVU1323
 4483              	.LVL362:
 108:src/keys.c    **** }
 4484              		.loc 1 108 2 is_stmt 0 view .LVU1324
 4485              	.LBE504:
 4486              	.LBE505:
 116:src/keys.c    **** 
 4487              		.loc 1 116 1 view .LVU1325
 4488 0010 08BD     		pop	{r3, pc}
 4489              	.L515:
 4490 0012 00BF     		.align	2
 4491              	.L514:
 4492 0014 00000000 		.word	StateWhileOn
 4493              		.cfi_endproc
 4494              	.LFE2:
 4496              		.section	.text.keycode_to_row_column,"ax",%progbits
 4497              		.align	1
 4498              		.p2align 2,,3
 4499              		.global	keycode_to_row_column
 4500              		.syntax unified
 4501              		.thumb
 4502              		.thumb_func
 4503              		.fpu fpv4-sp-d16
 4505              	keycode_to_row_column:
 4506              	.LVL363:
 4507              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4508              		.loc 1 180 1 is_stmt 1 view -0
 4509              		.cfi_startproc
 4510              		@ args = 0, pretend = 0, frame = 0
 4511              		@ frame_needed = 0, uses_anonymous_args = 0
 4512              		@ link register save eliminated.
 181:src/keys.c    **** }
 4513              		.loc 1 181 2 view .LVU1327
 181:src/keys.c    **** }
 4514              		.loc 1 181 18 is_stmt 0 view .LVU1328
 4515 0000 074A     		ldr	r2, .L517
 4516 0002 82FB0032 		smull	r3, r2, r2, r0
ARM GAS  /tmp/ccXySG1f.s 			page 156


 4517 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4518              		.loc 1 181 24 view .LVU1329
 4519 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4520 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4521              		.loc 1 181 33 view .LVU1330
 4522 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4523 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4524              		.loc 1 181 12 view .LVU1331
 4525 0018 02F10B00 		add	r0, r2, #11
 4526              	.LVL364:
 182:src/keys.c    **** 
 4527              		.loc 1 182 1 view .LVU1332
 4528 001c 1844     		add	r0, r0, r3
 4529 001e 7047     		bx	lr
 4530              	.L518:
 4531              		.align	2
 4532              	.L517:
 4533 0020 ABAAAA2A 		.word	715827883
 4534              		.cfi_endproc
 4535              	.LFE6:
 4537              		.section	.text.row_column_to_keycode,"ax",%progbits
 4538              		.align	1
 4539              		.p2align 2,,3
 4540              		.global	row_column_to_keycode
 4541              		.syntax unified
 4542              		.thumb
 4543              		.thumb_func
 4544              		.fpu fpv4-sp-d16
 4546              	row_column_to_keycode:
 4547              	.LVL365:
 4548              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4549              		.loc 1 190 1 is_stmt 1 view -0
 4550              		.cfi_startproc
 4551              		@ args = 0, pretend = 0, frame = 0
 4552              		@ frame_needed = 0, uses_anonymous_args = 0
 4553              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4554              		.loc 1 191 2 view .LVU1334
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4555              		.loc 1 191 14 is_stmt 0 view .LVU1335
 4556 0000 0E4A     		ldr	r2, .L525
 4557 0002 82FB0032 		smull	r3, r2, r2, r0
 4558 0006 C317     		asrs	r3, r0, #31
 4559 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4560              		.loc 1 192 14 view .LVU1336
 4561 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4562              		.loc 1 191 6 view .LVU1337
 4563 0010 013B     		subs	r3, r3, #1
 4564              	.LVL366:
 192:src/keys.c    **** 
 4565              		.loc 1 192 2 is_stmt 1 view .LVU1338
ARM GAS  /tmp/ccXySG1f.s 			page 157


 192:src/keys.c    **** 
 4566              		.loc 1 192 14 is_stmt 0 view .LVU1339
 4567 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4568              	.LVL367:
 194:src/keys.c    **** 		return -1;
 4569              		.loc 1 194 5 view .LVU1340
 4570 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4571              		.loc 1 192 6 view .LVU1341
 4572 0018 00F1FF30 		add	r0, r0, #-1
 4573              	.LVL368:
 194:src/keys.c    **** 		return -1;
 4574              		.loc 1 194 2 is_stmt 1 view .LVU1342
 194:src/keys.c    **** 		return -1;
 4575              		.loc 1 194 5 is_stmt 0 view .LVU1343
 4576 001c 0AD8     		bhi	.L524
 194:src/keys.c    **** 		return -1;
 4577              		.loc 1 194 36 discriminator 1 view .LVU1344
 4578 001e 012B     		cmp	r3, #1
 4579 0020 CCBF     		ite	gt
 4580 0022 0422     		movgt	r2, #4
 4581 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4582              		.loc 1 194 25 discriminator 1 view .LVU1345
 4583 0026 8242     		cmp	r2, r0
 4584 0028 04DB     		blt	.L524
 196:src/keys.c    **** }
 4585              		.loc 1 196 2 is_stmt 1 view .LVU1346
 196:src/keys.c    **** }
 4586              		.loc 1 196 13 is_stmt 0 view .LVU1347
 4587 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4588              	.LVL369:
 196:src/keys.c    **** }
 4589              		.loc 1 196 17 view .LVU1348
 4590 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4591              	.LVL370:
 196:src/keys.c    **** }
 4592              		.loc 1 196 17 view .LVU1349
 4593 0032 7047     		bx	lr
 4594              	.LVL371:
 4595              	.L524:
 195:src/keys.c    **** 	return row * 6 + col;
 4596              		.loc 1 195 10 view .LVU1350
 4597 0034 4FF0FF30 		mov	r0, #-1
 4598              	.LVL372:
 197:src/keys.c    **** 
 4599              		.loc 1 197 1 view .LVU1351
 4600 0038 7047     		bx	lr
 4601              	.L526:
 4602 003a 00BF     		.align	2
 4603              	.L525:
 4604 003c 67666666 		.word	1717986919
 4605              		.cfi_endproc
 4606              	.LFE7:
 4608              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4609              		.align	1
 4610              		.p2align 2,,3
ARM GAS  /tmp/ccXySG1f.s 			page 158


 4611              		.global	keycode_to_digit_or_register
 4612              		.syntax unified
 4613              		.thumb
 4614              		.thumb_func
 4615              		.fpu fpv4-sp-d16
 4617              	keycode_to_digit_or_register:
 4618              	.LVL373:
 4619              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4620              		.loc 1 211 1 is_stmt 1 view -0
 4621              		.cfi_startproc
 4622              		@ args = 0, pretend = 0, frame = 0
 4623              		@ frame_needed = 0, uses_anonymous_args = 0
 4624              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4625              		.loc 1 212 3 view .LVU1353
 234:src/keys.c    **** }
 4626              		.loc 1 234 3 view .LVU1354
 4627              	.LBB506:
 4628              	.LBI506:
 131:src/keys.c    **** {
 4629              		.loc 1 131 12 view .LVU1355
 4630              	.LBB507:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4631              		.loc 1 133 2 view .LVU1356
 143:src/keys.c    **** }
 4632              		.loc 1 143 2 view .LVU1357
 143:src/keys.c    **** }
 4633              		.loc 1 143 23 is_stmt 0 view .LVU1358
 4634 0000 024B     		ldr	r3, .L528
 4635              	.LBE507:
 4636              	.LBE506:
 234:src/keys.c    **** }
 4637              		.loc 1 234 28 view .LVU1359
 4638 0002 034A     		ldr	r2, .L528+4
 4639              	.LBB509:
 4640              	.LBB508:
 143:src/keys.c    **** }
 4641              		.loc 1 143 23 view .LVU1360
 4642 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4643              	.LBE508:
 4644              	.LBE509:
 235:src/keys.c    **** #else
 4645              		.loc 1 235 1 view .LVU1361
 4646 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4647              	.LVL374:
 235:src/keys.c    **** #else
 4648              		.loc 1 235 1 view .LVU1362
 4649 0008 7047     		bx	lr
 4650              	.L529:
 4651 000a 00BF     		.align	2
 4652              	.L528:
 4653 000c 00000000 		.word	.LANCHOR6
 4654 0010 00000000 		.word	.LANCHOR5
 4655              		.cfi_endproc
 4656              	.LFE8:
 4658              		.section	.text.init_state,"ax",%progbits
ARM GAS  /tmp/ccXySG1f.s 			page 159


 4659              		.align	1
 4660              		.p2align 2,,3
 4661              		.global	init_state
 4662              		.syntax unified
 4663              		.thumb
 4664              		.thumb_func
 4665              		.fpu fpv4-sp-d16
 4667              	init_state:
 4668              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4669              		.loc 1 615 23 is_stmt 1 view -0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4673              		.loc 1 617 2 view .LVU1364
 615:src/keys.c    **** #ifndef REALBUILD
 4674              		.loc 1 615 23 is_stmt 0 view .LVU1365
 4675 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4676              		.cfi_def_cfa_offset 24
 4677              		.cfi_offset 4, -24
 4678              		.cfi_offset 5, -20
 4679              		.cfi_offset 6, -16
 4680              		.cfi_offset 7, -12
 4681              		.cfi_offset 8, -8
 4682              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4683              		.loc 1 617 25 view .LVU1366
 4684 0004 154C     		ldr	r4, .L532
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4685              		.loc 1 625 10 view .LVU1367
 4686 0006 0021     		movs	r1, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4687              		.loc 1 629 2 view .LVU1368
 4688 0008 1422     		movs	r2, #20
 4689 000a 04F10800 		add	r0, r4, #8
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4690              		.loc 1 625 10 view .LVU1369
 4691 000e E177     		strb	r1, [r4, #31]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4692              		.loc 1 617 25 view .LVU1370
 4693 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4694              		.loc 1 618 25 view .LVU1371
 4695 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4696              		.loc 1 622 10 view .LVU1372
 4697 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4698              		.loc 1 623 10 view .LVU1373
 4699 0016 94F91380 		ldrsb	r8, [r4, #19]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4700              		.loc 1 629 2 view .LVU1374
 4701 001a FFF7FEFF 		bl	xset
 4702              	.LVL375:
 665:src/keys.c    **** 	update_program_bounds(1);
 4703              		.loc 1 665 17 view .LVU1375
ARM GAS  /tmp/ccXySG1f.s 			page 160


 4704 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 664:src/keys.c    **** 	State2.runmode = 1;
 4705              		.loc 1 664 14 view .LVU1376
 4706 0020 0722     		movs	r2, #7
 665:src/keys.c    **** 	update_program_bounds(1);
 4707              		.loc 1 665 17 view .LVU1377
 4708 0022 43F04003 		orr	r3, r3, #64
 666:src/keys.c    **** 	set_lift();
 4709              		.loc 1 666 2 view .LVU1378
 4710 0026 0120     		movs	r0, #1
 664:src/keys.c    **** 	State2.runmode = 1;
 4711              		.loc 1 664 14 view .LVU1379
 4712 0028 E273     		strb	r2, [r4, #15]
 665:src/keys.c    **** 	update_program_bounds(1);
 4713              		.loc 1 665 17 view .LVU1380
 4714 002a A375     		strb	r3, [r4, #22]
 666:src/keys.c    **** 	set_lift();
 4715              		.loc 1 666 2 view .LVU1381
 4716 002c FFF7FEFF 		bl	update_program_bounds
 4717              	.LVL376:
 667:src/keys.c    **** 
 4718              		.loc 1 667 2 view .LVU1382
 4719 0030 FFF7FEFF 		bl	set_lift
 4720              	.LVL377:
 674:src/keys.c    **** 	State2.flags = a;
 4721              		.loc 1 674 15 view .LVU1383
 4722 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 675:src/keys.c    **** #else
 4723              		.loc 1 675 15 view .LVU1384
 4724 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 679:src/keys.c    **** }
 4725              		.loc 1 679 15 view .LVU1385
 4726 0038 0949     		ldr	r1, .L532+4
 672:src/keys.c    **** #ifndef REALBUILD
 4727              		.loc 1 672 10 view .LVU1386
 4728 003a 84F81380 		strb	r8, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4729              		.loc 1 617 25 view .LVU1387
 4730 003e 05F00105 		and	r5, r5, #1
 4731              	.LVL378:
 618:src/keys.c    **** #else
 4732              		.loc 1 618 2 is_stmt 1 view .LVU1388
 618:src/keys.c    **** #else
 4733              		.loc 1 618 25 is_stmt 0 view .LVU1389
 4734 0042 F609     		lsrs	r6, r6, #7
 4735              	.LVL379:
 622:src/keys.c    **** 	int k = LastKey;
 4736              		.loc 1 622 2 is_stmt 1 view .LVU1390
 622:src/keys.c    **** 	int k = LastKey;
 4737              		.loc 1 622 10 is_stmt 0 view .LVU1391
 4738 0044 FFB2     		uxtb	r7, r7
 4739              	.LVL380:
 623:src/keys.c    **** 
 4740              		.loc 1 623 2 is_stmt 1 view .LVU1392
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4741              		.loc 1 625 2 view .LVU1393
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
ARM GAS  /tmp/ccXySG1f.s 			page 161


 4742              		.loc 1 629 2 view .LVU1394
 664:src/keys.c    **** 	State2.runmode = 1;
 4743              		.loc 1 664 2 view .LVU1395
 665:src/keys.c    **** 	update_program_bounds(1);
 4744              		.loc 1 665 2 view .LVU1396
 666:src/keys.c    **** 	set_lift();
 4745              		.loc 1 666 2 view .LVU1397
 667:src/keys.c    **** 
 4746              		.loc 1 667 2 view .LVU1398
 671:src/keys.c    **** 	LastKey = k;
 4747              		.loc 1 671 2 view .LVU1399
 674:src/keys.c    **** 	State2.flags = a;
 4748              		.loc 1 674 15 is_stmt 0 view .LVU1400
 4749 0046 66F3C712 		bfi	r2, r6, #7, #1
 675:src/keys.c    **** #else
 4750              		.loc 1 675 15 view .LVU1401
 4751 004a 65F30003 		bfi	r3, r5, #0, #1
 679:src/keys.c    **** }
 4752              		.loc 1 679 15 view .LVU1402
 4753 004e 6420     		movs	r0, #100
 674:src/keys.c    **** 	State2.flags = a;
 4754              		.loc 1 674 15 view .LVU1403
 4755 0050 E275     		strb	r2, [r4, #23]
 675:src/keys.c    **** #else
 4756              		.loc 1 675 15 view .LVU1404
 4757 0052 2376     		strb	r3, [r4, #24]
 671:src/keys.c    **** 	LastKey = k;
 4758              		.loc 1 671 10 view .LVU1405
 4759 0054 A774     		strb	r7, [r4, #18]
 672:src/keys.c    **** #ifndef REALBUILD
 4760              		.loc 1 672 2 is_stmt 1 view .LVU1406
 674:src/keys.c    **** 	State2.flags = a;
 4761              		.loc 1 674 2 view .LVU1407
 675:src/keys.c    **** #else
 4762              		.loc 1 675 2 view .LVU1408
 679:src/keys.c    **** }
 4763              		.loc 1 679 2 view .LVU1409
 679:src/keys.c    **** }
 4764              		.loc 1 679 15 is_stmt 0 view .LVU1410
 4765 0056 0860     		str	r0, [r1]
 680:src/keys.c    **** 
 4766              		.loc 1 680 1 view .LVU1411
 4767 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4768              	.LVL381:
 4769              	.L533:
 680:src/keys.c    **** 
 4770              		.loc 1 680 1 view .LVU1412
 4771              		.align	2
 4772              	.L532:
 4773 005c 00000000 		.word	StateWhileOn
 4774 0060 00000000 		.word	ShowRegister
 4775              		.cfi_endproc
 4776              	.LFE13:
 4778              		.section	.text.process_cmplx,"ax",%progbits
 4779              		.align	1
 4780              		.p2align 2,,3
 4781              		.syntax unified
ARM GAS  /tmp/ccXySG1f.s 			page 162


 4782              		.thumb
 4783              		.thumb_func
 4784              		.fpu fpv4-sp-d16
 4786              	process_cmplx:
 4787              	.LVL382:
 4788              	.LFB27:
1459:src/keys.c    **** #define _RARG   0xFF00
 4789              		.loc 1 1459 43 is_stmt 1 view -0
 4790              		.cfi_startproc
 4791              		@ args = 0, pretend = 0, frame = 0
 4792              		@ frame_needed = 0, uses_anonymous_args = 0
1464:src/keys.c    **** 		// Row 1
 4793              		.loc 1 1464 2 view .LVU1414
1515:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4794              		.loc 1 1515 2 view .LVU1415
 4795              	.LBB510:
 4796              	.LBI510:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4797              		.loc 1 114 13 view .LVU1416
 4798              	.LBE510:
 115:src/keys.c    **** }
 4799              		.loc 1 115 2 view .LVU1417
 4800              	.LBB527:
 4801              	.LBB511:
 4802              	.LBI511:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4803              		.loc 1 104 20 view .LVU1418
 4804              	.LBB512:
 105:src/keys.c    **** 	State2.shifts = shift;
 4805              		.loc 1 105 2 view .LVU1419
 4806              	.LBB513:
 4807              	.LBI513:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4808              		.loc 1 96 13 view .LVU1420
 4809              	.LBB514:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4810              		.loc 1 97 2 view .LVU1421
 4811              	.LBE514:
 4812              	.LBE513:
 4813              	.LBE512:
 4814              	.LBE511:
 4815              	.LBE527:
1459:src/keys.c    **** #define _RARG   0xFF00
 4816              		.loc 1 1459 43 is_stmt 0 view .LVU1422
 4817 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4818              		.cfi_def_cfa_offset 24
 4819              		.cfi_offset 3, -24
 4820              		.cfi_offset 4, -20
 4821              		.cfi_offset 5, -16
 4822              		.cfi_offset 6, -12
 4823              		.cfi_offset 7, -8
 4824              		.cfi_offset 14, -4
1459:src/keys.c    **** #define _RARG   0xFF00
 4825              		.loc 1 1459 43 view .LVU1423
 4826 0002 0546     		mov	r5, r0
 4827              	.LBB528:
 4828              	.LBB523:
ARM GAS  /tmp/ccXySG1f.s 			page 163


 4829              	.LBB519:
 4830              	.LBB517:
 4831              	.LBB515:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4832              		.loc 1 97 18 view .LVU1424
 4833 0004 FFF7FEFF 		bl	shift_down
 4834              	.LVL383:
  98:src/keys.c    **** }
 4835              		.loc 1 98 2 is_stmt 1 view .LVU1425
  98:src/keys.c    **** }
 4836              		.loc 1 98 52 is_stmt 0 view .LVU1426
 4837 0008 E8B1     		cbz	r0, .L551
 4838 000a 294E     		ldr	r6, .L558
 4839 000c 0446     		mov	r4, r0
 4840              	.L535:
 4841              	.LVL384:
  98:src/keys.c    **** }
 4842              		.loc 1 98 52 view .LVU1427
 4843              	.LBE515:
 4844              	.LBE517:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4845              		.loc 1 106 2 is_stmt 1 view .LVU1428
 4846              	.LBE519:
 4847              	.LBE523:
 4848              	.LBE528:
 4849              	.LBB529:
 4850              	.LBB530:
 158:src/keys.c    **** }
 4851              		.loc 1 158 23 is_stmt 0 view .LVU1429
 4852 000e 294B     		ldr	r3, .L558+4
 4853              	.LBE530:
 4854              	.LBE529:
1517:src/keys.c    **** 	State2.cmplx = 0;
 4855              		.loc 1 1517 21 view .LVU1430
 4856 0010 2948     		ldr	r0, .L558+8
 4857              	.LBB533:
 4858              	.LBB531:
 158:src/keys.c    **** }
 4859              		.loc 1 158 23 view .LVU1431
 4860 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4861              	.LBE531:
 4862              	.LBE533:
1518:src/keys.c    **** 
 4863              		.loc 1 1518 15 view .LVU1432
 4864 0014 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
1517:src/keys.c    **** 	State2.cmplx = 0;
 4865              		.loc 1 1517 21 view .LVU1433
 4866 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4867              	.LBB534:
 4868              	.LBB524:
 4869              	.LBB520:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4870              		.loc 1 106 16 view .LVU1434
 4871 001a 0021     		movs	r1, #0
 4872              	.LBE520:
 4873              	.LBE524:
 4874              	.LBE534:
ARM GAS  /tmp/ccXySG1f.s 			page 164


1517:src/keys.c    **** 	State2.cmplx = 0;
 4875              		.loc 1 1517 21 view .LVU1435
 4876 001c 30F81370 		ldrh	r7, [r0, r3, lsl #1]
 4877              	.LBB535:
 4878              	.LBB525:
 4879              	.LBB521:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4880              		.loc 1 106 16 view .LVU1436
 4881 0020 3174     		strb	r1, [r6, #16]
 108:src/keys.c    **** }
 4882              		.loc 1 108 2 is_stmt 1 view .LVU1437
 4883              	.LVL385:
 108:src/keys.c    **** }
 4884              		.loc 1 108 2 is_stmt 0 view .LVU1438
 4885              	.LBE521:
 4886              	.LBE525:
 4887              	.LBE535:
1516:src/keys.c    **** 	int op = op_map[lc][shift];
 4888              		.loc 1 1516 2 is_stmt 1 view .LVU1439
 4889              	.LBB536:
 4890              	.LBI529:
 146:src/keys.c    **** {
 4891              		.loc 1 146 12 view .LVU1440
 4892              	.LBB532:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4893              		.loc 1 148 2 view .LVU1441
 158:src/keys.c    **** }
 4894              		.loc 1 158 2 view .LVU1442
 158:src/keys.c    **** }
 4895              		.loc 1 158 2 is_stmt 0 view .LVU1443
 4896              	.LBE532:
 4897              	.LBE536:
1517:src/keys.c    **** 	State2.cmplx = 0;
 4898              		.loc 1 1517 2 is_stmt 1 view .LVU1444
1518:src/keys.c    **** 
 4899              		.loc 1 1518 2 view .LVU1445
1520:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4900              		.loc 1 1520 5 is_stmt 0 view .LVU1446
 4901 0022 07F47F43 		and	r3, r7, #65280
1518:src/keys.c    **** 
 4902              		.loc 1 1518 15 view .LVU1447
 4903 0026 61F34102 		bfi	r2, r1, #1, #1
1520:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4904              		.loc 1 1520 5 view .LVU1448
 4905 002a B3F57F4F 		cmp	r3, #65280
1518:src/keys.c    **** 
 4906              		.loc 1 1518 15 view .LVU1449
 4907 002e 7275     		strb	r2, [r6, #21]
1520:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4908              		.loc 1 1520 2 is_stmt 1 view .LVU1450
1520:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4909              		.loc 1 1520 5 is_stmt 0 view .LVU1451
 4910 0030 2CD0     		beq	.L554
1524:src/keys.c    **** 		// HYP
 4911              		.loc 1 1524 2 is_stmt 1 view .LVU1452
1524:src/keys.c    **** 		// HYP
 4912              		.loc 1 1524 5 is_stmt 0 view .LVU1453
ARM GAS  /tmp/ccXySG1f.s 			page 165


 4913 0032 9DB1     		cbz	r5, .L555
1534:src/keys.c    **** 		switch (c) {
 4914              		.loc 1 1534 2 is_stmt 1 view .LVU1454
1534:src/keys.c    **** 		switch (c) {
 4915              		.loc 1 1534 5 is_stmt 0 view .LVU1455
 4916 0034 2CB1     		cbz	r4, .L534
1535:src/keys.c    **** 		case K_CMPLX:
 4917              		.loc 1 1535 3 is_stmt 1 view .LVU1456
 4918 0036 242D     		cmp	r5, #36
 4919 0038 24D0     		beq	.L540
 4920 003a 2D2D     		cmp	r5, #45
 4921 003c 1DD0     		beq	.L541
 4922 003e 1F2D     		cmp	r5, #31
 4923 0040 04D0     		beq	.L556
 4924              	.LVL386:
 4925              	.L534:
1567:src/keys.c    **** 
 4926              		.loc 1 1567 1 is_stmt 0 view .LVU1457
 4927 0042 3846     		mov	r0, r7
 4928 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4929              	.LVL387:
 4930              	.L551:
 4931              	.LBB537:
 4932              	.LBB526:
 4933              	.LBB522:
 4934              	.LBB518:
 4935              	.LBB516:
  98:src/keys.c    **** }
 4936              		.loc 1 98 52 view .LVU1458
 4937 0046 1A4E     		ldr	r6, .L558
 4938 0048 347C     		ldrb	r4, [r6, #16]	@ zero_extendqisi2
 4939 004a E0E7     		b	.L535
 4940              	.LVL388:
 4941              	.L556:
  98:src/keys.c    **** }
 4942              		.loc 1 98 52 view .LVU1459
 4943              	.LBE516:
 4944              	.LBE518:
 4945              	.LBE522:
 4946              	.LBE526:
 4947              	.LBE537:
1541:src/keys.c    **** 				if (is_bad_cmdline())
 4948              		.loc 1 1541 4 is_stmt 1 view .LVU1460
1541:src/keys.c    **** 				if (is_bad_cmdline())
 4949              		.loc 1 1541 7 is_stmt 0 view .LVU1461
 4950 004c 332F     		cmp	r7, #51
 4951 004e 02D0     		beq	.L553
1542:src/keys.c    **** 					return STATE_UNFINISHED;
 4952              		.loc 1 1542 5 is_stmt 1 view .LVU1462
1542:src/keys.c    **** 					return STATE_UNFINISHED;
 4953              		.loc 1 1542 9 is_stmt 0 view .LVU1463
 4954 0050 FFF7FEFF 		bl	is_bad_cmdline
 4955              	.LVL389:
1542:src/keys.c    **** 					return STATE_UNFINISHED;
 4956              		.loc 1 1542 8 view .LVU1464
 4957 0054 10B3     		cbz	r0, .L557
 4958              	.L553:
ARM GAS  /tmp/ccXySG1f.s 			page 166


1522:src/keys.c    **** 	}
 4959              		.loc 1 1522 10 view .LVU1465
 4960 0056 3327     		movs	r7, #51
 4961              	.LVL390:
1567:src/keys.c    **** 
 4962              		.loc 1 1567 1 view .LVU1466
 4963 0058 3846     		mov	r0, r7
 4964 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4965              	.LVL391:
 4966              	.L555:
1526:src/keys.c    **** 		//		print_debug(100,1);
 4967              		.loc 1 1526 3 is_stmt 1 view .LVU1467
 4968 005c FFF7FEFF 		bl	process_cmdline_set_lift
 4969              	.LVL392:
1528:src/keys.c    **** 		State2.dot = op;
 4970              		.loc 1 1528 3 view .LVU1468
1529:src/keys.c    **** 		State2.cmplx = 1;
 4971              		.loc 1 1529 3 view .LVU1469
1530:src/keys.c    **** 		return STATE_UNFINISHED;
 4972              		.loc 1 1530 3 view .LVU1470
1530:src/keys.c    **** 		return STATE_UNFINISHED;
 4973              		.loc 1 1530 16 is_stmt 0 view .LVU1471
 4974 0060 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 4975 0062 07F00103 		and	r3, r7, #1
 4976 0066 9B01     		lsls	r3, r3, #6
 4977 0068 22F06202 		bic	r2, r2, #98
 4978 006c 43F02203 		orr	r3, r3, #34
 4979 0070 1343     		orrs	r3, r3, r2
1531:src/keys.c    **** 	}
 4980              		.loc 1 1531 10 view .LVU1472
 4981 0072 3327     		movs	r7, #51
 4982              	.LVL393:
1530:src/keys.c    **** 		return STATE_UNFINISHED;
 4983              		.loc 1 1530 16 view .LVU1473
 4984 0074 7375     		strb	r3, [r6, #21]
1531:src/keys.c    **** 	}
 4985              		.loc 1 1531 3 is_stmt 1 view .LVU1474
1567:src/keys.c    **** 
 4986              		.loc 1 1567 1 is_stmt 0 view .LVU1475
 4987 0076 3846     		mov	r0, r7
 4988 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4989              	.LVL394:
 4990              	.L541:
1537:src/keys.c    **** 			break;
 4991              		.loc 1 1537 4 is_stmt 1 view .LVU1476
 4992              	.LBB538:
 4993              	.LBI538:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4994              		.loc 1 104 20 view .LVU1477
 4995              	.LBB539:
 105:src/keys.c    **** 	State2.shifts = shift;
 4996              		.loc 1 105 2 view .LVU1478
 4997              	.LBB540:
 4998              	.LBI540:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4999              		.loc 1 96 13 view .LVU1479
 5000              	.LBB541:
ARM GAS  /tmp/ccXySG1f.s 			page 167


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5001              		.loc 1 97 2 view .LVU1480
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5002              		.loc 1 97 18 is_stmt 0 view .LVU1481
 5003 007a FFF7FEFF 		bl	shift_down
 5004              	.LVL395:
  98:src/keys.c    **** }
 5005              		.loc 1 98 2 is_stmt 1 view .LVU1482
 5006              	.LBE541:
 5007              	.LBE540:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5008              		.loc 1 106 2 view .LVU1483
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5009              		.loc 1 106 16 is_stmt 0 view .LVU1484
 5010 007e 3474     		strb	r4, [r6, #16]
 108:src/keys.c    **** }
 5011              		.loc 1 108 2 is_stmt 1 view .LVU1485
 5012              	.LBE539:
 5013              	.LBE538:
1567:src/keys.c    **** 
 5014              		.loc 1 1567 1 is_stmt 0 view .LVU1486
 5015 0080 3846     		mov	r0, r7
 5016 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5017              	.LVL396:
 5018              	.L540:
1551:src/keys.c    **** 			break;
 5019              		.loc 1 1551 4 is_stmt 1 view .LVU1487
 5020 0084 FFF7FEFF 		bl	init_state
 5021              	.LVL397:
1552:src/keys.c    **** 
 5022              		.loc 1 1552 4 view .LVU1488
1567:src/keys.c    **** 
 5023              		.loc 1 1567 1 is_stmt 0 view .LVU1489
 5024 0088 3846     		mov	r0, r7
 5025 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5026              	.LVL398:
 5027              	.L554:
1521:src/keys.c    **** 		return STATE_UNFINISHED;
 5028              		.loc 1 1521 3 is_stmt 1 view .LVU1490
 5029              	.LBB542:
 5030              	.LBI542:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5031              		.loc 1 552 13 view .LVU1491
 5032              	.LBB543:
 553:src/keys.c    **** 		return;
 5033              		.loc 1 553 2 view .LVU1492
 553:src/keys.c    **** 		return;
 5034              		.loc 1 553 6 is_stmt 0 view .LVU1493
 5035 008c FFF7FEFF 		bl	is_bad_cmdline
 5036              	.LVL399:
 553:src/keys.c    **** 		return;
 5037              		.loc 1 553 5 view .LVU1494
 5038 0090 0028     		cmp	r0, #0
 5039 0092 E0D1     		bne	.L553
 5040 0094 F8B2     		uxtb	r0, r7
 5041 0096 FFF7FEFF 		bl	init_arg.part.0
 5042              	.LVL400:
ARM GAS  /tmp/ccXySG1f.s 			page 168


 5043 009a DCE7     		b	.L553
 5044              	.LVL401:
 5045              	.L557:
 553:src/keys.c    **** 		return;
 5046              		.loc 1 553 5 view .LVU1495
 5047              	.LBE543:
 5048              	.LBE542:
1544:src/keys.c    **** 				State2.cmplx = 1;
 5049              		.loc 1 1544 5 is_stmt 1 view .LVU1496
 5050 009c FFF7FEFF 		bl	process_cmdline_set_lift
 5051              	.LVL402:
1545:src/keys.c    **** 				State2.test = op;
 5052              		.loc 1 1545 5 view .LVU1497
1545:src/keys.c    **** 				State2.test = op;
 5053              		.loc 1 1545 18 is_stmt 0 view .LVU1498
 5054 00a0 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1546:src/keys.c    **** 			}
 5055              		.loc 1 1546 17 view .LVU1499
 5056 00a2 F773     		strb	r7, [r6, #15]
1545:src/keys.c    **** 				State2.test = op;
 5057              		.loc 1 1545 18 view .LVU1500
 5058 00a4 43F00203 		orr	r3, r3, #2
 5059 00a8 7375     		strb	r3, [r6, #21]
1546:src/keys.c    **** 			}
 5060              		.loc 1 1546 5 is_stmt 1 view .LVU1501
1548:src/keys.c    **** 
 5061              		.loc 1 1548 11 is_stmt 0 view .LVU1502
 5062 00aa 3327     		movs	r7, #51
 5063              	.LVL403:
1548:src/keys.c    **** 
 5064              		.loc 1 1548 11 view .LVU1503
 5065 00ac C9E7     		b	.L534
 5066              	.L559:
 5067 00ae 00BF     		.align	2
 5068              	.L558:
 5069 00b0 00000000 		.word	StateWhileOn
 5070 00b4 00000000 		.word	.LANCHOR1
 5071 00b8 00000000 		.word	.LANCHOR7
 5072              		.cfi_endproc
 5073              	.LFE27:
 5075              		.section	.text.soft_init_state,"ax",%progbits
 5076              		.align	1
 5077              		.p2align 2,,3
 5078              		.global	soft_init_state
 5079              		.syntax unified
 5080              		.thumb
 5081              		.thumb_func
 5082              		.fpu fpv4-sp-d16
 5084              	soft_init_state:
 5085              	.LFB14:
 682:src/keys.c    **** 	int soft;
 5086              		.loc 1 682 28 is_stmt 1 view -0
 5087              		.cfi_startproc
 5088              		@ args = 0, pretend = 0, frame = 0
 5089              		@ frame_needed = 0, uses_anonymous_args = 0
 683:src/keys.c    **** 	unsigned int runmode;
 5090              		.loc 1 683 2 view .LVU1505
ARM GAS  /tmp/ccXySG1f.s 			page 169


 684:src/keys.c    **** 	unsigned int alphas;
 5091              		.loc 1 684 2 view .LVU1506
 685:src/keys.c    **** 
 5092              		.loc 1 685 2 view .LVU1507
 687:src/keys.c    **** 		CmdLineLength = 0;
 5093              		.loc 1 687 2 view .LVU1508
 682:src/keys.c    **** 	int soft;
 5094              		.loc 1 682 28 is_stmt 0 view .LVU1509
 5095 0000 38B5     		push	{r3, r4, r5, lr}
 5096              		.cfi_def_cfa_offset 16
 5097              		.cfi_offset 3, -16
 5098              		.cfi_offset 4, -12
 5099              		.cfi_offset 5, -8
 5100              		.cfi_offset 14, -4
 687:src/keys.c    **** 		CmdLineLength = 0;
 5101              		.loc 1 687 6 view .LVU1510
 5102 0002 114C     		ldr	r4, .L567
 687:src/keys.c    **** 		CmdLineLength = 0;
 5103              		.loc 1 687 5 view .LVU1511
 5104 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5105 0006 D3B9     		cbnz	r3, .L566
 693:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5106              		.loc 1 693 2 is_stmt 1 view .LVU1512
 694:src/keys.c    **** 	runmode = State2.runmode;
 5107              		.loc 1 694 17 is_stmt 0 view .LVU1513
 5108 0008 104A     		ldr	r2, .L567+4
 5109 000a 6369     		ldr	r3, [r4, #20]
 694:src/keys.c    **** 	runmode = State2.runmode;
 5110              		.loc 1 694 60 view .LVU1514
 5111 000c 1A42     		tst	r2, r3
 5112 000e 0AD0     		beq	.L563
 5113              	.L564:
 5114              	.LVL404:
 695:src/keys.c    **** 	alphas = State2.alphas;
 5115              		.loc 1 695 2 is_stmt 1 view .LVU1515
 696:src/keys.c    **** 	init_state();
 5116              		.loc 1 696 17 is_stmt 0 view .LVU1516
 5117 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5118              	.LVL405:
 696:src/keys.c    **** 	init_state();
 5119              		.loc 1 696 2 is_stmt 1 view .LVU1517
 697:src/keys.c    **** 	if (soft) {
 5120              		.loc 1 697 2 view .LVU1518
 5121 0012 FFF7FEFF 		bl	init_state
 5122              	.LVL406:
 698:src/keys.c    **** 		State2.runmode = runmode;
 5123              		.loc 1 698 2 view .LVU1519
 699:src/keys.c    **** 		State2.alphas = alphas;
 5124              		.loc 1 699 3 view .LVU1520
 700:src/keys.c    **** 	}
 5125              		.loc 1 700 3 view .LVU1521
 700:src/keys.c    **** 	}
 5126              		.loc 1 700 17 is_stmt 0 view .LVU1522
 5127 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5128 0018 05F04805 		and	r5, r5, #72
 5129 001c 23F04803 		bic	r3, r3, #72
 5130 0020 2B43     		orrs	r3, r3, r5
ARM GAS  /tmp/ccXySG1f.s 			page 170


 5131 0022 A375     		strb	r3, [r4, #22]
 702:src/keys.c    **** 
 5132              		.loc 1 702 1 view .LVU1523
 5133 0024 38BD     		pop	{r3, r4, r5, pc}
 5134              	.LVL407:
 5135              	.L563:
 694:src/keys.c    **** 	runmode = State2.runmode;
 5136              		.loc 1 694 60 discriminator 2 view .LVU1524
 5137 0026 E368     		ldr	r3, [r4, #12]
 5138 0028 23F47F03 		bic	r3, r3, #16711680
 5139 002c 23F47F43 		bic	r3, r3, #65280
 5140 0030 B3F1E06F 		cmp	r3, #117440512
 5141 0034 ECD1     		bne	.L564
 5142              	.LVL408:
 695:src/keys.c    **** 	alphas = State2.alphas;
 5143              		.loc 1 695 2 is_stmt 1 view .LVU1525
 696:src/keys.c    **** 	init_state();
 5144              		.loc 1 696 2 view .LVU1526
 697:src/keys.c    **** 	if (soft) {
 5145              		.loc 1 697 2 view .LVU1527
 702:src/keys.c    **** 
 5146              		.loc 1 702 1 is_stmt 0 view .LVU1528
 5147 0036 BDE83840 		pop	{r3, r4, r5, lr}
 5148              		.cfi_remember_state
 5149              		.cfi_restore 14
 5150              		.cfi_restore 5
 5151              		.cfi_restore 4
 5152              		.cfi_restore 3
 5153              		.cfi_def_cfa_offset 0
 697:src/keys.c    **** 	if (soft) {
 5154              		.loc 1 697 2 view .LVU1529
 5155 003a FFF7FEBF 		b	init_state
 5156              	.LVL409:
 5157              	.L566:
 5158              		.cfi_restore_state
 5159              	.LBB546:
 5160              	.LBI546:
 682:src/keys.c    **** 	int soft;
 5161              		.loc 1 682 6 is_stmt 1 view .LVU1530
 5162              	.LBB547:
 688:src/keys.c    **** 		CmdLineEex = 0;
 5163              		.loc 1 688 3 view .LVU1531
 689:src/keys.c    **** 		CmdLineDot = 0;
 5164              		.loc 1 689 3 view .LVU1532
 690:src/keys.c    **** 		return;
 5165              		.loc 1 690 3 view .LVU1533
 688:src/keys.c    **** 		CmdLineEex = 0;
 5166              		.loc 1 688 17 is_stmt 0 view .LVU1534
 5167 003e 0023     		movs	r3, #0
 5168 0040 A383     		strh	r3, [r4, #28]	@ movhi
 690:src/keys.c    **** 		return;
 5169              		.loc 1 690 14 view .LVU1535
 5170 0042 A377     		strb	r3, [r4, #30]
 691:src/keys.c    **** 	}
 5171              		.loc 1 691 3 is_stmt 1 view .LVU1536
 5172              	.LBE547:
 5173              	.LBE546:
ARM GAS  /tmp/ccXySG1f.s 			page 171


 702:src/keys.c    **** 
 5174              		.loc 1 702 1 is_stmt 0 view .LVU1537
 5175 0044 38BD     		pop	{r3, r4, r5, pc}
 5176              	.L568:
 5177 0046 00BF     		.align	2
 5178              	.L567:
 5179 0048 00000000 		.word	StateWhileOn
 5180 004c 002F2004 		.word	69218048
 5181              		.cfi_endproc
 5182              	.LFE14:
 5184              		.section	.text.finish_cpx_entry,"ax",%progbits
 5185              		.align	1
 5186              		.p2align 2,,3
 5187              		.global	finish_cpx_entry
 5188              		.syntax unified
 5189              		.thumb
 5190              		.thumb_func
 5191              		.fpu fpv4-sp-d16
 5193              	finish_cpx_entry:
 5194              	.LVL410:
 5195              	.LFB23:
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5196              		.loc 1 1197 36 is_stmt 1 view -0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
 5199              		@ frame_needed = 0, uses_anonymous_args = 0
1202:src/keys.c    **** 
 5200              		.loc 1 1202 2 view .LVU1539
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5201              		.loc 1 1197 36 is_stmt 0 view .LVU1540
 5202 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5203              		.cfi_def_cfa_offset 24
 5204              		.cfi_offset 3, -24
 5205              		.cfi_offset 4, -20
 5206              		.cfi_offset 5, -16
 5207              		.cfi_offset 6, -12
 5208              		.cfi_offset 7, -8
 5209              		.cfi_offset 14, -4
1202:src/keys.c    **** 
 5210              		.loc 1 1202 10 view .LVU1541
 5211 0002 2E4E     		ldr	r6, .L585
 5212 0004 3368     		ldr	r3, [r6]
1202:src/keys.c    **** 
 5213              		.loc 1 1202 7 view .LVU1542
 5214 0006 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
1202:src/keys.c    **** 
 5215              		.loc 1 1202 5 view .LVU1543
 5216 000a 12F0060F 		tst	r2, #6
 5217 000e 16D0     		beq	.L569
1214:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5218              		.loc 1 1214 2 is_stmt 1 view .LVU1544
 5219              	.LBB554:
 5220              	.LBI554:
1190:src/keys.c    **** 	if (CmdLineLength) {
 5221              		.loc 1 1190 13 view .LVU1545
 5222              	.LBB555:
1191:src/keys.c    **** 		State2.state_lift = 0;
ARM GAS  /tmp/ccXySG1f.s 			page 172


 5223              		.loc 1 1191 2 view .LVU1546
1191:src/keys.c    **** 		State2.state_lift = 0;
 5224              		.loc 1 1191 6 is_stmt 0 view .LVU1547
 5225 0010 2B4C     		ldr	r4, .L585+4
1191:src/keys.c    **** 		State2.state_lift = 0;
 5226              		.loc 1 1191 5 view .LVU1548
 5227 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5228 0014 0546     		mov	r5, r0
 5229 0016 01BB     		cbnz	r1, .L582
 5230              	.LBE555:
 5231              	.LBE554:
1215:src/keys.c    **** 	CLEAR_REAL;
 5232              		.loc 1 1215 2 is_stmt 1 view .LVU1549
1215:src/keys.c    **** 	CLEAR_REAL;
 5233              		.loc 1 1215 5 is_stmt 0 view .LVU1550
 5234 0018 5207     		lsls	r2, r2, #29
 5235 001a 11D4     		bmi	.L583
 5236              	.LVL411:
 5237              	.L573:
1216:src/keys.c    **** 	CLEAR_IMAG;
 5238              		.loc 1 1216 2 is_stmt 1 view .LVU1551
1217:src/keys.c    **** 
 5239              		.loc 1 1217 2 view .LVU1552
1216:src/keys.c    **** 	CLEAR_IMAG;
 5240              		.loc 1 1216 2 is_stmt 0 view .LVU1553
 5241 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5242 0020 22F00602 		bic	r2, r2, #6
 5243 0024 83F8AC27 		strb	r2, [r3, #1964]
1219:src/keys.c    **** 
 5244              		.loc 1 1219 2 is_stmt 1 view .LVU1554
1219:src/keys.c    **** 
 5245              		.loc 1 1219 20 is_stmt 0 view .LVU1555
 5246 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5247 002a 65F38612 		bfi	r2, r5, #6, #1
 5248              	.LVL412:
1219:src/keys.c    **** 
 5249              		.loc 1 1219 20 view .LVU1556
 5250 002e E275     		strb	r2, [r4, #23]
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5251              		.loc 1 1221 2 is_stmt 1 view .LVU1557
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5252              		.loc 1 1221 21 is_stmt 0 view .LVU1558
 5253 0030 B3F8AC37 		ldrh	r3, [r3, #1964]
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5254              		.loc 1 1221 5 view .LVU1559
 5255 0034 03F4C073 		and	r3, r3, #384
 5256 0038 B3F5C07F 		cmp	r3, #384
 5257 003c 19D0     		beq	.L584
 5258              	.L569:
1233:src/keys.c    **** 
 5259              		.loc 1 1233 1 view .LVU1560
 5260 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5261              	.LVL413:
 5262              	.L583:
1215:src/keys.c    **** 	CLEAR_REAL;
 5263              		.loc 1 1215 17 is_stmt 1 discriminator 1 view .LVU1561
 5264 0040 6420     		movs	r0, #100
ARM GAS  /tmp/ccXySG1f.s 			page 173


 5265 0042 FFF7FEFF 		bl	get_reg_n
 5266              	.LVL414:
 5267 0046 0746     		mov	r7, r0
 5268 0048 6520     		movs	r0, #101
 5269 004a FFF7FEFF 		bl	get_reg_n
 5270              	.LVL415:
 5271 004e 0146     		mov	r1, r0
 5272 0050 3846     		mov	r0, r7
 5273 0052 FFF7FEFF 		bl	swap_reg
 5274              	.LVL416:
 5275 0056 3368     		ldr	r3, [r6]
 5276 0058 E0E7     		b	.L573
 5277              	.LVL417:
 5278              	.L582:
 5279              	.LBB557:
 5280              	.LBB556:
1192:src/keys.c    **** 		process_cmdline();
 5281              		.loc 1 1192 3 view .LVU1562
1192:src/keys.c    **** 		process_cmdline();
 5282              		.loc 1 1192 21 is_stmt 0 view .LVU1563
 5283 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5284 005c 6FF38613 		bfc	r3, #6, #1
 5285 0060 E375     		strb	r3, [r4, #23]
1193:src/keys.c    **** 	}
 5286              		.loc 1 1193 3 is_stmt 1 view .LVU1564
 5287 0062 FFF7FEFF 		bl	process_cmdline
 5288              	.LVL418:
1193:src/keys.c    **** 	}
 5289              		.loc 1 1193 3 is_stmt 0 view .LVU1565
 5290 0066 3368     		ldr	r3, [r6]
 5291 0068 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5292              	.LBE556:
 5293              	.LBE557:
1215:src/keys.c    **** 	CLEAR_REAL;
 5294              		.loc 1 1215 2 is_stmt 1 view .LVU1566
1215:src/keys.c    **** 	CLEAR_REAL;
 5295              		.loc 1 1215 5 is_stmt 0 view .LVU1567
 5296 006c 5207     		lsls	r2, r2, #29
 5297 006e D5D5     		bpl	.L573
 5298 0070 E6E7     		b	.L583
 5299              	.LVL419:
 5300              	.L584:
 5301              	.LBB558:
 5302              	.LBI558:
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5303              		.loc 1 1197 6 is_stmt 1 view .LVU1568
 5304              	.LBB559:
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5305              		.loc 1 1223 3 view .LVU1569
 5306 0072 6E20     		movs	r0, #110
 5307 0074 FFF7FEFF 		bl	get_reg_n
 5308              	.LVL420:
 5309 0078 0446     		mov	r4, r0
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5310              		.loc 1 1223 33 is_stmt 0 view .LVU1570
 5311 007a 6420     		movs	r0, #100
 5312 007c FFF7FEFF 		bl	get_reg_n
ARM GAS  /tmp/ccXySG1f.s 			page 174


 5313              	.LVL421:
 5314 0080 0146     		mov	r1, r0
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5315              		.loc 1 1223 3 view .LVU1571
 5316 0082 2046     		mov	r0, r4
 5317 0084 FFF7FEFF 		bl	copyreg
 5318              	.LVL422:
1224:src/keys.c    **** 		//call p2r
 5319              		.loc 1 1224 3 is_stmt 1 view .LVU1572
 5320 0088 6F20     		movs	r0, #111
 5321 008a FFF7FEFF 		bl	get_reg_n
 5322              	.LVL423:
 5323 008e 0446     		mov	r4, r0
1224:src/keys.c    **** 		//call p2r
 5324              		.loc 1 1224 33 is_stmt 0 view .LVU1573
 5325 0090 6520     		movs	r0, #101
 5326 0092 FFF7FEFF 		bl	get_reg_n
 5327              	.LVL424:
 5328 0096 0146     		mov	r1, r0
1224:src/keys.c    **** 		//call p2r
 5329              		.loc 1 1224 3 view .LVU1574
 5330 0098 2046     		mov	r0, r4
 5331 009a FFF7FEFF 		bl	copyreg
 5332              	.LVL425:
1226:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5333              		.loc 1 1226 18 is_stmt 1 view .LVU1575
1227:src/keys.c    **** #ifdef RP_PREFIX
 5334              		.loc 1 1227 3 view .LVU1576
 5335 009e 0020     		movs	r0, #0
 5336 00a0 FFF7FEFF 		bl	op_p2r
 5337              	.LVL426:
1229:src/keys.c    **** #endif
 5338              		.loc 1 1229 3 view .LVU1577
1229:src/keys.c    **** #endif
 5339              		.loc 1 1229 15 is_stmt 0 view .LVU1578
 5340 00a4 074A     		ldr	r2, .L585+8
1231:src/keys.c    **** 	}
 5341              		.loc 1 1231 3 view .LVU1579
 5342 00a6 3368     		ldr	r3, [r6]
1229:src/keys.c    **** #endif
 5343              		.loc 1 1229 15 view .LVU1580
 5344 00a8 0121     		movs	r1, #1
 5345 00aa 1160     		str	r1, [r2]
1231:src/keys.c    **** 	}
 5346              		.loc 1 1231 3 is_stmt 1 view .LVU1581
 5347 00ac 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5348 00b0 6FF30002 		bfc	r2, #0, #1
 5349 00b4 83F8AD27 		strb	r2, [r3, #1965]
 5350              	.LVL427:
1231:src/keys.c    **** 	}
 5351              		.loc 1 1231 3 is_stmt 0 view .LVU1582
 5352              	.LBE559:
 5353              	.LBE558:
1233:src/keys.c    **** 
 5354              		.loc 1 1233 1 view .LVU1583
 5355 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5356              	.L586:
ARM GAS  /tmp/ccXySG1f.s 			page 175


 5357 00ba 00BF     		.align	2
 5358              	.L585:
 5359 00bc 00000000 		.word	main_ram
 5360 00c0 00000000 		.word	StateWhileOn
 5361 00c4 00000000 		.word	RectPolConv
 5362              		.cfi_endproc
 5363              	.LFE23:
 5365              		.section	.text.stack_begin,"ax",%progbits
 5366              		.align	1
 5367              		.p2align 2,,3
 5368              		.global	stack_begin
 5369              		.syntax unified
 5370              		.thumb
 5371              		.thumb_func
 5372              		.fpu fpv4-sp-d16
 5374              	stack_begin:
 5375              	.LVL428:
 5376              	.LFB25:
1254:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5377              		.loc 1 1254 33 is_stmt 1 view -0
 5378              		.cfi_startproc
 5379              		@ args = 0, pretend = 0, frame = 0
 5380              		@ frame_needed = 0, uses_anonymous_args = 0
1257:src/keys.c    **** 	if ( State2.state_lift ){
 5381              		.loc 1 1257 2 view .LVU1585
1254:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5382              		.loc 1 1254 33 is_stmt 0 view .LVU1586
 5383 0000 38B5     		push	{r3, r4, r5, lr}
 5384              		.cfi_def_cfa_offset 16
 5385              		.cfi_offset 3, -16
 5386              		.cfi_offset 4, -12
 5387              		.cfi_offset 5, -8
 5388              		.cfi_offset 14, -4
1257:src/keys.c    **** 	if ( State2.state_lift ){
 5389              		.loc 1 1257 2 view .LVU1587
 5390 0002 2C4B     		ldr	r3, .L594
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5391              		.loc 1 1258 7 view .LVU1588
 5392 0004 2C4C     		ldr	r4, .L594+4
1257:src/keys.c    **** 	if ( State2.state_lift ){
 5393              		.loc 1 1257 2 view .LVU1589
 5394 0006 1B68     		ldr	r3, [r3]
 5395 0008 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5396 000c 42F00102 		orr	r2, r2, #1
 5397 0010 83F8AD27 		strb	r2, [r3, #1965]
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5398              		.loc 1 1258 2 is_stmt 1 view .LVU1590
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5399              		.loc 1 1258 7 is_stmt 0 view .LVU1591
 5400 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5401              		.loc 1 1258 5 view .LVU1592
 5402 0016 12F04002 		ands	r2, r2, #64
 5403 001a 26D0     		beq	.L588
1259:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5404              		.loc 1 1259 3 is_stmt 1 view .LVU1593
 5405 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 176


 5406 0020 42F01002 		orr	r2, r2, #16
 5407 0024 83F8AC27 		strb	r2, [r3, #1964]
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5408              		.loc 1 1260 3 view .LVU1594
 5409 0028 6E20     		movs	r0, #110
 5410              	.LVL429:
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5411              		.loc 1 1260 3 is_stmt 0 view .LVU1595
 5412 002a FFF7FEFF 		bl	get_reg_n
 5413              	.LVL430:
 5414 002e 0546     		mov	r5, r0
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5415              		.loc 1 1260 33 view .LVU1596
 5416 0030 6A20     		movs	r0, #106
 5417 0032 FFF7FEFF 		bl	get_reg_n
 5418              	.LVL431:
 5419 0036 0146     		mov	r1, r0
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5420              		.loc 1 1260 3 view .LVU1597
 5421 0038 2846     		mov	r0, r5
 5422 003a FFF7FEFF 		bl	copyreg
 5423              	.LVL432:
1261:src/keys.c    **** 		lift();
 5424              		.loc 1 1261 3 is_stmt 1 view .LVU1598
 5425 003e 6F20     		movs	r0, #111
 5426 0040 FFF7FEFF 		bl	get_reg_n
 5427              	.LVL433:
 5428 0044 0546     		mov	r5, r0
1261:src/keys.c    **** 		lift();
 5429              		.loc 1 1261 33 is_stmt 0 view .LVU1599
 5430 0046 6B20     		movs	r0, #107
 5431 0048 FFF7FEFF 		bl	get_reg_n
 5432              	.LVL434:
 5433 004c 0146     		mov	r1, r0
1261:src/keys.c    **** 		lift();
 5434              		.loc 1 1261 3 view .LVU1600
 5435 004e 2846     		mov	r0, r5
 5436 0050 FFF7FEFF 		bl	copyreg
 5437              	.LVL435:
1262:src/keys.c    **** 		zero_X();
 5438              		.loc 1 1262 3 is_stmt 1 view .LVU1601
 5439 0054 FFF7FEFF 		bl	lift
 5440              	.LVL436:
1263:src/keys.c    **** 		lift();
 5441              		.loc 1 1263 3 view .LVU1602
 5442 0058 FFF7FEFF 		bl	zero_X
 5443              	.LVL437:
1264:src/keys.c    **** 		State2.state_lift = 0;
 5444              		.loc 1 1264 3 view .LVU1603
 5445 005c FFF7FEFF 		bl	lift
 5446              	.LVL438:
1265:src/keys.c    **** 	}
 5447              		.loc 1 1265 3 view .LVU1604
1265:src/keys.c    **** 	}
 5448              		.loc 1 1265 21 is_stmt 0 view .LVU1605
 5449 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5450 0062 6FF38613 		bfc	r3, #6, #1
ARM GAS  /tmp/ccXySG1f.s 			page 177


 5451 0066 E375     		strb	r3, [r4, #23]
 5452              	.L587:
1274:src/keys.c    **** 
 5453              		.loc 1 1274 1 view .LVU1606
 5454 0068 38BD     		pop	{r3, r4, r5, pc}
 5455              	.LVL439:
 5456              	.L588:
1268:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5457              		.loc 1 1268 3 is_stmt 1 view .LVU1607
 5458 006a 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 5459 006e 62F30411 		bfi	r1, r2, #4, #1
 5460 0072 83F8AC17 		strb	r1, [r3, #1964]
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5461              		.loc 1 1269 3 view .LVU1608
 5462 0076 0546     		mov	r5, r0
 5463 0078 6E20     		movs	r0, #110
 5464              	.LVL440:
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5465              		.loc 1 1269 3 is_stmt 0 view .LVU1609
 5466 007a FFF7FEFF 		bl	get_reg_n
 5467              	.LVL441:
 5468 007e 0446     		mov	r4, r0
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5469              		.loc 1 1269 33 view .LVU1610
 5470 0080 6420     		movs	r0, #100
 5471 0082 FFF7FEFF 		bl	get_reg_n
 5472              	.LVL442:
 5473 0086 0146     		mov	r1, r0
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5474              		.loc 1 1269 3 view .LVU1611
 5475 0088 2046     		mov	r0, r4
 5476 008a FFF7FEFF 		bl	copyreg
 5477              	.LVL443:
1270:src/keys.c    **** 		zero_X();
 5478              		.loc 1 1270 3 is_stmt 1 view .LVU1612
 5479 008e 6F20     		movs	r0, #111
 5480 0090 FFF7FEFF 		bl	get_reg_n
 5481              	.LVL444:
 5482 0094 0446     		mov	r4, r0
1270:src/keys.c    **** 		zero_X();
 5483              		.loc 1 1270 33 is_stmt 0 view .LVU1613
 5484 0096 6520     		movs	r0, #101
 5485 0098 FFF7FEFF 		bl	get_reg_n
 5486              	.LVL445:
 5487 009c 0146     		mov	r1, r0
1270:src/keys.c    **** 		zero_X();
 5488              		.loc 1 1270 3 view .LVU1614
 5489 009e 2046     		mov	r0, r4
 5490 00a0 FFF7FEFF 		bl	copyreg
 5491              	.LVL446:
1271:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5492              		.loc 1 1271 3 is_stmt 1 view .LVU1615
 5493 00a4 FFF7FEFF 		bl	zero_X
 5494              	.LVL447:
1272:src/keys.c    **** 	}
 5495              		.loc 1 1272 3 view .LVU1616
1272:src/keys.c    **** 	}
ARM GAS  /tmp/ccXySG1f.s 			page 178


 5496              		.loc 1 1272 6 is_stmt 0 view .LVU1617
 5497 00a8 002D     		cmp	r5, #0
 5498 00aa DDD0     		beq	.L587
1272:src/keys.c    **** 	}
 5499              		.loc 1 1272 17 is_stmt 1 discriminator 1 view .LVU1618
1274:src/keys.c    **** 
 5500              		.loc 1 1274 1 is_stmt 0 discriminator 1 view .LVU1619
 5501 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5502              		.cfi_restore 14
 5503              		.cfi_restore 5
 5504              		.cfi_restore 4
 5505              		.cfi_restore 3
 5506              		.cfi_def_cfa_offset 0
 5507              	.LVL448:
1272:src/keys.c    **** 	}
 5508              		.loc 1 1272 17 discriminator 1 view .LVU1620
 5509 00b0 FFF7FEBF 		b	zero_Y
 5510              	.LVL449:
 5511              	.L595:
 5512              		.align	2
 5513              	.L594:
 5514 00b4 00000000 		.word	main_ram
 5515 00b8 00000000 		.word	StateWhileOn
 5516              		.cfi_endproc
 5517              	.LFE25:
 5519              		.section	.text.current_catalogue_max,"ax",%progbits
 5520              		.align	1
 5521              		.p2align 2,,3
 5522              		.global	current_catalogue_max
 5523              		.syntax unified
 5524              		.thumb
 5525              		.thumb_func
 5526              		.fpu fpv4-sp-d16
 5528              	current_catalogue_max:
 5529              	.LFB44:
2467:src/keys.c    **** 	// A quick table of catalogue sizes
 5530              		.loc 1 2467 33 is_stmt 1 view -0
 5531              		.cfi_startproc
 5532              		@ args = 0, pretend = 0, frame = 0
 5533              		@ frame_needed = 0, uses_anonymous_args = 0
 5534              		@ link register save eliminated.
2470:src/keys.c    **** 	{
 5535              		.loc 1 2470 2 view .LVU1622
2501:src/keys.c    **** #endif
 5536              		.loc 1 2501 2 view .LVU1623
2501:src/keys.c    **** #endif
 5537              		.loc 1 2501 31 is_stmt 0 view .LVU1624
 5538 0000 024B     		ldr	r3, .L597
2501:src/keys.c    **** #endif
 5539              		.loc 1 2501 24 view .LVU1625
 5540 0002 034A     		ldr	r2, .L597+4
2501:src/keys.c    **** #endif
 5541              		.loc 1 2501 31 view .LVU1626
 5542 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2503:src/keys.c    **** 
 5543              		.loc 1 2503 1 view .LVU1627
 5544 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 179


 5545 0008 7047     		bx	lr
 5546              	.L598:
 5547 000a 00BF     		.align	2
 5548              	.L597:
 5549 000c 00000000 		.word	StateWhileOn
 5550 0010 00000000 		.word	.LANCHOR8
 5551              		.cfi_endproc
 5552              	.LFE44:
 5554              		.section	.text.current_catalogue,"ax",%progbits
 5555              		.align	1
 5556              		.p2align 2,,3
 5557              		.global	current_catalogue
 5558              		.syntax unified
 5559              		.thumb
 5560              		.thumb_func
 5561              		.fpu fpv4-sp-d16
 5563              	current_catalogue:
 5564              	.LVL450:
 5565              	.LFB46:
2516:src/keys.c    **** 	// A quick table of catalogue tables
 5566              		.loc 1 2516 33 is_stmt 1 view -0
 5567              		.cfi_startproc
 5568              		@ args = 0, pretend = 0, frame = 0
 5569              		@ frame_needed = 0, uses_anonymous_args = 0
 5570              		@ link register save eliminated.
2519:src/keys.c    **** 	{
 5571              		.loc 1 2519 2 view .LVU1629
2546:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5572              		.loc 1 2546 2 view .LVU1630
2547:src/keys.c    **** 	int m, i;
 5573              		.loc 1 2547 2 view .LVU1631
2547:src/keys.c    **** 	int m, i;
 5574              		.loc 1 2547 25 is_stmt 0 view .LVU1632
 5575 0000 314A     		ldr	r2, .L626
2547:src/keys.c    **** 	int m, i;
 5576              		.loc 1 2547 15 view .LVU1633
 5577 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5578              	.LVL451:
2548:src/keys.c    **** 	unsigned p, q;
 5579              		.loc 1 2548 2 is_stmt 1 view .LVU1634
2549:src/keys.c    **** 
 5580              		.loc 1 2549 2 view .LVU1635
2551:src/keys.c    **** 		if (n == OP_ZERO)
 5581              		.loc 1 2551 2 view .LVU1636
2551:src/keys.c    **** 		if (n == OP_ZERO)
 5582              		.loc 1 2551 5 is_stmt 0 view .LVU1637
 5583 0004 102B     		cmp	r3, #16
 5584 0006 39D0     		beq	.L620
2556:src/keys.c    **** 		if (n == OP_ZERO)
 5585              		.loc 1 2556 2 is_stmt 1 view .LVU1638
2556:src/keys.c    **** 		if (n == OP_ZERO)
 5586              		.loc 1 2556 5 is_stmt 0 view .LVU1639
 5587 0008 112B     		cmp	r3, #17
 5588 000a 32D0     		beq	.L621
2561:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5589              		.loc 1 2561 2 is_stmt 1 view .LVU1640
2561:src/keys.c    **** 		const int cnv = conv_catalogue[n];
ARM GAS  /tmp/ccXySG1f.s 			page 180


 5590              		.loc 1 2561 5 is_stmt 0 view .LVU1641
 5591 000c 122B     		cmp	r3, #18
 5592 000e 45D0     		beq	.L622
2574:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5593              		.loc 1 2574 2 is_stmt 1 view .LVU1642
2574:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5594              		.loc 1 2574 5 is_stmt 0 view .LVU1643
 5595 0010 0E2B     		cmp	r3, #14
 5596 0012 38D0     		beq	.L623
2577:src/keys.c    **** 
 5597              		.loc 1 2577 3 is_stmt 1 view .LVU1644
2577:src/keys.c    **** 
 5598              		.loc 1 2577 7 is_stmt 0 view .LVU1645
 5599 0014 2D4A     		ldr	r2, .L626+4
2579:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5600              		.loc 1 2579 35 view .LVU1646
 5601 0016 A3F10B01 		sub	r1, r3, #11
2579:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5602              		.loc 1 2579 5 view .LVU1647
 5603 001a 0429     		cmp	r1, #4
2577:src/keys.c    **** 
 5604              		.loc 1 2577 7 view .LVU1648
 5605 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5606              	.LVL452:
2579:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5607              		.loc 1 2579 2 is_stmt 1 view .LVU1649
2579:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5608              		.loc 1 2579 5 is_stmt 0 view .LVU1650
 5609 0020 38D9     		bls	.L606
2582:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5610              		.loc 1 2582 2 is_stmt 1 view .LVU1651
2582:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5611              		.loc 1 2582 5 is_stmt 0 view .LVU1652
 5612 0022 142B     		cmp	r3, #20
 5613 0024 4DD8     		bhi	.L614
2586:src/keys.c    **** 	p = cat[0];
 5614              		.loc 1 2586 2 is_stmt 1 view .LVU1653
2516:src/keys.c    **** 	// A quick table of catalogue tables
 5615              		.loc 1 2516 33 is_stmt 0 view .LVU1654
 5616 0026 10B4     		push	{r4}
 5617              		.cfi_def_cfa_offset 4
 5618              		.cfi_offset 4, -4
2586:src/keys.c    **** 	p = cat[0];
 5619              		.loc 1 2586 11 view .LVU1655
 5620 0028 00EBA001 		add	r1, r0, r0, asr #2
2586:src/keys.c    **** 	p = cat[0];
 5621              		.loc 1 2586 6 view .LVU1656
 5622 002c 5318     		adds	r3, r2, r1
 5623              	.LVL453:
2587:src/keys.c    **** 	q = cat[1];
 5624              		.loc 1 2587 2 is_stmt 1 view .LVU1657
2588:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5625              		.loc 1 2588 2 view .LVU1658
2589:src/keys.c    **** 
 5626              		.loc 1 2589 2 view .LVU1659
2589:src/keys.c    **** 
 5627              		.loc 1 2589 35 is_stmt 0 view .LVU1660
ARM GAS  /tmp/ccXySG1f.s 			page 181


 5628 002e 4000     		lsls	r0, r0, #1
 5629              	.LVL454:
2587:src/keys.c    **** 	q = cat[1];
 5630              		.loc 1 2587 4 view .LVU1661
 5631 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5632              	.LVL455:
2588:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5633              		.loc 1 2588 4 view .LVU1662
 5634 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5635              	.LVL456:
2588:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5636              		.loc 1 2588 4 view .LVU1663
 5637 0034 2649     		ldr	r1, .L626+8
 5638              	.LVL457:
2589:src/keys.c    **** 
 5639              		.loc 1 2589 54 view .LVU1664
 5640 0036 C443     		mvns	r4, r0
2589:src/keys.c    **** 
 5641              		.loc 1 2589 35 view .LVU1665
 5642 0038 00F00600 		and	r0, r0, #6
2589:src/keys.c    **** 
 5643              		.loc 1 2589 54 view .LVU1666
 5644 003c 04F00604 		and	r4, r4, #6
2589:src/keys.c    **** 
 5645              		.loc 1 2589 24 view .LVU1667
 5646 0040 0230     		adds	r0, r0, #2
2589:src/keys.c    **** 
 5647              		.loc 1 2589 48 view .LVU1668
 5648 0042 E340     		lsrs	r3, r3, r4
 5649              	.LVL458:
2589:src/keys.c    **** 
 5650              		.loc 1 2589 18 view .LVU1669
 5651 0044 02FA00F0 		lsl	r0, r2, r0
2589:src/keys.c    **** 
 5652              		.loc 1 2589 43 view .LVU1670
 5653 0048 1843     		orrs	r0, r0, r3
2589:src/keys.c    **** 
 5654              		.loc 1 2589 4 view .LVU1671
 5655 004a C0F30903 		ubfx	r3, r0, #0, #10
 5656              	.LVL459:
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5657              		.loc 1 2592 2 is_stmt 1 view .LVU1672
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5658              		.loc 1 2592 12 view .LVU1673
2589:src/keys.c    **** 
 5659              		.loc 1 2589 4 is_stmt 0 view .LVU1674
 5660 004e 3422     		movs	r2, #52
 5661              	.LVL460:
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5662              		.loc 1 2592 8 view .LVU1675
 5663 0050 0020     		movs	r0, #0
 5664 0052 01E0     		b	.L610
 5665              	.LVL461:
 5666              	.L625:
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5667              		.loc 1 2592 8 view .LVU1676
 5668 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 182


 5669              	.LVL462:
 5670              	.L610:
2593:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5671              		.loc 1 2593 3 is_stmt 1 view .LVU1677
2595:src/keys.c    **** 	}
 5672              		.loc 1 2595 3 view .LVU1678
2593:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5673              		.loc 1 2593 6 is_stmt 0 view .LVU1679
 5674 0058 9A42     		cmp	r2, r3
 5675 005a 2FDC     		bgt	.L624
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5676              		.loc 1 2592 25 discriminator 2 view .LVU1680
 5677 005c 0130     		adds	r0, r0, #1
 5678              	.LVL463:
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5679              		.loc 1 2592 2 discriminator 2 view .LVU1681
 5680 005e 0728     		cmp	r0, #7
2595:src/keys.c    **** 	}
 5681              		.loc 1 2595 5 discriminator 2 view .LVU1682
 5682 0060 A3EB0203 		sub	r3, r3, r2
 5683              	.LVL464:
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5684              		.loc 1 2592 24 is_stmt 1 discriminator 2 view .LVU1683
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5685              		.loc 1 2592 12 discriminator 2 view .LVU1684
2592:src/keys.c    **** 		if (m < opcode_breaks[i])
 5686              		.loc 1 2592 2 is_stmt 0 discriminator 2 view .LVU1685
 5687 0064 F6D1     		bne	.L625
2597:src/keys.c    **** }
 5688              		.loc 1 2597 2 is_stmt 1 view .LVU1686
2597:src/keys.c    **** }
 5689              		.loc 1 2597 9 is_stmt 0 view .LVU1687
 5690 0066 03F12000 		add	r0, r3, #32
 5691              	.LVL465:
2597:src/keys.c    **** }
 5692              		.loc 1 2597 9 view .LVU1688
 5693 006a 0002     		lsls	r0, r0, #8
 5694              	.L599:
2598:src/keys.c    **** 
 5695              		.loc 1 2598 1 view .LVU1689
 5696 006c 5DF8044B 		ldr	r4, [sp], #4
 5697              		.cfi_restore 4
 5698              		.cfi_def_cfa_offset 0
 5699 0070 7047     		bx	lr
 5700              	.LVL466:
 5701              	.L621:
2557:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5702              		.loc 1 2557 3 is_stmt 1 view .LVU1690
2557:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5703              		.loc 1 2557 6 is_stmt 0 view .LVU1691
 5704 0072 4B28     		cmp	r0, #75
 5705 0074 1FD0     		beq	.L612
2559:src/keys.c    **** 	}
 5706              		.loc 1 2559 3 is_stmt 1 view .LVU1692
2559:src/keys.c    **** 	}
 5707              		.loc 1 2559 10 is_stmt 0 view .LVU1693
 5708 0076 40F40450 		orr	r0, r0, #8448
ARM GAS  /tmp/ccXySG1f.s 			page 183


 5709              	.LVL467:
2559:src/keys.c    **** 	}
 5710              		.loc 1 2559 10 view .LVU1694
 5711 007a 7047     		bx	lr
 5712              	.LVL468:
 5713              	.L620:
2552:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5714              		.loc 1 2552 3 is_stmt 1 view .LVU1695
2552:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5715              		.loc 1 2552 6 is_stmt 0 view .LVU1696
 5716 007c 4B28     		cmp	r0, #75
 5717 007e 17D0     		beq	.L611
2554:src/keys.c    **** 	}
 5718              		.loc 1 2554 3 is_stmt 1 view .LVU1697
2554:src/keys.c    **** 	}
 5719              		.loc 1 2554 10 is_stmt 0 view .LVU1698
 5720 0080 40F40050 		orr	r0, r0, #8192
 5721              	.LVL469:
2554:src/keys.c    **** 	}
 5722              		.loc 1 2554 10 view .LVU1699
 5723 0084 7047     		bx	lr
 5724              	.LVL470:
 5725              	.L623:
2574:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5726              		.loc 1 2574 35 discriminator 1 view .LVU1700
 5727 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2575:src/keys.c    **** 	else
 5728              		.loc 1 2575 7 discriminator 1 view .LVU1701
 5729 0088 124B     		ldr	r3, .L626+12
 5730              	.LVL471:
2575:src/keys.c    **** 	else
 5731              		.loc 1 2575 7 discriminator 1 view .LVU1702
 5732 008a 134A     		ldr	r2, .L626+16
 5733              	.LVL472:
2575:src/keys.c    **** 	else
 5734              		.loc 1 2575 7 discriminator 1 view .LVU1703
 5735 008c 11F0100F 		tst	r1, #16
 5736 0090 18BF     		it	ne
 5737 0092 1A46     		movne	r2, r3
 5738              	.L606:
 5739              	.LVL473:
2580:src/keys.c    **** 	}
 5740              		.loc 1 2580 3 is_stmt 1 view .LVU1704
 5741              	.LBB560:
 5742              	.LBI560:
2509:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5743              		.loc 1 2509 15 view .LVU1705
 5744              	.LBB561:
2510:src/keys.c    **** }
 5745              		.loc 1 2510 2 view .LVU1706
2510:src/keys.c    **** }
 5746              		.loc 1 2510 9 is_stmt 0 view .LVU1707
 5747 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5748              	.LVL474:
2510:src/keys.c    **** }
 5749              		.loc 1 2510 9 view .LVU1708
 5750 0096 40F48840 		orr	r0, r0, #17408
ARM GAS  /tmp/ccXySG1f.s 			page 184


 5751              	.LVL475:
2510:src/keys.c    **** }
 5752              		.loc 1 2510 9 view .LVU1709
 5753              	.LBE561:
 5754              	.LBE560:
2580:src/keys.c    **** 	}
 5755              		.loc 1 2580 10 view .LVU1710
 5756 009a 7047     		bx	lr
 5757              	.LVL476:
 5758              	.L622:
 5759              	.LBB562:
2562:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5760              		.loc 1 2562 3 is_stmt 1 view .LVU1711
2562:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5761              		.loc 1 2562 33 is_stmt 0 view .LVU1712
 5762 009c 0F4B     		ldr	r3, .L626+20
 5763              	.LVL477:
2562:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5764              		.loc 1 2562 13 view .LVU1713
 5765 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5766              	.LVL478:
2563:src/keys.c    **** 			// Monadic conversion routine
 5767              		.loc 1 2563 3 is_stmt 1 view .LVU1714
2563:src/keys.c    **** 			// Monadic conversion routine
 5768              		.loc 1 2563 6 is_stmt 0 view .LVU1715
 5769 00a0 5728     		cmp	r0, #87
2565:src/keys.c    **** 		else
 5770              		.loc 1 2565 4 is_stmt 1 view .LVU1716
2565:src/keys.c    **** 		else
 5771              		.loc 1 2565 25 is_stmt 0 view .LVU1717
 5772 00a2 C6BF     		itte	gt
 5773 00a4 5838     		subgt	r0, r0, #88
 5774              	.LVL479:
2565:src/keys.c    **** 		else
 5775              		.loc 1 2565 18 view .LVU1718
 5776 00a6 40F40070 		orrgt	r0, r0, #512
2567:src/keys.c    **** 	}
 5777              		.loc 1 2567 4 is_stmt 1 view .LVU1719
2567:src/keys.c    **** 	}
 5778              		.loc 1 2567 11 is_stmt 0 view .LVU1720
 5779 00aa 40F40C40 		orrle	r0, r0, #35840
 5780 00ae 7047     		bx	lr
 5781              	.LVL480:
 5782              	.L611:
2567:src/keys.c    **** 	}
 5783              		.loc 1 2567 11 view .LVU1721
 5784              	.LBE562:
2553:src/keys.c    **** 		return CONST(n);
 5785              		.loc 1 2553 11 view .LVU1722
 5786 00b0 4FF42740 		mov	r0, #42752
 5787              	.LVL481:
2553:src/keys.c    **** 		return CONST(n);
 5788              		.loc 1 2553 11 view .LVU1723
 5789 00b4 7047     		bx	lr
 5790              	.LVL482:
 5791              	.L612:
2558:src/keys.c    **** 		return CONST_CMPLX(n);
ARM GAS  /tmp/ccXySG1f.s 			page 185


 5792              		.loc 1 2558 11 view .LVU1724
 5793 00b6 4FF42840 		mov	r0, #43008
 5794              	.LVL483:
2558:src/keys.c    **** 		return CONST_CMPLX(n);
 5795              		.loc 1 2558 11 view .LVU1725
 5796 00ba 7047     		bx	lr
 5797              	.LVL484:
 5798              	.L624:
 5799              		.cfi_def_cfa_offset 4
 5800              		.cfi_offset 4, -4
2594:src/keys.c    **** 		m -= opcode_breaks[i];
 5801              		.loc 1 2594 4 is_stmt 1 view .LVU1726
2594:src/keys.c    **** 		m -= opcode_breaks[i];
 5802              		.loc 1 2594 29 is_stmt 0 view .LVU1727
 5803 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5804              	.LVL485:
2594:src/keys.c    **** 		m -= opcode_breaks[i];
 5805              		.loc 1 2594 29 view .LVU1728
 5806 00c0 D4E7     		b	.L599
 5807              	.LVL486:
 5808              	.L614:
 5809              		.cfi_def_cfa_offset 0
 5810              		.cfi_restore 4
2583:src/keys.c    **** 
 5811              		.loc 1 2583 10 view .LVU1729
 5812 00c2 4FF48070 		mov	r0, #256
 5813              	.LVL487:
2598:src/keys.c    **** 
 5814              		.loc 1 2598 1 view .LVU1730
 5815 00c6 7047     		bx	lr
 5816              	.L627:
 5817              		.align	2
 5818              	.L626:
 5819 00c8 00000000 		.word	StateWhileOn
 5820 00cc 00000000 		.word	.LANCHOR12
 5821 00d0 01000000 		.word	.LANCHOR13+1
 5822 00d4 00000000 		.word	.LANCHOR10
 5823 00d8 00000000 		.word	.LANCHOR9
 5824 00dc 00000000 		.word	.LANCHOR11
 5825              		.cfi_endproc
 5826              	.LFE46:
 5828              		.section	.text.process_catalogue,"ax",%progbits
 5829              		.align	1
 5830              		.p2align 2,,3
 5831              		.syntax unified
 5832              		.thumb
 5833              		.thumb_func
 5834              		.fpu fpv4-sp-d16
 5836              	process_catalogue:
 5837              	.LVL488:
 5838              	.LFB48:
2612:src/keys.c    ****    int pos = State.catpos;
 5839              		.loc 1 2612 93 is_stmt 1 view -0
 5840              		.cfi_startproc
 5841              		@ args = 0, pretend = 0, frame = 16
 5842              		@ frame_needed = 0, uses_anonymous_args = 0
2612:src/keys.c    ****    int pos = State.catpos;
ARM GAS  /tmp/ccXySG1f.s 			page 186


 5843              		.loc 1 2612 93 is_stmt 0 view .LVU1732
 5844 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5845              		.cfi_def_cfa_offset 36
 5846              		.cfi_offset 4, -36
 5847              		.cfi_offset 5, -32
 5848              		.cfi_offset 6, -28
 5849              		.cfi_offset 7, -24
 5850              		.cfi_offset 8, -20
 5851              		.cfi_offset 9, -16
 5852              		.cfi_offset 10, -12
 5853              		.cfi_offset 11, -8
 5854              		.cfi_offset 14, -4
2613:src/keys.c    ****    int ch;
 5855              		.loc 1 2613 14 view .LVU1733
 5856 0004 DFF8EC92 		ldr	r9, .L742+24
 5857              	.LBB563:
 5858              	.LBB564:
2501:src/keys.c    **** #endif
 5859              		.loc 1 2501 31 view .LVU1734
 5860 0008 B44F     		ldr	r7, .L742
 5861              	.LBE564:
 5862              	.LBE563:
2613:src/keys.c    ****    int ch;
 5863              		.loc 1 2613 14 view .LVU1735
 5864 000a D9F80040 		ldr	r4, [r9]
 5865              	.LBB569:
 5866              	.LBB565:
2501:src/keys.c    **** #endif
 5867              		.loc 1 2501 31 view .LVU1736
 5868 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5869              	.LBE565:
 5870              	.LBE569:
2613:src/keys.c    ****    int ch;
 5871              		.loc 1 2613 19 view .LVU1737
 5872 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5873              	.LBB570:
 5874              	.LBB566:
2501:src/keys.c    **** #endif
 5875              		.loc 1 2501 24 view .LVU1738
 5876 0016 B24B     		ldr	r3, .L742+4
 5877              	.LBE566:
 5878              	.LBE570:
2613:src/keys.c    ****    int ch;
 5879              		.loc 1 2613 4 is_stmt 1 view .LVU1739
2612:src/keys.c    ****    int pos = State.catpos;
 5880              		.loc 1 2612 93 is_stmt 0 view .LVU1740
 5881 0018 85B0     		sub	sp, sp, #20
 5882              		.cfi_def_cfa_offset 56
 5883              	.LBB571:
 5884              	.LBB567:
2501:src/keys.c    **** #endif
 5885              		.loc 1 2501 24 view .LVU1741
 5886 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 5887              	.LBE567:
 5888              	.LBE571:
2612:src/keys.c    ****    int pos = State.catpos;
 5889              		.loc 1 2612 93 view .LVU1742
ARM GAS  /tmp/ccXySG1f.s 			page 187


 5890 001e 1646     		mov	r6, r2
2613:src/keys.c    ****    int ch;
 5891              		.loc 1 2613 8 view .LVU1743
 5892 0020 C5F34615 		ubfx	r5, r5, #5, #7
 5893              	.LVL489:
2614:src/keys.c    ****    const int ctmax = current_catalogue_max();
 5894              		.loc 1 2614 4 is_stmt 1 view .LVU1744
2615:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 5895              		.loc 1 2615 4 view .LVU1745
 5896              	.LBB572:
 5897              	.LBI563:
2467:src/keys.c    **** 	// A quick table of catalogue sizes
 5898              		.loc 1 2467 5 view .LVU1746
 5899              	.LBB568:
2470:src/keys.c    **** 	{
 5900              		.loc 1 2470 2 view .LVU1747
2501:src/keys.c    **** #endif
 5901              		.loc 1 2501 2 view .LVU1748
2501:src/keys.c    **** #endif
 5902              		.loc 1 2501 2 is_stmt 0 view .LVU1749
 5903              	.LBE568:
 5904              	.LBE572:
2616:src/keys.c    **** 
 5905              		.loc 1 2616 4 is_stmt 1 view .LVU1750
2618:src/keys.c    ****      switch (c) {
 5906              		.loc 1 2618 4 view .LVU1751
2618:src/keys.c    ****      switch (c) {
 5907              		.loc 1 2618 7 is_stmt 0 view .LVU1752
 5908 0024 0029     		cmp	r1, #0
 5909 0026 65D0     		beq	.L727
2679:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5910              		.loc 1 2679 11 is_stmt 1 view .LVU1753
2679:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5911              		.loc 1 2679 14 is_stmt 0 view .LVU1754
 5912 0028 0129     		cmp	r1, #1
 5913 002a 00F0ED80 		beq	.L728
2713:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5914              		.loc 1 2713 11 is_stmt 1 view .LVU1755
2713:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5915              		.loc 1 2713 14 is_stmt 0 view .LVU1756
 5916 002e 0229     		cmp	r1, #2
 5917 0030 00F00B81 		beq	.L729
 5918              	.LVL490:
 5919              	.L664:
 5920              	.LBB573:
 5921              	.LBB574:
 491:src/keys.c    **** }
 5922              		.loc 1 491 2 is_stmt 1 view .LVU1757
 5923              	.LBB575:
 5924              	.LBI575:
 131:src/keys.c    **** {
 5925              		.loc 1 131 12 view .LVU1758
 5926              	.LBB576:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5927              		.loc 1 133 2 view .LVU1759
 143:src/keys.c    **** }
 5928              		.loc 1 143 2 view .LVU1760
ARM GAS  /tmp/ccXySG1f.s 			page 188


 143:src/keys.c    **** }
 5929              		.loc 1 143 23 is_stmt 0 view .LVU1761
 5930 0034 AB4B     		ldr	r3, .L742+8
 5931              	.LBE576:
 5932              	.LBE575:
 491:src/keys.c    **** }
 5933              		.loc 1 491 49 view .LVU1762
 5934 0036 AC4A     		ldr	r2, .L742+12
 5935              	.LBB578:
 5936              	.LBB577:
 143:src/keys.c    **** }
 5937              		.loc 1 143 23 view .LVU1763
 5938 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 5939              	.LBE577:
 5940              	.LBE578:
 491:src/keys.c    **** }
 5941              		.loc 1 491 49 view .LVU1764
 5942 003a 03EB4303 		add	r3, r3, r3, lsl #1
 5943 003e 02EB4303 		add	r3, r2, r3, lsl #1
 5944              	.LBE574:
 5945              	.LBE573:
 5946              	.LBB582:
 5947              	.LBB583:
 5948              	.LBB584:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5949              		.loc 1 106 16 view .LVU1765
 5950 0042 0025     		movs	r5, #0
 5951              	.LVL491:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5952              		.loc 1 106 16 view .LVU1766
 5953              	.LBE584:
 5954              	.LBE583:
 5955              	.LBE582:
2723:src/keys.c    ****    reset_shift();
 5956              		.loc 1 2723 9 view .LVU1767
 5957 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 5958              	.LVL492:
2723:src/keys.c    ****    reset_shift();
 5959              		.loc 1 2723 9 view .LVU1768
 5960 0046 FFF7FEFF 		bl	remap_chars
 5961              	.LVL493:
2723:src/keys.c    ****    reset_shift();
 5962              		.loc 1 2723 9 view .LVU1769
 5963 004a 0446     		mov	r4, r0
 5964              	.LVL494:
2724:src/keys.c    ****    if (ch == '\0')
 5965              		.loc 1 2724 4 is_stmt 1 view .LVU1770
 5966              	.LBB589:
 5967              	.LBI582:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 5968              		.loc 1 114 13 view .LVU1771
 5969              	.LBE589:
 115:src/keys.c    **** }
 5970              		.loc 1 115 2 view .LVU1772
 5971              	.LBB590:
 5972              	.LBB588:
 5973              	.LBI583:
ARM GAS  /tmp/ccXySG1f.s 			page 189


 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5974              		.loc 1 104 20 view .LVU1773
 5975              	.LBB587:
 105:src/keys.c    **** 	State2.shifts = shift;
 5976              		.loc 1 105 2 view .LVU1774
 5977              	.LBB585:
 5978              	.LBI585:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5979              		.loc 1 96 13 view .LVU1775
 5980              	.LBB586:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5981              		.loc 1 97 2 view .LVU1776
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5982              		.loc 1 97 18 is_stmt 0 view .LVU1777
 5983 004c FFF7FEFF 		bl	shift_down
 5984              	.LVL495:
  98:src/keys.c    **** }
 5985              		.loc 1 98 2 is_stmt 1 view .LVU1778
 5986              	.LBE586:
 5987              	.LBE585:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5988              		.loc 1 106 2 view .LVU1779
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5989              		.loc 1 106 16 is_stmt 0 view .LVU1780
 5990 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 5991              		.loc 1 108 2 is_stmt 1 view .LVU1781
 5992              	.LVL496:
 108:src/keys.c    **** }
 5993              		.loc 1 108 2 is_stmt 0 view .LVU1782
 5994              	.LBE587:
 5995              	.LBE588:
 5996              	.LBE590:
2725:src/keys.c    ****      return STATE_UNFINISHED;
 5997              		.loc 1 2725 4 is_stmt 1 view .LVU1783
2725:src/keys.c    ****      return STATE_UNFINISHED;
 5998              		.loc 1 2725 7 is_stmt 0 view .LVU1784
 5999 0052 002C     		cmp	r4, #0
 6000 0054 6FD0     		beq	.L726
2727:src/keys.c    ****      // No multi character search in alpha catalogues
 6001              		.loc 1 2727 4 is_stmt 1 view .LVU1785
2727:src/keys.c    ****      // No multi character search in alpha catalogues
 6002              		.loc 1 2727 7 is_stmt 0 view .LVU1786
 6003 0056 AAF10B0A 		sub	r10, r10, #11
 6004              	.LVL497:
2727:src/keys.c    ****      // No multi character search in alpha catalogues
 6005              		.loc 1 2727 7 view .LVU1787
 6006 005a BAF1040F 		cmp	r10, #4
 6007 005e 40F2CB80 		bls	.L678
2731:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6008              		.loc 1 2731 4 is_stmt 1 view .LVU1788
2731:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6009              		.loc 1 2731 8 is_stmt 0 view .LVU1789
 6010 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2731:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6011              		.loc 1 2731 7 view .LVU1790
 6012 0064 092D     		cmp	r5, #9
ARM GAS  /tmp/ccXySG1f.s 			page 190


 6013 0066 40F2C780 		bls	.L678
 6014              	.LVL498:
 6015              	.L646:
2736:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6016              		.loc 1 2736 4 is_stmt 1 view .LVU1791
2736:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6017              		.loc 1 2736 27 is_stmt 0 view .LVU1792
 6018 006a 7B19     		adds	r3, r7, r5
 6019 006c 0025     		movs	r5, #0
 6020 006e 83F82050 		strb	r5, [r3, #32]
2737:src/keys.c    ****      char buf[16];
 6021              		.loc 1 2737 4 is_stmt 1 view .LVU1793
 6022              	.LVL499:
2737:src/keys.c    ****      char buf[16];
 6023              		.loc 1 2737 18 view .LVU1794
2737:src/keys.c    ****      char buf[16];
 6024              		.loc 1 2737 4 is_stmt 0 view .LVU1795
 6025 0072 B8F1000F 		cmp	r8, #0
 6026 0076 00F0D780 		beq	.L724
 6027              	.LVL500:
 6028              	.L666:
 6029              	.LBB591:
2738:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6030              		.loc 1 2738 6 is_stmt 1 view .LVU1796
2739:src/keys.c    ****      int i;
 6031              		.loc 1 2739 6 view .LVU1797
2739:src/keys.c    ****      int i;
 6032              		.loc 1 2739 24 is_stmt 0 view .LVU1798
 6033 007a 2846     		mov	r0, r5
 6034 007c FFF7FEFF 		bl	current_catalogue
 6035              	.LVL501:
 6036 0080 6946     		mov	r1, sp
 6037 0082 FFF7FEFF 		bl	catcmd
 6038              	.LVL502:
 6039 0086 0446     		mov	r4, r0
 6040              	.LVL503:
2740:src/keys.c    **** 
 6041              		.loc 1 2740 6 is_stmt 1 view .LVU1799
2742:src/keys.c    ****        cmd++;
 6042              		.loc 1 2742 6 view .LVU1800
2743:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6043              		.loc 1 2743 8 view .LVU1801
2742:src/keys.c    ****        cmd++;
 6044              		.loc 1 2742 10 is_stmt 0 view .LVU1802
 6045 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6046              	.LVL504:
2742:src/keys.c    ****        cmd++;
 6047              		.loc 1 2742 9 view .LVU1803
 6048 008a 1428     		cmp	r0, #20
 6049 008c 04BF     		itt	eq
 6050 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2743:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6051              		.loc 1 2743 11 view .LVU1804
 6052 0090 0134     		addeq	r4, r4, #1
 6053              	.LVL505:
2744:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6054              		.loc 1 2744 6 is_stmt 1 view .LVU1805
ARM GAS  /tmp/ccXySG1f.s 			page 191


2744:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6055              		.loc 1 2744 16 view .LVU1806
2744:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6056              		.loc 1 2744 6 is_stmt 0 view .LVU1807
 6057 0092 0028     		cmp	r0, #0
 6058 0094 00F0BF80 		beq	.L668
 6059 0098 DFF85CB2 		ldr	fp, .L742+28
 6060 009c C4F1010A 		rsb	r10, r4, #1
 6061 00a0 06E0     		b	.L671
 6062              	.LVL506:
 6063              	.L731:
 6064              	.LBB592:
2749:src/keys.c    **** 	 break;
 6065              		.loc 1 2749 16 view .LVU1808
 6066 00a2 C0F2BA80 		blt	.L670
 6067              	.LBE592:
2744:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6068              		.loc 1 2744 19 discriminator 2 view .LVU1809
 6069 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6070              	.LVL507:
2744:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6071              		.loc 1 2744 6 discriminator 2 view .LVU1810
 6072 00aa 0028     		cmp	r0, #0
 6073 00ac 00F0BF80 		beq	.L730
 6074              	.LVL508:
 6075              	.L671:
 6076              	.LBB593:
2745:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6077              		.loc 1 2745 8 is_stmt 1 view .LVU1811
2745:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6078              		.loc 1 2745 22 is_stmt 0 view .LVU1812
 6079 00b0 FFF7FEFF 		bl	remap_chars
 6080              	.LVL509:
2749:src/keys.c    **** 	 break;
 6081              		.loc 1 2749 13 is_stmt 1 view .LVU1813
 6082              	.LBE593:
2744:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6083              		.loc 1 2744 32 view .LVU1814
 6084              	.LBB594:
2746:src/keys.c    ****        if (c > cl)
 6085              		.loc 1 2746 8 view .LVU1815
2746:src/keys.c    ****        if (c > cl)
 6086              		.loc 1 2746 46 is_stmt 0 view .LVU1816
 6087 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6088              	.LVL510:
2747:src/keys.c    **** 	 goto set_pos;
 6089              		.loc 1 2747 8 is_stmt 1 view .LVU1817
2747:src/keys.c    **** 	 goto set_pos;
 6090              		.loc 1 2747 11 is_stmt 0 view .LVU1818
 6091 00b8 9842     		cmp	r0, r3
 6092 00ba 0AEB0402 		add	r2, r10, r4
 6093              	.LVL511:
2747:src/keys.c    **** 	 goto set_pos;
 6094              		.loc 1 2747 11 view .LVU1819
 6095              	.LBE594:
2744:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6096              		.loc 1 2744 16 is_stmt 1 view .LVU1820
ARM GAS  /tmp/ccXySG1f.s 			page 192


 6097              	.LBB595:
2747:src/keys.c    **** 	 goto set_pos;
 6098              		.loc 1 2747 11 is_stmt 0 view .LVU1821
 6099 00be F0DD     		ble	.L731
 6100              	.LVL512:
 6101              	.L669:
2747:src/keys.c    **** 	 goto set_pos;
 6102              		.loc 1 2747 11 view .LVU1822
 6103 00c0 D9F80040 		ldr	r4, [r9]
 6104              	.L649:
2747:src/keys.c    **** 	 goto set_pos;
 6105              		.loc 1 2747 11 view .LVU1823
 6106              	.LBE595:
 6107              	.LBE591:
2758:src/keys.c    ****      --pos;
 6108              		.loc 1 2758 10 is_stmt 1 view .LVU1824
 6109 00c4 002E     		cmp	r6, #0
 6110 00c6 00F0B680 		beq	.L653
2758:src/keys.c    ****      --pos;
 6111              		.loc 1 2758 20 is_stmt 0 view .LVU1825
 6112 00ca 4DB1     		cbz	r5, .L647
 6113              	.LVL513:
 6114              	.L725:
2758:src/keys.c    ****      --pos;
 6115              		.loc 1 2758 20 view .LVU1826
 6116 00cc 2846     		mov	r0, r5
 6117 00ce FFF7FEFF 		bl	current_catalogue
 6118              	.LVL514:
2759:src/keys.c    ****    State.catpos = pos;
 6119              		.loc 1 2759 6 is_stmt 1 view .LVU1827
2758:src/keys.c    ****      --pos;
 6120              		.loc 1 2758 10 view .LVU1828
 6121              	.LBB596:
 6122              	.LBI596:
2605:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6123              		.loc 1 2605 12 view .LVU1829
 6124              	.LBB597:
2606:src/keys.c    **** }
 6125              		.loc 1 2606 2 view .LVU1830
2606:src/keys.c    **** }
 6126              		.loc 1 2606 33 is_stmt 0 view .LVU1831
 6127 00d2 00F0F000 		and	r0, r0, #240
 6128              	.LBE597:
 6129              	.LBE596:
2758:src/keys.c    ****      --pos;
 6130              		.loc 1 2758 27 view .LVU1832
 6131 00d6 F028     		cmp	r0, #240
 6132 00d8 40F0AD80 		bne	.L653
2758:src/keys.c    ****      --pos;
 6133              		.loc 1 2758 20 view .LVU1833
 6134 00dc 013D     		subs	r5, r5, #1
 6135              	.LVL515:
2758:src/keys.c    ****      --pos;
 6136              		.loc 1 2758 20 view .LVU1834
 6137 00de F5D1     		bne	.L725
 6138              	.LVL516:
 6139              	.L647:
ARM GAS  /tmp/ccXySG1f.s 			page 193


2760:src/keys.c    ****    return STATE_UNFINISHED;
 6140              		.loc 1 2760 4 is_stmt 1 view .LVU1835
2760:src/keys.c    ****    return STATE_UNFINISHED;
 6141              		.loc 1 2760 17 is_stmt 0 view .LVU1836
 6142 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6143 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6144 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2761:src/keys.c    ****  }
 6145              		.loc 1 2761 4 is_stmt 1 view .LVU1837
2761:src/keys.c    ****  }
 6146              		.loc 1 2761 11 is_stmt 0 view .LVU1838
 6147 00ec 3320     		movs	r0, #51
 6148              	.L738:
2762:src/keys.c    **** 
 6149              		.loc 1 2762 2 view .LVU1839
 6150 00ee 05B0     		add	sp, sp, #20
 6151              		.cfi_remember_state
 6152              		.cfi_def_cfa_offset 36
 6153              		@ sp needed
 6154 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6155              	.LVL517:
 6156              	.L727:
 6157              		.cfi_restore_state
2619:src/keys.c    **** #ifdef DM42
 6158              		.loc 1 2619 6 is_stmt 1 view .LVU1840
 6159 00f4 431F     		subs	r3, r0, #5
 6160 00f6 1F2B     		cmp	r3, #31
 6161 00f8 2FD8     		bhi	.L630
 6162 00fa DFE803F0 		tbb	[pc, r3]
 6163              	.LVL518:
 6164              	.L632:
 6165 00fe 35       		.byte	(.L636-.L632)/2
 6166 00ff 2E       		.byte	(.L630-.L632)/2
 6167 0100 2E       		.byte	(.L630-.L632)/2
 6168 0101 2E       		.byte	(.L630-.L632)/2
 6169 0102 2E       		.byte	(.L630-.L632)/2
 6170 0103 2E       		.byte	(.L630-.L632)/2
 6171 0104 2E       		.byte	(.L630-.L632)/2
 6172 0105 35       		.byte	(.L636-.L632)/2
 6173 0106 2E       		.byte	(.L630-.L632)/2
 6174 0107 2E       		.byte	(.L630-.L632)/2
 6175 0108 2E       		.byte	(.L630-.L632)/2
 6176 0109 20       		.byte	(.L635-.L632)/2
 6177 010a 2E       		.byte	(.L630-.L632)/2
 6178 010b 64       		.byte	(.L634-.L632)/2
 6179 010c 2E       		.byte	(.L630-.L632)/2
 6180 010d 2E       		.byte	(.L630-.L632)/2
 6181 010e 2E       		.byte	(.L630-.L632)/2
 6182 010f 2E       		.byte	(.L630-.L632)/2
 6183 0110 2E       		.byte	(.L630-.L632)/2
 6184 0111 6B       		.byte	(.L633-.L632)/2
 6185 0112 2E       		.byte	(.L630-.L632)/2
 6186 0113 2E       		.byte	(.L630-.L632)/2
 6187 0114 2E       		.byte	(.L630-.L632)/2
 6188 0115 2E       		.byte	(.L630-.L632)/2
 6189 0116 2E       		.byte	(.L630-.L632)/2
 6190 0117 2E       		.byte	(.L630-.L632)/2
ARM GAS  /tmp/ccXySG1f.s 			page 194


 6191 0118 2E       		.byte	(.L630-.L632)/2
 6192 0119 2E       		.byte	(.L630-.L632)/2
 6193 011a 2E       		.byte	(.L630-.L632)/2
 6194 011b 2E       		.byte	(.L630-.L632)/2
 6195 011c 2E       		.byte	(.L630-.L632)/2
 6196 011d 27       		.byte	(.L631-.L632)/2
 6197              		.p2align 1
 6198              	.L737:
2708:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6199              		.loc 1 2708 42 is_stmt 0 discriminator 1 view .LVU1841
 6200 011e 734A     		ldr	r2, .L742+16
 6201              	.LVL519:
2708:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6202              		.loc 1 2708 42 discriminator 1 view .LVU1842
 6203 0120 7B69     		ldr	r3, [r7, #20]
2708:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6204              		.loc 1 2708 24 discriminator 1 view .LVU1843
 6205 0122 1A42     		tst	r2, r3
 6206 0124 75D0     		beq	.L661
2710:src/keys.c    ****        return STATE_UNFINISHED;
 6207              		.loc 1 2710 8 is_stmt 1 view .LVU1844
2710:src/keys.c    ****        return STATE_UNFINISHED;
 6208              		.loc 1 2710 38 is_stmt 0 view .LVU1845
 6209 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6210 0128 C3F30012 		ubfx	r2, r3, #4, #1
2710:src/keys.c    ****        return STATE_UNFINISHED;
 6211              		.loc 1 2710 30 view .LVU1846
 6212 012c C2F10102 		rsb	r2, r2, #1
2710:src/keys.c    ****        return STATE_UNFINISHED;
 6213              		.loc 1 2710 26 view .LVU1847
 6214 0130 62F30413 		bfi	r3, r2, #4, #1
 6215 0134 BB75     		strb	r3, [r7, #22]
 6216              	.LVL520:
 6217              	.L726:
2711:src/keys.c    ****      }
 6218              		.loc 1 2711 8 is_stmt 1 view .LVU1848
2711:src/keys.c    ****      }
 6219              		.loc 1 2711 15 is_stmt 0 view .LVU1849
 6220 0136 3320     		movs	r0, #51
 6221              	.L628:
2762:src/keys.c    **** 
 6222              		.loc 1 2762 2 view .LVU1850
 6223 0138 05B0     		add	sp, sp, #20
 6224              		.cfi_remember_state
 6225              		.cfi_def_cfa_offset 36
 6226              		@ sp needed
 6227 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6228              	.LVL521:
 6229              	.L635:
 6230              		.cfi_restore_state
2648:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6231              		.loc 1 2648 8 is_stmt 1 view .LVU1851
2648:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6232              		.loc 1 2648 11 is_stmt 0 view .LVU1852
 6233 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6234 0140 23B1     		cbz	r3, .L631
2648:src/keys.c    **** 	 if (--CmdLineLength > 0)
ARM GAS  /tmp/ccXySG1f.s 			page 195


 6235              		.loc 1 2648 33 discriminator 1 view .LVU1853
 6236 0142 FFF7FEFF 		bl	keyticks
 6237              	.LVL522:
2648:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6238              		.loc 1 2648 30 discriminator 1 view .LVU1854
 6239 0146 1D28     		cmp	r0, #29
 6240 0148 40F39580 		ble	.L732
 6241              	.L631:
2658:src/keys.c    ****        return STATE_UNFINISHED;
 6242              		.loc 1 2658 8 is_stmt 1 view .LVU1855
 6243 014c 0020     		movs	r0, #0
 6244 014e FFF7FEFF 		bl	init_cat
 6245              	.LVL523:
2659:src/keys.c    **** 
 6246              		.loc 1 2659 8 view .LVU1856
2659:src/keys.c    **** 
 6247              		.loc 1 2659 15 is_stmt 0 view .LVU1857
 6248 0152 3320     		movs	r0, #51
2762:src/keys.c    **** 
 6249              		.loc 1 2762 2 view .LVU1858
 6250 0154 05B0     		add	sp, sp, #20
 6251              		.cfi_remember_state
 6252              		.cfi_def_cfa_offset 36
 6253              		@ sp needed
 6254 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6255              	.LVL524:
 6256              	.L630:
 6257              		.cfi_restore_state
 6258              	.LBB598:
 6259              	.LBI573:
 435:src/keys.c    **** {
 6260              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1859
 6261              	.LBB579:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6262              		.loc 1 437 2 discriminator 4 view .LVU1860
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6263              		.loc 1 485 2 discriminator 4 view .LVU1861
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6264              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1862
 6265 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6266              		.loc 1 485 5 discriminator 4 view .LVU1863
 6267 015c 13F0100F 		tst	r3, #16
 6268 0160 14BF     		ite	ne
 6269 0162 0421     		movne	r1, #4
 6270              	.LVL525:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6271              		.loc 1 485 5 discriminator 4 view .LVU1864
 6272 0164 0021     		moveq	r1, #0
 6273 0166 65E7     		b	.L664
 6274              	.LVL526:
 6275              	.L636:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6276              		.loc 1 485 5 discriminator 4 view .LVU1865
 6277              	.LBE579:
 6278              	.LBE598:
2626:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
ARM GAS  /tmp/ccXySG1f.s 			page 196


 6279              		.loc 1 2626 8 is_stmt 1 view .LVU1866
2626:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6280              		.loc 1 2626 11 is_stmt 0 view .LVU1867
 6281 0168 4545     		cmp	r5, r8
 6282 016a EFDA     		bge	.L631
 6283 016c 2846     		mov	r0, r5
 6284              	.LVL527:
2626:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6285              		.loc 1 2626 24 discriminator 1 view .LVU1868
 6286 016e 002E     		cmp	r6, #0
 6287 0170 00F08D80 		beq	.L733
 6288              	.LVL528:
 6289              	.LBB599:
 6290              	.LBI599:
2605:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6291              		.loc 1 2605 12 is_stmt 1 view .LVU1869
 6292              	.LBB600:
2606:src/keys.c    **** }
 6293              		.loc 1 2606 2 view .LVU1870
2606:src/keys.c    **** }
 6294              		.loc 1 2606 10 is_stmt 0 view .LVU1871
 6295 0174 FFF7FEFF 		bl	current_catalogue
 6296              	.LVL529:
2606:src/keys.c    **** }
 6297              		.loc 1 2606 33 view .LVU1872
 6298 0178 00F0F003 		and	r3, r0, #240
 6299              	.LBE600:
 6300              	.LBE599:
2626:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6301              		.loc 1 2626 27 view .LVU1873
 6302 017c F02B     		cmp	r3, #240
 6303              	.LBB602:
 6304              	.LBB601:
2606:src/keys.c    **** }
 6305              		.loc 1 2606 10 view .LVU1874
 6306 017e 0446     		mov	r4, r0
 6307              	.LBE601:
 6308              	.LBE602:
2626:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6309              		.loc 1 2626 27 view .LVU1875
 6310 0180 E4D0     		beq	.L631
 6311              	.L639:
 6312              	.LBB603:
2627:src/keys.c    **** 
 6313              		.loc 1 2627 3 is_stmt 1 view .LVU1876
2629:src/keys.c    **** 
 6314              		.loc 1 2629 3 view .LVU1877
 6315 0182 0020     		movs	r0, #0
 6316 0184 FFF7FEFF 		bl	init_cat
 6317              	.LVL530:
2631:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6318              		.loc 1 2631 3 view .LVU1878
2631:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6319              		.loc 1 2631 6 is_stmt 0 view .LVU1879
 6320 0188 14F47043 		ands	r3, r4, #61440
 6321 018c 00F08C80 		beq	.L640
2631:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
ARM GAS  /tmp/ccXySG1f.s 			page 197


 6322              		.loc 1 2631 7 discriminator 1 view .LVU1880
 6323 0190 B3F5704F 		cmp	r3, #61440
 6324 0194 00F08880 		beq	.L640
 6325              	.LBB604:
2632:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6326              		.loc 1 2632 5 is_stmt 1 view .LVU1881
2632:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6327              		.loc 1 2632 31 is_stmt 0 view .LVU1882
 6328 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6329 019c A3F12005 		sub	r5, r3, #32
 6330              	.LVL531:
2632:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6331              		.loc 1 2632 31 view .LVU1883
 6332 01a0 EDB2     		uxtb	r5, r5
 6333              	.LVL532:
2633:src/keys.c    **** 	     return op;
 6334              		.loc 1 2633 5 is_stmt 1 view .LVU1884
2633:src/keys.c    **** 	     return op;
 6335              		.loc 1 2633 8 is_stmt 0 view .LVU1885
 6336 01a2 012D     		cmp	r5, #1
 6337 01a4 40F28980 		bls	.L641
2633:src/keys.c    **** 	     return op;
 6338              		.loc 1 2633 56 discriminator 1 view .LVU1886
 6339 01a8 6C2D     		cmp	r5, #108
 6340 01aa 00F08680 		beq	.L641
2633:src/keys.c    **** 	     return op;
 6341              		.loc 1 2633 77 discriminator 2 view .LVU1887
 6342 01ae 242D     		cmp	r5, #36
 6343 01b0 00F08380 		beq	.L641
2635:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6344              		.loc 1 2635 5 is_stmt 1 view .LVU1888
2635:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6345              		.loc 1 2635 30 is_stmt 0 view .LVU1889
 6346 01b4 A5F12D02 		sub	r2, r5, #45
2635:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6347              		.loc 1 2635 8 view .LVU1890
 6348 01b8 062A     		cmp	r2, #6
 6349 01ba 00F29F80 		bhi	.L644
2636:src/keys.c    **** 	   else
 6350              		.loc 1 2636 7 is_stmt 1 view .LVU1891
2636:src/keys.c    **** 	   else
 6351              		.loc 1 2636 28 is_stmt 0 view .LVU1892
 6352 01be 4D3B     		subs	r3, r3, #77
2636:src/keys.c    **** 	   else
 6353              		.loc 1 2636 19 view .LVU1893
 6354 01c0 FB73     		strb	r3, [r7, #15]
 6355              	.LBE604:
 6356              	.LBE603:
2645:src/keys.c    **** 
 6357              		.loc 1 2645 15 view .LVU1894
 6358 01c2 3320     		movs	r0, #51
 6359              	.LBB614:
 6360              	.LBB607:
 6361 01c4 B8E7     		b	.L628
 6362              	.LVL533:
 6363              	.L634:
2645:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 198


 6364              		.loc 1 2645 15 view .LVU1895
 6365              	.LBE607:
 6366              	.LBE614:
2662:src/keys.c    ****        if (pos == 0)
 6367              		.loc 1 2662 8 is_stmt 1 view .LVU1896
2662:src/keys.c    ****        if (pos == 0)
 6368              		.loc 1 2662 22 is_stmt 0 view .LVU1897
 6369 01c6 0023     		movs	r3, #0
 6370 01c8 3B77     		strb	r3, [r7, #28]
2663:src/keys.c    **** 	 goto set_max;
 6371              		.loc 1 2663 8 is_stmt 1 view .LVU1898
2663:src/keys.c    **** 	 goto set_max;
 6372              		.loc 1 2663 11 is_stmt 0 view .LVU1899
 6373 01ca 002D     		cmp	r5, #0
 6374 01cc 5DD1     		bne	.L734
 6375              	.LVL534:
 6376              	.L648:
2756:src/keys.c    ****  set_pos:
 6377              		.loc 1 2756 4 is_stmt 1 view .LVU1900
2756:src/keys.c    ****  set_pos:
 6378              		.loc 1 2756 8 is_stmt 0 view .LVU1901
 6379 01ce 08F1FF35 		add	r5, r8, #-1
 6380              	.LVL535:
2756:src/keys.c    ****  set_pos:
 6381              		.loc 1 2756 8 view .LVU1902
 6382 01d2 77E7     		b	.L649
 6383              	.LVL536:
 6384              	.L633:
2670:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6385              		.loc 1 2670 8 is_stmt 1 view .LVU1903
2670:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6386              		.loc 1 2670 22 is_stmt 0 view .LVU1904
 6387 01d4 0023     		movs	r3, #0
 6388 01d6 3B77     		strb	r3, [r7, #28]
2671:src/keys.c    ****        if (pos >= ctmax)
 6389              		.loc 1 2671 8 is_stmt 1 view .LVU1905
2671:src/keys.c    ****        if (pos >= ctmax)
 6390              		.loc 1 2671 14 is_stmt 0 view .LVU1906
 6391 01d8 06E0     		b	.L652
 6392              	.LVL537:
 6393              	.L735:
2671:src/keys.c    ****        if (pos >= ctmax)
 6394              		.loc 1 2671 29 discriminator 1 view .LVU1907
 6395 01da 66B3     		cbz	r6, .L653
 6396              	.LBB615:
 6397              	.LBB616:
2606:src/keys.c    **** }
 6398              		.loc 1 2606 10 view .LVU1908
 6399 01dc FFF7FEFF 		bl	current_catalogue
 6400              	.LVL538:
2606:src/keys.c    **** }
 6401              		.loc 1 2606 33 view .LVU1909
 6402 01e0 00F0F000 		and	r0, r0, #240
 6403              	.LBE616:
 6404              	.LBE615:
2671:src/keys.c    ****        if (pos >= ctmax)
 6405              		.loc 1 2671 41 view .LVU1910
ARM GAS  /tmp/ccXySG1f.s 			page 199


 6406 01e4 F028     		cmp	r0, #240
 6407 01e6 26D1     		bne	.L653
 6408              	.L652:
2671:src/keys.c    ****        if (pos >= ctmax)
 6409              		.loc 1 2671 65 is_stmt 1 discriminator 3 view .LVU1911
2671:src/keys.c    ****        if (pos >= ctmax)
 6410              		.loc 1 2671 14 discriminator 3 view .LVU1912
 6411 01e8 0135     		adds	r5, r5, #1
 6412              	.LVL539:
 6413              	.LBB619:
 6414              	.LBI615:
2605:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6415              		.loc 1 2605 12 discriminator 3 view .LVU1913
 6416              	.LBB617:
2606:src/keys.c    **** }
 6417              		.loc 1 2606 2 discriminator 3 view .LVU1914
 6418              	.LBE617:
 6419              	.LBE619:
2671:src/keys.c    ****        if (pos >= ctmax)
 6420              		.loc 1 2671 14 is_stmt 0 discriminator 3 view .LVU1915
 6421 01ea A845     		cmp	r8, r5
 6422              	.LBB620:
 6423              	.LBB618:
2606:src/keys.c    **** }
 6424              		.loc 1 2606 10 discriminator 3 view .LVU1916
 6425 01ec 2846     		mov	r0, r5
 6426              	.LBE618:
 6427              	.LBE620:
2671:src/keys.c    ****        if (pos >= ctmax)
 6428              		.loc 1 2671 14 discriminator 3 view .LVU1917
 6429 01ee F4DC     		bgt	.L735
 6430              	.LVL540:
2758:src/keys.c    ****      --pos;
 6431              		.loc 1 2758 10 is_stmt 1 view .LVU1918
2673:src/keys.c    ****        goto set_pos;
 6432              		.loc 1 2673 7 is_stmt 0 view .LVU1919
 6433 01f0 3546     		mov	r5, r6
 6434              	.LVL541:
2758:src/keys.c    ****      --pos;
 6435              		.loc 1 2758 10 view .LVU1920
 6436 01f2 06B3     		cbz	r6, .L653
 6437              	.LVL542:
2758:src/keys.c    ****      --pos;
 6438              		.loc 1 2758 10 view .LVU1921
 6439 01f4 0025     		movs	r5, #0
 6440              	.LVL543:
2758:src/keys.c    ****      --pos;
 6441              		.loc 1 2758 10 view .LVU1922
 6442 01f6 73E7     		b	.L647
 6443              	.LVL544:
 6444              	.L678:
2731:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6445              		.loc 1 2731 8 view .LVU1923
 6446 01f8 2B46     		mov	r3, r5
2732:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6447              		.loc 1 2732 6 is_stmt 1 view .LVU1924
2732:src/keys.c    ****    /* Search for the current buffer in the catalogue */
ARM GAS  /tmp/ccXySG1f.s 			page 200


 6448              		.loc 1 2732 31 is_stmt 0 view .LVU1925
 6449 01fa 3B44     		add	r3, r3, r7
2732:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6450              		.loc 1 2732 27 view .LVU1926
 6451 01fc 0135     		adds	r5, r5, #1
 6452 01fe EDB2     		uxtb	r5, r5
 6453 0200 3D77     		strb	r5, [r7, #28]
2732:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6454              		.loc 1 2732 31 view .LVU1927
 6455 0202 83F82040 		strb	r4, [r3, #32]
 6456 0206 30E7     		b	.L646
 6457              	.LVL545:
 6458              	.L728:
2680:src/keys.c    ****        /*
 6459              		.loc 1 2680 6 is_stmt 1 view .LVU1928
2680:src/keys.c    ****        /*
 6460              		.loc 1 2680 9 is_stmt 0 view .LVU1929
 6461 0208 BAF1120F 		cmp	r10, #18
 6462 020c 21D0     		beq	.L736
 6463              	.L655:
2708:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6464              		.loc 1 2708 11 is_stmt 1 view .LVU1930
2708:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6465              		.loc 1 2708 14 is_stmt 0 view .LVU1931
 6466 020e 2428     		cmp	r0, #36
 6467 0210 85D0     		beq	.L737
 6468              	.LVL546:
 6469              	.L661:
2723:src/keys.c    ****    reset_shift();
 6470              		.loc 1 2723 4 is_stmt 1 view .LVU1932
 6471              	.LBB621:
 435:src/keys.c    **** {
 6472              		.loc 1 435 12 view .LVU1933
 6473              	.LBB580:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6474              		.loc 1 437 2 view .LVU1934
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6475              		.loc 1 485 2 view .LVU1935
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6476              		.loc 1 485 5 is_stmt 0 view .LVU1936
 6477 0212 0121     		movs	r1, #1
 6478              	.LVL547:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6479              		.loc 1 485 5 view .LVU1937
 6480 0214 0EE7     		b	.L664
 6481              	.LVL548:
 6482              	.L668:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6483              		.loc 1 485 5 view .LVU1938
 6484 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6485              	.LVL549:
 6486              	.L670:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6487              		.loc 1 485 5 view .LVU1939
 6488              	.LBE580:
 6489              	.LBE621:
 6490              	.LBB622:
ARM GAS  /tmp/ccXySG1f.s 			page 201


2752:src/keys.c    ****        goto set_pos;
 6491              		.loc 1 2752 6 is_stmt 1 view .LVU1940
2752:src/keys.c    ****        goto set_pos;
 6492              		.loc 1 2752 9 is_stmt 0 view .LVU1941
 6493 021a 002B     		cmp	r3, #0
 6494 021c 3FF450AF 		beq	.L669
 6495              	.LBE622:
2737:src/keys.c    ****      char buf[16];
 6496              		.loc 1 2737 31 is_stmt 1 view .LVU1942
 6497 0220 0135     		adds	r5, r5, #1
 6498              	.LVL550:
2737:src/keys.c    ****      char buf[16];
 6499              		.loc 1 2737 18 view .LVU1943
2737:src/keys.c    ****      char buf[16];
 6500              		.loc 1 2737 4 is_stmt 0 view .LVU1944
 6501 0222 A845     		cmp	r8, r5
 6502 0224 7FF429AF 		bne	.L666
 6503              	.LVL551:
 6504              	.L724:
2737:src/keys.c    ****      char buf[16];
 6505              		.loc 1 2737 4 view .LVU1945
 6506 0228 D9F80040 		ldr	r4, [r9]
 6507 022c CFE7     		b	.L648
 6508              	.LVL552:
 6509              	.L730:
2737:src/keys.c    ****      char buf[16];
 6510              		.loc 1 2737 4 view .LVU1946
 6511 022e 3A44     		add	r2, r2, r7
 6512              	.LVL553:
2737:src/keys.c    ****      char buf[16];
 6513              		.loc 1 2737 4 view .LVU1947
 6514 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6515              	.LVL554:
2737:src/keys.c    ****      char buf[16];
 6516              		.loc 1 2737 4 view .LVU1948
 6517 0234 F1E7     		b	.L670
 6518              	.LVL555:
 6519              	.L653:
2760:src/keys.c    ****    return STATE_UNFINISHED;
 6520              		.loc 1 2760 17 view .LVU1949
 6521 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6522 023a 05F07F05 		and	r5, r5, #127
 6523              	.LVL556:
2760:src/keys.c    ****    return STATE_UNFINISHED;
 6524              		.loc 1 2760 4 is_stmt 1 view .LVU1950
2760:src/keys.c    ****    return STATE_UNFINISHED;
 6525              		.loc 1 2760 17 is_stmt 0 view .LVU1951
 6526 023e 65F34B13 		bfi	r3, r5, #5, #7
 6527 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2761:src/keys.c    ****  }
 6528              		.loc 1 2761 4 is_stmt 1 view .LVU1952
2761:src/keys.c    ****  }
 6529              		.loc 1 2761 11 is_stmt 0 view .LVU1953
 6530 0246 3320     		movs	r0, #51
 6531 0248 51E7     		b	.L738
 6532              	.LVL557:
 6533              	.L729:
ARM GAS  /tmp/ccXySG1f.s 			page 202


2714:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6534              		.loc 1 2714 6 is_stmt 1 view .LVU1954
2714:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6535              		.loc 1 2714 9 is_stmt 0 view .LVU1955
 6536 024a 1028     		cmp	r0, #16
 6537 024c 23D0     		beq	.L739
 6538              	.L663:
2723:src/keys.c    ****    reset_shift();
 6539              		.loc 1 2723 4 is_stmt 1 view .LVU1956
 6540              	.LVL558:
 6541              	.LBB623:
 435:src/keys.c    **** {
 6542              		.loc 1 435 12 view .LVU1957
 6543              	.LBB581:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6544              		.loc 1 437 2 view .LVU1958
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6545              		.loc 1 485 2 view .LVU1959
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6546              		.loc 1 485 5 is_stmt 0 view .LVU1960
 6547 024e 0521     		movs	r1, #5
 6548              	.LVL559:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6549              		.loc 1 485 5 view .LVU1961
 6550 0250 F0E6     		b	.L664
 6551              	.LVL560:
 6552              	.L736:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6553              		.loc 1 485 5 view .LVU1962
 6554              	.LBE581:
 6555              	.LBE623:
2680:src/keys.c    ****        /*
 6556              		.loc 1 2680 32 discriminator 1 view .LVU1963
 6557 0252 0128     		cmp	r0, #1
 6558 0254 DBD1     		bne	.L655
 6559              	.LBB624:
2689:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6560              		.loc 1 2689 8 is_stmt 1 view .LVU1964
2697:src/keys.c    ****        int i;
 6561              		.loc 1 2697 8 view .LVU1965
2697:src/keys.c    ****        int i;
 6562              		.loc 1 2697 26 is_stmt 0 view .LVU1966
 6563 0256 2846     		mov	r0, r5
 6564              	.LVL561:
2697:src/keys.c    ****        int i;
 6565              		.loc 1 2697 26 view .LVU1967
 6566 0258 FFF7FEFF 		bl	current_catalogue
 6567              	.LVL562:
2697:src/keys.c    ****        int i;
 6568              		.loc 1 2697 26 view .LVU1968
 6569 025c 0446     		mov	r4, r0
 6570              	.LVL563:
2698:src/keys.c    **** 
 6571              		.loc 1 2698 8 is_stmt 1 view .LVU1969
2700:src/keys.c    ****        if (isRARG(op))
 6572              		.loc 1 2700 8 view .LVU1970
 6573 025e 0020     		movs	r0, #0
ARM GAS  /tmp/ccXySG1f.s 			page 203


 6574              	.LVL564:
2700:src/keys.c    ****        if (isRARG(op))
 6575              		.loc 1 2700 8 is_stmt 0 view .LVU1971
 6576 0260 FFF7FEFF 		bl	init_cat
 6577              	.LVL565:
2701:src/keys.c    **** 	 return op ^ 1;
 6578              		.loc 1 2701 8 is_stmt 1 view .LVU1972
2701:src/keys.c    **** 	 return op ^ 1;
 6579              		.loc 1 2701 11 is_stmt 0 view .LVU1973
 6580 0264 14F47043 		ands	r3, r4, #61440
 6581 0268 29D0     		beq	.L656
2701:src/keys.c    **** 	 return op ^ 1;
 6582              		.loc 1 2701 12 discriminator 1 view .LVU1974
 6583 026a B3F5704F 		cmp	r3, #61440
 6584 026e 26D0     		beq	.L656
2702:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6585              		.loc 1 2702 3 is_stmt 1 view .LVU1975
2702:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6586              		.loc 1 2702 13 is_stmt 0 view .LVU1976
 6587 0270 84F00100 		eor	r0, r4, #1
 6588 0274 60E7     		b	.L628
 6589              	.LVL566:
 6590              	.L732:
2702:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6591              		.loc 1 2702 13 view .LVU1977
 6592              	.LBE624:
2649:src/keys.c    **** 	   goto search;
 6593              		.loc 1 2649 3 is_stmt 1 view .LVU1978
2649:src/keys.c    **** 	   goto search;
 6594              		.loc 1 2649 7 is_stmt 0 view .LVU1979
 6595 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6596              	.LVL567:
2649:src/keys.c    **** 	   goto search;
 6597              		.loc 1 2649 7 view .LVU1980
 6598 0278 013D     		subs	r5, r5, #1
 6599 027a EDB2     		uxtb	r5, r5
2649:src/keys.c    **** 	   goto search;
 6600              		.loc 1 2649 6 view .LVU1981
 6601 027c 3D77     		strb	r5, [r7, #28]
 6602 027e 002D     		cmp	r5, #0
 6603 0280 7FF4F3AE 		bne	.L646
 6604 0284 D9F80040 		ldr	r4, [r9]
 6605 0288 2AE7     		b	.L647
 6606              	.LVL568:
 6607              	.L734:
2666:src/keys.c    ****        goto set_pos;
 6608              		.loc 1 2666 3 is_stmt 1 view .LVU1982
 6609 028a 013D     		subs	r5, r5, #1
 6610              	.LVL569:
2667:src/keys.c    **** 
 6611              		.loc 1 2667 8 view .LVU1983
 6612 028c 1AE7     		b	.L649
 6613              	.LVL570:
 6614              	.L733:
2667:src/keys.c    **** 
 6615              		.loc 1 2667 8 is_stmt 0 view .LVU1984
 6616 028e FFF7FEFF 		bl	current_catalogue
ARM GAS  /tmp/ccXySG1f.s 			page 204


 6617              	.LVL571:
2667:src/keys.c    **** 
 6618              		.loc 1 2667 8 view .LVU1985
 6619 0292 0446     		mov	r4, r0
 6620 0294 75E7     		b	.L639
 6621              	.LVL572:
 6622              	.L739:
2714:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6623              		.loc 1 2714 19 discriminator 1 view .LVU1986
 6624 0296 BAF1130F 		cmp	r10, #19
 6625 029a D8D1     		bne	.L663
2715:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6626              		.loc 1 2715 8 is_stmt 1 view .LVU1987
 6627 029c 0020     		movs	r0, #0
 6628              	.LVL573:
2715:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6629              		.loc 1 2715 8 is_stmt 0 view .LVU1988
 6630 029e FFF7FEFF 		bl	init_cat
 6631              	.LVL574:
2716:src/keys.c    ****      }
 6632              		.loc 1 2716 8 is_stmt 1 view .LVU1989
2716:src/keys.c    ****      }
 6633              		.loc 1 2716 15 is_stmt 0 view .LVU1990
 6634 02a2 40F23D10 		movw	r0, #317
 6635 02a6 47E7     		b	.L628
 6636              	.L640:
 6637              	.LBB625:
2641:src/keys.c    **** 	 }
 6638              		.loc 1 2641 5 is_stmt 1 view .LVU1991
 6639              	.LBB608:
 6640              	.LBB609:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6641              		.loc 1 705 5 is_stmt 0 view .LVU1992
 6642 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6643 02ac 012B     		cmp	r3, #1
 6644              	.LBE609:
 6645              	.LBE608:
2641:src/keys.c    **** 	 }
 6646              		.loc 1 2641 12 view .LVU1993
 6647 02ae 2046     		mov	r0, r4
 6648              	.LVL575:
 6649              	.LBB611:
 6650              	.LBI608:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6651              		.loc 1 704 12 is_stmt 1 view .LVU1994
 6652              	.LBB610:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6653              		.loc 1 705 2 view .LVU1995
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6654              		.loc 1 705 5 is_stmt 0 view .LVU1996
 6655 02b0 7FF442AF 		bne	.L628
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6656              		.loc 1 705 5 view .LVU1997
 6657 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6658              	.LVL576:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6659              		.loc 1 705 5 view .LVU1998
ARM GAS  /tmp/ccXySG1f.s 			page 205


 6660 02b8 3EE7     		b	.L628
 6661              	.LVL577:
 6662              	.L641:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6663              		.loc 1 705 5 view .LVU1999
 6664              	.LBE610:
 6665              	.LBE611:
 6666              	.LBB612:
2634:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6667              		.loc 1 2634 7 is_stmt 1 view .LVU2000
2634:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6668              		.loc 1 2634 14 is_stmt 0 view .LVU2001
 6669 02ba 2046     		mov	r0, r4
 6670 02bc 3CE7     		b	.L628
 6671              	.LVL578:
 6672              	.L656:
2634:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6673              		.loc 1 2634 14 view .LVU2002
 6674 02be 0C48     		ldr	r0, .L742+20
 6675              	.LBE612:
 6676              	.LBE625:
2612:src/keys.c    ****    int pos = State.catpos;
 6677              		.loc 1 2612 93 view .LVU2003
 6678 02c0 40F28522 		movw	r2, #645
 6679 02c4 0146     		mov	r1, r0
 6680 02c6 0023     		movs	r3, #0
 6681 02c8 01E0     		b	.L658
 6682              	.LVL579:
 6683              	.L741:
2612:src/keys.c    ****    int pos = State.catpos;
 6684              		.loc 1 2612 93 view .LVU2004
 6685 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6686              	.LVL580:
 6687              	.L658:
 6688              	.LBB626:
2704:src/keys.c    **** 	   return conv_mapping[i^1];
 6689              		.loc 1 2704 3 is_stmt 1 view .LVU2005
2703:src/keys.c    **** 	 if (op == conv_mapping[i])
 6690              		.loc 1 2703 72 view .LVU2006
2704:src/keys.c    **** 	   return conv_mapping[i^1];
 6691              		.loc 1 2704 6 is_stmt 0 view .LVU2007
 6692 02ce A242     		cmp	r2, r4
 6693 02d0 1ED0     		beq	.L740
2703:src/keys.c    **** 	 if (op == conv_mapping[i])
 6694              		.loc 1 2703 72 discriminator 2 view .LVU2008
 6695 02d2 0133     		adds	r3, r3, #1
 6696              	.LVL581:
2703:src/keys.c    **** 	 if (op == conv_mapping[i])
 6697              		.loc 1 2703 20 is_stmt 1 discriminator 2 view .LVU2009
2703:src/keys.c    **** 	 if (op == conv_mapping[i])
 6698              		.loc 1 2703 8 is_stmt 0 discriminator 2 view .LVU2010
 6699 02d4 0C2B     		cmp	r3, #12
 6700 02d6 F8D1     		bne	.L741
 6701 02d8 2DE7     		b	.L726
 6702              	.L743:
 6703 02da 00BF     		.align	2
 6704              	.L742:
ARM GAS  /tmp/ccXySG1f.s 			page 206


 6705 02dc 00000000 		.word	StateWhileOn
 6706 02e0 00000000 		.word	.LANCHOR8
 6707 02e4 00000000 		.word	.LANCHOR6
 6708 02e8 00000000 		.word	.LANCHOR15
 6709 02ec 00080800 		.word	526336
 6710 02f0 00000000 		.word	.LANCHOR14
 6711 02f4 00000000 		.word	main_ram
 6712 02f8 1F000000 		.word	StateWhileOn+31
 6713              	.LVL582:
 6714              	.L644:
2703:src/keys.c    **** 	 if (op == conv_mapping[i])
 6715              		.loc 1 2703 8 discriminator 2 view .LVU2011
 6716              	.LBE626:
 6717              	.LBB627:
 6718              	.LBB613:
2638:src/keys.c    **** 	 }
 6719              		.loc 1 2638 7 is_stmt 1 view .LVU2012
 6720              	.LBB605:
 6721              	.LBI605:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6722              		.loc 1 552 13 view .LVU2013
 6723              	.LBB606:
 553:src/keys.c    **** 		return;
 6724              		.loc 1 553 2 view .LVU2014
 553:src/keys.c    **** 		return;
 6725              		.loc 1 553 6 is_stmt 0 view .LVU2015
 6726 02fc FFF7FEFF 		bl	is_bad_cmdline
 6727              	.LVL583:
 553:src/keys.c    **** 		return;
 6728              		.loc 1 553 5 view .LVU2016
 6729 0300 0028     		cmp	r0, #0
 6730 0302 7FF418AF 		bne	.L726
 6731 0306 2846     		mov	r0, r5
 6732 0308 FFF7FEFF 		bl	init_arg.part.0
 6733              	.LVL584:
 6734              	.LBE606:
 6735              	.LBE605:
 6736              	.LBE613:
 6737              	.LBE627:
2645:src/keys.c    **** 
 6738              		.loc 1 2645 15 view .LVU2017
 6739 030c 3320     		movs	r0, #51
 6740 030e 13E7     		b	.L628
 6741              	.LVL585:
 6742              	.L740:
 6743              	.LBB628:
2705:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6744              		.loc 1 2705 5 is_stmt 1 view .LVU2018
2705:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6745              		.loc 1 2705 26 is_stmt 0 view .LVU2019
 6746 0310 83F00103 		eor	r3, r3, #1
 6747              	.LVL586:
2705:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6748              		.loc 1 2705 24 view .LVU2020
 6749 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6750 0318 0EE7     		b	.L628
 6751              	.LBE628:
ARM GAS  /tmp/ccXySG1f.s 			page 207


 6752              		.cfi_endproc
 6753              	.LFE48:
 6755              		.section	.text.find_pos,"ax",%progbits
 6756              		.align	1
 6757              		.p2align 2,,3
 6758              		.global	find_pos
 6759              		.syntax unified
 6760              		.thumb
 6761              		.thumb_func
 6762              		.fpu fpv4-sp-d16
 6764              	find_pos:
 6765              	.LVL587:
 6766              	.LFB49:
2765:src/keys.c    **** 	int pos;
 6767              		.loc 1 2765 32 is_stmt 1 view -0
 6768              		.cfi_startproc
 6769              		@ args = 0, pretend = 0, frame = 16
 6770              		@ frame_needed = 0, uses_anonymous_args = 0
2766:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6771              		.loc 1 2766 2 view .LVU2022
2767:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6772              		.loc 1 2767 2 view .LVU2023
 6773              	.LBB629:
 6774              	.LBI629:
2467:src/keys.c    **** 	// A quick table of catalogue sizes
 6775              		.loc 1 2467 5 view .LVU2024
 6776              	.LBB630:
2470:src/keys.c    **** 	{
 6777              		.loc 1 2470 2 view .LVU2025
2501:src/keys.c    **** #endif
 6778              		.loc 1 2501 2 view .LVU2026
 6779              	.LBE630:
 6780              	.LBE629:
2765:src/keys.c    **** 	int pos;
 6781              		.loc 1 2765 32 is_stmt 0 view .LVU2027
 6782 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6783              		.cfi_def_cfa_offset 32
 6784              		.cfi_offset 4, -32
 6785              		.cfi_offset 5, -28
 6786              		.cfi_offset 6, -24
 6787              		.cfi_offset 7, -20
 6788              		.cfi_offset 8, -16
 6789              		.cfi_offset 9, -12
 6790              		.cfi_offset 10, -8
 6791              		.cfi_offset 14, -4
 6792              	.LBB632:
 6793              	.LBB631:
2501:src/keys.c    **** #endif
 6794              		.loc 1 2501 31 view .LVU2028
 6795 0004 1E4B     		ldr	r3, .L761
2501:src/keys.c    **** #endif
 6796              		.loc 1 2501 24 view .LVU2029
 6797 0006 1F4A     		ldr	r2, .L761+4
2501:src/keys.c    **** #endif
 6798              		.loc 1 2501 31 view .LVU2030
 6799 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2501:src/keys.c    **** #endif
ARM GAS  /tmp/ccXySG1f.s 			page 208


 6800              		.loc 1 2501 24 view .LVU2031
 6801 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6802              	.LVL588:
2501:src/keys.c    **** #endif
 6803              		.loc 1 2501 24 view .LVU2032
 6804              	.LBE631:
 6805              	.LBE632:
2768:src/keys.c    **** 		char buf[16];
 6806              		.loc 1 2768 2 is_stmt 1 view .LVU2033
2768:src/keys.c    **** 		char buf[16];
 6807              		.loc 1 2768 16 view .LVU2034
2765:src/keys.c    **** 	int pos;
 6808              		.loc 1 2765 32 is_stmt 0 view .LVU2035
 6809 000e 84B0     		sub	sp, sp, #16
 6810              		.cfi_def_cfa_offset 48
2768:src/keys.c    **** 		char buf[16];
 6811              		.loc 1 2768 2 view .LVU2036
 6812 0010 BAF1000F 		cmp	r10, #0
 6813 0014 32D0     		beq	.L751
 6814 0016 8146     		mov	r9, r0
2768:src/keys.c    **** 		char buf[16];
 6815              		.loc 1 2768 11 view .LVU2037
 6816 0018 4FF00008 		mov	r8, #0
 6817 001c C0F10107 		rsb	r7, r0, #1
 6818              	.LVL589:
 6819              	.L750:
 6820              	.LBB633:
2769:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6821              		.loc 1 2769 3 is_stmt 1 view .LVU2038
2770:src/keys.c    **** 		int i;
 6822              		.loc 1 2770 3 view .LVU2039
2770:src/keys.c    **** 		int i;
 6823              		.loc 1 2770 21 is_stmt 0 view .LVU2040
 6824 0020 4046     		mov	r0, r8
 6825 0022 FFF7FEFF 		bl	current_catalogue
 6826              	.LVL590:
 6827 0026 6946     		mov	r1, sp
 6828 0028 FFF7FEFF 		bl	catcmd
 6829              	.LVL591:
 6830 002c 0646     		mov	r6, r0
 6831              	.LVL592:
2771:src/keys.c    **** 
 6832              		.loc 1 2771 3 is_stmt 1 view .LVU2041
2773:src/keys.c    **** 			cmd++;
 6833              		.loc 1 2773 3 view .LVU2042
2774:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6834              		.loc 1 2774 4 view .LVU2043
2773:src/keys.c    **** 			cmd++;
 6835              		.loc 1 2773 7 is_stmt 0 view .LVU2044
 6836 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6837              	.LVL593:
2773:src/keys.c    **** 			cmd++;
 6838              		.loc 1 2773 6 view .LVU2045
 6839 0030 1428     		cmp	r0, #20
 6840 0032 04BF     		itt	eq
 6841 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2774:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
ARM GAS  /tmp/ccXySG1f.s 			page 209


 6842              		.loc 1 2774 7 view .LVU2046
 6843 0036 0136     		addeq	r6, r6, #1
 6844              	.LVL594:
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6845              		.loc 1 2775 3 is_stmt 1 view .LVU2047
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6846              		.loc 1 2775 13 view .LVU2048
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6847              		.loc 1 2775 3 is_stmt 0 view .LVU2049
 6848 0038 A8B1     		cbz	r0, .L752
 6849 003a 09F1FF33 		add	r3, r9, #-1
 6850 003e 04E0     		b	.L749
 6851              	.LVL595:
 6852              	.L760:
 6853              	.LBB634:
2780:src/keys.c    **** 				break;
 6854              		.loc 1 2780 12 view .LVU2050
 6855 0040 12DB     		blt	.L747
 6856              	.LBE634:
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6857              		.loc 1 2775 16 discriminator 2 view .LVU2051
 6858 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6859              	.LVL596:
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6860              		.loc 1 2775 16 discriminator 2 view .LVU2052
 6861 0046 3C44     		add	r4, r4, r7
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6862              		.loc 1 2775 3 discriminator 2 view .LVU2053
 6863 0048 B0B1     		cbz	r0, .L759
 6864              	.LVL597:
 6865              	.L749:
 6866              	.LBB635:
2776:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6867              		.loc 1 2776 4 is_stmt 1 view .LVU2054
 6868 004a 5C1C     		adds	r4, r3, #1
2776:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6869              		.loc 1 2776 18 is_stmt 0 view .LVU2055
 6870 004c FFF7FEFF 		bl	remap_chars
 6871              	.LVL598:
 6872 0050 0546     		mov	r5, r0
2777:src/keys.c    **** 			if (c > cl)
 6873              		.loc 1 2777 19 view .LVU2056
 6874 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6875              	.LVL599:
2777:src/keys.c    **** 			if (c > cl)
 6876              		.loc 1 2777 4 is_stmt 1 view .LVU2057
2777:src/keys.c    **** 			if (c > cl)
 6877              		.loc 1 2777 19 is_stmt 0 view .LVU2058
 6878 0054 FFF7FEFF 		bl	remap_chars
 6879              	.LVL600:
2780:src/keys.c    **** 				break;
 6880              		.loc 1 2780 9 is_stmt 1 view .LVU2059
 6881              	.LBE635:
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6882              		.loc 1 2775 29 view .LVU2060
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6883              		.loc 1 2775 13 view .LVU2061
ARM GAS  /tmp/ccXySG1f.s 			page 210


 6884              	.LBB636:
2778:src/keys.c    **** 				return pos;
 6885              		.loc 1 2778 4 view .LVU2062
2778:src/keys.c    **** 				return pos;
 6886              		.loc 1 2778 7 is_stmt 0 view .LVU2063
 6887 0058 8542     		cmp	r5, r0
 6888 005a 2346     		mov	r3, r4
 6889 005c F0DD     		ble	.L760
 6890              	.LVL601:
 6891              	.L744:
2778:src/keys.c    **** 				return pos;
 6892              		.loc 1 2778 7 view .LVU2064
 6893              	.LBE636:
 6894              	.LBE633:
2787:src/keys.c    **** 
 6895              		.loc 1 2787 1 view .LVU2065
 6896 005e 4046     		mov	r0, r8
 6897 0060 04B0     		add	sp, sp, #16
 6898              		.cfi_remember_state
 6899              		.cfi_def_cfa_offset 32
 6900              		@ sp needed
 6901 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6902              	.LVL602:
 6903              	.L752:
 6904              		.cfi_restore_state
 6905              	.LBB637:
2775:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6906              		.loc 1 2775 3 view .LVU2066
 6907 0066 4C46     		mov	r4, r9
 6908              	.LVL603:
 6909              	.L747:
2783:src/keys.c    **** 			return pos;
 6910              		.loc 1 2783 3 is_stmt 1 view .LVU2067
2783:src/keys.c    **** 			return pos;
 6911              		.loc 1 2783 6 is_stmt 0 view .LVU2068
 6912 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6913 006a 002B     		cmp	r3, #0
 6914 006c F7D0     		beq	.L744
 6915              	.LBE637:
2768:src/keys.c    **** 		char buf[16];
 6916              		.loc 1 2768 29 is_stmt 1 view .LVU2069
 6917 006e 08F10108 		add	r8, r8, #1
 6918              	.LVL604:
2768:src/keys.c    **** 		char buf[16];
 6919              		.loc 1 2768 16 view .LVU2070
2768:src/keys.c    **** 		char buf[16];
 6920              		.loc 1 2768 2 is_stmt 0 view .LVU2071
 6921 0072 D045     		cmp	r8, r10
 6922 0074 D4D1     		bne	.L750
 6923 0076 F2E7     		b	.L744
 6924              	.LVL605:
 6925              	.L759:
2768:src/keys.c    **** 		char buf[16];
 6926              		.loc 1 2768 2 view .LVU2072
 6927 0078 4C44     		add	r4, r4, r9
 6928 007a F5E7     		b	.L747
 6929              	.LVL606:
ARM GAS  /tmp/ccXySG1f.s 			page 211


 6930              	.L751:
2768:src/keys.c    **** 		char buf[16];
 6931              		.loc 1 2768 11 view .LVU2073
 6932 007c D046     		mov	r8, r10
 6933 007e EEE7     		b	.L744
 6934              	.L762:
 6935              		.align	2
 6936              	.L761:
 6937 0080 00000000 		.word	StateWhileOn
 6938 0084 00000000 		.word	.LANCHOR8
 6939              		.cfi_endproc
 6940              	.LFE49:
 6942              		.section	.text.get_alpha_state,"ax",%progbits
 6943              		.align	1
 6944              		.p2align 2,,3
 6945              		.global	get_alpha_state
 6946              		.syntax unified
 6947              		.thumb
 6948              		.thumb_func
 6949              		.fpu fpv4-sp-d16
 6951              	get_alpha_state:
 6952              	.LFB61:
3112:src/keys.c    **** 
3113:src/keys.c    **** 
3114:src/keys.c    **** static int process_registerlist(const keycode c) {
3115:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3116:src/keys.c    **** 	enum shifts shift = reset_shift();
3117:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3118:src/keys.c    **** 	const int g_max = global_regs();
3119:src/keys.c    **** 
3120:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3121:src/keys.c    **** 		if (local_regs())
3122:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3123:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3124:src/keys.c    **** 		goto reset_window;
3125:src/keys.c    **** 	}
3126:src/keys.c    **** 	else if (n <= 9) {
3127:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3128:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3129:src/keys.c    **** 			dv = n;
3130:src/keys.c    **** 		State2.digval = dv;
3131:src/keys.c    **** 		goto reset_window;
3132:src/keys.c    **** 	}
3133:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3134:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3135:src/keys.c    **** 		set_smode(SDISP_SHOW);
3136:src/keys.c    **** 	}
3137:src/keys.c    **** 	else if (n != NO_REG) {
3138:src/keys.c    **** 		State2.digval = n;
3139:src/keys.c    **** 		goto reset_window;
3140:src/keys.c    **** 	}
3141:src/keys.c    **** 
3142:src/keys.c    **** 	switch (c) {
3143:src/keys.c    **** 	case K_DOWN:
3144:src/keys.c    **** 		if (State2.digval > 0) {
3145:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3146:src/keys.c    **** 				State2.digval = global_regs();
ARM GAS  /tmp/ccXySG1f.s 			page 212


3147:src/keys.c    **** 			--State2.digval;
3148:src/keys.c    **** 		}
3149:src/keys.c    **** 		else
3150:src/keys.c    **** 			State2.digval = max - 1;
3151:src/keys.c    **** 		goto reset_window;
3152:src/keys.c    **** 
3153:src/keys.c    **** 	case K_UP:
3154:src/keys.c    **** 		if (State2.digval < max - 1) {
3155:src/keys.c    **** 			State2.digval++;
3156:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3157:src/keys.c    **** 				State2.digval = regX_idx;
3158:src/keys.c    **** 		}
3159:src/keys.c    **** 		else	
3160:src/keys.c    **** 			State2.digval = 0;
3161:src/keys.c    **** 		goto reset_window;
3162:src/keys.c    **** 
3163:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3164:src/keys.c    **** 	case K04:
3165:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3166:src/keys.c    **** 		goto reset_window;
3167:src/keys.c    **** #endif
3168:src/keys.c    **** 
3169:src/keys.c    **** 	case K24:			
3170:src/keys.c    **** 	//case K60:
3171:src/keys.c    **** 		if (State2.disp_temp)
3172:src/keys.c    **** 			return STATE_UNFINISHED;
3173:src/keys.c    **** 		break;		// Exit doing nothing
3174:src/keys.c    **** 
3175:src/keys.c    **** 	case K20:		// ENTER
3176:src/keys.c    **** 		if (shift == SHIFT_F) {
3177:src/keys.c    **** 			State2.disp_as_alpha = 1;
3178:src/keys.c    **** 			goto reset_window;
3179:src/keys.c    **** 		}
3180:src/keys.c    **** 	case K11:		// RCL
3181:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3182:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3183:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3184:src/keys.c    **** #else
3185:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3186:src/keys.c    **** #endif
3187:src/keys.c    **** 			State2.registerlist = 0;
3188:src/keys.c    **** 			State2.digval = 0;
3189:src/keys.c    **** 			State2.digval2 = 0;
3190:src/keys.c    **** 			return n;
3191:src/keys.c    **** 		}
3192:src/keys.c    **** 	default:
3193:src/keys.c    **** 		return STATE_UNFINISHED;
3194:src/keys.c    **** 	}
3195:src/keys.c    **** 	State2.registerlist = 0;
3196:src/keys.c    **** 	State2.digval = 0;
3197:src/keys.c    **** 	State2.digval2 = 0;
3198:src/keys.c    **** reset_window:
3199:src/keys.c    **** 	State2.window = 0;
3200:src/keys.c    **** 	return STATE_UNFINISHED;
3201:src/keys.c    **** }
3202:src/keys.c    **** 
3203:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 213


3204:src/keys.c    **** static int process(const int c) {
3205:src/keys.c    ****   const enum shifts shift = cur_shift();
3206:src/keys.c    ****   enum catalogues cat;
3207:src/keys.c    **** 
3208:src/keys.c    ****   if (Running || Pause) {
3209:src/keys.c    ****     /*
3210:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3211:src/keys.c    ****      */
3212:src/keys.c    ****     if (c == K60 || c == K63) {
3213:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3214:src/keys.c    **** 	set_pc(0);
3215:src/keys.c    ****       Pause = 0;
3216:src/keys.c    ****       xeq_xrom();
3217:src/keys.c    ****       set_running_off();
3218:src/keys.c    ****       DispMsg = "Stopped";
3219:src/keys.c    ****       State2.disp_freeze = 0;
3220:src/keys.c    ****       return STATE_UNFINISHED;
3221:src/keys.c    ****     }
3222:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3223:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3224:src/keys.c    ****       Pause = 0;			// leave PSE statement
3225:src/keys.c    ****       GoFast = 1;
3226:src/keys.c    ****     }
3227:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3228:src/keys.c    ****     return STATE_RUNNING;
3229:src/keys.c    ****   }
3230:src/keys.c    **** 
3231:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3232:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3233:src/keys.c    ****    * if required.
3234:src/keys.c    ****    */
3235:src/keys.c    **** #ifdef DM42
3236:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3237:src/keys.c    **** #else
3238:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3239:src/keys.c    **** #endif
3240:src/keys.c    ****     {
3241:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3242:src/keys.c    ****       if (C_LOCKED) {
3243:src/keys.c    **** 	stack_restore();
3244:src/keys.c    **** 	CLEAR_REAL;
3245:src/keys.c    **** 	CLEAR_IMAG;
3246:src/keys.c    ****       }
3247:src/keys.c    **** #endif
3248:src/keys.c    ****       soft_init_state();
3249:src/keys.c    ****       return STATE_UNFINISHED;
3250:src/keys.c    ****     }
3251:src/keys.c    **** 
3252:src/keys.c    **** #ifndef CONSOLE
3253:src/keys.c    **** 	if (c == K63 && JustStopped) {
3254:src/keys.c    **** 		// Avoid an accidental restart with R/S
3255:src/keys.c    **** 		JustStopped = 0;
3256:src/keys.c    **** 		return STATE_IGNORE;
3257:src/keys.c    **** 	}
3258:src/keys.c    **** #endif
3259:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3260:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
ARM GAS  /tmp/ccXySG1f.s 			page 214


3261:src/keys.c    **** 	 */
3262:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3263:src/keys.c    **** 		CmdLineLength = 0;
3264:src/keys.c    **** 	/*
3265:src/keys.c    **** 	 *  Process the various cases
3266:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3267:src/keys.c    **** 	 */
3268:src/keys.c    **** 	if (State2.confirm)
3269:src/keys.c    **** 		return process_confirm((const keycode)c);
3270:src/keys.c    **** 
3271:src/keys.c    **** 	if (State2.rarg)
3272:src/keys.c    **** 		return process_arg((const keycode)c);
3273:src/keys.c    **** 
3274:src/keys.c    **** 	if (State2.gtodot)
3275:src/keys.c    **** 		return process_gtodot((const keycode)c);
3276:src/keys.c    **** 
3277:src/keys.c    **** 	if (State2.hyp)
3278:src/keys.c    **** 		return process_hyp((const keycode)c);
3279:src/keys.c    **** 
3280:src/keys.c    **** 	if (State2.test != TST_NONE)
3281:src/keys.c    **** 		return process_test((const keycode)c);
3282:src/keys.c    **** 
3283:src/keys.c    **** 	if (State2.status)
3284:src/keys.c    **** 		return process_status((const keycode)c);
3285:src/keys.c    **** 
3286:src/keys.c    **** 	/*
3287:src/keys.c    **** 	 *  Process shift keys directly
3288:src/keys.c    **** 	 */
3289:src/keys.c    **** 	if (c == K_F) {
3290:src/keys.c    **** 		toggle_shift(SHIFT_F);
3291:src/keys.c    **** 		return STATE_UNFINISHED;
3292:src/keys.c    **** 	}
3293:src/keys.c    **** 	if (c == K_G) {
3294:src/keys.c    **** 		toggle_shift(SHIFT_G);
3295:src/keys.c    **** 		return STATE_UNFINISHED;
3296:src/keys.c    **** 	}
3297:src/keys.c    **** 	if (c == K_H) {
3298:src/keys.c    **** 		toggle_shift(SHIFT_H);
3299:src/keys.c    **** 		State2.arrow = 0;
3300:src/keys.c    **** 		return STATE_UNFINISHED;
3301:src/keys.c    **** 	}
3302:src/keys.c    **** 	/*
3303:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3304:src/keys.c    **** 	 */
3305:src/keys.c    **** 	// print_debug (2, c);
3306:src/keys.c    **** 	if (State2.arrow)
3307:src/keys.c    **** 		return process_arrow((const keycode)c);
3308:src/keys.c    **** 
3309:src/keys.c    **** 	/*
3310:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3311:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3312:src/keys.c    **** 	 * works and were not
3313:src/keys.c    **** 	 */
3314:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3315:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3316:src/keys.c    **** 		if (is_bad_cmdline())
3317:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccXySG1f.s 			page 215


3318:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3319:src/keys.c    **** 		init_cat( cat );
3320:src/keys.c    **** 		return STATE_UNFINISHED;
3321:src/keys.c    **** 	}
3322:src/keys.c    **** 
3323:src/keys.c    **** 	/*
3324:src/keys.c    **** 	 *  More handlers...
3325:src/keys.c    **** 	 */
3326:src/keys.c    **** 	if (State2.multi)
3327:src/keys.c    **** 		return process_multi((const keycode)c);
3328:src/keys.c    **** 
3329:src/keys.c    **** 	if (State2.labellist)
3330:src/keys.c    **** 		return process_labellist((const keycode)c);
3331:src/keys.c    **** 
3332:src/keys.c    **** 	if (State2.registerlist)
3333:src/keys.c    **** 		return process_registerlist((const keycode)c);
3334:src/keys.c    **** 
3335:src/keys.c    **** 	if (State2.catalogue)
3336:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3337:src/keys.c    **** 
3338:src/keys.c    **** 	if (State2.alphas) {
3339:src/keys.c    **** #ifndef INFRARED
3340:src/keys.c    **** 		return process_alpha((const keycode)c);
3341:src/keys.c    **** #else
3342:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3343:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3344:src/keys.c    **** 			print_tab(0);
3345:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3346:src/keys.c    **** 		}
3347:src/keys.c    **** 		return i;
3348:src/keys.c    **** #endif
3349:src/keys.c    **** 	}
3350:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3351:src/keys.c    **** 	if (C_LOCKED) {
3352:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3353:src/keys.c    **** 	}
3354:src/keys.c    **** #endif
3355:src/keys.c    **** 	if (State2.cmplx) {
3356:src/keys.c    **** 		return process_cmplx((const keycode)c);
3357:src/keys.c    **** 	} else {
3358:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3359:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3360:src/keys.c    **** 		if (shift == SHIFT_H)
3361:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3362:src/keys.c    **** 		// print_debug (3, c);
3363:src/keys.c    **** 		return process_normal((const keycode)c);
3364:src/keys.c    **** 	}
3365:src/keys.c    **** }
3366:src/keys.c    **** 
3367:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 6953              		.loc 1 3367 40 is_stmt 1 view -0
 6954              		.cfi_startproc
 6955              		@ args = 0, pretend = 0, frame = 0
 6956              		@ frame_needed = 0, uses_anonymous_args = 0
 6957              		@ link register save eliminated.
3368:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 6958              		.loc 1 3368 4 view .LVU2075
ARM GAS  /tmp/ccXySG1f.s 			page 216


 6959              		.loc 1 3368 53 is_stmt 0 view .LVU2076
 6960 0000 074B     		ldr	r3, .L768
 6961              		.loc 1 3368 44 view .LVU2077
 6962 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 6963 0004 1AB9     		cbnz	r2, .L766
3369:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3370:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 6964              		.loc 1 3370 5 discriminator 2 view .LVU2078
 6965 0006 5969     		ldr	r1, [r3, #20]
 6966 0008 064A     		ldr	r2, .L768+4
 6967 000a 0A40     		ands	r2, r2, r1
 6968 000c 0AB1     		cbz	r2, .L767
 6969              	.L766:
 6970 000e 0120     		movs	r0, #1
3371:src/keys.c    ****  }
 6971              		.loc 1 3371 2 view .LVU2079
 6972 0010 7047     		bx	lr
 6973              	.L767:
3370:src/keys.c    ****  }
 6974              		.loc 1 3370 42 discriminator 3 view .LVU2080
 6975 0012 D889     		ldrh	r0, [r3, #14]
 6976 0014 B0F5E060 		subs	r0, r0, #1792
 6977 0018 18BF     		it	ne
 6978 001a 0120     		movne	r0, #1
 6979 001c 7047     		bx	lr
 6980              	.L769:
 6981 001e 00BF     		.align	2
 6982              	.L768:
 6983 0020 00000000 		.word	StateWhileOn
 6984 0024 0709280C 		.word	203950343
 6985              		.cfi_endproc
 6986              	.LFE61:
 6988              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 6989              		.align	2
 6990              	.LC0:
 6991 0000 52554E00 		.ascii	"RUN\000"
 6992              		.align	2
 6993              	.LC1:
 6994 0004 4E554C4C 		.ascii	"NULL\000"
 6994      00
 6995 0009 000000   		.align	2
 6996              	.LC2:
 6997 000c 53746F70 		.ascii	"Stopped\000"
 6997      70656400 
 6998              		.section	.text.process_keycode,"ax",%progbits
 6999              		.align	1
 7000              		.p2align 2,,3
 7001              		.global	process_keycode
 7002              		.syntax unified
 7003              		.thumb
 7004              		.thumb_func
 7005              		.fpu fpv4-sp-d16
 7007              	process_keycode:
 7008              	.LVL607:
 7009              	.LFB63:
3372:src/keys.c    **** 
3373:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
ARM GAS  /tmp/ccXySG1f.s 			page 217


3374:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3375:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3376:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3377:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3378:src/keys.c    ****        // Was error just wait for confirmation
3379:src/keys.c    ****        wait_for_key_press();
3380:src/keys.c    ****      }
3381:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3382:src/keys.c    ****      return;
3383:src/keys.c    ****    }
3384:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3385:src/keys.c    ****      nd_opcode = remapped.shift;
3386:src/keys.c    ****      set_shift(SHIFT_N);
3387:src/keys.c    ****    }
3388:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3389:src/keys.c    ****    process_keycode ( remapped.key_34s );
3390:src/keys.c    ****  }
3391:src/keys.c    ****  
3392:src/keys.c    **** /*
3393:src/keys.c    ****  *  Fed with key codes by the event loop
3394:src/keys.c    ****  */
3395:src/keys.c    **** void process_keycode(int c)
3396:src/keys.c    **** {
 7010              		.loc 1 3396 1 is_stmt 1 view -0
 7011              		.cfi_startproc
 7012              		@ args = 0, pretend = 0, frame = 8
 7013              		@ frame_needed = 0, uses_anonymous_args = 0
3397:src/keys.c    ****   static int was_paused;
 7014              		.loc 1 3397 3 view .LVU2082
3398:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3399:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7015              		.loc 1 3399 3 view .LVU2083
3400:src/keys.c    ****   //print_debug(60,c);
3401:src/keys.c    ****   if (was_paused && Pause == 0)
 7016              		.loc 1 3401 3 view .LVU2084
3396:src/keys.c    ****   static int was_paused;
 7017              		.loc 1 3396 1 is_stmt 0 view .LVU2085
 7018 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7019              		.cfi_def_cfa_offset 36
 7020              		.cfi_offset 4, -36
 7021              		.cfi_offset 5, -32
 7022              		.cfi_offset 6, -28
 7023              		.cfi_offset 7, -24
 7024              		.cfi_offset 8, -20
 7025              		.cfi_offset 9, -16
 7026              		.cfi_offset 10, -12
 7027              		.cfi_offset 11, -8
 7028              		.cfi_offset 14, -4
 7029              		.loc 1 3401 7 view .LVU2086
 7030 0004 B64D     		ldr	r5, .L1401
 7031              		.loc 1 3401 27 view .LVU2087
 7032 0006 B74F     		ldr	r7, .L1401+4
 7033              		.loc 1 3401 6 view .LVU2088
 7034 0008 2B68     		ldr	r3, [r5]
3396:src/keys.c    ****   static int was_paused;
 7035              		.loc 1 3396 1 view .LVU2089
 7036 000a 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccXySG1f.s 			page 218


 7037              		.cfi_def_cfa_offset 48
3396:src/keys.c    ****   static int was_paused;
 7038              		.loc 1 3396 1 view .LVU2090
 7039 000c 0446     		mov	r4, r0
 7040              		.loc 1 3401 6 view .LVU2091
 7041 000e 1BB1     		cbz	r3, .L771
 7042              		.loc 1 3401 27 discriminator 1 view .LVU2092
 7043 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7044              		.loc 1 3401 18 discriminator 1 view .LVU2093
 7045 0012 002B     		cmp	r3, #0
 7046 0014 00F0DB81 		beq	.L1312
 7047              	.LVL608:
 7048              	.L771:
3402:src/keys.c    ****     {
3403:src/keys.c    ****     /*
3404:src/keys.c    ****      *  Continue XROM execution after a pause
3405:src/keys.c    ****      */
3406:src/keys.c    ****       xeq_xrom();
3407:src/keys.c    ****     }
3408:src/keys.c    ****   was_paused = Pause;
 7049              		.loc 1 3408 3 is_stmt 1 view .LVU2094
 7050              		.loc 1 3408 14 is_stmt 0 view .LVU2095
 7051 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7052 001a 2B60     		str	r3, [r5]
3409:src/keys.c    ****   if (c == K_NOP)
 7053              		.loc 1 3409 3 is_stmt 1 view .LVU2096
 7054              		.loc 1 3409 6 is_stmt 0 view .LVU2097
 7055 001c 2E2C     		cmp	r4, #46
 7056 001e 00F09B81 		beq	.L1313
3410:src/keys.c    ****     {
3411:src/keys.c    ****       OpCode = 0;
3412:src/keys.c    ****     }
3413:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7057              		.loc 1 3413 8 is_stmt 1 view .LVU2098
 7058              		.loc 1 3413 11 is_stmt 0 view .LVU2099
 7059 0022 622C     		cmp	r4, #98
 7060 0024 70D0     		beq	.L1314
3414:src/keys.c    ****     {
3415:src/keys.c    ****     /*
3416:src/keys.c    ****      *  Heartbeat processing goes here.
3417:src/keys.c    ****      *  This is totally thread safe!
3418:src/keys.c    ****      */
3419:src/keys.c    ****     if (Keyticks >= 2) {
3420:src/keys.c    ****       /*
3421:src/keys.c    ****        *  Some time has passed after last key press
3422:src/keys.c    ****        */
3423:src/keys.c    ****       if (OpCode != 0) {
3424:src/keys.c    **** 	/*
3425:src/keys.c    **** 	 *  Handle command display and NULL here
3426:src/keys.c    **** 	 */
3427:src/keys.c    **** 	if (OpCodeDisplayPending) {
3428:src/keys.c    **** 	  /*
3429:src/keys.c    **** 	   *  Show command to the user
3430:src/keys.c    **** 	   */
3431:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3432:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3433:src/keys.c    **** 	    DispMsg = "RUN";
ARM GAS  /tmp/ccXySG1f.s 			page 219


3434:src/keys.c    **** 	  }
3435:src/keys.c    **** 	  else {
3436:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3437:src/keys.c    **** 	    DispMsg = TraceBuffer;
3438:src/keys.c    **** 	  }
3439:src/keys.c    **** 	  display();
3440:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3441:src/keys.c    **** 	}
3442:src/keys.c    ****     else if (Keyticks > 12) {
3443:src/keys.c    **** 	  /*
3444:src/keys.c    **** 	   *  Key is too long held down
3445:src/keys.c    **** 	   */
3446:src/keys.c    **** 	  OpCode = 0;
3447:src/keys.c    **** 	  message("NULL", CNULL);
3448:src/keys.c    **** 	  // Force display update on key-up
3449:src/keys.c    **** 	  State2.disp_temp = 0;
3450:src/keys.c    **** 	}
3451:src/keys.c    ****       }
3452:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3453:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3454:src/keys.c    **** 	State2.shifts = SHIFT_N;
3455:src/keys.c    ****       }
3456:src/keys.c    ****     }
3457:src/keys.c    **** 
3458:src/keys.c    ****     /*
3459:src/keys.c    ****      *  Serve the watchdog
3460:src/keys.c    ****      */
3461:src/keys.c    ****     watchdog();
3462:src/keys.c    **** 
3463:src/keys.c    **** #ifndef CONSOLE
3464:src/keys.c    ****     /*
3465:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3466:src/keys.c    ****      */
3467:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3468:src/keys.c    ****       JustStopped = 0;
3469:src/keys.c    ****     }
3470:src/keys.c    **** #endif
3471:src/keys.c    **** 
3472:src/keys.c    ****     /*
3473:src/keys.c    ****      *  Do nothing if not running a program
3474:src/keys.c    ****      */
3475:src/keys.c    ****     if (!Running && ! Pause)
3476:src/keys.c    ****       return;
3477:src/keys.c    ****   }
3478:src/keys.c    ****   else {
3479:src/keys.c    ****     /*
3480:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3481:src/keys.c    ****      */
3482:src/keys.c    ****     xeq_init_contexts();
 7061              		.loc 1 3482 5 is_stmt 1 view .LVU2100
3483:src/keys.c    ****     State2.wascomplex = 0;
 7062              		.loc 1 3483 23 is_stmt 0 view .LVU2101
 7063 0026 DFF8D882 		ldr	r8, .L1401+32
3482:src/keys.c    ****     State2.wascomplex = 0;
 7064              		.loc 1 3482 5 view .LVU2102
 7065 002a FFF7FEFF 		bl	xeq_init_contexts
 7066              	.LVL609:
ARM GAS  /tmp/ccXySG1f.s 			page 220


 7067              		.loc 1 3483 5 is_stmt 1 view .LVU2103
 7068              		.loc 1 3483 23 is_stmt 0 view .LVU2104
 7069 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3484:src/keys.c    **** 
3485:src/keys.c    ****     if (is_dot(RPN)) {
 7070              		.loc 1 3485 9 view .LVU2105
 7071 0032 8D20     		movs	r0, #141
3483:src/keys.c    **** 
 7072              		.loc 1 3483 23 view .LVU2106
 7073 0034 6FF38713 		bfc	r3, #6, #2
 7074 0038 88F81430 		strb	r3, [r8, #20]
 7075              		.loc 1 3485 5 is_stmt 1 view .LVU2107
 7076              		.loc 1 3485 9 is_stmt 0 view .LVU2108
 7077 003c FFF7FEFF 		bl	is_dot
 7078              	.LVL610:
 7079              		.loc 1 3485 8 view .LVU2109
 7080 0040 0028     		cmp	r0, #0
 7081 0042 40F04C82 		bne	.L1315
 7082              	.L789:
3486:src/keys.c    ****       /*
3487:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3488:src/keys.c    ****        */
3489:src/keys.c    ****       clr_dot(RPN);
3490:src/keys.c    ****       finish_RPN(); // RPN
3491:src/keys.c    ****     }
3492:src/keys.c    **** 
3493:src/keys.c    **** #ifndef CONSOLE
3494:src/keys.c    ****     /*
3495:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3496:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3497:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3498:src/keys.c    ****      *  an accidental restart of the program.
3499:src/keys.c    ****      */
3500:src/keys.c    ****     if (c != K63)
 7083              		.loc 1 3500 5 is_stmt 1 view .LVU2110
 7084              		.loc 1 3500 8 is_stmt 0 view .LVU2111
 7085 0046 272C     		cmp	r4, #39
 7086 0048 00F04682 		beq	.L1316
3501:src/keys.c    ****       JustStopped = 0;
 7087              		.loc 1 3501 7 is_stmt 1 view .LVU2112
 7088              		.loc 1 3501 19 is_stmt 0 view .LVU2113
 7089 004c A64B     		ldr	r3, .L1401+8
 7090 004e 0025     		movs	r5, #0
3502:src/keys.c    **** #endif
3503:src/keys.c    ****   }
3504:src/keys.c    **** 
3505:src/keys.c    ****   /*
3506:src/keys.c    ****    *  Handle key release
3507:src/keys.c    ****    */
3508:src/keys.c    ****   if (c == K_RELEASE)
 7091              		.loc 1 3508 6 view .LVU2114
 7092 0050 632C     		cmp	r4, #99
3501:src/keys.c    ****       JustStopped = 0;
 7093              		.loc 1 3501 19 view .LVU2115
 7094 0052 1D60     		str	r5, [r3]
 7095              		.loc 1 3508 3 is_stmt 1 view .LVU2116
 7096              		.loc 1 3508 6 is_stmt 0 view .LVU2117
ARM GAS  /tmp/ccXySG1f.s 			page 221


 7097 0054 40F08F81 		bne	.L791
3509:src/keys.c    ****     {
3510:src/keys.c    ****       //      print_debug (80,c);
3511:src/keys.c    ****     if (OpCode != 0) {
 7098              		.loc 1 3511 5 is_stmt 1 view .LVU2118
 7099              		.loc 1 3511 16 is_stmt 0 view .LVU2119
 7100 0058 A44A     		ldr	r2, .L1401+12
 7101 005a 1368     		ldr	r3, [r2]
 7102              		.loc 1 3511 8 view .LVU2120
 7103 005c 002B     		cmp	r3, #0
 7104 005e 00F05282 		beq	.L792
3512:src/keys.c    ****       /*
3513:src/keys.c    ****        * Execute the key on release
3514:src/keys.c    ****        */
3515:src/keys.c    ****       GoFast = 1;
 7105              		.loc 1 3515 7 is_stmt 1 view .LVU2121
 7106              		.loc 1 3515 14 is_stmt 0 view .LVU2122
 7107 0062 A349     		ldr	r1, .L1401+16
3516:src/keys.c    ****       c = OpCode;
3517:src/keys.c    ****       //      print_debug(81,c);
3518:src/keys.c    ****       OpCode = 0;
 7108              		.loc 1 3518 14 view .LVU2123
 7109 0064 1560     		str	r5, [r2]
3515:src/keys.c    ****       c = OpCode;
 7110              		.loc 1 3515 14 view .LVU2124
 7111 0066 0120     		movs	r0, #1
3519:src/keys.c    **** 
3520:src/keys.c    ****       if (c == STATE_SST)
 7112              		.loc 1 3520 10 view .LVU2125
 7113 0068 2E2B     		cmp	r3, #46
3516:src/keys.c    ****       //      print_debug(81,c);
 7114              		.loc 1 3516 9 view .LVU2126
 7115 006a 1C46     		mov	r4, r3
 7116              	.LVL611:
3515:src/keys.c    ****       c = OpCode;
 7117              		.loc 1 3515 14 view .LVU2127
 7118 006c 0860     		str	r0, [r1]
3516:src/keys.c    ****       //      print_debug(81,c);
 7119              		.loc 1 3516 7 is_stmt 1 view .LVU2128
 7120              	.LVL612:
3518:src/keys.c    **** 
 7121              		.loc 1 3518 7 view .LVU2129
 7122              		.loc 1 3520 7 view .LVU2130
 7123              		.loc 1 3520 10 is_stmt 0 view .LVU2131
 7124 006e 00F05D82 		beq	.L1317
3521:src/keys.c    **** 	xeq_sst_bst(1);
3522:src/keys.c    ****       else {
3523:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7125              		.loc 1 3523 2 is_stmt 1 view .LVU2132
 7126              		.loc 1 3523 5 is_stmt 0 view .LVU2133
 7127 0072 B3F5817F 		cmp	r3, #258
 7128 0076 0AD0     		beq	.L798
 7129              		.loc 1 3523 29 discriminator 1 view .LVU2134
 7130 0078 40F23F12 		movw	r2, #319
 7131 007c 9342     		cmp	r3, r2
 7132 007e 06D0     		beq	.L798
 7133 0080 0093     		str	r3, [sp]
ARM GAS  /tmp/ccXySG1f.s 			page 222


 7134              		.loc 1 3523 60 discriminator 2 view .LVU2135
 7135 0082 FFF7FEFF 		bl	is_bad_cmdline
 7136              	.LVL613:
 7137              		.loc 1 3523 56 discriminator 2 view .LVU2136
 7138 0086 009B     		ldr	r3, [sp]
 7139 0088 0028     		cmp	r0, #0
 7140 008a 40F05C82 		bne	.L1318
 7141              	.L798:
3524:src/keys.c    **** 	  xeq(c);
 7142              		.loc 1 3524 4 is_stmt 1 view .LVU2137
3525:src/keys.c    **** 	  if (Running || Pause)
 7143              		.loc 1 3525 8 is_stmt 0 view .LVU2138
 7144 008e 994E     		ldr	r6, .L1401+20
3524:src/keys.c    **** 	  xeq(c);
 7145              		.loc 1 3524 4 view .LVU2139
 7146 0090 1846     		mov	r0, r3
 7147 0092 FFF7FEFF 		bl	xeq
 7148              	.LVL614:
 7149              		.loc 1 3525 4 is_stmt 1 view .LVU2140
 7150              		.loc 1 3525 7 is_stmt 0 view .LVU2141
 7151 0096 3368     		ldr	r3, [r6]
 7152 0098 0BB9     		cbnz	r3, .L796
 7153              		.loc 1 3525 16 discriminator 1 view .LVU2142
 7154 009a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7155 009c 0BB1     		cbz	r3, .L794
 7156              	.L796:
3526:src/keys.c    **** 	    xeqprog();
 7157              		.loc 1 3526 6 is_stmt 1 view .LVU2143
 7158 009e FFF7FEFF 		bl	xeqprog
 7159              	.LVL615:
 7160              	.L794:
3527:src/keys.c    **** 	}
3528:src/keys.c    ****       }
3529:src/keys.c    ****       dot(RPN, ShowRPN);
 7161              		.loc 1 3529 7 view .LVU2144
 7162 00a2 954D     		ldr	r5, .L1401+24
 7163 00a4 8D20     		movs	r0, #141
 7164 00a6 2968     		ldr	r1, [r5]
 7165 00a8 FFF7FEFF 		bl	dot
 7166              	.LVL616:
3530:src/keys.c    ****     }
3531:src/keys.c    ****     else {
3532:src/keys.c    ****       // Ignore key-up if no operation was pending
3533:src/keys.c    ****       dot(RPN, ShowRPN);
3534:src/keys.c    **** #ifndef CONSOLE
3535:src/keys.c    ****       if (! State2.disp_temp ) {
3536:src/keys.c    **** 	if (!WasDataEntry) {
3537:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3538:src/keys.c    **** 	  display();
3539:src/keys.c    **** 	}
3540:src/keys.c    **** 	else {
3541:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3542:src/keys.c    **** 	}
3543:src/keys.c    ****       }
3544:src/keys.c    **** #endif
3545:src/keys.c    ****       return;
3546:src/keys.c    ****     }
ARM GAS  /tmp/ccXySG1f.s 			page 223


3547:src/keys.c    **** 
3548:src/keys.c    ****     /*
3549:src/keys.c    ****      *  Turn on the RPN symbol if desired
3550:src/keys.c    ****      */
3551:src/keys.c    ****     if (ShowRPN) {
 7167              		.loc 1 3551 5 view .LVU2145
 7168              		.loc 1 3551 9 is_stmt 0 view .LVU2146
 7169 00ac 2D68     		ldr	r5, [r5]
 7170              		.loc 1 3551 8 view .LVU2147
 7171 00ae 002D     		cmp	r5, #0
 7172 00b0 40F01B82 		bne	.L800
 7173              	.LVL617:
 7174              	.L1304:
3552:src/keys.c    ****       finish_RPN(); // RPN
3553:src/keys.c    ****     }
3554:src/keys.c    ****   }
3555:src/keys.c    ****   else {
3556:src/keys.c    ****     /*
3557:src/keys.c    ****      *  Decode the key 
3558:src/keys.c    ****      */
3559:src/keys.c    ****     //    print_debug (90, cur_shift());
3560:src/keys.c    ****     WasDataEntry = 0;
3561:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3562:src/keys.c    **** #ifdef DM42
3563:src/keys.c    ****     if (c != K_OP) {
3564:src/keys.c    ****       c = process(c);
3565:src/keys.c    ****       //print_debug (91,cur_shift());
3566:src/keys.c    ****       // returns an op-code or state
3567:src/keys.c    ****     }
3568:src/keys.c    ****     else {
3569:src/keys.c    ****       if (isRARG(nd_opcode)) {
3570:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3571:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3572:src/keys.c    **** 	  c = nd_opcode;
3573:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3574:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3575:src/keys.c    **** 	  c = STATE_UNFINISHED;
3576:src/keys.c    **** 	}
3577:src/keys.c    **** 	else {
3578:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3579:src/keys.c    **** 	  c = STATE_UNFINISHED;
3580:src/keys.c    **** 	}
3581:src/keys.c    ****       }
3582:src/keys.c    ****       else {
3583:src/keys.c    **** 	c = check_confirm(nd_opcode);
3584:src/keys.c    ****       }      
3585:src/keys.c    ****     }
3586:src/keys.c    **** #else
3587:src/keys.c    ****     c = process(c);		// returns an op-code or state
3588:src/keys.c    **** #endif
3589:src/keys.c    ****     switch (c) {
3590:src/keys.c    ****     case STATE_SST:
3591:src/keys.c    ****       OpCode = c;
3592:src/keys.c    ****       OpCodeDisplayPending = 0;
3593:src/keys.c    ****       xeq_sst_bst(0);
3594:src/keys.c    ****       break;
 7175              		.loc 1 3594 7 is_stmt 1 view .LVU2148
ARM GAS  /tmp/ccXySG1f.s 			page 224


 7176 00b4 3368     		ldr	r3, [r6]
 7177              	.LVL618:
 7178              	.L801:
3595:src/keys.c    **** 
3596:src/keys.c    ****     case STATE_BST:
3597:src/keys.c    ****       xeq_sst_bst(-1);
3598:src/keys.c    ****       break;
3599:src/keys.c    **** 
3600:src/keys.c    ****     case STATE_BACKSPACE:
3601:src/keys.c    ****       if (! State2.runmode)
3602:src/keys.c    **** 	delprog();
3603:src/keys.c    ****       else if (State2.alphas) {
3604:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3605:src/keys.c    **** 	if (p > Alpha)
3606:src/keys.c    **** 	  *--p = '\0';
3607:src/keys.c    ****       }
3608:src/keys.c    ****       break;
3609:src/keys.c    **** 
3610:src/keys.c    ****     case STATE_RUNNING:
3611:src/keys.c    ****       xeqprog();  // continue execution
3612:src/keys.c    ****       break;
3613:src/keys.c    **** 
3614:src/keys.c    ****     case STATE_WINDOWRIGHT:
3615:src/keys.c    ****     case STATE_WINDOWLEFT:
3616:src/keys.c    ****       if (!is_bad_cmdline())
3617:src/keys.c    **** 	set_window(c);
3618:src/keys.c    ****       break;
3619:src/keys.c    **** 
3620:src/keys.c    ****     case STATE_UNFINISHED:
3621:src/keys.c    ****     case STATE_IGNORE:
3622:src/keys.c    ****       break;
3623:src/keys.c    **** 
3624:src/keys.c    ****     default:
3625:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3626:src/keys.c    **** 	NonProgrammable = 0;
3627:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3628:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3629:src/keys.c    **** 	    // Data entry key
3630:src/keys.c    **** #ifndef CONSOLE
3631:src/keys.c    **** 	    WasDataEntry = 1;
3632:src/keys.c    **** #endif
3633:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3634:src/keys.c    **** 	    xeq(c);
3635:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3636:src/keys.c    **** 	  }
3637:src/keys.c    **** 	}
3638:src/keys.c    **** 	else {
3639:src/keys.c    **** 	  // Save the op-code for execution on key-up
3640:src/keys.c    **** 	  //print_debug(70,c);
3641:src/keys.c    **** 	  OpCode = c;
3642:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3643:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3644:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3645:src/keys.c    **** 	}
3646:src/keys.c    ****       }
3647:src/keys.c    ****       else {
3648:src/keys.c    **** 	stoprog(c);
ARM GAS  /tmp/ccXySG1f.s 			page 225


3649:src/keys.c    ****       }
3650:src/keys.c    ****     }
3651:src/keys.c    ****   }
3652:src/keys.c    ****   if (! Running && ! Pause
 7179              		.loc 1 3652 3 view .LVU2149
 7180              		.loc 1 3652 6 is_stmt 0 view .LVU2150
 7181 00b6 002B     		cmp	r3, #0
 7182 00b8 40F04A81 		bne	.L1311
 7183              	.LVL619:
 7184              	.L821:
 7185              		.loc 1 3652 20 discriminator 1 view .LVU2151
 7186 00bc 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7187              		.loc 1 3652 17 discriminator 1 view .LVU2152
 7188 00be 002B     		cmp	r3, #0
 7189 00c0 40F04681 		bne	.L1311
3653:src/keys.c    **** #ifndef CONSOLE
3654:src/keys.c    ****       && ! JustStopped
 7190              		.loc 1 3654 10 view .LVU2153
 7191 00c4 884B     		ldr	r3, .L1401+8
3655:src/keys.c    **** #endif
3656:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7192              		.loc 1 3656 10 view .LVU2154
 7193 00c6 8D4E     		ldr	r6, .L1401+28
 7194 00c8 1B68     		ldr	r3, [r3]
 7195 00ca 3268     		ldr	r2, [r6]
 7196              		.loc 1 3656 7 view .LVU2155
 7197 00cc 1343     		orrs	r3, r3, r2
 7198 00ce 16D1     		bne	.L1108
 7199              		.loc 1 3656 26 discriminator 1 view .LVU2156
 7200 00d0 322C     		cmp	r4, #50
 7201 00d2 14D0     		beq	.L1108
 7202              	.LBB821:
3657:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7203              		.loc 1 3657 5 is_stmt 1 view .LVU2157
 7204              		.loc 1 3657 15 is_stmt 0 view .LVU2158
 7205 00d4 DFF84092 		ldr	r9, .L1401+56
 7206 00d8 D9F80070 		ldr	r7, [r9]
 7207              	.LVL620:
3658:src/keys.c    **** 
3659:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7208              		.loc 1 3659 5 is_stmt 1 view .LVU2159
 7209              		.loc 1 3659 21 is_stmt 0 view .LVU2160
 7210 00dc 4CB1     		cbz	r4, .L1110
 7211              		.loc 1 3659 49 discriminator 1 view .LVU2161
 7212 00de 002D     		cmp	r5, #0
 7213 00e0 40F0E583 		bne	.L1163
 7214              		.loc 1 3659 66 discriminator 3 view .LVU2162
 7215 00e4 864B     		ldr	r3, .L1401+32
 7216 00e6 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7217              		.loc 1 3659 21 discriminator 3 view .LVU2163
 7218 00e8 9807     		lsls	r0, r3, #30
 7219 00ea 00F13384 		bmi	.L1164
 7220 00ee 07F00104 		and	r4, r7, #1
 7221              	.LVL621:
 7222              	.L1110:
 7223              		.loc 1 3659 18 discriminator 8 view .LVU2164
 7224 00f2 C9F80040 		str	r4, [r9]
ARM GAS  /tmp/ccXySG1f.s 			page 226


3660:src/keys.c    ****     display();
 7225              		.loc 1 3660 5 is_stmt 1 discriminator 8 view .LVU2165
 7226 00f6 FFF7FEFF 		bl	display
 7227              	.LVL622:
3661:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7228              		.loc 1 3661 5 discriminator 8 view .LVU2166
 7229              		.loc 1 3661 18 is_stmt 0 discriminator 8 view .LVU2167
 7230 00fa C9F80070 		str	r7, [r9]
 7231              	.LVL623:
 7232              	.L1108:
 7233              		.loc 1 3661 18 discriminator 8 view .LVU2168
 7234              	.LBE821:
3662:src/keys.c    ****   }
3663:src/keys.c    **** 
3664:src/keys.c    ****  no_display:
3665:src/keys.c    ****   JustDisplayed = 0;
 7235              		.loc 1 3665 3 is_stmt 1 view .LVU2169
 7236              		.loc 1 3665 17 is_stmt 0 view .LVU2170
 7237 00fe 0023     		movs	r3, #0
 7238 0100 3360     		str	r3, [r6]
3666:src/keys.c    ****   watchdog();
 7239              		.loc 1 3666 13 is_stmt 1 view .LVU2171
 7240              	.L770:
3667:src/keys.c    **** }
 7241              		.loc 1 3667 1 is_stmt 0 view .LVU2172
 7242 0102 03B0     		add	sp, sp, #12
 7243              		.cfi_remember_state
 7244              		.cfi_def_cfa_offset 36
 7245              		@ sp needed
 7246 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7247              	.LVL624:
 7248              	.L1314:
 7249              		.cfi_restore_state
3419:src/keys.c    ****       /*
 7250              		.loc 1 3419 5 is_stmt 1 view .LVU2173
3419:src/keys.c    ****       /*
 7251              		.loc 1 3419 9 is_stmt 0 view .LVU2174
 7252 0108 FFF7FEFF 		bl	keyticks
 7253              	.LVL625:
3419:src/keys.c    ****       /*
 7254              		.loc 1 3419 8 view .LVU2175
 7255 010c 0128     		cmp	r0, #1
 7256 010e 1BDD     		ble	.L776
3423:src/keys.c    **** 	/*
 7257              		.loc 1 3423 7 is_stmt 1 view .LVU2176
3423:src/keys.c    **** 	/*
 7258              		.loc 1 3423 18 is_stmt 0 view .LVU2177
 7259 0110 764D     		ldr	r5, .L1401+12
 7260 0112 2868     		ldr	r0, [r5]
3423:src/keys.c    **** 	/*
 7261              		.loc 1 3423 10 view .LVU2178
 7262 0114 98B1     		cbz	r0, .L778
3427:src/keys.c    **** 	  /*
 7263              		.loc 1 3427 2 is_stmt 1 view .LVU2179
3427:src/keys.c    **** 	  /*
 7264              		.loc 1 3427 6 is_stmt 0 view .LVU2180
 7265 0116 7B4B     		ldr	r3, .L1401+36
ARM GAS  /tmp/ccXySG1f.s 			page 227


3427:src/keys.c    **** 	  /*
 7266              		.loc 1 3427 5 view .LVU2181
 7267 0118 1E68     		ldr	r6, [r3]
 7268 011a 002E     		cmp	r6, #0
 7269 011c 00F01582 		beq	.L779
3431:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7270              		.loc 1 3431 4 is_stmt 1 view .LVU2182
3432:src/keys.c    **** 	    DispMsg = "RUN";
 7271              		.loc 1 3432 7 is_stmt 0 view .LVU2183
 7272 0120 40F23B12 		movw	r2, #315
3431:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7273              		.loc 1 3431 25 view .LVU2184
 7274 0124 0025     		movs	r5, #0
3432:src/keys.c    **** 	    DispMsg = "RUN";
 7275              		.loc 1 3432 7 view .LVU2185
 7276 0126 9042     		cmp	r0, r2
3431:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7277              		.loc 1 3431 25 view .LVU2186
 7278 0128 1D60     		str	r5, [r3]
3432:src/keys.c    **** 	    DispMsg = "RUN";
 7279              		.loc 1 3432 4 is_stmt 1 view .LVU2187
3432:src/keys.c    **** 	    DispMsg = "RUN";
 7280              		.loc 1 3432 7 is_stmt 0 view .LVU2188
 7281 012a 40F05F82 		bne	.L780
3433:src/keys.c    **** 	  }
 7282              		.loc 1 3433 6 is_stmt 1 view .LVU2189
3433:src/keys.c    **** 	  }
 7283              		.loc 1 3433 14 is_stmt 0 view .LVU2190
 7284 012e 764B     		ldr	r3, .L1401+40
 7285 0130 764A     		ldr	r2, .L1401+44
 7286 0132 1A60     		str	r2, [r3]
 7287              	.L781:
3439:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 7288              		.loc 1 3439 4 is_stmt 1 view .LVU2191
 7289 0134 FFF7FEFF 		bl	display
 7290              	.LVL626:
3440:src/keys.c    **** 	}
 7291              		.loc 1 3440 4 view .LVU2192
3440:src/keys.c    **** 	}
 7292              		.loc 1 3440 12 is_stmt 0 view .LVU2193
 7293 0138 6F4B     		ldr	r3, .L1401+24
 7294 013a 0122     		movs	r2, #1
 7295 013c 1A60     		str	r2, [r3]
 7296              	.L778:
3452:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7297              		.loc 1 3452 7 is_stmt 1 view .LVU2194
3452:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7298              		.loc 1 3452 11 is_stmt 0 view .LVU2195
 7299 013e FFF7FEFF 		bl	keyticks
 7300              	.LVL627:
3452:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7301              		.loc 1 3452 10 view .LVU2196
 7302 0142 0C28     		cmp	r0, #12
 7303 0144 00F3F681 		bgt	.L1319
 7304              	.L776:
3461:src/keys.c    **** 
 7305              		.loc 1 3461 15 is_stmt 1 view .LVU2197
ARM GAS  /tmp/ccXySG1f.s 			page 228


3467:src/keys.c    ****       JustStopped = 0;
 7306              		.loc 1 3467 5 view .LVU2198
3467:src/keys.c    ****       JustStopped = 0;
 7307              		.loc 1 3467 9 is_stmt 0 view .LVU2199
 7308 0148 674D     		ldr	r5, .L1401+8
3467:src/keys.c    ****       JustStopped = 0;
 7309              		.loc 1 3467 8 view .LVU2200
 7310 014a 2B68     		ldr	r3, [r5]
 7311 014c 002B     		cmp	r3, #0
 7312 014e 40F08081 		bne	.L1320
 7313              	.L785:
3475:src/keys.c    ****       return;
 7314              		.loc 1 3475 5 is_stmt 1 view .LVU2201
3475:src/keys.c    ****       return;
 7315              		.loc 1 3475 9 is_stmt 0 view .LVU2202
 7316 0152 684E     		ldr	r6, .L1401+20
 7317 0154 3368     		ldr	r3, [r6]
3475:src/keys.c    ****       return;
 7318              		.loc 1 3475 8 view .LVU2203
 7319 0156 002B     		cmp	r3, #0
 7320 0158 00F05C81 		beq	.L1321
 7321              	.L787:
3508:src/keys.c    ****     {
 7322              		.loc 1 3508 3 is_stmt 1 view .LVU2204
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7323              		.loc 1 3560 5 view .LVU2205
3561:src/keys.c    **** #ifdef DM42
 7324              		.loc 1 3561 13 is_stmt 0 view .LVU2206
 7325 015c 664A     		ldr	r2, .L1401+24
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7326              		.loc 1 3560 18 view .LVU2207
 7327 015e DFF8B891 		ldr	r9, .L1401+56
3561:src/keys.c    **** #ifdef DM42
 7328              		.loc 1 3561 15 view .LVU2208
 7329 0162 B3FA83F3 		clz	r3, r3
 7330 0166 5B09     		lsrs	r3, r3, #5
3561:src/keys.c    **** #ifdef DM42
 7331              		.loc 1 3561 13 view .LVU2209
 7332 0168 1360     		str	r3, [r2]
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7333              		.loc 1 3560 18 view .LVU2210
 7334 016a 0023     		movs	r3, #0
 7335 016c C9F80030 		str	r3, [r9]
3561:src/keys.c    **** #ifdef DM42
 7336              		.loc 1 3561 5 is_stmt 1 view .LVU2211
3563:src/keys.c    ****       c = process(c);
 7337              		.loc 1 3563 5 view .LVU2212
 7338              	.L773:
3564:src/keys.c    ****       //print_debug (91,cur_shift());
 7339              		.loc 1 3564 7 view .LVU2213
 7340              	.LVL628:
 7341              	.LBB822:
 7342              	.LBI822:
3204:src/keys.c    ****   const enum shifts shift = cur_shift();
 7343              		.loc 1 3204 12 view .LVU2214
 7344              	.LBB823:
3205:src/keys.c    ****   enum catalogues cat;
ARM GAS  /tmp/ccXySG1f.s 			page 229


 7345              		.loc 1 3205 3 view .LVU2215
 7346              	.LBB824:
 7347              	.LBI824:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7348              		.loc 1 96 13 view .LVU2216
 7349              	.LBB825:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7350              		.loc 1 97 2 view .LVU2217
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7351              		.loc 1 97 18 is_stmt 0 view .LVU2218
 7352 0170 FFF7FEFF 		bl	shift_down
 7353              	.LVL629:
  98:src/keys.c    **** }
 7354              		.loc 1 98 2 is_stmt 1 view .LVU2219
  98:src/keys.c    **** }
 7355              		.loc 1 98 52 is_stmt 0 view .LVU2220
 7356 0174 8346     		mov	fp, r0
 7357 0176 10B9     		cbnz	r0, .L805
 7358 0178 614B     		ldr	r3, .L1401+32
 7359 017a 93F810B0 		ldrb	fp, [r3, #16]	@ zero_extendqisi2
 7360              	.L805:
 7361              	.LVL630:
  98:src/keys.c    **** }
 7362              		.loc 1 98 52 view .LVU2221
 7363              	.LBE825:
 7364              	.LBE824:
3206:src/keys.c    **** 
 7365              		.loc 1 3206 3 is_stmt 1 view .LVU2222
3208:src/keys.c    ****     /*
 7366              		.loc 1 3208 3 view .LVU2223
3208:src/keys.c    ****     /*
 7367              		.loc 1 3208 7 is_stmt 0 view .LVU2224
 7368 017e 3568     		ldr	r5, [r6]
3208:src/keys.c    ****     /*
 7369              		.loc 1 3208 6 view .LVU2225
 7370 0180 002D     		cmp	r5, #0
 7371 0182 40F0CD80 		bne	.L806
3208:src/keys.c    ****     /*
 7372              		.loc 1 3208 15 view .LVU2226
 7373 0186 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7374 0188 002B     		cmp	r3, #0
 7375 018a 40F0C980 		bne	.L806
3236:src/keys.c    **** #else
 7376              		.loc 1 3236 3 is_stmt 1 view .LVU2227
3236:src/keys.c    **** #else
 7377              		.loc 1 3236 6 is_stmt 0 view .LVU2228
 7378 018e 242C     		cmp	r4, #36
 7379 0190 00F0D582 		beq	.L1322
3253:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7380              		.loc 1 3253 2 is_stmt 1 view .LVU2229
3253:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7381              		.loc 1 3253 5 is_stmt 0 view .LVU2230
 7382 0194 272C     		cmp	r4, #39
 7383 0196 04D1     		bne	.L820
3253:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7384              		.loc 1 3253 15 view .LVU2231
 7385 0198 534B     		ldr	r3, .L1401+8
ARM GAS  /tmp/ccXySG1f.s 			page 230


 7386 019a 1A68     		ldr	r2, [r3]
 7387 019c 002A     		cmp	r2, #0
 7388 019e 40F0C783 		bne	.L1323
 7389              	.L820:
 7390 01a2 DFF85C81 		ldr	r8, .L1401+32
 7391 01a6 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7392              	.L813:
3262:src/keys.c    **** 		CmdLineLength = 0;
 7393              		.loc 1 3262 2 is_stmt 1 view .LVU2232
3262:src/keys.c    **** 		CmdLineLength = 0;
 7394              		.loc 1 3262 5 is_stmt 0 view .LVU2233
 7395 01aa 33B1     		cbz	r3, .L823
3262:src/keys.c    **** 		CmdLineLength = 0;
 7396              		.loc 1 3262 26 view .LVU2234
 7397 01ac FFF7FEFF 		bl	keyticks
 7398              	.LVL631:
3262:src/keys.c    **** 		CmdLineLength = 0;
 7399              		.loc 1 3262 23 view .LVU2235
 7400 01b0 1E28     		cmp	r0, #30
3263:src/keys.c    **** 	/*
 7401              		.loc 1 3263 3 is_stmt 1 view .LVU2236
3263:src/keys.c    **** 	/*
 7402              		.loc 1 3263 17 is_stmt 0 view .LVU2237
 7403 01b2 C4BF     		itt	gt
 7404 01b4 0023     		movgt	r3, #0
 7405 01b6 88F81C30 		strbgt	r3, [r8, #28]
 7406              	.L823:
3268:src/keys.c    **** 		return process_confirm((const keycode)c);
 7407              		.loc 1 3268 2 is_stmt 1 view .LVU2238
3268:src/keys.c    **** 		return process_confirm((const keycode)c);
 7408              		.loc 1 3268 6 is_stmt 0 view .LVU2239
 7409 01ba 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3268:src/keys.c    **** 		return process_confirm((const keycode)c);
 7410              		.loc 1 3268 5 view .LVU2240
 7411 01be 5A07     		lsls	r2, r3, #29
 7412 01c0 40F05082 		bne	.L1324
3271:src/keys.c    **** 		return process_arg((const keycode)c);
 7413              		.loc 1 3271 2 is_stmt 1 view .LVU2241
3271:src/keys.c    **** 		return process_arg((const keycode)c);
 7414              		.loc 1 3271 6 is_stmt 0 view .LVU2242
 7415 01c4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3271:src/keys.c    **** 		return process_arg((const keycode)c);
 7416              		.loc 1 3271 5 view .LVU2243
 7417 01c8 8B06     		lsls	r3, r1, #26
 7418 01ca 00F1D882 		bmi	.L1325
3274:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7419              		.loc 1 3274 2 is_stmt 1 view .LVU2244
3274:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7420              		.loc 1 3274 6 is_stmt 0 view .LVU2245
 7421 01ce 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
3274:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7422              		.loc 1 3274 5 view .LVU2246
 7423 01d2 12F0010A 		ands	r10, r2, #1
 7424 01d6 40F01683 		bne	.L1326
3277:src/keys.c    **** 		return process_hyp((const keycode)c);
 7425              		.loc 1 3277 2 is_stmt 1 view .LVU2247
3277:src/keys.c    **** 		return process_hyp((const keycode)c);
ARM GAS  /tmp/ccXySG1f.s 			page 231


 7426              		.loc 1 3277 5 is_stmt 0 view .LVU2248
 7427 01da 12F02000 		ands	r0, r2, #32
 7428 01de 40F06883 		bne	.L1327
3280:src/keys.c    **** 		return process_test((const keycode)c);
 7429              		.loc 1 3280 2 is_stmt 1 view .LVU2249
3280:src/keys.c    **** 		return process_test((const keycode)c);
 7430              		.loc 1 3280 12 is_stmt 0 view .LVU2250
 7431 01e2 98F80F30 		ldrb	r3, [r8, #15]	@ zero_extendqisi2
3280:src/keys.c    **** 		return process_test((const keycode)c);
 7432              		.loc 1 3280 5 view .LVU2251
 7433 01e6 072B     		cmp	r3, #7
 7434 01e8 40F0D282 		bne	.L1328
3283:src/keys.c    **** 		return process_status((const keycode)c);
 7435              		.loc 1 3283 2 is_stmt 1 view .LVU2252
3283:src/keys.c    **** 		return process_status((const keycode)c);
 7436              		.loc 1 3283 12 is_stmt 0 view .LVU2253
 7437 01ec 98F80C10 		ldrb	r1, [r8, #12]	@ zero_extendqisi2
3283:src/keys.c    **** 		return process_status((const keycode)c);
 7438              		.loc 1 3283 5 view .LVU2254
 7439 01f0 0029     		cmp	r1, #0
 7440 01f2 40F0C783 		bne	.L1329
3289:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7441              		.loc 1 3289 2 is_stmt 1 view .LVU2255
3289:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7442              		.loc 1 3289 5 is_stmt 0 view .LVU2256
 7443 01f6 292C     		cmp	r4, #41
 7444 01f8 00F0D384 		beq	.L1330
3293:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7445              		.loc 1 3293 2 is_stmt 1 view .LVU2257
3293:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7446              		.loc 1 3293 5 is_stmt 0 view .LVU2258
 7447 01fc 2A2C     		cmp	r4, #42
 7448 01fe 00F0DB84 		beq	.L1331
3297:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7449              		.loc 1 3297 2 is_stmt 1 view .LVU2259
3297:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7450              		.loc 1 3297 5 is_stmt 0 view .LVU2260
 7451 0202 2B2C     		cmp	r4, #43
 7452 0204 00F03D85 		beq	.L1332
3306:src/keys.c    **** 		return process_arrow((const keycode)c);
 7453              		.loc 1 3306 2 is_stmt 1 view .LVU2261
3306:src/keys.c    **** 		return process_arrow((const keycode)c);
 7454              		.loc 1 3306 5 is_stmt 0 view .LVU2262
 7455 0208 5107     		lsls	r1, r2, #29
 7456 020a 00F1E683 		bmi	.L1333
3314:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7457              		.loc 1 3314 2 is_stmt 1 view .LVU2263
 7458              	.LBB826:
 7459              	.LBB827:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7460              		.loc 1 276 6 is_stmt 0 view .LVU2264
 7461 020e DFF80CA1 		ldr	r10, .L1401+60
 7462 0212 DAF80000 		ldr	r0, [r10]
 7463 0216 90F8AC17 		ldrb	r1, [r0, #1964]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7464              		.loc 1 276 5 view .LVU2265
 7465 021a 01F0410C 		and	ip, r1, #65
ARM GAS  /tmp/ccXySG1f.s 			page 232


 7466 021e BCF1410F 		cmp	ip, #65
 7467              	.LBE827:
 7468              	.LBE826:
3314:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7469              		.loc 1 3314 8 view .LVU2266
 7470 0222 E4B2     		uxtb	r4, r4
 7471              	.LVL632:
 7472              	.LBB849:
 7473              	.LBI826:
 267:src/keys.c    **** {
 7474              		.loc 1 267 24 is_stmt 1 view .LVU2267
 7475              	.LBB834:
 269:src/keys.c    ****   int i, col, max;
 7476              		.loc 1 269 3 view .LVU2268
 270:src/keys.c    ****   const struct _map {
 7477              		.loc 1 270 3 view .LVU2269
 271:src/keys.c    ****     unsigned char key, cat[3];
 7478              		.loc 1 271 3 view .LVU2270
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7479              		.loc 1 276 2 view .LVU2271
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7480              		.loc 1 276 5 is_stmt 0 view .LVU2272
 7481 0224 00F03282 		beq	.L1334
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7482              		.loc 1 312 3 is_stmt 1 view .LVU2273
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7483              		.loc 1 312 6 is_stmt 0 view .LVU2274
 7484 0228 212C     		cmp	r4, #33
 7485 022a 00F03985 		beq	.L1335
 315:src/keys.c    ****     /*
 7486              		.loc 1 315 3 is_stmt 1 view .LVU2275
 315:src/keys.c    ****     /*
 7487              		.loc 1 315 23 is_stmt 0 view .LVU2276
 7488 022e 3849     		ldr	r1, .L1401+48
 7489 0230 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 7490              		.loc 1 315 6 view .LVU2277
 7491 0234 1942     		tst	r1, r3
 7492 0236 40F0A184 		bne	.L914
 7493              	.LBB828:
 319:src/keys.c    **** #ifdef DM42
 7494              		.loc 1 319 5 is_stmt 1 view .LVU2278
 346:src/keys.c    ****       /*
 7495              		.loc 1 346 5 view .LVU2279
 346:src/keys.c    ****       /*
 7496              		.loc 1 346 8 is_stmt 0 view .LVU2280
 7497 023a 242C     		cmp	r4, #36
 7498 023c 03D1     		bne	.L915
 346:src/keys.c    ****       /*
 7499              		.loc 1 346 18 view .LVU2281
 7500 023e BBF1020F 		cmp	fp, #2
 7501 0242 00F0DE87 		beq	.L1140
 7502              	.L915:
 361:src/keys.c    ****       /*
 7503              		.loc 1 361 5 is_stmt 1 view .LVU2282
 361:src/keys.c    ****       /*
 7504              		.loc 1 361 8 is_stmt 0 view .LVU2283
ARM GAS  /tmp/ccXySG1f.s 			page 233


 7505 0246 BBF1030F 		cmp	fp, #3
 7506 024a 18D1     		bne	.L921
 7507              	.L1120:
 371:src/keys.c    **** #ifndef WINGUI
 7508              		.loc 1 371 5 is_stmt 1 view .LVU2284
 7509              	.LVL633:
 373:src/keys.c    **** #else
 7510              		.loc 1 373 5 view .LVU2285
 373:src/keys.c    **** #else
 7511              		.loc 1 373 23 is_stmt 0 view .LVU2286
 7512 024c 90F8E837 		ldrb	r3, [r0, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7513              		.loc 1 373 27 view .LVU2287
 7514 0250 D807     		lsls	r0, r3, #31
 7515 0252 00F1B687 		bmi	.L1141
 373:src/keys.c    **** #else
 7516              		.loc 1 373 73 view .LVU2288
 7517 0256 12F00203 		ands	r3, r2, #2
 7518 025a 01F01E81 		beq	.L1336
 371:src/keys.c    **** #ifndef WINGUI
 7519              		.loc 1 371 8 view .LVU2289
 7520 025e 2D4B     		ldr	r3, .L1401+52
 377:src/keys.c    ****   }
 7521              		.loc 1 377 9 view .LVU2290
 7522 0260 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 7523              		.loc 1 373 73 view .LVU2291
 7524 0262 4FF0020C 		mov	ip, #2
 7525              	.LVL634:
 7526              	.L916:
 373:src/keys.c    **** #else
 7527              		.loc 1 373 73 view .LVU2292
 7528              	.LBE828:
 421:src/keys.c    ****     if (cp->key == c) {
 7529              		.loc 1 421 3 is_stmt 1 view .LVU2293
 421:src/keys.c    ****     if (cp->key == c) {
 7530              		.loc 1 421 15 view .LVU2294
 7531 0266 181F     		subs	r0, r3, #4
 7532 0268 00EB8100 		add	r0, r0, r1, lsl #2
 7533              	.LBB829:
 373:src/keys.c    **** #else
 7534              		.loc 1 373 73 is_stmt 0 view .LVU2295
 7535 026c 0421     		movs	r1, #4
 7536              	.LVL635:
 373:src/keys.c    **** #else
 7537              		.loc 1 373 73 view .LVU2296
 7538 026e 01E0     		b	.L922
 7539              	.LVL636:
 7540              	.L1338:
 373:src/keys.c    **** #else
 7541              		.loc 1 373 73 view .LVU2297
 7542 0270 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 7543              	.LVL637:
 7544              	.L922:
 373:src/keys.c    **** #else
 7545              		.loc 1 373 73 view .LVU2298
 7546              	.LBE829:
ARM GAS  /tmp/ccXySG1f.s 			page 234


 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7547              		.loc 1 422 5 is_stmt 1 view .LVU2299
 421:src/keys.c    ****     if (cp->key == c) {
 7548              		.loc 1 421 24 view .LVU2300
 421:src/keys.c    ****     if (cp->key == c) {
 7549              		.loc 1 421 15 view .LVU2301
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7550              		.loc 1 422 8 is_stmt 0 view .LVU2302
 7551 0274 8C42     		cmp	r4, r1
 7552 0276 00F0AA84 		beq	.L1337
 421:src/keys.c    ****     if (cp->key == c) {
 7553              		.loc 1 421 3 view .LVU2303
 7554 027a 8342     		cmp	r3, r0
 7555 027c F8D1     		bne	.L1338
 7556              	.LVL638:
 7557              	.L921:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7558              		.loc 1 427 3 is_stmt 1 view .LVU2304
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7559              		.loc 1 427 6 is_stmt 0 view .LVU2305
 7560 027e 1107     		lsls	r1, r2, #28
 7561 0280 00F1AF84 		bmi	.L927
 7562              	.LVL639:
 7563              	.L925:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7564              		.loc 1 427 6 view .LVU2306
 7565              	.LBE834:
 7566              	.LBE849:
3329:src/keys.c    **** 		return process_labellist((const keycode)c);
 7567              		.loc 1 3329 2 is_stmt 1 view .LVU2307
3329:src/keys.c    **** 		return process_labellist((const keycode)c);
 7568              		.loc 1 3329 6 is_stmt 0 view .LVU2308
 7569 0284 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3329:src/keys.c    **** 		return process_labellist((const keycode)c);
 7570              		.loc 1 3329 5 view .LVU2309
 7571 0288 5907     		lsls	r1, r3, #29
 7572 028a 00F16C85 		bmi	.L1339
3332:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7573              		.loc 1 3332 2 is_stmt 1 view .LVU2310
3332:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7574              		.loc 1 3332 5 is_stmt 0 view .LVU2311
 7575 028e 1807     		lsls	r0, r3, #28
 7576 0290 00F1B286 		bmi	.L1340
3335:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7577              		.loc 1 3335 2 is_stmt 1 view .LVU2312
3335:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7578              		.loc 1 3335 5 is_stmt 0 view .LVU2313
 7579 0294 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7580 0298 002B     		cmp	r3, #0
 7581 029a 40F09887 		bne	.L1341
3338:src/keys.c    **** #ifndef INFRARED
 7582              		.loc 1 3338 2 is_stmt 1 view .LVU2314
3338:src/keys.c    **** #ifndef INFRARED
 7583              		.loc 1 3338 6 is_stmt 0 view .LVU2315
 7584 029e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3338:src/keys.c    **** #ifndef INFRARED
 7585              		.loc 1 3338 5 view .LVU2316
ARM GAS  /tmp/ccXySG1f.s 			page 235


 7586 02a2 1907     		lsls	r1, r3, #28
 7587 02a4 00F1B687 		bmi	.L1342
3351:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7588              		.loc 1 3351 2 is_stmt 1 view .LVU2317
3351:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7589              		.loc 1 3351 6 is_stmt 0 view .LVU2318
 7590 02a8 DAF80030 		ldr	r3, [r10]
 7591 02ac 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3351:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7592              		.loc 1 3351 5 view .LVU2319
 7593 02b0 03F04103 		and	r3, r3, #65
 7594 02b4 412B     		cmp	r3, #65
 7595 02b6 01F06081 		beq	.L1343
3355:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7596              		.loc 1 3355 2 is_stmt 1 view .LVU2320
3355:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7597              		.loc 1 3355 5 is_stmt 0 view .LVU2321
 7598 02ba 9507     		lsls	r5, r2, #30
 7599 02bc 01F10980 		bmi	.L1303
3358:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7600              		.loc 1 3358 3 is_stmt 1 view .LVU2322
3358:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7601              		.loc 1 3358 24 is_stmt 0 view .LVU2323
 7602 02c0 0BF1FF33 		add	r3, fp, #-1
3358:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7603              		.loc 1 3358 6 view .LVU2324
 7604 02c4 DBB2     		uxtb	r3, r3
 7605 02c6 012B     		cmp	r3, #1
 7606 02c8 41F20481 		bls	.L1301
3360:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7607              		.loc 1 3360 3 is_stmt 1 view .LVU2325
3360:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7608              		.loc 1 3360 6 is_stmt 0 view .LVU2326
 7609 02cc BBF1030F 		cmp	fp, #3
3361:src/keys.c    **** 		// print_debug (3, c);
 7610              		.loc 1 3361 11 view .LVU2327
 7611 02d0 2046     		mov	r0, r4
3360:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7612              		.loc 1 3360 6 view .LVU2328
 7613 02d2 01F08180 		beq	.L1344
 7614              	.LVL640:
 7615              	.L1300:
 7616              	.LBB850:
 7617              	.LBB851:
1430:src/keys.c    ****    case (K_CMPLX):
 7618              		.loc 1 1430 13 view .LVU2329
 7619 02d6 FFF7FEFF 		bl	process_normal
 7620              	.LVL641:
 7621 02da 0446     		mov	r4, r0
 7622 02dc 80E0     		b	.L835
 7623              	.L1402:
 7624 02de 00BF     		.align	2
 7625              	.L1401:
 7626 02e0 00000000 		.word	.LANCHOR18
 7627 02e4 00000000 		.word	Pause
 7628 02e8 00000000 		.word	JustStopped
 7629 02ec 00000000 		.word	OpCode
ARM GAS  /tmp/ccXySG1f.s 			page 236


 7630 02f0 00000000 		.word	GoFast
 7631 02f4 00000000 		.word	Running
 7632 02f8 00000000 		.word	ShowRPN
 7633 02fc 00000000 		.word	JustDisplayed
 7634 0300 00000000 		.word	StateWhileOn
 7635 0304 00000000 		.word	OpCodeDisplayPending
 7636 0308 00000000 		.word	DispMsg
 7637 030c 00000000 		.word	.LC0
 7638 0310 00080800 		.word	526336
 7639 0314 00000000 		.word	.LANCHOR17
 7640 0318 00000000 		.word	WasDataEntry
 7641 031c 00000000 		.word	main_ram
 7642              	.LVL642:
 7643              	.L806:
1430:src/keys.c    ****    case (K_CMPLX):
 7644              		.loc 1 1430 13 view .LVU2330
 7645              	.LBE851:
 7646              	.LBE850:
3212:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7647              		.loc 1 3212 5 is_stmt 1 view .LVU2331
3212:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7648              		.loc 1 3212 8 is_stmt 0 view .LVU2332
 7649 0320 242C     		cmp	r4, #36
 7650 0322 00F09D80 		beq	.L808
3212:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7651              		.loc 1 3212 18 view .LVU2333
 7652 0326 272C     		cmp	r4, #39
 7653 0328 00F09A80 		beq	.L808
3222:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7654              		.loc 1 3222 5 is_stmt 1 view .LVU2334
3222:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7655              		.loc 1 3222 8 is_stmt 0 view .LVU2335
 7656 032c 622C     		cmp	r4, #98
 7657 032e 07D0     		beq	.L811
3223:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7658              		.loc 1 3223 7 is_stmt 1 view .LVU2336
3223:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7659              		.loc 1 3223 15 is_stmt 0 view .LVU2337
 7660 0330 B74B     		ldr	r3, .L1403
3225:src/keys.c    ****     }
 7661              		.loc 1 3225 14 view .LVU2338
 7662 0332 B84A     		ldr	r2, .L1403+4
3223:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7663              		.loc 1 3223 17 view .LVU2339
 7664 0334 0134     		adds	r4, r4, #1
 7665              	.LVL643:
3225:src/keys.c    ****     }
 7666              		.loc 1 3225 14 view .LVU2340
 7667 0336 0121     		movs	r1, #1
3223:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7668              		.loc 1 3223 15 view .LVU2341
 7669 0338 DC74     		strb	r4, [r3, #19]
3224:src/keys.c    ****       GoFast = 1;
 7670              		.loc 1 3224 7 is_stmt 1 view .LVU2342
3224:src/keys.c    ****       GoFast = 1;
 7671              		.loc 1 3224 13 is_stmt 0 view .LVU2343
 7672 033a 0023     		movs	r3, #0
ARM GAS  /tmp/ccXySG1f.s 			page 237


3225:src/keys.c    ****     }
 7673              		.loc 1 3225 14 view .LVU2344
 7674 033c 1160     		str	r1, [r2]
3224:src/keys.c    ****       GoFast = 1;
 7675              		.loc 1 3224 13 view .LVU2345
 7676 033e 3B70     		strb	r3, [r7]
3225:src/keys.c    ****     }
 7677              		.loc 1 3225 7 is_stmt 1 view .LVU2346
 7678              	.LVL644:
 7679              	.L811:
3225:src/keys.c    ****     }
 7680              		.loc 1 3225 7 is_stmt 0 view .LVU2347
 7681              	.LBE823:
 7682              	.LBE822:
3611:src/keys.c    ****       break;
 7683              		.loc 1 3611 7 is_stmt 1 view .LVU2348
 7684 0340 FFF7FEFF 		bl	xeqprog
 7685              	.LVL645:
3612:src/keys.c    **** 
 7686              		.loc 1 3612 7 view .LVU2349
 7687 0344 3368     		ldr	r3, [r6]
3399:src/keys.c    ****   //print_debug(60,c);
 7688              		.loc 1 3399 7 is_stmt 0 view .LVU2350
 7689 0346 0025     		movs	r5, #0
3612:src/keys.c    **** 
 7690              		.loc 1 3612 7 view .LVU2351
 7691 0348 3124     		movs	r4, #49
 7692              	.LVL646:
3652:src/keys.c    **** #ifndef CONSOLE
 7693              		.loc 1 3652 3 is_stmt 1 view .LVU2352
3652:src/keys.c    **** #ifndef CONSOLE
 7694              		.loc 1 3652 6 is_stmt 0 view .LVU2353
 7695 034a 002B     		cmp	r3, #0
 7696 034c 3FF4B6AE 		beq	.L821
 7697              	.L1311:
3652:src/keys.c    **** #ifndef CONSOLE
 7698              		.loc 1 3652 6 view .LVU2354
 7699 0350 B14E     		ldr	r6, .L1403+8
3665:src/keys.c    ****   watchdog();
 7700              		.loc 1 3665 3 is_stmt 1 view .LVU2355
3665:src/keys.c    ****   watchdog();
 7701              		.loc 1 3665 17 is_stmt 0 view .LVU2356
 7702 0352 0023     		movs	r3, #0
 7703 0354 3360     		str	r3, [r6]
3666:src/keys.c    **** }
 7704              		.loc 1 3666 13 is_stmt 1 view .LVU2357
 7705 0356 D4E6     		b	.L770
 7706              	.LVL647:
 7707              	.L1313:
3411:src/keys.c    ****     }
 7708              		.loc 1 3411 7 view .LVU2358
3561:src/keys.c    **** #ifdef DM42
 7709              		.loc 1 3561 15 is_stmt 0 view .LVU2359
 7710 0358 B04E     		ldr	r6, .L1403+12
3561:src/keys.c    **** #ifdef DM42
 7711              		.loc 1 3561 13 view .LVU2360
 7712 035a B149     		ldr	r1, .L1403+16
ARM GAS  /tmp/ccXySG1f.s 			page 238


3561:src/keys.c    **** #ifdef DM42
 7713              		.loc 1 3561 15 view .LVU2361
 7714 035c 3368     		ldr	r3, [r6]
3411:src/keys.c    ****     }
 7715              		.loc 1 3411 14 view .LVU2362
 7716 035e B14A     		ldr	r2, .L1403+20
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7717              		.loc 1 3560 18 view .LVU2363
 7718 0360 DFF8DC92 		ldr	r9, .L1403+48
3561:src/keys.c    **** #ifdef DM42
 7719              		.loc 1 3561 15 view .LVU2364
 7720 0364 B3FA83F3 		clz	r3, r3
 7721 0368 5B09     		lsrs	r3, r3, #5
3561:src/keys.c    **** #ifdef DM42
 7722              		.loc 1 3561 13 view .LVU2365
 7723 036a 0B60     		str	r3, [r1]
3411:src/keys.c    ****     }
 7724              		.loc 1 3411 14 view .LVU2366
 7725 036c 0023     		movs	r3, #0
 7726 036e 1360     		str	r3, [r2]
3508:src/keys.c    ****     {
 7727              		.loc 1 3508 3 is_stmt 1 view .LVU2367
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7728              		.loc 1 3560 5 view .LVU2368
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7729              		.loc 1 3560 18 is_stmt 0 view .LVU2369
 7730 0370 C9F80030 		str	r3, [r9]
3561:src/keys.c    **** #ifdef DM42
 7731              		.loc 1 3561 5 is_stmt 1 view .LVU2370
3563:src/keys.c    ****       c = process(c);
 7732              		.loc 1 3563 5 view .LVU2371
 7733 0374 FCE6     		b	.L773
 7734              	.L791:
3563:src/keys.c    ****       c = process(c);
 7735              		.loc 1 3563 5 is_stmt 0 view .LVU2372
 7736 0376 A94E     		ldr	r6, .L1403+12
3561:src/keys.c    **** #ifdef DM42
 7737              		.loc 1 3561 13 view .LVU2373
 7738 0378 A949     		ldr	r1, .L1403+16
 7739 037a 3368     		ldr	r3, [r6]
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7740              		.loc 1 3560 5 is_stmt 1 view .LVU2374
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7741              		.loc 1 3560 18 is_stmt 0 view .LVU2375
 7742 037c DFF8C092 		ldr	r9, .L1403+48
3561:src/keys.c    **** #ifdef DM42
 7743              		.loc 1 3561 15 view .LVU2376
 7744 0380 B3FA83F2 		clz	r2, r3
 7745 0384 5209     		lsrs	r2, r2, #5
3563:src/keys.c    ****       c = process(c);
 7746              		.loc 1 3563 8 view .LVU2377
 7747 0386 342C     		cmp	r4, #52
3561:src/keys.c    **** #ifdef DM42
 7748              		.loc 1 3561 13 view .LVU2378
 7749 0388 0A60     		str	r2, [r1]
3560:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7750              		.loc 1 3560 18 view .LVU2379
ARM GAS  /tmp/ccXySG1f.s 			page 239


 7751 038a C9F80050 		str	r5, [r9]
3561:src/keys.c    **** #ifdef DM42
 7752              		.loc 1 3561 5 is_stmt 1 view .LVU2380
3563:src/keys.c    ****       c = process(c);
 7753              		.loc 1 3563 5 view .LVU2381
3563:src/keys.c    ****       c = process(c);
 7754              		.loc 1 3563 8 is_stmt 0 view .LVU2382
 7755 038e 7FF4EFAE 		bne	.L773
3569:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7756              		.loc 1 3569 7 is_stmt 1 view .LVU2383
3569:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7757              		.loc 1 3569 11 is_stmt 0 view .LVU2384
 7758 0392 A54A     		ldr	r2, .L1403+24
 7759 0394 1068     		ldr	r0, [r2]
3569:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7760              		.loc 1 3569 10 view .LVU2385
 7761 0396 10F47042 		ands	r2, r0, #61440
 7762 039a 1BD0     		beq	.L1087
3569:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7763              		.loc 1 3569 11 discriminator 1 view .LVU2386
 7764 039c B2F5704F 		cmp	r2, #61440
 7765 03a0 00F0A880 		beq	.L1088
 7766              	.LBB1446:
3570:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7767              		.loc 1 3570 2 is_stmt 1 view .LVU2387
3570:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7768              		.loc 1 3570 28 is_stmt 0 view .LVU2388
 7769 03a4 C0F30722 		ubfx	r2, r0, #8, #8
 7770 03a8 A2F12004 		sub	r4, r2, #32
 7771              	.LVL648:
3570:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7772              		.loc 1 3570 28 view .LVU2389
 7773 03ac E4B2     		uxtb	r4, r4
 7774              	.LVL649:
3571:src/keys.c    **** 	  c = nd_opcode;
 7775              		.loc 1 3571 2 is_stmt 1 view .LVU2390
3571:src/keys.c    **** 	  c = nd_opcode;
 7776              		.loc 1 3571 5 is_stmt 0 view .LVU2391
 7777 03ae 012C     		cmp	r4, #1
 7778 03b0 35D9     		bls	.L1089
3571:src/keys.c    **** 	  c = nd_opcode;
 7779              		.loc 1 3571 53 discriminator 1 view .LVU2392
 7780 03b2 6C2C     		cmp	r4, #108
 7781 03b4 33D0     		beq	.L1089
3571:src/keys.c    **** 	  c = nd_opcode;
 7782              		.loc 1 3571 74 discriminator 2 view .LVU2393
 7783 03b6 242C     		cmp	r4, #36
 7784 03b8 31D0     		beq	.L1089
3573:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7785              		.loc 1 3573 7 is_stmt 1 view .LVU2394
3573:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7786              		.loc 1 3573 32 is_stmt 0 view .LVU2395
 7787 03ba A4F12D01 		sub	r1, r4, #45
3573:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7788              		.loc 1 3573 10 view .LVU2396
 7789 03be 0629     		cmp	r1, #6
 7790 03c0 00F26982 		bhi	.L1091
ARM GAS  /tmp/ccXySG1f.s 			page 240


3574:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7791              		.loc 1 3574 4 is_stmt 1 view .LVU2397
3574:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7792              		.loc 1 3574 25 is_stmt 0 view .LVU2398
 7793 03c4 4D3A     		subs	r2, r2, #77
3574:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7794              		.loc 1 3574 16 view .LVU2399
 7795 03c6 88F80F20 		strb	r2, [r8, #15]
3575:src/keys.c    **** 	}
 7796              		.loc 1 3575 4 is_stmt 1 view .LVU2400
 7797              	.LVL650:
3575:src/keys.c    **** 	}
 7798              		.loc 1 3575 4 is_stmt 0 view .LVU2401
 7799              	.LBE1446:
3589:src/keys.c    ****     case STATE_SST:
 7800              		.loc 1 3589 5 is_stmt 1 view .LVU2402
 7801              	.LBB1449:
3575:src/keys.c    **** 	}
 7802              		.loc 1 3575 6 is_stmt 0 view .LVU2403
 7803 03ca 3324     		movs	r4, #51
 7804              	.LVL651:
3575:src/keys.c    **** 	}
 7805              		.loc 1 3575 6 view .LVU2404
 7806 03cc 73E6     		b	.L801
 7807              	.LVL652:
 7808              	.L1312:
3575:src/keys.c    **** 	}
 7809              		.loc 1 3575 6 view .LVU2405
 7810              	.LBE1449:
3406:src/keys.c    ****     }
 7811              		.loc 1 3406 7 is_stmt 1 view .LVU2406
 7812 03ce FFF7FEFF 		bl	xeq_xrom
 7813              	.LVL653:
3406:src/keys.c    ****     }
 7814              		.loc 1 3406 7 is_stmt 0 view .LVU2407
 7815 03d2 21E6     		b	.L771
 7816              	.L1087:
3583:src/keys.c    ****       }      
 7817              		.loc 1 3583 2 is_stmt 1 view .LVU2408
 7818              	.LBB1450:
 7819              	.LBB1451:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7820              		.loc 1 705 5 is_stmt 0 view .LVU2409
 7821 03d4 C0F30723 		ubfx	r3, r0, #8, #8
 7822 03d8 012B     		cmp	r3, #1
 7823              	.LBE1451:
 7824              	.LBE1450:
3583:src/keys.c    ****       }      
 7825              		.loc 1 3583 6 view .LVU2410
 7826 03da 0446     		mov	r4, r0
 7827              	.LVL654:
 7828              	.LBB1455:
 7829              	.LBI1450:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7830              		.loc 1 704 12 is_stmt 1 view .LVU2411
 7831              	.LBB1452:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/ccXySG1f.s 			page 241


 7832              		.loc 1 705 2 view .LVU2412
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7833              		.loc 1 705 5 is_stmt 0 view .LVU2413
 7834 03dc 00F08F80 		beq	.L1121
 7835              	.LVL655:
 7836              	.L835:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7837              		.loc 1 705 5 view .LVU2414
 7838              	.LBE1452:
 7839              	.LBE1455:
3589:src/keys.c    ****     case STATE_SST:
 7840              		.loc 1 3589 5 is_stmt 1 view .LVU2415
 7841 03e0 A4F12B03 		sub	r3, r4, #43
 7842 03e4 082B     		cmp	r3, #8
 7843 03e6 00F2C080 		bhi	.L1093
 7844 03ea 01A2     		adr	r2, .L1095
 7845 03ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7846              		.p2align 2
 7847              	.L1095:
 7848 03f0 3F040000 		.word	.L1096+1
 7849 03f4 3F040000 		.word	.L1096+1
 7850 03f8 6B050000 		.word	.L1093+1
 7851 03fc C5040000 		.word	.L1025+1
 7852 0400 B5040000 		.word	.L1021+1
 7853 0404 9B040000 		.word	.L1018+1
 7854 0408 41030000 		.word	.L811+1
 7855 040c 39040000 		.word	.L1305+1
 7856 0410 39040000 		.word	.L1305+1
 7857              		.p2align 1
 7858              	.L1321:
3475:src/keys.c    ****       return;
 7859              		.loc 1 3475 21 is_stmt 0 discriminator 1 view .LVU2416
 7860 0414 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3475:src/keys.c    ****       return;
 7861              		.loc 1 3475 18 discriminator 1 view .LVU2417
 7862 0416 002A     		cmp	r2, #0
 7863 0418 7FF4A0AE 		bne	.L787
 7864 041c 71E6     		b	.L770
 7865              	.LVL656:
 7866              	.L1089:
 7867              	.LBB1456:
3572:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7868              		.loc 1 3572 4 is_stmt 1 view .LVU2418
 7869 041e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3572:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7870              		.loc 1 3572 6 is_stmt 0 view .LVU2419
 7871 0422 0446     		mov	r4, r0
 7872              	.LVL657:
 7873              	.L862:
3572:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7874              		.loc 1 3572 6 view .LVU2420
 7875              	.LBE1456:
3625:src/keys.c    **** 	NonProgrammable = 0;
 7876              		.loc 1 3625 7 is_stmt 1 view .LVU2421
3625:src/keys.c    **** 	NonProgrammable = 0;
 7877              		.loc 1 3625 10 is_stmt 0 view .LVU2422
 7878 0424 4A06     		lsls	r2, r1, #25
ARM GAS  /tmp/ccXySG1f.s 			page 242


 7879 0426 00F11181 		bmi	.L1345
 7880              	.L1116:
3625:src/keys.c    **** 	NonProgrammable = 0;
 7881              		.loc 1 3625 26 view .LVU2423
 7882 042a 804B     		ldr	r3, .L1403+28
 7883 042c 1A68     		ldr	r2, [r3]
 7884 042e 002A     		cmp	r2, #0
 7885 0430 41F0A381 		bne	.L1346
 7886              	.LVL658:
 7887              	.L1105:
3648:src/keys.c    ****       }
 7888              		.loc 1 3648 2 is_stmt 1 view .LVU2424
 7889 0434 FFF7FEFF 		bl	stoprog
 7890              	.LVL659:
 7891              	.L1305:
 7892 0438 3368     		ldr	r3, [r6]
3399:src/keys.c    ****   //print_debug(60,c);
 7893              		.loc 1 3399 7 is_stmt 0 view .LVU2425
 7894 043a 0025     		movs	r5, #0
 7895 043c 3BE6     		b	.L801
 7896              	.LVL660:
 7897              	.L1096:
3616:src/keys.c    **** 	set_window(c);
 7898              		.loc 1 3616 7 is_stmt 1 view .LVU2426
3616:src/keys.c    **** 	set_window(c);
 7899              		.loc 1 3616 12 is_stmt 0 view .LVU2427
 7900 043e FFF7FEFF 		bl	is_bad_cmdline
 7901              	.LVL661:
3616:src/keys.c    **** 	set_window(c);
 7902              		.loc 1 3616 10 view .LVU2428
 7903 0442 0546     		mov	r5, r0
 7904 0444 0028     		cmp	r0, #0
 7905 0446 F7D1     		bne	.L1305
3617:src/keys.c    ****       break;
 7906              		.loc 1 3617 2 is_stmt 1 view .LVU2429
 7907 0448 2046     		mov	r0, r4
 7908 044a FFF7FEFF 		bl	set_window
 7909              	.LVL662:
 7910 044e 3368     		ldr	r3, [r6]
 7911 0450 31E6     		b	.L801
 7912              	.L1320:
3467:src/keys.c    ****       JustStopped = 0;
 7913              		.loc 1 3467 25 is_stmt 0 discriminator 1 view .LVU2430
 7914 0452 FFF7FEFF 		bl	is_key_pressed
 7915              	.LVL663:
3467:src/keys.c    ****       JustStopped = 0;
 7916              		.loc 1 3467 21 discriminator 1 view .LVU2431
 7917 0456 0028     		cmp	r0, #0
 7918 0458 7FF47BAE 		bne	.L785
3468:src/keys.c    ****     }
 7919              		.loc 1 3468 7 is_stmt 1 view .LVU2432
3468:src/keys.c    ****     }
 7920              		.loc 1 3468 19 is_stmt 0 view .LVU2433
 7921 045c 2860     		str	r0, [r5]
 7922 045e 78E6     		b	.L785
 7923              	.LVL664:
 7924              	.L808:
ARM GAS  /tmp/ccXySG1f.s 			page 243


 7925              	.LBB1457:
 7926              	.LBB1394:
3213:src/keys.c    **** 	set_pc(0);
 7927              		.loc 1 3213 7 is_stmt 1 view .LVU2434
3213:src/keys.c    **** 	set_pc(0);
 7928              		.loc 1 3213 11 is_stmt 0 view .LVU2435
 7929 0460 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
3213:src/keys.c    **** 	set_pc(0);
 7930              		.loc 1 3213 10 view .LVU2436
 7931 0462 4BB1     		cbz	r3, .L810
3213:src/keys.c    **** 	set_pc(0);
 7932              		.loc 1 3213 20 view .LVU2437
 7933 0464 724B     		ldr	r3, .L1403+32
 7934 0466 1B68     		ldr	r3, [r3]
 7935 0468 B3F8E037 		ldrh	r3, [r3, #2016]
3213:src/keys.c    **** 	set_pc(0);
 7936              		.loc 1 3213 17 view .LVU2438
 7937 046c 9B0B     		lsrs	r3, r3, #14
 7938 046e 032B     		cmp	r3, #3
 7939 0470 02D1     		bne	.L810
3214:src/keys.c    ****       Pause = 0;
 7940              		.loc 1 3214 2 is_stmt 1 view .LVU2439
 7941 0472 0020     		movs	r0, #0
 7942 0474 FFF7FEFF 		bl	set_pc
 7943              	.LVL665:
 7944              	.L810:
3215:src/keys.c    ****       xeq_xrom();
 7945              		.loc 1 3215 7 view .LVU2440
3215:src/keys.c    ****       xeq_xrom();
 7946              		.loc 1 3215 13 is_stmt 0 view .LVU2441
 7947 0478 0025     		movs	r5, #0
 7948 047a 3D70     		strb	r5, [r7]
3216:src/keys.c    ****       set_running_off();
 7949              		.loc 1 3216 7 is_stmt 1 view .LVU2442
 7950 047c FFF7FEFF 		bl	xeq_xrom
 7951              	.LVL666:
3217:src/keys.c    ****       DispMsg = "Stopped";
 7952              		.loc 1 3217 7 view .LVU2443
 7953 0480 FFF7FEFF 		bl	set_running_off
 7954              	.LVL667:
3218:src/keys.c    ****       State2.disp_freeze = 0;
 7955              		.loc 1 3218 7 view .LVU2444
3219:src/keys.c    ****       return STATE_UNFINISHED;
 7956              		.loc 1 3219 26 is_stmt 0 view .LVU2445
 7957 0484 624A     		ldr	r2, .L1403
3218:src/keys.c    ****       State2.disp_freeze = 0;
 7958              		.loc 1 3218 15 view .LVU2446
 7959 0486 6B48     		ldr	r0, .L1403+36
3219:src/keys.c    ****       return STATE_UNFINISHED;
 7960              		.loc 1 3219 26 view .LVU2447
 7961 0488 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3218:src/keys.c    ****       State2.disp_freeze = 0;
 7962              		.loc 1 3218 15 view .LVU2448
 7963 048a 6B4C     		ldr	r4, .L1403+40
 7964              	.LVL668:
3218:src/keys.c    ****       State2.disp_freeze = 0;
 7965              		.loc 1 3218 15 view .LVU2449
ARM GAS  /tmp/ccXySG1f.s 			page 244


 7966 048c 0460     		str	r4, [r0]
3219:src/keys.c    ****       return STATE_UNFINISHED;
 7967              		.loc 1 3219 7 is_stmt 1 view .LVU2450
3219:src/keys.c    ****       return STATE_UNFINISHED;
 7968              		.loc 1 3219 26 is_stmt 0 view .LVU2451
 7969 048e 65F30411 		bfi	r1, r5, #4, #1
 7970 0492 3368     		ldr	r3, [r6]
 7971 0494 D175     		strb	r1, [r2, #23]
3220:src/keys.c    ****     }
 7972              		.loc 1 3220 7 is_stmt 1 view .LVU2452
3220:src/keys.c    ****     }
 7973              		.loc 1 3220 14 is_stmt 0 view .LVU2453
 7974 0496 3324     		movs	r4, #51
 7975 0498 0DE6     		b	.L801
 7976              	.LVL669:
 7977              	.L1018:
3220:src/keys.c    ****     }
 7978              		.loc 1 3220 14 view .LVU2454
 7979              	.LBE1394:
 7980              	.LBE1457:
3601:src/keys.c    **** 	delprog();
 7981              		.loc 1 3601 7 is_stmt 1 view .LVU2455
3601:src/keys.c    **** 	delprog();
 7982              		.loc 1 3601 11 is_stmt 0 view .LVU2456
 7983 049a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3601:src/keys.c    **** 	delprog();
 7984              		.loc 1 3601 10 view .LVU2457
 7985 049e 13F04005 		ands	r5, r3, #64
 7986 04a2 00F09E80 		beq	.L1347
3603:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 7987              		.loc 1 3603 12 is_stmt 1 view .LVU2458
3603:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 7988              		.loc 1 3603 15 is_stmt 0 view .LVU2459
 7989 04a6 13F00805 		ands	r5, r3, #8
 7990 04aa 40F08180 		bne	.L1098
 7991              	.L1306:
 7992 04ae 3368     		ldr	r3, [r6]
 7993              	.LBB1458:
3606:src/keys.c    ****       }
 7994              		.loc 1 3606 9 view .LVU2460
 7995 04b0 3024     		movs	r4, #48
 7996 04b2 00E6     		b	.L801
 7997              	.L1021:
 7998              	.LBE1458:
3597:src/keys.c    ****       break;
 7999              		.loc 1 3597 7 is_stmt 1 view .LVU2461
 8000 04b4 4FF0FF30 		mov	r0, #-1
 8001 04b8 FFF7FEFF 		bl	xeq_sst_bst
 8002              	.LVL670:
3598:src/keys.c    **** 
 8003              		.loc 1 3598 7 view .LVU2462
3399:src/keys.c    ****   //print_debug(60,c);
 8004              		.loc 1 3399 7 is_stmt 0 view .LVU2463
 8005 04bc 0025     		movs	r5, #0
 8006 04be 3368     		ldr	r3, [r6]
3598:src/keys.c    **** 
 8007              		.loc 1 3598 7 view .LVU2464
ARM GAS  /tmp/ccXySG1f.s 			page 245


 8008 04c0 2F24     		movs	r4, #47
 8009 04c2 F8E5     		b	.L801
 8010              	.L1025:
3591:src/keys.c    ****       OpCodeDisplayPending = 0;
 8011              		.loc 1 3591 7 is_stmt 1 view .LVU2465
3591:src/keys.c    ****       OpCodeDisplayPending = 0;
 8012              		.loc 1 3591 14 is_stmt 0 view .LVU2466
 8013 04c4 574A     		ldr	r2, .L1403+20
3592:src/keys.c    ****       xeq_sst_bst(0);
 8014              		.loc 1 3592 28 view .LVU2467
 8015 04c6 5D4B     		ldr	r3, .L1403+44
 8016 04c8 0020     		movs	r0, #0
3591:src/keys.c    ****       OpCodeDisplayPending = 0;
 8017              		.loc 1 3591 14 view .LVU2468
 8018 04ca 2E24     		movs	r4, #46
 8019 04cc 1460     		str	r4, [r2]
3592:src/keys.c    ****       xeq_sst_bst(0);
 8020              		.loc 1 3592 7 is_stmt 1 view .LVU2469
3592:src/keys.c    ****       xeq_sst_bst(0);
 8021              		.loc 1 3592 28 is_stmt 0 view .LVU2470
 8022 04ce 1860     		str	r0, [r3]
3593:src/keys.c    ****       break;
 8023              		.loc 1 3593 7 is_stmt 1 view .LVU2471
3399:src/keys.c    ****   //print_debug(60,c);
 8024              		.loc 1 3399 7 is_stmt 0 view .LVU2472
 8025 04d0 0546     		mov	r5, r0
3593:src/keys.c    ****       break;
 8026              		.loc 1 3593 7 view .LVU2473
 8027 04d2 FFF7FEFF 		bl	xeq_sst_bst
 8028              	.LVL671:
 8029 04d6 EDE5     		b	.L1304
 8030              	.LVL672:
 8031              	.L1316:
3593:src/keys.c    ****       break;
 8032              		.loc 1 3593 7 view .LVU2474
 8033 04d8 504E     		ldr	r6, .L1403+12
 8034 04da 3368     		ldr	r3, [r6]
 8035 04dc 3EE6     		b	.L787
 8036              	.L1315:
3489:src/keys.c    ****       finish_RPN(); // RPN
 8037              		.loc 1 3489 7 is_stmt 1 view .LVU2475
 8038 04de 8D20     		movs	r0, #141
 8039 04e0 FFF7FEFF 		bl	clr_dot
 8040              	.LVL673:
3490:src/keys.c    ****     }
 8041              		.loc 1 3490 7 view .LVU2476
 8042 04e4 FFF7FEFF 		bl	finish_RPN
 8043              	.LVL674:
 8044 04e8 ADE5     		b	.L789
 8045              	.L800:
3552:src/keys.c    ****     }
 8046              		.loc 1 3552 7 view .LVU2477
 8047 04ea FFF7FEFF 		bl	finish_RPN
 8048              	.LVL675:
3399:src/keys.c    ****   //print_debug(60,c);
 8049              		.loc 1 3399 7 is_stmt 0 view .LVU2478
 8050 04ee 0025     		movs	r5, #0
ARM GAS  /tmp/ccXySG1f.s 			page 246


 8051 04f0 3368     		ldr	r3, [r6]
 8052 04f2 E0E5     		b	.L801
 8053              	.L1088:
3583:src/keys.c    ****       }      
 8054              		.loc 1 3583 2 is_stmt 1 view .LVU2479
 8055              	.LBB1459:
 8056              	.LBB1453:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8057              		.loc 1 705 5 is_stmt 0 view .LVU2480
 8058 04f4 C0F30723 		ubfx	r3, r0, #8, #8
 8059 04f8 012B     		cmp	r3, #1
 8060              	.LBE1453:
 8061              	.LBE1459:
3583:src/keys.c    ****       }      
 8062              		.loc 1 3583 6 view .LVU2481
 8063 04fa 0446     		mov	r4, r0
 8064              	.LVL676:
 8065              	.LBB1460:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8066              		.loc 1 704 12 is_stmt 1 view .LVU2482
 8067              	.LBB1454:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8068              		.loc 1 705 2 view .LVU2483
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8069              		.loc 1 705 5 is_stmt 0 view .LVU2484
 8070 04fc 69D1     		bne	.L1348
 8071              	.LVL677:
 8072              	.L1121:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8073              		.loc 1 705 5 view .LVU2485
 8074 04fe FFF7FEFF 		bl	check_confirm.part.0
 8075              	.LVL678:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8076              		.loc 1 705 5 view .LVU2486
 8077 0502 0446     		mov	r4, r0
 8078              	.LVL679:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8079              		.loc 1 705 5 view .LVU2487
 8080 0504 6CE7     		b	.L835
 8081              	.LVL680:
 8082              	.L792:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8083              		.loc 1 705 5 view .LVU2488
 8084              	.LBE1454:
 8085              	.LBE1460:
3533:src/keys.c    **** #ifndef CONSOLE
 8086              		.loc 1 3533 7 is_stmt 1 view .LVU2489
 8087 0506 464B     		ldr	r3, .L1403+16
 8088 0508 8D20     		movs	r0, #141
 8089 050a 1968     		ldr	r1, [r3]
 8090 050c FFF7FEFF 		bl	dot
 8091              	.LVL681:
3535:src/keys.c    **** 	if (!WasDataEntry) {
 8092              		.loc 1 3535 7 view .LVU2490
3535:src/keys.c    **** 	if (!WasDataEntry) {
 8093              		.loc 1 3535 11 is_stmt 0 view .LVU2491
 8094 0510 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 247


3535:src/keys.c    **** 	if (!WasDataEntry) {
 8095              		.loc 1 3535 10 view .LVU2492
 8096 0514 9806     		lsls	r0, r3, #26
 8097 0516 3FF5F4AD 		bmi	.L770
3536:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8098              		.loc 1 3536 2 is_stmt 1 view .LVU2493
3536:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8099              		.loc 1 3536 6 is_stmt 0 view .LVU2494
 8100 051a 494B     		ldr	r3, .L1403+48
3536:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8101              		.loc 1 3536 5 view .LVU2495
 8102 051c 1B68     		ldr	r3, [r3]
 8103 051e 002B     		cmp	r3, #0
 8104 0520 70D1     		bne	.L803
3538:src/keys.c    **** 	}
 8105              		.loc 1 3538 4 is_stmt 1 view .LVU2496
 8106              		.loc 1 3667 1 is_stmt 0 view .LVU2497
 8107 0522 03B0     		add	sp, sp, #12
 8108              		.cfi_remember_state
 8109              		.cfi_def_cfa_offset 36
 8110              		@ sp needed
 8111 0524 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8112              		.cfi_restore 14
 8113              		.cfi_restore 11
 8114              		.cfi_restore 10
 8115              		.cfi_restore 9
 8116              		.cfi_restore 8
 8117              		.cfi_restore 7
 8118              		.cfi_restore 6
 8119              		.cfi_restore 5
 8120              		.cfi_restore 4
 8121              		.cfi_def_cfa_offset 0
 8122              	.LVL682:
3538:src/keys.c    **** 	}
 8123              		.loc 1 3538 4 view .LVU2498
 8124 0528 FFF7FEBF 		b	display
 8125              	.LVL683:
 8126              	.L1317:
 8127              		.cfi_restore_state
3521:src/keys.c    ****       else {
 8128              		.loc 1 3521 2 is_stmt 1 view .LVU2499
 8129 052c FFF7FEFF 		bl	xeq_sst_bst
 8130              	.LVL684:
3521:src/keys.c    ****       else {
 8131              		.loc 1 3521 2 is_stmt 0 view .LVU2500
 8132 0530 3A4E     		ldr	r6, .L1403+12
 8133 0532 B6E5     		b	.L794
 8134              	.L1319:
3452:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8135              		.loc 1 3452 28 discriminator 1 view .LVU2501
 8136 0534 FFF7FEFF 		bl	shift_down
 8137              	.LVL685:
3452:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8138              		.loc 1 3452 25 discriminator 1 view .LVU2502
 8139 0538 0028     		cmp	r0, #0
 8140 053a 3FF405AE 		beq	.L776
3454:src/keys.c    ****       }
ARM GAS  /tmp/ccXySG1f.s 			page 248


 8141              		.loc 1 3454 2 is_stmt 1 view .LVU2503
3454:src/keys.c    ****       }
 8142              		.loc 1 3454 16 is_stmt 0 view .LVU2504
 8143 053e 344B     		ldr	r3, .L1403
 8144 0540 0022     		movs	r2, #0
 8145 0542 1A74     		strb	r2, [r3, #16]
 8146 0544 00E6     		b	.L776
 8147              	.L1318:
3454:src/keys.c    ****       }
 8148              		.loc 1 3454 16 view .LVU2505
 8149 0546 354E     		ldr	r6, .L1403+12
 8150 0548 ABE5     		b	.L794
 8151              	.L779:
3442:src/keys.c    **** 	  /*
 8152              		.loc 1 3442 10 is_stmt 1 view .LVU2506
3442:src/keys.c    **** 	  /*
 8153              		.loc 1 3442 14 is_stmt 0 view .LVU2507
 8154 054a FFF7FEFF 		bl	keyticks
 8155              	.LVL686:
3442:src/keys.c    **** 	  /*
 8156              		.loc 1 3442 13 view .LVU2508
 8157 054e 0C28     		cmp	r0, #12
 8158 0550 7FF7F5AD 		ble	.L778
3446:src/keys.c    **** 	  message("NULL", CNULL);
 8159              		.loc 1 3446 4 is_stmt 1 view .LVU2509
3447:src/keys.c    **** 	  // Force display update on key-up
 8160              		.loc 1 3447 4 is_stmt 0 view .LVU2510
 8161 0554 3B48     		ldr	r0, .L1403+52
3446:src/keys.c    **** 	  message("NULL", CNULL);
 8162              		.loc 1 3446 11 view .LVU2511
 8163 0556 2E60     		str	r6, [r5]
3447:src/keys.c    **** 	  // Force display update on key-up
 8164              		.loc 1 3447 4 is_stmt 1 view .LVU2512
 8165 0558 3146     		mov	r1, r6
 8166 055a FFF7FEFF 		bl	message
 8167              	.LVL687:
3449:src/keys.c    **** 	}
 8168              		.loc 1 3449 4 view .LVU2513
3449:src/keys.c    **** 	}
 8169              		.loc 1 3449 21 is_stmt 0 view .LVU2514
 8170 055e 2C4B     		ldr	r3, .L1403
 8171 0560 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8172 0562 66F34512 		bfi	r2, r6, #5, #1
 8173 0566 DA75     		strb	r2, [r3, #23]
 8174 0568 E9E5     		b	.L778
 8175              	.L1093:
3625:src/keys.c    **** 	NonProgrammable = 0;
 8176              		.loc 1 3625 11 view .LVU2515
 8177 056a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8178 056e 2F4A     		ldr	r2, .L1403+28
3625:src/keys.c    **** 	NonProgrammable = 0;
 8179              		.loc 1 3625 10 view .LVU2516
 8180 0570 5D06     		lsls	r5, r3, #25
 8181 0572 2046     		mov	r0, r4
 8182              	.LVL688:
3625:src/keys.c    **** 	NonProgrammable = 0;
 8183              		.loc 1 3625 7 is_stmt 1 view .LVU2517
ARM GAS  /tmp/ccXySG1f.s 			page 249


3625:src/keys.c    **** 	NonProgrammable = 0;
 8184              		.loc 1 3625 10 is_stmt 0 view .LVU2518
 8185 0574 41F1CD80 		bpl	.L1291
 8186              	.L1104:
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8187              		.loc 1 3626 2 is_stmt 1 view .LVU2519
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8188              		.loc 1 3626 18 is_stmt 0 view .LVU2520
 8189 0578 0023     		movs	r3, #0
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8190              		.loc 1 3627 5 view .LVU2521
 8191 057a 142C     		cmp	r4, #20
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8192              		.loc 1 3626 18 view .LVU2522
 8193 057c 1360     		str	r3, [r2]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8194              		.loc 1 3627 2 is_stmt 1 view .LVU2523
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8195              		.loc 1 3627 5 is_stmt 0 view .LVU2524
 8196 057e 68D8     		bhi	.L1101
3628:src/keys.c    **** 	    // Data entry key
 8197              		.loc 1 3628 4 is_stmt 1 view .LVU2525
3628:src/keys.c    **** 	    // Data entry key
 8198              		.loc 1 3628 7 is_stmt 0 view .LVU2526
 8199 0580 24B9     		cbnz	r4, .L1107
3628:src/keys.c    **** 	    // Data entry key
 8200              		.loc 1 3628 38 discriminator 1 view .LVU2527
 8201 0582 FFF7FEFF 		bl	is_bad_cmdline
 8202              	.LVL689:
3628:src/keys.c    **** 	    // Data entry key
 8203              		.loc 1 3628 34 discriminator 1 view .LVU2528
 8204 0586 0028     		cmp	r0, #0
 8205 0588 7FF456AF 		bne	.L1305
 8206              	.L1107:
3631:src/keys.c    **** #endif
 8207              		.loc 1 3631 6 is_stmt 1 view .LVU2529
3633:src/keys.c    **** 	    xeq(c);
 8208              		.loc 1 3633 37 is_stmt 0 view .LVU2530
 8209 058c 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3631:src/keys.c    **** #endif
 8210              		.loc 1 3631 19 view .LVU2531
 8211 0590 0123     		movs	r3, #1
3634:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8212              		.loc 1 3634 6 view .LVU2532
 8213 0592 2046     		mov	r0, r4
3631:src/keys.c    **** #endif
 8214              		.loc 1 3631 19 view .LVU2533
 8215 0594 C9F80030 		str	r3, [r9]
3633:src/keys.c    **** 	    xeq(c);
 8216              		.loc 1 3633 6 is_stmt 1 view .LVU2534
3633:src/keys.c    **** 	    xeq(c);
 8217              		.loc 1 3633 37 is_stmt 0 view .LVU2535
 8218 0598 B5FA85F5 		clz	r5, r5
3634:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8219              		.loc 1 3634 6 view .LVU2536
 8220 059c FFF7FEFF 		bl	xeq
 8221              	.LVL690:
ARM GAS  /tmp/ccXySG1f.s 			page 250


3635:src/keys.c    **** 	  }
 8222              		.loc 1 3635 38 view .LVU2537
 8223 05a0 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8224 05a4 3368     		ldr	r3, [r6]
3633:src/keys.c    **** 	    xeq(c);
 8225              		.loc 1 3633 37 view .LVU2538
 8226 05a6 6D09     		lsrs	r5, r5, #5
 8227              	.LVL691:
3634:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8228              		.loc 1 3634 6 is_stmt 1 view .LVU2539
3635:src/keys.c    **** 	  }
 8229              		.loc 1 3635 6 view .LVU2540
3635:src/keys.c    **** 	  }
 8230              		.loc 1 3635 20 is_stmt 0 view .LVU2541
 8231 05a8 0028     		cmp	r0, #0
 8232 05aa 08BF     		it	eq
 8233 05ac 0125     		moveq	r5, #1
 8234              	.LVL692:
3635:src/keys.c    **** 	  }
 8235              		.loc 1 3635 20 view .LVU2542
 8236 05ae 82E5     		b	.L801
 8237              	.LVL693:
 8238              	.L1098:
 8239              	.LBB1461:
3604:src/keys.c    **** 	if (p > Alpha)
 8240              		.loc 1 3604 2 is_stmt 1 view .LVU2543
3604:src/keys.c    **** 	if (p > Alpha)
 8241              		.loc 1 3604 22 is_stmt 0 view .LVU2544
 8242 05b0 1F4C     		ldr	r4, .L1403+32
 8243 05b2 2068     		ldr	r0, [r4]
3604:src/keys.c    **** 	if (p > Alpha)
 8244              		.loc 1 3604 12 view .LVU2545
 8245 05b4 0021     		movs	r1, #0
 8246 05b6 00F5F660 		add	r0, r0, #1968
 8247 05ba FFF7FEFF 		bl	find_char
 8248              	.LVL694:
3605:src/keys.c    **** 	  *--p = '\0';
 8249              		.loc 1 3605 8 view .LVU2546
 8250 05be 2368     		ldr	r3, [r4]
 8251              	.LVL695:
3605:src/keys.c    **** 	  *--p = '\0';
 8252              		.loc 1 3605 2 is_stmt 1 view .LVU2547
3605:src/keys.c    **** 	  *--p = '\0';
 8253              		.loc 1 3605 8 is_stmt 0 view .LVU2548
 8254 05c0 03F5F663 		add	r3, r3, #1968
3605:src/keys.c    **** 	  *--p = '\0';
 8255              		.loc 1 3605 5 view .LVU2549
 8256 05c4 9842     		cmp	r0, r3
 8257 05c6 00F2DF80 		bhi	.L1099
 8258 05ca 3368     		ldr	r3, [r6]
 8259              	.LBE1461:
3399:src/keys.c    ****   //print_debug(60,c);
 8260              		.loc 1 3399 7 view .LVU2550
 8261 05cc 0025     		movs	r5, #0
 8262              	.LBB1462:
3605:src/keys.c    **** 	  *--p = '\0';
 8263              		.loc 1 3605 5 view .LVU2551
ARM GAS  /tmp/ccXySG1f.s 			page 251


 8264 05ce 3024     		movs	r4, #48
 8265 05d0 71E5     		b	.L801
 8266              	.LVL696:
 8267              	.L1348:
3605:src/keys.c    **** 	  *--p = '\0';
 8268              		.loc 1 3605 5 view .LVU2552
 8269              	.LBE1462:
3625:src/keys.c    **** 	NonProgrammable = 0;
 8270              		.loc 1 3625 7 is_stmt 1 view .LVU2553
3625:src/keys.c    **** 	NonProgrammable = 0;
 8271              		.loc 1 3625 11 is_stmt 0 view .LVU2554
 8272 05d2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	NonProgrammable = 0;
 8273              		.loc 1 3625 10 view .LVU2555
 8274 05d6 5B06     		lsls	r3, r3, #25
 8275 05d8 7FF527AF 		bpl	.L1116
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8276              		.loc 1 3626 2 is_stmt 1 view .LVU2556
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8277              		.loc 1 3626 18 is_stmt 0 view .LVU2557
 8278 05dc 134B     		ldr	r3, .L1403+28
 8279 05de 1D60     		str	r5, [r3]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8280              		.loc 1 3627 2 is_stmt 1 view .LVU2558
 8281 05e0 37E0     		b	.L1101
 8282              	.LVL697:
 8283              	.L1347:
3602:src/keys.c    ****       else if (State2.alphas) {
 8284              		.loc 1 3602 2 view .LVU2559
 8285 05e2 FFF7FEFF 		bl	delprog
 8286              	.LVL698:
 8287 05e6 3024     		movs	r4, #48
 8288 05e8 3368     		ldr	r3, [r6]
 8289 05ea 64E5     		b	.L801
 8290              	.LVL699:
 8291              	.L780:
3436:src/keys.c    **** 	    DispMsg = TraceBuffer;
 8292              		.loc 1 3436 6 view .LVU2560
 8293 05ec 164E     		ldr	r6, .L1403+56
 8294 05ee 3146     		mov	r1, r6
 8295 05f0 FFF7FEFF 		bl	prt
 8296              	.LVL700:
 8297 05f4 2A46     		mov	r2, r5
 8298 05f6 0146     		mov	r1, r0
 8299 05f8 3046     		mov	r0, r6
 8300 05fa FFF7FEFF 		bl	scopy_char
 8301              	.LVL701:
3437:src/keys.c    **** 	  }
 8302              		.loc 1 3437 6 view .LVU2561
3437:src/keys.c    **** 	  }
 8303              		.loc 1 3437 14 is_stmt 0 view .LVU2562
 8304 05fe 0D4B     		ldr	r3, .L1403+36
 8305 0600 1E60     		str	r6, [r3]
 8306 0602 97E5     		b	.L781
 8307              	.L803:
3541:src/keys.c    **** 	}
 8308              		.loc 1 3541 4 is_stmt 1 view .LVU2563
ARM GAS  /tmp/ccXySG1f.s 			page 252


 8309              		.loc 1 3667 1 is_stmt 0 view .LVU2564
 8310 0604 03B0     		add	sp, sp, #12
 8311              		.cfi_remember_state
 8312              		.cfi_def_cfa_offset 36
 8313              		@ sp needed
 8314 0606 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8315              		.cfi_restore 14
 8316              		.cfi_restore 11
 8317              		.cfi_restore 10
 8318              		.cfi_restore 9
 8319              		.cfi_restore 8
 8320              		.cfi_restore 7
 8321              		.cfi_restore 6
 8322              		.cfi_restore 5
 8323              		.cfi_restore 4
 8324              		.cfi_def_cfa_offset 0
 8325              	.LVL702:
3541:src/keys.c    **** 	}
 8326              		.loc 1 3541 4 view .LVU2565
 8327 060a FFF7FEBF 		b	finish_RPN
 8328              	.LVL703:
 8329              	.L1404:
 8330 060e 00BF     		.align	2
 8331              	.L1403:
 8332 0610 00000000 		.word	StateWhileOn
 8333 0614 00000000 		.word	GoFast
 8334 0618 00000000 		.word	JustDisplayed
 8335 061c 00000000 		.word	Running
 8336 0620 00000000 		.word	ShowRPN
 8337 0624 00000000 		.word	OpCode
 8338 0628 00000000 		.word	nd_opcode
 8339 062c 00000000 		.word	NonProgrammable
 8340 0630 00000000 		.word	main_ram
 8341 0634 00000000 		.word	DispMsg
 8342 0638 0C000000 		.word	.LC2
 8343 063c 00000000 		.word	OpCodeDisplayPending
 8344 0640 00000000 		.word	WasDataEntry
 8345 0644 04000000 		.word	.LC1
 8346 0648 00000000 		.word	TraceBuffer
 8347              	.LVL704:
 8348              	.L1345:
 8349              		.cfi_restore_state
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8350              		.loc 1 3626 2 is_stmt 1 view .LVU2566
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8351              		.loc 1 3626 18 is_stmt 0 view .LVU2567
 8352 064c C34B     		ldr	r3, .L1405
 8353 064e 0022     		movs	r2, #0
 8354 0650 1A60     		str	r2, [r3]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8355              		.loc 1 3627 2 is_stmt 1 view .LVU2568
 8356              	.LVL705:
 8357              	.L1101:
3641:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8358              		.loc 1 3641 4 view .LVU2569
3641:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8359              		.loc 1 3641 11 is_stmt 0 view .LVU2570
ARM GAS  /tmp/ccXySG1f.s 			page 253


 8360 0652 C34A     		ldr	r2, .L1405+4
3642:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8361              		.loc 1 3642 25 view .LVU2571
 8362 0654 C34B     		ldr	r3, .L1405+8
3641:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8363              		.loc 1 3641 11 view .LVU2572
 8364 0656 1060     		str	r0, [r2]
3642:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8365              		.loc 1 3642 4 is_stmt 1 view .LVU2573
3642:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8366              		.loc 1 3642 25 is_stmt 0 view .LVU2574
 8367 0658 0122     		movs	r2, #1
 8368 065a C34E     		ldr	r6, .L1405+12
 8369 065c 1A60     		str	r2, [r3]
3643:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8370              		.loc 1 3643 4 is_stmt 1 view .LVU2575
 8371 065e FFF7FEFF 		bl	finish_RPN
 8372              	.LVL706:
3644:src/keys.c    **** 	}
 8373              		.loc 1 3644 4 view .LVU2576
 8374 0662 4CE5     		b	.L1108
 8375              	.LVL707:
 8376              	.L1324:
 8377              	.LBB1463:
 8378              	.LBB1395:
3269:src/keys.c    **** 
 8379              		.loc 1 3269 3 view .LVU2577
 8380              	.LBB968:
 8381              	.LBI968:
2871:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8382              		.loc 1 2871 12 view .LVU2578
 8383              	.LBB969:
2873:src/keys.c    **** #ifdef DM42
 8384              		.loc 1 2873 2 view .LVU2579
 8385 0664 E4B2     		uxtb	r4, r4
 8386              	.LVL708:
2873:src/keys.c    **** #ifdef DM42
 8387              		.loc 1 2873 2 is_stmt 0 view .LVU2580
 8388 0666 A4F10E03 		sub	r3, r4, #14
 8389 066a 192B     		cmp	r3, #25
 8390 066c 3AD8     		bhi	.L1309
 8391 066e DFE803F0 		tbb	[pc, r3]
 8392              	.L827:
 8393 0672 3E       		.byte	(.L828-.L827)/2
 8394 0673 39       		.byte	(.L1309-.L827)/2
 8395 0674 3E       		.byte	(.L828-.L827)/2
 8396 0675 39       		.byte	(.L1309-.L827)/2
 8397 0676 39       		.byte	(.L1309-.L827)/2
 8398 0677 39       		.byte	(.L1309-.L827)/2
 8399 0678 39       		.byte	(.L1309-.L827)/2
 8400 0679 39       		.byte	(.L1309-.L827)/2
 8401 067a 39       		.byte	(.L1309-.L827)/2
 8402 067b 39       		.byte	(.L1309-.L827)/2
 8403 067c 39       		.byte	(.L1309-.L827)/2
 8404 067d 39       		.byte	(.L1309-.L827)/2
 8405 067e 39       		.byte	(.L1309-.L827)/2
 8406 067f 39       		.byte	(.L1309-.L827)/2
ARM GAS  /tmp/ccXySG1f.s 			page 254


 8407 0680 39       		.byte	(.L1309-.L827)/2
 8408 0681 39       		.byte	(.L1309-.L827)/2
 8409 0682 39       		.byte	(.L1309-.L827)/2
 8410 0683 39       		.byte	(.L1309-.L827)/2
 8411 0684 4A       		.byte	(.L826-.L827)/2
 8412 0685 39       		.byte	(.L1309-.L827)/2
 8413 0686 39       		.byte	(.L1309-.L827)/2
 8414 0687 39       		.byte	(.L1309-.L827)/2
 8415 0688 39       		.byte	(.L1309-.L827)/2
 8416 0689 39       		.byte	(.L1309-.L827)/2
 8417 068a 39       		.byte	(.L1309-.L827)/2
 8418 068b 4A       		.byte	(.L826-.L827)/2
 8419              	.LVL709:
 8420              		.p2align 1
 8421              	.L1334:
2873:src/keys.c    **** #ifdef DM42
 8422              		.loc 1 2873 2 view .LVU2581
 8423              	.LBE969:
 8424              	.LBE968:
 8425              	.LBB972:
 8426              	.LBB835:
 277:src/keys.c    **** 			switch (c) {
 8427              		.loc 1 277 3 is_stmt 1 view .LVU2582
 277:src/keys.c    **** 			switch (c) {
 8428              		.loc 1 277 6 is_stmt 0 view .LVU2583
 8429 068c BBF1030F 		cmp	fp, #3
 8430 0690 00F01982 		beq	.L1349
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8431              		.loc 1 294 3 is_stmt 1 view .LVU2584
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8432              		.loc 1 294 6 is_stmt 0 view .LVU2585
 8433 0694 BBF1020F 		cmp	fp, #2
 8434 0698 00F0B085 		beq	.L1350
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8435              		.loc 1 296 3 is_stmt 1 view .LVU2586
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8436              		.loc 1 296 6 is_stmt 0 view .LVU2587
 8437 069c BBF1010F 		cmp	fp, #1
 8438 06a0 7FF4EDAD 		bne	.L921
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8439              		.loc 1 296 27 view .LVU2588
 8440 06a4 0C2C     		cmp	r4, #12
 8441 06a6 7FF4EAAD 		bne	.L921
 297:src/keys.c    **** 				SET_REAL;
 8442              		.loc 1 297 4 is_stmt 1 view .LVU2589
 297:src/keys.c    **** 				SET_REAL;
 8443              		.loc 1 297 7 is_stmt 0 view .LVU2590
 8444 06aa 11F0060F 		tst	r1, #6
 8445 06ae 01F02680 		beq	.L1351
 301:src/keys.c    **** 				CmdLineLength = 0;
 8446              		.loc 1 301 9 is_stmt 1 view .LVU2591
 301:src/keys.c    **** 				CmdLineLength = 0;
 8447              		.loc 1 301 12 is_stmt 0 view .LVU2592
 8448 06b2 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 8449 06b6 002B     		cmp	r3, #0
 8450 06b8 00F0D787 		beq	.L1139
 302:src/keys.c    **** 				CmdLineEex = 0;
ARM GAS  /tmp/ccXySG1f.s 			page 255


 8451              		.loc 1 302 5 is_stmt 1 view .LVU2593
 303:src/keys.c    **** 				CmdLineDot = 0;
 8452              		.loc 1 303 5 view .LVU2594
 304:src/keys.c    **** 			}
 8453              		.loc 1 304 5 view .LVU2595
 302:src/keys.c    **** 				CmdLineEex = 0;
 8454              		.loc 1 302 19 is_stmt 0 view .LVU2596
 8455 06bc 0023     		movs	r3, #0
 8456 06be A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 8457              		.loc 1 304 16 view .LVU2597
 8458 06c2 88F81E30 		strb	r3, [r8, #30]
 8459              	.LVL710:
 304:src/keys.c    **** 			}
 8460              		.loc 1 304 16 view .LVU2598
 8461              	.LBE835:
 8462              	.LBE972:
3315:src/keys.c    **** 		if (is_bad_cmdline())
 8463              		.loc 1 3315 2 is_stmt 1 view .LVU2599
 8464              	.LBB973:
 8465              	.LBB836:
 306:src/keys.c    **** 		}
 8466              		.loc 1 306 11 is_stmt 0 view .LVU2600
 8467 06c6 1023     		movs	r3, #16
 8468              	.LVL711:
 8469              	.L904:
 306:src/keys.c    **** 		}
 8470              		.loc 1 306 11 view .LVU2601
 8471              	.LBE836:
 8472              	.LBE973:
3316:src/keys.c    **** 			return STATE_UNFINISHED;
 8473              		.loc 1 3316 3 is_stmt 1 view .LVU2602
 8474 06c8 0093     		str	r3, [sp]
3316:src/keys.c    **** 			return STATE_UNFINISHED;
 8475              		.loc 1 3316 7 is_stmt 0 view .LVU2603
 8476 06ca FFF7FEFF 		bl	is_bad_cmdline
 8477              	.LVL712:
3316:src/keys.c    **** 			return STATE_UNFINISHED;
 8478              		.loc 1 3316 6 view .LVU2604
 8479 06ce 009B     		ldr	r3, [sp]
 8480 06d0 0446     		mov	r4, r0
 8481 06d2 38B9     		cbnz	r0, .L1309
 8482 06d4 0093     		str	r3, [sp]
3318:src/keys.c    **** 		init_cat( cat );
 8483              		.loc 1 3318 3 is_stmt 1 view .LVU2605
 8484 06d6 FFF7FEFF 		bl	init_cat
 8485              	.LVL713:
3319:src/keys.c    **** 		return STATE_UNFINISHED;
 8486              		.loc 1 3319 3 view .LVU2606
 8487 06da 009B     		ldr	r3, [sp]
 8488 06dc 1846     		mov	r0, r3
 8489 06de FFF7FEFF 		bl	init_cat
 8490              	.LVL714:
3320:src/keys.c    **** 	}
 8491              		.loc 1 3320 3 view .LVU2607
 8492              	.LBE1395:
 8493              	.LBE1463:
ARM GAS  /tmp/ccXySG1f.s 			page 256


3399:src/keys.c    ****   //print_debug(60,c);
 8494              		.loc 1 3399 7 is_stmt 0 view .LVU2608
 8495 06e2 2546     		mov	r5, r4
 8496              	.LVL715:
 8497              	.L1309:
3399:src/keys.c    ****   //print_debug(60,c);
 8498              		.loc 1 3399 7 view .LVU2609
 8499 06e4 3368     		ldr	r3, [r6]
 8500              	.LBB1464:
 8501              	.LBB1396:
3320:src/keys.c    **** 	}
 8502              		.loc 1 3320 10 view .LVU2610
 8503 06e6 3324     		movs	r4, #51
 8504 06e8 E5E4     		b	.L801
 8505              	.LVL716:
 8506              	.L829:
 8507              	.LBB974:
 8508              	.LBB970:
2882:src/keys.c    **** 	  }
 8509              		.loc 1 2882 26 is_stmt 1 view .LVU2611
 8510 06ea FFF7FEFF 		bl	clpall
 8511              	.LVL717:
2882:src/keys.c    **** 	  }
 8512              		.loc 1 2882 36 view .LVU2612
 8513              	.L828:
2891:src/keys.c    **** 	  State2.digval = 0;
 8514              		.loc 1 2891 4 view .LVU2613
2891:src/keys.c    **** 	  State2.digval = 0;
 8515              		.loc 1 2891 19 is_stmt 0 view .LVU2614
 8516 06ee 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8517 06f2 3368     		ldr	r3, [r6]
 8518 06f4 6FF30202 		bfc	r2, #0, #3
2892:src/keys.c    **** 	  break;
 8519              		.loc 1 2892 18 view .LVU2615
 8520 06f8 0021     		movs	r1, #0
2891:src/keys.c    **** 	  State2.digval = 0;
 8521              		.loc 1 2891 19 view .LVU2616
 8522 06fa 88F81420 		strb	r2, [r8, #20]
2892:src/keys.c    **** 	  break;
 8523              		.loc 1 2892 4 is_stmt 1 view .LVU2617
2892:src/keys.c    **** 	  break;
 8524              		.loc 1 2892 18 is_stmt 0 view .LVU2618
 8525 06fe A8F80810 		strh	r1, [r8, #8]	@ movhi
2893:src/keys.c    **** 	default:			// No state change
 8526              		.loc 1 2893 4 is_stmt 1 view .LVU2619
 8527              	.LBE970:
 8528              	.LBE974:
3269:src/keys.c    **** 
 8529              		.loc 1 3269 10 is_stmt 0 view .LVU2620
 8530 0702 3324     		movs	r4, #51
 8531              	.LVL718:
 8532              	.LBB975:
 8533              	.LBB971:
2893:src/keys.c    **** 	default:			// No state change
 8534              		.loc 1 2893 4 view .LVU2621
 8535 0704 D7E4     		b	.L801
 8536              	.LVL719:
ARM GAS  /tmp/ccXySG1f.s 			page 257


 8537              	.L826:
2878:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8538              		.loc 1 2878 4 is_stmt 1 view .LVU2622
2878:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8539              		.loc 1 2878 18 is_stmt 0 view .LVU2623
 8540 0706 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8541 070a 03F00703 		and	r3, r3, #7
 8542 070e 013B     		subs	r3, r3, #1
 8543 0710 032B     		cmp	r3, #3
 8544 0712 ECD8     		bhi	.L828
 8545 0714 01A2     		adr	r2, .L830
 8546 0716 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8547 071a 00BF     		.p2align 2
 8548              	.L830:
 8549 071c 39070000 		.word	.L833+1
 8550 0720 33070000 		.word	.L832+1
 8551 0724 2D070000 		.word	.L831+1
 8552 0728 EB060000 		.word	.L829+1
 8553              		.p2align 1
 8554              	.L831:
2881:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8555              		.loc 1 2881 26 is_stmt 1 view .LVU2624
 8556 072c FFF7FEFF 		bl	clrprog
 8557              	.LVL720:
2881:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8558              		.loc 1 2881 37 view .LVU2625
2881:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8559              		.loc 1 2881 4 is_stmt 0 view .LVU2626
 8560 0730 DDE7     		b	.L828
 8561              	.L832:
2880:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8562              		.loc 1 2880 25 is_stmt 1 view .LVU2627
 8563 0732 FFF7FEFF 		bl	reset
 8564              	.LVL721:
2880:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8565              		.loc 1 2880 34 view .LVU2628
2880:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8566              		.loc 1 2880 4 is_stmt 0 view .LVU2629
 8567 0736 DAE7     		b	.L828
 8568              	.L833:
2879:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8569              		.loc 1 2879 25 is_stmt 1 view .LVU2630
 8570 0738 FFF7FEFF 		bl	clrall
 8571              	.LVL722:
2879:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8572              		.loc 1 2879 35 view .LVU2631
2879:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8573              		.loc 1 2879 4 is_stmt 0 view .LVU2632
 8574 073c D7E7     		b	.L828
 8575              	.LVL723:
 8576              	.L1322:
2879:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8577              		.loc 1 2879 4 view .LVU2633
 8578              	.LBE971:
 8579              	.LBE975:
3236:src/keys.c    **** #else
 8580              		.loc 1 3236 47 view .LVU2634
ARM GAS  /tmp/ccXySG1f.s 			page 258


 8581 073e DFF84082 		ldr	r8, .L1405+36
 8582 0742 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
3236:src/keys.c    **** #else
 8583              		.loc 1 3236 36 view .LVU2635
 8584 0746 4BEA0302 		orr	r2, fp, r3
 8585 074a 12F0FF0F 		tst	r2, #255
 8586 074e 7FF42CAD 		bne	.L813
3236:src/keys.c    **** #else
 8587              		.loc 1 3236 76 view .LVU2636
 8588 0752 864A     		ldr	r2, .L1405+16
 8589 0754 D8F81430 		ldr	r3, [r8, #20]
 8590 0758 1A42     		tst	r2, r3
 8591 075a 7FF42EAD 		bne	.L823
3242:src/keys.c    **** 	stack_restore();
 8592              		.loc 1 3242 7 is_stmt 1 view .LVU2637
3242:src/keys.c    **** 	stack_restore();
 8593              		.loc 1 3242 11 is_stmt 0 view .LVU2638
 8594 075e DFF818A2 		ldr	r10, .L1405+28
 8595 0762 DAF80030 		ldr	r3, [r10]
 8596 0766 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3242:src/keys.c    **** 	stack_restore();
 8597              		.loc 1 3242 10 view .LVU2639
 8598 076a 03F04102 		and	r2, r3, #65
 8599 076e 412A     		cmp	r2, #65
 8600 0770 00F03786 		beq	.L1352
 8601              	.LVL724:
 8602              	.L815:
3248:src/keys.c    ****       return STATE_UNFINISHED;
 8603              		.loc 1 3248 7 is_stmt 1 view .LVU2640
 8604 0774 FFF7FEFF 		bl	soft_init_state
 8605              	.LVL725:
3249:src/keys.c    ****     }
 8606              		.loc 1 3249 7 view .LVU2641
3249:src/keys.c    ****     }
 8607              		.loc 1 3249 14 is_stmt 0 view .LVU2642
 8608 0778 3324     		movs	r4, #51
 8609 077a 3368     		ldr	r3, [r6]
 8610 077c 9BE4     		b	.L801
 8611              	.LVL726:
 8612              	.L1325:
3272:src/keys.c    **** 
 8613              		.loc 1 3272 3 is_stmt 1 view .LVU2643
3272:src/keys.c    **** 
 8614              		.loc 1 3272 10 is_stmt 0 view .LVU2644
 8615 077e E0B2     		uxtb	r0, r4
 8616 0780 FFF7FEFF 		bl	process_arg
 8617              	.LVL727:
 8618 0784 0446     		mov	r4, r0
 8619              	.LVL728:
3272:src/keys.c    **** 
 8620              		.loc 1 3272 10 view .LVU2645
 8621 0786 2BE6     		b	.L835
 8622              	.LVL729:
 8623              	.L1099:
3272:src/keys.c    **** 
 8624              		.loc 1 3272 10 view .LVU2646
 8625              	.LBE1396:
ARM GAS  /tmp/ccXySG1f.s 			page 259


 8626              	.LBE1464:
 8627              	.LBB1465:
3606:src/keys.c    ****       }
 8628              		.loc 1 3606 4 is_stmt 1 view .LVU2647
3606:src/keys.c    ****       }
 8629              		.loc 1 3606 9 is_stmt 0 view .LVU2648
 8630 0788 0025     		movs	r5, #0
 8631 078a 00F8015C 		strb	r5, [r0, #-1]
 8632 078e 8EE6     		b	.L1306
 8633              	.LVL730:
 8634              	.L1328:
3606:src/keys.c    ****       }
 8635              		.loc 1 3606 9 view .LVU2649
 8636              	.LBE1465:
 8637              	.LBB1466:
 8638              	.LBB1397:
3281:src/keys.c    **** 
 8639              		.loc 1 3281 3 is_stmt 1 view .LVU2650
 8640              	.LBB976:
 8641              	.LBI976:
2337:src/keys.c    **** 	int r = State2.test;
 8642              		.loc 1 2337 12 view .LVU2651
 8643              	.LBB977:
2338:src/keys.c    **** 	int cmpx = State2.cmplx;
 8644              		.loc 1 2338 2 view .LVU2652
2339:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8645              		.loc 1 2339 2 view .LVU2653
 8646              	.LBB978:
 8647              	.LBB979:
 8648              	.LBB980:
 8649              	.LBB981:
 143:src/keys.c    **** }
 8650              		.loc 1 143 23 is_stmt 0 view .LVU2654
 8651 0790 DFF8DCC1 		ldr	ip, .L1405+20
 8652              	.LBE981:
 8653              	.LBE980:
 234:src/keys.c    **** }
 8654              		.loc 1 234 28 view .LVU2655
 8655 0794 DFF8DCE1 		ldr	lr, .L1405+24
 8656              	.LBB985:
 8657              	.LBB982:
 143:src/keys.c    **** }
 8658              		.loc 1 143 23 view .LVU2656
 8659 0798 E4B2     		uxtb	r4, r4
 8660              	.LVL731:
 143:src/keys.c    **** }
 8661              		.loc 1 143 23 view .LVU2657
 8662              	.LBE982:
 8663              	.LBE985:
 8664              	.LBE979:
 8665              	.LBE978:
2341:src/keys.c    **** 
 8666              		.loc 1 2341 44 view .LVU2658
 8667 079a 12F0020F 		tst	r2, #2
 8668              	.LBB990:
 8669              	.LBB988:
 8670              	.LBB986:
ARM GAS  /tmp/ccXySG1f.s 			page 260


 8671              	.LBB983:
 143:src/keys.c    **** }
 8672              		.loc 1 143 23 view .LVU2659
 8673 079e 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 8674              	.LBE983:
 8675              	.LBE986:
 234:src/keys.c    **** }
 8676              		.loc 1 234 28 view .LVU2660
 8677 07a2 1EF80CE0 		ldrb	lr, [lr, ip]	@ zero_extendqisi2
 8678              	.LBE988:
 8679              	.LBE990:
2339:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8680              		.loc 1 2339 19 view .LVU2661
 8681 07a6 C2F3400B 		ubfx	fp, r2, #1, #1
 8682              	.LVL732:
2340:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8683              		.loc 1 2340 2 is_stmt 1 view .LVU2662
 8684              	.LBB991:
 8685              	.LBI978:
 210:src/keys.c    **** {
 8686              		.loc 1 210 14 view .LVU2663
 8687              	.LBB989:
 212:src/keys.c    ****     // K00 - K05
 8688              		.loc 1 212 3 view .LVU2664
 234:src/keys.c    **** }
 8689              		.loc 1 234 3 view .LVU2665
 8690              	.LBB987:
 8691              	.LBI980:
 131:src/keys.c    **** {
 8692              		.loc 1 131 12 view .LVU2666
 8693              	.LBB984:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8694              		.loc 1 133 2 view .LVU2667
 143:src/keys.c    **** }
 8695              		.loc 1 143 2 view .LVU2668
 143:src/keys.c    **** }
 8696              		.loc 1 143 2 is_stmt 0 view .LVU2669
 8697              	.LBE984:
 8698              	.LBE987:
 8699              	.LBE989:
 8700              	.LBE991:
2340:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8701              		.loc 1 2340 15 view .LVU2670
 8702 07aa 2EF0800C 		bic	ip, lr, #128
 8703              	.LVL733:
2341:src/keys.c    **** 
 8704              		.loc 1 2341 2 is_stmt 1 view .LVU2671
2341:src/keys.c    **** 
 8705              		.loc 1 2341 44 is_stmt 0 view .LVU2672
 8706 07ae 00F0C380 		beq	.L1353
 8707              	.LVL734:
2343:src/keys.c    **** 	State2.cmplx = 0;
 8708              		.loc 1 2343 2 is_stmt 1 view .LVU2673
2344:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8709              		.loc 1 2344 15 is_stmt 0 view .LVU2674
 8710 07b2 60F34102 		bfi	r2, r0, #1, #1
2345:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
ARM GAS  /tmp/ccXySG1f.s 			page 261


 8711              		.loc 1 2345 5 view .LVU2675
 8712 07b6 BCF1640F 		cmp	ip, #100
2343:src/keys.c    **** 	State2.cmplx = 0;
 8713              		.loc 1 2343 14 view .LVU2676
 8714 07ba 4FF00700 		mov	r0, #7
2344:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8715              		.loc 1 2344 15 view .LVU2677
 8716 07be 88F81520 		strb	r2, [r8, #21]
2343:src/keys.c    **** 	State2.cmplx = 0;
 8717              		.loc 1 2343 14 view .LVU2678
 8718 07c2 88F80F00 		strb	r0, [r8, #15]
2344:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8719              		.loc 1 2344 2 is_stmt 1 view .LVU2679
2345:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8720              		.loc 1 2345 2 view .LVU2680
2345:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8721              		.loc 1 2345 5 is_stmt 0 view .LVU2681
 8722 07c6 00F01185 		beq	.L1165
2341:src/keys.c    **** 
 8723              		.loc 1 2341 44 view .LVU2682
 8724 07ca 4FF0340A 		mov	r10, #52
 8725              	.LVL735:
 8726              	.L1124:
2346:src/keys.c    **** 		// Lettered register
 8727              		.loc 1 2346 5 view .LVU2683
 8728 07ce BCF17F0F 		cmp	ip, #127
2341:src/keys.c    **** 
 8729              		.loc 1 2341 60 view .LVU2684
 8730 07d2 9A44     		add	r10, r10, r3
2346:src/keys.c    **** 		// Lettered register
 8731              		.loc 1 2346 2 is_stmt 1 view .LVU2685
2346:src/keys.c    **** 		// Lettered register
 8732              		.loc 1 2346 5 is_stmt 0 view .LVU2686
 8733 07d4 00F04981 		beq	.L867
 8734              	.LVL736:
2346:src/keys.c    **** 		// Lettered register
 8735              		.loc 1 2346 18 view .LVU2687
 8736 07d8 BCF1630F 		cmp	ip, #99
 8737 07dc 40F26881 		bls	.L868
2346:src/keys.c    **** 		// Lettered register
 8738              		.loc 1 2346 37 view .LVU2688
 8739 07e0 BCF16F0F 		cmp	ip, #111
 8740 07e4 00F24181 		bhi	.L867
2348:src/keys.c    **** 			if (n == regI_idx)
 8741              		.loc 1 2348 3 is_stmt 1 view .LVU2689
2348:src/keys.c    **** 			if (n == regI_idx)
 8742              		.loc 1 2348 6 is_stmt 0 view .LVU2690
 8743 07e8 BBF1000F 		cmp	fp, #0
 8744 07ec 00F09182 		beq	.L869
2348:src/keys.c    **** 			if (n == regI_idx)
 8745              		.loc 1 2348 12 view .LVU2691
 8746 07f0 1EF0010F 		tst	lr, #1
 8747 07f4 00F08D82 		beq	.L869
2349:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8748              		.loc 1 2349 4 is_stmt 1 view .LVU2692
2349:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8749              		.loc 1 2349 7 is_stmt 0 view .LVU2693
ARM GAS  /tmp/ccXySG1f.s 			page 262


 8750 07f8 BCF16D0F 		cmp	ip, #109
 8751 07fc 40F04481 		bne	.L870
2350:src/keys.c    **** 			// Disallow odd complex registers > A
 8752              		.loc 1 2350 5 is_stmt 1 view .LVU2694
2350:src/keys.c    **** 			// Disallow odd complex registers > A
 8753              		.loc 1 2350 30 is_stmt 0 view .LVU2695
 8754 0800 03F12904 		add	r4, r3, #41
 8755              	.LVL737:
2350:src/keys.c    **** 			// Disallow odd complex registers > A
 8756              		.loc 1 2350 30 view .LVU2696
 8757 0804 ECE5     		b	.L835
 8758              	.LVL738:
 8759              	.L1326:
2350:src/keys.c    **** 			// Disallow odd complex registers > A
 8760              		.loc 1 2350 30 view .LVU2697
 8761              	.LBE977:
 8762              	.LBE976:
3275:src/keys.c    **** 
 8763              		.loc 1 3275 3 is_stmt 1 view .LVU2698
 8764              	.LBB1005:
 8765              	.LBI1005:
1699:src/keys.c    **** 	int pc = -1;
 8766              		.loc 1 1699 12 view .LVU2699
 8767              	.LBB1006:
1700:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 8768              		.loc 1 1700 2 view .LVU2700
1701:src/keys.c    **** 
 8769              		.loc 1 1701 2 view .LVU2701
 8770              	.LBB1007:
 8771              	.LBI1007:
 210:src/keys.c    **** {
 8772              		.loc 1 210 14 view .LVU2702
 8773              	.LBB1008:
 212:src/keys.c    ****     // K00 - K05
 8774              		.loc 1 212 3 view .LVU2703
 234:src/keys.c    **** }
 8775              		.loc 1 234 3 view .LVU2704
 8776              	.LBB1009:
 8777              	.LBI1009:
 131:src/keys.c    **** {
 8778              		.loc 1 131 12 view .LVU2705
 8779              	.LBB1010:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8780              		.loc 1 133 2 view .LVU2706
 143:src/keys.c    **** }
 8781              		.loc 1 143 2 view .LVU2707
 143:src/keys.c    **** }
 8782              		.loc 1 143 23 is_stmt 0 view .LVU2708
 8783 0806 5A4B     		ldr	r3, .L1405+20
 8784              	.LBE1010:
 8785              	.LBE1009:
 234:src/keys.c    **** }
 8786              		.loc 1 234 28 view .LVU2709
 8787 0808 5A4A     		ldr	r2, .L1405+24
 8788 080a E4B2     		uxtb	r4, r4
 8789              	.LVL739:
 8790              	.LBB1012:
ARM GAS  /tmp/ccXySG1f.s 			page 263


 8791              	.LBB1011:
 143:src/keys.c    **** }
 8792              		.loc 1 143 23 view .LVU2710
 8793 080c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8794              	.LBE1011:
 8795              	.LBE1012:
 234:src/keys.c    **** }
 8796              		.loc 1 234 28 view .LVU2711
 8797 080e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 8798              	.LVL740:
 234:src/keys.c    **** }
 8799              		.loc 1 234 28 view .LVU2712
 8800              	.LBE1008:
 8801              	.LBE1007:
1703:src/keys.c    **** 		// Digit 0 - 9
 8802              		.loc 1 1703 2 is_stmt 1 view .LVU2713
1703:src/keys.c    **** 		// Digit 0 - 9
 8803              		.loc 1 1703 5 is_stmt 0 view .LVU2714
 8804 0810 0928     		cmp	r0, #9
 8805 0812 40F24581 		bls	.L1354
1708:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8806              		.loc 1 1708 7 is_stmt 1 view .LVU2715
1708:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8807              		.loc 1 1708 18 is_stmt 0 view .LVU2716
 8808 0816 20F08000 		bic	r0, r0, #128
 8809              	.LVL741:
1708:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8810              		.loc 1 1708 10 view .LVU2717
 8811 081a 6428     		cmp	r0, #100
 8812 081c 00F07282 		beq	.L1355
1709:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8813              		.loc 1 1709 7 is_stmt 1 view .LVU2718
1709:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8814              		.loc 1 1709 10 is_stmt 0 view .LVU2719
 8815 0820 6528     		cmp	r0, #101
 8816 0822 00F07D82 		beq	.L1356
1710:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8817              		.loc 1 1710 7 is_stmt 1 view .LVU2720
1710:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8818              		.loc 1 1710 10 is_stmt 0 view .LVU2721
 8819 0826 6628     		cmp	r0, #102
 8820 0828 00F08882 		beq	.L1357
1711:src/keys.c    **** #endif
 8821              		.loc 1 1711 7 is_stmt 1 view .LVU2722
1711:src/keys.c    **** #endif
 8822              		.loc 1 1711 10 is_stmt 0 view .LVU2723
 8823 082c 6728     		cmp	r0, #103
 8824 082e 00F0A684 		beq	.L1358
1713:src/keys.c    **** 		// A - D
 8825              		.loc 1 1713 7 is_stmt 1 view .LVU2724
1713:src/keys.c    **** 		// A - D
 8826              		.loc 1 1713 10 is_stmt 0 view .LVU2725
 8827 0832 032C     		cmp	r4, #3
 8828 0834 40F2AA84 		bls	.L1359
1718:src/keys.c    **** 		// .
 8829              		.loc 1 1718 7 is_stmt 1 view .LVU2726
1718:src/keys.c    **** 		// .
ARM GAS  /tmp/ccXySG1f.s 			page 264


 8830              		.loc 1 1718 10 is_stmt 0 view .LVU2727
 8831 0838 262C     		cmp	r4, #38
 8832 083a 00F03B85 		beq	.L1360
1723:src/keys.c    **** 		// ENTER - short circuit processing
 8833              		.loc 1 1723 7 is_stmt 1 view .LVU2728
1723:src/keys.c    **** 		// ENTER - short circuit processing
 8834              		.loc 1 1723 10 is_stmt 0 view .LVU2729
 8835 083e 0C2C     		cmp	r4, #12
 8836 0840 00F0BC84 		beq	.L1361
1727:src/keys.c    **** 		// backspace
 8837              		.loc 1 1727 7 is_stmt 1 view .LVU2730
1727:src/keys.c    **** 		// backspace
 8838              		.loc 1 1727 10 is_stmt 0 view .LVU2731
 8839 0844 102C     		cmp	r4, #16
 8840 0846 00F0A385 		beq	.L1362
1736:src/keys.c    **** 		// up
 8841              		.loc 1 1736 7 is_stmt 1 view .LVU2732
1736:src/keys.c    **** 		// up
 8842              		.loc 1 1736 10 is_stmt 0 view .LVU2733
 8843 084a 122C     		cmp	r4, #18
 8844 084c 00F0F686 		beq	.L1363
1746:src/keys.c    **** 		// down
 8845              		.loc 1 1746 7 is_stmt 1 view .LVU2734
1746:src/keys.c    **** 		// down
 8846              		.loc 1 1746 10 is_stmt 0 view .LVU2735
 8847 0850 182C     		cmp	r4, #24
 8848 0852 7FF447AF 		bne	.L1309
1748:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8849              		.loc 1 1748 3 is_stmt 1 view .LVU2736
1749:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8850              		.loc 1 1749 18 is_stmt 0 view .LVU2737
 8851 0856 484C     		ldr	r4, .L1405+28
 8852              	.LVL742:
1748:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8853              		.loc 1 1748 3 view .LVU2738
 8854 0858 0120     		movs	r0, #1
 8855 085a FFF7FEFF 		bl	update_program_bounds
 8856              	.LVL743:
1749:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8857              		.loc 1 1749 3 is_stmt 1 view .LVU2739
1749:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8858              		.loc 1 1749 18 is_stmt 0 view .LVU2740
 8859 085e 2368     		ldr	r3, [r4]
1749:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8860              		.loc 1 1749 11 view .LVU2741
 8861 0860 0021     		movs	r1, #0
 8862 0862 B3F8EE07 		ldrh	r0, [r3, #2030]
 8863 0866 FFF7FEFF 		bl	do_inc
 8864              	.LVL744:
1750:src/keys.c    **** 			rawpc = 1;
 8865              		.loc 1 1750 3 is_stmt 1 view .LVU2742
1750:src/keys.c    **** 			rawpc = 1;
 8866              		.loc 1 1750 6 is_stmt 0 view .LVU2743
 8867 086a 20B9     		cbnz	r0, .L847
1750:src/keys.c    **** 			rawpc = 1;
 8868              		.loc 1 1750 21 view .LVU2744
 8869 086c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccXySG1f.s 			page 265


1750:src/keys.c    **** 			rawpc = 1;
 8870              		.loc 1 1750 18 view .LVU2745
 8871 086e 5888     		ldrh	r0, [r3, #2]
 8872              	.LVL745:
1750:src/keys.c    **** 			rawpc = 1;
 8873              		.loc 1 1750 18 view .LVU2746
 8874 0870 0038     		subs	r0, r0, #0
 8875 0872 18BF     		it	ne
 8876 0874 0120     		movne	r0, #1
 8877              	.LVL746:
 8878              	.L847:
1756:src/keys.c    **** fin2:		State2.gtodot = 0;
 8879              		.loc 1 1756 7 is_stmt 1 view .LVU2747
 8880 0876 FFF7FEFF 		bl	set_pc
 8881              	.LVL747:
 8882              	.L851:
1757:src/keys.c    **** 		State2.digval = 0;
 8883              		.loc 1 1757 8 view .LVU2748
1757:src/keys.c    **** 		State2.digval = 0;
 8884              		.loc 1 1757 22 is_stmt 0 view .LVU2749
 8885 087a 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 8886 087e 3368     		ldr	r3, [r6]
1758:src/keys.c    **** 		State2.numdigit = 0;
 8887              		.loc 1 1758 17 view .LVU2750
 8888 0880 0022     		movs	r2, #0
1757:src/keys.c    **** 		State2.digval = 0;
 8889              		.loc 1 1757 22 view .LVU2751
 8890 0882 6FF30001 		bfc	r1, #0, #1
 8891 0886 88F81510 		strb	r1, [r8, #21]
1758:src/keys.c    **** 		State2.numdigit = 0;
 8892              		.loc 1 1758 3 is_stmt 1 view .LVU2752
1758:src/keys.c    **** 		State2.numdigit = 0;
 8893              		.loc 1 1758 17 is_stmt 0 view .LVU2753
 8894 088a A8F80820 		strh	r2, [r8, #8]	@ movhi
1759:src/keys.c    **** 	}
 8895              		.loc 1 1759 3 is_stmt 1 view .LVU2754
1759:src/keys.c    **** 	}
 8896              		.loc 1 1759 19 is_stmt 0 view .LVU2755
 8897 088e 88F80B20 		strb	r2, [r8, #11]
 8898              	.LBE1006:
 8899              	.LBE1005:
3275:src/keys.c    **** 
 8900              		.loc 1 3275 10 view .LVU2756
 8901 0892 3324     		movs	r4, #51
 8902 0894 0FE4     		b	.L801
 8903              	.LVL748:
 8904              	.L1091:
3275:src/keys.c    **** 
 8905              		.loc 1 3275 10 view .LVU2757
 8906              	.LBE1397:
 8907              	.LBE1466:
 8908              	.LBB1467:
3578:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8909              		.loc 1 3578 4 is_stmt 1 view .LVU2758
 8910              	.LBB1447:
 8911              	.LBI1447:
 552:src/keys.c    **** 	if (is_bad_cmdline())
ARM GAS  /tmp/ccXySG1f.s 			page 266


 8912              		.loc 1 552 13 view .LVU2759
 8913              	.LBB1448:
 553:src/keys.c    **** 		return;
 8914              		.loc 1 553 2 view .LVU2760
 553:src/keys.c    **** 		return;
 8915              		.loc 1 553 6 is_stmt 0 view .LVU2761
 8916 0896 FFF7FEFF 		bl	is_bad_cmdline
 8917              	.LVL749:
 553:src/keys.c    **** 		return;
 8918              		.loc 1 553 5 view .LVU2762
 8919 089a 0546     		mov	r5, r0
 8920 089c 0028     		cmp	r0, #0
 8921 089e 40F0DB80 		bne	.L1307
 8922 08a2 2046     		mov	r0, r4
 8923 08a4 FFF7FEFF 		bl	init_arg.part.0
 8924              	.LVL750:
 8925              	.LBE1448:
 8926              	.LBE1447:
3579:src/keys.c    **** 	}
 8927              		.loc 1 3579 6 view .LVU2763
 8928 08a8 3324     		movs	r4, #51
 8929              	.LVL751:
3579:src/keys.c    **** 	}
 8930              		.loc 1 3579 6 view .LVU2764
 8931 08aa 3368     		ldr	r3, [r6]
 8932 08ac 03E4     		b	.L801
 8933              	.LVL752:
 8934              	.L1163:
3579:src/keys.c    **** 	}
 8935              		.loc 1 3579 6 view .LVU2765
 8936              	.LBE1467:
 8937              	.LBB1468:
 8938 08ae 1C46     		mov	r4, r3
 8939              	.LVL753:
3579:src/keys.c    **** 	}
 8940              		.loc 1 3579 6 view .LVU2766
 8941 08b0 1FE4     		b	.L1110
 8942              	.LVL754:
 8943              	.L1327:
3579:src/keys.c    **** 	}
 8944              		.loc 1 3579 6 view .LVU2767
 8945              	.LBE1468:
 8946              	.LBB1469:
 8947              	.LBB1398:
3278:src/keys.c    **** 
 8948              		.loc 1 3278 3 is_stmt 1 view .LVU2768
 8949              	.LBB1025:
 8950              	.LBB1026:
1589:src/keys.c    **** 	State2.dot = 0;
 8951              		.loc 1 1589 15 is_stmt 0 view .LVU2769
 8952 08b2 22F06203 		bic	r3, r2, #98
 8953              	.LBE1026:
 8954              	.LBE1025:
3278:src/keys.c    **** 
 8955              		.loc 1 3278 10 view .LVU2770
 8956 08b6 E4B2     		uxtb	r4, r4
 8957              	.LVL755:
ARM GAS  /tmp/ccXySG1f.s 			page 267


 8958              	.LBB1039:
 8959              	.LBI1025:
1579:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 8960              		.loc 1 1579 12 is_stmt 1 view .LVU2771
 8961              	.LBB1036:
1580:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 8962              		.loc 1 1580 2 view .LVU2772
1585:src/keys.c    **** 	int f = State2.dot;
 8963              		.loc 1 1585 2 view .LVU2773
1589:src/keys.c    **** 	State2.dot = 0;
 8964              		.loc 1 1589 15 is_stmt 0 view .LVU2774
 8965 08b8 88F81530 		strb	r3, [r8, #21]
1585:src/keys.c    **** 	int f = State2.dot;
 8966              		.loc 1 1585 20 view .LVU2775
 8967 08bc C2F34009 		ubfx	r9, r2, #1, #1
 8968              	.LVL756:
1586:src/keys.c    **** 
 8969              		.loc 1 1586 2 is_stmt 1 view .LVU2776
1586:src/keys.c    **** 
 8970              		.loc 1 1586 16 is_stmt 0 view .LVU2777
 8971 08c0 C2F3801B 		ubfx	fp, r2, #6, #1
 8972              	.LVL757:
1588:src/keys.c    **** 	State2.cmplx = 0;
 8973              		.loc 1 1588 2 is_stmt 1 view .LVU2778
1589:src/keys.c    **** 	State2.dot = 0;
 8974              		.loc 1 1589 2 view .LVU2779
1590:src/keys.c    **** #ifdef DM42
 8975              		.loc 1 1590 2 view .LVU2780
1592:src/keys.c    **** #endif
 8976              		.loc 1 1592 2 view .LVU2781
 8977              	.LBB1027:
 8978              	.LBI1027:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 8979              		.loc 1 114 13 view .LVU2782
 8980              	.LBE1027:
 8981              	.LBE1036:
 8982              	.LBE1039:
 8983              	.LBE1398:
 8984              	.LBE1469:
 115:src/keys.c    **** }
 8985              		.loc 1 115 2 view .LVU2783
 8986              	.LBB1470:
 8987              	.LBB1399:
 8988              	.LBB1040:
 8989              	.LBB1037:
 8990              	.LBB1034:
 8991              	.LBB1028:
 8992              	.LBI1028:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 8993              		.loc 1 104 20 view .LVU2784
 8994              	.LBB1029:
 105:src/keys.c    **** 	State2.shifts = shift;
 8995              		.loc 1 105 2 view .LVU2785
 8996              	.LBB1030:
 8997              	.LBI1030:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 8998              		.loc 1 96 13 view .LVU2786
ARM GAS  /tmp/ccXySG1f.s 			page 268


 8999              	.LBB1031:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9000              		.loc 1 97 2 view .LVU2787
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9001              		.loc 1 97 18 is_stmt 0 view .LVU2788
 9002 08c4 FFF7FEFF 		bl	shift_down
 9003              	.LVL758:
  98:src/keys.c    **** }
 9004              		.loc 1 98 2 is_stmt 1 view .LVU2789
 9005              	.LBE1031:
 9006              	.LBE1030:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9007              		.loc 1 106 2 view .LVU2790
 9008              	.LBE1029:
 9009              	.LBE1028:
 9010              	.LBE1034:
1594:src/keys.c    **** 
 9011              		.loc 1 1594 2 is_stmt 0 view .LVU2791
 9012 08c8 292C     		cmp	r4, #41
 9013              	.LBB1035:
 9014              	.LBB1033:
 9015              	.LBB1032:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9016              		.loc 1 106 16 view .LVU2792
 9017 08ca 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 9018              		.loc 1 108 2 is_stmt 1 view .LVU2793
 9019              	.LVL759:
 108:src/keys.c    **** }
 9020              		.loc 1 108 2 is_stmt 0 view .LVU2794
 9021              	.LBE1032:
 9022              	.LBE1033:
 9023              	.LBE1035:
1594:src/keys.c    **** 
 9024              		.loc 1 1594 2 is_stmt 1 view .LVU2795
 9025 08ce 00F05284 		beq	.L856
 9026 08d2 15D8     		bhi	.L857
 9027 08d4 013C     		subs	r4, r4, #1
 9028              	.LVL760:
1594:src/keys.c    **** 
 9029              		.loc 1 1594 2 is_stmt 0 view .LVU2796
 9030 08d6 E3B2     		uxtb	r3, r4
 9031 08d8 022B     		cmp	r3, #2
 9032 08da 3FF603AF 		bhi	.L1309
1599:src/keys.c    **** 
 9033              		.loc 1 1599 3 is_stmt 1 view .LVU2797
1599:src/keys.c    **** 
 9034              		.loc 1 1599 54 is_stmt 0 view .LVU2798
 9035 08de 274B     		ldr	r3, .L1405+32
 9036 08e0 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 9037 08e4 03EB4404 		add	r4, r3, r4, lsl #1
 9038              	.LVL761:
1599:src/keys.c    **** 
 9039              		.loc 1 1599 27 view .LVU2799
 9040 08e8 B9F1000F 		cmp	r9, #0
1599:src/keys.c    **** 
 9041              		.loc 1 1599 54 view .LVU2800
ARM GAS  /tmp/ccXySG1f.s 			page 269


 9042 08ec 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1599:src/keys.c    **** 
 9043              		.loc 1 1599 27 view .LVU2801
 9044 08f0 14BF     		ite	ne
 9045 08f2 4FF4A063 		movne	r3, #1280
 9046 08f6 4FF40073 		moveq	r3, #512
1599:src/keys.c    **** 
 9047              		.loc 1 1599 37 view .LVU2802
 9048 08fa 1C43     		orrs	r4, r4, r3
 9049 08fc 2046     		mov	r0, r4
 9050 08fe 91E5     		b	.L862
 9051              	.LVL762:
 9052              	.L857:
1594:src/keys.c    **** 
 9053              		.loc 1 1594 2 view .LVU2803
 9054 0900 2D2C     		cmp	r4, #45
 9055 0902 7FF4EFAE 		bne	.L1309
1602:src/keys.c    **** 		goto stay;
 9056              		.loc 1 1602 3 is_stmt 1 view .LVU2804
 9057 0906 89F00109 		eor	r9, r9, #1
 9058              	.LVL763:
1603:src/keys.c    **** 
 9059              		.loc 1 1603 3 view .LVU2805
 9060              	.L863:
1618:src/keys.c    **** 		State2.cmplx = cmplx;
 9061              		.loc 1 1618 4 view .LVU2806
1619:src/keys.c    **** 		State2.dot = f;
 9062              		.loc 1 1619 3 view .LVU2807
1620:src/keys.c    **** 		break;
 9063              		.loc 1 1620 3 view .LVU2808
1619:src/keys.c    **** 		State2.dot = f;
 9064              		.loc 1 1619 16 is_stmt 0 view .LVU2809
 9065 090a 4FEA4902 		lsl	r2, r9, #1
 9066 090e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9067 0912 3368     		ldr	r3, [r6]
 9068 0914 42F02002 		orr	r2, r2, #32
 9069 0918 42EA8B12 		orr	r2, r2, fp, lsl #6
 9070 091c 02F06202 		and	r2, r2, #98
 9071 0920 21F06201 		bic	r1, r1, #98
 9072 0924 0A43     		orrs	r2, r2, r1
 9073 0926 88F81520 		strb	r2, [r8, #21]
1621:src/keys.c    **** 
 9074              		.loc 1 1621 3 is_stmt 1 view .LVU2810
1626:src/keys.c    **** }
 9075              		.loc 1 1626 9 is_stmt 0 view .LVU2811
 9076 092a 3324     		movs	r4, #51
 9077              	.LVL764:
1621:src/keys.c    **** 
 9078              		.loc 1 1621 3 view .LVU2812
 9079 092c FFF7C3BB 		b	.L801
 9080              	.LVL765:
 9081              	.L1323:
1621:src/keys.c    **** 
 9082              		.loc 1 1621 3 view .LVU2813
 9083              	.LBE1037:
 9084              	.LBE1040:
3255:src/keys.c    **** 		return STATE_IGNORE;
ARM GAS  /tmp/ccXySG1f.s 			page 270


 9085              		.loc 1 3255 3 is_stmt 1 view .LVU2814
3255:src/keys.c    **** 		return STATE_IGNORE;
 9086              		.loc 1 3255 15 is_stmt 0 view .LVU2815
 9087 0930 1D60     		str	r5, [r3]
3256:src/keys.c    **** 	}
 9088              		.loc 1 3256 3 is_stmt 1 view .LVU2816
 9089              	.LVL766:
3256:src/keys.c    **** 	}
 9090              		.loc 1 3256 3 is_stmt 0 view .LVU2817
 9091              	.LBE1399:
 9092              	.LBE1470:
3652:src/keys.c    **** #ifndef CONSOLE
 9093              		.loc 1 3652 3 is_stmt 1 view .LVU2818
 9094              	.LBB1471:
 9095              	.LBB1400:
3256:src/keys.c    **** 	}
 9096              		.loc 1 3256 10 is_stmt 0 view .LVU2819
 9097 0932 3224     		movs	r4, #50
 9098 0934 FFF7C2BB 		b	.L821
 9099              	.LVL767:
 9100              	.L1353:
 9101              	.LBB1041:
 9102              	.LBB996:
2343:src/keys.c    **** 	State2.cmplx = 0;
 9103              		.loc 1 2343 2 is_stmt 1 view .LVU2820
2344:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9104              		.loc 1 2344 15 is_stmt 0 view .LVU2821
 9105 0938 6BF34102 		bfi	r2, fp, #1, #1
2343:src/keys.c    **** 	State2.cmplx = 0;
 9106              		.loc 1 2343 14 view .LVU2822
 9107 093c 0720     		movs	r0, #7
2345:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9108              		.loc 1 2345 5 view .LVU2823
 9109 093e BCF1640F 		cmp	ip, #100
2344:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9110              		.loc 1 2344 15 view .LVU2824
 9111 0942 88F81520 		strb	r2, [r8, #21]
2343:src/keys.c    **** 	State2.cmplx = 0;
 9112              		.loc 1 2343 14 view .LVU2825
 9113 0946 88F80F00 		strb	r0, [r8, #15]
2344:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9114              		.loc 1 2344 2 is_stmt 1 view .LVU2826
2345:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9115              		.loc 1 2345 2 view .LVU2827
2345:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9116              		.loc 1 2345 5 is_stmt 0 view .LVU2828
 9117 094a 00F05384 		beq	.L1166
2341:src/keys.c    **** 
 9118              		.loc 1 2341 44 view .LVU2829
 9119 094e 4FF02D0A 		mov	r10, #45
 9120 0952 3CE7     		b	.L1124
 9121              	.LVL768:
 9122              	.L1164:
2341:src/keys.c    **** 
 9123              		.loc 1 2341 44 view .LVU2830
 9124              	.LBE996:
 9125              	.LBE1041:
ARM GAS  /tmp/ccXySG1f.s 			page 271


 9126              	.LBE1400:
 9127              	.LBE1471:
 9128              	.LBB1472:
 9129 0954 2C46     		mov	r4, r5
 9130              	.LVL769:
2341:src/keys.c    **** 
 9131              		.loc 1 2341 44 view .LVU2831
 9132 0956 FFF7CCBB 		b	.L1110
 9133              	.L1406:
 9134 095a 00BF     		.align	2
 9135              	.L1405:
 9136 095c 00000000 		.word	NonProgrammable
 9137 0960 00000000 		.word	OpCode
 9138 0964 00000000 		.word	OpCodeDisplayPending
 9139 0968 00000000 		.word	JustDisplayed
 9140 096c 00040800 		.word	525312
 9141 0970 00000000 		.word	.LANCHOR6
 9142 0974 00000000 		.word	.LANCHOR5
 9143 0978 00000000 		.word	main_ram
 9144 097c 00000000 		.word	.LANCHOR19
 9145 0980 00000000 		.word	StateWhileOn
 9146              	.LVL770:
 9147              	.L1329:
2341:src/keys.c    **** 
 9148              		.loc 1 2341 44 view .LVU2832
 9149              	.LBE1472:
 9150              	.LBB1473:
 9151              	.LBB1401:
3284:src/keys.c    **** 
 9152              		.loc 1 3284 3 is_stmt 1 view .LVU2833
 9153              	.LBB1042:
 9154              	.LBB1043:
2906:src/keys.c    **** 
 9155              		.loc 1 2906 12 is_stmt 0 view .LVU2834
 9156 0984 D64B     		ldr	r3, .L1407
 9157 0986 1B68     		ldr	r3, [r3]
2906:src/keys.c    **** 
 9158              		.loc 1 2906 31 view .LVU2835
 9159 0988 B3F9DE37 		ldrsh	r3, [r3, #2014]
 9160              	.LBE1043:
 9161              	.LBE1042:
3284:src/keys.c    **** 
 9162              		.loc 1 3284 10 view .LVU2836
 9163 098c E4B2     		uxtb	r4, r4
 9164              	.LVL771:
 9165              	.LBB1062:
 9166              	.LBI1042:
2904:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9167              		.loc 1 2904 12 is_stmt 1 view .LVU2837
 9168              	.LBB1054:
2905:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9169              		.loc 1 2905 2 view .LVU2838
2906:src/keys.c    **** 
 9170              		.loc 1 2906 2 view .LVU2839
2906:src/keys.c    **** 
 9171              		.loc 1 2906 31 is_stmt 0 view .LVU2840
 9172 098e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccXySG1f.s 			page 272


 9173 0990 B4BF     		ite	lt
 9174 0992 0B23     		movlt	r3, #11
 9175 0994 0A23     		movge	r3, #10
 9176              	.LVL772:
2908:src/keys.c    **** 		if (--n < -2)
 9177              		.loc 1 2908 2 is_stmt 1 view .LVU2841
2908:src/keys.c    **** 		if (--n < -2)
 9178              		.loc 1 2908 5 is_stmt 0 view .LVU2842
 9179 0996 122C     		cmp	r4, #18
 9180 0998 00F08D81 		beq	.L1364
2912:src/keys.c    **** 		if (++n > max)
 9181              		.loc 1 2912 7 is_stmt 1 view .LVU2843
2912:src/keys.c    **** 		if (++n > max)
 9182              		.loc 1 2912 10 is_stmt 0 view .LVU2844
 9183 099c 182C     		cmp	r4, #24
 9184 099e 00F0C681 		beq	.L1365
2916:src/keys.c    **** 		State2.status = 0;
 9185              		.loc 1 2916 7 is_stmt 1 view .LVU2845
2916:src/keys.c    **** 		State2.status = 0;
 9186              		.loc 1 2916 10 is_stmt 0 view .LVU2846
 9187 09a2 102C     		cmp	r4, #16
 9188 09a4 00F03084 		beq	.L1366
 9189              	.LBB1044:
2921:src/keys.c    **** 		if (nn <= 9)
 9190              		.loc 1 2921 3 is_stmt 1 view .LVU2847
 9191              	.LVL773:
 9192              	.LBB1045:
 9193              	.LBI1045:
 210:src/keys.c    **** {
 9194              		.loc 1 210 14 view .LVU2848
 9195              	.LBB1046:
 212:src/keys.c    ****     // K00 - K05
 9196              		.loc 1 212 3 view .LVU2849
 234:src/keys.c    **** }
 9197              		.loc 1 234 3 view .LVU2850
 9198              	.LBB1047:
 9199              	.LBI1047:
 131:src/keys.c    **** {
 9200              		.loc 1 131 12 view .LVU2851
 9201              	.LBB1048:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9202              		.loc 1 133 2 view .LVU2852
 143:src/keys.c    **** }
 9203              		.loc 1 143 2 view .LVU2853
 143:src/keys.c    **** }
 9204              		.loc 1 143 23 is_stmt 0 view .LVU2854
 9205 09a8 CE4A     		ldr	r2, .L1407+4
 9206              	.LBE1048:
 9207              	.LBE1047:
 234:src/keys.c    **** }
 9208              		.loc 1 234 28 view .LVU2855
 9209 09aa CF48     		ldr	r0, .L1407+8
 9210              	.LBB1050:
 9211              	.LBB1049:
 143:src/keys.c    **** }
 9212              		.loc 1 143 23 view .LVU2856
 9213 09ac 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 273


 9214 09ae 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 9215 09b0 02F07F02 		and	r2, r2, #127
 9216              	.LVL774:
 143:src/keys.c    **** }
 9217              		.loc 1 143 23 view .LVU2857
 9218              	.LBE1049:
 9219              	.LBE1050:
 9220              	.LBE1046:
 9221              	.LBE1045:
2922:src/keys.c    **** 			n = nn;
 9222              		.loc 1 2922 3 is_stmt 1 view .LVU2858
2922:src/keys.c    **** 			n = nn;
 9223              		.loc 1 2922 6 is_stmt 0 view .LVU2859
 9224 09b4 092A     		cmp	r2, #9
 9225 09b6 40F2D481 		bls	.L1132
2924:src/keys.c    **** 			n = n == max ? 10 : max;
 9226              		.loc 1 2924 11 view .LVU2860
 9227 09ba 702A     		cmp	r2, #112
 9228              	.LBE1044:
2905:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9229              		.loc 1 2905 6 view .LVU2861
 9230 09bc A1F10301 		sub	r1, r1, #3
 9231              	.LVL775:
 9232              	.LBB1051:
2924:src/keys.c    **** 			n = n == max ? 10 : max;
 9233              		.loc 1 2924 8 is_stmt 1 view .LVU2862
2924:src/keys.c    **** 			n = n == max ? 10 : max;
 9234              		.loc 1 2924 11 is_stmt 0 view .LVU2863
 9235 09c0 00F07985 		beq	.L1367
2926:src/keys.c    **** 			n = 10; 
 9236              		.loc 1 2926 8 is_stmt 1 view .LVU2864
 9237              	.LBE1051:
2905:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9238              		.loc 1 2905 6 is_stmt 0 view .LVU2865
 9239 09c4 7F2A     		cmp	r2, #127
 9240 09c6 0CBF     		ite	eq
 9241 09c8 0B46     		moveq	r3, r1
 9242              	.LVL776:
2905:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9243              		.loc 1 2905 6 view .LVU2866
 9244 09ca 0A23     		movne	r3, #10
 9245              	.LVL777:
 9246              	.L884:
2929:src/keys.c    **** 
 9247              		.loc 1 2929 2 is_stmt 1 view .LVU2867
2929:src/keys.c    **** 
 9248              		.loc 1 2929 20 is_stmt 0 view .LVU2868
 9249 09cc 0333     		adds	r3, r3, #3
 9250              	.LVL778:
2929:src/keys.c    **** 
 9251              		.loc 1 2929 16 view .LVU2869
 9252 09ce 88F80C30 		strb	r3, [r8, #12]
2931:src/keys.c    **** }
 9253              		.loc 1 2931 2 is_stmt 1 view .LVU2870
 9254              	.LBE1054:
 9255              	.LBE1062:
3284:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 274


 9256              		.loc 1 3284 10 is_stmt 0 view .LVU2871
 9257 09d2 3324     		movs	r4, #51
 9258              	.LVL779:
3284:src/keys.c    **** 
 9259              		.loc 1 3284 10 view .LVU2872
 9260 09d4 3368     		ldr	r3, [r6]
 9261              	.LVL780:
 9262              	.LBB1063:
 9263              	.LBB1055:
2931:src/keys.c    **** }
 9264              		.loc 1 2931 9 view .LVU2873
 9265 09d6 FFF76EBB 		b	.L801
 9266              	.LVL781:
 9267              	.L1333:
2931:src/keys.c    **** }
 9268              		.loc 1 2931 9 view .LVU2874
 9269              	.LBE1055:
 9270              	.LBE1063:
3307:src/keys.c    **** 
 9271              		.loc 1 3307 3 is_stmt 1 view .LVU2875
 9272              	.LBB1064:
 9273              	.LBB1065:
 9274              	.LBB1066:
 9275              	.LBB1067:
 9276              	.LBB1068:
 9277              	.LBB1069:
 9278              	.LBB1070:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9279              		.loc 1 97 18 is_stmt 0 view .LVU2876
 9280 09da FFF7FEFF 		bl	shift_down
 9281              	.LVL782:
 9282              	.LBE1070:
 9283              	.LBE1069:
 9284              	.LBE1068:
 9285              	.LBE1067:
 9286              	.LBE1066:
 9287              	.LBE1065:
 9288              	.LBE1064:
3307:src/keys.c    **** 
 9289              		.loc 1 3307 10 view .LVU2877
 9290 09de E4B2     		uxtb	r4, r4
 9291              	.LVL783:
 9292              	.LBB1091:
 9293              	.LBI1064:
1633:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 9294              		.loc 1 1633 12 is_stmt 1 view .LVU2878
 9295              	.LBB1087:
1634:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9296              		.loc 1 1634 2 view .LVU2879
1639:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9297              		.loc 1 1639 2 view .LVU2880
1643:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9298              		.loc 1 1643 2 view .LVU2881
 9299              	.LBB1079:
 9300              	.LBI1066:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9301              		.loc 1 114 13 view .LVU2882
ARM GAS  /tmp/ccXySG1f.s 			page 275


 9302              	.LBE1079:
 9303              	.LBE1087:
 9304              	.LBE1091:
 9305              	.LBE1401:
 9306              	.LBE1473:
 115:src/keys.c    **** }
 9307              		.loc 1 115 2 view .LVU2883
 9308              	.LBB1474:
 9309              	.LBB1402:
 9310              	.LBB1092:
 9311              	.LBB1088:
 9312              	.LBB1080:
 9313              	.LBB1076:
 9314              	.LBI1067:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9315              		.loc 1 104 20 view .LVU2884
 9316              	.LBB1073:
 105:src/keys.c    **** 	State2.shifts = shift;
 9317              		.loc 1 105 2 view .LVU2885
 9318              	.LBB1072:
 9319              	.LBI1069:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9320              		.loc 1 96 13 view .LVU2886
 9321              	.LBB1071:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9322              		.loc 1 97 2 view .LVU2887
  98:src/keys.c    **** }
 9323              		.loc 1 98 2 view .LVU2888
  98:src/keys.c    **** }
 9324              		.loc 1 98 52 is_stmt 0 view .LVU2889
 9325 09e0 8346     		mov	fp, r0
 9326              	.LVL784:
  98:src/keys.c    **** }
 9327              		.loc 1 98 52 view .LVU2890
 9328 09e2 08B9     		cbnz	r0, .L894
 9329 09e4 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9330              	.L894:
 9331              	.LVL785:
  98:src/keys.c    **** }
 9332              		.loc 1 98 52 view .LVU2891
 9333              	.LBE1071:
 9334              	.LBE1072:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9335              		.loc 1 106 2 is_stmt 1 view .LVU2892
 9336              	.LBE1073:
 9337              	.LBE1076:
 9338              	.LBE1080:
1646:src/keys.c    **** #ifdef DM42
 9339              		.loc 1 1646 15 is_stmt 0 view .LVU2893
 9340 09e8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9341              	.LBB1081:
 9342              	.LBB1077:
 9343              	.LBB1074:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9344              		.loc 1 106 16 view .LVU2894
 9345 09ec 0023     		movs	r3, #0
 9346              	.LBE1074:
ARM GAS  /tmp/ccXySG1f.s 			page 276


 9347              	.LBE1077:
 9348              	.LBE1081:
1646:src/keys.c    **** #ifdef DM42
 9349              		.loc 1 1646 15 view .LVU2895
 9350 09ee 63F38202 		bfi	r2, r3, #2, #1
1644:src/keys.c    **** 
 9351              		.loc 1 1644 23 view .LVU2896
 9352 09f2 ABF1010A 		sub	r10, fp, #1
1646:src/keys.c    **** #ifdef DM42
 9353              		.loc 1 1646 15 view .LVU2897
 9354 09f6 88F81520 		strb	r2, [r8, #21]
 9355              	.LBB1082:
 9356              	.LBB1078:
 9357              	.LBB1075:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9358              		.loc 1 106 16 view .LVU2898
 9359 09fa 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9360              		.loc 1 108 2 is_stmt 1 view .LVU2899
 9361              	.LVL786:
 108:src/keys.c    **** }
 9362              		.loc 1 108 2 is_stmt 0 view .LVU2900
 9363              	.LBE1075:
 9364              	.LBE1078:
 9365              	.LBE1082:
1644:src/keys.c    **** 
 9366              		.loc 1 1644 2 is_stmt 1 view .LVU2901
1644:src/keys.c    **** 
 9367              		.loc 1 1644 23 is_stmt 0 view .LVU2902
 9368 09fe BAFA8AFA 		clz	r10, r10
1648:src/keys.c    **** 	display_current_menu ();
 9369              		.loc 1 1648 2 view .LVU2903
 9370 0a02 FFF7FEFF 		bl	set_last_menu
 9371              	.LVL787:
1649:src/keys.c    **** #endif
 9372              		.loc 1 1649 2 view .LVU2904
 9373 0a06 FFF7FEFF 		bl	display_current_menu
 9374              	.LVL788:
1652:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9375              		.loc 1 1652 5 view .LVU2905
 9376 0a0a 2D2C     		cmp	r4, #45
1644:src/keys.c    **** 
 9377              		.loc 1 1644 23 view .LVU2906
 9378 0a0c 4FEA5A1A 		lsr	r10, r10, #5
 9379              	.LVL789:
1646:src/keys.c    **** #ifdef DM42
 9380              		.loc 1 1646 2 is_stmt 1 view .LVU2907
1648:src/keys.c    **** 	display_current_menu ();
 9381              		.loc 1 1648 2 view .LVU2908
1649:src/keys.c    **** #endif
 9382              		.loc 1 1649 2 view .LVU2909
1652:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9383              		.loc 1 1652 2 view .LVU2910
1652:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9384              		.loc 1 1652 5 is_stmt 0 view .LVU2911
 9385 0a10 00F05681 		beq	.L1368
1661:src/keys.c    **** 	
ARM GAS  /tmp/ccXySG1f.s 			page 277


 9386              		.loc 1 1661 2 is_stmt 1 view .LVU2912
1661:src/keys.c    **** 	
 9387              		.loc 1 1661 5 is_stmt 0 view .LVU2913
 9388 0a14 BBF1000F 		cmp	fp, #0
 9389 0a18 3FF464AE 		beq	.L1309
1663:src/keys.c    **** 		return op_map[c - K10][f];
 9390              		.loc 1 1663 2 is_stmt 1 view .LVU2914
1663:src/keys.c    **** 		return op_map[c - K10][f];
 9391              		.loc 1 1663 15 is_stmt 0 view .LVU2915
 9392 0a1c A31F     		subs	r3, r4, #6
1663:src/keys.c    **** 		return op_map[c - K10][f];
 9393              		.loc 1 1663 5 view .LVU2916
 9394 0a1e DAB2     		uxtb	r2, r3
 9395 0a20 022A     		cmp	r2, #2
 9396 0a22 40F29281 		bls	.L1369
1666:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9397              		.loc 1 1666 2 is_stmt 1 view .LVU2917
1666:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9398              		.loc 1 1666 15 is_stmt 0 view .LVU2918
 9399 0a26 0E3C     		subs	r4, r4, #14
 9400              	.LVL790:
1666:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9401              		.loc 1 1666 5 view .LVU2919
 9402 0a28 E3B2     		uxtb	r3, r4
 9403 0a2a 012B     		cmp	r3, #1
 9404 0a2c 3FF65AAE 		bhi	.L1309
1667:src/keys.c    **** 
 9405              		.loc 1 1667 3 is_stmt 1 view .LVU2920
 9406 0a30 AE4A     		ldr	r2, .L1407+12
 9407              	.LBB1083:
 9408              	.LBB1084:
 732:src/keys.c    **** }
 9409              		.loc 1 732 15 is_stmt 0 view .LVU2921
 9410 0a32 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 9411 0a36 3368     		ldr	r3, [r6]
 9412              	.LBE1084:
 9413              	.LBE1083:
1667:src/keys.c    **** 
 9414              		.loc 1 1667 3 view .LVU2922
 9415 0a38 02EB4402 		add	r2, r2, r4, lsl #1
1669:src/keys.c    **** }
 9416              		.loc 1 1669 9 view .LVU2923
 9417 0a3c 3324     		movs	r4, #51
 9418              	.LVL791:
1667:src/keys.c    **** 
 9419              		.loc 1 1667 3 view .LVU2924
 9420 0a3e 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9421              	.LVL792:
 9422              	.LBB1086:
 9423              	.LBI1083:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9424              		.loc 1 731 13 is_stmt 1 view .LVU2925
 9425              	.LBB1085:
 732:src/keys.c    **** }
 9426              		.loc 1 732 2 view .LVU2926
 732:src/keys.c    **** }
 9427              		.loc 1 732 15 is_stmt 0 view .LVU2927
ARM GAS  /tmp/ccXySG1f.s 			page 278


 9428 0a42 9142     		cmp	r1, r2
 9429 0a44 08BF     		it	eq
 9430 0a46 0022     		moveq	r2, #0
 9431              	.LVL793:
 732:src/keys.c    **** }
 9432              		.loc 1 732 15 view .LVU2928
 9433 0a48 88F81120 		strb	r2, [r8, #17]
 733:src/keys.c    **** 
 9434              		.loc 1 733 1 view .LVU2929
 9435 0a4c FFF733BB 		b	.L801
 9436              	.L896:
 733:src/keys.c    **** 
 9437              		.loc 1 733 1 view .LVU2930
 9438              	.LBE1085:
 9439              	.LBE1086:
1661:src/keys.c    **** 	
 9440              		.loc 1 1661 2 is_stmt 1 view .LVU2931
1661:src/keys.c    **** 	
 9441              		.loc 1 1661 5 is_stmt 0 view .LVU2932
 9442 0a50 BBF1000F 		cmp	fp, #0
 9443 0a54 7FF446AE 		bne	.L1309
 9444              	.LVL794:
 9445              	.L1307:
1661:src/keys.c    **** 	
 9446              		.loc 1 1661 5 view .LVU2933
 9447 0a58 3368     		ldr	r3, [r6]
 9448              	.LBE1088:
 9449              	.LBE1092:
 9450              	.LBE1402:
 9451              	.LBE1474:
3399:src/keys.c    ****   //print_debug(60,c);
 9452              		.loc 1 3399 7 view .LVU2934
 9453 0a5a 0025     		movs	r5, #0
 9454              	.LBB1475:
3579:src/keys.c    **** 	}
 9455              		.loc 1 3579 6 view .LVU2935
 9456 0a5c 3324     		movs	r4, #51
 9457 0a5e FFF72ABB 		b	.L801
 9458              	.LVL795:
 9459              	.L873:
3579:src/keys.c    **** 	}
 9460              		.loc 1 3579 6 view .LVU2936
 9461              	.LBE1475:
 9462              	.LBB1476:
 9463              	.LBB1403:
 9464              	.LBB1093:
 9465              	.LBB997:
2365:src/keys.c    **** 		// digit 2..9, -> or .
 9466              		.loc 1 2365 7 is_stmt 1 view .LVU2937
2365:src/keys.c    **** 		// digit 2..9, -> or .
 9467              		.loc 1 2365 10 is_stmt 0 view .LVU2938
 9468 0a62 BCF1090F 		cmp	ip, #9
 9469 0a66 40F29080 		bls	.L875
 9470              	.L867:
2365:src/keys.c    **** 		// digit 2..9, -> or .
 9471              		.loc 1 2365 19 view .LVU2939
 9472 0a6a 2C2C     		cmp	r4, #44
ARM GAS  /tmp/ccXySG1f.s 			page 279


 9473 0a6c 00F08D80 		beq	.L875
2365:src/keys.c    **** 		// digit 2..9, -> or .
 9474              		.loc 1 2365 35 view .LVU2940
 9475 0a70 262C     		cmp	r4, #38
 9476 0a72 00F08A80 		beq	.L875
2371:src/keys.c    **** 	case K11:					// tests vs register
 9477              		.loc 1 2371 2 is_stmt 1 view .LVU2941
 9478 0a76 0C2C     		cmp	r4, #12
 9479 0a78 00F05782 		beq	.L878
 9480 0a7c 102C     		cmp	r4, #16
 9481 0a7e 3FF431AE 		beq	.L1309
 9482 0a82 072C     		cmp	r4, #7
 9483 0a84 00F05182 		beq	.L878
 9484              	.L870:
2385:src/keys.c    **** 	State2.cmplx = cmpx;
 9485              		.loc 1 2385 2 view .LVU2942
2386:src/keys.c    **** 	return STATE_UNFINISHED;
 9486              		.loc 1 2386 15 is_stmt 0 view .LVU2943
 9487 0a88 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2385:src/keys.c    **** 	State2.cmplx = cmpx;
 9488              		.loc 1 2385 14 view .LVU2944
 9489 0a8c 88F80F30 		strb	r3, [r8, #15]
2386:src/keys.c    **** 	return STATE_UNFINISHED;
 9490              		.loc 1 2386 2 is_stmt 1 view .LVU2945
2386:src/keys.c    **** 	return STATE_UNFINISHED;
 9491              		.loc 1 2386 15 is_stmt 0 view .LVU2946
 9492 0a90 6BF34102 		bfi	r2, fp, #1, #1
 9493 0a94 3368     		ldr	r3, [r6]
 9494              	.LVL796:
2386:src/keys.c    **** 	return STATE_UNFINISHED;
 9495              		.loc 1 2386 15 view .LVU2947
 9496 0a96 88F81520 		strb	r2, [r8, #21]
2387:src/keys.c    **** }
 9497              		.loc 1 2387 2 is_stmt 1 view .LVU2948
2387:src/keys.c    **** }
 9498              		.loc 1 2387 9 is_stmt 0 view .LVU2949
 9499 0a9a 3324     		movs	r4, #51
 9500              	.LVL797:
2387:src/keys.c    **** }
 9501              		.loc 1 2387 9 view .LVU2950
 9502 0a9c FFF70BBB 		b	.L801
 9503              	.LVL798:
 9504              	.L1354:
2387:src/keys.c    **** }
 9505              		.loc 1 2387 9 view .LVU2951
 9506              	.LBE997:
 9507              	.LBE1093:
 9508              	.LBB1094:
 9509              	.LBB1015:
1705:src/keys.c    **** 	}
 9510              		.loc 1 1705 3 is_stmt 1 view .LVU2952
1705:src/keys.c    **** 	}
 9511              		.loc 1 1705 8 is_stmt 0 view .LVU2953
 9512 0aa0 FFF7FEFF 		bl	gtodot_digit
 9513              	.LVL799:
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9514              		.loc 1 1754 2 is_stmt 1 view .LVU2954
ARM GAS  /tmp/ccXySG1f.s 			page 280


1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9515              		.loc 1 1754 5 is_stmt 0 view .LVU2955
 9516 0aa4 0028     		cmp	r0, #0
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9517              		.loc 1 1754 5 view .LVU2956
 9518 0aa6 FFF61DAE 		blt	.L1309
 9519              	.L838:
1755:src/keys.c    **** fin:		set_pc(rawpc);
 9520              		.loc 1 1755 3 is_stmt 1 view .LVU2957
1755:src/keys.c    **** fin:		set_pc(rawpc);
 9521              		.loc 1 1755 11 is_stmt 0 view .LVU2958
 9522 0aaa FFF7FEFF 		bl	find_user_pc
 9523              	.LVL800:
1755:src/keys.c    **** fin:		set_pc(rawpc);
 9524              		.loc 1 1755 11 view .LVU2959
 9525 0aae E2E6     		b	.L847
 9526              	.LVL801:
 9527              	.L868:
1755:src/keys.c    **** fin:		set_pc(rawpc);
 9528              		.loc 1 1755 11 view .LVU2960
 9529              	.LBE1015:
 9530              	.LBE1094:
 9531              	.LBB1095:
 9532              	.LBB998:
2357:src/keys.c    **** 		// Special 0
 9533              		.loc 1 2357 7 is_stmt 1 view .LVU2961
2357:src/keys.c    **** 		// Special 0
 9534              		.loc 1 2357 10 is_stmt 0 view .LVU2962
 9535 0ab0 BCF1000F 		cmp	ip, #0
 9536 0ab4 40F07086 		bne	.L871
2359:src/keys.c    **** 	}
 9537              		.loc 1 2359 3 is_stmt 1 view .LVU2963
2359:src/keys.c    **** 	}
 9538              		.loc 1 2359 18 is_stmt 0 view .LVU2964
 9539 0ab8 BBF1000F 		cmp	fp, #0
 9540 0abc 14BF     		ite	ne
 9541 0abe 2524     		movne	r4, #37
 9542              	.LVL802:
2359:src/keys.c    **** 	}
 9543              		.loc 1 2359 18 view .LVU2965
 9544 0ac0 1724     		moveq	r4, #23
2359:src/keys.c    **** 	}
 9545              		.loc 1 2359 47 view .LVU2966
 9546 0ac2 1C44     		add	r4, r4, r3
 9547 0ac4 8CE4     		b	.L835
 9548              	.LVL803:
 9549              	.L1349:
2359:src/keys.c    **** 	}
 9550              		.loc 1 2359 47 view .LVU2967
 9551              	.LBE998:
 9552              	.LBE1095:
 9553              	.LBB1096:
 9554              	.LBB837:
 278:src/keys.c    **** 				case K53:
 9555              		.loc 1 278 4 is_stmt 1 view .LVU2968
 9556 0ac6 231F     		subs	r3, r4, #4
 9557 0ac8 1D2B     		cmp	r3, #29
ARM GAS  /tmp/ccXySG1f.s 			page 281


 9558 0aca 3FF6D8AB 		bhi	.L921
 9559 0ace 01A0     		adr	r0, .L905
 9560 0ad0 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 9561              		.p2align 2
 9562              	.L905:
 9563 0ad4 510B0000 		.word	.L908+1
 9564 0ad8 610B0000 		.word	.L907+1
 9565 0adc 7F020000 		.word	.L921+1
 9566 0ae0 7F020000 		.word	.L921+1
 9567 0ae4 7F020000 		.word	.L921+1
 9568 0ae8 7F020000 		.word	.L921+1
 9569 0aec 7F020000 		.word	.L921+1
 9570 0af0 7F020000 		.word	.L921+1
 9571 0af4 550B0000 		.word	.L906+1
 9572 0af8 7F020000 		.word	.L921+1
 9573 0afc 7F020000 		.word	.L921+1
 9574 0b00 7F020000 		.word	.L921+1
 9575 0b04 7F020000 		.word	.L921+1
 9576 0b08 7F020000 		.word	.L921+1
 9577 0b0c 7F020000 		.word	.L921+1
 9578 0b10 7F020000 		.word	.L921+1
 9579 0b14 7F020000 		.word	.L921+1
 9580 0b18 7F020000 		.word	.L921+1
 9581 0b1c 7F020000 		.word	.L921+1
 9582 0b20 7F020000 		.word	.L921+1
 9583 0b24 7F020000 		.word	.L921+1
 9584 0b28 7F020000 		.word	.L921+1
 9585 0b2c 7F020000 		.word	.L921+1
 9586 0b30 7F020000 		.word	.L921+1
 9587 0b34 7F020000 		.word	.L921+1
 9588 0b38 7F020000 		.word	.L921+1
 9589 0b3c 7F020000 		.word	.L921+1
 9590 0b40 7F020000 		.word	.L921+1
 9591 0b44 7F020000 		.word	.L921+1
 9592 0b48 4D0B0000 		.word	.L1136+1
 9593              		.p2align 1
 9594              	.L1136:
 280:src/keys.c    **** 				case K04:
 9595              		.loc 1 280 13 is_stmt 0 view .LVU2969
 9596 0b4c 0223     		movs	r3, #2
 9597 0b4e BBE5     		b	.L904
 9598              	.L908:
 277:src/keys.c    **** 			switch (c) {
 9599              		.loc 1 277 6 view .LVU2970
 9600 0b50 1223     		movs	r3, #18
 9601 0b52 B9E5     		b	.L904
 9602              	.L906:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9603              		.loc 1 286 6 is_stmt 1 view .LVU2971
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9604              		.loc 1 286 9 is_stmt 0 view .LVU2972
 9605 0b54 11F0060F 		tst	r1, #6
 9606 0b58 40F0CB85 		bne	.L1370
 289:src/keys.c    **** 				default:
 9607              		.loc 1 289 13 view .LVU2973
 9608 0b5c 1123     		movs	r3, #17
 9609 0b5e B3E5     		b	.L904
ARM GAS  /tmp/ccXySG1f.s 			page 282


 9610              	.L907:
 284:src/keys.c    **** 				case K20:
 9611              		.loc 1 284 6 is_stmt 1 view .LVU2974
 9612              	.LVL804:
 284:src/keys.c    **** 				case K20:
 9613              		.loc 1 284 6 is_stmt 0 view .LVU2975
 9614              	.LBE837:
 9615              	.LBE1096:
3315:src/keys.c    **** 		if (is_bad_cmdline())
 9616              		.loc 1 3315 2 is_stmt 1 view .LVU2976
 9617              	.LBB1097:
 9618              	.LBB838:
 284:src/keys.c    **** 				case K20:
 9619              		.loc 1 284 13 is_stmt 0 view .LVU2977
 9620 0b60 0923     		movs	r3, #9
 9621 0b62 B1E5     		b	.L904
 9622              	.LVL805:
 9623              	.L1377:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9624              		.loc 1 312 74 view .LVU2978
 9625 0b64 D8F81410 		ldr	r1, [r8, #20]
 9626 0b68 DFF894C1 		ldr	ip, .L1407+32
 9627 0b6c 11EA0C0F 		tst	r1, ip
 9628 0b70 3FF4AAAD 		beq	.L904
 315:src/keys.c    ****     /*
 9629              		.loc 1 315 3 is_stmt 1 view .LVU2979
 315:src/keys.c    ****     /*
 9630              		.loc 1 315 23 is_stmt 0 view .LVU2980
 9631 0b74 5E4B     		ldr	r3, .L1407+16
 315:src/keys.c    ****     /*
 9632              		.loc 1 315 6 view .LVU2981
 9633 0b76 1942     		tst	r1, r3
 9634 0b78 3FF468AB 		beq	.L1120
 9635              	.L914:
 9636              	.LBB830:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 9637              		.loc 1 384 5 is_stmt 1 view .LVU2982
 408:src/keys.c    **** 
 9638              		.loc 1 408 5 view .LVU2983
 413:src/keys.c    ****     col = smap[shift];
 9639              		.loc 1 413 5 view .LVU2984
 9640              	.LVL806:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9641              		.loc 1 414 5 view .LVU2985
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9642              		.loc 1 414 15 is_stmt 0 view .LVU2986
 9643 0b7c 5D49     		ldr	r1, .L1407+20
 413:src/keys.c    ****     col = smap[shift];
 9644              		.loc 1 413 8 view .LVU2987
 9645 0b7e 5E4B     		ldr	r3, .L1407+24
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9646              		.loc 1 414 9 view .LVU2988
 9647 0b80 11F80BC0 		ldrb	ip, [r1, fp]	@ zero_extendqisi2
 9648              	.LVL807:
 415:src/keys.c    ****   }
 9649              		.loc 1 415 5 is_stmt 1 view .LVU2989
 415:src/keys.c    ****   }
ARM GAS  /tmp/ccXySG1f.s 			page 283


 9650              		.loc 1 415 9 is_stmt 0 view .LVU2990
 9651 0b84 0821     		movs	r1, #8
 9652 0b86 FFF76EBB 		b	.L916
 9653              	.LVL808:
 9654              	.L875:
 415:src/keys.c    ****   }
 9655              		.loc 1 415 9 view .LVU2991
 9656              	.LBE830:
 9657              	.LBE838:
 9658              	.LBE1097:
 9659              	.LBB1098:
 9660              	.LBB999:
2367:src/keys.c    **** 		return process_arg(c);
 9661              		.loc 1 2367 3 is_stmt 1 view .LVU2992
 9662              	.LBB992:
 9663              	.LBI992:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 9664              		.loc 1 552 13 view .LVU2993
 9665              	.LBB993:
 553:src/keys.c    **** 		return;
 9666              		.loc 1 553 2 view .LVU2994
 553:src/keys.c    **** 		return;
 9667              		.loc 1 553 6 is_stmt 0 view .LVU2995
 9668 0b8a FFF7FEFF 		bl	is_bad_cmdline
 9669              	.LVL809:
 553:src/keys.c    **** 		return;
 9670              		.loc 1 553 5 view .LVU2996
 9671 0b8e 18B9     		cbnz	r0, .L877
 9672 0b90 5FFA8AF0 		uxtb	r0, r10
 9673 0b94 FFF7FEFF 		bl	init_arg.part.0
 9674              	.LVL810:
 9675              	.L877:
 553:src/keys.c    **** 		return;
 9676              		.loc 1 553 5 view .LVU2997
 9677              	.LBE993:
 9678              	.LBE992:
2368:src/keys.c    **** 	}
 9679              		.loc 1 2368 3 is_stmt 1 view .LVU2998
2368:src/keys.c    **** 	}
 9680              		.loc 1 2368 10 is_stmt 0 view .LVU2999
 9681 0b98 2046     		mov	r0, r4
 9682 0b9a FFF7FEFF 		bl	process_arg
 9683              	.LVL811:
 9684 0b9e 0446     		mov	r4, r0
 9685              	.LVL812:
2368:src/keys.c    **** 	}
 9686              		.loc 1 2368 10 view .LVU3000
 9687 0ba0 1EE4     		b	.L835
 9688              	.LVL813:
 9689              	.L1330:
2368:src/keys.c    **** 	}
 9690              		.loc 1 2368 10 view .LVU3001
 9691              	.LBE999:
 9692              	.LBE1098:
3290:src/keys.c    **** 		return STATE_UNFINISHED;
 9693              		.loc 1 3290 3 is_stmt 1 view .LVU3002
 9694              	.LBB1099:
ARM GAS  /tmp/ccXySG1f.s 			page 284


 9695              	.LBI1099:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9696              		.loc 1 121 13 view .LVU3003
 9697              	.LBB1100:
 122:src/keys.c    **** }
 9698              		.loc 1 122 2 view .LVU3004
 122:src/keys.c    **** }
 9699              		.loc 1 122 16 is_stmt 0 view .LVU3005
 9700 0ba2 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9701 0ba6 3368     		ldr	r3, [r6]
 9702 0ba8 013A     		subs	r2, r2, #1
 9703 0baa 18BF     		it	ne
 9704 0bac 0122     		movne	r2, #1
 9705 0bae 88F81020 		strb	r2, [r8, #16]
 9706              	.LVL814:
 122:src/keys.c    **** }
 9707              		.loc 1 122 16 view .LVU3006
 9708              	.LBE1100:
 9709              	.LBE1099:
3291:src/keys.c    **** 	}
 9710              		.loc 1 3291 3 is_stmt 1 view .LVU3007
3291:src/keys.c    **** 	}
 9711              		.loc 1 3291 10 is_stmt 0 view .LVU3008
 9712 0bb2 3324     		movs	r4, #51
 9713              	.LVL815:
3291:src/keys.c    **** 	}
 9714              		.loc 1 3291 10 view .LVU3009
 9715 0bb4 FFF77FBA 		b	.L801
 9716              	.LVL816:
 9717              	.L1331:
3294:src/keys.c    **** 		return STATE_UNFINISHED;
 9718              		.loc 1 3294 3 is_stmt 1 view .LVU3010
 9719              	.LBB1101:
 9720              	.LBI1101:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9721              		.loc 1 121 13 view .LVU3011
 9722              	.LBB1102:
 122:src/keys.c    **** }
 9723              		.loc 1 122 2 view .LVU3012
 122:src/keys.c    **** }
 9724              		.loc 1 122 16 is_stmt 0 view .LVU3013
 9725 0bb8 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9726 0bbc 3368     		ldr	r3, [r6]
 9727 0bbe 022A     		cmp	r2, #2
 9728 0bc0 18BF     		it	ne
 9729 0bc2 0221     		movne	r1, #2
 9730 0bc4 88F81010 		strb	r1, [r8, #16]
 9731              	.LVL817:
 122:src/keys.c    **** }
 9732              		.loc 1 122 16 view .LVU3014
 9733              	.LBE1102:
 9734              	.LBE1101:
3295:src/keys.c    **** 	}
 9735              		.loc 1 3295 3 is_stmt 1 view .LVU3015
3295:src/keys.c    **** 	}
 9736              		.loc 1 3295 10 is_stmt 0 view .LVU3016
 9737 0bc8 3324     		movs	r4, #51
ARM GAS  /tmp/ccXySG1f.s 			page 285


 9738              	.LVL818:
3295:src/keys.c    **** 	}
 9739              		.loc 1 3295 10 view .LVU3017
 9740 0bca FFF774BA 		b	.L801
 9741              	.LVL819:
 9742              	.L1337:
 9743              	.LBB1103:
 9744              	.LBB839:
 423:src/keys.c    ****       break;
 9745              		.loc 1 423 7 is_stmt 1 view .LVU3018
 423:src/keys.c    ****       break;
 9746              		.loc 1 423 11 is_stmt 0 view .LVU3019
 9747 0bce 6344     		add	r3, r3, ip
 9748              	.LVL820:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9749              		.loc 1 427 6 view .LVU3020
 9750 0bd0 1107     		lsls	r1, r2, #28
 423:src/keys.c    ****       break;
 9751              		.loc 1 423 11 view .LVU3021
 9752 0bd2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9753              	.LVL821:
 424:src/keys.c    ****     }
 9754              		.loc 1 424 7 is_stmt 1 view .LVU3022
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9755              		.loc 1 427 3 view .LVU3023
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9756              		.loc 1 427 6 is_stmt 0 view .LVU3024
 9757 0bd4 40F1C080 		bpl	.L1371
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9758              		.loc 1 427 20 view .LVU3025
 9759 0bd8 A3F10B02 		sub	r2, r3, #11
 9760 0bdc 042A     		cmp	r2, #4
 9761 0bde 7FF673AD 		bls	.L904
 9762              	.LVL822:
 9763              	.L927:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9764              		.loc 1 427 20 view .LVU3026
 9765              	.LBE839:
 9766              	.LBE1103:
3327:src/keys.c    **** 
 9767              		.loc 1 3327 3 is_stmt 1 view .LVU3027
 9768              	.LBB1104:
 9769              	.LBI1104:
2800:src/keys.c    **** 	enum shifts shift = reset_shift();
 9770              		.loc 1 2800 12 view .LVU3028
 9771              	.LBB1105:
2801:src/keys.c    **** 	unsigned int ch = 0;
 9772              		.loc 1 2801 2 view .LVU3029
 9773              	.LBB1106:
 9774              	.LBI1106:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9775              		.loc 1 114 13 view .LVU3030
 9776              	.LBE1106:
 9777              	.LBE1105:
 9778              	.LBE1104:
 9779              	.LBE1403:
 9780              	.LBE1476:
ARM GAS  /tmp/ccXySG1f.s 			page 286


 115:src/keys.c    **** }
 9781              		.loc 1 115 2 view .LVU3031
 9782              	.LBB1477:
 9783              	.LBB1404:
 9784              	.LBB1142:
 9785              	.LBB1134:
 9786              	.LBB1113:
 9787              	.LBB1107:
 9788              	.LBI1107:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9789              		.loc 1 104 20 view .LVU3032
 9790              	.LBB1108:
 105:src/keys.c    **** 	State2.shifts = shift;
 9791              		.loc 1 105 2 view .LVU3033
 9792              	.LBB1109:
 9793              	.LBI1109:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9794              		.loc 1 96 13 view .LVU3034
 9795              	.LBB1110:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9796              		.loc 1 97 2 view .LVU3035
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9797              		.loc 1 97 18 is_stmt 0 view .LVU3036
 9798 0be2 FFF7FEFF 		bl	shift_down
 9799              	.LVL823:
  98:src/keys.c    **** }
 9800              		.loc 1 98 2 is_stmt 1 view .LVU3037
  98:src/keys.c    **** }
 9801              		.loc 1 98 52 is_stmt 0 view .LVU3038
 9802 0be6 0146     		mov	r1, r0
 9803 0be8 08B9     		cbnz	r0, .L924
 9804 0bea 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9805              	.L924:
 9806              	.LVL824:
  98:src/keys.c    **** }
 9807              		.loc 1 98 52 view .LVU3039
 9808              	.LBE1110:
 9809              	.LBE1109:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9810              		.loc 1 106 2 is_stmt 1 view .LVU3040
 9811              	.LBE1108:
 9812              	.LBE1107:
 9813              	.LBE1113:
2805:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9814              		.loc 1 2805 5 is_stmt 0 view .LVU3041
 9815 0bee 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9816              	.LBB1114:
 9817              	.LBB1112:
 9818              	.LBB1111:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9819              		.loc 1 106 16 view .LVU3042
 9820 0bf2 0023     		movs	r3, #0
 9821 0bf4 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9822              		.loc 1 108 2 is_stmt 1 view .LVU3043
 9823              	.LVL825:
 108:src/keys.c    **** }
ARM GAS  /tmp/ccXySG1f.s 			page 287


 9824              		.loc 1 108 2 is_stmt 0 view .LVU3044
 9825              	.LBE1111:
 9826              	.LBE1112:
 9827              	.LBE1114:
2802:src/keys.c    **** 	unsigned int opcode;
 9828              		.loc 1 2802 2 is_stmt 1 view .LVU3045
2803:src/keys.c    **** 
 9829              		.loc 1 2803 2 view .LVU3046
2805:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9830              		.loc 1 2805 2 view .LVU3047
2805:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9831              		.loc 1 2805 5 is_stmt 0 view .LVU3048
 9832 0bf8 0028     		cmp	r0, #0
 9833 0bfa 40F0DC83 		bne	.L1372
2814:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 9834              		.loc 1 2814 2 is_stmt 1 view .LVU3049
 9835 0bfe 102C     		cmp	r4, #16
 9836 0c00 00F0A684 		beq	.L931
 9837 0c04 242C     		cmp	r4, #36
 9838 0c06 00F08C84 		beq	.L932
 9839 0c0a 0C2C     		cmp	r4, #12
 9840 0c0c 00F02684 		beq	.L1373
 9841              	.L933:
2847:src/keys.c    **** 	if (ch == 0)
 9842              		.loc 1 2847 2 view .LVU3050
 9843              	.LBB1115:
 9844              	.LBB1116:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9845              		.loc 1 485 6 is_stmt 0 view .LVU3051
 9846 0c10 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9847              	.LVL826:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9848              		.loc 1 485 6 view .LVU3052
 9849              	.LBE1116:
 9850              	.LBI1115:
 435:src/keys.c    **** {
 9851              		.loc 1 435 12 is_stmt 1 view .LVU3053
 9852              	.LBB1121:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9853              		.loc 1 437 2 view .LVU3054
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9854              		.loc 1 485 2 view .LVU3055
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9855              		.loc 1 485 5 is_stmt 0 view .LVU3056
 9856 0c14 D806     		lsls	r0, r3, #27
 9857 0c16 03D5     		bpl	.L937
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9858              		.loc 1 486 3 is_stmt 1 view .LVU3057
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9859              		.loc 1 486 6 is_stmt 0 view .LVU3058
 9860 0c18 0029     		cmp	r1, #0
 9861 0c1a 41F00E80 		bne	.L1374
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 9862              		.loc 1 487 10 view .LVU3059
 9863 0c1e 0421     		movs	r1, #4
 9864              	.LVL827:
 9865              	.L937:
ARM GAS  /tmp/ccXySG1f.s 			page 288


 491:src/keys.c    **** }
 9866              		.loc 1 491 2 is_stmt 1 view .LVU3060
 9867              	.LBB1117:
 9868              	.LBI1117:
 131:src/keys.c    **** {
 9869              		.loc 1 131 12 view .LVU3061
 9870              	.LBB1118:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9871              		.loc 1 133 2 view .LVU3062
 143:src/keys.c    **** }
 9872              		.loc 1 143 2 view .LVU3063
 143:src/keys.c    **** }
 9873              		.loc 1 143 23 is_stmt 0 view .LVU3064
 9874 0c20 304B     		ldr	r3, .L1407+4
 9875              	.LBE1118:
 9876              	.LBE1117:
 491:src/keys.c    **** }
 9877              		.loc 1 491 49 view .LVU3065
 9878 0c22 364A     		ldr	r2, .L1407+28
 9879              	.LBB1120:
 9880              	.LBB1119:
 143:src/keys.c    **** }
 9881              		.loc 1 143 23 view .LVU3066
 9882 0c24 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9883              	.LBE1119:
 9884              	.LBE1120:
 491:src/keys.c    **** }
 9885              		.loc 1 491 49 view .LVU3067
 9886 0c26 0620     		movs	r0, #6
 9887 0c28 00FB0323 		mla	r3, r0, r3, r2
 9888              	.LBE1121:
 9889              	.LBE1115:
2847:src/keys.c    **** 	if (ch == 0)
 9890              		.loc 1 2847 5 view .LVU3068
 9891 0c2c 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 9892              	.LVL828:
2848:src/keys.c    **** 		return STATE_UNFINISHED;
 9893              		.loc 1 2848 2 is_stmt 1 view .LVU3069
2848:src/keys.c    **** 		return STATE_UNFINISHED;
 9894              		.loc 1 2848 5 is_stmt 0 view .LVU3070
 9895 0c2e 002C     		cmp	r4, #0
 9896 0c30 3FF458AD 		beq	.L1309
 9897              	.L930:
2851:src/keys.c    **** 		State2.digval = ch;
 9898              		.loc 1 2851 2 is_stmt 1 view .LVU3071
2851:src/keys.c    **** 		State2.digval = ch;
 9899              		.loc 1 2851 12 is_stmt 0 view .LVU3072
 9900 0c34 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2851:src/keys.c    **** 		State2.digval = ch;
 9901              		.loc 1 2851 5 view .LVU3073
 9902 0c38 002B     		cmp	r3, #0
 9903 0c3a 00F0F684 		beq	.L1375
2855:src/keys.c    **** 		State2.digval2 = ch;
 9904              		.loc 1 2855 9 is_stmt 1 view .LVU3074
2855:src/keys.c    **** 		State2.digval2 = ch;
 9905              		.loc 1 2855 12 is_stmt 0 view .LVU3075
 9906 0c3e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccXySG1f.s 			page 289


 9907 0c40 01F05780 		beq	.L1376
2860:src/keys.c    **** 
 9908              		.loc 1 2860 2 is_stmt 1 view .LVU3076
 9909              	.LBB1123:
 9910              	.LBI1123:
2793:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 9911              		.loc 1 2793 13 view .LVU3077
 9912              	.LBB1124:
2795:src/keys.c    **** 	if (! State2.alphas )
 9913              		.loc 1 2795 2 view .LVU3078
2795:src/keys.c    **** 	if (! State2.alphas )
 9914              		.loc 1 2795 15 is_stmt 0 view .LVU3079
 9915 0c44 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2796:src/keys.c    **** 		State2.alphashift = 0;
 9916              		.loc 1 2796 6 view .LVU3080
 9917 0c48 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2795:src/keys.c    **** 	if (! State2.alphas )
 9918              		.loc 1 2795 15 view .LVU3081
 9919 0c4c 6FF3C302 		bfc	r2, #3, #1
 9920 0c50 88F81520 		strb	r2, [r8, #21]
2796:src/keys.c    **** 		State2.alphashift = 0;
 9921              		.loc 1 2796 2 is_stmt 1 view .LVU3082
2796:src/keys.c    **** 		State2.alphashift = 0;
 9922              		.loc 1 2796 5 is_stmt 0 view .LVU3083
 9923 0c54 13F00802 		ands	r2, r3, #8
2797:src/keys.c    **** }
 9924              		.loc 1 2797 3 is_stmt 1 view .LVU3084
2797:src/keys.c    **** }
 9925              		.loc 1 2797 21 is_stmt 0 view .LVU3085
 9926 0c58 04BF     		itt	eq
 9927 0c5a 62F30413 		bfieq	r3, r2, #4, #1
 9928 0c5e 88F81630 		strbeq	r3, [r8, #22]
 9929              	.LVL829:
 9930              	.L936:
2797:src/keys.c    **** }
 9931              		.loc 1 2797 21 view .LVU3086
 9932              	.LBE1124:
 9933              	.LBE1123:
2863:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9934              		.loc 1 2863 2 is_stmt 1 view .LVU3087
2865:src/keys.c    **** }
 9935              		.loc 1 2865 2 view .LVU3088
2863:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9936              		.loc 1 2863 21 is_stmt 0 view .LVU3089
 9937 0c62 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2864:src/keys.c    **** 	return opcode;
 9938              		.loc 1 2864 17 view .LVU3090
 9939 0c66 B8F80810 		ldrh	r1, [r8, #8]
2864:src/keys.c    **** 	return opcode;
 9940              		.loc 1 2864 34 view .LVU3091
 9941 0c6a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2863:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9942              		.loc 1 2863 29 view .LVU3092
 9943 0c6e 1B02     		lsls	r3, r3, #8
2863:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9944              		.loc 1 2863 18 view .LVU3093
 9945 0c70 03F57043 		add	r3, r3, #61440
ARM GAS  /tmp/ccXySG1f.s 			page 290


2864:src/keys.c    **** 	return opcode;
 9946              		.loc 1 2864 9 view .LVU3094
 9947 0c74 0B44     		add	r3, r3, r1
2864:src/keys.c    **** 	return opcode;
 9948              		.loc 1 2864 25 view .LVU3095
 9949 0c76 03EB0243 		add	r3, r3, r2, lsl #16
2863:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9950              		.loc 1 2863 9 view .LVU3096
 9951 0c7a 03EB0464 		add	r4, r3, r4, lsl #24
 9952              	.LVL830:
2865:src/keys.c    **** }
 9953              		.loc 1 2865 9 view .LVU3097
 9954 0c7e FFF7AFBB 		b	.L835
 9955              	.LVL831:
 9956              	.L1332:
2865:src/keys.c    **** }
 9957              		.loc 1 2865 9 view .LVU3098
 9958              	.LBE1134:
 9959              	.LBE1142:
3298:src/keys.c    **** 		State2.arrow = 0;
 9960              		.loc 1 3298 3 is_stmt 1 view .LVU3099
 9961              	.LBB1143:
 9962              	.LBI1143:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9963              		.loc 1 121 13 view .LVU3100
 9964              	.LBB1144:
 122:src/keys.c    **** }
 9965              		.loc 1 122 2 view .LVU3101
 122:src/keys.c    **** }
 9966              		.loc 1 122 16 is_stmt 0 view .LVU3102
 9967 0c82 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 9968              	.LVL832:
 122:src/keys.c    **** }
 9969              		.loc 1 122 16 view .LVU3103
 9970 0c86 3368     		ldr	r3, [r6]
 9971 0c88 032C     		cmp	r4, #3
 9972              	.LBE1144:
 9973              	.LBE1143:
3299:src/keys.c    **** 		return STATE_UNFINISHED;
 9974              		.loc 1 3299 16 view .LVU3104
 9975 0c8a 60F38202 		bfi	r2, r0, #2, #1
 9976              	.LBB1147:
 9977              	.LBB1145:
 122:src/keys.c    **** }
 9978              		.loc 1 122 16 view .LVU3105
 9979 0c8e 18BF     		it	ne
 9980 0c90 0321     		movne	r1, #3
 9981              	.LBE1145:
 9982              	.LBE1147:
3299:src/keys.c    **** 		return STATE_UNFINISHED;
 9983              		.loc 1 3299 16 view .LVU3106
 9984 0c92 88F81520 		strb	r2, [r8, #21]
 9985              	.LBB1148:
 9986              	.LBB1146:
 122:src/keys.c    **** }
 9987              		.loc 1 122 16 view .LVU3107
 9988 0c96 88F81010 		strb	r1, [r8, #16]
ARM GAS  /tmp/ccXySG1f.s 			page 291


 9989              	.LVL833:
 122:src/keys.c    **** }
 9990              		.loc 1 122 16 view .LVU3108
 9991              	.LBE1146:
 9992              	.LBE1148:
3299:src/keys.c    **** 		return STATE_UNFINISHED;
 9993              		.loc 1 3299 3 is_stmt 1 view .LVU3109
3300:src/keys.c    **** 	}
 9994              		.loc 1 3300 3 view .LVU3110
3300:src/keys.c    **** 	}
 9995              		.loc 1 3300 10 is_stmt 0 view .LVU3111
 9996 0c9a 3324     		movs	r4, #51
 9997 0c9c FFF70BBA 		b	.L801
 9998              	.LVL834:
 9999              	.L1335:
 10000              	.LBB1149:
 10001              	.LBB840:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10002              		.loc 1 312 16 view .LVU3112
 10003 0ca0 BBF1030F 		cmp	fp, #3
 10004 0ca4 3FF45EAF 		beq	.L1377
 315:src/keys.c    ****     /*
 10005              		.loc 1 315 3 is_stmt 1 view .LVU3113
 315:src/keys.c    ****     /*
 10006              		.loc 1 315 23 is_stmt 0 view .LVU3114
 10007 0ca8 1149     		ldr	r1, .L1407+16
 10008 0caa D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 10009              		.loc 1 315 6 view .LVU3115
 10010 0cae 1942     		tst	r1, r3
 10011 0cb0 3FF4E5AA 		beq	.L921
 10012 0cb4 62E7     		b	.L914
 10013              	.LVL835:
 10014              	.L1364:
 315:src/keys.c    ****     /*
 10015              		.loc 1 315 6 view .LVU3116
 10016              	.LBE840:
 10017              	.LBE1149:
 10018              	.LBB1150:
 10019              	.LBB1056:
2909:src/keys.c    **** 			n = max;
 10020              		.loc 1 2909 3 is_stmt 1 view .LVU3117
2909:src/keys.c    **** 			n = max;
 10021              		.loc 1 2909 6 is_stmt 0 view .LVU3118
 10022 0cb6 0A1F     		subs	r2, r1, #4
 10023              	.LVL836:
2909:src/keys.c    **** 			n = max;
 10024              		.loc 1 2909 6 view .LVU3119
 10025 0cb8 0129     		cmp	r1, #1
 10026 0cba 18BF     		it	ne
 10027 0cbc 1346     		movne	r3, r2
 10028              	.LVL837:
2909:src/keys.c    **** 			n = max;
 10029              		.loc 1 2909 6 view .LVU3120
 10030 0cbe 85E6     		b	.L884
 10031              	.LVL838:
 10032              	.L1368:
ARM GAS  /tmp/ccXySG1f.s 			page 292


2909:src/keys.c    **** 			n = max;
 10033              		.loc 1 2909 6 view .LVU3121
 10034              	.LBE1056:
 10035              	.LBE1150:
 10036              	.LBB1151:
 10037              	.LBB1089:
1652:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10038              		.loc 1 1652 19 view .LVU3122
 10039 0cc0 074B     		ldr	r3, .L1407
 10040 0cc2 1B68     		ldr	r3, [r3]
 10041 0cc4 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 10042 0cc8 5C06     		lsls	r4, r3, #25
 10043              	.LVL839:
1652:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10044              		.loc 1 1652 19 view .LVU3123
 10045 0cca 7FF5C1AE 		bpl	.L896
1653:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10046              		.loc 1 1653 4 is_stmt 1 view .LVU3124
1653:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10047              		.loc 1 1653 7 is_stmt 0 view .LVU3125
 10048 0cce 03F00103 		and	r3, r3, #1
 10049 0cd2 03F2C114 		addw	r4, r3, #449
 10050 0cd6 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 10051 0cda 2046     		mov	r0, r4
 10052 0cdc FFF7A2BB 		b	.L862
 10053              	.L1408:
 10054              		.align	2
 10055              	.L1407:
 10056 0ce0 00000000 		.word	main_ram
 10057 0ce4 00000000 		.word	.LANCHOR6
 10058 0ce8 00000000 		.word	.LANCHOR5
 10059 0cec 00000000 		.word	.LANCHOR21
 10060 0cf0 00080800 		.word	526336
 10061 0cf4 00000000 		.word	.LANCHOR22
 10062 0cf8 00000000 		.word	.LANCHOR16
 10063 0cfc 00000000 		.word	.LANCHOR15
 10064 0d00 000A4000 		.word	4196864
 10065              	.LVL840:
 10066              	.L1355:
1653:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10067              		.loc 1 1653 7 view .LVU3126
 10068              	.LBE1089:
 10069              	.LBE1151:
 10070              	.LBB1152:
 10071              	.LBB1016:
1708:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10072              		.loc 1 1708 44 is_stmt 1 view .LVU3127
1708:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10073              		.loc 1 1708 52 is_stmt 0 view .LVU3128
 10074 0d04 0120     		movs	r0, #1
 10075 0d06 FFF7FEFF 		bl	gtodot_digit
 10076              	.LVL841:
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10077              		.loc 1 1754 2 is_stmt 1 view .LVU3129
 10078              	.LBE1016:
 10079              	.LBE1152:
3275:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 293


 10080              		.loc 1 3275 10 is_stmt 0 view .LVU3130
 10081 0d0a 3324     		movs	r4, #51
 10082              	.LVL842:
3275:src/keys.c    **** 
 10083              		.loc 1 3275 10 view .LVU3131
 10084 0d0c 3368     		ldr	r3, [r6]
 10085 0d0e FFF7D2B9 		b	.L801
 10086              	.LVL843:
 10087              	.L869:
 10088              	.LBB1153:
 10089              	.LBB1000:
2355:src/keys.c    **** 	}
 10090              		.loc 1 2355 3 is_stmt 1 view .LVU3132
2355:src/keys.c    **** 	}
 10091              		.loc 1 2355 10 is_stmt 0 view .LVU3133
 10092 0d12 0AF12000 		add	r0, r10, #32
 10093 0d16 4CEA0020 		orr	r0, ip, r0, lsl #8
 10094 0d1a 0446     		mov	r4, r0
 10095              	.LVL844:
2355:src/keys.c    **** 	}
 10096              		.loc 1 2355 10 view .LVU3134
 10097 0d1c FFF782BB 		b	.L862
 10098              	.LVL845:
 10099              	.L1356:
2355:src/keys.c    **** 	}
 10100              		.loc 1 2355 10 view .LVU3135
 10101              	.LBE1000:
 10102              	.LBE1153:
 10103              	.LBB1154:
 10104              	.LBB1017:
1709:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10105              		.loc 1 1709 44 is_stmt 1 view .LVU3136
1709:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10106              		.loc 1 1709 52 is_stmt 0 view .LVU3137
 10107 0d20 0220     		movs	r0, #2
 10108 0d22 FFF7FEFF 		bl	gtodot_digit
 10109              	.LVL846:
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10110              		.loc 1 1754 2 is_stmt 1 view .LVU3138
 10111              	.LBE1017:
 10112              	.LBE1154:
3275:src/keys.c    **** 
 10113              		.loc 1 3275 10 is_stmt 0 view .LVU3139
 10114 0d26 3324     		movs	r4, #51
 10115              	.LVL847:
3275:src/keys.c    **** 
 10116              		.loc 1 3275 10 view .LVU3140
 10117 0d28 3368     		ldr	r3, [r6]
 10118 0d2a FFF7C4B9 		b	.L801
 10119              	.LVL848:
 10120              	.L1365:
 10121              	.LBB1155:
 10122              	.LBB1057:
2913:src/keys.c    **** 			n = -2;
 10123              		.loc 1 2913 3 is_stmt 1 view .LVU3141
2913:src/keys.c    **** 			n = -2;
 10124              		.loc 1 2913 6 is_stmt 0 view .LVU3142
ARM GAS  /tmp/ccXySG1f.s 			page 294


 10125 0d2e 0239     		subs	r1, r1, #2
 10126              	.LVL849:
2914:src/keys.c    **** 	}
 10127              		.loc 1 2914 6 view .LVU3143
 10128 0d30 9942     		cmp	r1, r3
 10129 0d32 D4BF     		ite	le
 10130 0d34 0B46     		movle	r3, r1
 10131              	.LVL850:
2914:src/keys.c    **** 	}
 10132              		.loc 1 2914 6 view .LVU3144
 10133 0d36 6FF00103 		mvngt	r3, #1
 10134 0d3a 47E6     		b	.L884
 10135              	.LVL851:
 10136              	.L1357:
2914:src/keys.c    **** 	}
 10137              		.loc 1 2914 6 view .LVU3145
 10138              	.LBE1057:
 10139              	.LBE1155:
 10140              	.LBB1156:
 10141              	.LBB1018:
1710:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10142              		.loc 1 1710 44 is_stmt 1 view .LVU3146
1710:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10143              		.loc 1 1710 52 is_stmt 0 view .LVU3147
 10144 0d3c 0320     		movs	r0, #3
 10145 0d3e FFF7FEFF 		bl	gtodot_digit
 10146              	.LVL852:
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10147              		.loc 1 1754 2 is_stmt 1 view .LVU3148
 10148              	.LBE1018:
 10149              	.LBE1156:
3275:src/keys.c    **** 
 10150              		.loc 1 3275 10 is_stmt 0 view .LVU3149
 10151 0d42 3324     		movs	r4, #51
 10152              	.LVL853:
3275:src/keys.c    **** 
 10153              		.loc 1 3275 10 view .LVU3150
 10154 0d44 3368     		ldr	r3, [r6]
 10155 0d46 FFF7B6B9 		b	.L801
 10156              	.LVL854:
 10157              	.L1369:
 10158              	.LBB1157:
 10159              	.LBB1090:
1664:src/keys.c    **** 
 10160              		.loc 1 1664 3 is_stmt 1 view .LVU3151
1664:src/keys.c    **** 
 10161              		.loc 1 1664 25 is_stmt 0 view .LVU3152
 10162 0d4a E24A     		ldr	r2, .L1409
 10163 0d4c 0AEB4303 		add	r3, r10, r3, lsl #1
 10164 0d50 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10165              	.LVL855:
1664:src/keys.c    **** 
 10166              		.loc 1 1664 25 view .LVU3153
 10167 0d54 FFF744BB 		b	.L835
 10168              	.LVL856:
 10169              	.L1371:
1664:src/keys.c    **** 
ARM GAS  /tmp/ccXySG1f.s 			page 295


 10170              		.loc 1 1664 25 view .LVU3154
 10171              	.LBE1090:
 10172              	.LBE1157:
3315:src/keys.c    **** 		if (is_bad_cmdline())
 10173              		.loc 1 3315 2 is_stmt 1 view .LVU3155
3315:src/keys.c    **** 		if (is_bad_cmdline())
 10174              		.loc 1 3315 5 is_stmt 0 view .LVU3156
 10175 0d58 002B     		cmp	r3, #0
 10176 0d5a 7FF4B5AC 		bne	.L904
 10177 0d5e FFF791BA 		b	.L925
 10178              	.LVL857:
 10179              	.L1132:
 10180              	.LBB1158:
 10181              	.LBB1058:
 10182              	.LBB1052:
2921:src/keys.c    **** 		if (nn <= 9)
 10183              		.loc 1 2921 7 view .LVU3157
 10184 0d62 1346     		mov	r3, r2
 10185              	.LVL858:
2921:src/keys.c    **** 		if (nn <= 9)
 10186              		.loc 1 2921 7 view .LVU3158
 10187 0d64 32E6     		b	.L884
 10188              	.LVL859:
 10189              	.L1339:
2921:src/keys.c    **** 		if (nn <= 9)
 10190              		.loc 1 2921 7 view .LVU3159
 10191              	.LBE1052:
 10192              	.LBE1058:
 10193              	.LBE1158:
3330:src/keys.c    **** 
 10194              		.loc 1 3330 3 is_stmt 1 view .LVU3160
 10195              	.LBB1159:
 10196              	.LBI1159:
2983:src/keys.c    **** 	unsigned int pc = State2.digval;
 10197              		.loc 1 2983 12 view .LVU3161
 10198              	.LBB1160:
2984:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10199              		.loc 1 2984 2 view .LVU3162
2986:src/keys.c    **** 	const int opcode = getprog(pc);
 10200              		.loc 1 2986 27 is_stmt 0 view .LVU3163
 10201 0d66 262C     		cmp	r4, #38
2984:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10202              		.loc 1 2984 15 view .LVU3164
 10203 0d68 B8F808A0 		ldrh	r10, [r8, #8]
 10204              	.LVL860:
2985:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10205              		.loc 1 2985 2 is_stmt 1 view .LVU3165
2986:src/keys.c    **** 	const int opcode = getprog(pc);
 10206              		.loc 1 2986 27 is_stmt 0 view .LVU3166
 10207 0d6c 00F05284 		beq	.L1146
 10208              	.LVL861:
 10209              	.LBB1161:
 10210              	.LBI1161:
 210:src/keys.c    **** {
 10211              		.loc 1 210 14 is_stmt 1 view .LVU3167
 10212              	.LBB1162:
 212:src/keys.c    ****     // K00 - K05
ARM GAS  /tmp/ccXySG1f.s 			page 296


 10213              		.loc 1 212 3 view .LVU3168
 234:src/keys.c    **** }
 10214              		.loc 1 234 3 view .LVU3169
 10215              	.LBB1163:
 10216              	.LBI1163:
 131:src/keys.c    **** {
 10217              		.loc 1 131 12 view .LVU3170
 10218              	.LBB1164:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10219              		.loc 1 133 2 view .LVU3171
 143:src/keys.c    **** }
 10220              		.loc 1 143 2 view .LVU3172
 143:src/keys.c    **** }
 10221              		.loc 1 143 23 is_stmt 0 view .LVU3173
 10222 0d70 D94B     		ldr	r3, .L1409+4
 10223              	.LBE1164:
 10224              	.LBE1163:
 234:src/keys.c    **** }
 10225              		.loc 1 234 28 view .LVU3174
 10226 0d72 DA4A     		ldr	r2, .L1409+8
 10227              	.LBB1166:
 10228              	.LBB1165:
 143:src/keys.c    **** }
 10229              		.loc 1 143 23 view .LVU3175
 10230 0d74 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10231              	.LBE1165:
 10232              	.LBE1166:
 234:src/keys.c    **** }
 10233              		.loc 1 234 10 view .LVU3176
 10234 0d76 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10235              	.LVL862:
 234:src/keys.c    **** }
 10236              		.loc 1 234 10 view .LVU3177
 10237              	.LBE1162:
 10238              	.LBE1161:
2986:src/keys.c    **** 	const int opcode = getprog(pc);
 10239              		.loc 1 2986 27 view .LVU3178
 10240 0d7a 2BF0800B 		bic	fp, fp, #128
 10241              	.L945:
 10242              	.LVL863:
2987:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10243              		.loc 1 2987 2 is_stmt 1 view .LVU3179
2987:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10244              		.loc 1 2987 21 is_stmt 0 view .LVU3180
 10245 0d7e 5046     		mov	r0, r10
 10246 0d80 FFF7FEFF 		bl	getprog
 10247              	.LVL864:
2988:src/keys.c    **** 	const int direct = State2.runmode;
 10248              		.loc 1 2988 2 is_stmt 1 view .LVU3181
2988:src/keys.c    **** 	const int direct = State2.runmode;
 10249              		.loc 1 2988 20 is_stmt 0 view .LVU3182
 10250 0d84 00F47040 		and	r0, r0, #61440
 10251              	.LVL865:
2988:src/keys.c    **** 	const int direct = State2.runmode;
 10252              		.loc 1 2988 63 view .LVU3183
 10253 0d88 B0F5704F 		cmp	r0, #61440
 10254 0d8c 00F04684 		beq	.L1378
ARM GAS  /tmp/ccXySG1f.s 			page 297


 10255 0d90 0022     		movs	r2, #0
 10256              	.L946:
 10257              	.LVL866:
2989:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10258              		.loc 1 2989 2 is_stmt 1 view .LVU3184
2989:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10259              		.loc 1 2989 27 is_stmt 0 view .LVU3185
 10260 0d92 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10261 0d96 0192     		str	r2, [sp, #4]
 10262              	.LVL867:
2989:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10263              		.loc 1 2989 27 view .LVU3186
 10264 0d98 C3F38013 		ubfx	r3, r3, #6, #1
 10265 0d9c 0093     		str	r3, [sp]
 10266              	.LVL868:
2990:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10267              		.loc 1 2990 2 is_stmt 1 view .LVU3187
 10268              	.LBB1167:
 10269              	.LBI1167:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10270              		.loc 1 114 13 view .LVU3188
 10271              	.LBE1167:
 10272              	.LBE1160:
 10273              	.LBE1159:
 10274              	.LBE1404:
 10275              	.LBE1477:
 115:src/keys.c    **** }
 10276              		.loc 1 115 2 view .LVU3189
 10277              	.LBB1478:
 10278              	.LBB1405:
 10279              	.LBB1193:
 10280              	.LBB1186:
 10281              	.LBB1174:
 10282              	.LBB1168:
 10283              	.LBI1168:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10284              		.loc 1 104 20 view .LVU3190
 10285              	.LBB1169:
 105:src/keys.c    **** 	State2.shifts = shift;
 10286              		.loc 1 105 2 view .LVU3191
 10287              	.LBB1170:
 10288              	.LBI1170:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10289              		.loc 1 96 13 view .LVU3192
 10290              	.LBB1171:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10291              		.loc 1 97 2 view .LVU3193
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10292              		.loc 1 97 18 is_stmt 0 view .LVU3194
 10293 0d9e FFF7FEFF 		bl	shift_down
 10294              	.LVL869:
  98:src/keys.c    **** }
 10295              		.loc 1 98 2 is_stmt 1 view .LVU3195
  98:src/keys.c    **** }
 10296              		.loc 1 98 52 is_stmt 0 view .LVU3196
 10297 0da2 019A     		ldr	r2, [sp, #4]
 10298 0da4 0346     		mov	r3, r0
ARM GAS  /tmp/ccXySG1f.s 			page 298


 10299 0da6 08B9     		cbnz	r0, .L947
 10300 0da8 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10301              	.L947:
 10302              	.LVL870:
  98:src/keys.c    **** }
 10303              		.loc 1 98 52 view .LVU3197
 10304              	.LBE1171:
 10305              	.LBE1170:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10306              		.loc 1 106 2 is_stmt 1 view .LVU3198
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10307              		.loc 1 106 16 is_stmt 0 view .LVU3199
 10308 0dac 0021     		movs	r1, #0
 10309              	.LBE1169:
 10310              	.LBE1168:
 10311              	.LBE1174:
2993:src/keys.c    **** 		// Digits take you to that segment
 10312              		.loc 1 2993 5 view .LVU3200
 10313 0dae BBF1020F 		cmp	fp, #2
 10314              	.LBB1175:
 10315              	.LBB1173:
 10316              	.LBB1172:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10317              		.loc 1 106 16 view .LVU3201
 10318 0db2 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10319              		.loc 1 108 2 is_stmt 1 view .LVU3202
 10320              	.LVL871:
 108:src/keys.c    **** }
 10321              		.loc 1 108 2 is_stmt 0 view .LVU3203
 10322              	.LBE1172:
 10323              	.LBE1173:
 10324              	.LBE1175:
2991:src/keys.c    **** 
 10325              		.loc 1 2991 2 is_stmt 1 view .LVU3204
2993:src/keys.c    **** 		// Digits take you to that segment
 10326              		.loc 1 2993 2 view .LVU3205
2993:src/keys.c    **** 		// Digits take you to that segment
 10327              		.loc 1 2993 5 is_stmt 0 view .LVU3206
 10328 0db6 40F28B84 		bls	.L1379
3002:src/keys.c    **** 
 10329              		.loc 1 3002 2 is_stmt 1 view .LVU3207
3002:src/keys.c    **** 
 10330              		.loc 1 3002 12 is_stmt 0 view .LVU3208
 10331 0dba 44EA0323 		orr	r3, r4, r3, lsl #8
 10332              	.LVL872:
3002:src/keys.c    **** 
 10333              		.loc 1 3002 2 view .LVU3209
 10334 0dbe 272B     		cmp	r3, #39
 10335 0dc0 00F3C280 		bgt	.L950
 10336 0dc4 042B     		cmp	r3, #4
 10337 0dc6 7FF78DAC 		ble	.L1309
 10338 0dca 053B     		subs	r3, r3, #5
 10339 0dcc 222B     		cmp	r3, #34
 10340 0dce 3FF689AC 		bhi	.L1309
 10341 0dd2 01A1     		adr	r1, .L959
 10342 0dd4 51F823F0 		ldr	pc, [r1, r3, lsl #2]
ARM GAS  /tmp/ccXySG1f.s 			page 299


 10343              		.p2align 2
 10344              	.L959:
 10345 0dd8 F10E0000 		.word	.L964+1
 10346 0ddc E30E0000 		.word	.L963+1
 10347 0de0 E30E0000 		.word	.L963+1
 10348 0de4 E5060000 		.word	.L1309+1
 10349 0de8 E5060000 		.word	.L1309+1
 10350 0dec E5060000 		.word	.L1309+1
 10351 0df0 E5060000 		.word	.L1309+1
 10352 0df4 650E0000 		.word	.L1149+1
 10353 0df8 E5060000 		.word	.L1309+1
 10354 0dfc E5060000 		.word	.L1309+1
 10355 0e00 E5060000 		.word	.L1309+1
 10356 0e04 110F0000 		.word	.L962+1
 10357 0e08 E5060000 		.word	.L1309+1
 10358 0e0c FD0E0000 		.word	.L961+1
 10359 0e10 E5060000 		.word	.L1309+1
 10360 0e14 E5060000 		.word	.L1309+1
 10361 0e18 E5060000 		.word	.L1309+1
 10362 0e1c E5060000 		.word	.L1309+1
 10363 0e20 E5060000 		.word	.L1309+1
 10364 0e24 A10E0000 		.word	.L960+1
 10365 0e28 E5060000 		.word	.L1309+1
 10366 0e2c E5060000 		.word	.L1309+1
 10367 0e30 E5060000 		.word	.L1309+1
 10368 0e34 E5060000 		.word	.L1309+1
 10369 0e38 E5060000 		.word	.L1309+1
 10370 0e3c E5060000 		.word	.L1309+1
 10371 0e40 E5060000 		.word	.L1309+1
 10372 0e44 E5060000 		.word	.L1309+1
 10373 0e48 E5060000 		.word	.L1309+1
 10374 0e4c E5060000 		.word	.L1309+1
 10375 0e50 E5060000 		.word	.L1309+1
 10376 0e54 E5060000 		.word	.L1309+1
 10377 0e58 E5060000 		.word	.L1309+1
 10378 0e5c E5060000 		.word	.L1309+1
 10379 0e60 B70E0000 		.word	.L958+1
 10380              		.p2align 1
 10381              	.L1149:
2991:src/keys.c    **** 
 10382              		.loc 1 2991 6 view .LVU3210
 10383 0e64 3324     		movs	r4, #51
 10384              	.LVL873:
 10385              	.L956:
3024:src/keys.c    **** 		break;
 10386              		.loc 1 3024 3 is_stmt 1 view .LVU3211
 10387 0e66 5046     		mov	r0, r10
 10388 0e68 FFF7FEFF 		bl	set_pc
 10389              	.LVL874:
3025:src/keys.c    **** 
 10390              		.loc 1 3025 3 view .LVU3212
 10391              	.L968:
3078:src/keys.c    **** 	State2.labellist = 0;
 10392              		.loc 1 3078 2 view .LVU3213
3079:src/keys.c    **** 	return check_confirm(op);
 10393              		.loc 1 3079 19 is_stmt 0 view .LVU3214
 10394 0e6c 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 300


3078:src/keys.c    **** 	State2.labellist = 0;
 10395              		.loc 1 3078 16 view .LVU3215
 10396 0e70 0022     		movs	r2, #0
 10397              	.LBB1176:
 10398              	.LBB1177:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10399              		.loc 1 705 5 view .LVU3216
 10400 0e72 C4F30723 		ubfx	r3, r4, #8, #8
 10401              	.LBE1177:
 10402              	.LBE1176:
3079:src/keys.c    **** 	return check_confirm(op);
 10403              		.loc 1 3079 19 view .LVU3217
 10404 0e76 62F38201 		bfi	r1, r2, #2, #1
 10405              	.LBB1182:
 10406              	.LBB1178:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10407              		.loc 1 705 5 view .LVU3218
 10408 0e7a 012B     		cmp	r3, #1
 10409              	.LBE1178:
 10410              	.LBE1182:
3079:src/keys.c    **** 	return check_confirm(op);
 10411              		.loc 1 3079 19 view .LVU3219
 10412 0e7c 88F81710 		strb	r1, [r8, #23]
3078:src/keys.c    **** 	State2.labellist = 0;
 10413              		.loc 1 3078 16 view .LVU3220
 10414 0e80 A8F80820 		strh	r2, [r8, #8]	@ movhi
3079:src/keys.c    **** 	return check_confirm(op);
 10415              		.loc 1 3079 2 is_stmt 1 view .LVU3221
3080:src/keys.c    **** }
 10416              		.loc 1 3080 2 view .LVU3222
 10417              	.LVL875:
 10418              	.LBB1183:
 10419              	.LBI1176:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10420              		.loc 1 704 12 view .LVU3223
 10421              	.LBB1179:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10422              		.loc 1 705 2 view .LVU3224
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10423              		.loc 1 705 5 is_stmt 0 view .LVU3225
 10424 0e84 7FF4ACAA 		bne	.L835
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10425              		.loc 1 705 5 view .LVU3226
 10426 0e88 2046     		mov	r0, r4
 10427 0e8a FFF7FEFF 		bl	check_confirm.part.0
 10428              	.LVL876:
 10429 0e8e 0446     		mov	r4, r0
 10430              	.LVL877:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10431              		.loc 1 705 5 view .LVU3227
 10432 0e90 FFF7A6BA 		b	.L835
 10433              	.LVL878:
 10434              	.L953:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10435              		.loc 1 705 5 view .LVU3228
 10436              	.LBE1179:
 10437              	.LBE1183:
ARM GAS  /tmp/ccXySG1f.s 			page 301


3009:src/keys.c    **** 	case K_DOWN:				// Find next label
 10438              		.loc 1 3009 3 is_stmt 1 view .LVU3229
3009:src/keys.c    **** 	case K_DOWN:				// Find next label
 10439              		.loc 1 3009 8 is_stmt 0 view .LVU3230
 10440 0e94 5046     		mov	r0, r10
 10441 0e96 0122     		movs	r2, #1
 10442 0e98 0021     		movs	r1, #0
 10443 0e9a FFF7FEFF 		bl	advance_to_next_label
 10444              	.LVL879:
 10445 0e9e 8246     		mov	r10, r0
 10446              	.LVL880:
 10447              	.L960:
3012:src/keys.c    **** 		return STATE_UNFINISHED;
 10448              		.loc 1 3012 3 is_stmt 1 view .LVU3231
3012:src/keys.c    **** 		return STATE_UNFINISHED;
 10449              		.loc 1 3012 19 is_stmt 0 view .LVU3232
 10450 0ea0 5046     		mov	r0, r10
 10451 0ea2 0022     		movs	r2, #0
 10452 0ea4 0121     		movs	r1, #1
 10453 0ea6 FFF7FEFF 		bl	advance_to_next_label
 10454              	.LVL881:
3013:src/keys.c    **** 
 10455              		.loc 1 3013 10 view .LVU3233
 10456 0eaa 3324     		movs	r4, #51
 10457 0eac 3368     		ldr	r3, [r6]
3012:src/keys.c    **** 		return STATE_UNFINISHED;
 10458              		.loc 1 3012 17 view .LVU3234
 10459 0eae A8F80800 		strh	r0, [r8, #8]	@ movhi
3013:src/keys.c    **** 
 10460              		.loc 1 3013 3 is_stmt 1 view .LVU3235
3013:src/keys.c    **** 
 10461              		.loc 1 3013 10 is_stmt 0 view .LVU3236
 10462 0eb2 FFF700B9 		b	.L801
 10463              	.LVL882:
 10464              	.L958:
3064:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10465              		.loc 1 3064 3 is_stmt 1 view .LVU3237
3064:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10466              		.loc 1 3064 6 is_stmt 0 view .LVU3238
 10467 0eb6 009B     		ldr	r3, [sp]
 10468 0eb8 002B     		cmp	r3, #0
 10469 0eba 3FF413AC 		beq	.L1309
3064:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10470              		.loc 1 3064 14 view .LVU3239
 10471 0ebe 002A     		cmp	r2, #0
 10472 0ec0 3FF410AC 		beq	.L1309
3065:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10473              		.loc 1 3065 4 is_stmt 1 view .LVU3240
 10474 0ec4 5146     		mov	r1, r10
 10475 0ec6 0120     		movs	r0, #1
 10476 0ec8 FFF7FEFF 		bl	cmdgtocommon
 10477              	.LVL883:
3066:src/keys.c    **** 			break;
 10478              		.loc 1 3066 4 view .LVU3241
3067:src/keys.c    **** 		}
 10479              		.loc 1 3067 4 view .LVU3242
3078:src/keys.c    **** 	State2.labellist = 0;
ARM GAS  /tmp/ccXySG1f.s 			page 302


 10480              		.loc 1 3078 2 view .LVU3243
3079:src/keys.c    **** 	return check_confirm(op);
 10481              		.loc 1 3079 19 is_stmt 0 view .LVU3244
 10482 0ecc 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3078:src/keys.c    **** 	State2.labellist = 0;
 10483              		.loc 1 3078 16 view .LVU3245
 10484 0ed0 0023     		movs	r3, #0
3079:src/keys.c    **** 	return check_confirm(op);
 10485              		.loc 1 3079 19 view .LVU3246
 10486 0ed2 63F38202 		bfi	r2, r3, #2, #1
 10487 0ed6 88F81720 		strb	r2, [r8, #23]
3078:src/keys.c    **** 	State2.labellist = 0;
 10488              		.loc 1 3078 16 view .LVU3247
 10489 0eda A8F80830 		strh	r3, [r8, #8]	@ movhi
3079:src/keys.c    **** 	return check_confirm(op);
 10490              		.loc 1 3079 2 is_stmt 1 view .LVU3248
3080:src/keys.c    **** }
 10491              		.loc 1 3080 2 view .LVU3249
 10492              	.LVL884:
 10493              	.LBB1184:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10494              		.loc 1 704 12 view .LVU3250
 10495              	.LBB1180:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10496              		.loc 1 705 2 view .LVU3251
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10497              		.loc 1 705 2 is_stmt 0 view .LVU3252
 10498              	.LBE1180:
 10499              	.LBE1184:
 10500              	.LBE1186:
 10501              	.LBE1193:
 10502              	.LBE1405:
 10503              	.LBE1478:
3589:src/keys.c    ****     case STATE_SST:
 10504              		.loc 1 3589 5 is_stmt 1 view .LVU3253
 10505 0ede FFF72FBA 		b	.L811
 10506              	.LVL885:
 10507              	.L963:
 10508              	.LBB1479:
 10509              	.LBB1406:
 10510              	.LBB1194:
 10511              	.LBB1187:
3034:src/keys.c    **** 	  //#endif
 10512              		.loc 1 3034 3 view .LVU3254
3034:src/keys.c    **** 	  //#endif
 10513              		.loc 1 3034 38 is_stmt 0 view .LVU3255
 10514 0ee2 062C     		cmp	r4, #6
 10515 0ee4 40F2B114 		movw	r4, #433
 10516              	.LVL886:
3034:src/keys.c    **** 	  //#endif
 10517              		.loc 1 3034 38 view .LVU3256
 10518 0ee8 08BF     		it	eq
 10519 0eea 4FF4D974 		moveq	r4, #434
 10520 0eee BAE7     		b	.L956
 10521              	.LVL887:
 10522              	.L964:
 10523              	.L969:
ARM GAS  /tmp/ccXySG1f.s 			page 303


3042:src/keys.c    **** 		goto xeq_or_gto;
 10524              		.loc 1 3042 3 is_stmt 1 view .LVU3257
3042:src/keys.c    **** 		goto xeq_or_gto;
 10525              		.loc 1 3042 6 is_stmt 0 view .LVU3258
 10526 0ef0 02F50074 		add	r4, r2, #512
 10527              	.LVL888:
3043:src/keys.c    **** 
 10528              		.loc 1 3043 3 is_stmt 1 view .LVU3259
3048:src/keys.c    **** 			break;
 10529              		.loc 1 3048 3 view .LVU3260
3048:src/keys.c    **** 			break;
 10530              		.loc 1 3048 6 is_stmt 0 view .LVU3261
 10531 0ef4 002A     		cmp	r2, #0
 10532 0ef6 B9D1     		bne	.L968
 10533 0ef8 FFF7F4BB 		b	.L1309
 10534              	.LVL889:
 10535              	.L961:
3016:src/keys.c    **** 		return STATE_UNFINISHED;
 10536              		.loc 1 3016 3 is_stmt 1 view .LVU3262
3016:src/keys.c    **** 		return STATE_UNFINISHED;
 10537              		.loc 1 3016 19 is_stmt 0 view .LVU3263
 10538 0efc 5046     		mov	r0, r10
 10539 0efe 0021     		movs	r1, #0
 10540 0f00 FFF7FEFF 		bl	advance_to_previous_label
 10541              	.LVL890:
3017:src/keys.c    **** 
 10542              		.loc 1 3017 10 view .LVU3264
 10543 0f04 3324     		movs	r4, #51
 10544              	.LVL891:
3017:src/keys.c    **** 
 10545              		.loc 1 3017 10 view .LVU3265
 10546 0f06 3368     		ldr	r3, [r6]
3016:src/keys.c    **** 		return STATE_UNFINISHED;
 10547              		.loc 1 3016 17 view .LVU3266
 10548 0f08 A8F80800 		strh	r0, [r8, #8]	@ movhi
3017:src/keys.c    **** 
 10549              		.loc 1 3017 3 is_stmt 1 view .LVU3267
3017:src/keys.c    **** 
 10550              		.loc 1 3017 10 is_stmt 0 view .LVU3268
 10551 0f0c FFF7D3B8 		b	.L801
 10552              	.LVL892:
 10553              	.L962:
3078:src/keys.c    **** 	State2.labellist = 0;
 10554              		.loc 1 3078 2 is_stmt 1 view .LVU3269
3079:src/keys.c    **** 	return check_confirm(op);
 10555              		.loc 1 3079 19 is_stmt 0 view .LVU3270
 10556 0f10 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10557 0f14 3368     		ldr	r3, [r6]
3078:src/keys.c    **** 	State2.labellist = 0;
 10558              		.loc 1 3078 16 view .LVU3271
 10559 0f16 0022     		movs	r2, #0
3079:src/keys.c    **** 	return check_confirm(op);
 10560              		.loc 1 3079 19 view .LVU3272
 10561 0f18 62F38201 		bfi	r1, r2, #2, #1
 10562 0f1c 88F81710 		strb	r1, [r8, #23]
3078:src/keys.c    **** 	State2.labellist = 0;
 10563              		.loc 1 3078 16 view .LVU3273
ARM GAS  /tmp/ccXySG1f.s 			page 304


 10564 0f20 A8F80820 		strh	r2, [r8, #8]	@ movhi
3079:src/keys.c    **** 	return check_confirm(op);
 10565              		.loc 1 3079 2 is_stmt 1 view .LVU3274
3080:src/keys.c    **** }
 10566              		.loc 1 3080 2 view .LVU3275
 10567              	.LVL893:
 10568              	.LBB1185:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10569              		.loc 1 704 12 view .LVU3276
 10570              	.LBB1181:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10571              		.loc 1 705 2 view .LVU3277
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10572              		.loc 1 705 2 is_stmt 0 view .LVU3278
 10573              	.LBE1181:
 10574              	.LBE1185:
 10575              	.LBE1187:
 10576              	.LBE1194:
 10577              	.LBE1406:
 10578              	.LBE1479:
3589:src/keys.c    ****     case STATE_SST:
 10579              		.loc 1 3589 5 is_stmt 1 view .LVU3279
 10580              	.LBB1480:
 10581              	.LBB1407:
 10582              	.LBB1195:
 10583              	.LBB1188:
2991:src/keys.c    **** 
 10584              		.loc 1 2991 6 is_stmt 0 view .LVU3280
 10585 0f24 3324     		movs	r4, #51
 10586 0f26 FFF7C6B8 		b	.L801
 10587              	.LVL894:
 10588              	.L878:
2991:src/keys.c    **** 
 10589              		.loc 1 2991 6 view .LVU3281
 10590              	.LBE1188:
 10591              	.LBE1195:
 10592              	.LBB1196:
 10593              	.LBB1001:
2374:src/keys.c    **** 		return STATE_UNFINISHED;
 10594              		.loc 1 2374 3 is_stmt 1 view .LVU3282
 10595              	.LBB994:
 10596              	.LBI994:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10597              		.loc 1 552 13 view .LVU3283
 10598              	.LBB995:
 553:src/keys.c    **** 		return;
 10599              		.loc 1 553 2 view .LVU3284
 553:src/keys.c    **** 		return;
 10600              		.loc 1 553 6 is_stmt 0 view .LVU3285
 10601 0f2a FFF7FEFF 		bl	is_bad_cmdline
 10602              	.LVL895:
 553:src/keys.c    **** 		return;
 10603              		.loc 1 553 5 view .LVU3286
 10604 0f2e 0446     		mov	r4, r0
 10605              	.LVL896:
 553:src/keys.c    **** 		return;
 10606              		.loc 1 553 5 view .LVU3287
ARM GAS  /tmp/ccXySG1f.s 			page 305


 10607 0f30 0028     		cmp	r0, #0
 10608 0f32 7FF4D7AB 		bne	.L1309
 10609 0f36 5FFA8AF0 		uxtb	r0, r10
 10610 0f3a FFF7FEFF 		bl	init_arg.part.0
 10611              	.LVL897:
 10612              	.LBE995:
 10613              	.LBE994:
 10614              	.LBE1001:
 10615              	.LBE1196:
 10616              	.LBE1407:
 10617              	.LBE1480:
3399:src/keys.c    ****   //print_debug(60,c);
 10618              		.loc 1 3399 7 view .LVU3288
 10619 0f3e 2546     		mov	r5, r4
 10620 0f40 3368     		ldr	r3, [r6]
 10621              	.LBB1481:
 10622              	.LBB1408:
 10623              	.LBB1197:
 10624              	.LBB1002:
2375:src/keys.c    **** 
 10625              		.loc 1 2375 10 view .LVU3289
 10626 0f42 3324     		movs	r4, #51
 10627 0f44 FFF7B7B8 		b	.L801
 10628              	.LVL898:
 10629              	.L950:
2375:src/keys.c    **** 
 10630              		.loc 1 2375 10 view .LVU3290
 10631              	.LBE1002:
 10632              	.LBE1197:
 10633              	.LBB1198:
 10634              	.LBB1189:
3002:src/keys.c    **** 
 10635              		.loc 1 3002 2 view .LVU3291
 10636 0f48 B3F58C7F 		cmp	r3, #280
 10637 0f4c 47DC     		bgt	.L965
 10638 0f4e B3F5827F 		cmp	r3, #260
 10639 0f52 7FF7C7AB 		ble	.L1309
 10640 0f56 6FF48274 		mvn	r4, #260
 10641              	.LVL899:
3002:src/keys.c    **** 
 10642              		.loc 1 3002 2 view .LVU3292
 10643 0f5a 2344     		add	r3, r3, r4
 10644 0f5c 132B     		cmp	r3, #19
 10645 0f5e 3FF6C1AB 		bhi	.L1309
 10646 0f62 01A1     		adr	r1, .L954
 10647 0f64 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10648              		.p2align 2
 10649              	.L954:
 10650 0f68 BF0F0000 		.word	.L957+1
 10651 0f6c E5060000 		.word	.L1309+1
 10652 0f70 E5060000 		.word	.L1309+1
 10653 0f74 E5060000 		.word	.L1309+1
 10654 0f78 E5060000 		.word	.L1309+1
 10655 0f7c E5060000 		.word	.L1309+1
 10656 0f80 E5060000 		.word	.L1309+1
 10657 0f84 E5060000 		.word	.L1309+1
 10658 0f88 E5060000 		.word	.L1309+1
ARM GAS  /tmp/ccXySG1f.s 			page 306


 10659 0f8c E5060000 		.word	.L1309+1
 10660 0f90 E5060000 		.word	.L1309+1
 10661 0f94 B90F0000 		.word	.L1148+1
 10662 0f98 E5060000 		.word	.L1309+1
 10663 0f9c CD0F0000 		.word	.L955+1
 10664 0fa0 E5060000 		.word	.L1309+1
 10665 0fa4 E5060000 		.word	.L1309+1
 10666 0fa8 E5060000 		.word	.L1309+1
 10667 0fac E5060000 		.word	.L1309+1
 10668 0fb0 E5060000 		.word	.L1309+1
 10669 0fb4 950E0000 		.word	.L953+1
 10670              		.p2align 1
 10671              	.L1148:
 10672 0fb8 40F24314 		movw	r4, #323
 10673 0fbc 53E7     		b	.L956
 10674              	.L957:
3046:src/keys.c    **** 	xeq_or_gto:
 10675              		.loc 1 3046 3 is_stmt 1 view .LVU3293
3046:src/keys.c    **** 	xeq_or_gto:
 10676              		.loc 1 3046 6 is_stmt 0 view .LVU3294
 10677 0fbe 02F54074 		add	r4, r2, #768
 10678              	.LVL900:
3048:src/keys.c    **** 			break;
 10679              		.loc 1 3048 3 is_stmt 1 view .LVU3295
3048:src/keys.c    **** 			break;
 10680              		.loc 1 3048 6 is_stmt 0 view .LVU3296
 10681 0fc2 002A     		cmp	r2, #0
 10682 0fc4 7FF452AF 		bne	.L968
 10683 0fc8 FFF78CBB 		b	.L1309
 10684              	.LVL901:
 10685              	.L955:
3005:src/keys.c    **** 		goto next;
 10686              		.loc 1 3005 3 is_stmt 1 view .LVU3297
3005:src/keys.c    **** 		goto next;
 10687              		.loc 1 3005 8 is_stmt 0 view .LVU3298
 10688 0fcc 5046     		mov	r0, r10
 10689 0fce 0121     		movs	r1, #1
 10690 0fd0 FFF7FEFF 		bl	advance_to_previous_label
 10691              	.LVL902:
 10692 0fd4 0121     		movs	r1, #1
 10693 0fd6 FFF7FEFF 		bl	advance_to_previous_label
 10694              	.LVL903:
 10695 0fda 8246     		mov	r10, r0
 10696              	.LVL904:
3006:src/keys.c    **** 
 10697              		.loc 1 3006 3 is_stmt 1 view .LVU3299
 10698 0fdc 60E7     		b	.L960
 10699              	.LVL905:
 10700              	.L965:
3002:src/keys.c    **** 
 10701              		.loc 1 3002 2 is_stmt 0 view .LVU3300
 10702 0fde 40F22732 		movw	r2, #807
 10703 0fe2 9342     		cmp	r3, r2
 10704 0fe4 7FF47EAB 		bne	.L1309
3072:src/keys.c    **** 		goto set_pc_and_exit;
 10705              		.loc 1 3072 3 is_stmt 1 view .LVU3301
3072:src/keys.c    **** 		goto set_pc_and_exit;
ARM GAS  /tmp/ccXySG1f.s 			page 307


 10706              		.loc 1 3072 18 is_stmt 0 view .LVU3302
 10707 0fe8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10708 0fec 61F38613 		bfi	r3, r1, #6, #1
 10709 0ff0 88F81630 		strb	r3, [r8, #22]
3073:src/keys.c    **** 
 10710              		.loc 1 3073 3 is_stmt 1 view .LVU3303
2991:src/keys.c    **** 
 10711              		.loc 1 2991 6 is_stmt 0 view .LVU3304
 10712 0ff4 3324     		movs	r4, #51
 10713              	.LVL906:
3073:src/keys.c    **** 
 10714              		.loc 1 3073 3 view .LVU3305
 10715 0ff6 36E7     		b	.L956
 10716              	.LVL907:
 10717              	.L1340:
3073:src/keys.c    **** 
 10718              		.loc 1 3073 3 view .LVU3306
 10719              	.LBE1189:
 10720              	.LBE1198:
3333:src/keys.c    **** 
 10721              		.loc 1 3333 3 is_stmt 1 view .LVU3307
 10722              	.LBB1199:
 10723              	.LBI1199:
3114:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 10724              		.loc 1 3114 12 view .LVU3308
 10725              	.LBB1200:
3115:src/keys.c    **** 	enum shifts shift = reset_shift();
 10726              		.loc 1 3115 2 view .LVU3309
 10727              	.LBB1201:
 10728              	.LBI1201:
 210:src/keys.c    **** {
 10729              		.loc 1 210 14 view .LVU3310
 10730              	.LBB1202:
 212:src/keys.c    ****     // K00 - K05
 10731              		.loc 1 212 3 view .LVU3311
 234:src/keys.c    **** }
 10732              		.loc 1 234 3 view .LVU3312
 10733              	.LBB1203:
 10734              	.LBI1203:
 131:src/keys.c    **** {
 10735              		.loc 1 131 12 view .LVU3313
 10736              	.LBB1204:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10737              		.loc 1 133 2 view .LVU3314
 143:src/keys.c    **** }
 10738              		.loc 1 143 2 view .LVU3315
 143:src/keys.c    **** }
 10739              		.loc 1 143 23 is_stmt 0 view .LVU3316
 10740 0ff8 374B     		ldr	r3, .L1409+4
 10741              	.LBE1204:
 10742              	.LBE1203:
 234:src/keys.c    **** }
 10743              		.loc 1 234 28 view .LVU3317
 10744 0ffa 384A     		ldr	r2, .L1409+8
 10745              	.LBB1206:
 10746              	.LBB1205:
 143:src/keys.c    **** }
ARM GAS  /tmp/ccXySG1f.s 			page 308


 10747              		.loc 1 143 23 view .LVU3318
 10748 0ffc 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10749              	.LBE1205:
 10750              	.LBE1206:
 234:src/keys.c    **** }
 10751              		.loc 1 234 10 view .LVU3319
 10752 0ffe 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10753              	.LVL908:
 234:src/keys.c    **** }
 10754              		.loc 1 234 10 view .LVU3320
 10755              	.LBE1202:
 10756              	.LBE1201:
 10757              	.LBB1207:
 10758              	.LBB1208:
 10759              	.LBB1209:
 10760              	.LBB1210:
 10761              	.LBB1211:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10762              		.loc 1 97 18 view .LVU3321
 10763 1002 FFF7FEFF 		bl	shift_down
 10764              	.LVL909:
 10765              	.LBE1211:
 10766              	.LBE1210:
 10767              	.LBE1209:
 10768              	.LBE1208:
 10769              	.LBE1207:
3115:src/keys.c    **** 	enum shifts shift = reset_shift();
 10770              		.loc 1 3115 15 view .LVU3322
 10771 1006 2BF0800B 		bic	fp, fp, #128
 10772              	.LVL910:
3116:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 10773              		.loc 1 3116 2 is_stmt 1 view .LVU3323
 10774              	.LBB1220:
 10775              	.LBI1207:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10776              		.loc 1 114 13 view .LVU3324
 10777              	.LBE1220:
 10778              	.LBE1200:
 10779              	.LBE1199:
 10780              	.LBE1408:
 10781              	.LBE1481:
 115:src/keys.c    **** }
 10782              		.loc 1 115 2 view .LVU3325
 10783              	.LBB1482:
 10784              	.LBB1409:
 10785              	.LBB1235:
 10786              	.LBB1227:
 10787              	.LBB1221:
 10788              	.LBB1217:
 10789              	.LBI1208:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10790              		.loc 1 104 20 view .LVU3326
 10791              	.LBB1214:
 105:src/keys.c    **** 	State2.shifts = shift;
 10792              		.loc 1 105 2 view .LVU3327
 10793              	.LBB1213:
 10794              	.LBI1210:
ARM GAS  /tmp/ccXySG1f.s 			page 309


  96:src/keys.c    **** 	enum shifts s = shift_down();
 10795              		.loc 1 96 13 view .LVU3328
 10796              	.LBB1212:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10797              		.loc 1 97 2 view .LVU3329
  98:src/keys.c    **** }
 10798              		.loc 1 98 2 view .LVU3330
  98:src/keys.c    **** }
 10799              		.loc 1 98 52 is_stmt 0 view .LVU3331
 10800 100a 8146     		mov	r9, r0
 10801 100c 08B9     		cbnz	r0, .L972
 10802 100e 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 10803              	.L972:
 10804              	.LVL911:
  98:src/keys.c    **** }
 10805              		.loc 1 98 52 view .LVU3332
 10806              	.LBE1212:
 10807              	.LBE1213:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10808              		.loc 1 106 2 is_stmt 1 view .LVU3333
 10809              	.LBE1214:
 10810              	.LBE1217:
 10811              	.LBE1221:
3117:src/keys.c    **** 	const int g_max = global_regs();
 10812              		.loc 1 3117 31 is_stmt 0 view .LVU3334
 10813 1012 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10814              	.LBB1222:
 10815              	.LBB1218:
 10816              	.LBB1215:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10817              		.loc 1 106 16 view .LVU3335
 10818 1016 0022     		movs	r2, #0
 10819              	.LBE1215:
 10820              	.LBE1218:
 10821              	.LBE1222:
3117:src/keys.c    **** 	const int g_max = global_regs();
 10822              		.loc 1 3117 46 view .LVU3336
 10823 1018 D907     		lsls	r1, r3, #31
 10824              	.LBB1223:
 10825              	.LBB1219:
 10826              	.LBB1216:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10827              		.loc 1 106 16 view .LVU3337
 10828 101a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 10829              		.loc 1 108 2 is_stmt 1 view .LVU3338
 10830              	.LVL912:
 108:src/keys.c    **** }
 10831              		.loc 1 108 2 is_stmt 0 view .LVU3339
 10832              	.LBE1216:
 10833              	.LBE1219:
 10834              	.LBE1223:
3117:src/keys.c    **** 	const int g_max = global_regs();
 10835              		.loc 1 3117 2 is_stmt 1 view .LVU3340
3117:src/keys.c    **** 	const int g_max = global_regs();
 10836              		.loc 1 3117 46 is_stmt 0 view .LVU3341
 10837 101e 00F15F82 		bmi	.L1380
ARM GAS  /tmp/ccXySG1f.s 			page 310


 10838 1022 4FF0700A 		mov	r10, #112
 10839              	.L973:
 10840              	.LVL913:
3118:src/keys.c    **** 
 10841              		.loc 1 3118 2 is_stmt 1 view .LVU3342
3118:src/keys.c    **** 
 10842              		.loc 1 3118 20 is_stmt 0 view .LVU3343
 10843 1026 FFF7FEFF 		bl	global_regs
 10844              	.LVL914:
3120:src/keys.c    **** 		if (local_regs())
 10845              		.loc 1 3120 2 is_stmt 1 view .LVU3344
3120:src/keys.c    **** 		if (local_regs())
 10846              		.loc 1 3120 5 is_stmt 0 view .LVU3345
 10847 102a BBF1700F 		cmp	fp, #112
 10848 102e 00F07683 		beq	.L1381
3126:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10849              		.loc 1 3126 7 is_stmt 1 view .LVU3346
3126:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10850              		.loc 1 3126 10 is_stmt 0 view .LVU3347
 10851 1032 BBF1090F 		cmp	fp, #9
 10852 1036 40F23383 		bls	.L1382
3133:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10853              		.loc 1 3133 7 is_stmt 1 view .LVU3348
3133:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10854              		.loc 1 3133 29 is_stmt 0 view .LVU3349
 10855 103a 09F1FF33 		add	r3, r9, #-1
3133:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10856              		.loc 1 3133 10 view .LVU3350
 10857 103e DBB2     		uxtb	r3, r3
 10858 1040 012B     		cmp	r3, #1
 10859 1042 40F25982 		bls	.L1383
 10860              	.L981:
3137:src/keys.c    **** 		State2.digval = n;
 10861              		.loc 1 3137 7 is_stmt 1 view .LVU3351
3137:src/keys.c    **** 		State2.digval = n;
 10862              		.loc 1 3137 10 is_stmt 0 view .LVU3352
 10863 1046 BBF17F0F 		cmp	fp, #127
 10864 104a 40F01183 		bne	.L1384
3142:src/keys.c    **** 	case K_DOWN:
 10865              		.loc 1 3142 2 is_stmt 1 view .LVU3353
 10866 104e 073C     		subs	r4, r4, #7
 10867              	.LVL915:
3142:src/keys.c    **** 	case K_DOWN:
 10868              		.loc 1 3142 2 is_stmt 0 view .LVU3354
 10869 1050 112C     		cmp	r4, #17
 10870 1052 3FF647AB 		bhi	.L1309
 10871 1056 01A3     		adr	r3, .L1112
 10872 1058 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 10873              		.p2align 2
 10874              	.L1112:
 10875 105c A5100000 		.word	.L994+1
 10876 1060 E5060000 		.word	.L1309+1
 10877 1064 E5060000 		.word	.L1309+1
 10878 1068 E5060000 		.word	.L1309+1
 10879 106c E5060000 		.word	.L1309+1
 10880 1070 63110000 		.word	.L993+1
 10881 1074 E5060000 		.word	.L1309+1
ARM GAS  /tmp/ccXySG1f.s 			page 311


 10882 1078 E5060000 		.word	.L1309+1
 10883 107c E5060000 		.word	.L1309+1
 10884 1080 45110000 		.word	.L991+1
 10885 1084 E5060000 		.word	.L1309+1
 10886 1088 17110000 		.word	.L987+1
 10887 108c E5060000 		.word	.L1309+1
 10888 1090 E5060000 		.word	.L1309+1
 10889 1094 E5060000 		.word	.L1309+1
 10890 1098 E5060000 		.word	.L1309+1
 10891 109c E5060000 		.word	.L1309+1
 10892 10a0 E1100000 		.word	.L984+1
 10893              		.p2align 1
 10894              	.L994:
3181:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10895              		.loc 1 3181 3 is_stmt 1 view .LVU3355
3181:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10896              		.loc 1 3181 6 is_stmt 0 view .LVU3356
 10897 10a4 B9F1000F 		cmp	r9, #0
 10898 10a8 7FF41CAB 		bne	.L1309
3185:src/keys.c    **** #endif
 10899              		.loc 1 3185 4 is_stmt 1 view .LVU3357
3185:src/keys.c    **** #endif
 10900              		.loc 1 3185 8 is_stmt 0 view .LVU3358
 10901 10ac B8F80840 		ldrh	r4, [r8, #8]
 10902              	.LVL916:
3187:src/keys.c    **** 			State2.digval = 0;
 10903              		.loc 1 3187 4 is_stmt 1 view .LVU3359
3187:src/keys.c    **** 			State2.digval = 0;
 10904              		.loc 1 3187 24 is_stmt 0 view .LVU3360
 10905 10b0 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 10906 10b4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3189:src/keys.c    **** 			return n;
 10907              		.loc 1 3189 19 view .LVU3361
 10908 10b8 88F80A90 		strb	r9, [r8, #10]
3190:src/keys.c    **** 		}
 10909              		.loc 1 3190 11 view .LVU3362
 10910 10bc 44F42854 		orr	r4, r4, #10752
 10911              	.LVL917:
3187:src/keys.c    **** 			State2.digval = 0;
 10912              		.loc 1 3187 24 view .LVU3363
 10913 10c0 69F3C303 		bfi	r3, r9, #3, #1
3188:src/keys.c    **** 			State2.digval2 = 0;
 10914              		.loc 1 3188 18 view .LVU3364
 10915 10c4 A8F80890 		strh	r9, [r8, #8]	@ movhi
 10916 10c8 2046     		mov	r0, r4
 10917              	.LVL918:
3187:src/keys.c    **** 			State2.digval = 0;
 10918              		.loc 1 3187 24 view .LVU3365
 10919 10ca 88F81730 		strb	r3, [r8, #23]
3188:src/keys.c    **** 			State2.digval2 = 0;
 10920              		.loc 1 3188 4 is_stmt 1 view .LVU3366
3189:src/keys.c    **** 			return n;
 10921              		.loc 1 3189 4 view .LVU3367
3190:src/keys.c    **** 		}
 10922              		.loc 1 3190 4 view .LVU3368
3190:src/keys.c    **** 		}
 10923              		.loc 1 3190 11 is_stmt 0 view .LVU3369
ARM GAS  /tmp/ccXySG1f.s 			page 312


 10924 10ce FFF7A9B9 		b	.L862
 10925              	.L1410:
 10926 10d2 00BF     		.align	2
 10927              	.L1409:
 10928 10d4 00000000 		.word	.LANCHOR20
 10929 10d8 00000000 		.word	.LANCHOR6
 10930 10dc 00000000 		.word	.LANCHOR5
 10931              	.LVL919:
 10932              	.L984:
3144:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 10933              		.loc 1 3144 3 is_stmt 1 view .LVU3370
3144:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 10934              		.loc 1 3144 13 is_stmt 0 view .LVU3371
 10935 10e0 B8F80830 		ldrh	r3, [r8, #8]
3144:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 10936              		.loc 1 3144 6 view .LVU3372
 10937 10e4 002B     		cmp	r3, #0
 10938 10e6 00F0F885 		beq	.L985
3145:src/keys.c    **** 				State2.digval = global_regs();
 10939              		.loc 1 3145 4 is_stmt 1 view .LVU3373
3145:src/keys.c    **** 				State2.digval = global_regs();
 10940              		.loc 1 3145 8 is_stmt 0 view .LVU3374
 10941 10ea 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 				State2.digval = global_regs();
 10942              		.loc 1 3145 7 view .LVU3375
 10943 10ee D407     		lsls	r4, r2, #31
 10944              	.LVL920:
3145:src/keys.c    **** 				State2.digval = global_regs();
 10945              		.loc 1 3145 7 view .LVU3376
 10946 10f0 02D4     		bmi	.L986
3145:src/keys.c    **** 				State2.digval = global_regs();
 10947              		.loc 1 3145 23 view .LVU3377
 10948 10f2 642B     		cmp	r3, #100
 10949 10f4 00F0F785 		beq	.L1385
 10950              	.LVL921:
 10951              	.L986:
3147:src/keys.c    **** 		}
 10952              		.loc 1 3147 4 is_stmt 1 view .LVU3378
 10953 10f8 B8F80830 		ldrh	r3, [r8, #8]
 10954 10fc 013B     		subs	r3, r3, #1
 10955              	.L1299:
3147:src/keys.c    **** 		}
 10956              		.loc 1 3147 4 is_stmt 0 view .LVU3379
 10957 10fe A8F80830 		strh	r3, [r8, #8]	@ movhi
 10958              	.LVL922:
 10959              	.L977:
3199:src/keys.c    **** 	return STATE_UNFINISHED;
 10960              		.loc 1 3199 2 is_stmt 1 view .LVU3380
3199:src/keys.c    **** 	return STATE_UNFINISHED;
 10961              		.loc 1 3199 16 is_stmt 0 view .LVU3381
 10962 1102 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 10963 1106 3368     		ldr	r3, [r6]
 10964 1108 6FF3C502 		bfc	r2, #3, #3
 10965 110c 88F81420 		strb	r2, [r8, #20]
3200:src/keys.c    **** }
 10966              		.loc 1 3200 2 is_stmt 1 view .LVU3382
3200:src/keys.c    **** }
ARM GAS  /tmp/ccXySG1f.s 			page 313


 10967              		.loc 1 3200 9 is_stmt 0 view .LVU3383
 10968 1110 3324     		movs	r4, #51
 10969 1112 FEF7D0BF 		b	.L801
 10970              	.LVL923:
 10971              	.L987:
3154:src/keys.c    **** 			State2.digval++;
 10972              		.loc 1 3154 3 is_stmt 1 view .LVU3384
3154:src/keys.c    **** 			State2.digval++;
 10973              		.loc 1 3154 13 is_stmt 0 view .LVU3385
 10974 1116 B8F80830 		ldrh	r3, [r8, #8]
3154:src/keys.c    **** 			State2.digval++;
 10975              		.loc 1 3154 27 view .LVU3386
 10976 111a 0AF1FF3A 		add	r10, r10, #-1
 10977              	.LVL924:
3154:src/keys.c    **** 			State2.digval++;
 10978              		.loc 1 3154 6 view .LVU3387
 10979 111e 5345     		cmp	r3, r10
 10980 1120 80F22783 		bge	.L988
3155:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 10981              		.loc 1 3155 4 is_stmt 1 view .LVU3388
3156:src/keys.c    **** 				State2.digval = regX_idx;
 10982              		.loc 1 3156 8 is_stmt 0 view .LVU3389
 10983 1124 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3155:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 10984              		.loc 1 3155 17 view .LVU3390
 10985 1128 0133     		adds	r3, r3, #1
 10986 112a 9CB2     		uxth	r4, r3
 10987              	.LVL925:
3156:src/keys.c    **** 				State2.digval = regX_idx;
 10988              		.loc 1 3156 7 view .LVU3391
 10989 112c D007     		lsls	r0, r2, #31
 10990              	.LVL926:
3155:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 10991              		.loc 1 3155 17 view .LVU3392
 10992 112e A8F80840 		strh	r4, [r8, #8]	@ movhi
3156:src/keys.c    **** 				State2.digval = regX_idx;
 10993              		.loc 1 3156 4 is_stmt 1 view .LVU3393
3156:src/keys.c    **** 				State2.digval = regX_idx;
 10994              		.loc 1 3156 7 is_stmt 0 view .LVU3394
 10995 1132 E6D4     		bmi	.L977
3156:src/keys.c    **** 				State2.digval = regX_idx;
 10996              		.loc 1 3156 43 view .LVU3395
 10997 1134 FFF7FEFF 		bl	global_regs
 10998              	.LVL927:
3156:src/keys.c    **** 				State2.digval = regX_idx;
 10999              		.loc 1 3156 23 view .LVU3396
 11000 1138 8442     		cmp	r4, r0
 11001 113a E2D1     		bne	.L977
3157:src/keys.c    **** 		}
 11002              		.loc 1 3157 5 is_stmt 1 view .LVU3397
3157:src/keys.c    **** 		}
 11003              		.loc 1 3157 19 is_stmt 0 view .LVU3398
 11004 113c 6423     		movs	r3, #100
 11005 113e A8F80830 		strh	r3, [r8, #8]	@ movhi
 11006 1142 DEE7     		b	.L977
 11007              	.LVL928:
 11008              	.L991:
ARM GAS  /tmp/ccXySG1f.s 			page 314


3171:src/keys.c    **** 			return STATE_UNFINISHED;
 11009              		.loc 1 3171 3 is_stmt 1 view .LVU3399
3171:src/keys.c    **** 			return STATE_UNFINISHED;
 11010              		.loc 1 3171 7 is_stmt 0 view .LVU3400
 11011 1144 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3171:src/keys.c    **** 			return STATE_UNFINISHED;
 11012              		.loc 1 3171 6 view .LVU3401
 11013 1148 13F02002 		ands	r2, r3, #32
 11014 114c 7FF4CAAA 		bne	.L1309
3173:src/keys.c    **** 
 11015              		.loc 1 3173 3 is_stmt 1 view .LVU3402
3195:src/keys.c    **** 	State2.digval = 0;
 11016              		.loc 1 3195 2 view .LVU3403
3195:src/keys.c    **** 	State2.digval = 0;
 11017              		.loc 1 3195 22 is_stmt 0 view .LVU3404
 11018 1150 62F3C303 		bfi	r3, r2, #3, #1
 11019 1154 88F81730 		strb	r3, [r8, #23]
3196:src/keys.c    **** 	State2.digval2 = 0;
 11020              		.loc 1 3196 2 is_stmt 1 view .LVU3405
3196:src/keys.c    **** 	State2.digval2 = 0;
 11021              		.loc 1 3196 16 is_stmt 0 view .LVU3406
 11022 1158 A8F80820 		strh	r2, [r8, #8]	@ movhi
3197:src/keys.c    **** reset_window:
 11023              		.loc 1 3197 2 is_stmt 1 view .LVU3407
3197:src/keys.c    **** reset_window:
 11024              		.loc 1 3197 17 is_stmt 0 view .LVU3408
 11025 115c 88F80A20 		strb	r2, [r8, #10]
 11026 1160 CFE7     		b	.L977
 11027              	.L993:
3176:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11028              		.loc 1 3176 3 is_stmt 1 view .LVU3409
3176:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11029              		.loc 1 3176 6 is_stmt 0 view .LVU3410
 11030 1162 B9F1010F 		cmp	r9, #1
 11031 1166 9DD1     		bne	.L994
3177:src/keys.c    **** 			goto reset_window;
 11032              		.loc 1 3177 4 is_stmt 1 view .LVU3411
3177:src/keys.c    **** 			goto reset_window;
 11033              		.loc 1 3177 25 is_stmt 0 view .LVU3412
 11034 1168 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11035 116c 43F00403 		orr	r3, r3, #4
 11036 1170 88F81630 		strb	r3, [r8, #22]
3178:src/keys.c    **** 		}
 11037              		.loc 1 3178 4 is_stmt 1 view .LVU3413
 11038 1174 C5E7     		b	.L977
 11039              	.LVL929:
 11040              	.L856:
3178:src/keys.c    **** 		}
 11041              		.loc 1 3178 4 is_stmt 0 view .LVU3414
 11042              	.LBE1227:
 11043              	.LBE1235:
 11044              	.LBB1236:
 11045              	.LBB1038:
1612:src/keys.c    **** #endif
 11046              		.loc 1 1612 4 is_stmt 1 view .LVU3415
1612:src/keys.c    **** #endif
 11047              		.loc 1 1612 18 view .LVU3416
ARM GAS  /tmp/ccXySG1f.s 			page 315


1612:src/keys.c    **** #endif
 11048              		.loc 1 1612 18 is_stmt 0 view .LVU3417
 11049 1176 8BF0010B 		eor	fp, fp, #1
 11050              	.LVL930:
1612:src/keys.c    **** #endif
 11051              		.loc 1 1612 18 view .LVU3418
 11052 117a FFF7C6BB 		b	.L863
 11053              	.LVL931:
 11054              	.L1358:
1612:src/keys.c    **** #endif
 11055              		.loc 1 1612 18 view .LVU3419
 11056              	.LBE1038:
 11057              	.LBE1236:
 11058              	.LBB1237:
 11059              	.LBB1019:
1711:src/keys.c    **** #endif
 11060              		.loc 1 1711 44 is_stmt 1 view .LVU3420
1711:src/keys.c    **** #endif
 11061              		.loc 1 1711 52 is_stmt 0 view .LVU3421
 11062 117e 0420     		movs	r0, #4
 11063 1180 FFF7FEFF 		bl	gtodot_digit
 11064              	.LVL932:
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11065              		.loc 1 1754 2 is_stmt 1 view .LVU3422
 11066              	.LBE1019:
 11067              	.LBE1237:
3275:src/keys.c    **** 
 11068              		.loc 1 3275 10 is_stmt 0 view .LVU3423
 11069 1184 3324     		movs	r4, #51
 11070              	.LVL933:
3275:src/keys.c    **** 
 11071              		.loc 1 3275 10 view .LVU3424
 11072 1186 3368     		ldr	r3, [r6]
 11073 1188 FEF795BF 		b	.L801
 11074              	.LVL934:
 11075              	.L1359:
 11076              	.LBB1238:
 11077              	.LBB1020:
1715:src/keys.c    **** 		goto fin;
 11078              		.loc 1 1715 3 is_stmt 1 view .LVU3425
 11079              	.LBB1013:
 11080              	.LBI1013:
1687:src/keys.c    **** 	const int code = 100 + n;
 11081              		.loc 1 1687 12 view .LVU3426
 11082              	.LBB1014:
1688:src/keys.c    **** 	unsigned int pc = state_pc();
 11083              		.loc 1 1688 2 view .LVU3427
1689:src/keys.c    **** 
 11084              		.loc 1 1689 2 view .LVU3428
1689:src/keys.c    **** 
 11085              		.loc 1 1689 20 is_stmt 0 view .LVU3429
 11086 118c DFF864A3 		ldr	r10, .L1411+12
 11087 1190 DAF80030 		ldr	r3, [r10]
 11088              	.LVL935:
1689:src/keys.c    **** 
 11089              		.loc 1 1689 15 view .LVU3430
 11090 1194 B3F8E007 		ldrh	r0, [r3, #2016]
ARM GAS  /tmp/ccXySG1f.s 			page 316


 11091              	.LVL936:
1691:src/keys.c    **** 		pc = 1;
 11092              		.loc 1 1691 2 is_stmt 1 view .LVU3431
1691:src/keys.c    **** 		pc = 1;
 11093              		.loc 1 1691 5 is_stmt 0 view .LVU3432
 11094 1198 830B     		lsrs	r3, r0, #14
1692:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11095              		.loc 1 1692 6 view .LVU3433
 11096 119a 032B     		cmp	r3, #3
 11097              	.LVL937:
1693:src/keys.c    **** 	if (pc > 0)
 11098              		.loc 1 1693 2 is_stmt 1 view .LVU3434
1693:src/keys.c    **** 	if (pc > 0)
 11099              		.loc 1 1693 7 is_stmt 0 view .LVU3435
 11100 119c 08BF     		it	eq
 11101 119e 0120     		moveq	r0, #1
 11102              	.LVL938:
1693:src/keys.c    **** 	if (pc > 0)
 11103              		.loc 1 1693 7 view .LVU3436
 11104 11a0 04F16401 		add	r1, r4, #100
 11105              	.LVL939:
1693:src/keys.c    **** 	if (pc > 0)
 11106              		.loc 1 1693 7 view .LVU3437
 11107 11a4 0322     		movs	r2, #3
 11108              	.LVL940:
1693:src/keys.c    **** 	if (pc > 0)
 11109              		.loc 1 1693 7 view .LVU3438
 11110 11a6 FFF7FEFF 		bl	find_label_from
 11111              	.LVL941:
1694:src/keys.c    **** 		return pc;
 11112              		.loc 1 1694 2 is_stmt 1 view .LVU3439
1694:src/keys.c    **** 		return pc;
 11113              		.loc 1 1694 5 is_stmt 0 view .LVU3440
 11114 11aa 0028     		cmp	r0, #0
 11115 11ac 7FF463AB 		bne	.L847
1696:src/keys.c    **** }
 11116              		.loc 1 1696 2 is_stmt 1 view .LVU3441
1696:src/keys.c    **** }
 11117              		.loc 1 1696 9 is_stmt 0 view .LVU3442
 11118 11b0 DAF80030 		ldr	r3, [r10]
 11119 11b4 B3F8E007 		ldrh	r0, [r3, #2016]
 11120              	.LVL942:
1696:src/keys.c    **** }
 11121              		.loc 1 1696 9 view .LVU3443
 11122              	.LBE1014:
 11123              	.LBE1013:
1716:src/keys.c    **** 	}
 11124              		.loc 1 1716 3 is_stmt 1 view .LVU3444
 11125 11b8 FFF75DBB 		b	.L847
 11126              	.LVL943:
 11127              	.L1361:
1725:src/keys.c    **** 	}
 11128              		.loc 1 1725 3 view .LVU3445
1725:src/keys.c    **** 	}
 11129              		.loc 1 1725 6 is_stmt 0 view .LVU3446
 11130 11bc B8F80800 		ldrh	r0, [r8, #8]
 11131              	.LVL944:
ARM GAS  /tmp/ccXySG1f.s 			page 317


1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11132              		.loc 1 1754 2 is_stmt 1 view .LVU3447
 11133 11c0 73E4     		b	.L838
 11134              	.LVL945:
 11135              	.L1141:
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11136              		.loc 1 1754 2 is_stmt 0 view .LVU3448
 11137              	.LBE1020:
 11138              	.LBE1238:
 11139              	.LBB1239:
 11140              	.LBB841:
 11141              	.LBB831:
 371:src/keys.c    **** #ifndef WINGUI
 11142              		.loc 1 371 8 view .LVU3449
 11143 11c2 C94B     		ldr	r3, .L1411
 377:src/keys.c    ****   }
 11144              		.loc 1 377 9 view .LVU3450
 11145 11c4 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 11146              		.loc 1 373 27 view .LVU3451
 11147 11c6 4FF0010C 		mov	ip, #1
 11148 11ca FFF74CB8 		b	.L916
 11149              	.LVL946:
 11150              	.L1341:
 373:src/keys.c    **** #else
 11151              		.loc 1 373 27 view .LVU3452
 11152              	.LBE831:
 11153              	.LBE841:
 11154              	.LBE1239:
3336:src/keys.c    **** 
 11155              		.loc 1 3336 3 is_stmt 1 view .LVU3453
 11156              	.LBB1240:
 11157              	.LBI1240:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11158              		.loc 1 114 13 view .LVU3454
 11159              	.LBE1240:
 11160              	.LBE1409:
 11161              	.LBE1482:
 115:src/keys.c    **** }
 11162              		.loc 1 115 2 view .LVU3455
 11163              	.LBB1483:
 11164              	.LBB1410:
 11165              	.LBB1247:
 11166              	.LBB1241:
 11167              	.LBI1241:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11168              		.loc 1 104 20 view .LVU3456
 11169              	.LBB1242:
 105:src/keys.c    **** 	State2.shifts = shift;
 11170              		.loc 1 105 2 view .LVU3457
 11171              	.LBB1243:
 11172              	.LBI1243:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11173              		.loc 1 96 13 view .LVU3458
 11174              	.LBB1244:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11175              		.loc 1 97 2 view .LVU3459
ARM GAS  /tmp/ccXySG1f.s 			page 318


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11176              		.loc 1 97 18 is_stmt 0 view .LVU3460
 11177 11ce FFF7FEFF 		bl	shift_down
 11178              	.LVL947:
  98:src/keys.c    **** }
 11179              		.loc 1 98 2 is_stmt 1 view .LVU3461
  98:src/keys.c    **** }
 11180              		.loc 1 98 52 is_stmt 0 view .LVU3462
 11181 11d2 0146     		mov	r1, r0
 11182 11d4 08B9     		cbnz	r0, .L997
 11183 11d6 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11184              	.L997:
 11185              	.LVL948:
  98:src/keys.c    **** }
 11186              		.loc 1 98 52 view .LVU3463
 11187              	.LBE1244:
 11188              	.LBE1243:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11189              		.loc 1 106 2 is_stmt 1 view .LVU3464
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11190              		.loc 1 106 16 is_stmt 0 view .LVU3465
 11191 11da 0022     		movs	r2, #0
 11192              	.LBE1242:
 11193              	.LBE1241:
 11194              	.LBE1247:
3336:src/keys.c    **** 
 11195              		.loc 1 3336 10 view .LVU3466
 11196 11dc 2046     		mov	r0, r4
 11197              	.LBB1248:
 11198              	.LBB1246:
 11199              	.LBB1245:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11200              		.loc 1 106 16 view .LVU3467
 11201 11de 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11202              		.loc 1 108 2 is_stmt 1 view .LVU3468
 11203              	.LVL949:
 108:src/keys.c    **** }
 11204              		.loc 1 108 2 is_stmt 0 view .LVU3469
 11205              	.LBE1245:
 11206              	.LBE1246:
 11207              	.LBE1248:
3336:src/keys.c    **** 
 11208              		.loc 1 3336 10 view .LVU3470
 11209 11e2 FFF7FEFF 		bl	process_catalogue
 11210              	.LVL950:
3336:src/keys.c    **** 
 11211              		.loc 1 3336 10 view .LVU3471
 11212 11e6 0446     		mov	r4, r0
 11213 11e8 FFF7FAB8 		b	.L835
 11214              	.LVL951:
 11215              	.L1165:
 11216              	.LBB1249:
 11217              	.LBB1003:
2363:src/keys.c    **** 	}
 11218              		.loc 1 2363 18 view .LVU3472
 11219 11ec 2724     		movs	r4, #39
ARM GAS  /tmp/ccXySG1f.s 			page 319


 11220              	.LVL952:
2363:src/keys.c    **** 	}
 11221              		.loc 1 2363 47 view .LVU3473
 11222 11ee 1C44     		add	r4, r4, r3
 11223 11f0 FFF7F6B8 		b	.L835
 11224              	.LVL953:
 11225              	.L1166:
2363:src/keys.c    **** 	}
 11226              		.loc 1 2363 18 view .LVU3474
 11227 11f4 1E24     		movs	r4, #30
 11228              	.LVL954:
2363:src/keys.c    **** 	}
 11229              		.loc 1 2363 47 view .LVU3475
 11230 11f6 1C44     		add	r4, r4, r3
 11231 11f8 FFF7F2B8 		b	.L835
 11232              	.LVL955:
 11233              	.L1350:
2363:src/keys.c    **** 	}
 11234              		.loc 1 2363 47 view .LVU3476
 11235              	.LBE1003:
 11236              	.LBE1249:
 11237              	.LBB1250:
 11238              	.LBB842:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11239              		.loc 1 294 27 view .LVU3477
 11240 11fc 242C     		cmp	r4, #36
 11241 11fe 7FF43EA8 		bne	.L921
 11242              	.L1140:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11243              		.loc 1 295 11 view .LVU3478
 11244 1202 1623     		movs	r3, #22
 11245 1204 FFF760BA 		b	.L904
 11246              	.LVL956:
 11247              	.L1366:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11248              		.loc 1 295 11 view .LVU3479
 11249              	.LBE842:
 11250              	.LBE1250:
 11251              	.LBB1251:
 11252              	.LBB1059:
2917:src/keys.c    **** 		return STATE_UNFINISHED;
 11253              		.loc 1 2917 3 is_stmt 1 view .LVU3480
 11254 1208 3368     		ldr	r3, [r6]
 11255              	.LVL957:
2917:src/keys.c    **** 		return STATE_UNFINISHED;
 11256              		.loc 1 2917 17 is_stmt 0 view .LVU3481
 11257 120a 88F80C00 		strb	r0, [r8, #12]
2918:src/keys.c    **** 	} 
 11258              		.loc 1 2918 3 is_stmt 1 view .LVU3482
 11259              	.LBE1059:
 11260              	.LBE1251:
3284:src/keys.c    **** 
 11261              		.loc 1 3284 10 is_stmt 0 view .LVU3483
 11262 120e 3324     		movs	r4, #51
 11263              	.LVL958:
 11264              	.LBB1252:
 11265              	.LBB1060:
ARM GAS  /tmp/ccXySG1f.s 			page 320


2918:src/keys.c    **** 	} 
 11266              		.loc 1 2918 10 view .LVU3484
 11267 1210 FEF751BF 		b	.L801
 11268              	.LVL959:
 11269              	.L1342:
2918:src/keys.c    **** 	} 
 11270              		.loc 1 2918 10 view .LVU3485
 11271              	.LBE1060:
 11272              	.LBE1252:
3340:src/keys.c    **** #else
 11273              		.loc 1 3340 3 is_stmt 1 view .LVU3486
 11274              	.LBB1253:
 11275              	.LBI1253:
1767:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11276              		.loc 1 1767 12 view .LVU3487
 11277              	.LBB1254:
1768:src/keys.c    ****         int op = STATE_UNFINISHED;
 11278              		.loc 1 1768 2 view .LVU3488
1768:src/keys.c    ****         int op = STATE_UNFINISHED;
 11279              		.loc 1 1768 33 is_stmt 0 view .LVU3489
 11280 1214 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 11281              	.LBB1255:
 11282              	.LBB1256:
 11283              	.LBB1257:
 11284              	.LBB1258:
 11285              	.LBB1259:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11286              		.loc 1 97 18 view .LVU3490
 11287 1218 FFF7FEFF 		bl	shift_down
 11288              	.LVL960:
 11289              	.LBE1259:
 11290              	.LBE1258:
 11291              	.LBE1257:
 11292              	.LBE1256:
 11293              	.LBE1255:
1768:src/keys.c    ****         int op = STATE_UNFINISHED;
 11294              		.loc 1 1768 15 view .LVU3491
 11295 121c CA46     		mov	r10, r9
 11296              	.LVL961:
1769:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11297              		.loc 1 1769 9 is_stmt 1 view .LVU3492
1770:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11298              		.loc 1 1770 2 view .LVU3493
 11299              	.LBB1268:
 11300              	.LBI1255:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11301              		.loc 1 114 13 view .LVU3494
 11302              	.LBE1268:
 11303              	.LBE1254:
 11304              	.LBE1253:
 11305              	.LBE1410:
 11306              	.LBE1483:
 115:src/keys.c    **** }
 11307              		.loc 1 115 2 view .LVU3495
 11308              	.LBB1484:
 11309              	.LBB1411:
 11310              	.LBB1318:
ARM GAS  /tmp/ccXySG1f.s 			page 321


 11311              	.LBB1306:
 11312              	.LBB1269:
 11313              	.LBB1265:
 11314              	.LBI1256:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11315              		.loc 1 104 20 view .LVU3496
 11316              	.LBB1262:
 105:src/keys.c    **** 	State2.shifts = shift;
 11317              		.loc 1 105 2 view .LVU3497
 11318              	.LBB1261:
 11319              	.LBI1258:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11320              		.loc 1 96 13 view .LVU3498
 11321              	.LBB1260:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11322              		.loc 1 97 2 view .LVU3499
  98:src/keys.c    **** }
 11323              		.loc 1 98 2 view .LVU3500
  98:src/keys.c    **** }
 11324              		.loc 1 98 52 is_stmt 0 view .LVU3501
 11325 121e 08B9     		cbnz	r0, .L999
 11326 1220 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 11327              	.LVL962:
 11328              	.L999:
  98:src/keys.c    **** }
 11329              		.loc 1 98 52 view .LVU3502
 11330              	.LBE1260:
 11331              	.LBE1261:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11332              		.loc 1 106 2 is_stmt 1 view .LVU3503
 11333              	.LBE1262:
 11334              	.LBE1265:
 11335              	.LBE1269:
 11336              	.LBB1270:
 11337              	.LBB1271:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11338              		.loc 1 485 6 is_stmt 0 view .LVU3504
 11339 1224 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 11340              	.LBE1271:
 11341              	.LBE1270:
 11342              	.LBB1287:
 11343              	.LBB1266:
 11344              	.LBB1263:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11345              		.loc 1 106 16 view .LVU3505
 11346 1228 4FF0000C 		mov	ip, #0
 11347              	.LBE1263:
 11348              	.LBE1266:
 11349              	.LBE1287:
 11350              	.LBB1288:
 11351              	.LBB1282:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11352              		.loc 1 485 5 view .LVU3506
 11353 122c CA06     		lsls	r2, r1, #27
 11354              	.LBE1282:
 11355              	.LBE1288:
 11356              	.LBB1289:
ARM GAS  /tmp/ccXySG1f.s 			page 322


 11357              	.LBB1267:
 11358              	.LBB1264:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11359              		.loc 1 106 16 view .LVU3507
 11360 122e 88F810C0 		strb	ip, [r8, #16]
 108:src/keys.c    **** }
 11361              		.loc 1 108 2 is_stmt 1 view .LVU3508
 11362              	.LVL963:
 108:src/keys.c    **** }
 11363              		.loc 1 108 2 is_stmt 0 view .LVU3509
 11364              	.LBE1264:
 11365              	.LBE1267:
 11366              	.LBE1289:
1771:src/keys.c    **** 	State2.alpha_pos = 0;
 11367              		.loc 1 1771 2 is_stmt 1 view .LVU3510
1771:src/keys.c    **** 	State2.alpha_pos = 0;
 11368              		.loc 1 1771 11 is_stmt 0 view .LVU3511
 11369 1232 0346     		mov	r3, r0
 11370              	.LVL964:
 11371              	.LBB1290:
 11372              	.LBI1270:
 435:src/keys.c    **** {
 11373              		.loc 1 435 12 is_stmt 1 view .LVU3512
 11374              	.LBB1283:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11375              		.loc 1 437 2 view .LVU3513
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11376              		.loc 1 485 2 view .LVU3514
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11377              		.loc 1 485 5 is_stmt 0 view .LVU3515
 11378 1234 54D5     		bpl	.L1000
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11379              		.loc 1 486 3 is_stmt 1 view .LVU3516
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11380              		.loc 1 486 6 is_stmt 0 view .LVU3517
 11381 1236 0028     		cmp	r0, #0
 11382 1238 51D0     		beq	.L1154
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11383              		.loc 1 488 8 is_stmt 1 view .LVU3518
 11384              	.LBB1272:
 11385              	.LBB1273:
 143:src/keys.c    **** }
 11386              		.loc 1 143 23 is_stmt 0 view .LVU3519
 11387 123a AC4A     		ldr	r2, .L1411+4
 11388              	.LBE1273:
 11389              	.LBE1272:
 491:src/keys.c    **** }
 11390              		.loc 1 491 49 view .LVU3520
 11391 123c AC4B     		ldr	r3, .L1411+8
 11392              	.LBB1278:
 11393              	.LBB1274:
 143:src/keys.c    **** }
 11394              		.loc 1 143 23 view .LVU3521
 11395 123e 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11396              	.LBE1274:
 11397              	.LBE1278:
 11398              	.LBE1283:
ARM GAS  /tmp/ccXySG1f.s 			page 323


 11399              	.LBE1290:
1772:src/keys.c    **** 
 11400              		.loc 1 1772 19 view .LVU3522
 11401 1240 88F80DC0 		strb	ip, [r8, #13]
 11402              	.LBB1291:
 11403              	.LBB1284:
 489:src/keys.c    **** 	}
 11404              		.loc 1 489 10 view .LVU3523
 11405 1244 0228     		cmp	r0, #2
 491:src/keys.c    **** }
 11406              		.loc 1 491 49 view .LVU3524
 11407 1246 4FF0060C 		mov	ip, #6
 11408 124a 0CFB0232 		mla	r2, ip, r2, r3
 489:src/keys.c    **** 	}
 11409              		.loc 1 489 10 view .LVU3525
 11410 124e 14BF     		ite	ne
 11411 1250 0346     		movne	r3, r0
 11412 1252 0523     		moveq	r3, #5
 11413              	.LVL965:
 491:src/keys.c    **** }
 11414              		.loc 1 491 2 is_stmt 1 view .LVU3526
 11415              	.LBB1279:
 11416              	.LBI1272:
 131:src/keys.c    **** {
 11417              		.loc 1 131 12 view .LVU3527
 11418              	.LBB1275:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11419              		.loc 1 133 2 view .LVU3528
 143:src/keys.c    **** }
 11420              		.loc 1 143 2 view .LVU3529
 143:src/keys.c    **** }
 11421              		.loc 1 143 2 is_stmt 0 view .LVU3530
 11422 1254 063C     		subs	r4, r4, #6
 11423              	.LVL966:
 143:src/keys.c    **** }
 11424              		.loc 1 143 2 view .LVU3531
 11425              	.LBE1275:
 11426              	.LBE1279:
 491:src/keys.c    **** }
 11427              		.loc 1 491 49 view .LVU3532
 11428 1256 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11429              	.LVL967:
 491:src/keys.c    **** }
 11430              		.loc 1 491 49 view .LVU3533
 11431              	.LBE1284:
 11432              	.LBE1291:
1772:src/keys.c    **** 
 11433              		.loc 1 1772 2 is_stmt 1 view .LVU3534
1774:src/keys.c    **** 	case K10:	// STO
 11434              		.loc 1 1774 2 view .LVU3535
 11435 1258 212C     		cmp	r4, #33
 11436 125a 23D8     		bhi	.L1003
 11437 125c DFE814F0 		tbh	[pc, r4, lsl #1]
 11438              	.L1113:
 11439 1260 E402     		.2byte	(.L1012-.L1113)/2
 11440 1262 A802     		.2byte	(.L1011-.L1113)/2
 11441 1264 2200     		.2byte	(.L1003-.L1113)/2
ARM GAS  /tmp/ccXySG1f.s 			page 324


 11442 1266 2200     		.2byte	(.L1003-.L1113)/2
 11443 1268 2200     		.2byte	(.L1003-.L1113)/2
 11444 126a 2200     		.2byte	(.L1003-.L1113)/2
 11445 126c BB02     		.2byte	(.L1010-.L1113)/2
 11446 126e 2200     		.2byte	(.L1003-.L1113)/2
 11447 1270 2200     		.2byte	(.L1003-.L1113)/2
 11448 1272 2200     		.2byte	(.L1003-.L1113)/2
 11449 1274 7D02     		.2byte	(.L1019-.L1113)/2
 11450 1276 2200     		.2byte	(.L1003-.L1113)/2
 11451 1278 2C05     		.2byte	(.L1008-.L1113)/2
 11452 127a 2200     		.2byte	(.L1003-.L1113)/2
 11453 127c 2200     		.2byte	(.L1003-.L1113)/2
 11454 127e 2200     		.2byte	(.L1003-.L1113)/2
 11455 1280 2200     		.2byte	(.L1003-.L1113)/2
 11456 1282 2200     		.2byte	(.L1003-.L1113)/2
 11457 1284 1A05     		.2byte	(.L1007-.L1113)/2
 11458 1286 2200     		.2byte	(.L1003-.L1113)/2
 11459 1288 2200     		.2byte	(.L1003-.L1113)/2
 11460 128a 2200     		.2byte	(.L1003-.L1113)/2
 11461 128c 2200     		.2byte	(.L1003-.L1113)/2
 11462 128e 2200     		.2byte	(.L1003-.L1113)/2
 11463 1290 2200     		.2byte	(.L1003-.L1113)/2
 11464 1292 2200     		.2byte	(.L1003-.L1113)/2
 11465 1294 2200     		.2byte	(.L1003-.L1113)/2
 11466 1296 2200     		.2byte	(.L1003-.L1113)/2
 11467 1298 2200     		.2byte	(.L1003-.L1113)/2
 11468 129a 2200     		.2byte	(.L1003-.L1113)/2
 11469 129c 0405     		.2byte	(.L1006-.L1113)/2
 11470 129e 2200     		.2byte	(.L1003-.L1113)/2
 11471 12a0 2200     		.2byte	(.L1003-.L1113)/2
 11472 12a2 F804     		.2byte	(.L1004-.L1113)/2
 11473              	.LVL968:
 11474              		.p2align 1
 11475              	.L1003:
1881:src/keys.c    **** 		return STATE_UNFINISHED;
 11476              		.loc 1 1881 2 view .LVU3536
1881:src/keys.c    **** 		return STATE_UNFINISHED;
 11477              		.loc 1 1881 5 is_stmt 0 view .LVU3537
 11478 12a4 002A     		cmp	r2, #0
 11479 12a6 3FF4D7AB 		beq	.L1307
1883:src/keys.c    **** }
 11480              		.loc 1 1883 2 is_stmt 1 view .LVU3538
1883:src/keys.c    **** }
 11481              		.loc 1 1883 9 is_stmt 0 view .LVU3539
 11482 12aa 42F48844 		orr	r4, r2, #17408
 11483 12ae 2046     		mov	r0, r4
 11484              	.LVL969:
1883:src/keys.c    **** }
 11485              		.loc 1 1883 9 view .LVU3540
 11486 12b0 FFF7B8B8 		b	.L862
 11487              	.LVL970:
 11488              	.L1360:
1883:src/keys.c    **** }
 11489              		.loc 1 1883 9 view .LVU3541
 11490              	.LBE1306:
 11491              	.LBE1318:
 11492              	.LBB1319:
ARM GAS  /tmp/ccXySG1f.s 			page 325


 11493              	.LBB1021:
1720:src/keys.c    **** 		goto fin;
 11494              		.loc 1 1720 3 is_stmt 1 view .LVU3542
1720:src/keys.c    **** 		goto fin;
 11495              		.loc 1 1720 11 is_stmt 0 view .LVU3543
 11496 12b4 8F4B     		ldr	r3, .L1411+12
 11497              	.LVL971:
1720:src/keys.c    **** 		goto fin;
 11498              		.loc 1 1720 11 view .LVU3544
 11499 12b6 1B68     		ldr	r3, [r3]
1720:src/keys.c    **** 		goto fin;
 11500              		.loc 1 1720 9 view .LVU3545
 11501 12b8 5888     		ldrh	r0, [r3, #2]
 11502              	.LVL972:
1721:src/keys.c    **** 	}
 11503              		.loc 1 1721 3 is_stmt 1 view .LVU3546
 11504 12ba FFF7DCBA 		b	.L847
 11505              	.LVL973:
 11506              	.L1037:
1721:src/keys.c    **** 	}
 11507              		.loc 1 1721 3 is_stmt 0 view .LVU3547
 11508              	.LBE1021:
 11509              	.LBE1319:
 11510              	.LBB1320:
 11511              	.LBB937:
1290:src/keys.c    ****      return process_fg_shifted (c);
 11512              		.loc 1 1290 4 is_stmt 1 view .LVU3548
1290:src/keys.c    ****      return process_fg_shifted (c);
 11513              		.loc 1 1290 7 is_stmt 0 view .LVU3549
 11514 12be 631F     		subs	r3, r4, #5
 11515 12c0 032B     		cmp	r3, #3
 11516 12c2 40F20781 		bls	.L1301
1294:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 11517              		.loc 1 1294 4 is_stmt 1 view .LVU3550
1294:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 11518              		.loc 1 1294 7 is_stmt 0 view .LVU3551
 11519 12c6 0F2C     		cmp	r4, #15
 11520 12c8 40F00483 		bne	.L1295
 11521              	.L1118:
 11522              	.LVL974:
1321:src/keys.c    ****      switch (c) {
 11523              		.loc 1 1321 6 is_stmt 1 view .LVU3552
 11524 12cc 0020     		movs	r0, #0
 11525 12ce FFF7FEFF 		bl	finish_cpx_entry
 11526              	.LVL975:
1322:src/keys.c    ****      case (K60):
 11527              		.loc 1 1322 6 view .LVU3553
 11528              	.L1303:
1322:src/keys.c    ****      case (K60):
 11529              		.loc 1 1322 6 is_stmt 0 view .LVU3554
 11530              	.LBE937:
 11531              	.LBE1320:
3356:src/keys.c    **** 	} else {
 11532              		.loc 1 3356 3 is_stmt 1 view .LVU3555
3356:src/keys.c    **** 	} else {
 11533              		.loc 1 3356 10 is_stmt 0 view .LVU3556
 11534 12d2 2046     		mov	r0, r4
ARM GAS  /tmp/ccXySG1f.s 			page 326


 11535              	.L1302:
 11536 12d4 FFF7FEFF 		bl	process_cmplx
 11537              	.LVL976:
 11538 12d8 0446     		mov	r4, r0
 11539 12da FFF781B8 		b	.L835
 11540              	.LVL977:
 11541              	.L1154:
 11542              	.LBB1321:
 11543              	.LBB1307:
 11544              	.LBB1292:
 11545              	.LBB1285:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11546              		.loc 1 487 10 view .LVU3557
 11547 12de 0423     		movs	r3, #4
 11548              	.L1000:
 11549              	.LVL978:
 491:src/keys.c    **** }
 11550              		.loc 1 491 2 is_stmt 1 view .LVU3558
 11551              	.LBB1280:
 131:src/keys.c    **** {
 11552              		.loc 1 131 12 view .LVU3559
 11553              	.LBB1276:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11554              		.loc 1 133 2 view .LVU3560
 143:src/keys.c    **** }
 11555              		.loc 1 143 2 view .LVU3561
 143:src/keys.c    **** }
 11556              		.loc 1 143 23 is_stmt 0 view .LVU3562
 11557 12e0 824A     		ldr	r2, .L1411+4
 11558              	.LBE1276:
 11559              	.LBE1280:
 491:src/keys.c    **** }
 11560              		.loc 1 491 49 view .LVU3563
 11561 12e2 DFF80CC2 		ldr	ip, .L1411+8
 11562              	.LBB1281:
 11563              	.LBB1277:
 143:src/keys.c    **** }
 11564              		.loc 1 143 23 view .LVU3564
 11565 12e6 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11566              	.LBE1277:
 11567              	.LBE1281:
 491:src/keys.c    **** }
 11568              		.loc 1 491 49 view .LVU3565
 11569 12e8 4FF0060E 		mov	lr, #6
 11570 12ec 0EFB02C2 		mla	r2, lr, r2, ip
 11571 12f0 063C     		subs	r4, r4, #6
 11572              	.LVL979:
 491:src/keys.c    **** }
 11573              		.loc 1 491 49 view .LVU3566
 11574              	.LBE1285:
 11575              	.LBE1292:
1772:src/keys.c    **** 
 11576              		.loc 1 1772 19 view .LVU3567
 11577 12f2 4FF0000C 		mov	ip, #0
 11578              	.LBB1293:
 11579              	.LBB1286:
 491:src/keys.c    **** }
ARM GAS  /tmp/ccXySG1f.s 			page 327


 11580              		.loc 1 491 49 view .LVU3568
 11581 12f6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11582              	.LVL980:
 491:src/keys.c    **** }
 11583              		.loc 1 491 49 view .LVU3569
 11584              	.LBE1286:
 11585              	.LBE1293:
1772:src/keys.c    **** 
 11586              		.loc 1 1772 2 is_stmt 1 view .LVU3570
1772:src/keys.c    **** 
 11587              		.loc 1 1772 19 is_stmt 0 view .LVU3571
 11588 12f8 88F80DC0 		strb	ip, [r8, #13]
1774:src/keys.c    **** 	case K10:	// STO
 11589              		.loc 1 1774 2 is_stmt 1 view .LVU3572
 11590 12fc 212C     		cmp	r4, #33
 11591 12fe D1D8     		bhi	.L1003
 11592 1300 01A3     		adr	r3, .L1005
 11593 1302 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11594 1306 00BF     		.p2align 2
 11595              	.L1005:
 11596 1308 29180000 		.word	.L1012+1
 11597 130c B1170000 		.word	.L1011+1
 11598 1310 A5120000 		.word	.L1003+1
 11599 1314 A5120000 		.word	.L1003+1
 11600 1318 A5120000 		.word	.L1003+1
 11601 131c A5120000 		.word	.L1003+1
 11602 1320 D7170000 		.word	.L1010+1
 11603 1324 A5120000 		.word	.L1003+1
 11604 1328 A5120000 		.word	.L1003+1
 11605 132c A5120000 		.word	.L1003+1
 11606 1330 55170000 		.word	.L1009+1
 11607 1334 A5120000 		.word	.L1003+1
 11608 1338 B91C0000 		.word	.L1008+1
 11609 133c A5120000 		.word	.L1003+1
 11610 1340 A5120000 		.word	.L1003+1
 11611 1344 A5120000 		.word	.L1003+1
 11612 1348 A5120000 		.word	.L1003+1
 11613 134c A5120000 		.word	.L1003+1
 11614 1350 951C0000 		.word	.L1007+1
 11615 1354 A5120000 		.word	.L1003+1
 11616 1358 A5120000 		.word	.L1003+1
 11617 135c A5120000 		.word	.L1003+1
 11618 1360 A5120000 		.word	.L1003+1
 11619 1364 A5120000 		.word	.L1003+1
 11620 1368 A5120000 		.word	.L1003+1
 11621 136c A5120000 		.word	.L1003+1
 11622 1370 A5120000 		.word	.L1003+1
 11623 1374 A5120000 		.word	.L1003+1
 11624 1378 A5120000 		.word	.L1003+1
 11625 137c A5120000 		.word	.L1003+1
 11626 1380 691C0000 		.word	.L1006+1
 11627 1384 A5120000 		.word	.L1003+1
 11628 1388 A5120000 		.word	.L1003+1
 11629 138c 511C0000 		.word	.L1004+1
 11630              	.LVL981:
 11631              		.p2align 1
 11632              	.L1362:
ARM GAS  /tmp/ccXySG1f.s 			page 328


1774:src/keys.c    **** 	case K10:	// STO
 11633              		.loc 1 1774 2 is_stmt 0 view .LVU3573
 11634              	.LBE1307:
 11635              	.LBE1321:
 11636              	.LBB1322:
 11637              	.LBB1022:
1729:src/keys.c    **** 			goto fin2;
 11638              		.loc 1 1729 3 is_stmt 1 view .LVU3574
1729:src/keys.c    **** 			goto fin2;
 11639              		.loc 1 1729 13 is_stmt 0 view .LVU3575
 11640 1390 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11641              	.LVL982:
1729:src/keys.c    **** 			goto fin2;
 11642              		.loc 1 1729 6 view .LVU3576
 11643 1394 002B     		cmp	r3, #0
 11644 1396 3FF470AA 		beq	.L851
1732:src/keys.c    **** 			State2.digval /= 10;
 11645              		.loc 1 1732 4 is_stmt 1 view .LVU3577
1732:src/keys.c    **** 			State2.digval /= 10;
 11646              		.loc 1 1732 19 is_stmt 0 view .LVU3578
 11647 139a 013B     		subs	r3, r3, #1
1733:src/keys.c    **** 		}
 11648              		.loc 1 1733 18 view .LVU3579
 11649 139c B8F80820 		ldrh	r2, [r8, #8]
 11650              	.LVL983:
1732:src/keys.c    **** 			State2.digval /= 10;
 11651              		.loc 1 1732 19 view .LVU3580
 11652 13a0 88F80B30 		strb	r3, [r8, #11]
1733:src/keys.c    **** 		}
 11653              		.loc 1 1733 4 is_stmt 1 view .LVU3581
1733:src/keys.c    **** 		}
 11654              		.loc 1 1733 18 is_stmt 0 view .LVU3582
 11655 13a4 0A21     		movs	r1, #10
 11656 13a6 3368     		ldr	r3, [r6]
 11657 13a8 B2FBF1F2 		udiv	r2, r2, r1
 11658              	.LBE1022:
 11659              	.LBE1322:
3275:src/keys.c    **** 
 11660              		.loc 1 3275 10 view .LVU3583
 11661 13ac 3324     		movs	r4, #51
 11662              	.LVL984:
 11663              	.LBB1323:
 11664              	.LBB1023:
1733:src/keys.c    **** 		}
 11665              		.loc 1 1733 18 view .LVU3584
 11666 13ae A8F80820 		strh	r2, [r8, #8]	@ movhi
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11667              		.loc 1 1754 2 is_stmt 1 view .LVU3585
 11668 13b2 FEF780BE 		b	.L801
 11669              	.LVL985:
 11670              	.L1372:
1754:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11671              		.loc 1 1754 2 is_stmt 0 view .LVU3586
 11672              	.LBE1023:
 11673              	.LBE1323:
 11674              	.LBB1324:
 11675              	.LBB1135:
ARM GAS  /tmp/ccXySG1f.s 			page 329


2807:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11676              		.loc 1 2807 3 is_stmt 1 view .LVU3587
2807:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11677              		.loc 1 2807 12 is_stmt 0 view .LVU3588
 11678 13b6 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 11679 13ba A2F1020C 		sub	ip, r2, #2
 11680 13be DCF10002 		rsbs	r2, ip, #0
 11681 13c2 2046     		mov	r0, r4
 11682 13c4 42EB0C02 		adc	r2, r2, ip
 11683 13c8 FFF7FEFF 		bl	process_catalogue
 11684              	.LVL986:
2808:src/keys.c    **** 			return opcode;
 11685              		.loc 1 2808 6 view .LVU3589
 11686 13cc 3328     		cmp	r0, #51
2807:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11687              		.loc 1 2807 12 view .LVU3590
 11688 13ce 0446     		mov	r4, r0
 11689              	.LVL987:
2808:src/keys.c    **** 			return opcode;
 11690              		.loc 1 2808 3 is_stmt 1 view .LVU3591
2808:src/keys.c    **** 			return opcode;
 11691              		.loc 1 2808 6 is_stmt 0 view .LVU3592
 11692 13d0 3EF470AE 		beq	.L1304
2810:src/keys.c    **** 		goto add_char;
 11693              		.loc 1 2810 3 is_stmt 1 view .LVU3593
2810:src/keys.c    **** 		goto add_char;
 11694              		.loc 1 2810 6 is_stmt 0 view .LVU3594
 11695 13d4 C4B2     		uxtb	r4, r0
 11696              	.LVL988:
2811:src/keys.c    **** 	}
 11697              		.loc 1 2811 3 is_stmt 1 view .LVU3595
 11698 13d6 2DE4     		b	.L930
 11699              	.LVL989:
 11700              	.L1344:
2811:src/keys.c    **** 	}
 11701              		.loc 1 2811 3 is_stmt 0 view .LVU3596
 11702              	.LBE1135:
 11703              	.LBE1324:
3361:src/keys.c    **** 		// print_debug (3, c);
 11704              		.loc 1 3361 4 is_stmt 1 view .LVU3597
3361:src/keys.c    **** 		// print_debug (3, c);
 11705              		.loc 1 3361 11 is_stmt 0 view .LVU3598
 11706 13d8 FFF7FEFF 		bl	process_h_shifted
 11707              	.LVL990:
 11708 13dc 0446     		mov	r4, r0
 11709 13de FEF7FFBF 		b	.L835
 11710              	.LVL991:
 11711              	.L1352:
3243:src/keys.c    **** 	CLEAR_REAL;
 11712              		.loc 1 3243 2 is_stmt 1 view .LVU3599
 11713              	.LBB1325:
 11714              	.LBI1325:
1235:src/keys.c    **** 	// called if number entry terminated by EXIT key
 11715              		.loc 1 1235 13 view .LVU3600
 11716              	.LBB1326:
1239:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11717              		.loc 1 1239 2 view .LVU3601
ARM GAS  /tmp/ccXySG1f.s 			page 330


1239:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11718              		.loc 1 1239 5 is_stmt 0 view .LVU3602
 11719 13e2 13F0060F 		tst	r3, #6
 11720 13e6 2FD0     		beq	.L816
1240:src/keys.c    **** 		drop ( OP_DROPXY );
 11721              		.loc 1 1240 2 is_stmt 1 view .LVU3603
1240:src/keys.c    **** 		drop ( OP_DROPXY );
 11722              		.loc 1 1240 5 is_stmt 0 view .LVU3604
 11723 13e8 D906     		lsls	r1, r3, #27
 11724 13ea 40F14C81 		bpl	.L817
1241:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 11725              		.loc 1 1241 3 is_stmt 1 view .LVU3605
 11726 13ee 0F20     		movs	r0, #15
 11727 13f0 FFF7FEFF 		bl	drop
 11728              	.LVL992:
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11729              		.loc 1 1242 3 view .LVU3606
 11730 13f4 6A20     		movs	r0, #106
 11731 13f6 FFF7FEFF 		bl	get_reg_n
 11732              	.LVL993:
 11733 13fa 0446     		mov	r4, r0
 11734              	.LVL994:
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11735              		.loc 1 1242 33 is_stmt 0 view .LVU3607
 11736 13fc 6E20     		movs	r0, #110
 11737 13fe FFF7FEFF 		bl	get_reg_n
 11738              	.LVL995:
 11739 1402 0146     		mov	r1, r0
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11740              		.loc 1 1242 3 view .LVU3608
 11741 1404 2046     		mov	r0, r4
 11742 1406 FFF7FEFF 		bl	copyreg
 11743              	.LVL996:
1243:src/keys.c    **** 	}
 11744              		.loc 1 1243 3 is_stmt 1 view .LVU3609
 11745 140a 6B20     		movs	r0, #107
 11746              	.L1297:
1247:src/keys.c    **** 	}
 11747              		.loc 1 1247 3 is_stmt 0 view .LVU3610
 11748 140c FFF7FEFF 		bl	get_reg_n
 11749              	.LVL997:
 11750 1410 0446     		mov	r4, r0
1247:src/keys.c    **** 	}
 11751              		.loc 1 1247 33 view .LVU3611
 11752 1412 6F20     		movs	r0, #111
 11753 1414 FFF7FEFF 		bl	get_reg_n
 11754              	.LVL998:
 11755 1418 0146     		mov	r1, r0
1247:src/keys.c    **** 	}
 11756              		.loc 1 1247 3 view .LVU3612
 11757 141a 2046     		mov	r0, r4
 11758 141c FFF7FEFF 		bl	copyreg
 11759              	.LVL999:
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11760              		.loc 1 1249 2 is_stmt 1 view .LVU3613
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11761              		.loc 1 1249 22 is_stmt 0 view .LVU3614
ARM GAS  /tmp/ccXySG1f.s 			page 331


 11762 1420 DAF80020 		ldr	r2, [r10]
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11763              		.loc 1 1249 20 view .LVU3615
 11764 1424 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11765              		.loc 1 1249 22 view .LVU3616
 11766 1428 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11767 142c C3F30013 		ubfx	r3, r3, #4, #1
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11768              		.loc 1 1249 20 view .LVU3617
 11769 1430 63F38611 		bfi	r1, r3, #6, #1
 11770 1434 88F81710 		strb	r1, [r8, #23]
1250:src/keys.c    **** 	CLEAR_POLAR_READY;
 11771              		.loc 1 1250 2 is_stmt 1 view .LVU3618
1251:src/keys.c    **** }
 11772              		.loc 1 1251 2 view .LVU3619
1250:src/keys.c    **** 	CLEAR_POLAR_READY;
 11773              		.loc 1 1250 2 is_stmt 0 view .LVU3620
 11774 1438 B2F8AC37 		ldrh	r3, [r2, #1964]
 11775 143c 23F48873 		bic	r3, r3, #272
 11776 1440 43F48073 		orr	r3, r3, #256
 11777 1444 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 11778              	.L816:
 11779              	.LBE1326:
 11780              	.LBE1325:
3244:src/keys.c    **** 	CLEAR_IMAG;
 11781              		.loc 1 3244 2 is_stmt 1 view .LVU3621
 11782 1448 DAF80020 		ldr	r2, [r10]
3245:src/keys.c    ****       }
 11783              		.loc 1 3245 2 view .LVU3622
3244:src/keys.c    **** 	CLEAR_IMAG;
 11784              		.loc 1 3244 2 is_stmt 0 view .LVU3623
 11785 144c 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11786 1450 23F00603 		bic	r3, r3, #6
 11787 1454 82F8AC37 		strb	r3, [r2, #1964]
 11788 1458 FFF78CB9 		b	.L815
 11789              	.LVL1000:
 11790              	.L1373:
 11791              	.LBB1328:
 11792              	.LBB1136:
2816:src/keys.c    **** 				break;
 11793              		.loc 1 2816 3 is_stmt 1 view .LVU3624
2816:src/keys.c    **** 				break;
 11794              		.loc 1 2816 6 is_stmt 0 view .LVU3625
 11795 145c 0029     		cmp	r1, #0
 11796 145e 7FF4D7AB 		bne	.L933
2818:src/keys.c    **** 		if (State2.numdigit == 0)
 11797              		.loc 1 2818 3 is_stmt 1 view .LVU3626
 11798              	.LBB1125:
 11799              	.LBI1125:
2793:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 11800              		.loc 1 2793 13 view .LVU3627
 11801              	.LBB1126:
2795:src/keys.c    **** 	if (! State2.alphas )
 11802              		.loc 1 2795 2 view .LVU3628
2796:src/keys.c    **** 		State2.alphashift = 0;
 11803              		.loc 1 2796 6 is_stmt 0 view .LVU3629
ARM GAS  /tmp/ccXySG1f.s 			page 332


 11804 1462 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2795:src/keys.c    **** 	if (! State2.alphas )
 11805              		.loc 1 2795 15 view .LVU3630
 11806 1466 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2796:src/keys.c    **** 		State2.alphashift = 0;
 11807              		.loc 1 2796 5 view .LVU3631
 11808 146a 1C07     		lsls	r4, r3, #28
 11809              	.LVL1001:
2797:src/keys.c    **** }
 11810              		.loc 1 2797 21 view .LVU3632
 11811 146c 5CBF     		itt	pl
 11812 146e 61F30413 		bfipl	r3, r1, #4, #1
 11813 1472 88F81630 		strbpl	r3, [r8, #22]
 11814              	.LBE1126:
 11815              	.LBE1125:
2819:src/keys.c    **** 			return STATE_UNFINISHED;
 11816              		.loc 1 2819 13 view .LVU3633
 11817 1476 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11818              	.LBB1128:
 11819              	.LBB1127:
2795:src/keys.c    **** 	if (! State2.alphas )
 11820              		.loc 1 2795 15 view .LVU3634
 11821 147a 61F3C302 		bfi	r2, r1, #3, #1
 11822 147e 88F81520 		strb	r2, [r8, #21]
2796:src/keys.c    **** 		State2.alphashift = 0;
 11823              		.loc 1 2796 2 is_stmt 1 view .LVU3635
2797:src/keys.c    **** }
 11824              		.loc 1 2797 3 view .LVU3636
 11825              	.LBE1127:
 11826              	.LBE1128:
2819:src/keys.c    **** 			return STATE_UNFINISHED;
 11827              		.loc 1 2819 3 view .LVU3637
2819:src/keys.c    **** 			return STATE_UNFINISHED;
 11828              		.loc 1 2819 6 is_stmt 0 view .LVU3638
 11829 1482 002B     		cmp	r3, #0
 11830 1484 3FF42EA9 		beq	.L1309
2821:src/keys.c    **** 			State2.digval2 = 0;
 11831              		.loc 1 2821 8 is_stmt 1 view .LVU3639
2821:src/keys.c    **** 			State2.digval2 = 0;
 11832              		.loc 1 2821 11 is_stmt 0 view .LVU3640
 11833 1488 012B     		cmp	r3, #1
2822:src/keys.c    **** 		goto fin;
 11834              		.loc 1 2822 19 view .LVU3641
 11835 148a 4FF00004 		mov	r4, #0
2821:src/keys.c    **** 			State2.digval2 = 0;
 11836              		.loc 1 2821 11 view .LVU3642
 11837 148e 7FF4E8AB 		bne	.L936
2822:src/keys.c    **** 		goto fin;
 11838              		.loc 1 2822 4 is_stmt 1 view .LVU3643
2822:src/keys.c    **** 		goto fin;
 11839              		.loc 1 2822 19 is_stmt 0 view .LVU3644
 11840 1492 88F80A40 		strb	r4, [r8, #10]
 11841 1496 FFF7E4BB 		b	.L936
 11842              	.LVL1002:
 11843              	.L1336:
2822:src/keys.c    **** 		goto fin;
 11844              		.loc 1 2822 19 view .LVU3645
ARM GAS  /tmp/ccXySG1f.s 			page 333


 11845 149a 0093     		str	r3, [sp]
 11846              	.LBE1136:
 11847              	.LBE1328:
 11848              	.LBB1329:
 11849              	.LBB843:
 11850              	.LBB832:
 373:src/keys.c    **** #else
 11851              		.loc 1 373 45 view .LVU3646
 11852 149c FFF7FEFF 		bl	shift_down
 11853              	.LVL1003:
 373:src/keys.c    **** #else
 11854              		.loc 1 373 42 view .LVU3647
 11855 14a0 0328     		cmp	r0, #3
 11856 14a2 00F0E880 		beq	.L917
 373:src/keys.c    **** #else
 11857              		.loc 1 373 73 view .LVU3648
 11858 14a6 009B     		ldr	r3, [sp]
 11859 14a8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 11860 14ac 9C46     		mov	ip, r3
 377:src/keys.c    ****   }
 11861              		.loc 1 377 9 view .LVU3649
 11862 14ae 0C21     		movs	r1, #12
 371:src/keys.c    **** #ifndef WINGUI
 11863              		.loc 1 371 8 view .LVU3650
 11864 14b0 0D4B     		ldr	r3, .L1411
 11865 14b2 FEF7D8BE 		b	.L916
 11866              	.LVL1004:
 11867              	.L1367:
 371:src/keys.c    **** #ifndef WINGUI
 11868              		.loc 1 371 8 view .LVU3651
 11869              	.LBE832:
 11870              	.LBE843:
 11871              	.LBE1329:
 11872              	.LBB1330:
 11873              	.LBB1061:
 11874              	.LBB1053:
2925:src/keys.c    **** 		else if (nn != NO_REG)
 11875              		.loc 1 2925 4 is_stmt 1 view .LVU3652
2927:src/keys.c    **** 	}
 11876              		.loc 1 2927 6 is_stmt 0 view .LVU3653
 11877 14b6 9942     		cmp	r1, r3
 11878 14b8 08BF     		it	eq
 11879 14ba 0A23     		moveq	r3, #10
 11880              	.LVL1005:
2927:src/keys.c    **** 	}
 11881              		.loc 1 2927 6 view .LVU3654
 11882 14bc FFF786BA 		b	.L884
 11883              	.LVL1006:
 11884              	.L1034:
2927:src/keys.c    **** 	}
 11885              		.loc 1 2927 6 view .LVU3655
 11886              	.LBE1053:
 11887              	.LBE1061:
 11888              	.LBE1330:
 11889              	.LBB1331:
 11890              	.LBB938:
1287:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
ARM GAS  /tmp/ccXySG1f.s 			page 334


 11891              		.loc 1 1287 4 is_stmt 1 view .LVU3656
1287:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 11892              		.loc 1 1287 7 is_stmt 0 view .LVU3657
 11893 14c0 BBF1020F 		cmp	fp, #2
 11894 14c4 69D1     		bne	.L1036
1287:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 11895              		.loc 1 1287 28 view .LVU3658
 11896 14c6 A01F     		subs	r0, r4, #6
 11897 14c8 C0B2     		uxtb	r0, r0
 11898 14ca 0228     		cmp	r0, #2
 11899 14cc 3FF6F7AE 		bhi	.L1037
1288:src/keys.c    ****    }
 11900              		.loc 1 1288 6 is_stmt 1 view .LVU3659
 11901 14d0 FFF7FEFF 		bl	convert_regK
 11902              	.LVL1007:
1290:src/keys.c    ****      return process_fg_shifted (c);
 11903              		.loc 1 1290 4 view .LVU3660
 11904              	.L1301:
1290:src/keys.c    ****      return process_fg_shifted (c);
 11905              		.loc 1 1290 4 is_stmt 0 view .LVU3661
 11906              	.LBE938:
 11907              	.LBE1331:
3359:src/keys.c    **** 		if (shift == SHIFT_H)
 11908              		.loc 1 3359 4 is_stmt 1 view .LVU3662
3359:src/keys.c    **** 		if (shift == SHIFT_H)
 11909              		.loc 1 3359 11 is_stmt 0 view .LVU3663
 11910 14d4 2046     		mov	r0, r4
 11911 14d6 FFF7FEFF 		bl	process_fg_shifted
 11912              	.LVL1008:
 11913 14da 0446     		mov	r4, r0
 11914 14dc FEF780BF 		b	.L835
 11915              	.LVL1009:
 11916              	.L1380:
 11917              	.LBB1332:
 11918              	.LBB1228:
3117:src/keys.c    **** 	const int g_max = global_regs();
 11919              		.loc 1 3117 33 view .LVU3664
 11920 14e0 FFF7FEFF 		bl	local_regs
 11921              	.LVL1010:
 11922 14e4 8246     		mov	r10, r0
 11923 14e6 9EE5     		b	.L973
 11924              	.L1412:
 11925              		.align	2
 11926              	.L1411:
 11927 14e8 00000000 		.word	.LANCHOR17
 11928 14ec 00000000 		.word	.LANCHOR6
 11929 14f0 00000000 		.word	.LANCHOR15
 11930 14f4 00000000 		.word	main_ram
 11931              	.LVL1011:
 11932              	.L1383:
3133:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11933              		.loc 1 3133 50 view .LVU3665
 11934 14f8 0D2C     		cmp	r4, #13
 11935 14fa 7FF4A4AD 		bne	.L981
3134:src/keys.c    **** 		set_smode(SDISP_SHOW);
 11936              		.loc 1 3134 3 is_stmt 1 view .LVU3666
 11937 14fe B9F1010F 		cmp	r9, #1
ARM GAS  /tmp/ccXySG1f.s 			page 335


 11938 1502 14BF     		ite	ne
 11939 1504 2C20     		movne	r0, #44
 11940              	.LVL1012:
3134:src/keys.c    **** 		set_smode(SDISP_SHOW);
 11941              		.loc 1 3134 3 is_stmt 0 view .LVU3667
 11942 1506 2B20     		moveq	r0, #43
 11943 1508 FFF7FEFF 		bl	set_window
 11944              	.LVL1013:
3135:src/keys.c    **** 	}
 11945              		.loc 1 3135 3 is_stmt 1 view .LVU3668
 11946              	.LBB1224:
 11947              	.LBI1224:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 11948              		.loc 1 731 13 view .LVU3669
 11949              	.LBB1225:
 732:src/keys.c    **** }
 11950              		.loc 1 732 2 view .LVU3670
 732:src/keys.c    **** }
 11951              		.loc 1 732 15 is_stmt 0 view .LVU3671
 11952 150c 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 11953 1510 3368     		ldr	r3, [r6]
 11954 1512 013A     		subs	r2, r2, #1
 11955 1514 18BF     		it	ne
 11956 1516 0122     		movne	r2, #1
 11957 1518 88F81120 		strb	r2, [r8, #17]
 11958              	.LVL1014:
 732:src/keys.c    **** }
 11959              		.loc 1 732 15 view .LVU3672
 11960              	.LBE1225:
 11961              	.LBE1224:
3142:src/keys.c    **** 	case K_DOWN:
 11962              		.loc 1 3142 2 is_stmt 1 view .LVU3673
3142:src/keys.c    **** 	case K_DOWN:
 11963              		.loc 1 3142 2 is_stmt 0 view .LVU3674
 11964              	.LBE1228:
 11965              	.LBE1332:
 11966              	.LBE1411:
 11967              	.LBE1484:
3589:src/keys.c    ****     case STATE_SST:
 11968              		.loc 1 3589 5 is_stmt 1 view .LVU3675
 11969              	.LBB1485:
 11970              	.LBB1412:
 11971              	.LBB1333:
 11972              	.LBB1229:
3193:src/keys.c    **** 	}
 11973              		.loc 1 3193 10 is_stmt 0 view .LVU3676
 11974 151c 3324     		movs	r4, #51
 11975 151e FEF7CABD 		b	.L801
 11976              	.LVL1015:
 11977              	.L932:
3193:src/keys.c    **** 	}
 11978              		.loc 1 3193 10 view .LVU3677
 11979              	.LBE1229:
 11980              	.LBE1333:
 11981              	.LBB1334:
 11982              	.LBB1137:
2836:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
ARM GAS  /tmp/ccXySG1f.s 			page 336


 11983              		.loc 1 2836 3 is_stmt 1 view .LVU3678
2836:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11984              		.loc 1 2836 6 is_stmt 0 view .LVU3679
 11985 1522 0129     		cmp	r1, #1
 11986 1524 00F07B83 		beq	.L1310
2839:src/keys.c    **** 		return STATE_UNFINISHED;
 11987              		.loc 1 2839 4 is_stmt 1 view .LVU3680
 11988              	.LBB1129:
 11989              	.LBI1129:
2793:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 11990              		.loc 1 2793 13 view .LVU3681
 11991              	.LBB1130:
2795:src/keys.c    **** 	if (! State2.alphas )
 11992              		.loc 1 2795 2 view .LVU3682
2795:src/keys.c    **** 	if (! State2.alphas )
 11993              		.loc 1 2795 15 is_stmt 0 view .LVU3683
 11994 1528 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2796:src/keys.c    **** 		State2.alphashift = 0;
 11995              		.loc 1 2796 6 view .LVU3684
 11996 152c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2795:src/keys.c    **** 	if (! State2.alphas )
 11997              		.loc 1 2795 15 view .LVU3685
 11998 1530 60F3C302 		bfi	r2, r0, #3, #1
 11999 1534 88F81520 		strb	r2, [r8, #21]
2796:src/keys.c    **** 		State2.alphashift = 0;
 12000              		.loc 1 2796 2 is_stmt 1 view .LVU3686
2796:src/keys.c    **** 		State2.alphashift = 0;
 12001              		.loc 1 2796 5 is_stmt 0 view .LVU3687
 12002 1538 13F00802 		ands	r2, r3, #8
 12003 153c 7FF4D2A8 		bne	.L1309
 12004              	.LVL1016:
 12005              	.L941:
2797:src/keys.c    **** }
 12006              		.loc 1 2797 3 is_stmt 1 view .LVU3688
2797:src/keys.c    **** }
 12007              		.loc 1 2797 21 is_stmt 0 view .LVU3689
 12008 1540 62F30413 		bfi	r3, r2, #4, #1
 12009 1544 88F81630 		strb	r3, [r8, #22]
 12010 1548 3368     		ldr	r3, [r6]
 12011              	.LBE1130:
 12012              	.LBE1129:
2840:src/keys.c    **** 
 12013              		.loc 1 2840 10 view .LVU3690
 12014 154a 3324     		movs	r4, #51
 12015              	.LVL1017:
2840:src/keys.c    **** 
 12016              		.loc 1 2840 10 view .LVU3691
 12017 154c FEF7B3BD 		b	.L801
 12018              	.LVL1018:
 12019              	.L931:
2826:src/keys.c    **** 			if (State2.numdigit == 0)
 12020              		.loc 1 2826 3 is_stmt 1 view .LVU3692
2826:src/keys.c    **** 			if (State2.numdigit == 0)
 12021              		.loc 1 2826 6 is_stmt 0 view .LVU3693
 12022 1550 0329     		cmp	r1, #3
 12023 1552 3FF465AB 		beq	.L937
2827:src/keys.c    **** 				reset_multi();
ARM GAS  /tmp/ccXySG1f.s 			page 337


 12024              		.loc 1 2827 4 is_stmt 1 view .LVU3694
2827:src/keys.c    **** 				reset_multi();
 12025              		.loc 1 2827 14 is_stmt 0 view .LVU3695
 12026 1556 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2827:src/keys.c    **** 				reset_multi();
 12027              		.loc 1 2827 7 view .LVU3696
 12028 155a 002A     		cmp	r2, #0
 12029 155c 40F03282 		bne	.L938
2828:src/keys.c    **** 			else
 12030              		.loc 1 2828 5 is_stmt 1 view .LVU3697
 12031              	.LBB1131:
 12032              	.LBI1131:
2793:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12033              		.loc 1 2793 13 view .LVU3698
 12034              	.LBB1132:
2795:src/keys.c    **** 	if (! State2.alphas )
 12035              		.loc 1 2795 2 view .LVU3699
2795:src/keys.c    **** 	if (! State2.alphas )
 12036              		.loc 1 2795 15 is_stmt 0 view .LVU3700
 12037 1560 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12038              	.LVL1019:
2796:src/keys.c    **** 		State2.alphashift = 0;
 12039              		.loc 1 2796 6 view .LVU3701
 12040 1564 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2795:src/keys.c    **** 	if (! State2.alphas )
 12041              		.loc 1 2795 15 view .LVU3702
 12042 1568 62F3C301 		bfi	r1, r2, #3, #1
2796:src/keys.c    **** 		State2.alphashift = 0;
 12043              		.loc 1 2796 5 view .LVU3703
 12044 156c 13F00802 		ands	r2, r3, #8
2795:src/keys.c    **** 	if (! State2.alphas )
 12045              		.loc 1 2795 15 view .LVU3704
 12046 1570 88F81510 		strb	r1, [r8, #21]
2796:src/keys.c    **** 		State2.alphashift = 0;
 12047              		.loc 1 2796 2 is_stmt 1 view .LVU3705
2796:src/keys.c    **** 		State2.alphashift = 0;
 12048              		.loc 1 2796 5 is_stmt 0 view .LVU3706
 12049 1574 E4D0     		beq	.L941
 12050 1576 FFF7B5B8 		b	.L1309
 12051              	.LVL1020:
 12052              	.L1343:
2796:src/keys.c    **** 		State2.alphashift = 0;
 12053              		.loc 1 2796 5 view .LVU3707
 12054              	.LBE1132:
 12055              	.LBE1131:
 12056              	.LBE1137:
 12057              	.LBE1334:
3352:src/keys.c    **** 	}
 12058              		.loc 1 3352 3 is_stmt 1 view .LVU3708
 12059              	.LBB1335:
 12060              	.LBI850:
1276:src/keys.c    **** 
 12061              		.loc 1 1276 13 view .LVU3709
 12062              	.LBB939:
1278:src/keys.c    **** 
 12063              		.loc 1 1278 4 view .LVU3710
 12064              	.LBB852:
ARM GAS  /tmp/ccXySG1f.s 			page 338


 12065              	.LBI852:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12066              		.loc 1 96 13 view .LVU3711
 12067              	.LBB853:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12068              		.loc 1 97 2 view .LVU3712
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12069              		.loc 1 97 18 is_stmt 0 view .LVU3713
 12070 157a FFF7FEFF 		bl	shift_down
 12071              	.LVL1021:
  98:src/keys.c    **** }
 12072              		.loc 1 98 2 is_stmt 1 view .LVU3714
  98:src/keys.c    **** }
 12073              		.loc 1 98 52 is_stmt 0 view .LVU3715
 12074 157e 8346     		mov	fp, r0
 12075              	.LVL1022:
  98:src/keys.c    **** }
 12076              		.loc 1 98 52 view .LVU3716
 12077 1580 08B9     		cbnz	r0, .L1033
 12078 1582 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 12079              	.L1033:
 12080              	.LVL1023:
  98:src/keys.c    **** }
 12081              		.loc 1 98 52 view .LVU3717
 12082              	.LBE853:
 12083              	.LBE852:
1282:src/keys.c    ****      return process_h_shifted (c);
 12084              		.loc 1 1282 4 is_stmt 1 view .LVU3718
1282:src/keys.c    ****      return process_h_shifted (c);
 12085              		.loc 1 1282 7 is_stmt 0 view .LVU3719
 12086 1586 042C     		cmp	r4, #4
 12087 1588 9AD8     		bhi	.L1034
1282:src/keys.c    ****      return process_h_shifted (c);
 12088              		.loc 1 1282 19 view .LVU3720
 12089 158a BBF1030F 		cmp	fp, #3
 12090 158e 00F05983 		beq	.L1386
1287:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12091              		.loc 1 1287 4 is_stmt 1 view .LVU3721
1287:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12092              		.loc 1 1287 7 is_stmt 0 view .LVU3722
 12093 1592 BBF1020F 		cmp	fp, #2
 12094 1596 3FF492AE 		beq	.L1037
 12095              	.L1036:
1290:src/keys.c    ****      return process_fg_shifted (c);
 12096              		.loc 1 1290 4 is_stmt 1 view .LVU3723
1290:src/keys.c    ****      return process_fg_shifted (c);
 12097              		.loc 1 1290 7 is_stmt 0 view .LVU3724
 12098 159a 631F     		subs	r3, r4, #5
 12099 159c 032B     		cmp	r3, #3
 12100 159e 00F27081 		bhi	.L1039
1290:src/keys.c    ****      return process_fg_shifted (c);
 12101              		.loc 1 1290 55 view .LVU3725
 12102 15a2 0BF1FF33 		add	r3, fp, #-1
1290:src/keys.c    ****      return process_fg_shifted (c);
 12103              		.loc 1 1290 34 view .LVU3726
 12104 15a6 DBB2     		uxtb	r3, r3
 12105 15a8 012B     		cmp	r3, #1
ARM GAS  /tmp/ccXySG1f.s 			page 339


 12106 15aa 93D9     		bls	.L1301
 12107              	.L1040:
1320:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12108              		.loc 1 1320 4 is_stmt 1 view .LVU3727
1320:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12109              		.loc 1 1320 7 is_stmt 0 view .LVU3728
 12110 15ac BBF1000F 		cmp	fp, #0
 12111 15b0 40F09081 		bne	.L1295
1401:src/keys.c    ****    case (K61):
 12112              		.loc 1 1401 4 is_stmt 1 view .LVU3729
 12113 15b4 231F     		subs	r3, r4, #4
 12114 15b6 292B     		cmp	r3, #41
 12115 15b8 00F28381 		bhi	.L1073
 12116 15bc DFE813F0 		tbh	[pc, r3, lsl #1]
 12117              	.L1075:
 12118 15c0 7E01     		.2byte	(.L1076-.L1075)/2
 12119 15c2 8101     		.2byte	(.L1073-.L1075)/2
 12120 15c4 8101     		.2byte	(.L1073-.L1075)/2
 12121 15c6 8101     		.2byte	(.L1073-.L1075)/2
 12122 15c8 8101     		.2byte	(.L1073-.L1075)/2
 12123 15ca 8101     		.2byte	(.L1073-.L1075)/2
 12124 15cc 8101     		.2byte	(.L1073-.L1075)/2
 12125 15ce 8101     		.2byte	(.L1073-.L1075)/2
 12126 15d0 8101     		.2byte	(.L1073-.L1075)/2
 12127 15d2 8101     		.2byte	(.L1073-.L1075)/2
 12128 15d4 5601     		.2byte	(.L1078-.L1075)/2
 12129 15d6 7001     		.2byte	(.L1077-.L1075)/2
 12130 15d8 7E01     		.2byte	(.L1076-.L1075)/2
 12131 15da 8101     		.2byte	(.L1073-.L1075)/2
 12132 15dc 8101     		.2byte	(.L1073-.L1075)/2
 12133 15de 7001     		.2byte	(.L1077-.L1075)/2
 12134 15e0 7001     		.2byte	(.L1077-.L1075)/2
 12135 15e2 7001     		.2byte	(.L1077-.L1075)/2
 12136 15e4 8101     		.2byte	(.L1073-.L1075)/2
 12137 15e6 8101     		.2byte	(.L1073-.L1075)/2
 12138 15e8 8101     		.2byte	(.L1073-.L1075)/2
 12139 15ea 7001     		.2byte	(.L1077-.L1075)/2
 12140 15ec 7001     		.2byte	(.L1077-.L1075)/2
 12141 15ee 7001     		.2byte	(.L1077-.L1075)/2
 12142 15f0 8101     		.2byte	(.L1073-.L1075)/2
 12143 15f2 8101     		.2byte	(.L1073-.L1075)/2
 12144 15f4 8101     		.2byte	(.L1073-.L1075)/2
 12145 15f6 7001     		.2byte	(.L1077-.L1075)/2
 12146 15f8 7001     		.2byte	(.L1077-.L1075)/2
 12147 15fa 7001     		.2byte	(.L1077-.L1075)/2
 12148 15fc 8101     		.2byte	(.L1073-.L1075)/2
 12149 15fe 8101     		.2byte	(.L1073-.L1075)/2
 12150 1600 8101     		.2byte	(.L1073-.L1075)/2
 12151 1602 7001     		.2byte	(.L1077-.L1075)/2
 12152 1604 7001     		.2byte	(.L1077-.L1075)/2
 12153 1606 8101     		.2byte	(.L1073-.L1075)/2
 12154 1608 8101     		.2byte	(.L1073-.L1075)/2
 12155 160a 8101     		.2byte	(.L1073-.L1075)/2
 12156 160c 8101     		.2byte	(.L1073-.L1075)/2
 12157 160e 8101     		.2byte	(.L1073-.L1075)/2
 12158 1610 7E01     		.2byte	(.L1076-.L1075)/2
 12159 1612 CA01     		.2byte	(.L1074-.L1075)/2
ARM GAS  /tmp/ccXySG1f.s 			page 340


 12160              	.LVL1024:
 12161              		.p2align 1
 12162              	.L1146:
1401:src/keys.c    ****    case (K61):
 12163              		.loc 1 1401 4 is_stmt 0 view .LVU3730
 12164              	.LBE939:
 12165              	.LBE1335:
 12166              	.LBB1336:
 12167              	.LBB1190:
2986:src/keys.c    **** 	const int opcode = getprog(pc);
 12168              		.loc 1 2986 27 view .LVU3731
 12169 1614 4FF0030B 		mov	fp, #3
 12170              	.LVL1025:
2986:src/keys.c    **** 	const int opcode = getprog(pc);
 12171              		.loc 1 2986 27 view .LVU3732
 12172 1618 FFF7B1BB 		b	.L945
 12173              	.LVL1026:
 12174              	.L1378:
2988:src/keys.c    **** 	const int direct = State2.runmode;
 12175              		.loc 1 2988 37 view .LVU3733
 12176 161c 5046     		mov	r0, r10
 12177 161e FFF7FEFF 		bl	getprog
 12178              	.LVL1027:
2988:src/keys.c    **** 	const int direct = State2.runmode;
 12179              		.loc 1 2988 63 view .LVU3734
 12180 1622 20F47062 		bic	r2, r0, #3840
 12181 1626 FFF7B4BB 		b	.L946
 12182              	.LVL1028:
 12183              	.L1375:
2988:src/keys.c    **** 	const int direct = State2.runmode;
 12184              		.loc 1 2988 63 view .LVU3735
 12185              	.LBE1190:
 12186              	.LBE1336:
 12187              	.LBB1337:
 12188              	.LBB1138:
2852:src/keys.c    **** 		State2.numdigit = 1;
 12189              		.loc 1 2852 3 is_stmt 1 view .LVU3736
2853:src/keys.c    **** 		return STATE_UNFINISHED;
 12190              		.loc 1 2853 19 is_stmt 0 view .LVU3737
 12191 162a 0122     		movs	r2, #1
2852:src/keys.c    **** 		State2.numdigit = 1;
 12192              		.loc 1 2852 17 view .LVU3738
 12193 162c A8F80840 		strh	r4, [r8, #8]	@ movhi
2853:src/keys.c    **** 		return STATE_UNFINISHED;
 12194              		.loc 1 2853 3 is_stmt 1 view .LVU3739
 12195 1630 3368     		ldr	r3, [r6]
2853:src/keys.c    **** 		return STATE_UNFINISHED;
 12196              		.loc 1 2853 19 is_stmt 0 view .LVU3740
 12197 1632 88F80B20 		strb	r2, [r8, #11]
2854:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12198              		.loc 1 2854 3 is_stmt 1 view .LVU3741
2854:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12199              		.loc 1 2854 10 is_stmt 0 view .LVU3742
 12200 1636 3324     		movs	r4, #51
 12201              	.LVL1029:
2854:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12202              		.loc 1 2854 10 view .LVU3743
ARM GAS  /tmp/ccXySG1f.s 			page 341


 12203 1638 FEF73DBD 		b	.L801
 12204              	.LVL1030:
 12205              	.L1363:
2854:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12206              		.loc 1 2854 10 view .LVU3744
 12207              	.LBE1138:
 12208              	.LBE1337:
 12209              	.LBB1338:
 12210              	.LBB1024:
1738:src/keys.c    **** 		if (rawpc == 1)
 12211              		.loc 1 1738 3 is_stmt 1 view .LVU3745
1738:src/keys.c    **** 		if (rawpc == 1)
 12212              		.loc 1 1738 11 is_stmt 0 view .LVU3746
 12213 163c DFF8B8A3 		ldr	r10, .L1413+8
 12214 1640 DAF80030 		ldr	r3, [r10]
 12215              	.LVL1031:
1738:src/keys.c    **** 		if (rawpc == 1)
 12216              		.loc 1 1738 9 view .LVU3747
 12217 1644 B3F8E007 		ldrh	r0, [r3, #2016]
 12218              	.LVL1032:
1739:src/keys.c    **** 			rawpc = 0;
 12219              		.loc 1 1739 3 is_stmt 1 view .LVU3748
1740:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12220              		.loc 1 1740 10 is_stmt 0 view .LVU3749
 12221 1648 0128     		cmp	r0, #1
 12222              	.LVL1033:
1741:src/keys.c    **** 		update_program_bounds(1);
 12223              		.loc 1 1741 3 is_stmt 1 view .LVU3750
 12224 164a 08BF     		it	eq
 12225 164c 0020     		moveq	r0, #0
 12226              	.LVL1034:
1741:src/keys.c    **** 		update_program_bounds(1);
 12227              		.loc 1 1741 3 is_stmt 0 view .LVU3751
 12228 164e 0021     		movs	r1, #0
 12229 1650 FFF7FEFF 		bl	do_dec
 12230              	.LVL1035:
1741:src/keys.c    **** 		update_program_bounds(1);
 12231              		.loc 1 1741 3 view .LVU3752
 12232 1654 FFF7FEFF 		bl	set_pc
 12233              	.LVL1036:
1742:src/keys.c    **** 		rawpc = ProgBegin;
 12234              		.loc 1 1742 3 is_stmt 1 view .LVU3753
 12235 1658 0120     		movs	r0, #1
 12236 165a FFF7FEFF 		bl	update_program_bounds
 12237              	.LVL1037:
1743:src/keys.c    **** 		goto fin;
 12238              		.loc 1 1743 3 view .LVU3754
1743:src/keys.c    **** 		goto fin;
 12239              		.loc 1 1743 11 is_stmt 0 view .LVU3755
 12240 165e DAF80030 		ldr	r3, [r10]
1743:src/keys.c    **** 		goto fin;
 12241              		.loc 1 1743 9 view .LVU3756
 12242 1662 B3F8EC07 		ldrh	r0, [r3, #2028]
 12243              	.LVL1038:
1744:src/keys.c    **** 	}
 12244              		.loc 1 1744 3 is_stmt 1 view .LVU3757
 12245 1666 FFF706B9 		b	.L847
ARM GAS  /tmp/ccXySG1f.s 			page 342


 12246              	.LVL1039:
 12247              	.L1139:
1744:src/keys.c    **** 	}
 12248              		.loc 1 1744 3 is_stmt 0 view .LVU3758
 12249              	.LBE1024:
 12250              	.LBE1338:
 12251              	.LBB1339:
 12252              	.LBB844:
 306:src/keys.c    **** 		}
 12253              		.loc 1 306 11 view .LVU3759
 12254 166a 1023     		movs	r3, #16
 12255 166c FFF72CB8 		b	.L904
 12256              	.LVL1040:
 12257              	.L1384:
 306:src/keys.c    **** 		}
 12258              		.loc 1 306 11 view .LVU3760
 12259              	.LBE844:
 12260              	.LBE1339:
 12261              	.LBB1340:
 12262              	.LBB1230:
3138:src/keys.c    **** 		goto reset_window;
 12263              		.loc 1 3138 3 is_stmt 1 view .LVU3761
3138:src/keys.c    **** 		goto reset_window;
 12264              		.loc 1 3138 17 is_stmt 0 view .LVU3762
 12265 1670 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3139:src/keys.c    **** 	}
 12266              		.loc 1 3139 3 is_stmt 1 view .LVU3763
 12267 1674 45E5     		b	.L977
 12268              	.LVL1041:
 12269              	.L917:
3139:src/keys.c    **** 	}
 12270              		.loc 1 3139 3 is_stmt 0 view .LVU3764
 12271 1676 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12272              	.LBE1230:
 12273              	.LBE1340:
 12274              	.LBB1341:
 12275              	.LBB845:
 12276              	.LBB833:
 371:src/keys.c    **** #ifndef WINGUI
 12277              		.loc 1 371 8 view .LVU3765
 12278 167a DD4B     		ldr	r3, .L1413
 377:src/keys.c    ****   }
 12279              		.loc 1 377 9 view .LVU3766
 12280 167c 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 12281              		.loc 1 373 73 view .LVU3767
 12282 167e 4FF0020C 		mov	ip, #2
 12283 1682 FEF7F0BD 		b	.L916
 12284              	.LVL1042:
 12285              	.L817:
 373:src/keys.c    **** #else
 12286              		.loc 1 373 73 view .LVU3768
 12287              	.LBE833:
 12288              	.LBE845:
 12289              	.LBE1341:
 12290              	.LBB1342:
 12291              	.LBB1327:
ARM GAS  /tmp/ccXySG1f.s 			page 343


1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12292              		.loc 1 1246 3 is_stmt 1 view .LVU3769
 12293 1686 6420     		movs	r0, #100
 12294 1688 FFF7FEFF 		bl	get_reg_n
 12295              	.LVL1043:
 12296 168c 0446     		mov	r4, r0
 12297              	.LVL1044:
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12298              		.loc 1 1246 33 is_stmt 0 view .LVU3770
 12299 168e 6E20     		movs	r0, #110
 12300 1690 FFF7FEFF 		bl	get_reg_n
 12301              	.LVL1045:
 12302 1694 0146     		mov	r1, r0
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12303              		.loc 1 1246 3 view .LVU3771
 12304 1696 2046     		mov	r0, r4
 12305 1698 FFF7FEFF 		bl	copyreg
 12306              	.LVL1046:
1247:src/keys.c    **** 	}
 12307              		.loc 1 1247 3 is_stmt 1 view .LVU3772
 12308 169c 6520     		movs	r0, #101
 12309 169e B5E6     		b	.L1297
 12310              	.LVL1047:
 12311              	.L1382:
1247:src/keys.c    **** 	}
 12312              		.loc 1 1247 3 is_stmt 0 view .LVU3773
 12313              	.LBE1327:
 12314              	.LBE1342:
 12315              	.LBB1343:
 12316              	.LBB1231:
 12317              	.LBB1226:
3127:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12318              		.loc 1 3127 3 is_stmt 1 view .LVU3774
3127:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12319              		.loc 1 3127 19 is_stmt 0 view .LVU3775
 12320 16a0 B8F80810 		ldrh	r1, [r8, #8]
3127:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12321              		.loc 1 3127 27 view .LVU3776
 12322 16a4 0A23     		movs	r3, #10
3127:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12323              		.loc 1 3127 32 view .LVU3777
 12324 16a6 03FB01B2 		mla	r2, r3, r1, fp
3127:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12325              		.loc 1 3127 37 view .LVU3778
 12326 16aa 6424     		movs	r4, #100
 12327              	.LVL1048:
3127:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12328              		.loc 1 3127 37 view .LVU3779
 12329 16ac B2FBF4F3 		udiv	r3, r2, r4
 12330 16b0 04FB1323 		mls	r3, r4, r3, r2
 12331              	.LVL1049:
3128:src/keys.c    **** 			dv = n;
 12332              		.loc 1 3128 3 is_stmt 1 view .LVU3780
3128:src/keys.c    **** 			dv = n;
 12333              		.loc 1 3128 6 is_stmt 0 view .LVU3781
 12334 16b4 5345     		cmp	r3, r10
 12335 16b6 09DA     		bge	.L979
ARM GAS  /tmp/ccXySG1f.s 			page 344


3128:src/keys.c    **** 			dv = n;
 12336              		.loc 1 3128 21 view .LVU3782
 12337 16b8 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3128:src/keys.c    **** 			dv = n;
 12338              		.loc 1 3128 17 view .LVU3783
 12339 16bc D207     		lsls	r2, r2, #31
 12340 16be 3FF51EAD 		bmi	.L1299
3128:src/keys.c    **** 			dv = n;
 12341              		.loc 1 3128 36 view .LVU3784
 12342 16c2 8842     		cmp	r0, r1
 12343 16c4 02DD     		ble	.L979
3128:src/keys.c    **** 			dv = n;
 12344              		.loc 1 3128 63 view .LVU3785
 12345 16c6 9842     		cmp	r0, r3
 12346 16c8 3FF719AD 		bgt	.L1299
 12347              	.L979:
3129:src/keys.c    **** 		State2.digval = dv;
 12348              		.loc 1 3129 4 is_stmt 1 view .LVU3786
3129:src/keys.c    **** 		State2.digval = dv;
 12349              		.loc 1 3129 7 is_stmt 0 view .LVU3787
 12350 16cc 5B46     		mov	r3, fp
 12351              	.LVL1050:
3130:src/keys.c    **** 		goto reset_window;
 12352              		.loc 1 3130 3 is_stmt 1 view .LVU3788
 12353 16ce 16E5     		b	.L1299
 12354              	.LVL1051:
 12355              	.L1379:
3130:src/keys.c    **** 		goto reset_window;
 12356              		.loc 1 3130 3 is_stmt 0 view .LVU3789
 12357              	.LBE1226:
 12358              	.LBE1231:
 12359              	.LBE1343:
 12360              	.LBB1344:
 12361              	.LBB1191:
2995:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12362              		.loc 1 2995 3 is_stmt 1 view .LVU3790
2995:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12363              		.loc 1 2995 8 is_stmt 0 view .LVU3791
 12364 16d0 4FEA8B34 		lsl	r4, fp, #14
 12365              	.LVL1052:
2995:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12366              		.loc 1 2995 6 view .LVU3792
 12367 16d4 44F00104 		orr	r4, r4, #1
 12368              	.LVL1053:
2996:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12369              		.loc 1 2996 3 is_stmt 1 view .LVU3793
2996:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12370              		.loc 1 2996 9 is_stmt 0 view .LVU3794
 12371 16d8 2046     		mov	r0, r4
 12372 16da FFF7FEFF 		bl	is_label_or_end_at
 12373              	.LVL1054:
2996:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12374              		.loc 1 2996 6 view .LVU3795
 12375 16de 0246     		mov	r2, r0
 12376 16e0 0028     		cmp	r0, #0
 12377 16e2 00F07681 		beq	.L1387
 12378              	.L949:
ARM GAS  /tmp/ccXySG1f.s 			page 345


2998:src/keys.c    **** 		return STATE_UNFINISHED;
 12379              		.loc 1 2998 3 is_stmt 1 view .LVU3796
2998:src/keys.c    **** 		return STATE_UNFINISHED;
 12380              		.loc 1 2998 17 is_stmt 0 view .LVU3797
 12381 16e6 A8F80840 		strh	r4, [r8, #8]	@ movhi
2999:src/keys.c    **** 	}
 12382              		.loc 1 2999 3 is_stmt 1 view .LVU3798
 12383 16ea 3368     		ldr	r3, [r6]
2999:src/keys.c    **** 	}
 12384              		.loc 1 2999 10 is_stmt 0 view .LVU3799
 12385 16ec 3324     		movs	r4, #51
 12386              	.LVL1055:
2999:src/keys.c    **** 	}
 12387              		.loc 1 2999 10 view .LVU3800
 12388 16ee FEF7E2BC 		b	.L801
 12389              	.LVL1056:
 12390              	.L1370:
2999:src/keys.c    **** 	}
 12391              		.loc 1 2999 10 view .LVU3801
 12392              	.LBE1191:
 12393              	.LBE1344:
 12394              	.LBB1345:
 12395              	.LBB846:
 287:src/keys.c    **** 					}
 12396              		.loc 1 287 7 is_stmt 1 view .LVU3802
 12397 16f2 0120     		movs	r0, #1
 12398 16f4 FFF7FEFF 		bl	finish_cpx_entry
 12399              	.LVL1057:
 287:src/keys.c    **** 					}
 12400              		.loc 1 287 7 is_stmt 0 view .LVU3803
 12401              	.LBE846:
 12402              	.LBE1345:
3315:src/keys.c    **** 		if (is_bad_cmdline())
 12403              		.loc 1 3315 2 is_stmt 1 view .LVU3804
 12404              	.LBB1346:
 12405              	.LBB847:
 289:src/keys.c    **** 				default:
 12406              		.loc 1 289 13 is_stmt 0 view .LVU3805
 12407 16f8 1123     		movs	r3, #17
 12408 16fa FEF7E5BF 		b	.L904
 12409              	.LVL1058:
 12410              	.L1351:
 298:src/keys.c    **** 				stack_begin (1);
 12411              		.loc 1 298 5 is_stmt 1 view .LVU3806
 12412 16fe 41F00201 		orr	r1, r1, #2
 12413 1702 80F8AC17 		strb	r1, [r0, #1964]
 299:src/keys.c    **** 			}
 12414              		.loc 1 299 5 view .LVU3807
 12415 1706 5846     		mov	r0, fp
 12416 1708 FFF7FEFF 		bl	stack_begin
 12417              	.LVL1059:
 299:src/keys.c    **** 			}
 12418              		.loc 1 299 5 is_stmt 0 view .LVU3808
 12419              	.LBE847:
 12420              	.LBE1346:
3315:src/keys.c    **** 		if (is_bad_cmdline())
 12421              		.loc 1 3315 2 is_stmt 1 view .LVU3809
ARM GAS  /tmp/ccXySG1f.s 			page 346


 12422              	.LBB1347:
 12423              	.LBB848:
 306:src/keys.c    **** 		}
 12424              		.loc 1 306 11 is_stmt 0 view .LVU3810
 12425 170c 1023     		movs	r3, #16
 12426 170e FEF7DBBF 		b	.L904
 12427              	.LVL1060:
 12428              	.L1291:
 306:src/keys.c    **** 		}
 12429              		.loc 1 306 11 view .LVU3811
 12430              	.LBE848:
 12431              	.LBE1347:
 12432              	.LBE1412:
 12433              	.LBE1485:
3625:src/keys.c    **** 	NonProgrammable = 0;
 12434              		.loc 1 3625 26 discriminator 1 view .LVU3812
 12435 1712 1368     		ldr	r3, [r2]
 12436 1714 002B     		cmp	r3, #0
 12437 1716 7EF42FAF 		bne	.L1104
 12438 171a FEF78BBE 		b	.L1105
 12439              	.LVL1061:
 12440              	.L1381:
 12441              	.LBB1486:
 12442              	.LBB1413:
 12443              	.LBB1348:
 12444              	.LBB1232:
3121:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12445              		.loc 1 3121 3 is_stmt 1 view .LVU3813
3121:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12446              		.loc 1 3121 7 is_stmt 0 view .LVU3814
 12447 171e FFF7FEFF 		bl	local_regs
 12448              	.LVL1062:
3121:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12449              		.loc 1 3121 6 view .LVU3815
 12450 1722 68B1     		cbz	r0, .L975
3122:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12451              		.loc 1 3122 4 is_stmt 1 view .LVU3816
3122:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12452              		.loc 1 3122 19 is_stmt 0 view .LVU3817
 12453 1724 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3122:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12454              		.loc 1 3122 34 view .LVU3818
 12455 1728 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3122:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12456              		.loc 1 3122 19 view .LVU3819
 12457 172c 03F00101 		and	r1, r3, #1
3122:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12458              		.loc 1 3122 34 view .LVU3820
 12459 1730 0A43     		orrs	r2, r1, r2
 12460 1732 0CBF     		ite	eq
 12461 1734 0122     		moveq	r2, #1
 12462 1736 0022     		movne	r2, #0
3122:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12463              		.loc 1 3122 17 view .LVU3821
 12464 1738 62F30003 		bfi	r3, r2, #0, #1
 12465 173c 88F81630 		strb	r3, [r8, #22]
 12466              	.L975:
ARM GAS  /tmp/ccXySG1f.s 			page 347


3123:src/keys.c    **** 		goto reset_window;
 12467              		.loc 1 3123 3 is_stmt 1 view .LVU3822
3123:src/keys.c    **** 		goto reset_window;
 12468              		.loc 1 3123 32 is_stmt 0 view .LVU3823
 12469 1740 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3123:src/keys.c    **** 		goto reset_window;
 12470              		.loc 1 3123 17 view .LVU3824
 12471 1744 13F0010F 		tst	r3, #1
 12472 1748 14BF     		ite	ne
 12473 174a 0023     		movne	r3, #0
 12474 174c 6423     		moveq	r3, #100
 12475 174e A8F80830 		strh	r3, [r8, #8]	@ movhi
3124:src/keys.c    **** 	}
 12476              		.loc 1 3124 3 is_stmt 1 view .LVU3825
 12477 1752 D6E4     		b	.L977
 12478              	.LVL1063:
 12479              	.L1009:
3124:src/keys.c    **** 	}
 12480              		.loc 1 3124 3 is_stmt 0 view .LVU3826
 12481              	.LBE1232:
 12482              	.LBE1348:
 12483              	.LBB1349:
 12484              	.LBB1308:
1810:src/keys.c    **** 			return STATE_BACKSPACE;
 12485              		.loc 1 1810 3 is_stmt 1 view .LVU3827
1810:src/keys.c    **** 			return STATE_BACKSPACE;
 12486              		.loc 1 1810 6 is_stmt 0 view .LVU3828
 12487 1754 0028     		cmp	r0, #0
 12488 1756 3EF4A0AE 		beq	.L1018
 12489              	.LVL1064:
 12490              	.L1019:
1812:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12491              		.loc 1 1812 3 is_stmt 1 view .LVU3829
1812:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12492              		.loc 1 1812 6 is_stmt 0 view .LVU3830
 12493 175a 0328     		cmp	r0, #3
 12494 175c 7FF4A2AD 		bne	.L1003
 12495              	.LVL1065:
1812:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12496              		.loc 1 1812 6 view .LVU3831
 12497              	.LBE1308:
 12498              	.LBE1349:
 12499              	.LBE1413:
 12500              	.LBE1486:
3625:src/keys.c    **** 	NonProgrammable = 0;
 12501              		.loc 1 3625 7 is_stmt 1 view .LVU3832
3625:src/keys.c    **** 	NonProgrammable = 0;
 12502              		.loc 1 3625 10 is_stmt 0 view .LVU3833
 12503 1760 4A06     		lsls	r2, r1, #25
 12504              	.LVL1066:
3625:src/keys.c    **** 	NonProgrammable = 0;
 12505              		.loc 1 3625 10 view .LVU3834
 12506 1762 0ED5     		bpl	.L1161
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12507              		.loc 1 3626 2 is_stmt 1 view .LVU3835
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12508              		.loc 1 3626 18 is_stmt 0 view .LVU3836
ARM GAS  /tmp/ccXySG1f.s 			page 348


 12509 1764 A34B     		ldr	r3, .L1413+4
 12510 1766 0022     		movs	r2, #0
 12511 1768 1A60     		str	r2, [r3]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12512              		.loc 1 3627 2 is_stmt 1 view .LVU3837
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12513              		.loc 1 3627 32 is_stmt 0 view .LVU3838
 12514 176a 4FF4BA70 		mov	r0, #372
 12515              	.LVL1067:
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12516              		.loc 1 3627 32 view .LVU3839
 12517 176e FEF770BF 		b	.L1101
 12518              	.LVL1068:
 12519              	.L988:
 12520              	.LBB1487:
 12521              	.LBB1414:
 12522              	.LBB1350:
 12523              	.LBB1233:
3160:src/keys.c    **** 		goto reset_window;
 12524              		.loc 1 3160 4 is_stmt 1 view .LVU3840
3160:src/keys.c    **** 		goto reset_window;
 12525              		.loc 1 3160 18 is_stmt 0 view .LVU3841
 12526 1772 0023     		movs	r3, #0
 12527 1774 A8F80830 		strh	r3, [r8, #8]	@ movhi
 12528 1778 C3E4     		b	.L977
 12529              	.LVL1069:
 12530              	.L1346:
3160:src/keys.c    **** 		goto reset_window;
 12531              		.loc 1 3160 18 view .LVU3842
 12532              	.LBE1233:
 12533              	.LBE1350:
 12534              	.LBE1414:
 12535              	.LBE1487:
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12536              		.loc 1 3626 2 is_stmt 1 view .LVU3843
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12537              		.loc 1 3626 18 is_stmt 0 view .LVU3844
 12538 177a 0022     		movs	r2, #0
 12539 177c 1A60     		str	r2, [r3]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12540              		.loc 1 3627 2 is_stmt 1 view .LVU3845
 12541 177e FEF768BF 		b	.L1101
 12542              	.LVL1070:
 12543              	.L1161:
 12544              	.LBB1488:
 12545              	.LBB1415:
 12546              	.LBB1351:
 12547              	.LBB1309:
1813:src/keys.c    **** 		break;
 12548              		.loc 1 1813 11 is_stmt 0 view .LVU3846
 12549 1782 4FF4BA74 		mov	r4, #372
 12550              	.LVL1071:
 12551              	.L1044:
1813:src/keys.c    **** 		break;
 12552              		.loc 1 1813 11 view .LVU3847
 12553              	.LBE1309:
 12554              	.LBE1351:
ARM GAS  /tmp/ccXySG1f.s 			page 349


 12555              	.LBE1415:
 12556              	.LBE1488:
3625:src/keys.c    **** 	NonProgrammable = 0;
 12557              		.loc 1 3625 26 view .LVU3848
 12558 1786 9B4B     		ldr	r3, .L1413+4
 12559 1788 1A68     		ldr	r2, [r3]
 12560 178a 002A     		cmp	r2, #0
 12561 178c 5DD0     		beq	.L1388
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12562              		.loc 1 3626 2 is_stmt 1 view .LVU3849
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12563              		.loc 1 3626 18 is_stmt 0 view .LVU3850
 12564 178e 0022     		movs	r2, #0
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12565              		.loc 1 3627 32 view .LVU3851
 12566 1790 2046     		mov	r0, r4
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12567              		.loc 1 3626 18 view .LVU3852
 12568 1792 1A60     		str	r2, [r3]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12569              		.loc 1 3627 2 is_stmt 1 view .LVU3853
 12570 1794 FEF75DBF 		b	.L1101
 12571              	.LVL1072:
 12572              	.L871:
 12573              	.LBB1489:
 12574              	.LBB1416:
 12575              	.LBB1352:
 12576              	.LBB1004:
2361:src/keys.c    **** 		// Special 1
 12577              		.loc 1 2361 7 view .LVU3854
2361:src/keys.c    **** 		// Special 1
 12578              		.loc 1 2361 10 is_stmt 0 view .LVU3855
 12579 1798 BCF1010F 		cmp	ip, #1
 12580 179c 7FF461A9 		bne	.L873
2363:src/keys.c    **** 	}
 12581              		.loc 1 2363 3 is_stmt 1 view .LVU3856
2363:src/keys.c    **** 	}
 12582              		.loc 1 2363 18 is_stmt 0 view .LVU3857
 12583 17a0 BBF1000F 		cmp	fp, #0
 12584 17a4 14BF     		ite	ne
 12585 17a6 2724     		movne	r4, #39
 12586              	.LVL1073:
2363:src/keys.c    **** 	}
 12587              		.loc 1 2363 18 view .LVU3858
 12588 17a8 1E24     		moveq	r4, #30
2363:src/keys.c    **** 	}
 12589              		.loc 1 2363 47 view .LVU3859
 12590 17aa 1C44     		add	r4, r4, r3
 12591 17ac FEF718BE 		b	.L835
 12592              	.LVL1074:
 12593              	.L1011:
2363:src/keys.c    **** 	}
 12594              		.loc 1 2363 47 view .LVU3860
 12595              	.LBE1004:
 12596              	.LBE1352:
 12597              	.LBB1353:
 12598              	.LBB1310:
ARM GAS  /tmp/ccXySG1f.s 			page 350


1783:src/keys.c    **** 			init_arg(RARG_ARCL);
 12599              		.loc 1 1783 3 is_stmt 1 view .LVU3861
1783:src/keys.c    **** 			init_arg(RARG_ARCL);
 12600              		.loc 1 1783 6 is_stmt 0 view .LVU3862
 12601 17b0 0128     		cmp	r0, #1
 12602 17b2 4DD0     		beq	.L1389
1786:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12603              		.loc 1 1786 10 is_stmt 1 view .LVU3863
1786:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12604              		.loc 1 1786 13 is_stmt 0 view .LVU3864
 12605 17b4 0328     		cmp	r0, #3
 12606 17b6 7FF475AD 		bne	.L1003
1787:src/keys.c    **** 			return STATE_UNFINISHED;
 12607              		.loc 1 1787 4 is_stmt 1 view .LVU3865
 12608              	.LVL1075:
 12609              	.LBB1294:
 12610              	.LBI1294:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12611              		.loc 1 552 13 view .LVU3866
 12612              	.LBB1295:
 553:src/keys.c    **** 		return;
 12613              		.loc 1 553 2 view .LVU3867
 553:src/keys.c    **** 		return;
 12614              		.loc 1 553 6 is_stmt 0 view .LVU3868
 12615 17ba FFF7FEFF 		bl	is_bad_cmdline
 12616              	.LVL1076:
 553:src/keys.c    **** 		return;
 12617              		.loc 1 553 5 view .LVU3869
 12618 17be 0346     		mov	r3, r0
 12619 17c0 0028     		cmp	r0, #0
 12620 17c2 7EF48FAF 		bne	.L1309
 12621 17c6 7320     		movs	r0, #115
 12622              	.LBE1295:
 12623              	.LBE1294:
 12624              	.LBE1310:
 12625              	.LBE1353:
 12626              	.LBE1416:
 12627              	.LBE1489:
3399:src/keys.c    ****   //print_debug(60,c);
 12628              		.loc 1 3399 7 view .LVU3870
 12629 17c8 1D46     		mov	r5, r3
 12630              	.LBB1490:
 12631              	.LBB1417:
 12632              	.LBB1354:
 12633              	.LBB1311:
1788:src/keys.c    **** 		}
 12634              		.loc 1 1788 11 view .LVU3871
 12635 17ca 3324     		movs	r4, #51
 12636              	.LBB1297:
 12637              	.LBB1296:
 12638 17cc FFF7FEFF 		bl	init_arg.part.0
 12639              	.LVL1077:
 12640 17d0 3368     		ldr	r3, [r6]
 12641 17d2 FEF770BC 		b	.L801
 12642              	.LVL1078:
 12643              	.L1010:
1788:src/keys.c    **** 		}
ARM GAS  /tmp/ccXySG1f.s 			page 351


 12644              		.loc 1 1788 11 view .LVU3872
 12645              	.LBE1296:
 12646              	.LBE1297:
1793:src/keys.c    **** 			break;
 12647              		.loc 1 1793 3 is_stmt 1 view .LVU3873
1793:src/keys.c    **** 			break;
 12648              		.loc 1 1793 24 is_stmt 0 view .LVU3874
 12649 17d6 831E     		subs	r3, r0, #2
1793:src/keys.c    **** 			break;
 12650              		.loc 1 1793 6 view .LVU3875
 12651 17d8 DBB2     		uxtb	r3, r3
 12652 17da 012B     		cmp	r3, #1
 12653 17dc 7FF662AD 		bls	.L1003
1795:src/keys.c    **** 			State2.multi = 1;
 12654              		.loc 1 1795 3 is_stmt 1 view .LVU3876
1795:src/keys.c    **** 			State2.multi = 1;
 12655              		.loc 1 1795 6 is_stmt 0 view .LVU3877
 12656 17e0 0128     		cmp	r0, #1
 12657 17e2 02D1     		bne	.L1017
1795:src/keys.c    **** 			State2.multi = 1;
 12658              		.loc 1 1795 24 view .LVU3878
 12659 17e4 11F04001 		ands	r1, r1, #64
 12660 17e8 0FD0     		beq	.L1390
 12661              	.L1017:
1801:src/keys.c    **** 		State2.alphashift = 0;
 12662              		.loc 1 1801 3 is_stmt 1 view .LVU3879
1802:src/keys.c    **** #ifdef DM42
 12663              		.loc 1 1802 3 view .LVU3880
1801:src/keys.c    **** 		State2.alphashift = 0;
 12664              		.loc 1 1801 17 is_stmt 0 view .LVU3881
 12665 17ea 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1804:src/keys.c    **** 		display_current_menu();
 12666              		.loc 1 1804 3 view .LVU3882
 12667 17ee 4FF0FF30 		mov	r0, #-1
 12668              	.LVL1079:
1801:src/keys.c    **** 		State2.alphashift = 0;
 12669              		.loc 1 1801 17 view .LVU3883
 12670 17f2 23F01803 		bic	r3, r3, #24
 12671 17f6 88F81630 		strb	r3, [r8, #22]
1804:src/keys.c    **** 		display_current_menu();
 12672              		.loc 1 1804 3 is_stmt 1 view .LVU3884
1807:src/keys.c    **** 
 12673              		.loc 1 1807 10 is_stmt 0 view .LVU3885
 12674 17fa 3324     		movs	r4, #51
1804:src/keys.c    **** 		display_current_menu();
 12675              		.loc 1 1804 3 view .LVU3886
 12676 17fc FFF7FEFF 		bl	set_menu
 12677              	.LVL1080:
1805:src/keys.c    **** #endif
 12678              		.loc 1 1805 3 is_stmt 1 view .LVU3887
 12679 1800 FFF7FEFF 		bl	display_current_menu
 12680              	.LVL1081:
1807:src/keys.c    **** 
 12681              		.loc 1 1807 3 view .LVU3888
 12682 1804 3368     		ldr	r3, [r6]
1807:src/keys.c    **** 
 12683              		.loc 1 1807 10 is_stmt 0 view .LVU3889
ARM GAS  /tmp/ccXySG1f.s 			page 352


 12684 1806 FEF756BC 		b	.L801
 12685              	.LVL1082:
 12686              	.L1390:
1796:src/keys.c    **** 			State2.numdigit = 0;
 12687              		.loc 1 1796 4 is_stmt 1 view .LVU3890
1796:src/keys.c    **** 			State2.numdigit = 0;
 12688              		.loc 1 1796 17 is_stmt 0 view .LVU3891
 12689 180a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12690              	.LVL1083:
1797:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12691              		.loc 1 1797 20 view .LVU3892
 12692 180e 88F80B10 		strb	r1, [r8, #11]
1796:src/keys.c    **** 			State2.numdigit = 0;
 12693              		.loc 1 1796 17 view .LVU3893
 12694 1812 42F00802 		orr	r2, r2, #8
1798:src/keys.c    **** 			return STATE_UNFINISHED;
 12695              		.loc 1 1798 12 view .LVU3894
 12696 1816 0A21     		movs	r1, #10
 12697 1818 3368     		ldr	r3, [r6]
 12698 181a 88F81F10 		strb	r1, [r8, #31]
1796:src/keys.c    **** 			State2.numdigit = 0;
 12699              		.loc 1 1796 17 view .LVU3895
 12700 181e 88F81520 		strb	r2, [r8, #21]
1797:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12701              		.loc 1 1797 4 is_stmt 1 view .LVU3896
1798:src/keys.c    **** 			return STATE_UNFINISHED;
 12702              		.loc 1 1798 4 view .LVU3897
1799:src/keys.c    **** 		}
 12703              		.loc 1 1799 4 view .LVU3898
1799:src/keys.c    **** 		}
 12704              		.loc 1 1799 11 is_stmt 0 view .LVU3899
 12705 1822 3324     		movs	r4, #51
 12706 1824 FEF747BC 		b	.L801
 12707              	.LVL1084:
 12708              	.L1012:
1776:src/keys.c    **** 			init_arg(RARG_ASTO);
 12709              		.loc 1 1776 3 is_stmt 1 view .LVU3900
1776:src/keys.c    **** 			init_arg(RARG_ASTO);
 12710              		.loc 1 1776 6 is_stmt 0 view .LVU3901
 12711 1828 0128     		cmp	r0, #1
 12712 182a 7FF43BAD 		bne	.L1003
1777:src/keys.c    **** 			return STATE_UNFINISHED;
 12713              		.loc 1 1777 4 is_stmt 1 view .LVU3902
 12714              	.LVL1085:
 12715              	.LBB1298:
 12716              	.LBI1298:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12717              		.loc 1 552 13 view .LVU3903
 12718              	.LBB1299:
 553:src/keys.c    **** 		return;
 12719              		.loc 1 553 2 view .LVU3904
 553:src/keys.c    **** 		return;
 12720              		.loc 1 553 6 is_stmt 0 view .LVU3905
 12721 182e FFF7FEFF 		bl	is_bad_cmdline
 12722              	.LVL1086:
 553:src/keys.c    **** 		return;
 12723              		.loc 1 553 5 view .LVU3906
ARM GAS  /tmp/ccXySG1f.s 			page 353


 12724 1832 0346     		mov	r3, r0
 12725 1834 0028     		cmp	r0, #0
 12726 1836 7EF455AF 		bne	.L1309
 12727 183a 2620     		movs	r0, #38
 12728              	.LBE1299:
 12729              	.LBE1298:
 12730              	.LBE1311:
 12731              	.LBE1354:
 12732              	.LBE1417:
 12733              	.LBE1490:
3399:src/keys.c    ****   //print_debug(60,c);
 12734              		.loc 1 3399 7 view .LVU3907
 12735 183c 1D46     		mov	r5, r3
 12736              	.LBB1491:
 12737              	.LBB1418:
 12738              	.LBB1355:
 12739              	.LBB1312:
1778:src/keys.c    **** 		}
 12740              		.loc 1 1778 11 view .LVU3908
 12741 183e 3324     		movs	r4, #51
 12742              	.LBB1301:
 12743              	.LBB1300:
 12744 1840 FFF7FEFF 		bl	init_arg.part.0
 12745              	.LVL1087:
 12746 1844 3368     		ldr	r3, [r6]
 12747 1846 FEF736BC 		b	.L801
 12748              	.LVL1088:
 12749              	.L1388:
1778:src/keys.c    **** 		}
 12750              		.loc 1 1778 11 view .LVU3909
 12751 184a 2046     		mov	r0, r4
 12752 184c FEF7F2BD 		b	.L1105
 12753              	.LVL1089:
 12754              	.L1389:
1778:src/keys.c    **** 		}
 12755              		.loc 1 1778 11 view .LVU3910
 12756              	.LBE1300:
 12757              	.LBE1301:
1784:src/keys.c    **** 			return STATE_UNFINISHED;
 12758              		.loc 1 1784 4 is_stmt 1 view .LVU3911
 12759              	.LBB1302:
 12760              	.LBI1302:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12761              		.loc 1 552 13 view .LVU3912
 12762              	.LBB1303:
 553:src/keys.c    **** 		return;
 12763              		.loc 1 553 2 view .LVU3913
 553:src/keys.c    **** 		return;
 12764              		.loc 1 553 6 is_stmt 0 view .LVU3914
 12765 1850 FFF7FEFF 		bl	is_bad_cmdline
 12766              	.LVL1090:
 553:src/keys.c    **** 		return;
 12767              		.loc 1 553 5 view .LVU3915
 12768 1854 0346     		mov	r3, r0
 12769 1856 0028     		cmp	r0, #0
 12770 1858 7EF444AF 		bne	.L1309
 12771 185c 2720     		movs	r0, #39
ARM GAS  /tmp/ccXySG1f.s 			page 354


 12772              	.LBE1303:
 12773              	.LBE1302:
 12774              	.LBE1312:
 12775              	.LBE1355:
 12776              	.LBE1418:
 12777              	.LBE1491:
3399:src/keys.c    ****   //print_debug(60,c);
 12778              		.loc 1 3399 7 view .LVU3916
 12779 185e 1D46     		mov	r5, r3
 12780              	.LBB1492:
 12781              	.LBB1419:
 12782              	.LBB1356:
 12783              	.LBB1313:
1785:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12784              		.loc 1 1785 11 view .LVU3917
 12785 1860 3324     		movs	r4, #51
 12786              	.LBB1305:
 12787              	.LBB1304:
 12788 1862 FFF7FEFF 		bl	init_arg.part.0
 12789              	.LVL1091:
 12790 1866 3368     		ldr	r3, [r6]
 12791 1868 FEF725BC 		b	.L801
 12792              	.LVL1092:
 12793              	.L1078:
1785:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12794              		.loc 1 1785 11 view .LVU3918
 12795              	.LBE1304:
 12796              	.LBE1305:
 12797              	.LBE1313:
 12798              	.LBE1356:
 12799              	.LBB1357:
 12800              	.LBB940:
1421:src/keys.c    ****        return process_cmplx(c);
 12801              		.loc 1 1421 6 is_stmt 1 view .LVU3919
1421:src/keys.c    ****        return process_cmplx(c);
 12802              		.loc 1 1421 21 is_stmt 0 view .LVU3920
 12803 186c DAF80030 		ldr	r3, [r10]
 12804 1870 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
1421:src/keys.c    ****        return process_cmplx(c);
 12805              		.loc 1 1421 9 view .LVU3921
 12806 1874 13F0060F 		tst	r3, #6
1422:src/keys.c    ****      }
 12807              		.loc 1 1422 15 view .LVU3922
 12808 1878 4FF00E00 		mov	r0, #14
1421:src/keys.c    ****        return process_cmplx(c);
 12809              		.loc 1 1421 9 view .LVU3923
 12810 187c 7EF42BAD 		bne	.L1300
 12811 1880 28E5     		b	.L1302
 12812              	.L1039:
1294:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12813              		.loc 1 1294 4 is_stmt 1 view .LVU3924
1294:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12814              		.loc 1 1294 7 is_stmt 0 view .LVU3925
 12815 1882 0F2C     		cmp	r4, #15
 12816 1884 7FF492AE 		bne	.L1040
1295:src/keys.c    ****        reset_shift();
 12817              		.loc 1 1295 6 is_stmt 1 view .LVU3926
ARM GAS  /tmp/ccXySG1f.s 			page 355


1295:src/keys.c    ****        reset_shift();
 12818              		.loc 1 1295 9 is_stmt 0 view .LVU3927
 12819 1888 BBF1010F 		cmp	fp, #1
 12820 188c 00F04C82 		beq	.L1391
 12821              	.LBB854:
1311:src/keys.c    **** #endif
 12822              		.loc 1 1311 8 is_stmt 1 view .LVU3928
 12823              	.LVL1093:
1313:src/keys.c    **** 	 finish_cpx_entry(1);
 12824              		.loc 1 1313 8 view .LVU3929
1313:src/keys.c    **** 	 finish_cpx_entry(1);
 12825              		.loc 1 1313 11 is_stmt 0 view .LVU3930
 12826 1890 BBF1030F 		cmp	fp, #3
 12827 1894 00F03F82 		beq	.L1392
 12828              	.LBE854:
1320:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12829              		.loc 1 1320 4 is_stmt 1 view .LVU3931
1320:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12830              		.loc 1 1320 7 is_stmt 0 view .LVU3932
 12831 1898 BBF1000F 		cmp	fp, #0
 12832 189c 7FF416AD 		bne	.L1118
 12833              	.LVL1094:
 12834              	.L1077:
1414:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12835              		.loc 1 1414 6 is_stmt 1 view .LVU3933
1414:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12836              		.loc 1 1414 11 is_stmt 0 view .LVU3934
 12837 18a0 DAF80020 		ldr	r2, [r10]
1414:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12838              		.loc 1 1414 21 view .LVU3935
 12839 18a4 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1414:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12840              		.loc 1 1414 9 view .LVU3936
 12841 18a8 13F0060F 		tst	r3, #6
 12842 18ac 06D1     		bne	.L1076
1415:src/keys.c    ****        stack_begin (1);
 12843              		.loc 1 1415 8 is_stmt 1 view .LVU3937
 12844 18ae 43F00203 		orr	r3, r3, #2
 12845 18b2 82F8AC37 		strb	r3, [r2, #1964]
1416:src/keys.c    ****      }
 12846              		.loc 1 1416 8 view .LVU3938
 12847 18b6 0120     		movs	r0, #1
 12848 18b8 FFF7FEFF 		bl	stack_begin
 12849              	.LVL1095:
1418:src/keys.c    ****    case (K22): // CHS
 12850              		.loc 1 1418 6 view .LVU3939
 12851              	.L1076:
1430:src/keys.c    ****    case (K_CMPLX):
 12852              		.loc 1 1430 6 view .LVU3940
1430:src/keys.c    ****    case (K_CMPLX):
 12853              		.loc 1 1430 13 is_stmt 0 view .LVU3941
 12854 18bc 2046     		mov	r0, r4
 12855 18be FEF70ABD 		b	.L1300
 12856              	.L1073:
1447:src/keys.c    ****    }
 12857              		.loc 1 1447 12 is_stmt 1 view .LVU3942
1449:src/keys.c    ****    return process_cmplx(c);
ARM GAS  /tmp/ccXySG1f.s 			page 356


 12858              		.loc 1 1449 4 view .LVU3943
 12859 18c2 0020     		movs	r0, #0
 12860 18c4 FFF7FEFF 		bl	finish_cpx_entry
 12861              	.LVL1096:
1450:src/keys.c    **** 
 12862              		.loc 1 1450 4 view .LVU3944
1450:src/keys.c    **** 
 12863              		.loc 1 1450 11 is_stmt 0 view .LVU3945
 12864 18c8 2046     		mov	r0, r4
 12865 18ca FFF7FEFF 		bl	process_cmplx
 12866              	.LVL1097:
 12867 18ce 0446     		mov	r4, r0
 12868              	.LVL1098:
1450:src/keys.c    **** 
 12869              		.loc 1 1450 11 view .LVU3946
 12870 18d0 FEF786BD 		b	.L835
 12871              	.LVL1099:
 12872              	.L1295:
1321:src/keys.c    ****      switch (c) {
 12873              		.loc 1 1321 6 is_stmt 1 view .LVU3947
 12874 18d4 0020     		movs	r0, #0
 12875 18d6 FFF7FEFF 		bl	finish_cpx_entry
 12876              	.LVL1100:
1322:src/keys.c    ****      case (K60):
 12877              		.loc 1 1322 6 view .LVU3948
 12878 18da A4F10D03 		sub	r3, r4, #13
 12879 18de 192B     		cmp	r3, #25
 12880 18e0 3FF6F7AC 		bhi	.L1303
 12881 18e4 01A2     		adr	r2, .L1049
 12882 18e6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 12883 18ea 00BF     		.p2align 2
 12884              	.L1049:
 12885 18ec 2F1B0000 		.word	.L1056+1
 12886 18f0 031B0000 		.word	.L1055+1
 12887 18f4 D3120000 		.word	.L1303+1
 12888 18f8 B11A0000 		.word	.L1054+1
 12889 18fc D3120000 		.word	.L1303+1
 12890 1900 D3120000 		.word	.L1303+1
 12891 1904 D3120000 		.word	.L1303+1
 12892 1908 D3120000 		.word	.L1303+1
 12893 190c D3120000 		.word	.L1303+1
 12894 1910 9F1A0000 		.word	.L1053+1
 12895 1914 D3120000 		.word	.L1303+1
 12896 1918 911B0000 		.word	.L1052+1
 12897 191c D3120000 		.word	.L1303+1
 12898 1920 D3120000 		.word	.L1303+1
 12899 1924 D3120000 		.word	.L1303+1
 12900 1928 731B0000 		.word	.L1051+1
 12901 192c D3120000 		.word	.L1303+1
 12902 1930 D3120000 		.word	.L1303+1
 12903 1934 D3120000 		.word	.L1303+1
 12904 1938 D3120000 		.word	.L1303+1
 12905 193c D3120000 		.word	.L1303+1
 12906 1940 D3120000 		.word	.L1303+1
 12907 1944 D3120000 		.word	.L1303+1
 12908 1948 251A0000 		.word	.L1050+1
 12909 194c D3120000 		.word	.L1303+1
ARM GAS  /tmp/ccXySG1f.s 			page 357


 12910 1950 FD190000 		.word	.L1048+1
 12911              		.p2align 1
 12912              	.L1074:
1432:src/keys.c    ****        CLEAR_REAL;
 12913              		.loc 1 1432 6 view .LVU3949
1432:src/keys.c    ****        CLEAR_REAL;
 12914              		.loc 1 1432 10 is_stmt 0 view .LVU3950
 12915 1954 DAF80020 		ldr	r2, [r10]
 12916 1958 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1432:src/keys.c    ****        CLEAR_REAL;
 12917              		.loc 1 1432 9 view .LVU3951
 12918 195c 9807     		lsls	r0, r3, #30
 12919 195e 13D4     		bmi	.L1393
1439:src/keys.c    ****        finish_cpx_entry (1);
 12920              		.loc 1 1439 11 is_stmt 1 view .LVU3952
1439:src/keys.c    ****        finish_cpx_entry (1);
 12921              		.loc 1 1439 14 is_stmt 0 view .LVU3953
 12922 1960 5907     		lsls	r1, r3, #29
 12923 1962 06D5     		bpl	.L1083
1440:src/keys.c    ****      }
 12924              		.loc 1 1440 8 is_stmt 1 view .LVU3954
 12925 1964 0120     		movs	r0, #1
 12926 1966 FFF7FEFF 		bl	finish_cpx_entry
 12927              	.LVL1101:
1446:src/keys.c    ****    default:;
 12928              		.loc 1 1446 13 is_stmt 0 view .LVU3955
 12929 196a 3324     		movs	r4, #51
 12930              	.LVL1102:
1446:src/keys.c    ****    default:;
 12931              		.loc 1 1446 13 view .LVU3956
 12932 196c 3368     		ldr	r3, [r6]
 12933 196e FEF7A2BB 		b	.L801
 12934              	.LVL1103:
 12935              	.L1083:
1443:src/keys.c    ****        stack_begin (1);
 12936              		.loc 1 1443 8 is_stmt 1 view .LVU3957
 12937 1972 43F00403 		orr	r3, r3, #4
 12938 1976 82F8AC37 		strb	r3, [r2, #1964]
1444:src/keys.c    ****      }
 12939              		.loc 1 1444 8 view .LVU3958
 12940 197a 0120     		movs	r0, #1
 12941 197c FFF7FEFF 		bl	stack_begin
 12942              	.LVL1104:
1446:src/keys.c    ****    default:;
 12943              		.loc 1 1446 13 is_stmt 0 view .LVU3959
 12944 1980 3324     		movs	r4, #51
 12945              	.LVL1105:
1446:src/keys.c    ****    default:;
 12946              		.loc 1 1446 13 view .LVU3960
 12947 1982 3368     		ldr	r3, [r6]
 12948 1984 FEF797BB 		b	.L801
 12949              	.LVL1106:
 12950              	.L1393:
1433:src/keys.c    ****        SET_IMAG;
 12951              		.loc 1 1433 8 is_stmt 1 view .LVU3961
1434:src/keys.c    ****        do_command_line();
 12952              		.loc 1 1434 8 view .LVU3962
ARM GAS  /tmp/ccXySG1f.s 			page 358


1433:src/keys.c    ****        SET_IMAG;
 12953              		.loc 1 1433 8 is_stmt 0 view .LVU3963
 12954 1988 23F00603 		bic	r3, r3, #6
 12955              	.LBB855:
 12956              	.LBB856:
1191:src/keys.c    **** 		State2.state_lift = 0;
 12957              		.loc 1 1191 5 view .LVU3964
 12958 198c 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 12959              	.LBE856:
 12960              	.LBE855:
1433:src/keys.c    ****        SET_IMAG;
 12961              		.loc 1 1433 8 view .LVU3965
 12962 1990 43F00403 		orr	r3, r3, #4
 12963 1994 82F8AC37 		strb	r3, [r2, #1964]
1435:src/keys.c    ****        State2.state_lift = 0;
 12964              		.loc 1 1435 8 is_stmt 1 view .LVU3966
 12965              	.LBB859:
 12966              	.LBI855:
1190:src/keys.c    **** 	if (CmdLineLength) {
 12967              		.loc 1 1190 13 view .LVU3967
 12968              	.LBB857:
1191:src/keys.c    **** 		State2.state_lift = 0;
 12969              		.loc 1 1191 2 view .LVU3968
1191:src/keys.c    **** 		State2.state_lift = 0;
 12970              		.loc 1 1191 5 is_stmt 0 view .LVU3969
 12971 1998 09BB     		cbnz	r1, .L1394
 12972              	.L1082:
 12973              	.LBE857:
 12974              	.LBE859:
1436:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12975              		.loc 1 1436 8 is_stmt 1 view .LVU3970
1436:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12976              		.loc 1 1436 26 is_stmt 0 view .LVU3971
 12977 199a 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1437:src/keys.c    ****      }
 12978              		.loc 1 1437 8 view .LVU3972
 12979 199e 6420     		movs	r0, #100
1436:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12980              		.loc 1 1436 26 view .LVU3973
 12981 19a0 6FF38613 		bfc	r3, #6, #1
 12982 19a4 88F81730 		strb	r3, [r8, #23]
1437:src/keys.c    ****      }
 12983              		.loc 1 1437 8 is_stmt 1 view .LVU3974
 12984 19a8 FFF7FEFF 		bl	get_reg_n
 12985              	.LVL1107:
 12986 19ac 0446     		mov	r4, r0
 12987              	.LVL1108:
1437:src/keys.c    ****      }
 12988              		.loc 1 1437 8 is_stmt 0 view .LVU3975
 12989 19ae 6520     		movs	r0, #101
 12990 19b0 FFF7FEFF 		bl	get_reg_n
 12991              	.LVL1109:
 12992 19b4 0146     		mov	r1, r0
 12993 19b6 2046     		mov	r0, r4
 12994 19b8 FFF7FEFF 		bl	swap_reg
 12995              	.LVL1110:
1446:src/keys.c    ****    default:;
ARM GAS  /tmp/ccXySG1f.s 			page 359


 12996              		.loc 1 1446 13 view .LVU3976
 12997 19bc 3324     		movs	r4, #51
 12998 19be 3368     		ldr	r3, [r6]
 12999 19c0 FEF779BB 		b	.L801
 13000              	.LVL1111:
 13001              	.L938:
1446:src/keys.c    ****    default:;
 13002              		.loc 1 1446 13 view .LVU3977
 13003              	.LBE940:
 13004              	.LBE1357:
 13005              	.LBB1358:
 13006              	.LBB1139:
2830:src/keys.c    **** 			return STATE_UNFINISHED;
 13007              		.loc 1 2830 5 is_stmt 1 view .LVU3978
2830:src/keys.c    **** 			return STATE_UNFINISHED;
 13008              		.loc 1 2830 20 is_stmt 0 view .LVU3979
 13009 19c4 013A     		subs	r2, r2, #1
 13010 19c6 3368     		ldr	r3, [r6]
 13011 19c8 88F80B20 		strb	r2, [r8, #11]
2831:src/keys.c    **** 		}
 13012              		.loc 1 2831 11 view .LVU3980
 13013 19cc 3324     		movs	r4, #51
 13014              	.LVL1112:
2831:src/keys.c    **** 		}
 13015              		.loc 1 2831 11 view .LVU3981
 13016 19ce FEF772BB 		b	.L801
 13017              	.LVL1113:
 13018              	.L1387:
2831:src/keys.c    **** 		}
 13019              		.loc 1 2831 11 view .LVU3982
 13020              	.LBE1139:
 13021              	.LBE1358:
 13022              	.LBB1359:
 13023              	.LBB1192:
2997:src/keys.c    **** 		State2.digval = pc;
 13024              		.loc 1 2997 4 is_stmt 1 view .LVU3983
2997:src/keys.c    **** 		State2.digval = pc;
 13025              		.loc 1 2997 9 is_stmt 0 view .LVU3984
 13026 19d2 2046     		mov	r0, r4
 13027 19d4 0121     		movs	r1, #1
 13028 19d6 FFF7FEFF 		bl	advance_to_next_label
 13029              	.LVL1114:
 13030 19da 0446     		mov	r4, r0
 13031              	.LVL1115:
2997:src/keys.c    **** 		State2.digval = pc;
 13032              		.loc 1 2997 9 view .LVU3985
 13033 19dc 83E6     		b	.L949
 13034              	.LVL1116:
 13035              	.L1394:
2997:src/keys.c    **** 		State2.digval = pc;
 13036              		.loc 1 2997 9 view .LVU3986
 13037              	.LBE1192:
 13038              	.LBE1359:
 13039              	.LBB1360:
 13040              	.LBB941:
 13041              	.LBB860:
 13042              	.LBB858:
ARM GAS  /tmp/ccXySG1f.s 			page 360


1192:src/keys.c    **** 		process_cmdline();
 13043              		.loc 1 1192 3 is_stmt 1 view .LVU3987
1192:src/keys.c    **** 		process_cmdline();
 13044              		.loc 1 1192 21 is_stmt 0 view .LVU3988
 13045 19de 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 13046 19e2 6FF38613 		bfc	r3, #6, #1
 13047 19e6 88F81730 		strb	r3, [r8, #23]
1193:src/keys.c    **** 	}
 13048              		.loc 1 1193 3 is_stmt 1 view .LVU3989
 13049 19ea FFF7FEFF 		bl	process_cmdline
 13050              	.LVL1117:
 13051 19ee D4E7     		b	.L1082
 13052              	.L1414:
 13053              		.align	2
 13054              	.L1413:
 13055 19f0 00000000 		.word	.LANCHOR17
 13056 19f4 00000000 		.word	NonProgrammable
 13057 19f8 00000000 		.word	main_ram
 13058              	.L1048:
1193:src/keys.c    **** 	}
 13059              		.loc 1 1193 3 is_stmt 0 view .LVU3990
 13060              	.LBE858:
 13061              	.LBE860:
1359:src/keys.c    ****        if (shift == SHIFT_F) {
 13062              		.loc 1 1359 8 is_stmt 1 view .LVU3991
 13063              	.LBB861:
 13064              	.LBI861:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13065              		.loc 1 114 13 view .LVU3992
 13066              	.LBE861:
 13067              	.LBE941:
 13068              	.LBE1360:
 13069              	.LBE1419:
 13070              	.LBE1492:
 115:src/keys.c    **** }
 13071              		.loc 1 115 2 view .LVU3993
 13072              	.LVL1118:
 13073              	.LBB1493:
 13074              	.LBB1420:
 13075              	.LBB1361:
 13076              	.LBB942:
 13077              	.LBB868:
 13078              	.LBB862:
 13079              	.LBI862:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13080              		.loc 1 104 20 view .LVU3994
 13081              	.LBB863:
 105:src/keys.c    **** 	State2.shifts = shift;
 13082              		.loc 1 105 2 view .LVU3995
 13083              	.LBB864:
 13084              	.LBI864:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13085              		.loc 1 96 13 view .LVU3996
 13086              	.LBB865:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13087              		.loc 1 97 2 view .LVU3997
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccXySG1f.s 			page 361


 13088              		.loc 1 97 18 is_stmt 0 view .LVU3998
 13089 19fc FFF7FEFF 		bl	shift_down
 13090              	.LVL1119:
  98:src/keys.c    **** }
 13091              		.loc 1 98 2 is_stmt 1 view .LVU3999
 13092              	.LBE865:
 13093              	.LBE864:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13094              		.loc 1 106 2 view .LVU4000
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13095              		.loc 1 106 16 is_stmt 0 view .LVU4001
 13096 1a00 0023     		movs	r3, #0
 13097              	.LBE863:
 13098              	.LBE862:
 13099              	.LBE868:
1360:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13100              		.loc 1 1360 11 view .LVU4002
 13101 1a02 BBF1010F 		cmp	fp, #1
 13102              	.LBB869:
 13103              	.LBB867:
 13104              	.LBB866:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13105              		.loc 1 106 16 view .LVU4003
 13106 1a06 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13107              		.loc 1 108 2 is_stmt 1 view .LVU4004
 13108              	.LVL1120:
 108:src/keys.c    **** }
 13109              		.loc 1 108 2 is_stmt 0 view .LVU4005
 13110              	.LBE866:
 13111              	.LBE867:
 13112              	.LBE869:
1360:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13113              		.loc 1 1360 8 is_stmt 1 view .LVU4006
1360:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13114              		.loc 1 1360 11 is_stmt 0 view .LVU4007
 13115 1a0a 38D0     		beq	.L1067
1363:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13116              		.loc 1 1363 13 is_stmt 1 view .LVU4008
1363:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13117              		.loc 1 1363 16 is_stmt 0 view .LVU4009
 13118 1a0c BBF1020F 		cmp	fp, #2
 13119 1a10 2BD0     		beq	.L1395
 13120              	.L1063:
1397:src/keys.c    ****      return STATE_UNFINISHED;
 13121              		.loc 1 1397 6 is_stmt 1 view .LVU4010
 13122              	.LBB870:
 13123              	.LBI870:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13124              		.loc 1 114 13 view .LVU4011
 13125              	.LBE870:
 13126              	.LBE942:
 13127              	.LBE1361:
 13128              	.LBE1420:
 13129              	.LBE1493:
 115:src/keys.c    **** }
 13130              		.loc 1 115 2 view .LVU4012
ARM GAS  /tmp/ccXySG1f.s 			page 362


 13131              	.LVL1121:
 13132              	.LBB1494:
 13133              	.LBB1421:
 13134              	.LBB1362:
 13135              	.LBB943:
 13136              	.LBB875:
 13137              	.LBB871:
 13138              	.LBI871:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13139              		.loc 1 104 20 view .LVU4013
 13140              	.LBB872:
 105:src/keys.c    **** 	State2.shifts = shift;
 13141              		.loc 1 105 2 view .LVU4014
 13142              	.LBB873:
 13143              	.LBI873:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13144              		.loc 1 96 13 view .LVU4015
 13145              	.LBB874:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13146              		.loc 1 97 2 view .LVU4016
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13147              		.loc 1 97 18 is_stmt 0 view .LVU4017
 13148 1a12 FFF7FEFF 		bl	shift_down
 13149              	.LVL1122:
  98:src/keys.c    **** }
 13150              		.loc 1 98 2 is_stmt 1 view .LVU4018
 13151              	.LBE874:
 13152              	.LBE873:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13153              		.loc 1 106 2 view .LVU4019
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13154              		.loc 1 106 16 is_stmt 0 view .LVU4020
 13155 1a16 0022     		movs	r2, #0
 13156 1a18 3368     		ldr	r3, [r6]
 13157 1a1a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13158              		.loc 1 108 2 is_stmt 1 view .LVU4021
 13159              	.LVL1123:
 108:src/keys.c    **** }
 13160              		.loc 1 108 2 is_stmt 0 view .LVU4022
 13161              	.LBE872:
 13162              	.LBE871:
 13163              	.LBE875:
1398:src/keys.c    ****    }
 13164              		.loc 1 1398 6 is_stmt 1 view .LVU4023
1398:src/keys.c    ****    }
 13165              		.loc 1 1398 13 is_stmt 0 view .LVU4024
 13166 1a1e 3324     		movs	r4, #51
 13167              	.LVL1124:
1398:src/keys.c    ****    }
 13168              		.loc 1 1398 13 view .LVU4025
 13169 1a20 FEF749BB 		b	.L801
 13170              	.LVL1125:
 13171              	.L1050:
1324:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 13172              		.loc 1 1324 8 is_stmt 1 view .LVU4026
 13173              	.LBB876:
ARM GAS  /tmp/ccXySG1f.s 			page 363


 13174              	.LBI876:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13175              		.loc 1 114 13 view .LVU4027
 13176              	.LBE876:
 13177              	.LBE943:
 13178              	.LBE1362:
 13179              	.LBE1421:
 13180              	.LBE1494:
 115:src/keys.c    **** }
 13181              		.loc 1 115 2 view .LVU4028
 13182              	.LBB1495:
 13183              	.LBB1422:
 13184              	.LBB1363:
 13185              	.LBB944:
 13186              	.LBB883:
 13187              	.LBB877:
 13188              	.LBI877:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13189              		.loc 1 104 20 view .LVU4029
 13190              	.LBB878:
 105:src/keys.c    **** 	State2.shifts = shift;
 13191              		.loc 1 105 2 view .LVU4030
 13192              	.LBB879:
 13193              	.LBI879:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13194              		.loc 1 96 13 view .LVU4031
 13195              	.LBB880:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13196              		.loc 1 97 2 view .LVU4032
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13197              		.loc 1 97 18 is_stmt 0 view .LVU4033
 13198 1a24 FFF7FEFF 		bl	shift_down
 13199              	.LVL1126:
  98:src/keys.c    **** }
 13200              		.loc 1 98 2 is_stmt 1 view .LVU4034
 13201              	.LBE880:
 13202              	.LBE879:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13203              		.loc 1 106 2 view .LVU4035
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13204              		.loc 1 106 16 is_stmt 0 view .LVU4036
 13205 1a28 0023     		movs	r3, #0
 13206              	.LBE878:
 13207              	.LBE877:
 13208              	.LBE883:
1325:src/keys.c    ****      case (K21): // x<->y key
 13209              		.loc 1 1325 11 view .LVU4037
 13210 1a2a BBF1030F 		cmp	fp, #3
 13211              	.LBB884:
 13212              	.LBB882:
 13213              	.LBB881:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13214              		.loc 1 106 16 view .LVU4038
 13215 1a2e 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13216              		.loc 1 108 2 is_stmt 1 view .LVU4039
 13217              	.LVL1127:
ARM GAS  /tmp/ccXySG1f.s 			page 364


 108:src/keys.c    **** }
 13218              		.loc 1 108 2 is_stmt 0 view .LVU4040
 13219              	.LBE881:
 13220              	.LBE882:
 13221              	.LBE884:
1325:src/keys.c    ****      case (K21): // x<->y key
 13222              		.loc 1 1325 8 is_stmt 1 view .LVU4041
1325:src/keys.c    ****      case (K21): // x<->y key
 13223              		.loc 1 1325 11 is_stmt 0 view .LVU4042
 13224 1a32 00F0D280 		beq	.L1396
1327:src/keys.c    **** 	 reset_shift();
 13225              		.loc 1 1327 8 is_stmt 1 view .LVU4043
1327:src/keys.c    **** 	 reset_shift();
 13226              		.loc 1 1327 29 is_stmt 0 view .LVU4044
 13227 1a36 0BF1FF33 		add	r3, fp, #-1
1327:src/keys.c    **** 	 reset_shift();
 13228              		.loc 1 1327 11 view .LVU4045
 13229 1a3a DBB2     		uxtb	r3, r3
 13230 1a3c 012B     		cmp	r3, #1
 13231 1a3e E8D8     		bhi	.L1063
 13232              	.L1117:
1328:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13233              		.loc 1 1328 3 is_stmt 1 view .LVU4046
 13234              	.LBB885:
 13235              	.LBI885:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13236              		.loc 1 114 13 view .LVU4047
 13237              	.LBE885:
 13238              	.LBE944:
 13239              	.LBE1363:
 13240              	.LBE1422:
 13241              	.LBE1495:
 115:src/keys.c    **** }
 13242              		.loc 1 115 2 view .LVU4048
 13243              	.LVL1128:
 13244              	.LBB1496:
 13245              	.LBB1423:
 13246              	.LBB1364:
 13247              	.LBB945:
 13248              	.LBB892:
 13249              	.LBB886:
 13250              	.LBI886:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13251              		.loc 1 104 20 view .LVU4049
 13252              	.LBB887:
 105:src/keys.c    **** 	State2.shifts = shift;
 13253              		.loc 1 105 2 view .LVU4050
 13254              	.LBB888:
 13255              	.LBI888:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13256              		.loc 1 96 13 view .LVU4051
 13257              	.LBB889:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13258              		.loc 1 97 2 view .LVU4052
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13259              		.loc 1 97 18 is_stmt 0 view .LVU4053
 13260 1a40 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccXySG1f.s 			page 365


 13261              	.LVL1129:
  98:src/keys.c    **** }
 13262              		.loc 1 98 2 is_stmt 1 view .LVU4054
 13263              	.LBE889:
 13264              	.LBE888:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13265              		.loc 1 106 2 view .LVU4055
 13266              	.LBE887:
 13267              	.LBE886:
 13268              	.LBE892:
1329:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 13269              		.loc 1 1329 3 is_stmt 0 view .LVU4056
 13270 1a44 DAF80010 		ldr	r1, [r10]
 13271              	.LBB893:
 13272              	.LBB891:
 13273              	.LBB890:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13274              		.loc 1 106 16 view .LVU4057
 13275 1a48 0022     		movs	r2, #0
 13276 1a4a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13277              		.loc 1 108 2 is_stmt 1 view .LVU4058
 13278              	.LVL1130:
 108:src/keys.c    **** }
 13279              		.loc 1 108 2 is_stmt 0 view .LVU4059
 13280              	.LBE890:
 13281              	.LBE891:
 13282              	.LBE893:
1329:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 13283              		.loc 1 1329 3 is_stmt 1 view .LVU4060
 13284 1a4e 91F8AD37 		ldrb	r3, [r1, #1965]	@ zero_extendqisi2
 13285 1a52 43F00103 		orr	r3, r3, #1
 13286 1a56 81F8AD37 		strb	r3, [r1, #1965]
1330:src/keys.c    ****        }
 13287              		.loc 1 1330 3 view .LVU4061
 13288              	.LVL1131:
1330:src/keys.c    ****        }
 13289              		.loc 1 1330 3 is_stmt 0 view .LVU4062
 13290              	.LBE945:
 13291              	.LBE1364:
 13292              	.LBE1423:
 13293              	.LBE1496:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13294              		.loc 1 3625 7 is_stmt 1 view .LVU4063
3625:src/keys.c    **** 	NonProgrammable = 0;
 13295              		.loc 1 3625 11 is_stmt 0 view .LVU4064
 13296 1a5a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	NonProgrammable = 0;
 13297              		.loc 1 3625 10 view .LVU4065
 13298 1a5e 5B06     		lsls	r3, r3, #25
 13299 1a60 00F19080 		bmi	.L1060
 13300              	.LBB1497:
 13301              	.LBB1424:
 13302              	.LBB1365:
 13303              	.LBB946:
1330:src/keys.c    ****        }
 13304              		.loc 1 1330 10 view .LVU4066
ARM GAS  /tmp/ccXySG1f.s 			page 366


 13305 1a64 43F26514 		movw	r4, #12645
 13306 1a68 8DE6     		b	.L1044
 13307              	.LVL1132:
 13308              	.L1395:
1330:src/keys.c    ****        }
 13309              		.loc 1 1330 10 view .LVU4067
 13310              	.LBE946:
 13311              	.LBE1365:
 13312              	.LBE1424:
 13313              	.LBE1497:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13314              		.loc 1 3625 7 is_stmt 1 view .LVU4068
3625:src/keys.c    **** 	NonProgrammable = 0;
 13315              		.loc 1 3625 11 is_stmt 0 view .LVU4069
 13316 1a6a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	NonProgrammable = 0;
 13317              		.loc 1 3625 10 view .LVU4070
 13318 1a6e 5106     		lsls	r1, r2, #25
 13319 1a70 0FD5     		bpl	.L1160
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13320              		.loc 1 3626 2 is_stmt 1 view .LVU4071
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13321              		.loc 1 3626 18 is_stmt 0 view .LVU4072
 13322 1a72 C14A     		ldr	r2, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13323              		.loc 1 3627 32 view .LVU4073
 13324 1a74 40F2C510 		movw	r0, #453
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13325              		.loc 1 3626 18 view .LVU4074
 13326 1a78 1360     		str	r3, [r2]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13327              		.loc 1 3627 2 is_stmt 1 view .LVU4075
 13328 1a7a FEF7EABD 		b	.L1101
 13329              	.LVL1133:
 13330              	.L1067:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13331              		.loc 1 3625 7 view .LVU4076
3625:src/keys.c    **** 	NonProgrammable = 0;
 13332              		.loc 1 3625 11 is_stmt 0 view .LVU4077
 13333 1a7e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	NonProgrammable = 0;
 13334              		.loc 1 3625 10 view .LVU4078
 13335 1a82 5006     		lsls	r0, r2, #25
 13336 1a84 08D5     		bpl	.L1159
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13337              		.loc 1 3626 2 is_stmt 1 view .LVU4079
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13338              		.loc 1 3626 18 is_stmt 0 view .LVU4080
 13339 1a86 BC4A     		ldr	r2, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13340              		.loc 1 3627 32 view .LVU4081
 13341 1a88 4FF4E370 		mov	r0, #454
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13342              		.loc 1 3626 18 view .LVU4082
 13343 1a8c 1360     		str	r3, [r2]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13344              		.loc 1 3627 2 is_stmt 1 view .LVU4083
ARM GAS  /tmp/ccXySG1f.s 			page 367


 13345 1a8e FEF7E0BD 		b	.L1101
 13346              	.LVL1134:
 13347              	.L1160:
 13348              	.LBB1498:
 13349              	.LBB1425:
 13350              	.LBB1366:
 13351              	.LBB947:
1364:src/keys.c    ****        }
 13352              		.loc 1 1364 10 is_stmt 0 view .LVU4084
 13353 1a92 40F2C514 		movw	r4, #453
 13354 1a96 76E6     		b	.L1044
 13355              	.LVL1135:
 13356              	.L1159:
1361:src/keys.c    ****        }
 13357              		.loc 1 1361 10 view .LVU4085
 13358 1a98 4FF4E374 		mov	r4, #454
 13359 1a9c 73E6     		b	.L1044
 13360              	.LVL1136:
 13361              	.L1053:
1375:src/keys.c    ****      case (K34): // divide key
 13362              		.loc 1 1375 8 is_stmt 1 view .LVU4086
1377:src/keys.c    **** 	 reset_shift();
 13363              		.loc 1 1377 8 view .LVU4087
1377:src/keys.c    **** 	 reset_shift();
 13364              		.loc 1 1377 11 is_stmt 0 view .LVU4088
 13365 1a9e BBF1030F 		cmp	fp, #3
 13366 1aa2 22D0     		beq	.L1397
1382:src/keys.c    ****        }
 13367              		.loc 1 1382 3 is_stmt 1 view .LVU4089
1382:src/keys.c    ****        }
 13368              		.loc 1 1382 10 is_stmt 0 view .LVU4090
 13369 1aa4 1620     		movs	r0, #22
 13370 1aa6 FFF7FEFF 		bl	process_cmplx
 13371              	.LVL1137:
 13372 1aaa 0446     		mov	r4, r0
 13373              	.LVL1138:
1382:src/keys.c    ****        }
 13374              		.loc 1 1382 10 view .LVU4091
 13375 1aac FEF798BC 		b	.L835
 13376              	.LVL1139:
 13377              	.L1054:
1384:src/keys.c    ****      case (K24): // <- key
 13378              		.loc 1 1384 8 is_stmt 1 view .LVU4092
1386:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13379              		.loc 1 1386 8 view .LVU4093
1386:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13380              		.loc 1 1386 12 is_stmt 0 view .LVU4094
 13381 1ab0 DAF80030 		ldr	r3, [r10]
1386:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13382              		.loc 1 1386 11 view .LVU4095
 13383 1ab4 93F9AC37 		ldrsb	r3, [r3, #1964]
 13384 1ab8 002B     		cmp	r3, #0
 13385 1aba AADB     		blt	.L1063
1387:src/keys.c    **** 	 zero_X ();
 13386              		.loc 1 1387 8 is_stmt 1 view .LVU4096
1387:src/keys.c    **** 	 zero_X ();
 13387              		.loc 1 1387 11 is_stmt 0 view .LVU4097
ARM GAS  /tmp/ccXySG1f.s 			page 368


 13388 1abc BBF1030F 		cmp	fp, #3
 13389 1ac0 A7D1     		bne	.L1063
1388:src/keys.c    **** 	 State2.state_lift = 0;
 13390              		.loc 1 1388 3 is_stmt 1 view .LVU4098
 13391 1ac2 FFF7FEFF 		bl	zero_X
 13392              	.LVL1140:
1389:src/keys.c    **** 	 SET_REAL;
 13393              		.loc 1 1389 3 view .LVU4099
1389:src/keys.c    **** 	 SET_REAL;
 13394              		.loc 1 1389 21 is_stmt 0 view .LVU4100
 13395 1ac6 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1390:src/keys.c    **** 	 stack_begin (0);
 13396              		.loc 1 1390 3 view .LVU4101
 13397 1aca DAF80020 		ldr	r2, [r10]
1389:src/keys.c    **** 	 SET_REAL;
 13398              		.loc 1 1389 21 view .LVU4102
 13399 1ace 6FF38613 		bfc	r3, #6, #1
 13400 1ad2 88F81730 		strb	r3, [r8, #23]
1390:src/keys.c    **** 	 stack_begin (0);
 13401              		.loc 1 1390 3 is_stmt 1 view .LVU4103
 13402 1ad6 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 13403 1ada 43F00203 		orr	r3, r3, #2
 13404 1ade 82F8AC37 		strb	r3, [r2, #1964]
1391:src/keys.c    ****        }
 13405              		.loc 1 1391 3 view .LVU4104
 13406 1ae2 0020     		movs	r0, #0
 13407 1ae4 FFF7FEFF 		bl	stack_begin
 13408              	.LVL1141:
 13409 1ae8 93E7     		b	.L1063
 13410              	.L1397:
1378:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
 13411              		.loc 1 1378 3 view .LVU4105
 13412              	.LBB894:
 13413              	.LBI894:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13414              		.loc 1 114 13 view .LVU4106
 13415              	.LBE894:
 13416              	.LBE947:
 13417              	.LBE1366:
 13418              	.LBE1425:
 13419              	.LBE1498:
 115:src/keys.c    **** }
 13420              		.loc 1 115 2 view .LVU4107
 13421              	.LVL1142:
 13422              	.LBB1499:
 13423              	.LBB1426:
 13424              	.LBB1367:
 13425              	.LBB948:
 13426              	.LBB903:
 13427              	.LBB895:
 13428              	.LBI895:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13429              		.loc 1 104 20 view .LVU4108
 13430              	.LBB896:
 105:src/keys.c    **** 	State2.shifts = shift;
 13431              		.loc 1 105 2 view .LVU4109
 13432              	.LBB897:
ARM GAS  /tmp/ccXySG1f.s 			page 369


 13433              	.LBI897:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13434              		.loc 1 96 13 view .LVU4110
 13435              	.LBB898:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13436              		.loc 1 97 2 view .LVU4111
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13437              		.loc 1 97 18 is_stmt 0 view .LVU4112
 13438 1aea FFF7FEFF 		bl	shift_down
 13439              	.LVL1143:
  98:src/keys.c    **** }
 13440              		.loc 1 98 2 is_stmt 1 view .LVU4113
 13441              	.LBE898:
 13442              	.LBE897:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13443              		.loc 1 106 2 view .LVU4114
 13444              	.LBE896:
 13445              	.LBE895:
 13446              	.LBE903:
 13447              	.LBE948:
 13448              	.LBE1367:
 13449              	.LBE1426:
 13450              	.LBE1499:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13451              		.loc 1 3625 11 is_stmt 0 view .LVU4115
 13452 1aee 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13453              	.LBB1500:
 13454              	.LBB1427:
 13455              	.LBB1368:
 13456              	.LBB949:
 13457              	.LBB904:
 13458              	.LBB901:
 13459              	.LBB899:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13460              		.loc 1 106 16 view .LVU4116
 13461 1af2 0023     		movs	r3, #0
 13462              	.LBE899:
 13463              	.LBE901:
 13464              	.LBE904:
 13465              	.LBE949:
 13466              	.LBE1368:
 13467              	.LBE1427:
 13468              	.LBE1500:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13469              		.loc 1 3625 10 view .LVU4117
 13470 1af4 5406     		lsls	r4, r2, #25
 13471              	.LVL1144:
 13472              	.LBB1501:
 13473              	.LBB1428:
 13474              	.LBB1369:
 13475              	.LBB950:
 13476              	.LBB905:
 13477              	.LBB902:
 13478              	.LBB900:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13479              		.loc 1 106 16 view .LVU4118
 13480 1af6 88F81030 		strb	r3, [r8, #16]
ARM GAS  /tmp/ccXySG1f.s 			page 370


 108:src/keys.c    **** }
 13481              		.loc 1 108 2 is_stmt 1 view .LVU4119
 13482              	.LVL1145:
 108:src/keys.c    **** }
 13483              		.loc 1 108 2 is_stmt 0 view .LVU4120
 13484              	.LBE900:
 13485              	.LBE902:
 13486              	.LBE905:
1379:src/keys.c    ****        }
 13487              		.loc 1 1379 3 is_stmt 1 view .LVU4121
1379:src/keys.c    ****        }
 13488              		.loc 1 1379 3 is_stmt 0 view .LVU4122
 13489              	.LBE950:
 13490              	.LBE1369:
 13491              	.LBE1428:
 13492              	.LBE1501:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13493              		.loc 1 3625 7 is_stmt 1 view .LVU4123
3625:src/keys.c    **** 	NonProgrammable = 0;
 13494              		.loc 1 3625 10 is_stmt 0 view .LVU4124
 13495 1afa 27D4     		bmi	.L1072
 13496              	.LBB1502:
 13497              	.LBB1429:
 13498              	.LBB1370:
 13499              	.LBB951:
1379:src/keys.c    ****        }
 13500              		.loc 1 1379 10 view .LVU4125
 13501 1afc 40F23464 		movw	r4, #1588
 13502 1b00 41E6     		b	.L1044
 13503              	.LVL1146:
 13504              	.L1055:
1350:src/keys.c    ****        if (shift == SHIFT_F ) {
 13505              		.loc 1 1350 8 is_stmt 1 view .LVU4126
 13506              	.LBB906:
 13507              	.LBI906:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13508              		.loc 1 114 13 view .LVU4127
 13509              	.LBE906:
 13510              	.LBE951:
 13511              	.LBE1370:
 13512              	.LBE1429:
 13513              	.LBE1502:
 115:src/keys.c    **** }
 13514              		.loc 1 115 2 view .LVU4128
 13515              	.LBB1503:
 13516              	.LBB1430:
 13517              	.LBB1371:
 13518              	.LBB952:
 13519              	.LBB913:
 13520              	.LBB907:
 13521              	.LBI907:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13522              		.loc 1 104 20 view .LVU4129
 13523              	.LBB908:
 105:src/keys.c    **** 	State2.shifts = shift;
 13524              		.loc 1 105 2 view .LVU4130
 13525              	.LBB909:
ARM GAS  /tmp/ccXySG1f.s 			page 371


 13526              	.LBI909:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13527              		.loc 1 96 13 view .LVU4131
 13528              	.LBB910:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13529              		.loc 1 97 2 view .LVU4132
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13530              		.loc 1 97 18 is_stmt 0 view .LVU4133
 13531 1b02 FFF7FEFF 		bl	shift_down
 13532              	.LVL1147:
  98:src/keys.c    **** }
 13533              		.loc 1 98 2 is_stmt 1 view .LVU4134
 13534              	.LBE910:
 13535              	.LBE909:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13536              		.loc 1 106 2 view .LVU4135
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13537              		.loc 1 106 16 is_stmt 0 view .LVU4136
 13538 1b06 0023     		movs	r3, #0
 13539              	.LBE908:
 13540              	.LBE907:
 13541              	.LBE913:
1351:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13542              		.loc 1 1351 11 view .LVU4137
 13543 1b08 BBF1010F 		cmp	fp, #1
 13544              	.LBB914:
 13545              	.LBB912:
 13546              	.LBB911:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13547              		.loc 1 106 16 view .LVU4138
 13548 1b0c 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13549              		.loc 1 108 2 is_stmt 1 view .LVU4139
 13550              	.LVL1148:
 108:src/keys.c    **** }
 13551              		.loc 1 108 2 is_stmt 0 view .LVU4140
 13552              	.LBE911:
 13553              	.LBE912:
 13554              	.LBE914:
1351:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13555              		.loc 1 1351 8 is_stmt 1 view .LVU4141
1351:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13556              		.loc 1 1351 11 is_stmt 0 view .LVU4142
 13557 1b10 25D0     		beq	.L1065
1354:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13558              		.loc 1 1354 13 is_stmt 1 view .LVU4143
1354:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13559              		.loc 1 1354 16 is_stmt 0 view .LVU4144
 13560 1b12 BBF1030F 		cmp	fp, #3
 13561 1b16 7FF47CAF 		bne	.L1063
 13562              	.LVL1149:
1354:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13563              		.loc 1 1354 16 view .LVU4145
 13564              	.LBE952:
 13565              	.LBE1371:
 13566              	.LBE1430:
 13567              	.LBE1503:
ARM GAS  /tmp/ccXySG1f.s 			page 372


3625:src/keys.c    **** 	NonProgrammable = 0;
 13568              		.loc 1 3625 7 is_stmt 1 view .LVU4146
3625:src/keys.c    **** 	NonProgrammable = 0;
 13569              		.loc 1 3625 11 is_stmt 0 view .LVU4147
 13570 1b1a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	NonProgrammable = 0;
 13571              		.loc 1 3625 10 view .LVU4148
 13572 1b1e 5406     		lsls	r4, r2, #25
 13573 1b20 1AD5     		bpl	.L1158
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13574              		.loc 1 3626 2 is_stmt 1 view .LVU4149
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13575              		.loc 1 3626 18 is_stmt 0 view .LVU4150
 13576 1b22 954A     		ldr	r2, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13577              		.loc 1 3627 32 view .LVU4151
 13578 1b24 4FF4E270 		mov	r0, #452
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13579              		.loc 1 3626 18 view .LVU4152
 13580 1b28 1360     		str	r3, [r2]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13581              		.loc 1 3627 2 is_stmt 1 view .LVU4153
 13582 1b2a FEF792BD 		b	.L1101
 13583              	.LVL1150:
 13584              	.L1056:
 13585              	.LBB1504:
 13586              	.LBB1431:
 13587              	.LBB1372:
 13588              	.LBB953:
1327:src/keys.c    **** 	 reset_shift();
 13589              		.loc 1 1327 8 view .LVU4154
1327:src/keys.c    **** 	 reset_shift();
 13590              		.loc 1 1327 29 is_stmt 0 view .LVU4155
 13591 1b2e 0BF1FF33 		add	r3, fp, #-1
1327:src/keys.c    **** 	 reset_shift();
 13592              		.loc 1 1327 11 view .LVU4156
 13593 1b32 DBB2     		uxtb	r3, r3
 13594 1b34 012B     		cmp	r3, #1
 13595 1b36 83D9     		bls	.L1117
1332:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 13596              		.loc 1 1332 13 is_stmt 1 view .LVU4157
1332:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 13597              		.loc 1 1332 16 is_stmt 0 view .LVU4158
 13598 1b38 BBF1030F 		cmp	fp, #3
 13599 1b3c 7FF469AF 		bne	.L1063
1333:src/keys.c    ****        }
 13600              		.loc 1 1333 3 is_stmt 1 view .LVU4159
1333:src/keys.c    ****        }
 13601              		.loc 1 1333 10 is_stmt 0 view .LVU4160
 13602 1b40 0D20     		movs	r0, #13
 13603 1b42 FFF7FEFF 		bl	process_cmplx
 13604              	.LVL1151:
 13605 1b46 0446     		mov	r4, r0
 13606              	.LVL1152:
1333:src/keys.c    ****        }
 13607              		.loc 1 1333 10 view .LVU4161
 13608 1b48 FEF74ABC 		b	.L835
ARM GAS  /tmp/ccXySG1f.s 			page 373


 13609              	.LVL1153:
 13610              	.L1072:
1333:src/keys.c    ****        }
 13611              		.loc 1 1333 10 view .LVU4162
 13612              	.LBE953:
 13613              	.LBE1372:
 13614              	.LBE1431:
 13615              	.LBE1504:
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13616              		.loc 1 3626 2 is_stmt 1 view .LVU4163
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13617              		.loc 1 3626 18 is_stmt 0 view .LVU4164
 13618 1b4c 8A4A     		ldr	r2, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13619              		.loc 1 3627 32 view .LVU4165
 13620 1b4e 40F23460 		movw	r0, #1588
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13621              		.loc 1 3626 18 view .LVU4166
 13622 1b52 1360     		str	r3, [r2]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13623              		.loc 1 3627 2 is_stmt 1 view .LVU4167
 13624 1b54 FEF77DBD 		b	.L1101
 13625              	.LVL1154:
 13626              	.L1158:
 13627              	.LBB1505:
 13628              	.LBB1432:
 13629              	.LBB1373:
 13630              	.LBB954:
1355:src/keys.c    ****        }
 13631              		.loc 1 1355 10 is_stmt 0 view .LVU4168
 13632 1b58 4FF4E274 		mov	r4, #452
 13633 1b5c 13E6     		b	.L1044
 13634              	.LVL1155:
 13635              	.L1065:
1355:src/keys.c    ****        }
 13636              		.loc 1 1355 10 view .LVU4169
 13637              	.LBE954:
 13638              	.LBE1373:
 13639              	.LBE1432:
 13640              	.LBE1505:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13641              		.loc 1 3625 7 is_stmt 1 view .LVU4170
3625:src/keys.c    **** 	NonProgrammable = 0;
 13642              		.loc 1 3625 11 is_stmt 0 view .LVU4171
 13643 1b5e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	NonProgrammable = 0;
 13644              		.loc 1 3625 10 view .LVU4172
 13645 1b62 5506     		lsls	r5, r2, #25
 13646 1b64 24D5     		bpl	.L1157
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13647              		.loc 1 3626 2 is_stmt 1 view .LVU4173
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13648              		.loc 1 3626 18 is_stmt 0 view .LVU4174
 13649 1b66 844A     		ldr	r2, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13650              		.loc 1 3627 32 view .LVU4175
 13651 1b68 40F2C310 		movw	r0, #451
ARM GAS  /tmp/ccXySG1f.s 			page 374


3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13652              		.loc 1 3626 18 view .LVU4176
 13653 1b6c 1360     		str	r3, [r2]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13654              		.loc 1 3627 2 is_stmt 1 view .LVU4177
 13655 1b6e FEF770BD 		b	.L1101
 13656              	.LVL1156:
 13657              	.L1051:
 13658              	.LBB1506:
 13659              	.LBB1433:
 13660              	.LBB1374:
 13661              	.LBB955:
1368:src/keys.c    **** 	 reset_shift();
 13662              		.loc 1 1368 8 view .LVU4178
1368:src/keys.c    **** 	 reset_shift();
 13663              		.loc 1 1368 11 is_stmt 0 view .LVU4179
 13664 1b72 BBF1030F 		cmp	fp, #3
 13665 1b76 37D0     		beq	.L1398
1373:src/keys.c    ****        }
 13666              		.loc 1 1373 3 is_stmt 1 view .LVU4180
1373:src/keys.c    ****        }
 13667              		.loc 1 1373 10 is_stmt 0 view .LVU4181
 13668 1b78 1C20     		movs	r0, #28
 13669 1b7a FFF7FEFF 		bl	process_cmplx
 13670              	.LVL1157:
 13671 1b7e 0446     		mov	r4, r0
 13672              	.LVL1158:
1373:src/keys.c    ****        }
 13673              		.loc 1 1373 10 view .LVU4182
 13674 1b80 FEF72EBC 		b	.L835
 13675              	.LVL1159:
 13676              	.L1060:
1373:src/keys.c    ****        }
 13677              		.loc 1 1373 10 view .LVU4183
 13678              	.LBE955:
 13679              	.LBE1374:
 13680              	.LBE1433:
 13681              	.LBE1506:
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13682              		.loc 1 3626 2 is_stmt 1 view .LVU4184
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13683              		.loc 1 3626 18 is_stmt 0 view .LVU4185
 13684 1b84 7C4B     		ldr	r3, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13685              		.loc 1 3627 32 view .LVU4186
 13686 1b86 43F26510 		movw	r0, #12645
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13687              		.loc 1 3626 18 view .LVU4187
 13688 1b8a 1A60     		str	r2, [r3]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13689              		.loc 1 3627 2 is_stmt 1 view .LVU4188
 13690 1b8c FEF761BD 		b	.L1101
 13691              	.LVL1160:
 13692              	.L1052:
 13693              	.LBB1507:
 13694              	.LBB1434:
 13695              	.LBB1375:
ARM GAS  /tmp/ccXySG1f.s 			page 375


 13696              	.LBB956:
1337:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13697              		.loc 1 1337 8 view .LVU4189
1337:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13698              		.loc 1 1337 11 is_stmt 0 view .LVU4190
 13699 1b90 BBF1010F 		cmp	fp, #1
 13700 1b94 18D0     		beq	.L1399
1340:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13701              		.loc 1 1340 13 is_stmt 1 view .LVU4191
1340:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13702              		.loc 1 1340 16 is_stmt 0 view .LVU4192
 13703 1b96 BBF1020F 		cmp	fp, #2
 13704 1b9a 0CD0     		beq	.L1400
1345:src/keys.c    **** 	 return process_cmplx (c);
 13705              		.loc 1 1345 13 is_stmt 1 view .LVU4193
1345:src/keys.c    **** 	 return process_cmplx (c);
 13706              		.loc 1 1345 16 is_stmt 0 view .LVU4194
 13707 1b9c BBF1030F 		cmp	fp, #3
 13708 1ba0 7FF437AF 		bne	.L1063
1346:src/keys.c    ****        }
 13709              		.loc 1 1346 3 is_stmt 1 view .LVU4195
1346:src/keys.c    ****        }
 13710              		.loc 1 1346 10 is_stmt 0 view .LVU4196
 13711 1ba4 1820     		movs	r0, #24
 13712 1ba6 FFF7FEFF 		bl	process_cmplx
 13713              	.LVL1161:
 13714 1baa 0446     		mov	r4, r0
 13715              	.LVL1162:
1346:src/keys.c    ****        }
 13716              		.loc 1 1346 10 view .LVU4197
 13717 1bac FEF718BC 		b	.L835
 13718              	.LVL1163:
 13719              	.L1157:
1352:src/keys.c    ****        }
 13720              		.loc 1 1352 10 view .LVU4198
 13721 1bb0 40F2C314 		movw	r4, #451
 13722 1bb4 E7E5     		b	.L1044
 13723              	.LVL1164:
 13724              	.L1400:
1341:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13725              		.loc 1 1341 3 is_stmt 1 view .LVU4199
 13726 1bb6 DAF80020 		ldr	r2, [r10]
1342:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
 13727              		.loc 1 1342 3 view .LVU4200
1341:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13728              		.loc 1 1341 3 is_stmt 0 view .LVU4201
 13729 1bba B2F8AC37 		ldrh	r3, [r2, #1964]
 13730 1bbe 43F4C073 		orr	r3, r3, #384
 13731 1bc2 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
1343:src/keys.c    ****        }
 13732              		.loc 1 1343 18 is_stmt 1 view .LVU4202
 13733 1bc6 24E7     		b	.L1063
 13734              	.L1399:
1338:src/keys.c    ****        }
 13735              		.loc 1 1338 3 view .LVU4203
 13736 1bc8 DAF80030 		ldr	r3, [r10]
 13737 1bcc 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
ARM GAS  /tmp/ccXySG1f.s 			page 376


 13738 1bd0 6FF3C712 		bfc	r2, #7, #1
 13739 1bd4 83F8AC27 		strb	r2, [r3, #1964]
 13740 1bd8 1BE7     		b	.L1063
 13741              	.L1396:
 13742              	.LVL1165:
1338:src/keys.c    ****        }
 13743              		.loc 1 1338 3 is_stmt 0 view .LVU4204
 13744              	.LBE956:
 13745              	.LBE1375:
 13746              	.LBE1434:
 13747              	.LBE1507:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13748              		.loc 1 3625 7 is_stmt 1 view .LVU4205
3625:src/keys.c    **** 	NonProgrammable = 0;
 13749              		.loc 1 3625 11 is_stmt 0 view .LVU4206
 13750 1bda 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	NonProgrammable = 0;
 13751              		.loc 1 3625 10 view .LVU4207
 13752 1bde 5B06     		lsls	r3, r3, #25
 13753 1be0 10D4     		bmi	.L1102
 13754              	.LVL1166:
 13755              	.L1103:
 13756              	.LBB1508:
 13757              	.LBB1435:
 13758              	.LBB1376:
 13759              	.LBB957:
1325:src/keys.c    ****      case (K21): // x<->y key
 13760              		.loc 1 1325 37 view .LVU4208
 13761 1be2 4FF48174 		mov	r4, #258
 13762 1be6 CEE5     		b	.L1044
 13763              	.LVL1167:
 13764              	.L1398:
1369:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
 13765              		.loc 1 1369 3 is_stmt 1 view .LVU4209
 13766              	.LBB915:
 13767              	.LBI915:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13768              		.loc 1 114 13 view .LVU4210
 13769              	.LBE915:
 13770              	.LBE957:
 13771              	.LBE1376:
 13772              	.LBE1435:
 13773              	.LBE1508:
 115:src/keys.c    **** }
 13774              		.loc 1 115 2 view .LVU4211
 13775              	.LBB1509:
 13776              	.LBB1436:
 13777              	.LBB1377:
 13778              	.LBB958:
 13779              	.LBB924:
 13780              	.LBB916:
 13781              	.LBI916:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13782              		.loc 1 104 20 view .LVU4212
 13783              	.LBB917:
 105:src/keys.c    **** 	State2.shifts = shift;
 13784              		.loc 1 105 2 view .LVU4213
ARM GAS  /tmp/ccXySG1f.s 			page 377


 13785              	.LBB918:
 13786              	.LBI918:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13787              		.loc 1 96 13 view .LVU4214
 13788              	.LBB919:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13789              		.loc 1 97 2 view .LVU4215
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13790              		.loc 1 97 18 is_stmt 0 view .LVU4216
 13791 1be8 FFF7FEFF 		bl	shift_down
 13792              	.LVL1168:
  98:src/keys.c    **** }
 13793              		.loc 1 98 2 is_stmt 1 view .LVU4217
 13794              	.LBE919:
 13795              	.LBE918:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13796              		.loc 1 106 2 view .LVU4218
 13797              	.LBE917:
 13798              	.LBE916:
 13799              	.LBE924:
 13800              	.LBE958:
 13801              	.LBE1377:
 13802              	.LBE1436:
 13803              	.LBE1509:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13804              		.loc 1 3625 11 is_stmt 0 view .LVU4219
 13805 1bec 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13806              	.LBB1510:
 13807              	.LBB1437:
 13808              	.LBB1378:
 13809              	.LBB959:
 13810              	.LBB925:
 13811              	.LBB922:
 13812              	.LBB920:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13813              		.loc 1 106 16 view .LVU4220
 13814 1bf0 0023     		movs	r3, #0
 13815              	.LBE920:
 13816              	.LBE922:
 13817              	.LBE925:
 13818              	.LBE959:
 13819              	.LBE1378:
 13820              	.LBE1437:
 13821              	.LBE1510:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13822              		.loc 1 3625 10 view .LVU4221
 13823 1bf2 5506     		lsls	r5, r2, #25
 13824              	.LBB1511:
 13825              	.LBB1438:
 13826              	.LBB1379:
 13827              	.LBB960:
 13828              	.LBB926:
 13829              	.LBB923:
 13830              	.LBB921:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13831              		.loc 1 106 16 view .LVU4222
 13832 1bf4 88F81030 		strb	r3, [r8, #16]
ARM GAS  /tmp/ccXySG1f.s 			page 378


 108:src/keys.c    **** }
 13833              		.loc 1 108 2 is_stmt 1 view .LVU4223
 13834              	.LVL1169:
 108:src/keys.c    **** }
 13835              		.loc 1 108 2 is_stmt 0 view .LVU4224
 13836              	.LBE921:
 13837              	.LBE923:
 13838              	.LBE926:
1370:src/keys.c    ****        }
 13839              		.loc 1 1370 3 is_stmt 1 view .LVU4225
1370:src/keys.c    ****        }
 13840              		.loc 1 1370 3 is_stmt 0 view .LVU4226
 13841              	.LBE960:
 13842              	.LBE1379:
 13843              	.LBE1438:
 13844              	.LBE1511:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13845              		.loc 1 3625 7 is_stmt 1 view .LVU4227
3625:src/keys.c    **** 	NonProgrammable = 0;
 13846              		.loc 1 3625 10 is_stmt 0 view .LVU4228
 13847 1bf8 0BD4     		bmi	.L1070
 13848              	.LBB1512:
 13849              	.LBB1439:
 13850              	.LBB1380:
 13851              	.LBB961:
1370:src/keys.c    ****        }
 13852              		.loc 1 1370 10 view .LVU4229
 13853 1bfa 40F23364 		movw	r4, #1587
 13854 1bfe C2E5     		b	.L1044
 13855              	.LVL1170:
 13856              	.L1028:
1370:src/keys.c    ****        }
 13857              		.loc 1 1370 10 view .LVU4230
 13858              	.LBE961:
 13859              	.LBE1380:
 13860              	.LBE1439:
 13861              	.LBE1512:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13862              		.loc 1 3625 7 is_stmt 1 view .LVU4231
3625:src/keys.c    **** 	NonProgrammable = 0;
 13863              		.loc 1 3625 10 is_stmt 0 view .LVU4232
 13864 1c00 4B06     		lsls	r3, r1, #25
 13865 1c02 EED5     		bpl	.L1103
 13866              	.LVL1171:
 13867              	.L1102:
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13868              		.loc 1 3626 2 is_stmt 1 view .LVU4233
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13869              		.loc 1 3626 18 is_stmt 0 view .LVU4234
 13870 1c04 5C4B     		ldr	r3, .L1415
 13871 1c06 0022     		movs	r2, #0
 13872 1c08 1A60     		str	r2, [r3]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13873              		.loc 1 3627 2 is_stmt 1 view .LVU4235
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13874              		.loc 1 3627 32 is_stmt 0 view .LVU4236
 13875 1c0a 4FF48170 		mov	r0, #258
ARM GAS  /tmp/ccXySG1f.s 			page 379


 13876 1c0e FEF720BD 		b	.L1101
 13877              	.LVL1172:
 13878              	.L1070:
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13879              		.loc 1 3626 2 is_stmt 1 view .LVU4237
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13880              		.loc 1 3626 18 is_stmt 0 view .LVU4238
 13881 1c12 594A     		ldr	r2, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13882              		.loc 1 3627 32 view .LVU4239
 13883 1c14 40F23360 		movw	r0, #1587
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13884              		.loc 1 3626 18 view .LVU4240
 13885 1c18 1360     		str	r3, [r2]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13886              		.loc 1 3627 2 is_stmt 1 view .LVU4241
 13887 1c1a FEF71ABD 		b	.L1101
 13888              	.LVL1173:
 13889              	.L1310:
 13890              	.LBB1513:
 13891              	.LBB1440:
 13892              	.LBB1381:
 13893              	.LBB1314:
1859:src/keys.c    **** 		else if (shift == SHIFT_H)
 13894              		.loc 1 1859 4 view .LVU4242
1859:src/keys.c    **** 		else if (shift == SHIFT_H)
 13895              		.loc 1 1859 34 is_stmt 0 view .LVU4243
 13896 1c1e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13897 1c22 3368     		ldr	r3, [r6]
 13898 1c24 C2F30011 		ubfx	r1, r2, #4, #1
1859:src/keys.c    **** 		else if (shift == SHIFT_H)
 13899              		.loc 1 1859 26 view .LVU4244
 13900 1c28 C1F10101 		rsb	r1, r1, #1
1859:src/keys.c    **** 		else if (shift == SHIFT_H)
 13901              		.loc 1 1859 22 view .LVU4245
 13902 1c2c 61F30412 		bfi	r2, r1, #4, #1
 13903 1c30 88F81620 		strb	r2, [r8, #22]
1869:src/keys.c    **** 
 13904              		.loc 1 1869 10 view .LVU4246
 13905 1c34 3324     		movs	r4, #51
 13906 1c36 FEF73EBA 		b	.L801
 13907              	.LVL1174:
 13908              	.L1374:
1869:src/keys.c    **** 
 13909              		.loc 1 1869 10 view .LVU4247
 13910              	.LBE1314:
 13911              	.LBE1381:
 13912              	.LBB1382:
 13913              	.LBB1140:
 13914              	.LBB1133:
 13915              	.LBB1122:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 13916              		.loc 1 488 8 is_stmt 1 view .LVU4248
 489:src/keys.c    **** 	}
 13917              		.loc 1 489 10 is_stmt 0 view .LVU4249
 13918 1c3a 0229     		cmp	r1, #2
 13919 1c3c 08BF     		it	eq
ARM GAS  /tmp/ccXySG1f.s 			page 380


 13920 1c3e 0521     		moveq	r1, #5
 13921              	.LVL1175:
 489:src/keys.c    **** 	}
 13922              		.loc 1 489 10 view .LVU4250
 13923 1c40 FEF7EEBF 		b	.L937
 13924              	.LVL1176:
 13925              	.L1386:
 489:src/keys.c    **** 	}
 13926              		.loc 1 489 10 view .LVU4251
 13927              	.LBE1122:
 13928              	.LBE1133:
 13929              	.LBE1140:
 13930              	.LBE1382:
 13931              	.LBB1383:
 13932              	.LBB962:
1283:src/keys.c    ****    }
 13933              		.loc 1 1283 6 is_stmt 1 view .LVU4252
1283:src/keys.c    ****    }
 13934              		.loc 1 1283 13 is_stmt 0 view .LVU4253
 13935 1c44 2046     		mov	r0, r4
 13936 1c46 FFF7FEFF 		bl	process_h_shifted
 13937              	.LVL1177:
 13938 1c4a 0446     		mov	r4, r0
 13939              	.LVL1178:
1283:src/keys.c    ****    }
 13940              		.loc 1 1283 13 view .LVU4254
 13941 1c4c FEF7C8BB 		b	.L835
 13942              	.LVL1179:
 13943              	.L1004:
1283:src/keys.c    ****    }
 13944              		.loc 1 1283 13 view .LVU4255
 13945              	.LBE962:
 13946              	.LBE1383:
 13947              	.LBB1384:
 13948              	.LBB1315:
1872:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13949              		.loc 1 1872 3 is_stmt 1 view .LVU4256
1872:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13950              		.loc 1 1872 6 is_stmt 0 view .LVU4257
 13951 1c50 0128     		cmp	r0, #1
 13952 1c52 7FF427AB 		bne	.L1003
 13953              	.LVL1180:
1872:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13954              		.loc 1 1872 6 view .LVU4258
 13955              	.LBE1315:
 13956              	.LBE1384:
 13957              	.LBE1440:
 13958              	.LBE1513:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13959              		.loc 1 3625 7 is_stmt 1 view .LVU4259
3625:src/keys.c    **** 	NonProgrammable = 0;
 13960              		.loc 1 3625 10 is_stmt 0 view .LVU4260
 13961 1c56 4806     		lsls	r0, r1, #25
 13962              	.LVL1181:
3625:src/keys.c    **** 	NonProgrammable = 0;
 13963              		.loc 1 3625 10 view .LVU4261
 13964 1c58 19D5     		bpl	.L1155
ARM GAS  /tmp/ccXySG1f.s 			page 381


3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13965              		.loc 1 3626 2 is_stmt 1 view .LVU4262
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13966              		.loc 1 3626 18 is_stmt 0 view .LVU4263
 13967 1c5a 474B     		ldr	r3, .L1415
 13968 1c5c 0022     		movs	r2, #0
 13969              	.LVL1182:
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13970              		.loc 1 3626 18 view .LVU4264
 13971 1c5e 1A60     		str	r2, [r3]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13972              		.loc 1 3627 2 is_stmt 1 view .LVU4265
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13973              		.loc 1 3627 32 is_stmt 0 view .LVU4266
 13974 1c60 40F23B10 		movw	r0, #315
 13975 1c64 FEF7F5BC 		b	.L1101
 13976              	.LVL1183:
 13977              	.L1006:
 13978              	.LBB1514:
 13979              	.LBB1441:
 13980              	.LBB1385:
 13981              	.LBB1316:
1858:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13982              		.loc 1 1858 3 is_stmt 1 view .LVU4267
1858:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13983              		.loc 1 1858 6 is_stmt 0 view .LVU4268
 13984 1c68 0128     		cmp	r0, #1
 13985 1c6a D8D0     		beq	.L1310
1860:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13986              		.loc 1 1860 8 is_stmt 1 view .LVU4269
1860:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13987              		.loc 1 1860 11 is_stmt 0 view .LVU4270
 13988 1c6c 0328     		cmp	r0, #3
 13989 1c6e C7D0     		beq	.L1028
1862:src/keys.c    **** #ifdef DM42
 13990              		.loc 1 1862 8 is_stmt 1 view .LVU4271
1862:src/keys.c    **** #ifdef DM42
 13991              		.loc 1 1862 11 is_stmt 0 view .LVU4272
 13992 1c70 0028     		cmp	r0, #0
 13993 1c72 7EF437AD 		bne	.L1309
1864:src/keys.c    **** 		  display_current_menu();
 13994              		.loc 1 1864 5 is_stmt 1 view .LVU4273
 13995 1c76 4FF0FF30 		mov	r0, #-1
 13996              	.LVL1184:
1864:src/keys.c    **** 		  display_current_menu();
 13997              		.loc 1 1864 5 is_stmt 0 view .LVU4274
 13998 1c7a FFF7FEFF 		bl	set_menu
 13999              	.LVL1185:
1865:src/keys.c    **** #endif
 14000              		.loc 1 1865 5 is_stmt 1 view .LVU4275
1869:src/keys.c    **** 
 14001              		.loc 1 1869 10 is_stmt 0 view .LVU4276
 14002 1c7e 3324     		movs	r4, #51
1865:src/keys.c    **** #endif
 14003              		.loc 1 1865 5 view .LVU4277
 14004 1c80 FFF7FEFF 		bl	display_current_menu
 14005              	.LVL1186:
ARM GAS  /tmp/ccXySG1f.s 			page 382


1867:src/keys.c    **** 		}
 14006              		.loc 1 1867 5 is_stmt 1 view .LVU4278
 14007 1c84 FFF7FEFF 		bl	init_state
 14008              	.LVL1187:
 14009 1c88 3368     		ldr	r3, [r6]
 14010 1c8a FEF714BA 		b	.L801
 14011              	.LVL1188:
 14012              	.L1155:
1873:src/keys.c    **** 		break;
 14013              		.loc 1 1873 11 is_stmt 0 view .LVU4279
 14014 1c8e 40F23B14 		movw	r4, #315
 14015 1c92 78E5     		b	.L1044
 14016              	.LVL1189:
 14017              	.L1007:
1846:src/keys.c    **** 	    if ( State2.runmode ) {
 14018              		.loc 1 1846 4 is_stmt 1 view .LVU4280
1846:src/keys.c    **** 	    if ( State2.runmode ) {
 14019              		.loc 1 1846 7 is_stmt 0 view .LVU4281
 14020 1c94 0028     		cmp	r0, #0
 14021 1c96 7FF405AB 		bne	.L1003
1847:src/keys.c    **** 	      // Alpha scroll right
 14022              		.loc 1 1847 6 is_stmt 1 view .LVU4282
1847:src/keys.c    **** 	      // Alpha scroll right
 14023              		.loc 1 1847 9 is_stmt 0 view .LVU4283
 14024 1c9a 4906     		lsls	r1, r1, #25
 14025 1c9c 7EF512AC 		bpl	.L1025
1849:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14026              		.loc 1 1849 8 is_stmt 1 view .LVU4284
1849:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14027              		.loc 1 1849 11 is_stmt 0 view .LVU4285
 14028 1ca0 B9F1000F 		cmp	r9, #0
 14029 1ca4 3EF41EAD 		beq	.L1309
1850:src/keys.c    **** 	      return STATE_UNFINISHED;
 14030              		.loc 1 1850 3 is_stmt 1 view .LVU4286
1850:src/keys.c    **** 	      return STATE_UNFINISHED;
 14031              		.loc 1 1850 31 is_stmt 0 view .LVU4287
 14032 1ca8 09F1FF33 		add	r3, r9, #-1
1850:src/keys.c    **** 	      return STATE_UNFINISHED;
 14033              		.loc 1 1850 20 view .LVU4288
 14034 1cac 88F80D30 		strb	r3, [r8, #13]
1851:src/keys.c    **** 	    }
 14035              		.loc 1 1851 15 view .LVU4289
 14036 1cb0 3324     		movs	r4, #51
 14037 1cb2 3368     		ldr	r3, [r6]
 14038 1cb4 FEF7FFB9 		b	.L801
 14039              	.L1008:
1817:src/keys.c    **** 	    if ( State2.runmode ) {
 14040              		.loc 1 1817 4 is_stmt 1 view .LVU4290
1817:src/keys.c    **** 	    if ( State2.runmode ) {
 14041              		.loc 1 1817 7 is_stmt 0 view .LVU4291
 14042 1cb8 0028     		cmp	r0, #0
 14043 1cba 7FF4F3AA 		bne	.L1003
1818:src/keys.c    **** 	      // Alpha scroll left
 14044              		.loc 1 1818 6 is_stmt 1 view .LVU4292
1818:src/keys.c    **** 	      // Alpha scroll left
 14045              		.loc 1 1818 9 is_stmt 0 view .LVU4293
 14046 1cbe 4806     		lsls	r0, r1, #25
ARM GAS  /tmp/ccXySG1f.s 			page 383


 14047              	.LVL1190:
1818:src/keys.c    **** 	      // Alpha scroll left
 14048              		.loc 1 1818 9 view .LVU4294
 14049 1cc0 7EF5F8AB 		bpl	.L1021
1826:src/keys.c    **** 		alpha_pos += 1;
 14050              		.loc 1 1826 8 is_stmt 1 view .LVU4295
1826:src/keys.c    **** 		alpha_pos += 1;
 14051              		.loc 1 1826 11 is_stmt 0 view .LVU4296
 14052 1cc4 B9F1000F 		cmp	r9, #0
 14053 1cc8 1CD1     		bne	.L1022
 14054              	.LVL1191:
 14055              	.L1024:
1827:src/keys.c    **** 	      }
 14056              		.loc 1 1827 3 is_stmt 1 view .LVU4297
1827:src/keys.c    **** 	      }
 14057              		.loc 1 1827 13 is_stmt 0 view .LVU4298
 14058 1cca 09F1010A 		add	r10, r9, #1
 14059              	.LVL1192:
 14060              	.L1023:
1834:src/keys.c    **** #else
 14061              		.loc 1 1834 8 is_stmt 1 view .LVU4299
 14062 1cce 3368     		ldr	r3, [r6]
1834:src/keys.c    **** #else
 14063              		.loc 1 1834 25 is_stmt 0 view .LVU4300
 14064 1cd0 88F80DA0 		strb	r10, [r8, #13]
1839:src/keys.c    **** 	    }
 14065              		.loc 1 1839 8 is_stmt 1 view .LVU4301
1839:src/keys.c    **** 	    }
 14066              		.loc 1 1839 15 is_stmt 0 view .LVU4302
 14067 1cd4 3324     		movs	r4, #51
 14068 1cd6 FEF7EEB9 		b	.L801
 14069              	.LVL1193:
 14070              	.L985:
1839:src/keys.c    **** 	    }
 14071              		.loc 1 1839 15 view .LVU4303
 14072              	.LBE1316:
 14073              	.LBE1385:
 14074              	.LBB1386:
 14075              	.LBB1234:
3150:src/keys.c    **** 		goto reset_window;
 14076              		.loc 1 3150 4 is_stmt 1 view .LVU4304
3150:src/keys.c    **** 		goto reset_window;
 14077              		.loc 1 3150 24 is_stmt 0 view .LVU4305
 14078 1cda 0AF1FF3A 		add	r10, r10, #-1
 14079              	.LVL1194:
3150:src/keys.c    **** 		goto reset_window;
 14080              		.loc 1 3150 18 view .LVU4306
 14081 1cde A8F808A0 		strh	r10, [r8, #8]	@ movhi
 14082 1ce2 FFF70EBA 		b	.L977
 14083              	.LVL1195:
 14084              	.L1385:
3146:src/keys.c    **** 			--State2.digval;
 14085              		.loc 1 3146 5 is_stmt 1 view .LVU4307
3146:src/keys.c    **** 			--State2.digval;
 14086              		.loc 1 3146 21 is_stmt 0 view .LVU4308
 14087 1ce6 FFF7FEFF 		bl	global_regs
 14088              	.LVL1196:
ARM GAS  /tmp/ccXySG1f.s 			page 384


3146:src/keys.c    **** 			--State2.digval;
 14089              		.loc 1 3146 19 view .LVU4309
 14090 1cea A8F80800 		strh	r0, [r8, #8]	@ movhi
 14091 1cee FFF703BA 		b	.L986
 14092              	.LVL1197:
 14093              	.L1376:
3146:src/keys.c    **** 			--State2.digval;
 14094              		.loc 1 3146 19 view .LVU4310
 14095              	.LBE1234:
 14096              	.LBE1386:
 14097              	.LBB1387:
 14098              	.LBB1141:
2856:src/keys.c    **** 		State2.numdigit = 2;
 14099              		.loc 1 2856 3 is_stmt 1 view .LVU4311
2857:src/keys.c    **** 		return STATE_UNFINISHED;
 14100              		.loc 1 2857 19 is_stmt 0 view .LVU4312
 14101 1cf2 0222     		movs	r2, #2
2856:src/keys.c    **** 		State2.numdigit = 2;
 14102              		.loc 1 2856 18 view .LVU4313
 14103 1cf4 88F80A40 		strb	r4, [r8, #10]
2857:src/keys.c    **** 		return STATE_UNFINISHED;
 14104              		.loc 1 2857 3 is_stmt 1 view .LVU4314
 14105 1cf8 3368     		ldr	r3, [r6]
2857:src/keys.c    **** 		return STATE_UNFINISHED;
 14106              		.loc 1 2857 19 is_stmt 0 view .LVU4315
 14107 1cfa 88F80B20 		strb	r2, [r8, #11]
2858:src/keys.c    **** 	}
 14108              		.loc 1 2858 3 is_stmt 1 view .LVU4316
2858:src/keys.c    **** 	}
 14109              		.loc 1 2858 10 is_stmt 0 view .LVU4317
 14110 1cfe 3324     		movs	r4, #51
 14111              	.LVL1198:
2858:src/keys.c    **** 	}
 14112              		.loc 1 2858 10 view .LVU4318
 14113 1d00 FEF7D9B9 		b	.L801
 14114              	.LVL1199:
 14115              	.L1022:
2858:src/keys.c    **** 	}
 14116              		.loc 1 2858 10 view .LVU4319
 14117              	.LBE1141:
 14118              	.LBE1387:
 14119              	.LBB1388:
 14120              	.LBB1317:
1826:src/keys.c    **** 		alpha_pos += 1;
 14121              		.loc 1 1826 33 view .LVU4320
 14122 1d04 FFF7FEFF 		bl	alen
 14123              	.LVL1200:
1826:src/keys.c    **** 		alpha_pos += 1;
 14124              		.loc 1 1826 41 view .LVU4321
 14125 1d08 09EB4903 		add	r3, r9, r9, lsl #1
1826:src/keys.c    **** 		alpha_pos += 1;
 14126              		.loc 1 1826 39 view .LVU4322
 14127 1d0c A0EB4300 		sub	r0, r0, r3, lsl #1
1826:src/keys.c    **** 		alpha_pos += 1;
 14128              		.loc 1 1826 29 view .LVU4323
 14129 1d10 1328     		cmp	r0, #19
 14130 1d12 DAD8     		bhi	.L1024
ARM GAS  /tmp/ccXySG1f.s 			page 385


 14131 1d14 DBE7     		b	.L1023
 14132              	.LVL1201:
 14133              	.L1392:
1826:src/keys.c    **** 		alpha_pos += 1;
 14134              		.loc 1 1826 29 view .LVU4324
 14135              	.LBE1317:
 14136              	.LBE1388:
 14137              	.LBB1389:
 14138              	.LBB963:
 14139              	.LBB927:
1314:src/keys.c    **** 	 return process_cmplx(c);
 14140              		.loc 1 1314 3 is_stmt 1 view .LVU4325
 14141 1d16 0120     		movs	r0, #1
 14142 1d18 FFF7FEFF 		bl	finish_cpx_entry
 14143              	.LVL1202:
1315:src/keys.c    ****        }
 14144              		.loc 1 1315 3 view .LVU4326
1315:src/keys.c    ****        }
 14145              		.loc 1 1315 10 is_stmt 0 view .LVU4327
 14146 1d1c 2046     		mov	r0, r4
 14147 1d1e FFF7FEFF 		bl	process_cmplx
 14148              	.LVL1203:
 14149 1d22 0446     		mov	r4, r0
 14150              	.LVL1204:
1315:src/keys.c    ****        }
 14151              		.loc 1 1315 10 view .LVU4328
 14152 1d24 FEF75CBB 		b	.L835
 14153              	.LVL1205:
 14154              	.L1391:
1315:src/keys.c    ****        }
 14155              		.loc 1 1315 10 view .LVU4329
 14156              	.LBE927:
1296:src/keys.c    ****        if ( CmdLineLength ) {
 14157              		.loc 1 1296 8 is_stmt 1 view .LVU4330
 14158              	.LBB928:
 14159              	.LBI928:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14160              		.loc 1 114 13 view .LVU4331
 14161              	.LBE928:
 14162              	.LBE963:
 14163              	.LBE1389:
 14164              	.LBE1441:
 14165              	.LBE1514:
 115:src/keys.c    **** }
 14166              		.loc 1 115 2 view .LVU4332
 14167              	.LBB1515:
 14168              	.LBB1442:
 14169              	.LBB1390:
 14170              	.LBB964:
 14171              	.LBB935:
 14172              	.LBB929:
 14173              	.LBI929:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14174              		.loc 1 104 20 view .LVU4333
 14175              	.LBB930:
 105:src/keys.c    **** 	State2.shifts = shift;
 14176              		.loc 1 105 2 view .LVU4334
ARM GAS  /tmp/ccXySG1f.s 			page 386


 14177              	.LBB931:
 14178              	.LBI931:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14179              		.loc 1 96 13 view .LVU4335
 14180              	.LBB932:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14181              		.loc 1 97 2 view .LVU4336
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14182              		.loc 1 97 18 is_stmt 0 view .LVU4337
 14183 1d28 FFF7FEFF 		bl	shift_down
 14184              	.LVL1206:
  98:src/keys.c    **** }
 14185              		.loc 1 98 2 is_stmt 1 view .LVU4338
 14186              	.LBE932:
 14187              	.LBE931:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14188              		.loc 1 106 2 view .LVU4339
 14189              	.LBE930:
 14190              	.LBE929:
 14191              	.LBE935:
1297:src/keys.c    **** 	 State2.state_lift = 0;
 14192              		.loc 1 1297 11 is_stmt 0 view .LVU4340
 14193 1d2c 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 14194              	.LBB936:
 14195              	.LBB934:
 14196              	.LBB933:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14197              		.loc 1 106 16 view .LVU4341
 14198 1d30 0023     		movs	r3, #0
 14199 1d32 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14200              		.loc 1 108 2 is_stmt 1 view .LVU4342
 14201              	.LVL1207:
 108:src/keys.c    **** }
 14202              		.loc 1 108 2 is_stmt 0 view .LVU4343
 14203              	.LBE933:
 14204              	.LBE934:
 14205              	.LBE936:
1297:src/keys.c    **** 	 State2.state_lift = 0;
 14206              		.loc 1 1297 8 is_stmt 1 view .LVU4344
1297:src/keys.c    **** 	 State2.state_lift = 0;
 14207              		.loc 1 1297 11 is_stmt 0 view .LVU4345
 14208 1d36 62B1     		cbz	r2, .L1042
1298:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14209              		.loc 1 1298 3 is_stmt 1 view .LVU4346
1298:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14210              		.loc 1 1298 21 is_stmt 0 view .LVU4347
 14211 1d38 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 14212              	.LBE964:
 14213              	.LBE1390:
 14214              	.LBE1442:
 14215              	.LBE1515:
3625:src/keys.c    **** 	NonProgrammable = 0;
 14216              		.loc 1 3625 11 view .LVU4348
 14217 1d3c 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 14218              	.LBB1516:
 14219              	.LBB1443:
ARM GAS  /tmp/ccXySG1f.s 			page 387


 14220              	.LBB1391:
 14221              	.LBB965:
1298:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14222              		.loc 1 1298 21 view .LVU4349
 14223 1d40 63F38612 		bfi	r2, r3, #6, #1
 14224 1d44 88F81720 		strb	r2, [r8, #23]
1299:src/keys.c    ****        }
 14225              		.loc 1 1299 3 is_stmt 1 view .LVU4350
 14226              	.LVL1208:
1299:src/keys.c    ****        }
 14227              		.loc 1 1299 3 is_stmt 0 view .LVU4351
 14228              	.LBE965:
 14229              	.LBE1391:
 14230              	.LBE1443:
 14231              	.LBE1516:
3625:src/keys.c    **** 	NonProgrammable = 0;
 14232              		.loc 1 3625 7 is_stmt 1 view .LVU4352
3625:src/keys.c    **** 	NonProgrammable = 0;
 14233              		.loc 1 3625 10 is_stmt 0 view .LVU4353
 14234 1d48 4A06     		lsls	r2, r1, #25
 14235 1d4a 0CD4     		bmi	.L1043
 14236              	.LBB1517:
 14237              	.LBB1444:
 14238              	.LBB1392:
 14239              	.LBB966:
1299:src/keys.c    ****        }
 14240              		.loc 1 1299 10 view .LVU4354
 14241 1d4c 4FF4E474 		mov	r4, #456
 14242 1d50 19E5     		b	.L1044
 14243              	.LVL1209:
 14244              	.L1042:
1299:src/keys.c    ****        }
 14245              		.loc 1 1299 10 view .LVU4355
 14246              	.LBE966:
 14247              	.LBE1392:
 14248              	.LBE1444:
 14249              	.LBE1517:
3625:src/keys.c    **** 	NonProgrammable = 0;
 14250              		.loc 1 3625 7 is_stmt 1 view .LVU4356
3625:src/keys.c    **** 	NonProgrammable = 0;
 14251              		.loc 1 3625 11 is_stmt 0 view .LVU4357
 14252 1d52 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3625:src/keys.c    **** 	NonProgrammable = 0;
 14253              		.loc 1 3625 10 view .LVU4358
 14254 1d56 5906     		lsls	r1, r3, #25
 14255 1d58 0BD5     		bpl	.L1156
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14256              		.loc 1 3626 2 is_stmt 1 view .LVU4359
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14257              		.loc 1 3626 18 is_stmt 0 view .LVU4360
 14258 1d5a 074B     		ldr	r3, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14259              		.loc 1 3627 32 view .LVU4361
 14260 1d5c 40F2C710 		movw	r0, #455
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14261              		.loc 1 3626 18 view .LVU4362
 14262 1d60 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccXySG1f.s 			page 388


3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14263              		.loc 1 3627 2 is_stmt 1 view .LVU4363
 14264 1d62 FEF776BC 		b	.L1101
 14265              	.LVL1210:
 14266              	.L1043:
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14267              		.loc 1 3626 2 view .LVU4364
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14268              		.loc 1 3626 18 is_stmt 0 view .LVU4365
 14269 1d66 044A     		ldr	r2, .L1415
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14270              		.loc 1 3627 32 view .LVU4366
 14271 1d68 4FF4E470 		mov	r0, #456
3626:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14272              		.loc 1 3626 18 view .LVU4367
 14273 1d6c 1360     		str	r3, [r2]
3627:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14274              		.loc 1 3627 2 is_stmt 1 view .LVU4368
 14275 1d6e FEF770BC 		b	.L1101
 14276              	.LVL1211:
 14277              	.L1156:
 14278              	.LBB1518:
 14279              	.LBB1445:
 14280              	.LBB1393:
 14281              	.LBB967:
1302:src/keys.c    ****        }
 14282              		.loc 1 1302 10 is_stmt 0 view .LVU4369
 14283 1d72 40F2C714 		movw	r4, #455
 14284 1d76 06E5     		b	.L1044
 14285              	.L1416:
 14286              		.align	2
 14287              	.L1415:
 14288 1d78 00000000 		.word	NonProgrammable
 14289              	.LBE967:
 14290              	.LBE1393:
 14291              	.LBE1445:
 14292              	.LBE1518:
 14293              		.cfi_endproc
 14294              	.LFE63:
 14296              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14297              		.align	1
 14298              		.p2align 2,,3
 14299              		.global	process_keycode_with_shift
 14300              		.syntax unified
 14301              		.thumb
 14302              		.thumb_func
 14303              		.fpu fpv4-sp-d16
 14305              	process_keycode_with_shift:
 14306              	.LFB62:
3373:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14307              		.loc 1 3373 61 is_stmt 1 view -0
 14308              		.cfi_startproc
 14309              		@ args = 0, pretend = 0, frame = 8
 14310              		@ frame_needed = 0, uses_anonymous_args = 0
 14311 0000 30B5     		push	{r4, r5, lr}
 14312              		.cfi_def_cfa_offset 12
 14313              		.cfi_offset 4, -12
ARM GAS  /tmp/ccXySG1f.s 			page 389


 14314              		.cfi_offset 5, -8
 14315              		.cfi_offset 14, -4
 14316 0002 83B0     		sub	sp, sp, #12
 14317              		.cfi_def_cfa_offset 24
3373:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14318              		.loc 1 3373 61 is_stmt 0 view .LVU4371
 14319 0004 02AB     		add	r3, sp, #8
 14320 0006 03E90300 		stmdb	r3, {r0, r1}
 14321 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14322              	.LVL1212:
3374:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14323              		.loc 1 3374 4 is_stmt 1 view .LVU4372
3374:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14324              		.loc 1 3374 7 is_stmt 0 view .LVU4373
 14325 000e 2E2C     		cmp	r4, #46
 14326 0010 10D0     		beq	.L1417
3375:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14327              		.loc 1 3375 4 is_stmt 1 view .LVU4374
3375:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14328              		.loc 1 3375 7 is_stmt 0 view .LVU4375
 14329 0012 332C     		cmp	r4, #51
 14330 0014 1DD0     		beq	.L1424
3384:src/keys.c    ****      nd_opcode = remapped.shift;
 14331              		.loc 1 3384 7 view .LVU4376
 14332 0016 342C     		cmp	r4, #52
 14333 0018 019D     		ldr	r5, [sp, #4]
3384:src/keys.c    ****      nd_opcode = remapped.shift;
 14334              		.loc 1 3384 4 is_stmt 1 view .LVU4377
3384:src/keys.c    ****      nd_opcode = remapped.shift;
 14335              		.loc 1 3384 7 is_stmt 0 view .LVU4378
 14336 001a 0DD0     		beq	.L1425
3388:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14337              		.loc 1 3388 9 is_stmt 1 view .LVU4379
3388:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14338              		.loc 1 3388 12 is_stmt 0 view .LVU4380
 14339 001c 002D     		cmp	r5, #0
 14340 001e 03DB     		blt	.L1422
3388:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14341              		.loc 1 3388 34 is_stmt 1 discriminator 1 view .LVU4381
 14342              	.LVL1213:
 14343              	.LBB1519:
 14344              	.LBI1519:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14345              		.loc 1 104 20 discriminator 1 view .LVU4382
 14346              	.LBB1520:
 105:src/keys.c    **** 	State2.shifts = shift;
 14347              		.loc 1 105 2 discriminator 1 view .LVU4383
 14348              	.LBB1521:
 14349              	.LBI1521:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14350              		.loc 1 96 13 discriminator 1 view .LVU4384
 14351              	.LBB1522:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14352              		.loc 1 97 2 discriminator 1 view .LVU4385
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14353              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4386
 14354 0020 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccXySG1f.s 			page 390


 14355              	.LVL1214:
  98:src/keys.c    **** }
 14356              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4387
 14357              	.LBE1522:
 14358              	.LBE1521:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14359              		.loc 1 106 2 discriminator 1 view .LVU4388
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14360              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4389
 14361 0024 194B     		ldr	r3, .L1426
 14362              	.LBE1520:
 14363              	.LBE1519:
3388:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14364              		.loc 1 3388 34 discriminator 1 view .LVU4390
 14365 0026 1D74     		strb	r5, [r3, #16]
 14366              	.LBB1524:
 14367              	.LBB1523:
 108:src/keys.c    **** }
 14368              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4391
 14369              	.LVL1215:
 14370              	.L1422:
 108:src/keys.c    **** }
 14371              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4392
 14372              	.LBE1523:
 14373              	.LBE1524:
3389:src/keys.c    ****  }
 14374              		.loc 1 3389 4 is_stmt 1 view .LVU4393
 14375 0028 2046     		mov	r0, r4
3390:src/keys.c    ****  
 14376              		.loc 1 3390 2 is_stmt 0 view .LVU4394
 14377 002a 03B0     		add	sp, sp, #12
 14378              		.cfi_remember_state
 14379              		.cfi_def_cfa_offset 12
 14380              		@ sp needed
 14381 002c BDE83040 		pop	{r4, r5, lr}
 14382              		.cfi_restore 14
 14383              		.cfi_restore 5
 14384              		.cfi_restore 4
 14385              		.cfi_def_cfa_offset 0
 14386              	.LVL1216:
3389:src/keys.c    ****  }
 14387              		.loc 1 3389 4 view .LVU4395
 14388 0030 FFF7FEBF 		b	process_keycode
 14389              	.LVL1217:
 14390              	.L1417:
 14391              		.cfi_restore_state
3390:src/keys.c    ****  
 14392              		.loc 1 3390 2 view .LVU4396
 14393 0034 03B0     		add	sp, sp, #12
 14394              		.cfi_remember_state
 14395              		.cfi_def_cfa_offset 12
 14396              		@ sp needed
 14397 0036 30BD     		pop	{r4, r5, pc}
 14398              	.LVL1218:
 14399              	.L1425:
 14400              		.cfi_restore_state
3385:src/keys.c    ****      set_shift(SHIFT_N);
ARM GAS  /tmp/ccXySG1f.s 			page 391


 14401              		.loc 1 3385 6 is_stmt 1 view .LVU4397
3385:src/keys.c    ****      set_shift(SHIFT_N);
 14402              		.loc 1 3385 16 is_stmt 0 view .LVU4398
 14403 0038 154B     		ldr	r3, .L1426+4
 14404 003a 1D60     		str	r5, [r3]
3386:src/keys.c    ****    }
 14405              		.loc 1 3386 6 is_stmt 1 view .LVU4399
 14406              	.LVL1219:
 14407              	.LBB1525:
 14408              	.LBI1525:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14409              		.loc 1 104 20 view .LVU4400
 14410              	.LBB1526:
 105:src/keys.c    **** 	State2.shifts = shift;
 14411              		.loc 1 105 2 view .LVU4401
 14412              	.LBB1527:
 14413              	.LBI1527:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14414              		.loc 1 96 13 view .LVU4402
 14415              	.LBB1528:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14416              		.loc 1 97 2 view .LVU4403
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14417              		.loc 1 97 18 is_stmt 0 view .LVU4404
 14418 003c FFF7FEFF 		bl	shift_down
 14419              	.LVL1220:
  98:src/keys.c    **** }
 14420              		.loc 1 98 2 is_stmt 1 view .LVU4405
 14421              	.LBE1528:
 14422              	.LBE1527:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14423              		.loc 1 106 2 view .LVU4406
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14424              		.loc 1 106 16 is_stmt 0 view .LVU4407
 14425 0040 124B     		ldr	r3, .L1426
 14426 0042 0022     		movs	r2, #0
 14427              	.LBE1526:
 14428              	.LBE1525:
3389:src/keys.c    ****  }
 14429              		.loc 1 3389 4 view .LVU4408
 14430 0044 2046     		mov	r0, r4
 14431              	.LBB1530:
 14432              	.LBB1529:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14433              		.loc 1 106 16 view .LVU4409
 14434 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14435              		.loc 1 108 2 is_stmt 1 view .LVU4410
 14436              	.LVL1221:
 108:src/keys.c    **** }
 14437              		.loc 1 108 2 is_stmt 0 view .LVU4411
 14438              	.LBE1529:
 14439              	.LBE1530:
3389:src/keys.c    ****  }
 14440              		.loc 1 3389 4 is_stmt 1 view .LVU4412
3390:src/keys.c    ****  
 14441              		.loc 1 3390 2 is_stmt 0 view .LVU4413
ARM GAS  /tmp/ccXySG1f.s 			page 392


 14442 0048 03B0     		add	sp, sp, #12
 14443              		.cfi_remember_state
 14444              		.cfi_def_cfa_offset 12
 14445              		@ sp needed
 14446 004a BDE83040 		pop	{r4, r5, lr}
 14447              		.cfi_restore 14
 14448              		.cfi_restore 5
 14449              		.cfi_restore 4
 14450              		.cfi_def_cfa_offset 0
 14451              	.LVL1222:
3389:src/keys.c    ****  }
 14452              		.loc 1 3389 4 view .LVU4414
 14453 004e FFF7FEBF 		b	process_keycode
 14454              	.LVL1223:
 14455              	.L1424:
 14456              		.cfi_restore_state
3376:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14457              		.loc 1 3376 6 is_stmt 1 view .LVU4415
 14458 0052 104B     		ldr	r3, .L1426+8
 14459 0054 41F23010 		movw	r0, #4400
 14460 0058 9847     		blx	r3
 14461              	.LVL1224:
3376:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14462              		.loc 1 3376 31 view .LVU4416
 14463 005a 0A20     		movs	r0, #10
 14464 005c 0E4B     		ldr	r3, .L1426+12
 14465 005e 9847     		blx	r3
 14466              	.LVL1225:
3376:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14467              		.loc 1 3376 46 view .LVU4417
 14468 0060 0E4B     		ldr	r3, .L1426+16
 14469 0062 9847     		blx	r3
 14470              	.LVL1226:
3377:src/keys.c    ****        // Was error just wait for confirmation
 14471              		.loc 1 3377 6 view .LVU4418
3377:src/keys.c    ****        // Was error just wait for confirmation
 14472              		.loc 1 3377 11 is_stmt 0 view .LVU4419
 14473 0064 0E4B     		ldr	r3, .L1426+20
 14474 0066 0120     		movs	r0, #1
 14475 0068 9847     		blx	r3
 14476              	.LVL1227:
3377:src/keys.c    ****        // Was error just wait for confirmation
 14477              		.loc 1 3377 9 view .LVU4420
 14478 006a 0228     		cmp	r0, #2
 14479 006c 01D1     		bne	.L1420
3379:src/keys.c    ****      }
 14480              		.loc 1 3379 8 is_stmt 1 view .LVU4421
 14481 006e 0D4B     		ldr	r3, .L1426+24
 14482 0070 9847     		blx	r3
 14483              	.LVL1228:
 14484              	.L1420:
3381:src/keys.c    ****      return;
 14485              		.loc 1 3381 6 view .LVU4422
 14486 0072 084B     		ldr	r3, .L1426+8
 14487 0074 42F26020 		movw	r0, #8800
 14488 0078 9847     		blx	r3
 14489              	.LVL1229:
ARM GAS  /tmp/ccXySG1f.s 			page 393


3381:src/keys.c    ****      return;
 14490              		.loc 1 3381 31 view .LVU4423
 14491 007a 074B     		ldr	r3, .L1426+12
 14492 007c 0A20     		movs	r0, #10
 14493 007e 9847     		blx	r3
 14494              	.LVL1230:
3381:src/keys.c    ****      return;
 14495              		.loc 1 3381 46 view .LVU4424
 14496 0080 064B     		ldr	r3, .L1426+16
3390:src/keys.c    ****  
 14497              		.loc 1 3390 2 is_stmt 0 view .LVU4425
 14498 0082 03B0     		add	sp, sp, #12
 14499              		.cfi_def_cfa_offset 12
 14500              		@ sp needed
 14501 0084 BDE83040 		pop	{r4, r5, lr}
 14502              		.cfi_restore 14
 14503              		.cfi_restore 5
 14504              		.cfi_restore 4
 14505              		.cfi_def_cfa_offset 0
 14506              	.LVL1231:
3381:src/keys.c    ****      return;
 14507              		.loc 1 3381 46 view .LVU4426
 14508 0088 1847     		bx	r3	@ indirect register sibling call
 14509              	.LVL1232:
 14510              	.L1427:
 14511 008a 00BF     		.align	2
 14512              	.L1426:
 14513 008c 00000000 		.word	StateWhileOn
 14514 0090 00000000 		.word	nd_opcode
 14515 0094 F5020008 		.word	134218485
 14516 0098 05040008 		.word	134218757
 14517 009c F9020008 		.word	134218489
 14518 00a0 79030008 		.word	134218617
 14519 00a4 99030008 		.word	134218649
 14520              		.cfi_endproc
 14521              	.LFE62:
 14523              		.comm	nd_opcode,4,4
 14524              		.comm	NonProgrammable,4,4
 14525              		.comm	GoFast,4,4
 14526              		.comm	OpCodeDisplayPending,4,4
 14527              		.comm	OpCode,4,4
 14528              		.comm	WasDataEntry,4,4
 14529              		.section	.bss.was_paused.9844,"aw",%nobits
 14530              		.align	2
 14531              		.set	.LANCHOR18,. + 0
 14534              	was_paused.9844:
 14535 0000 00000000 		.space	4
 14536              		.section	.rodata.alpha_arrows,"a"
 14537              		.align	2
 14540              	alpha_arrows:
 14541 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14541      03049F5E 
 14541      7F
 14542              		.section	.rodata.alpha_catalogue,"a"
 14543              		.align	2
 14546              	alpha_catalogue:
 14547 0000 0D4AC280 		.ascii	"\015J\302\200\236\265\312\242~\324\266-\233j\333(J\260"
ARM GAS  /tmp/ccXySG1f.s 			page 394


 14547      9EB5CAA2 
 14547      7ED4B62D 
 14547      9B6ADB28 
 14547      4AB0
 14548              		.section	.rodata.alpha_compares,"a"
 14549              		.align	2
 14552              	alpha_compares:
 14553 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14553      0A3E5B5D 
 14553      7B7D
 14554              		.section	.rodata.alpha_letters,"a"
 14555              		.align	2
 14556              		.set	.LANCHOR9,. + 0
 14559              	alpha_letters:
 14560 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14560      88C4C5C6 
 14560      C784C8C9 
 14560      CA
 14561 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14561      CECFD0D1 
 14561      D2D3D415 
 14561      D5
 14562 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14562      DADBDC01 
 14562      1902DD1A 
 14562      DE
 14563 0027 DF       		.ascii	"\337"
 14564              		.section	.rodata.alpha_letters_lower,"a"
 14565              		.align	2
 14566              		.set	.LANCHOR10,. + 0
 14569              	alpha_letters_lower:
 14570 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14570      89E4E5E6 
 14570      E785E8E9 
 14570      EA
 14571 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14571      EEEFF0F1 
 14571      F2F3F416 
 14571      F5
 14572 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14572      FAFBFC01 
 14572      1902FD1A 
 14572      FE
 14573 0027 FF       		.ascii	"\377"
 14574              		.section	.rodata.alpha_subscripts,"a"
 14575              		.align	2
 14578              	alpha_subscripts:
 14579 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14579      9A80D798 
 14579      BB1486BC 
 14579      F7
 14580 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14580      BF818B9C 
 14580      8C999D90 
 14580      9B
 14581              		.section	.rodata.alpha_symbols,"a"
 14582              		.align	2
ARM GAS  /tmp/ccXySG1f.s 			page 395


 14585              	alpha_symbols:
 14586 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14586      222A405F 
 14586      7E25240C 
 14586      1E1F8EAE 
 14586      926023
 14587              		.section	.rodata.alphamap.9328,"a"
 14588              		.align	2
 14589              		.set	.LANCHOR15,. + 0
 14592              	alphamap.9328:
 14593 0000 41004100 		.ascii	"A\000A\000a\240"
 14593      61A0
 14594 0006 42004200 		.ascii	"B\000B\000b\241"
 14594      62A1
 14595 000c 43008200 		.ascii	"C\000\202\000c\242"
 14595      63A2
 14596 0012 44008300 		.ascii	"D\000\203\000d\243"
 14596      64A3
 14597 0018 450D4500 		.ascii	"E\015E\000e\244"
 14597      65A4
 14598 001e 46009400 		.ascii	"F\000\224\000f\264"
 14598      66B4
 14599 0024 47008200 		.ascii	"G\000\202\000g\242"
 14599      67A2
 14600 002a 48005800 		.ascii	"H\000X\000h\265"
 14600      68B5
 14601 0030 49004900 		.ascii	"I\000I\000i\250"
 14601      69A8
 14602 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14602      6A00
 14603 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14603      6BA9
 14604 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14604      6CAA
 14605 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14605      00A6
 14606 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14606      6DAB
 14607 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14607      6EAC
 14608 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14608      6FB7
 14609 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14609      0000
 14610 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14610      0000
 14611 006c 50378F26 		.ascii	"P7\217&p\257"
 14611      70AF
 14612 0072 5138007C 		.ascii	"Q8\000|q\000"
 14612      7100
 14613 0078 5239520B 		.ascii	"R9R\013r\260"
 14613      72B0
 14614 007e 532F915C 		.ascii	"S/\221\\s\261"
 14614      73B1
 14615 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14615      0000
 14616 008a 54345400 		.ascii	"T4T\000t\262"
ARM GAS  /tmp/ccXySG1f.s 			page 396


 14616      74B2
 14617 0090 55350000 		.ascii	"U5\000\000u\000"
 14617      7500
 14618 0096 56360000 		.ascii	"V6\000\000v\000"
 14618      7600
 14619 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14619      7700
 14620 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14620      0000
 14621 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14621      78AD
 14622 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14622      79B3
 14623 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14623      7AA5
 14624 00ba 2D282900 		.ascii	"-()\000\000\000"
 14624      0000
 14625 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14625      0000
 14626 00c6 3A308720 		.ascii	":0\207 ;\247"
 14626      3BA7
 14627 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14627      2EB6
 14628 00d2 3F002100 		.ascii	"?\000!\000?\000"
 14628      3F00
 14629 00d8 202B3D00 		.ascii	" +=\000  "
 14629      2020
 14630 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14630      0000
 14631              		.section	.rodata.amap.9319,"a"
 14632              		.align	2
 14633              		.set	.LANCHOR16,. + 0
 14636              	amap.9319:
 14637 0000 04       		.byte	4
 14638 0001 000D00   		.ascii	"\000\015\000"
 14639 0004 05       		.byte	5
 14640 0005 000E09   		.ascii	"\000\016\011"
 14641 0008 2C       		.byte	44
 14642 0009 000D00   		.ascii	"\000\015\000"
 14643 000c 2D       		.byte	45
 14644 000d 000E09   		.ascii	"\000\016\011"
 14645 0010 08       		.byte	8
 14646 0011 00000F   		.ascii	"\000\000\017"
 14647 0014 1F       		.byte	31
 14648 0015 00000C   		.ascii	"\000\000\014"
 14649 0018 21       		.byte	33
 14650 0019 00000A   		.ascii	"\000\000\012"
 14651 001c 26       		.byte	38
 14652 001d 00000B   		.ascii	"\000\000\013"
 14653              		.section	.rodata.catalogue,"a"
 14654              		.align	2
 14657              	catalogue:
 14658 0000 465B46A0 		.ascii	"F[F\240\301b\230\264\014\242;X\346\374}G\262\361\011"
 14658      C16298B4 
 14658      0CA23B58 
 14658      E6FC7D47 
 14658      B2F109
ARM GAS  /tmp/ccXySG1f.s 			page 397


 14659 0013 8166D3B4 		.ascii	"\201f\323\264\361\220D\331\304i\002m\322\344\275 q\\"
 14659      F19044D9 
 14659      C469026D 
 14659      D2E4BD20 
 14659      715C
 14660 0025 66D5B668 		.ascii	"f\325\266h\234\334\265\322s\030'=\270q\021'Y\252L\230"
 14660      9CDCB5D2 
 14660      7318273D 
 14660      B8711127 
 14660      59AA4C98 
 14661 0039 F69DA669 		.ascii	"\366\235\246i\030\326\361\3130\333\327\005\037\311P"
 14661      18D6F1CB 
 14661      30DBD705 
 14661      1FC950
 14662 0048 4C9320C8 		.ascii	"L\223 \310P\204\234\302\313\2127\011\221p\303V\000\312"
 14662      50849CC2 
 14662      CB8A3709 
 14662      9170C356 
 14662      00CA
 14663 005a 45514459 		.ascii	"EQDY\030o\212\307\035\214s\212\002z\327*\211\373Z\324"
 14663      186F8AC7 
 14663      1D8C738A 
 14663      027AD72A 
 14663      89FB5AD4 
 14664 006e B62D9B6A 		.ascii	"\266-\233j\333\265J\022\255\251LZ\326\271\253k\034\006"
 14664      DBB54A12 
 14664      ADA94C5A 
 14664      D6B9AB6B 
 14664      1C06
 14665 0080 259A435D 		.ascii	"%\232C]\266\311\325^\227v\304"
 14665      B6C9D55E 
 14665      9776C4
 14666              		.section	.rodata.catalogue_sizes.9642,"a"
 14667              		.align	2
 14668              		.set	.LANCHOR8,. + 0
 14671              	catalogue_sizes.9642:
 14672 0000 006F1E11 		.ascii	"\000o\036\0216=C\205%8\016\023\012\011(\032LLX\016\023"
 14672      363D4385 
 14672      25380E13 
 14672      0A09281A 
 14672      4C4C580E 
 14673              		.section	.rodata.catalogues.9650,"a"
 14674              		.align	2
 14675              		.set	.LANCHOR12,. + 0
 14678              	catalogues.9650:
 14679 0000 00000000 		.word	0
 14680 0004 00000000 		.word	catalogue
 14681 0008 00000000 		.word	cplx_catalogue
 14682 000c 00000000 		.word	stats_catalogue
 14683 0010 00000000 		.word	prob_catalogue
 14684 0014 00000000 		.word	int_catalogue
 14685 0018 00000000 		.word	prog_catalogue
 14686 001c 00000000 		.word	program_xfcn
 14687 0020 00000000 		.word	test_catalogue
 14688 0024 00000000 		.word	mode_catalogue
 14689 0028 00000000 		.word	alpha_catalogue
 14690 002c 00000000 		.word	alpha_symbols
ARM GAS  /tmp/ccXySG1f.s 			page 398


 14691 0030 00000000 		.word	alpha_compares
 14692 0034 00000000 		.word	alpha_arrows
 14693 0038 00000000 		.word	alpha_letters
 14694 003c 00000000 		.word	alpha_subscripts
 14695 0040 00000000 		.word	0
 14696 0044 00000000 		.word	0
 14697 0048 00000000 		.word	0
 14698 004c 00000000 		.word	sums_catalogue
 14699 0050 00000000 		.word	matrix_catalogue
 14700              		.section	.rodata.cmap.9318,"a"
 14701              		.align	2
 14702              		.set	.LANCHOR17,. + 0
 14705              	cmap.9318:
 14706 0000 04       		.byte	4
 14707 0001 120012   		.ascii	"\022\000\022"
 14708 0004 05       		.byte	5
 14709 0005 090909   		.ascii	"\011\011\011"
 14710 0008 06       		.byte	6
 14711 0009 151515   		.ascii	"\025\025\025"
 14712 000c 0C       		.byte	12
 14713 000d 100011   		.ascii	"\020\000\021"
 14714 0010 19       		.byte	25
 14715 0011 040004   		.ascii	"\004\000\004"
 14716 0014 1A       		.byte	26
 14717 0015 030003   		.ascii	"\003\000\003"
 14718 0018 1B       		.byte	27
 14719 0019 130013   		.ascii	"\023\000\023"
 14720 001c 1C       		.byte	28
 14721 001d 140014   		.ascii	"\024\000\024"
 14722 0020 1E       		.byte	30
 14723 0021 171717   		.ascii	"\027\027\027"
 14724 0024 1F       		.byte	31
 14725 0025 080808   		.ascii	"\010\010\010"
 14726 0028 20       		.byte	32
 14727 0029 060606   		.ascii	"\006\006\006"
 14728 002c 21       		.byte	33
 14729 002d 010502   		.ascii	"\001\005\002"
 14730              		.section	.rodata.conv_catalogue,"a"
 14731              		.align	2
 14732              		.set	.LANCHOR11,. + 0
 14735              	conv_catalogue:
 14736 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 14736      2B2DDD37 
 14736      27393133 
 14736      111605DC 
 14736      DE19
 14737 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14737      0D0F8D08 
 14737      8F0A2A2C 
 14737      47434517 
 14737      3F30
 14738 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14738      02062622 
 14738      20282435 
 14738      2F012310 
 14738      0C0E2112 
 14739 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
ARM GAS  /tmp/ccXySG1f.s 			page 399


 14739      1E292E09 
 14739      36383E3A 
 14739      3C4025DF 
 14739      3D8B8E03 
 14740 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14740      4A484642 
 14740      441F
 14741              		.section	.rodata.conv_mapping.9689,"a"
 14742              		.align	2
 14743              		.set	.LANCHOR14,. + 0
 14746              	conv_mapping.9689:
 14747 0000 8502     		.short	645
 14748 0002 8402     		.short	644
 14749 0004 8602     		.short	646
 14750 0006 8702     		.short	647
 14751 0008 8202     		.short	642
 14752 000a 8302     		.short	643
 14753 000c 3202     		.short	562
 14754 000e 3302     		.short	563
 14755 0010 3402     		.short	564
 14756 0012 3502     		.short	565
 14757 0014 3602     		.short	566
 14758 0016 3702     		.short	567
 14759              		.section	.rodata.cplx_catalogue,"a"
 14760              		.align	2
 14763              	cplx_catalogue:
 14764 0000 7DA91CE6 		.ascii	"}\251\034\346\027;\316\341\015\360}\340\2702\177\252"
 14764      173BCEE1 
 14764      0DF07DE0 
 14764      B8327FAA 
 14765 0010 AA9AB1EF 		.ascii	"\252\232\261\357\241\340\367\226\004|_7\326\244\252"
 14765      A1E0F796 
 14765      047C5F37 
 14765      D6A4AA
 14766 001f ECFA1A0E 		.ascii	"\354\372\032\016\235\336\240"
 14766      9DDEA0
 14767              		.section	.rodata.disp.9500,"a"
 14768              		.align	2
 14769              		.set	.LANCHOR21,. + 0
 14772              	disp.9500:
 14773 0000 03       		.byte	3
 14774 0001 02       		.byte	2
 14775 0002 05       		.byte	5
 14776 0003 04       		.byte	4
 14777              		.section	.rodata.int_catalogue,"a"
 14778              		.align	2
 14781              	int_catalogue:
 14782 0000 46712307 		.ascii	"Fq#\007\024@\335BY\323\020\231\314U\032@\233v\211\270"
 14782      1440DD42 
 14782      59D31099 
 14782      CC551A40 
 14782      9B7689B8 
 14783 0014 25318C65 		.ascii	"%1\214e\247i\227\366\221\274_\234\263\015\275%p\314"
 14783      A76997F6 
 14783      91BC5F9C 
 14783      B30DBD25 
 14783      70CC
ARM GAS  /tmp/ccXySG1f.s 			page 400


 14784 0026 3904C370 		.ascii	"9\004\303p\374LhB1\014G.dCS)\030o\212\307\036\327*\255"
 14784      FC4C6842 
 14784      310C472E 
 14784      64435329 
 14784      186F8AC7 
 14785 003e 6B52D8B6 		.ascii	"kR\330\266m\253n\325*\323\0245\334w@"
 14785      6DAB6ED5 
 14785      2AD31435 
 14785      DC7740
 14786              		.section	.rodata.linear_key_map.9284,"a"
 14787              		.align	2
 14788              		.set	.LANCHOR6,. + 0
 14791              	linear_key_map.9284:
 14792 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 14792      04050607 
 14792      08090A0B 
 14792      0C
 14793 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 14793      00111213 
 14793      14150016 
 14793      17
 14794 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 14794      1B1C1D1E 
 14794      1F002021 
 14794      22232425 
 14794      25252525 
 14795 002e 25       		.ascii	"%"
 14796              		.section	.rodata.linear_key_map.9288,"a"
 14797              		.align	2
 14798              		.set	.LANCHOR1,. + 0
 14801              	linear_key_map.9288:
 14802 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 14802      04050607 
 14802      08222222 
 14802      090A0B
 14803 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 14803      0F101112 
 14803      00131415 
 14803      16
 14804 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 14804      1A1B1C00 
 14804      1D1E1F20 
 14804      21222222 
 14805 002c 040522   		.ascii	"\004\005\""
 14806              		.section	.rodata.map.9300,"a"
 14807              		.align	2
 14808              		.set	.LANCHOR5,. + 0
 14811              	map.9300:
 14812 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 14812      FF7F7F7F 
 14812      6D6E6F6C 
 14812      FFFFFFFF 
 14813 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 14813      097F7FE7 
 14813      05067F7F 
 14813      E4
 14814 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
ARM GAS  /tmp/ccXySG1f.s 			page 401


 14814      00F07F7F 
 14814      FFFFFFFF 
 14814      FF
 14815 002a FF       		.ascii	"\377"
 14816              		.section	.rodata.matrix_catalogue,"a"
 14817              		.align	2
 14820              	matrix_catalogue:
 14821 0000 661DA364 		.ascii	"f\035\243d\3305\335\203m\222rY7!\327r\231ve\331e\231"
 14821      D835DD83 
 14821      6D927259 
 14821      3721D772 
 14821      997665D9 
 14822 0016 5650     		.ascii	"VP"
 14823              		.section	.rodata.mode_catalogue,"a"
 14824              		.align	2
 14827              	mode_catalogue:
 14828 0000 2948C290 		.ascii	")H\302\220\213\306\206c\364\376@\017\363\250\351\037"
 14828      8BC68663 
 14828      F4FE400F 
 14828      F3A8E91F 
 14829 0010 8801FC7C 		.ascii	"\210\001\374|\277\311\201\214\317$I\302lb\031I2H\232"
 14829      BFC9818C 
 14829      CF2449C2 
 14829      6C621949 
 14829      32489A
 14830 0023 19327210 		.ascii	"\0312r\020\203\31322 \2072\012c\020\3072Js\024\306#"
 14830      83CB3232 
 14830      2087320A 
 14830      6310C732 
 14830      4A7314C6 
 14831 0038 8CE0E039 		.ascii	"\214\340\3409\311\210b\024\215\302\3173\310\231"
 14831      C9886214 
 14831      8DC2CF33 
 14831      C899
 14832              		.section	.rodata.op_map.9372,"a"
 14833              		.align	2
 14834              		.set	.LANCHOR2,. + 0
 14837              	op_map.9372:
 14838 0000 1500     		.short	21
 14839 0002 0B02     		.short	523
 14840 0004 0003     		.short	768
 14841 0006 0A02     		.short	522
 14842 0008 1300     		.short	19
 14843 000a 1400     		.short	20
 14844 000c 0300     		.short	3
 14845 000e 0A00     		.short	10
 14846 0010 0701     		.short	263
 14847 0012 0000     		.short	0
 14848 0014 6531     		.short	12645
 14849 0016 0300     		.short	3
 14850 0018 0200     		.short	2
 14851 001a 0100     		.short	1
 14852 001c 4400     		.short	68
 14853 001e 0C00     		.short	12
 14854 0020 0D00     		.short	13
 14855 0022 0E00     		.short	14
 14856 0024 0403     		.short	772
ARM GAS  /tmp/ccXySG1f.s 			page 402


 14857 0026 2F00     		.short	47
 14858 0028 0900     		.short	9
 14859 002a 0A00     		.short	10
 14860 002c 0B00     		.short	11
 14861 002e 0303     		.short	771
 14862 0030 2E00     		.short	46
 14863 0032 0600     		.short	6
 14864 0034 0700     		.short	7
 14865 0036 0800     		.short	8
 14866 0038 0203     		.short	770
 14867 003a 3300     		.short	51
 14868 003c 0500     		.short	5
 14869 003e 0400     		.short	4
 14870 0040 3B01     		.short	315
 14871 0042 0103     		.short	769
 14872 0044 0001     		.short	256
 14873              		.section	.rodata.op_map.9395,"a"
 14874              		.align	2
 14875              		.set	.LANCHOR3,. + 0
 14878              	op_map.9395:
 14879 0000 0100     		.short	1
 14880 0002 0000     		.short	0
 14881 0004 20F2     		.short	-3552
 14882 0006 23F2     		.short	-3549
 14883 0008 21F2     		.short	-3551
 14884 000a 24F2     		.short	-3548
 14885 000c 22F2     		.short	-3550
 14886 000e 25F2     		.short	-3547
 14887 0010 47F1     		.short	-3769
 14888 0012 46F1     		.short	-3770
 14889 0014 4E01     		.short	334
 14890 0016 4D01     		.short	333
 14891 0018 5C01     		.short	348
 14892 001a 35F1     		.short	-3787
 14893 001c 5B01     		.short	347
 14894 001e 36F1     		.short	-3786
 14895 0020 3301     		.short	307
 14896 0022 37F1     		.short	-3785
 14897 0024 3300     		.short	51
 14898 0026 0C01     		.short	268
 14899 0028 2B00     		.short	43
 14900 002a 2C00     		.short	44
 14901 002c 028B     		.short	-29950
 14902 002e 088B     		.short	-29944
 14903 0030 0A8B     		.short	-29942
 14904 0032 108B     		.short	-29936
 14905 0034 4301     		.short	323
 14906 0036 3D01     		.short	317
 14907 0038 0902     		.short	521
 14908 003a 0802     		.short	520
 14909 003c 1002     		.short	528
 14910 003e 0D02     		.short	525
 14911 0040 0F02     		.short	527
 14912 0042 0E02     		.short	526
 14913 0044 0003     		.short	768
 14914 0046 0803     		.short	776
 14915 0048 0BF2     		.short	-3573
ARM GAS  /tmp/ccXySG1f.s 			page 403


 14916 004a 1603     		.short	790
 14917 004c 1203     		.short	786
 14918 004e 1303     		.short	787
 14919 0050 3DF2     		.short	-3523
 14920 0052 3EF2     		.short	-3522
 14921 0054 24F1     		.short	-3804
 14922 0056 1EF1     		.short	-3810
 14923 0058 75F2     		.short	-3467
 14924 005a 27F1     		.short	-3801
 14925 005c 0A02     		.short	522
 14926 005e 1602     		.short	534
 14927 0060 5100     		.short	81
 14928 0062 5200     		.short	82
 14929 0064 0000     		.short	0
 14930 0066 0100     		.short	1
 14931 0068 48F0     		.short	-4024
 14932 006a 4BF0     		.short	-4021
 14933 006c 47F0     		.short	-4025
 14934 006e 46F0     		.short	-4026
 14935 0070 77F2     		.short	-3465
 14936 0072 78F2     		.short	-3464
 14937 0074 3300     		.short	51
 14938 0076 3300     		.short	51
 14939 0078 0502     		.short	517
 14940 007a 0602     		.short	518
 14941 007c 0402     		.short	516
 14942 007e 0002     		.short	512
 14943 0080 4200     		.short	66
 14944 0082 3801     		.short	312
 14945 0084 3A00     		.short	58
 14946 0086 3B00     		.short	59
 14947 0088 0001     		.short	256
 14948 008a 0001     		.short	256
 14949              		.section	.rodata.op_map.9418,"a"
 14950              		.align	2
 14951              		.set	.LANCHOR0,. + 0
 14954              	op_map.9418:
 14955 0000 4C80     		.short	-32692
 14956 0002 4D80     		.short	-32691
 14957 0004 4E80     		.short	-32690
 14958 0006 4F80     		.short	-32689
 14959 0008 3300     		.short	51
 14960 000a 3300     		.short	51
 14961 000c 3300     		.short	51
 14962 000e 2180     		.short	-32735
 14963 0010 0801     		.short	264
 14964 0012 8780     		.short	-32633
 14965 0014 1180     		.short	-32751
 14966 0016 7C02     		.short	636
 14967 0018 6660     		.short	24678
 14968 001a 3F01     		.short	319
 14969 001c 4580     		.short	-32699
 14970 001e 1C03     		.short	796
 14971 0020 1D03     		.short	797
 14972 0022 1E03     		.short	798
 14973 0024 0603     		.short	774
 14974 0026 2F02     		.short	559
ARM GAS  /tmp/ccXySG1f.s 			page 404


 14975 0028 3300     		.short	51
 14976 002a 3300     		.short	51
 14977 002c 3300     		.short	51
 14978 002e 3300     		.short	51
 14979 0030 3300     		.short	51
 14980 0032 3300     		.short	51
 14981 0034 3300     		.short	51
 14982 0036 3300     		.short	51
 14983 0038 1640     		.short	16406
 14984 003a 0201     		.short	258
 14985 003c 6D80     		.short	-32659
 14986 003e 5001     		.short	336
 14987 0040 3300     		.short	51
 14988 0042 1540     		.short	16405
 14989 0044 0001     		.short	256
 14990              		.section	.rodata.op_map.9473,"a"
 14991              		.align	2
 14992              		.set	.LANCHOR7,. + 0
 14995              	op_map.9473:
 14996 0000 0100     		.short	1
 14997 0002 0100     		.short	1
 14998 0004 0000     		.short	0
 14999 0006 0000     		.short	0
 15000 0008 0B05     		.short	1291
 15001 000a 2005     		.short	1312
 15002 000c 2305     		.short	1315
 15003 000e 3300     		.short	51
 15004 0010 0006     		.short	1536
 15005 0012 2105     		.short	1313
 15006 0014 2405     		.short	1316
 15007 0016 3300     		.short	51
 15008 0018 0A05     		.short	1290
 15009 001a 2205     		.short	1314
 15010 001c 2505     		.short	1317
 15011 001e 3300     		.short	51
 15012 0020 3300     		.short	51
 15013 0022 4701     		.short	327
 15014 0024 4601     		.short	326
 15015 0026 3300     		.short	51
 15016 0028 3300     		.short	51
 15017 002a 3300     		.short	51
 15018 002c 3300     		.short	51
 15019 002e 3300     		.short	51
 15020 0030 15FF     		.short	-235
 15021 0032 3300     		.short	51
 15022 0034 3300     		.short	51
 15023 0036 3300     		.short	51
 15024 0038 1AFF     		.short	-230
 15025 003a 3300     		.short	51
 15026 003c 3300     		.short	51
 15027 003e 8CFF     		.short	-116
 15028 0040 0901     		.short	265
 15029 0042 3300     		.short	51
 15030 0044 3300     		.short	51
 15031 0046 0A01     		.short	266
 15032 0048 0B01     		.short	267
 15033 004a 3300     		.short	51
ARM GAS  /tmp/ccXySG1f.s 			page 405


 15034 004c 0D01     		.short	269
 15035 004e 0D01     		.short	269
 15036 0050 663F     		.short	16230
 15037 0052 3300     		.short	51
 15038 0054 3300     		.short	51
 15039 0056 1FFF     		.short	-225
 15040 0058 3805     		.short	1336
 15041 005a 3300     		.short	51
 15042 005c 3300     		.short	51
 15043 005e 3905     		.short	1337
 15044 0060 6621     		.short	8550
 15045 0062 3300     		.short	51
 15046 0064 3300     		.short	51
 15047 0066 6621     		.short	8550
 15048 0068 3300     		.short	51
 15049 006a 3300     		.short	51
 15050 006c 3300     		.short	51
 15051 006e 3300     		.short	51
 15052 0070 3300     		.short	51
 15053 0072 0905     		.short	1289
 15054 0074 0805     		.short	1288
 15055 0076 3300     		.short	51
 15056 0078 07A8     		.short	-22521
 15057 007a 1005     		.short	1296
 15058 007c 0D05     		.short	1293
 15059 007e 3300     		.short	51
 15060 0080 08A8     		.short	-22520
 15061 0082 0F05     		.short	1295
 15062 0084 0E05     		.short	1294
 15063 0086 3300     		.short	51
 15064 0088 09A8     		.short	-22519
 15065 008a 0006     		.short	1536
 15066 008c 0806     		.short	1544
 15067 008e 3300     		.short	51
 15068 0090 0406     		.short	1540
 15069 0092 0B05     		.short	1291
 15070 0094 1606     		.short	1558
 15071 0096 3300     		.short	51
 15072 0098 3300     		.short	51
 15073 009a 1206     		.short	1554
 15074 009c 1306     		.short	1555
 15075 009e 2F05     		.short	1327
 15076 00a0 04A8     		.short	-22524
 15077 00a2 3300     		.short	51
 15078 00a4 3300     		.short	51
 15079 00a6 3300     		.short	51
 15080 00a8 05A8     		.short	-22523
 15081 00aa 3300     		.short	51
 15082 00ac 3300     		.short	51
 15083 00ae 3300     		.short	51
 15084 00b0 06A8     		.short	-22522
 15085 00b2 3300     		.short	51
 15086 00b4 3300     		.short	51
 15087 00b6 3300     		.short	51
 15088 00b8 0306     		.short	1539
 15089 00ba 0A05     		.short	1290
 15090 00bc 1605     		.short	1302
ARM GAS  /tmp/ccXySG1f.s 			page 406


 15091 00be 1605     		.short	1302
 15092 00c0 3300     		.short	51
 15093 00c2 3300     		.short	51
 15094 00c4 3300     		.short	51
 15095 00c6 3300     		.short	51
 15096 00c8 01A8     		.short	-22527
 15097 00ca 0000     		.short	0
 15098 00cc 0100     		.short	1
 15099 00ce 3300     		.short	51
 15100 00d0 02A8     		.short	-22526
 15101 00d2 3300     		.short	51
 15102 00d4 3300     		.short	51
 15103 00d6 3300     		.short	51
 15104 00d8 03A8     		.short	-22525
 15105 00da 3300     		.short	51
 15106 00dc 3300     		.short	51
 15107 00de 3300     		.short	51
 15108 00e0 0206     		.short	1538
 15109 00e2 3300     		.short	51
 15110 00e4 3300     		.short	51
 15111 00e6 3300     		.short	51
 15112 00e8 3300     		.short	51
 15113 00ea 3300     		.short	51
 15114 00ec 3300     		.short	51
 15115 00ee 0201     		.short	258
 15116 00f0 00A8     		.short	-22528
 15117 00f2 0505     		.short	1285
 15118 00f4 0605     		.short	1286
 15119 00f6 3300     		.short	51
 15120 00f8 B801     		.short	440
 15121 00fa 0405     		.short	1284
 15122 00fc 0005     		.short	1280
 15123 00fe 3300     		.short	51
 15124 0100 3300     		.short	51
 15125 0102 3300     		.short	51
 15126 0104 3300     		.short	51
 15127 0106 3300     		.short	51
 15128 0108 0106     		.short	1537
 15129 010a 3300     		.short	51
 15130 010c 3300     		.short	51
 15131 010e 3300     		.short	51
 15132 0110 0001     		.short	256
 15133 0112 0001     		.short	256
 15134 0114 0001     		.short	256
 15135 0116 0001     		.short	256
 15136              		.section	.rodata.op_map.9485,"a"
 15137              		.align	2
 15138              		.set	.LANCHOR19,. + 0
 15141              	op_map.9485:
 15142 0000 2A27     		.ascii	"*'"
 15143 0002 2B28     		.ascii	"+("
 15144 0004 2C29     		.ascii	",)"
 15145              		.section	.rodata.op_map.9499,"a"
 15146              		.align	2
 15147              		.set	.LANCHOR20,. + 0
 15150              	op_map.9499:
 15151 0000 1A02     		.short	538
ARM GAS  /tmp/ccXySG1f.s 			page 407


 15152 0002 7B02     		.short	635
 15153 0004 1B02     		.short	539
 15154 0006 7A02     		.short	634
 15155 0008 1C02     		.short	540
 15156 000a 3300     		.short	51
 15157              		.section	.rodata.op_map2.9396,"a"
 15158              		.align	2
 15159              		.set	.LANCHOR4,. + 0
 15162              	op_map2.9396:
 15163 0000 3300     		.short	51
 15164 0002 3300     		.short	51
 15165 0004 0003     		.short	768
 15166 0006 0A02     		.short	522
 15167              		.section	.rodata.opcode_breaks,"a"
 15168              		.align	2
 15169              		.set	.LANCHOR13,. + 0
 15172              	opcode_breaks:
 15173 0000 34CD9C35 		.ascii	"4\315\2345\014\2345"
 15173      0C9C35
 15174              		.section	.rodata.prob_catalogue,"a"
 15175              		.align	2
 15178              	prob_catalogue:
 15179 0000 5414F5B5 		.ascii	"T\024\365\265QYVE\321fST\305\261NQ\226\245\035HVU\205"
 15179      51595645 
 15179      D1665354 
 15179      C5B14E51 
 15179      96A51D48 
 15180 0017 C15A57D5 		.ascii	"\301ZW\325\345\311`X\226\025\315cW\025\265\305]U\225"
 15180      E5C96058 
 15180      9615CD63 
 15180      5715B5C5 
 15180      5D5595
 15181 002a 55BD5754 		.ascii	"U\275WT\325%\271TP\326\225\021ER\224\225\255KY\323\325"
 15181      D525B954 
 15181      50D69511 
 15181      45529495 
 15181      AD4B59D3 
 15182 003f 05425016 		.ascii	"\005BP\026\200"
 15182      80
 15183              		.section	.rodata.prog_catalogue,"a"
 15184              		.align	2
 15187              	prog_catalogue:
 15188 0000 B98D1CE8 		.ascii	"\271\215\034\350y\035G\201\310t*3\213\274B\272\356\321"
 15188      791D4781 
 15188      C8742A33 
 15188      8BBC42BA 
 15188      EED1
 15189 0012 BAB1C08E 		.ascii	"\272\261\300\216\013\342\3713/\013\262\356\312N#\220"
 15189      0BE2F933 
 15189      2F0BB2EE 
 15189      CA4E2390 
 15190 0022 E738CE8C 		.ascii	"\3478\316\214\254\3367r\240\320\3349G\003\233(\264\215"
 15190      ACDE3772 
 15190      A0D0DC39 
 15190      47039B28 
 15190      B48D
 15191 0034 F1D8CD1B 		.ascii	"\361\330\315\033K\022\274\262,\016\033\224\322\015\355"
ARM GAS  /tmp/ccXySG1f.s 			page 408


 15191      4B12BCB2 
 15191      2C0E1B94 
 15191      D20DED
 15192 0043 1302C32A 		.ascii	"\023\002\303*r \350\313\260l,|\256+q\354\324"
 15192      7220E8CB 
 15192      B06C2C7C 
 15192      AE2B71EC 
 15192      D4
 15193              		.section	.rodata.program_xfcn,"a"
 15194              		.align	2
 15197              	program_xfcn:
 15198 0000 465B46A3 		.ascii	"F[F\243\0220X\246/\024@\312#\265\216o\335BY\323\037"
 15198      123058A6 
 15198      2F1440CA 
 15198      23B58E6F 
 15198      DD4259D3 
 15199 0015 51ECBC42 		.ascii	"Q\354\274B`Y\264\355<d\0216s\025F\220&\335.K\322\007"
 15199      6059B4ED 
 15199      3C641136 
 15199      73154690 
 15199      26DD2E4B 
 15200 002b 15C66D5B 		.ascii	"\025\306m[f\211\315\313]'1\202s\333\202Q\304D\235f\251"
 15200      6689CDCB 
 15200      5D273182 
 15200      73DB8251 
 15200      C4449D66 
 15201 0040 3263F18C 		.ascii	"2c\361\214e\247i\227\366\221\215o\027\347,\303o\\\024"
 15201      65A76997 
 15201      F6918D6F 
 15201      17E72CC3 
 15201      6F5C14
 15202 0053 7F252570 		.ascii	"\177%%p\3149\004\303p\374\223\023\3102\021\241\010I"
 15202      CC3904C3 
 15202      70FC9313 
 15202      C83211A1 
 15202      0849
 15203 0065 F1030B11 		.ascii	"\361\003\013\021\313\2127\011\221p\303V\000\312EQDY"
 15203      CB8A3709 
 15203      9170C356 
 15203      00CA4551 
 15203      4459
 15204 0077 186F8AC7 		.ascii	"\030o\212\307\035\214s\212\002z\327*\211\373Z\324\266"
 15204      1D8C738A 
 15204      027AD72A 
 15204      89FB5AD4 
 15204      B6
 15205 0088 2D9B6ADB 		.ascii	"-\233j\333\265J\022\255\251LZ\326\271\253k\034\006%"
 15205      B54A12AD 
 15205      A94C5AD6 
 15205      B9AB6B1C 
 15205      0625
 15206 009a 9A435DC7 		.ascii	"\232C]\307m\262uW\245\335\261w@"
 15206      6DB27557 
 15206      A5DDB177 
 15206      40
 15207              		.section	.rodata.smap.9320,"a"
 15208              		.align	2
ARM GAS  /tmp/ccXySG1f.s 			page 409


 15209              		.set	.LANCHOR22,. + 0
 15212              	smap.9320:
 15213 0000 00010002 		.ascii	"\000\001\000\002"
 15214              		.section	.rodata.stats_catalogue,"a"
 15215              		.align	2
 15218              	stats_catalogue:
 15219 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\324T\027\205"
 15219      5D17C971 
 15219      58611685 
 15219      95D45417 
 15219      85
 15220 0011 514C575D 		.ascii	"QLW]\300"
 15220      C0
 15221              		.section	.rodata.sums_catalogue,"a"
 15222              		.align	2
 15225              	sums_catalogue:
 15226 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15226      4A1384C1 
 15226      20451104 
 15226      F11C4911 
 15226      8500
 15227              		.section	.rodata.test_catalogue,"a"
 15228              		.align	2
 15231              	test_catalogue:
 15232 0000 C5F16CD0 		.ascii	"\305\361l\320\353/\313\334\023\010\302\260\222\363\003"
 15232      EB2FCBDC 
 15232      1308C2B0 
 15232      92F303
 15233 000f C1707C18 		.ascii	"\301p|\030\323.\361\333\310\2356\213\202\370\2725\013"
 15233      D32EF1DB 
 15233      C89D368B 
 15233      82F8BA35 
 15233      0B
 15234 0020 9340F0B7 		.ascii	"\223@\360\267\356\003T\326\267\256+\204\267<@"
 15234      EE0354D6 
 15234      B7AE2B84 
 15234      B73C40
 15235              		.text
 15236              	.Letext0:
 15237              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15238              		.file 3 "dmcp/dmcp.h"
 15239              		.file 4 "src/decNumber/decContext.h"
 15240              		.file 5 "src/decNumber/decNumber.h"
 15241              		.file 6 "src/decNumber/decimal64.h"
 15242              		.file 7 "src/decNumber/decimal128.h"
 15243              		.file 8 "src/xeq.h"
 15244              		.file 9 "src/data.h"
 15245              		.file 10 "src/keys.h"
 15246              		.file 11 "src/menu.h"
 15247              		.file 12 "src/display.h"
 15248              		.file 13 "src/consts.h"
 15249              		.file 14 "src/storage.h"
 15250              		.file 15 "src/stats.h"
 15251              		.file 16 "src/catalogues.h"
 15252              		.file 17 "src/lcd.h"
 15253              		.file 18 "src/int.h"
 15254              		.file 19 "src/decn.h"
ARM GAS  /tmp/ccXySG1f.s 			page 410


ARM GAS  /tmp/ccXySG1f.s 			page 411


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccXySG1f.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccXySG1f.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccXySG1f.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccXySG1f.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccXySG1f.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccXySG1f.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccXySG1f.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccXySG1f.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccXySG1f.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccXySG1f.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccXySG1f.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccXySG1f.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccXySG1f.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccXySG1f.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccXySG1f.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccXySG1f.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccXySG1f.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccXySG1f.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccXySG1f.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccXySG1f.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccXySG1f.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccXySG1f.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccXySG1f.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccXySG1f.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/ccXySG1f.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccXySG1f.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/ccXySG1f.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/ccXySG1f.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccXySG1f.s:1117   .text.arg_eval:0000000000000090 $d
     /tmp/ccXySG1f.s:1124   .text.arg_digit:0000000000000000 $t
     /tmp/ccXySG1f.s:1131   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccXySG1f.s:1392   .text.arg_digit:00000000000000fc $d
     /tmp/ccXySG1f.s:1400   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccXySG1f.s:1407   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccXySG1f.s:1465   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccXySG1f.s:1470   .text.process_h_shifted:0000000000000000 $t
     /tmp/ccXySG1f.s:1477   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/ccXySG1f.s:1725   .text.process_h_shifted:00000000000000c8 $d
     /tmp/ccXySG1f.s:1733   .text.intltr:0000000000000000 $t
     /tmp/ccXySG1f.s:1740   .text.intltr:0000000000000000 intltr
     /tmp/ccXySG1f.s:1803   .text.intltr:0000000000000030 $d
     /tmp/ccXySG1f.s:1809   .text.process_normal:0000000000000000 $t
     /tmp/ccXySG1f.s:1816   .text.process_normal:0000000000000000 process_normal
     /tmp/ccXySG1f.s:1877   .text.process_normal:0000000000000022 $d
     /tmp/ccXySG1f.s:1923   .text.process_normal:000000000000007e $t
     /tmp/ccXySG1f.s:1972   .text.process_normal:00000000000000ac $d
     /tmp/ccXySG1f.s:1991   .text.process_normal:00000000000000f8 $t
     /tmp/ccXySG1f.s:2002   .text.process_normal:0000000000000104 $d
     /tmp/ccXySG1f.s:2045   .text.process_normal:00000000000001b0 $t
     /tmp/ccXySG1f.s:2246   .text.process_normal:0000000000000264 $d
     /tmp/ccXySG1f.s:2255   .text.process_fg_shifted:0000000000000000 $t
     /tmp/ccXySG1f.s:2262   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/ccXySG1f.s:2390   .text.process_fg_shifted:000000000000003e $d
     /tmp/ccXySG1f.s:2589   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/ccXySG1f.s 			page 412


     /tmp/ccXySG1f.s:2630   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/ccXySG1f.s:2826   .text.process_fg_shifted:0000000000000294 $d
     /tmp/ccXySG1f.s:2835   .text.set_window:0000000000000000 $t
     /tmp/ccXySG1f.s:2842   .text.set_window:0000000000000000 set_window
     /tmp/ccXySG1f.s:2989   .text.set_window:000000000000008c $d
     /tmp/ccXySG1f.s:2996   .text.arg_storcl:0000000000000000 $t
     /tmp/ccXySG1f.s:3003   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccXySG1f.s:3119   .text.arg_storcl:0000000000000040 $d
     /tmp/ccXySG1f.s:3124   .text.process_arg:0000000000000000 $t
     /tmp/ccXySG1f.s:3131   .text.process_arg:0000000000000000 process_arg
     /tmp/ccXySG1f.s:3337   .text.process_arg:000000000000008a $d
     /tmp/ccXySG1f.s:3341   .text.process_arg:0000000000000090 $t
     /tmp/ccXySG1f.s:3430   .text.process_arg:00000000000000f0 $d
     /tmp/ccXySG1f.s:3477   .text.process_arg:00000000000001a8 $t
     /tmp/ccXySG1f.s:3880   .text.process_arg:000000000000032c $d
     /tmp/ccXySG1f.s:3889   .text.process_arg:0000000000000340 $t
     /tmp/ccXySG1f.s:4380   .text.process_arg:000000000000054c $d
     /tmp/ccXySG1f.s:4385   .text.cur_shift:0000000000000000 $t
     /tmp/ccXySG1f.s:4393   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccXySG1f.s:4421   .text.cur_shift:0000000000000010 $d
     /tmp/ccXySG1f.s:4426   .text.reset_shift:0000000000000000 $t
     /tmp/ccXySG1f.s:4434   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccXySG1f.s:4492   .text.reset_shift:0000000000000014 $d
     /tmp/ccXySG1f.s:4497   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccXySG1f.s:4505   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccXySG1f.s:4533   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccXySG1f.s:4538   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccXySG1f.s:4546   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccXySG1f.s:4604   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccXySG1f.s:4609   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccXySG1f.s:4617   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccXySG1f.s:4653   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccXySG1f.s:4659   .text.init_state:0000000000000000 $t
     /tmp/ccXySG1f.s:4667   .text.init_state:0000000000000000 init_state
     /tmp/ccXySG1f.s:4773   .text.init_state:000000000000005c $d
     /tmp/ccXySG1f.s:4779   .text.process_cmplx:0000000000000000 $t
     /tmp/ccXySG1f.s:4786   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/ccXySG1f.s:5069   .text.process_cmplx:00000000000000b0 $d
     /tmp/ccXySG1f.s:5076   .text.soft_init_state:0000000000000000 $t
     /tmp/ccXySG1f.s:5084   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccXySG1f.s:5179   .text.soft_init_state:0000000000000048 $d
     /tmp/ccXySG1f.s:5185   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/ccXySG1f.s:5193   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/ccXySG1f.s:5359   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/ccXySG1f.s:5366   .text.stack_begin:0000000000000000 $t
     /tmp/ccXySG1f.s:5374   .text.stack_begin:0000000000000000 stack_begin
     /tmp/ccXySG1f.s:5514   .text.stack_begin:00000000000000b4 $d
     /tmp/ccXySG1f.s:5520   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccXySG1f.s:5528   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccXySG1f.s:5549   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccXySG1f.s:5555   .text.current_catalogue:0000000000000000 $t
     /tmp/ccXySG1f.s:5563   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccXySG1f.s:5819   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccXySG1f.s:5829   .text.process_catalogue:0000000000000000 $t
     /tmp/ccXySG1f.s:5836   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccXySG1f.s:6165   .text.process_catalogue:00000000000000fe $d
     /tmp/ccXySG1f.s:6197   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/ccXySG1f.s 			page 413


     /tmp/ccXySG1f.s:6705   .text.process_catalogue:00000000000002dc $d
     /tmp/ccXySG1f.s:6726   .text.process_catalogue:00000000000002fc $t
     /tmp/ccXySG1f.s:6756   .text.find_pos:0000000000000000 $t
     /tmp/ccXySG1f.s:6764   .text.find_pos:0000000000000000 find_pos
     /tmp/ccXySG1f.s:6937   .text.find_pos:0000000000000080 $d
     /tmp/ccXySG1f.s:6943   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccXySG1f.s:6951   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccXySG1f.s:6983   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccXySG1f.s:6989   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccXySG1f.s:6999   .text.process_keycode:0000000000000000 $t
     /tmp/ccXySG1f.s:7007   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccXySG1f.s:7626   .text.process_keycode:00000000000002e0 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccXySG1f.s:7649   .text.process_keycode:0000000000000320 $t
     /tmp/ccXySG1f.s:7848   .text.process_keycode:00000000000003f0 $d
     /tmp/ccXySG1f.s:7857   .text.process_keycode:0000000000000414 $t
     /tmp/ccXySG1f.s:8332   .text.process_keycode:0000000000000610 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccXySG1f.s:8352   .text.process_keycode:000000000000064c $t
     /tmp/ccXySG1f.s:8393   .text.process_keycode:0000000000000672 $d
     /tmp/ccXySG1f.s:8420   .text.process_keycode:000000000000068c $t
     /tmp/ccXySG1f.s:8549   .text.process_keycode:000000000000071c $d
     /tmp/ccXySG1f.s:8553   .text.process_keycode:000000000000072c $t
     /tmp/ccXySG1f.s:9136   .text.process_keycode:000000000000095c $d
     /tmp/ccXySG1f.s:9156   .text.process_keycode:0000000000000984 $t
     /tmp/ccXySG1f.s:9563   .text.process_keycode:0000000000000ad4 $d
     /tmp/ccXySG1f.s:9593   .text.process_keycode:0000000000000b4c $t
     /tmp/ccXySG1f.s:10056  .text.process_keycode:0000000000000ce0 $d
     /tmp/ccXySG1f.s:10074  .text.process_keycode:0000000000000d04 $t
     /tmp/ccXySG1f.s:10345  .text.process_keycode:0000000000000dd8 $d
     /tmp/ccXySG1f.s:10380  .text.process_keycode:0000000000000e64 $t
     /tmp/ccXySG1f.s:10650  .text.process_keycode:0000000000000f68 $d
     /tmp/ccXySG1f.s:10670  .text.process_keycode:0000000000000fb8 $t
     /tmp/ccXySG1f.s:10875  .text.process_keycode:000000000000105c $d
     /tmp/ccXySG1f.s:10893  .text.process_keycode:00000000000010a4 $t
     /tmp/ccXySG1f.s:10928  .text.process_keycode:00000000000010d4 $d
     /tmp/ccXySG1f.s:10935  .text.process_keycode:00000000000010e0 $t
     /tmp/ccXySG1f.s:11439  .text.process_keycode:0000000000001260 $d
     /tmp/ccXySG1f.s:11474  .text.process_keycode:00000000000012a4 $t
     /tmp/ccXySG1f.s:11596  .text.process_keycode:0000000000001308 $d
     /tmp/ccXySG1f.s:11631  .text.process_keycode:0000000000001390 $t
     /tmp/ccXySG1f.s:11927  .text.process_keycode:00000000000014e8 $d
     /tmp/ccXySG1f.s:11934  .text.process_keycode:00000000000014f8 $t
     /tmp/ccXySG1f.s:12118  .text.process_keycode:00000000000015c0 $d
     /tmp/ccXySG1f.s:12161  .text.process_keycode:0000000000001614 $t
     /tmp/ccXySG1f.s:12885  .text.process_keycode:00000000000018ec $d
     /tmp/ccXySG1f.s:12911  .text.process_keycode:0000000000001954 $t
     /tmp/ccXySG1f.s:13055  .text.process_keycode:00000000000019f0 $d
     /tmp/ccXySG1f.s:13089  .text.process_keycode:00000000000019fc $t
     /tmp/ccXySG1f.s:14288  .text.process_keycode:0000000000001d78 $d
     /tmp/ccXySG1f.s:14297  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccXySG1f.s:14305  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccXySG1f.s:14513  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccXySG1f.s:14530  .bss.was_paused.9844:0000000000000000 $d
ARM GAS  /tmp/ccXySG1f.s 			page 414


     /tmp/ccXySG1f.s:14534  .bss.was_paused.9844:0000000000000000 was_paused.9844
     /tmp/ccXySG1f.s:14537  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccXySG1f.s:14540  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccXySG1f.s:14543  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:14546  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccXySG1f.s:14549  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccXySG1f.s:14552  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccXySG1f.s:14555  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccXySG1f.s:14559  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccXySG1f.s:14565  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccXySG1f.s:14569  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccXySG1f.s:14575  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccXySG1f.s:14578  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccXySG1f.s:14582  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccXySG1f.s:14585  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccXySG1f.s:14588  .rodata.alphamap.9328:0000000000000000 $d
     /tmp/ccXySG1f.s:14592  .rodata.alphamap.9328:0000000000000000 alphamap.9328
     /tmp/ccXySG1f.s:14632  .rodata.amap.9319:0000000000000000 $d
     /tmp/ccXySG1f.s:14636  .rodata.amap.9319:0000000000000000 amap.9319
     /tmp/ccXySG1f.s:14654  .rodata.catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:14657  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccXySG1f.s:14667  .rodata.catalogue_sizes.9642:0000000000000000 $d
     /tmp/ccXySG1f.s:14671  .rodata.catalogue_sizes.9642:0000000000000000 catalogue_sizes.9642
     /tmp/ccXySG1f.s:14674  .rodata.catalogues.9650:0000000000000000 $d
     /tmp/ccXySG1f.s:14678  .rodata.catalogues.9650:0000000000000000 catalogues.9650
     /tmp/ccXySG1f.s:14763  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccXySG1f.s:15218  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccXySG1f.s:15178  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccXySG1f.s:14781  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccXySG1f.s:15187  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccXySG1f.s:15197  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccXySG1f.s:15231  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccXySG1f.s:14827  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccXySG1f.s:15225  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccXySG1f.s:14820  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccXySG1f.s:14701  .rodata.cmap.9318:0000000000000000 $d
     /tmp/ccXySG1f.s:14705  .rodata.cmap.9318:0000000000000000 cmap.9318
     /tmp/ccXySG1f.s:14731  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:14735  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccXySG1f.s:14742  .rodata.conv_mapping.9689:0000000000000000 $d
     /tmp/ccXySG1f.s:14746  .rodata.conv_mapping.9689:0000000000000000 conv_mapping.9689
     /tmp/ccXySG1f.s:14760  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:14768  .rodata.disp.9500:0000000000000000 $d
     /tmp/ccXySG1f.s:14772  .rodata.disp.9500:0000000000000000 disp.9500
     /tmp/ccXySG1f.s:14778  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:14787  .rodata.linear_key_map.9284:0000000000000000 $d
     /tmp/ccXySG1f.s:14791  .rodata.linear_key_map.9284:0000000000000000 linear_key_map.9284
     /tmp/ccXySG1f.s:14797  .rodata.linear_key_map.9288:0000000000000000 $d
     /tmp/ccXySG1f.s:14801  .rodata.linear_key_map.9288:0000000000000000 linear_key_map.9288
     /tmp/ccXySG1f.s:14807  .rodata.map.9300:0000000000000000 $d
     /tmp/ccXySG1f.s:14811  .rodata.map.9300:0000000000000000 map.9300
     /tmp/ccXySG1f.s:14817  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:14824  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:14833  .rodata.op_map.9372:0000000000000000 $d
     /tmp/ccXySG1f.s:14837  .rodata.op_map.9372:0000000000000000 op_map.9372
     /tmp/ccXySG1f.s:14874  .rodata.op_map.9395:0000000000000000 $d
     /tmp/ccXySG1f.s:14878  .rodata.op_map.9395:0000000000000000 op_map.9395
ARM GAS  /tmp/ccXySG1f.s 			page 415


     /tmp/ccXySG1f.s:14950  .rodata.op_map.9418:0000000000000000 $d
     /tmp/ccXySG1f.s:14954  .rodata.op_map.9418:0000000000000000 op_map.9418
     /tmp/ccXySG1f.s:14991  .rodata.op_map.9473:0000000000000000 $d
     /tmp/ccXySG1f.s:14995  .rodata.op_map.9473:0000000000000000 op_map.9473
     /tmp/ccXySG1f.s:15137  .rodata.op_map.9485:0000000000000000 $d
     /tmp/ccXySG1f.s:15141  .rodata.op_map.9485:0000000000000000 op_map.9485
     /tmp/ccXySG1f.s:15146  .rodata.op_map.9499:0000000000000000 $d
     /tmp/ccXySG1f.s:15150  .rodata.op_map.9499:0000000000000000 op_map.9499
     /tmp/ccXySG1f.s:15158  .rodata.op_map2.9396:0000000000000000 $d
     /tmp/ccXySG1f.s:15162  .rodata.op_map2.9396:0000000000000000 op_map2.9396
     /tmp/ccXySG1f.s:15168  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccXySG1f.s:15172  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccXySG1f.s:15175  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:15184  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:15194  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccXySG1f.s:15208  .rodata.smap.9320:0000000000000000 $d
     /tmp/ccXySG1f.s:15212  .rodata.smap.9320:0000000000000000 smap.9320
     /tmp/ccXySG1f.s:15215  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:15222  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:15228  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccXySG1f.s:2431   .text.process_fg_shifted:0000000000000067 $d
     /tmp/ccXySG1f.s:2431   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
get_reg_n
swap_reg
copyreg
op_p2r
ARM GAS  /tmp/ccXySG1f.s 			page 416


RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
stoprog
is_key_pressed
set_running_off
xeq_sst_bst
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
convert_regK
local_regs
alen

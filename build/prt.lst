ARM GAS  /tmp/ccsaDW2b.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"prt.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.prt_multi.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 3F3F3F00 		.ascii	"???\000"
  21              		.section	.text.prt_multi,"ax",%progbits
  22              		.align	1
  23              		.p2align 2,,3
  24              		.arch armv7e-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  30              	prt_multi:
  31              	.LVL0:
  32              	.LFB12:
  33              		.file 1 "src/prt.c"
   1:src/prt.c     **** /* This file is part of 34S.
   2:src/prt.c     ****  * 
   3:src/prt.c     ****  * 34S is free software: you can redistribute it and/or modify
   4:src/prt.c     ****  * it under the terms of the GNU General Public License as published by
   5:src/prt.c     ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/prt.c     ****  * (at your option) any later version.
   7:src/prt.c     ****  * 
   8:src/prt.c     ****  * 34S is distributed in the hope that it will be useful,
   9:src/prt.c     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/prt.c     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/prt.c     ****  * GNU General Public License for more details.
  12:src/prt.c     ****  * 
  13:src/prt.c     ****  * You should have received a copy of the GNU General Public License
  14:src/prt.c     ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/prt.c     ****  */
  16:src/prt.c     **** 
  17:src/prt.c     **** #include "xeq.h"
  18:src/prt.c     **** #include "storage.h"
  19:src/prt.c     **** #include "display.h"
  20:src/prt.c     **** #include "consts.h"
  21:src/prt.c     **** 
  22:src/prt.c     **** 
  23:src/prt.c     **** static const char *prt_monadic(const unsigned int f, char *instr) {
  24:src/prt.c     **** 	if (f < NUM_MONADIC && (! isNULL(monfuncs[f].mondreal) || ! isNULL(monfuncs[f].monint)))
  25:src/prt.c     **** 		return sncopy(instr, monfuncs[f].fname, NAME_LEN);
ARM GAS  /tmp/ccsaDW2b.s 			page 2


  26:src/prt.c     **** 	return "???";
  27:src/prt.c     **** }
  28:src/prt.c     **** 
  29:src/prt.c     **** static const char *prt_dyadic(const unsigned int f, char *instr) {
  30:src/prt.c     **** 	if (f < NUM_DYADIC && (! isNULL(dyfuncs[f].dydreal) || ! isNULL(dyfuncs[f].dydint)))
  31:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
  32:src/prt.c     **** 	return "???";
  33:src/prt.c     **** }
  34:src/prt.c     **** 
  35:src/prt.c     **** static const char *prt_triadic(const unsigned int f, char *instr) {
  36:src/prt.c     **** 	if (f < NUM_TRIADIC && (! isNULL(trifuncs[f].trireal) || ! isNULL(trifuncs[f].triint)))
  37:src/prt.c     **** 		return sncopy(instr, trifuncs[f].fname, NAME_LEN);
  38:src/prt.c     **** 	return "???";
  39:src/prt.c     **** }
  40:src/prt.c     **** 
  41:src/prt.c     **** static const char *prt_cmplx(int add_prefix, const char *name, char *instr) {
  42:src/prt.c     **** 	char *p = instr;
  43:src/prt.c     **** 	if (add_prefix)
  44:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
  45:src/prt.c     **** 	sncopy(p, name, NAME_LEN);
  46:src/prt.c     **** 	return instr;
  47:src/prt.c     **** }
  48:src/prt.c     **** 
  49:src/prt.c     **** static const char *prt_monadic_cmplx(const unsigned int f, char *instr) {
  50:src/prt.c     **** 	if (f < NUM_MONADIC && ! isNULL(monfuncs[f].mondcmplx))
  51:src/prt.c     **** 		return prt_cmplx(! isNULL(monfuncs[f].mondreal), monfuncs[f].fname, instr);
  52:src/prt.c     **** 	return "???";
  53:src/prt.c     **** }
  54:src/prt.c     **** 
  55:src/prt.c     **** static const char *prt_dyadic_cmplx(const unsigned int f, char *instr) {
  56:src/prt.c     **** 	if (f < NUM_DYADIC && ! isNULL(dyfuncs[f].dydcmplx))
  57:src/prt.c     **** 		return prt_cmplx(! isNULL(dyfuncs[f].dydreal), dyfuncs[f].fname, instr);
  58:src/prt.c     **** 	return "???";
  59:src/prt.c     **** }
  60:src/prt.c     **** 
  61:src/prt.c     **** static const char *prt_niladic(const unsigned int idx, char *instr) {
  62:src/prt.c     **** 	if (idx < NUM_NILADIC) {
  63:src/prt.c     **** 		const char *p = niladics[idx].nname;
  64:src/prt.c     **** 		return sncopy(instr, p, NAME_LEN);
  65:src/prt.c     **** 	}
  66:src/prt.c     **** 	return "???";
  67:src/prt.c     **** }
  68:src/prt.c     **** 
  69:src/prt.c     **** static const char *prt_tst(const char r, const enum tst_op op, char *instr, int cmplx) {
  70:src/prt.c     **** 	char *p = instr;
  71:src/prt.c     **** 	if (cmplx)
  72:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
  73:src/prt.c     **** 	*p++ = 'x';
  74:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
  75:src/prt.c     **** 	*p++ = r;
  76:src/prt.c     **** 	*p++ = '?';
  77:src/prt.c     **** 	return instr;
  78:src/prt.c     **** }
  79:src/prt.c     **** 
  80:src/prt.c     **** static const char *prt_specials(unsigned int opm, char *instr) {
  81:src/prt.c     **** 	static const char digits[16] = "0123456789ABCDEF";
  82:src/prt.c     **** 	char cmp = '0';
ARM GAS  /tmp/ccsaDW2b.s 			page 3


  83:src/prt.c     **** 
  84:src/prt.c     **** 	if (opm >= OP_0 && opm <= OP_F) {
  85:src/prt.c     **** 		*instr = digits[opm - OP_0];
  86:src/prt.c     **** 		return instr;
  87:src/prt.c     **** 	}
  88:src/prt.c     **** 	if (opm >= OP_Xeq1 && opm <= OP_Xge1) {
  89:src/prt.c     **** 		opm += OP_Xeq0 - OP_Xeq1;
  90:src/prt.c     **** 		cmp = '1';
  91:src/prt.c     **** 	}
  92:src/prt.c     **** 	if (opm >= OP_Xeq0 && opm <= OP_Xge0)
  93:src/prt.c     **** 		return prt_tst(cmp, (enum tst_op)(opm - OP_Xeq0), instr, 0);
  94:src/prt.c     **** 
  95:src/prt.c     **** 	switch (opm) {
  96:src/prt.c     **** #ifdef COMPILE_CATALOGUES
  97:src/prt.c     **** 	case OP_DOT:	return ".";
  98:src/prt.c     **** #else
  99:src/prt.c     **** 	case OP_DOT:	return UState.fraccomma ? "," : ".";
 100:src/prt.c     **** #endif
 101:src/prt.c     **** 	case OP_CHS:	return "+/-";
 102:src/prt.c     **** 	//case OP_CLX:	return "CLx";
 103:src/prt.c     **** 	case OP_ENTER:	return "ENTER\020";
 104:src/prt.c     **** 	case OP_EEX:	return "EEX";
 105:src/prt.c     **** 	case OP_SIGMAPLUS:	return "\221+";
 106:src/prt.c     **** 	case OP_SIGMAMINUS:	return "\221-";
 107:src/prt.c     **** 
 108:src/prt.c     **** 	case OP_Zeq0:	case OP_Zne0:	//case OP_Zapx0:
 109:src/prt.c     **** 		return prt_tst('0', (enum tst_op)(opm - OP_Zeq0), instr, 1);
 110:src/prt.c     **** 
 111:src/prt.c     **** 	case OP_Zeq1:	case OP_Zne1:	//case OP_Zapx1:
 112:src/prt.c     **** 		return prt_tst('1', (enum tst_op)(opm - OP_Zeq1), instr, 1);
 113:src/prt.c     **** 
 114:src/prt.c     **** 	case OP_Zeqi:	case OP_Znei:
 115:src/prt.c     **** 		return prt_tst('i', (enum tst_op)(opm - OP_Zeqi), instr, 1);
 116:src/prt.c     **** 	}
 117:src/prt.c     **** 	return "???";
 118:src/prt.c     **** }
 119:src/prt.c     **** 
 120:src/prt.c     **** 
 121:src/prt.c     **** /* Metric <-> imperial conversions */
 122:src/prt.c     **** static const char *prt_conv(unsigned int arg, char *instr) {
 123:src/prt.c     **** 	const unsigned int conv = arg / 2;
 124:src/prt.c     **** 	const unsigned int dirn = arg & 1;
 125:src/prt.c     **** 
 126:src/prt.c     **** 	if (conv >= NUM_CONSTS_CONV)
 127:src/prt.c     **** 		return "???";
 128:src/prt.c     **** 	if (dirn == 0) {		// metric to imperial
 129:src/prt.c     **** 		sncopy(sncopy_char(instr, cnsts_conv[conv].metric, METRIC_NAMELEN, '\015'),
 130:src/prt.c     **** 				cnsts_conv[conv].imperial, IMPERIAL_NAMELEN);
 131:src/prt.c     **** 	} else {			// imperial to metric
 132:src/prt.c     **** 		sncopy(sncopy_char(instr, cnsts_conv[conv].imperial, IMPERIAL_NAMELEN, '\015'),
 133:src/prt.c     **** 				cnsts_conv[conv].metric, METRIC_NAMELEN);
 134:src/prt.c     **** 	}
 135:src/prt.c     **** 	return instr;
 136:src/prt.c     **** }
 137:src/prt.c     **** 
 138:src/prt.c     **** 
 139:src/prt.c     **** /* The number of argument digits needed for a command */
ARM GAS  /tmp/ccsaDW2b.s 			page 4


 140:src/prt.c     **** int num_arg_digits(int cmd) {
 141:src/prt.c     **** 	int lim = argcmds[cmd].lim;
 142:src/prt.c     **** 	if (lim < 10)
 143:src/prt.c     **** 		return 1;
 144:src/prt.c     **** 	if (lim < 100)
 145:src/prt.c     **** 		return 2;
 146:src/prt.c     **** #ifdef COMPILE_CATALOGUES
 147:src/prt.c     **** 	if (argcmds[cmd].reg || argcmds[cmd].flag || argcmds[cmd].label)
 148:src/prt.c     **** #else
 149:src/prt.c     **** 	if (State2.ind || argcmds[cmd].reg || argcmds[cmd].flag || argcmds[cmd].label)
 150:src/prt.c     **** #endif
 151:src/prt.c     **** 		return 2;
 152:src/prt.c     **** 	return 3;
 153:src/prt.c     **** }
 154:src/prt.c     **** 
 155:src/prt.c     **** #ifdef COMPILE_CATALOGUES
 156:src/prt.c     **** #define SPACE_AFTER_CMD " "
 157:src/prt.c     **** #else
 158:src/prt.c     **** #define SPACE_AFTER_CMD "\006\006"
 159:src/prt.c     **** #endif
 160:src/prt.c     **** /* Commands that take an argument */
 161:src/prt.c     **** static const char *prt_rargs(const opcode op, char *instr) {
 162:src/prt.c     **** 	unsigned int arg = op & RARG_MASK;
 163:src/prt.c     **** 	int ind = op & RARG_IND;
 164:src/prt.c     **** 	const unsigned int cmd = RARG_CMD(op);
 165:src/prt.c     **** 	char *p;
 166:src/prt.c     **** 	int n = 2;
 167:src/prt.c     **** 
 168:src/prt.c     **** 	if (! argcmds[cmd].indirectokay) {
 169:src/prt.c     **** 		if (ind) arg += RARG_IND;
 170:src/prt.c     **** 		ind = 0;
 171:src/prt.c     **** 	}
 172:src/prt.c     **** 
 173:src/prt.c     **** 	if (cmd == RARG_ALPHA) {
 174:src/prt.c     **** 		*scopy(instr, "\240" SPACE_AFTER_CMD) = arg;
 175:src/prt.c     **** 	} 
 176:src/prt.c     **** 	else if (cmd >= NUM_RARG)
 177:src/prt.c     **** 		return "???";
 178:src/prt.c     **** 
 179:src/prt.c     **** 	else if (!ind) {
 180:src/prt.c     **** 		if (arg > argcmds[cmd].lim)
 181:src/prt.c     **** 			return "???";
 182:src/prt.c     **** 
 183:src/prt.c     **** 		p = instr;
 184:src/prt.c     **** 		switch(cmd) {
 185:src/prt.c     **** 
 186:src/prt.c     **** 		case RARG_CONST_CMPLX:
 187:src/prt.c     **** 			*p++ = COMPLEX_PREFIX;
 188:src/prt.c     **** 		case RARG_CONST:
 189:src/prt.c     **** 			sncopy(scopy(p, "#" SPACE_AFTER_CMD), cnsts[arg].cname, CONST_NAMELEN);
 190:src/prt.c     **** 			return instr;
 191:src/prt.c     **** 
 192:src/prt.c     **** 		case RARG_CONV:
 193:src/prt.c     **** 			return prt_conv(arg, instr);
 194:src/prt.c     **** 
 195:src/prt.c     **** 		case RARG_SHUFFLE:
 196:src/prt.c     **** 			p = scopy(instr, "\027" SPACE_AFTER_CMD);
ARM GAS  /tmp/ccsaDW2b.s 			page 5


 197:src/prt.c     **** 			for (n = 0; n < 4; n++) {
 198:src/prt.c     **** 				*p++ = REGNAMES[arg & 3];
 199:src/prt.c     **** 				arg >>= 2;
 200:src/prt.c     **** 			}
 201:src/prt.c     **** 			return instr;
 202:src/prt.c     **** 
 203:src/prt.c     **** 		default:
 204:src/prt.c     **** #ifdef COMPILE_CATALOGUES
 205:src/prt.c     **** 			p = sncopy_spc(instr, argcmds[cmd].cmd, NAME_LEN);
 206:src/prt.c     **** #else
 207:src/prt.c     **** 			p = sncopy_char(instr, argcmds[cmd].cmd, NAME_LEN, '\006');
 208:src/prt.c     **** 			*p++ = '\006';
 209:src/prt.c     **** #endif
 210:src/prt.c     **** 			if (argcmds[cmd].label && arg >= 100) {
 211:src/prt.c     **** 				*p = arg - 100 + 'A';
 212:src/prt.c     **** 			}
 213:src/prt.c     **** 			else {
 214:src/prt.c     **** 				n = num_arg_digits(cmd);
 215:src/prt.c     **** 				goto print_reg;
 216:src/prt.c     **** 			}
 217:src/prt.c     **** 		}
 218:src/prt.c     **** 	} 
 219:src/prt.c     **** 	else {
 220:src/prt.c     **** 		if (!argcmds[cmd].indirectokay)
 221:src/prt.c     **** 			return "???";
 222:src/prt.c     **** 
 223:src/prt.c     **** 		p = sncopy_char(instr, argcmds[cmd].cmd, NAME_LEN, '\015');	// ->
 224:src/prt.c     **** 
 225:src/prt.c     **** 	print_reg:
 226:src/prt.c     **** 		if (arg >= regX_idx && arg <= regK_idx && (ind || argcmds[cmd].stckreg))
 227:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 228:src/prt.c     **** 			if (*instr == COMPLEX_PREFIX) {
 229:src/prt.c     **** 				*p++ = COMPLEX_PREFIX;
 230:src/prt.c     **** 				*p = COMPLEX_REGNAMES[arg - regX_idx];
 231:src/prt.c     **** 			}
 232:src/prt.c     **** 			else {
 233:src/prt.c     **** 				*p = REGNAMES[arg - regX_idx];
 234:src/prt.c     **** 			}
 235:src/prt.c     **** #else
 236:src/prt.c     **** 			*p = REGNAMES[arg - regX_idx];
 237:src/prt.c     **** #endif
 238:src/prt.c     **** 		else {
 239:src/prt.c     **** 			if (arg >= LOCAL_REG_BASE && (ind || argcmds[cmd].local)) {
 240:src/prt.c     **** 				arg -= LOCAL_REG_BASE;
 241:src/prt.c     **** 				*p++ = '.';
 242:src/prt.c     **** 			}
 243:src/prt.c     **** 			num_arg_0(p, arg, n );
 244:src/prt.c     **** 		}
 245:src/prt.c     **** 	}
 246:src/prt.c     **** 	return instr;
 247:src/prt.c     **** }
 248:src/prt.c     **** 
 249:src/prt.c     **** static const char *prt_multi(const opcode op, char *instr) {
  34              		.loc 1 249 60 view -0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsaDW2b.s 			page 6


 250:src/prt.c     **** 	char *p, c;
  38              		.loc 1 250 2 view .LVU1
 251:src/prt.c     **** 	int cmd = opDBL(op);
  39              		.loc 1 251 2 view .LVU2
  40              		.loc 1 251 6 is_stmt 0 view .LVU3
  41 0000 C0F30322 		ubfx	r2, r0, #8, #4
  42              	.LVL1:
 252:src/prt.c     **** 
 253:src/prt.c     **** 	if (cmd >= NUM_MULTI)
  43              		.loc 1 253 2 is_stmt 1 view .LVU4
  44              		.loc 1 253 5 is_stmt 0 view .LVU5
  45 0004 0A2A     		cmp	r2, #10
  46 0006 01DD     		ble	.L12
 254:src/prt.c     **** 		return "???";
  47              		.loc 1 254 10 view .LVU6
  48 0008 1148     		ldr	r0, .L13
  49              	.LVL2:
 255:src/prt.c     **** 	p = sncopy_char(instr, multicmds[cmd].cmd, NAME_LEN, '\'');
 256:src/prt.c     **** 	*p++ = op & 0xff;
 257:src/prt.c     **** 	c = (op >> 16) & 0xff;
 258:src/prt.c     **** 	if (c != '\0') {
 259:src/prt.c     **** 		*p++ = c;
 260:src/prt.c     **** 		c = op>>24;
 261:src/prt.c     **** 		if (c != '\0')
 262:src/prt.c     **** 			*p++ = c;
 263:src/prt.c     **** 	}
 264:src/prt.c     **** 	*p = '\'';
 265:src/prt.c     **** 	return instr;
 266:src/prt.c     **** }
  50              		.loc 1 266 1 view .LVU7
  51 000a 7047     		bx	lr
  52              	.LVL3:
  53              	.L12:
 255:src/prt.c     **** 	p = sncopy_char(instr, multicmds[cmd].cmd, NAME_LEN, '\'');
  54              		.loc 1 255 2 is_stmt 1 view .LVU8
 249:src/prt.c     **** 	char *p, c;
  55              		.loc 1 249 60 is_stmt 0 view .LVU9
  56 000c 38B5     		push	{r3, r4, r5, lr}
  57              		.cfi_def_cfa_offset 16
  58              		.cfi_offset 3, -16
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 5, -8
  61              		.cfi_offset 14, -4
  62 000e 0D46     		mov	r5, r1
 255:src/prt.c     **** 	p = sncopy_char(instr, multicmds[cmd].cmd, NAME_LEN, '\'');
  63              		.loc 1 255 39 view .LVU10
  64 0010 1049     		ldr	r1, .L13+4
  65              	.LVL4:
 255:src/prt.c     **** 	p = sncopy_char(instr, multicmds[cmd].cmd, NAME_LEN, '\'');
  66              		.loc 1 255 39 view .LVU11
  67 0012 0446     		mov	r4, r0
 255:src/prt.c     **** 	p = sncopy_char(instr, multicmds[cmd].cmd, NAME_LEN, '\'');
  68              		.loc 1 255 6 view .LVU12
  69 0014 2723     		movs	r3, #39
  70 0016 01EB0211 		add	r1, r1, r2, lsl #4
  71 001a 2846     		mov	r0, r5
  72              	.LVL5:
ARM GAS  /tmp/ccsaDW2b.s 			page 7


 255:src/prt.c     **** 	p = sncopy_char(instr, multicmds[cmd].cmd, NAME_LEN, '\'');
  73              		.loc 1 255 6 view .LVU13
  74 001c 0622     		movs	r2, #6
  75              	.LVL6:
 255:src/prt.c     **** 	p = sncopy_char(instr, multicmds[cmd].cmd, NAME_LEN, '\'');
  76              		.loc 1 255 6 view .LVU14
  77 001e FFF7FEFF 		bl	sncopy_char
  78              	.LVL7:
 256:src/prt.c     **** 	c = (op >> 16) & 0xff;
  79              		.loc 1 256 2 is_stmt 1 view .LVU15
 258:src/prt.c     **** 		*p++ = c;
  80              		.loc 1 258 5 is_stmt 0 view .LVU16
  81 0022 14F47F0F 		tst	r4, #16711680
 257:src/prt.c     **** 	if (c != '\0') {
  82              		.loc 1 257 4 view .LVU17
  83 0026 C4F30743 		ubfx	r3, r4, #16, #8
 256:src/prt.c     **** 	c = (op >> 16) & 0xff;
  84              		.loc 1 256 7 view .LVU18
  85 002a 0470     		strb	r4, [r0]
 257:src/prt.c     **** 	if (c != '\0') {
  86              		.loc 1 257 2 is_stmt 1 view .LVU19
  87              	.LVL8:
 258:src/prt.c     **** 		*p++ = c;
  88              		.loc 1 258 2 view .LVU20
 258:src/prt.c     **** 		*p++ = c;
  89              		.loc 1 258 5 is_stmt 0 view .LVU21
  90 002c 04D1     		bne	.L3
 256:src/prt.c     **** 	c = (op >> 16) & 0xff;
  91              		.loc 1 256 4 view .LVU22
  92 002e 431C     		adds	r3, r0, #1
  93              	.LVL9:
 264:src/prt.c     **** 	return instr;
  94              		.loc 1 264 2 is_stmt 1 view .LVU23
 264:src/prt.c     **** 	return instr;
  95              		.loc 1 264 5 is_stmt 0 view .LVU24
  96 0030 2722     		movs	r2, #39
  97 0032 1A70     		strb	r2, [r3]
 265:src/prt.c     **** }
  98              		.loc 1 265 2 is_stmt 1 view .LVU25
 265:src/prt.c     **** }
  99              		.loc 1 265 9 is_stmt 0 view .LVU26
 100 0034 2846     		mov	r0, r5
 101              		.loc 1 266 1 view .LVU27
 102 0036 38BD     		pop	{r3, r4, r5, pc}
 103              	.LVL10:
 104              	.L3:
 259:src/prt.c     **** 		c = op>>24;
 105              		.loc 1 259 3 is_stmt 1 view .LVU28
 261:src/prt.c     **** 			*p++ = c;
 106              		.loc 1 261 6 is_stmt 0 view .LVU29
 107 0038 240E     		lsrs	r4, r4, #24
 108              	.LVL11:
 259:src/prt.c     **** 		c = op>>24;
 109              		.loc 1 259 8 view .LVU30
 110 003a 4370     		strb	r3, [r0, #1]
 260:src/prt.c     **** 		if (c != '\0')
 111              		.loc 1 260 3 is_stmt 1 view .LVU31
ARM GAS  /tmp/ccsaDW2b.s 			page 8


 112              	.LVL12:
 261:src/prt.c     **** 			*p++ = c;
 113              		.loc 1 261 3 view .LVU32
 259:src/prt.c     **** 		c = op>>24;
 114              		.loc 1 259 5 is_stmt 0 view .LVU33
 115 003c 0CBF     		ite	eq
 116 003e 831C     		addeq	r3, r0, #2
 262:src/prt.c     **** 	}
 117              		.loc 1 262 4 is_stmt 1 view .LVU34
 262:src/prt.c     **** 	}
 118              		.loc 1 262 6 is_stmt 0 view .LVU35
 119 0040 C31C     		addne	r3, r0, #3
 120              	.LVL13:
 264:src/prt.c     **** 	return instr;
 121              		.loc 1 264 2 is_stmt 1 view .LVU36
 264:src/prt.c     **** 	return instr;
 122              		.loc 1 264 5 is_stmt 0 view .LVU37
 123 0042 4FF02702 		mov	r2, #39
 260:src/prt.c     **** 		if (c != '\0')
 124              		.loc 1 260 5 view .LVU38
 125 0046 18BF     		it	ne
 126 0048 8470     		strbne	r4, [r0, #2]
 264:src/prt.c     **** 	return instr;
 127              		.loc 1 264 5 view .LVU39
 128 004a 1A70     		strb	r2, [r3]
 265:src/prt.c     **** }
 129              		.loc 1 265 2 is_stmt 1 view .LVU40
 265:src/prt.c     **** }
 130              		.loc 1 265 9 is_stmt 0 view .LVU41
 131 004c 2846     		mov	r0, r5
 132              		.loc 1 266 1 view .LVU42
 133 004e 38BD     		pop	{r3, r4, r5, pc}
 134              	.LVL14:
 135              	.L14:
 136              		.loc 1 266 1 view .LVU43
 137              		.align	2
 138              	.L13:
 139 0050 00000000 		.word	.LC0
 140 0054 04000000 		.word	multicmds+4
 141              		.cfi_endproc
 142              	.LFE12:
 144              		.section	.text.prt_conv,"ax",%progbits
 145              		.align	1
 146              		.p2align 2,,3
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	prt_conv:
 153              	.LVL15:
 154              	.LFB9:
 122:src/prt.c     **** 	const unsigned int conv = arg / 2;
 155              		.loc 1 122 60 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 123:src/prt.c     **** 	const unsigned int dirn = arg & 1;
ARM GAS  /tmp/ccsaDW2b.s 			page 9


 159              		.loc 1 123 2 view .LVU45
 124:src/prt.c     **** 
 160              		.loc 1 124 2 view .LVU46
 126:src/prt.c     **** 		return "???";
 161              		.loc 1 126 2 view .LVU47
 126:src/prt.c     **** 		return "???";
 162              		.loc 1 126 5 is_stmt 0 view .LVU48
 163 0000 4B28     		cmp	r0, #75
 164 0002 29D8     		bhi	.L18
 165 0004 0346     		mov	r3, r0
 122:src/prt.c     **** 	const unsigned int conv = arg / 2;
 166              		.loc 1 122 60 view .LVU49
 167 0006 70B5     		push	{r4, r5, r6, lr}
 168              		.cfi_def_cfa_offset 16
 169              		.cfi_offset 4, -16
 170              		.cfi_offset 5, -12
 171              		.cfi_offset 6, -8
 172              		.cfi_offset 14, -4
 128:src/prt.c     **** 		sncopy(sncopy_char(instr, cnsts_conv[conv].metric, METRIC_NAMELEN, '\015'),
 173              		.loc 1 128 5 view .LVU50
 174 0008 DB07     		lsls	r3, r3, #31
 175 000a 0C46     		mov	r4, r1
 123:src/prt.c     **** 	const unsigned int dirn = arg & 1;
 176              		.loc 1 123 21 view .LVU51
 177 000c 4FEA5001 		lsr	r1, r0, #1
 178              	.LVL16:
 128:src/prt.c     **** 		sncopy(sncopy_char(instr, cnsts_conv[conv].metric, METRIC_NAMELEN, '\015'),
 179              		.loc 1 128 2 is_stmt 1 view .LVU52
 129:src/prt.c     **** 				cnsts_conv[conv].imperial, IMPERIAL_NAMELEN);
 180              		.loc 1 129 45 is_stmt 0 view .LVU53
 181 0010 124E     		ldr	r6, .L23
 182 0012 4FEA0115 		lsl	r5, r1, #4
 128:src/prt.c     **** 		sncopy(sncopy_char(instr, cnsts_conv[conv].metric, METRIC_NAMELEN, '\015'),
 183              		.loc 1 128 5 view .LVU54
 184 0016 0FD4     		bmi	.L17
 129:src/prt.c     **** 				cnsts_conv[conv].imperial, IMPERIAL_NAMELEN);
 185              		.loc 1 129 3 is_stmt 1 view .LVU55
 129:src/prt.c     **** 				cnsts_conv[conv].imperial, IMPERIAL_NAMELEN);
 186              		.loc 1 129 45 is_stmt 0 view .LVU56
 187 0018 05F10801 		add	r1, r5, #8
 129:src/prt.c     **** 				cnsts_conv[conv].imperial, IMPERIAL_NAMELEN);
 188              		.loc 1 129 3 view .LVU57
 189 001c 3144     		add	r1, r1, r6
 190 001e 0D23     		movs	r3, #13
 191 0020 0222     		movs	r2, #2
 192 0022 2046     		mov	r0, r4
 193              	.LVL17:
 129:src/prt.c     **** 				cnsts_conv[conv].imperial, IMPERIAL_NAMELEN);
 194              		.loc 1 129 3 view .LVU58
 195 0024 FFF7FEFF 		bl	sncopy_char
 196              	.LVL18:
 130:src/prt.c     **** 	} else {			// imperial to metric
 197              		.loc 1 130 21 view .LVU59
 198 0028 05F10A01 		add	r1, r5, #10
 129:src/prt.c     **** 				cnsts_conv[conv].imperial, IMPERIAL_NAMELEN);
 199              		.loc 1 129 3 view .LVU60
 200 002c 3144     		add	r1, r1, r6
ARM GAS  /tmp/ccsaDW2b.s 			page 10


 201 002e 0622     		movs	r2, #6
 202 0030 FFF7FEFF 		bl	sncopy
 203              	.LVL19:
 135:src/prt.c     **** }
 204              		.loc 1 135 9 view .LVU61
 205 0034 2046     		mov	r0, r4
 136:src/prt.c     **** 
 206              		.loc 1 136 1 view .LVU62
 207 0036 70BD     		pop	{r4, r5, r6, pc}
 208              	.LVL20:
 209              	.L17:
 132:src/prt.c     **** 				cnsts_conv[conv].metric, METRIC_NAMELEN);
 210              		.loc 1 132 3 is_stmt 1 view .LVU63
 132:src/prt.c     **** 				cnsts_conv[conv].metric, METRIC_NAMELEN);
 211              		.loc 1 132 45 is_stmt 0 view .LVU64
 212 0038 05F10A01 		add	r1, r5, #10
 132:src/prt.c     **** 				cnsts_conv[conv].metric, METRIC_NAMELEN);
 213              		.loc 1 132 3 view .LVU65
 214 003c 3144     		add	r1, r1, r6
 215 003e 0D23     		movs	r3, #13
 216 0040 0622     		movs	r2, #6
 217 0042 2046     		mov	r0, r4
 218              	.LVL21:
 132:src/prt.c     **** 				cnsts_conv[conv].metric, METRIC_NAMELEN);
 219              		.loc 1 132 3 view .LVU66
 220 0044 FFF7FEFF 		bl	sncopy_char
 221              	.LVL22:
 133:src/prt.c     **** 	}
 222              		.loc 1 133 21 view .LVU67
 223 0048 05F10801 		add	r1, r5, #8
 132:src/prt.c     **** 				cnsts_conv[conv].metric, METRIC_NAMELEN);
 224              		.loc 1 132 3 view .LVU68
 225 004c 3144     		add	r1, r1, r6
 226 004e 0222     		movs	r2, #2
 227 0050 FFF7FEFF 		bl	sncopy
 228              	.LVL23:
 135:src/prt.c     **** }
 229              		.loc 1 135 9 view .LVU69
 230 0054 2046     		mov	r0, r4
 136:src/prt.c     **** 
 231              		.loc 1 136 1 view .LVU70
 232 0056 70BD     		pop	{r4, r5, r6, pc}
 233              	.LVL24:
 234              	.L18:
 235              		.cfi_def_cfa_offset 0
 236              		.cfi_restore 4
 237              		.cfi_restore 5
 238              		.cfi_restore 6
 239              		.cfi_restore 14
 127:src/prt.c     **** 	if (dirn == 0) {		// metric to imperial
 240              		.loc 1 127 10 view .LVU71
 241 0058 0148     		ldr	r0, .L23+4
 242              	.LVL25:
 136:src/prt.c     **** 
 243              		.loc 1 136 1 view .LVU72
 244 005a 7047     		bx	lr
 245              	.L24:
ARM GAS  /tmp/ccsaDW2b.s 			page 11


 246              		.align	2
 247              	.L23:
 248 005c 00000000 		.word	cnsts_conv
 249 0060 00000000 		.word	.LC0
 250              		.cfi_endproc
 251              	.LFE9:
 253              		.section	.rodata.prt_specials.part.0.str1.4,"aMS",%progbits,1
 254              		.align	2
 255              	.LC1:
 256 0000 2B2F2D00 		.ascii	"+/-\000"
 257              		.align	2
 258              	.LC2:
 259 0004 454E5445 		.ascii	"ENTER\020\000"
 259      521000
 260 000b 00       		.align	2
 261              	.LC3:
 262 000c 2C00     		.ascii	",\000"
 263 000e 0000     		.align	2
 264              	.LC4:
 265 0010 45455800 		.ascii	"EEX\000"
 266              		.align	2
 267              	.LC5:
 268 0014 912B00   		.ascii	"\221+\000"
 269 0017 00       		.align	2
 270              	.LC6:
 271 0018 912D00   		.ascii	"\221-\000"
 272 001b 00       		.align	2
 273              	.LC7:
 274 001c 2E00     		.ascii	".\000"
 275 001e 0000     		.align	2
 276              	.LC8:
 277 0020 3D0B1D3C 		.ascii	"=\013\035<\011>\012\000"
 277      093E0A00 
 278              		.section	.text.prt_specials.part.0,"ax",%progbits
 279              		.align	1
 280              		.p2align 2,,3
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu fpv4-sp-d16
 286              	prt_specials.part.0:
 287              	.LVL26:
 288              	.LFB15:
  80:src/prt.c     **** 	static const char digits[16] = "0123456789ABCDEF";
 289              		.loc 1 80 20 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
  88:src/prt.c     **** 		opm += OP_Xeq0 - OP_Xeq1;
 294              		.loc 1 88 2 view .LVU74
  88:src/prt.c     **** 		opm += OP_Xeq0 - OP_Xeq1;
 295              		.loc 1 88 21 is_stmt 0 view .LVU75
 296 0000 A0F11E02 		sub	r2, r0, #30
  88:src/prt.c     **** 		opm += OP_Xeq0 - OP_Xeq1;
 297              		.loc 1 88 5 view .LVU76
 298 0004 062A     		cmp	r2, #6
ARM GAS  /tmp/ccsaDW2b.s 			page 12


 299 0006 0BD8     		bhi	.L26
  89:src/prt.c     **** 		cmp = '1';
 300              		.loc 1 89 3 is_stmt 1 view .LVU77
 301              	.LVL27:
  90:src/prt.c     **** 	}
 302              		.loc 1 90 3 view .LVU78
  92:src/prt.c     **** 		return prt_tst(cmp, (enum tst_op)(opm - OP_Xeq0), instr, 0);
 303              		.loc 1 92 2 view .LVU79
  90:src/prt.c     **** 	}
 304              		.loc 1 90 7 is_stmt 0 view .LVU80
 305 0008 3123     		movs	r3, #49
 306              	.LVL28:
 307              	.L27:
  93:src/prt.c     **** 
 308              		.loc 1 93 3 is_stmt 1 view .LVU81
 309              	.LBB32:
 310              	.LBI32:
  69:src/prt.c     **** 	char *p = instr;
 311              		.loc 1 69 20 view .LVU82
 312              	.LBB33:
  70:src/prt.c     **** 	if (cmplx)
 313              		.loc 1 70 2 view .LVU83
  71:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
 314              		.loc 1 71 2 view .LVU84
  73:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
 315              		.loc 1 73 2 view .LVU85
  74:src/prt.c     **** 	*p++ = r;
 316              		.loc 1 74 30 is_stmt 0 view .LVU86
 317 000a 3648     		ldr	r0, .L47
  75:src/prt.c     **** 	*p++ = '?';
 318              		.loc 1 75 7 view .LVU87
 319 000c 8B70     		strb	r3, [r1, #2]
  74:src/prt.c     **** 	*p++ = r;
 320              		.loc 1 74 30 view .LVU88
 321 000e D2B2     		uxtb	r2, r2
  74:src/prt.c     **** 	*p++ = r;
 322              		.loc 1 74 7 view .LVU89
 323 0010 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 324              	.LVL29:
  74:src/prt.c     **** 	*p++ = r;
 325              		.loc 1 74 7 view .LVU90
 326 0012 4B70     		strb	r3, [r1, #1]
  73:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
 327              		.loc 1 73 7 view .LVU91
 328 0014 7822     		movs	r2, #120
  76:src/prt.c     **** 	return instr;
 329              		.loc 1 76 7 view .LVU92
 330 0016 3F23     		movs	r3, #63
  73:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
 331              		.loc 1 73 7 view .LVU93
 332 0018 0A70     		strb	r2, [r1]
  74:src/prt.c     **** 	*p++ = r;
 333              		.loc 1 74 2 is_stmt 1 view .LVU94
 334              	.LVL30:
  75:src/prt.c     **** 	*p++ = '?';
 335              		.loc 1 75 2 view .LVU95
  76:src/prt.c     **** 	return instr;
ARM GAS  /tmp/ccsaDW2b.s 			page 13


 336              		.loc 1 76 2 view .LVU96
  76:src/prt.c     **** 	return instr;
 337              		.loc 1 76 7 is_stmt 0 view .LVU97
 338 001a CB70     		strb	r3, [r1, #3]
  77:src/prt.c     **** }
 339              		.loc 1 77 2 is_stmt 1 view .LVU98
 340              	.LVL31:
  77:src/prt.c     **** }
 341              		.loc 1 77 2 is_stmt 0 view .LVU99
 342              	.LBE33:
 343              	.LBE32:
  93:src/prt.c     **** 
 344              		.loc 1 93 10 view .LVU100
 345 001c 0846     		mov	r0, r1
 118:src/prt.c     **** 
 346              		.loc 1 118 1 view .LVU101
 347 001e 7047     		bx	lr
 348              	.LVL32:
 349              	.L26:
  92:src/prt.c     **** 		return prt_tst(cmp, (enum tst_op)(opm - OP_Xeq0), instr, 0);
 350              		.loc 1 92 2 is_stmt 1 view .LVU102
  92:src/prt.c     **** 		return prt_tst(cmp, (enum tst_op)(opm - OP_Xeq0), instr, 0);
 351              		.loc 1 92 21 is_stmt 0 view .LVU103
 352 0020 A0F11702 		sub	r2, r0, #23
  92:src/prt.c     **** 		return prt_tst(cmp, (enum tst_op)(opm - OP_Xeq0), instr, 0);
 353              		.loc 1 92 5 view .LVU104
 354 0024 062A     		cmp	r2, #6
 355 0026 5BD9     		bls	.L46
  95:src/prt.c     **** #ifdef COMPILE_CATALOGUES
 356              		.loc 1 95 2 is_stmt 1 view .LVU105
  80:src/prt.c     **** 	static const char digits[16] = "0123456789ABCDEF";
 357              		.loc 1 80 20 is_stmt 0 view .LVU106
 358 0028 10B4     		push	{r4}
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 4, -4
 361 002a 2A28     		cmp	r0, #42
 362 002c 56D8     		bhi	.L30
 363 002e DFE800F0 		tbb	[pc, r0]
 364              	.L32:
 365 0032 1A       		.byte	(.L39-.L32)/2
 366 0033 55       		.byte	(.L30-.L32)/2
 367 0034 53       		.byte	(.L38-.L32)/2
 368 0035 16       		.byte	(.L40-.L32)/2
 369 0036 48       		.byte	(.L37-.L32)/2
 370 0037 55       		.byte	(.L30-.L32)/2
 371 0038 55       		.byte	(.L30-.L32)/2
 372 0039 55       		.byte	(.L30-.L32)/2
 373 003a 55       		.byte	(.L30-.L32)/2
 374 003b 55       		.byte	(.L30-.L32)/2
 375 003c 55       		.byte	(.L30-.L32)/2
 376 003d 55       		.byte	(.L30-.L32)/2
 377 003e 55       		.byte	(.L30-.L32)/2
 378 003f 55       		.byte	(.L30-.L32)/2
 379 0040 55       		.byte	(.L30-.L32)/2
 380 0041 55       		.byte	(.L30-.L32)/2
 381 0042 55       		.byte	(.L30-.L32)/2
 382 0043 55       		.byte	(.L30-.L32)/2
ARM GAS  /tmp/ccsaDW2b.s 			page 14


 383 0044 55       		.byte	(.L30-.L32)/2
 384 0045 55       		.byte	(.L30-.L32)/2
 385 0046 55       		.byte	(.L30-.L32)/2
 386 0047 46       		.byte	(.L36-.L32)/2
 387 0048 44       		.byte	(.L35-.L32)/2
 388 0049 55       		.byte	(.L30-.L32)/2
 389 004a 55       		.byte	(.L30-.L32)/2
 390 004b 55       		.byte	(.L30-.L32)/2
 391 004c 55       		.byte	(.L30-.L32)/2
 392 004d 55       		.byte	(.L30-.L32)/2
 393 004e 55       		.byte	(.L30-.L32)/2
 394 004f 55       		.byte	(.L30-.L32)/2
 395 0050 55       		.byte	(.L30-.L32)/2
 396 0051 55       		.byte	(.L30-.L32)/2
 397 0052 55       		.byte	(.L30-.L32)/2
 398 0053 55       		.byte	(.L30-.L32)/2
 399 0054 55       		.byte	(.L30-.L32)/2
 400 0055 55       		.byte	(.L30-.L32)/2
 401 0056 55       		.byte	(.L30-.L32)/2
 402 0057 3A       		.byte	(.L34-.L32)/2
 403 0058 3A       		.byte	(.L34-.L32)/2
 404 0059 30       		.byte	(.L33-.L32)/2
 405 005a 30       		.byte	(.L33-.L32)/2
 406 005b 1E       		.byte	(.L31-.L32)/2
 407 005c 1E       		.byte	(.L31-.L32)/2
 408 005d 00       		.p2align 1
 409              	.L40:
 101:src/prt.c     **** 	//case OP_CLX:	return "CLx";
 410              		.loc 1 101 22 view .LVU107
 411 005e 2248     		ldr	r0, .L47+4
 412              	.LVL33:
 413              	.L25:
 118:src/prt.c     **** 
 414              		.loc 1 118 1 view .LVU108
 415 0060 5DF8044B 		ldr	r4, [sp], #4
 416              		.cfi_remember_state
 417              		.cfi_restore 4
 418              		.cfi_def_cfa_offset 0
 419 0064 7047     		bx	lr
 420              	.LVL34:
 421              	.L39:
 422              		.cfi_restore_state
  92:src/prt.c     **** 		return prt_tst(cmp, (enum tst_op)(opm - OP_Xeq0), instr, 0);
 423              		.loc 1 92 5 view .LVU109
 424 0066 2148     		ldr	r0, .L47+8
 425              	.LVL35:
 118:src/prt.c     **** 
 426              		.loc 1 118 1 view .LVU110
 427 0068 5DF8044B 		ldr	r4, [sp], #4
 428              		.cfi_remember_state
 429              		.cfi_restore 4
 430              		.cfi_def_cfa_offset 0
 431 006c 7047     		bx	lr
 432              	.LVL36:
 433              	.L31:
 434              		.cfi_restore_state
 115:src/prt.c     **** 	}
ARM GAS  /tmp/ccsaDW2b.s 			page 15


 435              		.loc 1 115 3 is_stmt 1 view .LVU111
 436              	.LBB34:
 437              	.LBI34:
  69:src/prt.c     **** 	char *p = instr;
 438              		.loc 1 69 20 view .LVU112
 439              	.LBB35:
  70:src/prt.c     **** 	if (cmplx)
 440              		.loc 1 70 2 view .LVU113
  71:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
 441              		.loc 1 71 2 view .LVU114
  72:src/prt.c     **** 	*p++ = 'x';
 442              		.loc 1 72 3 view .LVU115
  72:src/prt.c     **** 	*p++ = 'x';
 443              		.loc 1 72 3 is_stmt 0 view .LVU116
 444              	.LBE35:
 445              	.LBE34:
 115:src/prt.c     **** 	}
 446              		.loc 1 115 41 view .LVU117
 447 006e A0F12903 		sub	r3, r0, #41
 448              	.LBB37:
 449              	.LBB36:
  74:src/prt.c     **** 	*p++ = r;
 450              		.loc 1 74 30 view .LVU118
 451 0072 1C4A     		ldr	r2, .L47
 452 0074 DBB2     		uxtb	r3, r3
  72:src/prt.c     **** 	*p++ = 'x';
 453              		.loc 1 72 8 view .LVU119
 454 0076 1424     		movs	r4, #20
  74:src/prt.c     **** 	*p++ = r;
 455              		.loc 1 74 7 view .LVU120
 456 0078 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 457 007a 8B70     		strb	r3, [r1, #2]
  73:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
 458              		.loc 1 73 7 view .LVU121
 459 007c 7820     		movs	r0, #120
 460              	.LVL37:
  75:src/prt.c     **** 	*p++ = '?';
 461              		.loc 1 75 7 view .LVU122
 462 007e 6922     		movs	r2, #105
 463              	.LVL38:
 464              	.L45:
  76:src/prt.c     **** 	return instr;
 465              		.loc 1 76 7 view .LVU123
 466 0080 3F23     		movs	r3, #63
  73:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
 467              		.loc 1 73 7 view .LVU124
 468 0082 4870     		strb	r0, [r1, #1]
  72:src/prt.c     **** 	*p++ = 'x';
 469              		.loc 1 72 8 view .LVU125
 470 0084 0C70     		strb	r4, [r1]
  73:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
 471              		.loc 1 73 2 is_stmt 1 view .LVU126
  74:src/prt.c     **** 	*p++ = r;
 472              		.loc 1 74 2 view .LVU127
  75:src/prt.c     **** 	*p++ = '?';
 473              		.loc 1 75 2 view .LVU128
  75:src/prt.c     **** 	*p++ = '?';
ARM GAS  /tmp/ccsaDW2b.s 			page 16


 474              		.loc 1 75 7 is_stmt 0 view .LVU129
 475 0086 CA70     		strb	r2, [r1, #3]
  76:src/prt.c     **** 	return instr;
 476              		.loc 1 76 2 is_stmt 1 view .LVU130
  76:src/prt.c     **** 	return instr;
 477              		.loc 1 76 7 is_stmt 0 view .LVU131
 478 0088 0B71     		strb	r3, [r1, #4]
  77:src/prt.c     **** }
 479              		.loc 1 77 2 is_stmt 1 view .LVU132
  77:src/prt.c     **** }
 480              		.loc 1 77 2 is_stmt 0 view .LVU133
 481              	.LBE36:
 482              	.LBE37:
 115:src/prt.c     **** 	}
 483              		.loc 1 115 10 view .LVU134
 484 008a 0846     		mov	r0, r1
 118:src/prt.c     **** 
 485              		.loc 1 118 1 view .LVU135
 486 008c 5DF8044B 		ldr	r4, [sp], #4
 487              		.cfi_remember_state
 488              		.cfi_restore 4
 489              		.cfi_def_cfa_offset 0
 490 0090 7047     		bx	lr
 491              	.LVL39:
 492              	.L33:
 493              		.cfi_restore_state
 112:src/prt.c     **** 
 494              		.loc 1 112 3 is_stmt 1 view .LVU136
 495              	.LBB38:
 496              	.LBI38:
  69:src/prt.c     **** 	char *p = instr;
 497              		.loc 1 69 20 view .LVU137
 498              	.LBB39:
  70:src/prt.c     **** 	if (cmplx)
 499              		.loc 1 70 2 view .LVU138
  71:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
 500              		.loc 1 71 2 view .LVU139
  72:src/prt.c     **** 	*p++ = 'x';
 501              		.loc 1 72 3 view .LVU140
  72:src/prt.c     **** 	*p++ = 'x';
 502              		.loc 1 72 3 is_stmt 0 view .LVU141
 503              	.LBE39:
 504              	.LBE38:
 112:src/prt.c     **** 
 505              		.loc 1 112 41 view .LVU142
 506 0092 A0F12703 		sub	r3, r0, #39
 507              	.LBB41:
 508              	.LBB40:
  74:src/prt.c     **** 	*p++ = r;
 509              		.loc 1 74 30 view .LVU143
 510 0096 134A     		ldr	r2, .L47
 511 0098 DBB2     		uxtb	r3, r3
  72:src/prt.c     **** 	*p++ = 'x';
 512              		.loc 1 72 8 view .LVU144
 513 009a 1424     		movs	r4, #20
  74:src/prt.c     **** 	*p++ = r;
 514              		.loc 1 74 7 view .LVU145
ARM GAS  /tmp/ccsaDW2b.s 			page 17


 515 009c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 516 009e 8B70     		strb	r3, [r1, #2]
  73:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
 517              		.loc 1 73 7 view .LVU146
 518 00a0 7820     		movs	r0, #120
 519              	.LVL40:
  75:src/prt.c     **** 	*p++ = '?';
 520              		.loc 1 75 7 view .LVU147
 521 00a2 3122     		movs	r2, #49
 522 00a4 ECE7     		b	.L45
 523              	.LVL41:
 524              	.L34:
  75:src/prt.c     **** 	*p++ = '?';
 525              		.loc 1 75 7 view .LVU148
 526              	.LBE40:
 527              	.LBE41:
 109:src/prt.c     **** 
 528              		.loc 1 109 3 is_stmt 1 view .LVU149
 529              	.LBB42:
 530              	.LBI42:
  69:src/prt.c     **** 	char *p = instr;
 531              		.loc 1 69 20 view .LVU150
 532              	.LBB43:
  70:src/prt.c     **** 	if (cmplx)
 533              		.loc 1 70 2 view .LVU151
  71:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
 534              		.loc 1 71 2 view .LVU152
  72:src/prt.c     **** 	*p++ = 'x';
 535              		.loc 1 72 3 view .LVU153
  72:src/prt.c     **** 	*p++ = 'x';
 536              		.loc 1 72 3 is_stmt 0 view .LVU154
 537              	.LBE43:
 538              	.LBE42:
 109:src/prt.c     **** 
 539              		.loc 1 109 41 view .LVU155
 540 00a6 A0F12503 		sub	r3, r0, #37
 541              	.LBB45:
 542              	.LBB44:
  74:src/prt.c     **** 	*p++ = r;
 543              		.loc 1 74 30 view .LVU156
 544 00aa 0E4A     		ldr	r2, .L47
 545 00ac DBB2     		uxtb	r3, r3
  72:src/prt.c     **** 	*p++ = 'x';
 546              		.loc 1 72 8 view .LVU157
 547 00ae 1424     		movs	r4, #20
  74:src/prt.c     **** 	*p++ = r;
 548              		.loc 1 74 7 view .LVU158
 549 00b0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 550 00b2 8B70     		strb	r3, [r1, #2]
  73:src/prt.c     **** 	*p++ = "=\013\035<\011>\012"[op];
 551              		.loc 1 73 7 view .LVU159
 552 00b4 7820     		movs	r0, #120
 553              	.LVL42:
  75:src/prt.c     **** 	*p++ = '?';
 554              		.loc 1 75 7 view .LVU160
 555 00b6 3022     		movs	r2, #48
 556 00b8 E2E7     		b	.L45
ARM GAS  /tmp/ccsaDW2b.s 			page 18


 557              	.LVL43:
 558              	.L35:
  75:src/prt.c     **** 	*p++ = '?';
 559              		.loc 1 75 7 view .LVU161
 560              	.LBE44:
 561              	.LBE45:
 106:src/prt.c     **** 
 562              		.loc 1 106 22 is_stmt 1 view .LVU162
 106:src/prt.c     **** 
 563              		.loc 1 106 29 is_stmt 0 view .LVU163
 564 00ba 0D48     		ldr	r0, .L47+12
 565              	.LVL44:
 106:src/prt.c     **** 
 566              		.loc 1 106 29 view .LVU164
 567 00bc D0E7     		b	.L25
 568              	.LVL45:
 569              	.L36:
 105:src/prt.c     **** 	case OP_SIGMAMINUS:	return "\221-";
 570              		.loc 1 105 21 is_stmt 1 view .LVU165
 105:src/prt.c     **** 	case OP_SIGMAMINUS:	return "\221-";
 571              		.loc 1 105 28 is_stmt 0 view .LVU166
 572 00be 0D48     		ldr	r0, .L47+16
 573              	.LVL46:
 105:src/prt.c     **** 	case OP_SIGMAMINUS:	return "\221-";
 574              		.loc 1 105 28 view .LVU167
 575 00c0 CEE7     		b	.L25
 576              	.LVL47:
 577              	.L37:
  99:src/prt.c     **** #endif
 578              		.loc 1 99 15 is_stmt 1 view .LVU168
  99:src/prt.c     **** #endif
 579              		.loc 1 99 39 is_stmt 0 view .LVU169
 580 00c2 0D4B     		ldr	r3, .L47+20
  99:src/prt.c     **** #endif
 581              		.loc 1 99 45 view .LVU170
 582 00c4 0D49     		ldr	r1, .L47+24
 583              	.LVL48:
  99:src/prt.c     **** #endif
 584              		.loc 1 99 39 view .LVU171
 585 00c6 1B68     		ldr	r3, [r3]
  99:src/prt.c     **** #endif
 586              		.loc 1 99 45 view .LVU172
 587 00c8 0D48     		ldr	r0, .L47+28
 588              	.LVL49:
  99:src/prt.c     **** #endif
 589              		.loc 1 99 39 view .LVU173
 590 00ca 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
  99:src/prt.c     **** #endif
 591              		.loc 1 99 45 view .LVU174
 592 00ce 13F0200F 		tst	r3, #32
 593 00d2 18BF     		it	ne
 594 00d4 0846     		movne	r0, r1
 595 00d6 C3E7     		b	.L25
 596              	.LVL50:
 597              	.L38:
 104:src/prt.c     **** 	case OP_SIGMAPLUS:	return "\221+";
 598              		.loc 1 104 15 is_stmt 1 view .LVU175
ARM GAS  /tmp/ccsaDW2b.s 			page 19


 104:src/prt.c     **** 	case OP_SIGMAPLUS:	return "\221+";
 599              		.loc 1 104 22 is_stmt 0 view .LVU176
 600 00d8 0A48     		ldr	r0, .L47+32
 601              	.LVL51:
 104:src/prt.c     **** 	case OP_SIGMAPLUS:	return "\221+";
 602              		.loc 1 104 22 view .LVU177
 603 00da C1E7     		b	.L25
 604              	.LVL52:
 605              	.L30:
 117:src/prt.c     **** }
 606              		.loc 1 117 2 is_stmt 1 view .LVU178
 117:src/prt.c     **** }
 607              		.loc 1 117 9 is_stmt 0 view .LVU179
 608 00dc 0A48     		ldr	r0, .L47+36
 609              	.LVL53:
 117:src/prt.c     **** }
 610              		.loc 1 117 9 view .LVU180
 611 00de BFE7     		b	.L25
 612              	.LVL54:
 613              	.L46:
 614              		.cfi_def_cfa_offset 0
 615              		.cfi_restore 4
  82:src/prt.c     **** 
 616              		.loc 1 82 7 view .LVU181
 617 00e0 3023     		movs	r3, #48
 618 00e2 92E7     		b	.L27
 619              	.L48:
 620              		.align	2
 621              	.L47:
 622 00e4 20000000 		.word	.LC8
 623 00e8 00000000 		.word	.LC1
 624 00ec 04000000 		.word	.LC2
 625 00f0 18000000 		.word	.LC6
 626 00f4 14000000 		.word	.LC5
 627 00f8 00000000 		.word	main_ram
 628 00fc 0C000000 		.word	.LC3
 629 0100 1C000000 		.word	.LC7
 630 0104 10000000 		.word	.LC4
 631 0108 00000000 		.word	.LC0
 632              		.cfi_endproc
 633              	.LFE15:
 635              		.section	.text.num_arg_digits.part.0,"ax",%progbits
 636              		.align	1
 637              		.p2align 2,,3
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu fpv4-sp-d16
 643              	num_arg_digits.part.0:
 644              	.LVL55:
 645              	.LFB16:
 140:src/prt.c     **** 	int lim = argcmds[cmd].lim;
 646              		.loc 1 140 5 is_stmt 1 view -0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
ARM GAS  /tmp/ccsaDW2b.s 			page 20


 149:src/prt.c     **** #endif
 651              		.loc 1 149 2 view .LVU183
 149:src/prt.c     **** #endif
 652              		.loc 1 149 6 is_stmt 0 view .LVU184
 653 0000 0A4B     		ldr	r3, .L55
 149:src/prt.c     **** #endif
 654              		.loc 1 149 5 view .LVU185
 655 0002 93F91530 		ldrsb	r3, [r3, #21]
 656 0006 002B     		cmp	r3, #0
 657 0008 0DDB     		blt	.L53
 149:src/prt.c     **** #endif
 658              		.loc 1 149 32 view .LVU186
 659 000a 094B     		ldr	r3, .L55+4
 660 000c 03EB0010 		add	r0, r3, r0, lsl #4
 661              	.LVL56:
 149:src/prt.c     **** #endif
 662              		.loc 1 149 32 view .LVU187
 663 0010 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 149:src/prt.c     **** #endif
 664              		.loc 1 149 17 view .LVU188
 665 0012 9907     		lsls	r1, r3, #30
 666 0014 07D4     		bmi	.L53
 149:src/prt.c     **** #endif
 667              		.loc 1 149 37 view .LVU189
 668 0016 5A06     		lsls	r2, r3, #25
 669 0018 05D4     		bmi	.L53
 149:src/prt.c     **** #endif
 670              		.loc 1 149 58 view .LVU190
 671 001a 13F0200F 		tst	r3, #32
 152:src/prt.c     **** }
 672              		.loc 1 152 9 view .LVU191
 673 001e 14BF     		ite	ne
 674 0020 0220     		movne	r0, #2
 675 0022 0320     		moveq	r0, #3
 676 0024 7047     		bx	lr
 677              	.L53:
 151:src/prt.c     **** 	return 3;
 678              		.loc 1 151 10 view .LVU192
 679 0026 0220     		movs	r0, #2
 153:src/prt.c     **** 
 680              		.loc 1 153 1 view .LVU193
 681 0028 7047     		bx	lr
 682              	.L56:
 683 002a 00BF     		.align	2
 684              	.L55:
 685 002c 00000000 		.word	StateWhileOn
 686 0030 00000000 		.word	argcmds
 687              		.cfi_endproc
 688              	.LFE16:
 690              		.section	.text.num_arg_digits,"ax",%progbits
 691              		.align	1
 692              		.p2align 2,,3
 693              		.global	num_arg_digits
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccsaDW2b.s 			page 21


 699              	num_arg_digits:
 700              	.LVL57:
 701              	.LFB10:
 140:src/prt.c     **** 	int lim = argcmds[cmd].lim;
 702              		.loc 1 140 29 is_stmt 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 141:src/prt.c     **** 	if (lim < 10)
 707              		.loc 1 141 2 view .LVU195
 141:src/prt.c     **** 	if (lim < 10)
 708              		.loc 1 141 24 is_stmt 0 view .LVU196
 709 0000 064B     		ldr	r3, .L61
 710 0002 03EB0013 		add	r3, r3, r0, lsl #4
 141:src/prt.c     **** 	if (lim < 10)
 711              		.loc 1 141 6 view .LVU197
 712 0006 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 713              	.LVL58:
 142:src/prt.c     **** 		return 1;
 714              		.loc 1 142 2 is_stmt 1 view .LVU198
 142:src/prt.c     **** 		return 1;
 715              		.loc 1 142 5 is_stmt 0 view .LVU199
 716 0008 092B     		cmp	r3, #9
 717 000a 03DD     		ble	.L59
 144:src/prt.c     **** 		return 2;
 718              		.loc 1 144 2 is_stmt 1 view .LVU200
 144:src/prt.c     **** 		return 2;
 719              		.loc 1 144 5 is_stmt 0 view .LVU201
 720 000c 632B     		cmp	r3, #99
 721 000e 03DD     		ble	.L60
 722 0010 FFF7FEBF 		b	num_arg_digits.part.0
 723              	.LVL59:
 724              	.L59:
 143:src/prt.c     **** 	if (lim < 100)
 725              		.loc 1 143 10 view .LVU202
 726 0014 0120     		movs	r0, #1
 727              	.LVL60:
 143:src/prt.c     **** 	if (lim < 100)
 728              		.loc 1 143 10 view .LVU203
 729 0016 7047     		bx	lr
 730              	.LVL61:
 731              	.L60:
 145:src/prt.c     **** #ifdef COMPILE_CATALOGUES
 732              		.loc 1 145 10 view .LVU204
 733 0018 0220     		movs	r0, #2
 734              	.LVL62:
 153:src/prt.c     **** 
 735              		.loc 1 153 1 view .LVU205
 736 001a 7047     		bx	lr
 737              	.L62:
 738              		.align	2
 739              	.L61:
 740 001c 00000000 		.word	argcmds
 741              		.cfi_endproc
 742              	.LFE10:
 744              		.section	.rodata.prt.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccsaDW2b.s 			page 22


 745              		.align	2
 746              	.LC9:
 747 0000 A0060600 		.ascii	"\240\006\006\000"
 748              		.align	2
 749              	.LC10:
 750 0004 23060600 		.ascii	"#\006\006\000"
 751              		.align	2
 752              	.LC11:
 753 0008 17060600 		.ascii	"\027\006\006\000"
 754              		.align	2
 755              	.LC12:
 756 000c 58595A54 		.ascii	"XYZTABCDLIJK\000"
 756      41424344 
 756      4C494A4B 
 756      00
 757              		.section	.text.prt,"ax",%progbits
 758              		.align	1
 759              		.p2align 2,,3
 760              		.global	prt
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv4-sp-d16
 766              	prt:
 767              	.LVL63:
 768              	.LFB13:
 267:src/prt.c     **** 
 268:src/prt.c     **** const char *prt(opcode op, char *instr) {
 769              		.loc 1 268 41 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 269:src/prt.c     **** 	unsigned int arg;
 773              		.loc 1 269 2 view .LVU207
 270:src/prt.c     **** 	xset(instr, '\0', 16);
 774              		.loc 1 270 2 view .LVU208
 268:src/prt.c     **** 	unsigned int arg;
 775              		.loc 1 268 41 is_stmt 0 view .LVU209
 776 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 777              		.cfi_def_cfa_offset 32
 778              		.cfi_offset 4, -32
 779              		.cfi_offset 5, -28
 780              		.cfi_offset 6, -24
 781              		.cfi_offset 7, -20
 782              		.cfi_offset 8, -16
 783              		.cfi_offset 9, -12
 784              		.cfi_offset 10, -8
 785              		.cfi_offset 14, -4
 786              		.loc 1 270 2 view .LVU210
 787 0004 1022     		movs	r2, #16
 268:src/prt.c     **** 	unsigned int arg;
 788              		.loc 1 268 41 view .LVU211
 789 0006 0446     		mov	r4, r0
 790 0008 0D46     		mov	r5, r1
 791              		.loc 1 270 2 view .LVU212
 792 000a 0846     		mov	r0, r1
 793              	.LVL64:
ARM GAS  /tmp/ccsaDW2b.s 			page 23


 794              		.loc 1 270 2 view .LVU213
 795 000c 0021     		movs	r1, #0
 796              	.LVL65:
 797              		.loc 1 270 2 view .LVU214
 798 000e FFF7FEFF 		bl	xset
 799              	.LVL66:
 271:src/prt.c     **** 	if (isDBL(op))
 800              		.loc 1 271 2 is_stmt 1 view .LVU215
 801              		.loc 1 271 6 is_stmt 0 view .LVU216
 802 0012 04F47043 		and	r3, r4, #61440
 803              		.loc 1 271 5 view .LVU217
 804 0016 B3F5704F 		cmp	r3, #61440
 805 001a 00F0A180 		beq	.L157
 272:src/prt.c     **** 		return prt_multi(op, instr);
 273:src/prt.c     **** 	if (isRARG(op))
 806              		.loc 1 273 2 is_stmt 1 view .LVU218
 807              		.loc 1 273 5 is_stmt 0 view .LVU219
 808 001e 002B     		cmp	r3, #0
 809 0020 6AD1     		bne	.L158
 274:src/prt.c     **** 		return prt_rargs(op, instr);
 275:src/prt.c     **** 	arg = argKIND(op);
 810              		.loc 1 275 2 is_stmt 1 view .LVU220
 811 0022 C4F30723 		ubfx	r3, r4, #8, #8
 812              		.loc 1 275 6 is_stmt 0 view .LVU221
 813 0026 E4B2     		uxtb	r4, r4
 814              	.LVL67:
 276:src/prt.c     **** 	switch (opKIND(op)) {
 815              		.loc 1 276 2 is_stmt 1 view .LVU222
 816 0028 062B     		cmp	r3, #6
 817 002a 08D8     		bhi	.L123
 818 002c DFE803F0 		tbb	[pc, r3]
 819              	.L88:
 820 0030 0E       		.byte	(.L94-.L88)/2
 821 0031 04       		.byte	(.L93-.L88)/2
 822 0032 18       		.byte	(.L92-.L88)/2
 823 0033 1C       		.byte	(.L91-.L88)/2
 824 0034 34       		.byte	(.L90-.L88)/2
 825 0035 4C       		.byte	(.L89-.L88)/2
 826 0036 0A       		.byte	(.L87-.L88)/2
 827 0037 00       		.p2align 1
 828              	.L93:
 277:src/prt.c     **** 	case KIND_SPEC:	return prt_specials(arg, instr);
 278:src/prt.c     **** 	case KIND_NIL:	return prt_niladic(arg, instr);
 829              		.loc 1 278 17 view .LVU223
 830              	.LVL68:
 831              	.LBB69:
 832              	.LBI69:
  61:src/prt.c     **** 	if (idx < NUM_NILADIC) {
 833              		.loc 1 61 20 view .LVU224
 834              	.LBB70:
  62:src/prt.c     **** 		const char *p = niladics[idx].nname;
 835              		.loc 1 62 2 view .LVU225
  62:src/prt.c     **** 		const char *p = niladics[idx].nname;
 836              		.loc 1 62 5 is_stmt 0 view .LVU226
 837 0038 BF2C     		cmp	r4, #191
 838 003a 40F2BC80 		bls	.L159
 839              	.LVL69:
ARM GAS  /tmp/ccsaDW2b.s 			page 24


 840              	.L123:
  62:src/prt.c     **** 		const char *p = niladics[idx].nname;
 841              		.loc 1 62 5 view .LVU227
 842              	.LBE70:
 843              	.LBE69:
 844              	.LBB75:
 845              	.LBB76:
 177:src/prt.c     **** 
 846              		.loc 1 177 10 view .LVU228
 847 003e 9748     		ldr	r0, .L162
 848              	.L63:
 849              	.LBE76:
 850              	.LBE75:
 279:src/prt.c     **** 	case KIND_MON:	return prt_monadic(arg, instr);
 280:src/prt.c     **** 	case KIND_DYA:	return prt_dyadic(arg, instr);
 281:src/prt.c     **** 	case KIND_TRI:	return prt_triadic(arg, instr);
 282:src/prt.c     **** 	case KIND_CMON:	return prt_monadic_cmplx(arg, instr);
 283:src/prt.c     **** 	case KIND_CDYA:	return prt_dyadic_cmplx(arg, instr);
 284:src/prt.c     **** 	}
 285:src/prt.c     **** 	return "???";
 286:src/prt.c     **** }
 851              		.loc 1 286 1 view .LVU229
 852 0040 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 853              	.LVL70:
 854              	.L87:
 283:src/prt.c     **** 	}
 855              		.loc 1 283 18 is_stmt 1 view .LVU230
 856              	.LBB86:
 857              	.LBI86:
  55:src/prt.c     **** 	if (f < NUM_DYADIC && ! isNULL(dyfuncs[f].dydcmplx))
 858              		.loc 1 55 20 view .LVU231
 859              	.LBB87:
  56:src/prt.c     **** 		return prt_cmplx(! isNULL(dyfuncs[f].dydreal), dyfuncs[f].fname, instr);
 860              		.loc 1 56 2 view .LVU232
  56:src/prt.c     **** 		return prt_cmplx(! isNULL(dyfuncs[f].dydreal), dyfuncs[f].fname, instr);
 861              		.loc 1 56 5 is_stmt 0 view .LVU233
 862 0044 2E2C     		cmp	r4, #46
 863 0046 FAD8     		bhi	.L123
  56:src/prt.c     **** 		return prt_cmplx(! isNULL(dyfuncs[f].dydreal), dyfuncs[f].fname, instr);
 864              		.loc 1 56 26 view .LVU234
 865 0048 9549     		ldr	r1, .L162+4
 866 004a 40E0     		b	.L156
 867              	.LVL71:
 868              	.L94:
  56:src/prt.c     **** 		return prt_cmplx(! isNULL(dyfuncs[f].dydreal), dyfuncs[f].fname, instr);
 869              		.loc 1 56 26 view .LVU235
 870              	.LBE87:
 871              	.LBE86:
 277:src/prt.c     **** 	case KIND_NIL:	return prt_niladic(arg, instr);
 872              		.loc 1 277 18 is_stmt 1 view .LVU236
 873              	.LBB96:
 874              	.LBI96:
  80:src/prt.c     **** 	static const char digits[16] = "0123456789ABCDEF";
 875              		.loc 1 80 20 view .LVU237
 876              	.LBB97:
  81:src/prt.c     **** 	char cmp = '0';
 877              		.loc 1 81 2 view .LVU238
ARM GAS  /tmp/ccsaDW2b.s 			page 25


  82:src/prt.c     **** 
 878              		.loc 1 82 2 view .LVU239
  84:src/prt.c     **** 		*instr = digits[opm - OP_0];
 879              		.loc 1 84 2 view .LVU240
  84:src/prt.c     **** 		*instr = digits[opm - OP_0];
 880              		.loc 1 84 18 is_stmt 0 view .LVU241
 881 004c 631F     		subs	r3, r4, #5
  84:src/prt.c     **** 		*instr = digits[opm - OP_0];
 882              		.loc 1 84 5 view .LVU242
 883 004e 0F2B     		cmp	r3, #15
 884 0050 40F2D680 		bls	.L160
 885 0054 2946     		mov	r1, r5
 886 0056 2046     		mov	r0, r4
 887              	.LBE97:
 888              	.LBE96:
 889              		.loc 1 286 1 view .LVU243
 890 0058 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 891              		.cfi_remember_state
 892              		.cfi_restore 14
 893              		.cfi_restore 10
 894              		.cfi_restore 9
 895              		.cfi_restore 8
 896              		.cfi_restore 7
 897              		.cfi_restore 6
 898              		.cfi_restore 5
 899              		.cfi_restore 4
 900              		.cfi_def_cfa_offset 0
 901              	.LVL72:
 902              	.LBB100:
 903              	.LBB98:
 904              		.loc 1 286 1 view .LVU244
 905 005c FFF7FEBF 		b	prt_specials.part.0
 906              	.LVL73:
 907              	.L92:
 908              		.cfi_restore_state
 909              		.loc 1 286 1 view .LVU245
 910              	.LBE98:
 911              	.LBE100:
 279:src/prt.c     **** 	case KIND_DYA:	return prt_dyadic(arg, instr);
 912              		.loc 1 279 17 is_stmt 1 view .LVU246
 913              	.LBB101:
 914              	.LBI101:
  23:src/prt.c     **** 	if (f < NUM_MONADIC && (! isNULL(monfuncs[f].mondreal) || ! isNULL(monfuncs[f].monint)))
 915              		.loc 1 23 20 view .LVU247
 916              	.LBB102:
  24:src/prt.c     **** 		return sncopy(instr, monfuncs[f].fname, NAME_LEN);
 917              		.loc 1 24 2 view .LVU248
  24:src/prt.c     **** 		return sncopy(instr, monfuncs[f].fname, NAME_LEN);
 918              		.loc 1 24 5 is_stmt 0 view .LVU249
 919 0060 982C     		cmp	r4, #152
 920 0062 ECD8     		bhi	.L123
  24:src/prt.c     **** 		return sncopy(instr, monfuncs[f].fname, NAME_LEN);
 921              		.loc 1 24 28 view .LVU250
 922 0064 8F49     		ldr	r1, .L162+8
 923 0066 02E0     		b	.L147
 924              	.LVL74:
 925              	.L91:
ARM GAS  /tmp/ccsaDW2b.s 			page 26


  24:src/prt.c     **** 		return sncopy(instr, monfuncs[f].fname, NAME_LEN);
 926              		.loc 1 24 28 view .LVU251
 927              	.LBE102:
 928              	.LBE101:
 280:src/prt.c     **** 	case KIND_TRI:	return prt_triadic(arg, instr);
 929              		.loc 1 280 17 is_stmt 1 view .LVU252
 930              	.LBB103:
 931              	.LBI103:
  29:src/prt.c     **** 	if (f < NUM_DYADIC && (! isNULL(dyfuncs[f].dydreal) || ! isNULL(dyfuncs[f].dydint)))
 932              		.loc 1 29 20 view .LVU253
 933              	.LBB104:
  30:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
 934              		.loc 1 30 2 view .LVU254
  30:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
 935              		.loc 1 30 5 is_stmt 0 view .LVU255
 936 0068 2E2C     		cmp	r4, #46
 937 006a E8D8     		bhi	.L123
  30:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
 938              		.loc 1 30 27 view .LVU256
 939 006c 8C49     		ldr	r1, .L162+4
 940              	.LVL75:
 941              	.L147:
  30:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
 942              		.loc 1 30 27 view .LVU257
 943 006e 04EB4403 		add	r3, r4, r4, lsl #1
 944 0072 01EBC300 		add	r0, r1, r3, lsl #3
  30:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
 945              		.loc 1 30 21 view .LVU258
 946 0076 51F83320 		ldr	r2, [r1, r3, lsl #3]
  30:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
 947              		.loc 1 30 27 view .LVU259
 948 007a 6300     		lsls	r3, r4, #1
  30:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
 949              		.loc 1 30 21 view .LVU260
 950 007c 12B9     		cbnz	r2, .L97
  30:src/prt.c     **** 		return sncopy(instr, dyfuncs[f].fname, NAME_LEN);
 951              		.loc 1 30 54 view .LVU261
 952 007e 8268     		ldr	r2, [r0, #8]
 953 0080 002A     		cmp	r2, #0
 954 0082 DCD0     		beq	.L123
 955              	.L97:
  31:src/prt.c     **** 	return "???";
 956              		.loc 1 31 3 is_stmt 1 view .LVU262
  31:src/prt.c     **** 	return "???";
 957              		.loc 1 31 34 is_stmt 0 view .LVU263
 958 0084 1C44     		add	r4, r4, r3
 959              	.LVL76:
  31:src/prt.c     **** 	return "???";
 960              		.loc 1 31 34 view .LVU264
 961 0086 01EBC401 		add	r1, r1, r4, lsl #3
  31:src/prt.c     **** 	return "???";
 962              		.loc 1 31 10 view .LVU265
 963 008a 2846     		mov	r0, r5
 964 008c 0C31     		adds	r1, r1, #12
 965              	.LBE104:
 966              	.LBE103:
 967              		.loc 1 286 1 view .LVU266
ARM GAS  /tmp/ccsaDW2b.s 			page 27


 968 008e BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 969              		.cfi_remember_state
 970              		.cfi_restore 14
 971              		.cfi_restore 10
 972              		.cfi_restore 9
 973              		.cfi_restore 8
 974              		.cfi_restore 7
 975              		.cfi_restore 6
 976              		.cfi_restore 5
 977              		.cfi_restore 4
 978              		.cfi_def_cfa_offset 0
 979              	.LVL77:
 980              	.LBB106:
 981              	.LBB105:
  31:src/prt.c     **** 	return "???";
 982              		.loc 1 31 10 view .LVU267
 983 0092 0622     		movs	r2, #6
 984 0094 FFF7FEBF 		b	sncopy
 985              	.LVL78:
 986              	.L90:
 987              		.cfi_restore_state
  31:src/prt.c     **** 	return "???";
 988              		.loc 1 31 10 view .LVU268
 989              	.LBE105:
 990              	.LBE106:
 281:src/prt.c     **** 	case KIND_CMON:	return prt_monadic_cmplx(arg, instr);
 991              		.loc 1 281 17 is_stmt 1 view .LVU269
 992              	.LBB107:
 993              	.LBI107:
  35:src/prt.c     **** 	if (f < NUM_TRIADIC && (! isNULL(trifuncs[f].trireal) || ! isNULL(trifuncs[f].triint)))
 994              		.loc 1 35 20 view .LVU270
 995              	.LBB108:
  36:src/prt.c     **** 		return sncopy(instr, trifuncs[f].fname, NAME_LEN);
 996              		.loc 1 36 2 view .LVU271
  36:src/prt.c     **** 		return sncopy(instr, trifuncs[f].fname, NAME_LEN);
 997              		.loc 1 36 5 is_stmt 0 view .LVU272
 998 0098 0B2C     		cmp	r4, #11
 999 009a D0D8     		bhi	.L123
  36:src/prt.c     **** 		return sncopy(instr, trifuncs[f].fname, NAME_LEN);
 1000              		.loc 1 36 28 view .LVU273
 1001 009c 04EB8403 		add	r3, r4, r4, lsl #2
 1002 00a0 8149     		ldr	r1, .L162+12
  36:src/prt.c     **** 		return sncopy(instr, trifuncs[f].fname, NAME_LEN);
 1003              		.loc 1 36 22 view .LVU274
 1004 00a2 51F82320 		ldr	r2, [r1, r3, lsl #2]
  36:src/prt.c     **** 		return sncopy(instr, trifuncs[f].fname, NAME_LEN);
 1005              		.loc 1 36 28 view .LVU275
 1006 00a6 01EB8300 		add	r0, r1, r3, lsl #2
 1007 00aa A300     		lsls	r3, r4, #2
  36:src/prt.c     **** 		return sncopy(instr, trifuncs[f].fname, NAME_LEN);
 1008              		.loc 1 36 22 view .LVU276
 1009 00ac 12B9     		cbnz	r2, .L98
  36:src/prt.c     **** 		return sncopy(instr, trifuncs[f].fname, NAME_LEN);
 1010              		.loc 1 36 56 view .LVU277
 1011 00ae 4268     		ldr	r2, [r0, #4]
 1012 00b0 002A     		cmp	r2, #0
 1013 00b2 C4D0     		beq	.L123
ARM GAS  /tmp/ccsaDW2b.s 			page 28


 1014              	.L98:
  37:src/prt.c     **** 	return "???";
 1015              		.loc 1 37 3 is_stmt 1 view .LVU278
  37:src/prt.c     **** 	return "???";
 1016              		.loc 1 37 35 is_stmt 0 view .LVU279
 1017 00b4 1C44     		add	r4, r4, r3
 1018              	.LVL79:
  37:src/prt.c     **** 	return "???";
 1019              		.loc 1 37 35 view .LVU280
 1020 00b6 01EB8401 		add	r1, r1, r4, lsl #2
  37:src/prt.c     **** 	return "???";
 1021              		.loc 1 37 10 view .LVU281
 1022 00ba 2846     		mov	r0, r5
 1023 00bc 0831     		adds	r1, r1, #8
 1024              	.LBE108:
 1025              	.LBE107:
 1026              		.loc 1 286 1 view .LVU282
 1027 00be BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1028              		.cfi_remember_state
 1029              		.cfi_restore 14
 1030              		.cfi_restore 10
 1031              		.cfi_restore 9
 1032              		.cfi_restore 8
 1033              		.cfi_restore 7
 1034              		.cfi_restore 6
 1035              		.cfi_restore 5
 1036              		.cfi_restore 4
 1037              		.cfi_def_cfa_offset 0
 1038              	.LVL80:
 1039              	.LBB110:
 1040              	.LBB109:
  37:src/prt.c     **** 	return "???";
 1041              		.loc 1 37 10 view .LVU283
 1042 00c2 0622     		movs	r2, #6
 1043 00c4 FFF7FEBF 		b	sncopy
 1044              	.LVL81:
 1045              	.L89:
 1046              		.cfi_restore_state
  37:src/prt.c     **** 	return "???";
 1047              		.loc 1 37 10 view .LVU284
 1048              	.LBE109:
 1049              	.LBE110:
 282:src/prt.c     **** 	case KIND_CDYA:	return prt_dyadic_cmplx(arg, instr);
 1050              		.loc 1 282 18 is_stmt 1 view .LVU285
 1051              	.LBB111:
 1052              	.LBI111:
  49:src/prt.c     **** 	if (f < NUM_MONADIC && ! isNULL(monfuncs[f].mondcmplx))
 1053              		.loc 1 49 20 view .LVU286
 1054              	.LBB112:
  50:src/prt.c     **** 		return prt_cmplx(! isNULL(monfuncs[f].mondreal), monfuncs[f].fname, instr);
 1055              		.loc 1 50 2 view .LVU287
  50:src/prt.c     **** 		return prt_cmplx(! isNULL(monfuncs[f].mondreal), monfuncs[f].fname, instr);
 1056              		.loc 1 50 5 is_stmt 0 view .LVU288
 1057 00c8 982C     		cmp	r4, #152
 1058 00ca B8D8     		bhi	.L123
  50:src/prt.c     **** 		return prt_cmplx(! isNULL(monfuncs[f].mondreal), monfuncs[f].fname, instr);
 1059              		.loc 1 50 27 view .LVU289
ARM GAS  /tmp/ccsaDW2b.s 			page 29


 1060 00cc 7549     		ldr	r1, .L162+8
 1061              	.LVL82:
 1062              	.L156:
  50:src/prt.c     **** 		return prt_cmplx(! isNULL(monfuncs[f].mondreal), monfuncs[f].fname, instr);
 1063              		.loc 1 50 27 view .LVU290
 1064              	.LBE112:
 1065              	.LBE111:
 1066              	.LBB113:
 1067              	.LBB94:
  56:src/prt.c     **** 		return prt_cmplx(! isNULL(dyfuncs[f].dydreal), dyfuncs[f].fname, instr);
 1068              		.loc 1 56 26 view .LVU291
 1069 00ce 04EB4404 		add	r4, r4, r4, lsl #1
 1070              	.LVL83:
  56:src/prt.c     **** 		return prt_cmplx(! isNULL(dyfuncs[f].dydreal), dyfuncs[f].fname, instr);
 1071              		.loc 1 56 26 view .LVU292
 1072 00d2 01EBC403 		add	r3, r1, r4, lsl #3
 1073 00d6 E400     		lsls	r4, r4, #3
  56:src/prt.c     **** 		return prt_cmplx(! isNULL(dyfuncs[f].dydreal), dyfuncs[f].fname, instr);
 1074              		.loc 1 56 21 view .LVU293
 1075 00d8 5B68     		ldr	r3, [r3, #4]
 1076 00da 002B     		cmp	r3, #0
 1077 00dc AFD0     		beq	.L123
  57:src/prt.c     **** 	return "???";
 1078              		.loc 1 57 3 is_stmt 1 view .LVU294
 1079              	.LBB88:
 1080              	.LBB89:
  43:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
 1081              		.loc 1 43 5 is_stmt 0 view .LVU295
 1082 00de 0B59     		ldr	r3, [r1, r4]
 1083              	.LBE89:
 1084              	.LBE88:
  57:src/prt.c     **** 	return "???";
 1085              		.loc 1 57 60 view .LVU296
 1086 00e0 0C34     		adds	r4, r4, #12
 1087 00e2 2144     		add	r1, r1, r4
 1088              	.LVL84:
 1089              	.LBB92:
 1090              	.LBI88:
  41:src/prt.c     **** 	char *p = instr;
 1091              		.loc 1 41 20 is_stmt 1 view .LVU297
 1092              	.LBB90:
  42:src/prt.c     **** 	if (add_prefix)
 1093              		.loc 1 42 2 view .LVU298
  43:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
 1094              		.loc 1 43 2 view .LVU299
  44:src/prt.c     **** 	sncopy(p, name, NAME_LEN);
 1095              		.loc 1 44 5 is_stmt 0 view .LVU300
 1096 00e4 2846     		mov	r0, r5
  43:src/prt.c     **** 		*p++ = COMPLEX_PREFIX;
 1097              		.loc 1 43 5 view .LVU301
 1098 00e6 13B1     		cbz	r3, .L100
 1099              	.LVL85:
  44:src/prt.c     **** 	sncopy(p, name, NAME_LEN);
 1100              		.loc 1 44 3 is_stmt 1 view .LVU302
  44:src/prt.c     **** 	sncopy(p, name, NAME_LEN);
 1101              		.loc 1 44 8 is_stmt 0 view .LVU303
 1102 00e8 1423     		movs	r3, #20
ARM GAS  /tmp/ccsaDW2b.s 			page 30


 1103 00ea 00F8013B 		strb	r3, [r0], #1
 1104              	.LVL86:
 1105              	.L100:
  45:src/prt.c     **** 	return instr;
 1106              		.loc 1 45 2 is_stmt 1 view .LVU304
 1107 00ee 0622     		movs	r2, #6
 1108 00f0 FFF7FEFF 		bl	sncopy
 1109              	.LVL87:
  46:src/prt.c     **** }
 1110              		.loc 1 46 2 view .LVU305
  46:src/prt.c     **** }
 1111              		.loc 1 46 2 is_stmt 0 view .LVU306
 1112              	.LBE90:
 1113              	.LBE92:
  57:src/prt.c     **** 	return "???";
 1114              		.loc 1 57 10 view .LVU307
 1115 00f4 2846     		mov	r0, r5
 1116 00f6 A3E7     		b	.L63
 1117              	.LVL88:
 1118              	.L158:
  57:src/prt.c     **** 	return "???";
 1119              		.loc 1 57 10 view .LVU308
 1120              	.LBE94:
 1121              	.LBE113:
 274:src/prt.c     **** 	arg = argKIND(op);
 1122              		.loc 1 274 3 is_stmt 1 view .LVU309
 1123              	.LBB114:
 1124              	.LBI75:
 161:src/prt.c     **** 	unsigned int arg = op & RARG_MASK;
 1125              		.loc 1 161 20 view .LVU310
 1126              	.LBB81:
 162:src/prt.c     **** 	int ind = op & RARG_IND;
 1127              		.loc 1 162 2 view .LVU311
 164:src/prt.c     **** 	char *p;
 1128              		.loc 1 164 27 is_stmt 0 view .LVU312
 1129 00f8 210A     		lsrs	r1, r4, #8
 168:src/prt.c     **** 		if (ind) arg += RARG_IND;
 1130              		.loc 1 168 20 view .LVU313
 1131 00fa 6C4F     		ldr	r7, .L162+16
 164:src/prt.c     **** 	char *p;
 1132              		.loc 1 164 27 view .LVU314
 1133 00fc 2039     		subs	r1, r1, #32
 1134 00fe CEB2     		uxtb	r6, r1
 168:src/prt.c     **** 		if (ind) arg += RARG_IND;
 1135              		.loc 1 168 20 view .LVU315
 1136 0100 07EB0613 		add	r3, r7, r6, lsl #4
 162:src/prt.c     **** 	int ind = op & RARG_IND;
 1137              		.loc 1 162 15 view .LVU316
 1138 0104 04F07F08 		and	r8, r4, #127
 1139              	.LVL89:
 163:src/prt.c     **** 	const unsigned int cmd = RARG_CMD(op);
 1140              		.loc 1 163 2 is_stmt 1 view .LVU317
 168:src/prt.c     **** 		if (ind) arg += RARG_IND;
 1141              		.loc 1 168 20 is_stmt 0 view .LVU318
 1142 0108 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 168:src/prt.c     **** 		if (ind) arg += RARG_IND;
 1143              		.loc 1 168 5 view .LVU319
ARM GAS  /tmp/ccsaDW2b.s 			page 31


 1144 010a DB07     		lsls	r3, r3, #31
 168:src/prt.c     **** 		if (ind) arg += RARG_IND;
 1145              		.loc 1 168 20 view .LVU320
 1146 010c 4FEA0619 		lsl	r9, r6, #4
 163:src/prt.c     **** 	const unsigned int cmd = RARG_CMD(op);
 1147              		.loc 1 163 6 view .LVU321
 1148 0110 04F08004 		and	r4, r4, #128
 1149              	.LVL90:
 164:src/prt.c     **** 	char *p;
 1150              		.loc 1 164 2 is_stmt 1 view .LVU322
 165:src/prt.c     **** 	int n = 2;
 1151              		.loc 1 165 2 view .LVU323
 166:src/prt.c     **** 
 1152              		.loc 1 166 2 view .LVU324
 168:src/prt.c     **** 		if (ind) arg += RARG_IND;
 1153              		.loc 1 168 2 view .LVU325
 168:src/prt.c     **** 		if (ind) arg += RARG_IND;
 1154              		.loc 1 168 5 is_stmt 0 view .LVU326
 1155 0114 2AD4     		bmi	.L66
 169:src/prt.c     **** 		ind = 0;
 1156              		.loc 1 169 3 is_stmt 1 view .LVU327
 169:src/prt.c     **** 		ind = 0;
 1157              		.loc 1 169 6 is_stmt 0 view .LVU328
 1158 0116 002C     		cmp	r4, #0
 1159 0118 4AD1     		bne	.L67
 1160              	.LVL91:
 1161              	.L152:
 173:src/prt.c     **** 		*scopy(instr, "\240" SPACE_AFTER_CMD) = arg;
 1162              		.loc 1 173 2 is_stmt 1 view .LVU329
 173:src/prt.c     **** 		*scopy(instr, "\240" SPACE_AFTER_CMD) = arg;
 1163              		.loc 1 173 5 is_stmt 0 view .LVU330
 1164 011a 242E     		cmp	r6, #36
 1165 011c 54D0     		beq	.L68
 176:src/prt.c     **** 		return "???";
 1166              		.loc 1 176 7 is_stmt 1 view .LVU331
 176:src/prt.c     **** 		return "???";
 1167              		.loc 1 176 10 is_stmt 0 view .LVU332
 1168 011e 8C2E     		cmp	r6, #140
 1169 0120 8DD8     		bhi	.L123
 1170              	.LVL92:
 1171              	.L70:
 180:src/prt.c     **** 			return "???";
 1172              		.loc 1 180 3 is_stmt 1 view .LVU333
 180:src/prt.c     **** 			return "???";
 1173              		.loc 1 180 25 is_stmt 0 view .LVU334
 1174 0122 07EB0903 		add	r3, r7, r9
 1175 0126 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 180:src/prt.c     **** 			return "???";
 1176              		.loc 1 180 6 view .LVU335
 1177 0128 4345     		cmp	r3, r8
 1178 012a 88D3     		bcc	.L123
 183:src/prt.c     **** 		switch(cmd) {
 1179              		.loc 1 183 3 is_stmt 1 view .LVU336
 1180              	.LVL93:
 184:src/prt.c     **** 
 1181              		.loc 1 184 3 view .LVU337
 1182 012c 6C2E     		cmp	r6, #108
ARM GAS  /tmp/ccsaDW2b.s 			page 32


 1183 012e 00F0A380 		beq	.L73
 1184 0132 52D8     		bhi	.L74
 1185 0134 002E     		cmp	r6, #0
 1186 0136 68D0     		beq	.L107
 1187 0138 012E     		cmp	r6, #1
 1188 013a 40F08280 		bne	.L77
 187:src/prt.c     **** 		case RARG_CONST:
 1189              		.loc 1 187 4 view .LVU338
 187:src/prt.c     **** 		case RARG_CONST:
 1190              		.loc 1 187 6 is_stmt 0 view .LVU339
 1191 013e 2846     		mov	r0, r5
 1192              	.LVL94:
 187:src/prt.c     **** 		case RARG_CONST:
 1193              		.loc 1 187 9 view .LVU340
 1194 0140 1423     		movs	r3, #20
 1195 0142 00F8013B 		strb	r3, [r0], #1
 1196              	.LVL95:
 1197              	.L75:
 189:src/prt.c     **** 			return instr;
 1198              		.loc 1 189 4 is_stmt 1 view .LVU341
 1199 0146 5A49     		ldr	r1, .L162+20
 1200 0148 FFF7FEFF 		bl	scopy
 1201              	.LVL96:
 189:src/prt.c     **** 			return instr;
 1202              		.loc 1 189 52 is_stmt 0 view .LVU342
 1203 014c 5949     		ldr	r1, .L162+24
 1204 014e 08EB4808 		add	r8, r8, r8, lsl #1
 1205              	.LVL97:
 189:src/prt.c     **** 			return instr;
 1206              		.loc 1 189 4 view .LVU343
 1207 0152 01EB8801 		add	r1, r1, r8, lsl #2
 1208 0156 0422     		movs	r2, #4
 1209 0158 FFF7FEFF 		bl	sncopy
 1210              	.LVL98:
 190:src/prt.c     **** 
 1211              		.loc 1 190 4 is_stmt 1 view .LVU344
 190:src/prt.c     **** 
 1212              		.loc 1 190 11 is_stmt 0 view .LVU345
 1213 015c 2846     		mov	r0, r5
 1214 015e 6FE7     		b	.L63
 1215              	.LVL99:
 1216              	.L157:
 190:src/prt.c     **** 
 1217              		.loc 1 190 11 view .LVU346
 1218              	.LBE81:
 1219              	.LBE114:
 272:src/prt.c     **** 	if (isRARG(op))
 1220              		.loc 1 272 3 is_stmt 1 view .LVU347
 272:src/prt.c     **** 	if (isRARG(op))
 1221              		.loc 1 272 10 is_stmt 0 view .LVU348
 1222 0160 2946     		mov	r1, r5
 1223 0162 2046     		mov	r0, r4
 1224              		.loc 1 286 1 view .LVU349
 1225 0164 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1226              		.cfi_remember_state
 1227              		.cfi_restore 14
 1228              		.cfi_restore 10
ARM GAS  /tmp/ccsaDW2b.s 			page 33


 1229              		.cfi_restore 9
 1230              		.cfi_restore 8
 1231              		.cfi_restore 7
 1232              		.cfi_restore 6
 1233              		.cfi_restore 5
 1234              		.cfi_restore 4
 1235              		.cfi_def_cfa_offset 0
 1236              	.LVL100:
 272:src/prt.c     **** 	if (isRARG(op))
 1237              		.loc 1 272 10 view .LVU350
 1238 0168 FFF7FEBF 		b	prt_multi
 1239              	.LVL101:
 1240              	.L66:
 1241              		.cfi_restore_state
 1242              	.LBB115:
 1243              	.LBB82:
 173:src/prt.c     **** 		*scopy(instr, "\240" SPACE_AFTER_CMD) = arg;
 1244              		.loc 1 173 2 is_stmt 1 view .LVU351
 173:src/prt.c     **** 		*scopy(instr, "\240" SPACE_AFTER_CMD) = arg;
 1245              		.loc 1 173 5 is_stmt 0 view .LVU352
 1246 016c 242E     		cmp	r6, #36
 1247 016e 2BD0     		beq	.L68
 176:src/prt.c     **** 		return "???";
 1248              		.loc 1 176 7 is_stmt 1 view .LVU353
 176:src/prt.c     **** 		return "???";
 1249              		.loc 1 176 10 is_stmt 0 view .LVU354
 1250 0170 8C2E     		cmp	r6, #140
 1251 0172 3FF664AF 		bhi	.L123
 179:src/prt.c     **** 		if (arg > argcmds[cmd].lim)
 1252              		.loc 1 179 7 is_stmt 1 view .LVU355
 179:src/prt.c     **** 		if (arg > argcmds[cmd].lim)
 1253              		.loc 1 179 10 is_stmt 0 view .LVU356
 1254 0176 002C     		cmp	r4, #0
 1255 0178 D3D0     		beq	.L70
 220:src/prt.c     **** 			return "???";
 1256              		.loc 1 220 3 is_stmt 1 view .LVU357
 223:src/prt.c     **** 
 1257              		.loc 1 223 3 view .LVU358
 223:src/prt.c     **** 
 1258              		.loc 1 223 38 is_stmt 0 view .LVU359
 1259 017a 0622     		movs	r2, #6
 1260 017c 02EB0611 		add	r1, r2, r6, lsl #4
 223:src/prt.c     **** 
 1261              		.loc 1 223 7 view .LVU360
 1262 0180 0D23     		movs	r3, #13
 1263 0182 3944     		add	r1, r1, r7
 1264 0184 2846     		mov	r0, r5
 1265 0186 FFF7FEFF 		bl	sncopy_char
 1266              	.LVL102:
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1267              		.loc 1 226 23 view .LVU361
 1268 018a A8F16403 		sub	r3, r8, #100
 1269              	.LVL103:
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1270              		.loc 1 226 3 is_stmt 1 view .LVU362
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1271              		.loc 1 226 6 is_stmt 0 view .LVU363
ARM GAS  /tmp/ccsaDW2b.s 			page 34


 1272 018e 0B2B     		cmp	r3, #11
 1273 0190 52D9     		bls	.L82
 239:src/prt.c     **** 				arg -= LOCAL_REG_BASE;
 1274              		.loc 1 239 4 is_stmt 1 view .LVU364
 239:src/prt.c     **** 				arg -= LOCAL_REG_BASE;
 1275              		.loc 1 239 7 is_stmt 0 view .LVU365
 1276 0192 B8F16F0F 		cmp	r8, #111
 166:src/prt.c     **** 
 1277              		.loc 1 166 6 view .LVU366
 1278 0196 4FF00202 		mov	r2, #2
 239:src/prt.c     **** 				arg -= LOCAL_REG_BASE;
 1279              		.loc 1 239 7 view .LVU367
 1280 019a 04D9     		bls	.L84
 1281              	.LVL104:
 1282              	.L86:
 240:src/prt.c     **** 				*p++ = '.';
 1283              		.loc 1 240 5 is_stmt 1 view .LVU368
 241:src/prt.c     **** 			}
 1284              		.loc 1 241 10 is_stmt 0 view .LVU369
 1285 019c 2E23     		movs	r3, #46
 1286 019e 00F8013B 		strb	r3, [r0], #1
 240:src/prt.c     **** 				*p++ = '.';
 1287              		.loc 1 240 9 view .LVU370
 1288 01a2 A8F17008 		sub	r8, r8, #112
 1289              	.LVL105:
 241:src/prt.c     **** 			}
 1290              		.loc 1 241 5 is_stmt 1 view .LVU371
 1291              	.L84:
 243:src/prt.c     **** 		}
 1292              		.loc 1 243 4 view .LVU372
 1293 01a6 4146     		mov	r1, r8
 1294 01a8 FFF7FEFF 		bl	num_arg_0
 1295              	.LVL106:
 243:src/prt.c     **** 		}
 1296              		.loc 1 243 4 is_stmt 0 view .LVU373
 1297 01ac 2846     		mov	r0, r5
 1298 01ae 47E7     		b	.L63
 1299              	.LVL107:
 1300              	.L67:
 169:src/prt.c     **** 		ind = 0;
 1301              		.loc 1 169 12 is_stmt 1 view .LVU374
 169:src/prt.c     **** 		ind = 0;
 1302              		.loc 1 169 16 is_stmt 0 view .LVU375
 1303 01b0 08F18008 		add	r8, r8, #128
 1304              	.LVL108:
 169:src/prt.c     **** 		ind = 0;
 1305              		.loc 1 169 16 view .LVU376
 1306 01b4 B1E7     		b	.L152
 1307              	.LVL109:
 1308              	.L159:
 169:src/prt.c     **** 		ind = 0;
 1309              		.loc 1 169 16 view .LVU377
 1310              	.LBE82:
 1311              	.LBE115:
 1312              	.LBB116:
 1313              	.LBB73:
 1314              	.LBB71:
ARM GAS  /tmp/ccsaDW2b.s 			page 35


  63:src/prt.c     **** 		return sncopy(instr, p, NAME_LEN);
 1315              		.loc 1 63 3 is_stmt 1 view .LVU378
  64:src/prt.c     **** 	}
 1316              		.loc 1 64 3 view .LVU379
  63:src/prt.c     **** 		return sncopy(instr, p, NAME_LEN);
 1317              		.loc 1 63 15 is_stmt 0 view .LVU380
 1318 01b6 4049     		ldr	r1, .L162+28
  64:src/prt.c     **** 	}
 1319              		.loc 1 64 10 view .LVU381
 1320 01b8 2846     		mov	r0, r5
 1321 01ba 01EB0411 		add	r1, r1, r4, lsl #4
 1322 01be 0622     		movs	r2, #6
 1323              	.LBE71:
 1324              	.LBE73:
 1325              	.LBE116:
 1326              		.loc 1 286 1 view .LVU382
 1327 01c0 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1328              		.cfi_remember_state
 1329              		.cfi_restore 14
 1330              		.cfi_restore 10
 1331              		.cfi_restore 9
 1332              		.cfi_restore 8
 1333              		.cfi_restore 7
 1334              		.cfi_restore 6
 1335              		.cfi_restore 5
 1336              		.cfi_restore 4
 1337              		.cfi_def_cfa_offset 0
 1338              	.LVL110:
 1339              	.LBB117:
 1340              	.LBB74:
 1341              	.LBB72:
  64:src/prt.c     **** 	}
 1342              		.loc 1 64 10 view .LVU383
 1343 01c4 FFF7FEBF 		b	sncopy
 1344              	.LVL111:
 1345              	.L68:
 1346              		.cfi_restore_state
  64:src/prt.c     **** 	}
 1347              		.loc 1 64 10 view .LVU384
 1348              	.LBE72:
 1349              	.LBE74:
 1350              	.LBE117:
 1351              	.LBB118:
 1352              	.LBB83:
 174:src/prt.c     **** 	} 
 1353              		.loc 1 174 3 is_stmt 1 view .LVU385
 174:src/prt.c     **** 	} 
 1354              		.loc 1 174 4 is_stmt 0 view .LVU386
 1355 01c8 3C49     		ldr	r1, .L162+32
 1356 01ca 2846     		mov	r0, r5
 1357 01cc FFF7FEFF 		bl	scopy
 1358              	.LVL112:
 1359 01d0 0346     		mov	r3, r0
 1360 01d2 2846     		mov	r0, r5
 174:src/prt.c     **** 	} 
 1361              		.loc 1 174 41 view .LVU387
 1362 01d4 83F80080 		strb	r8, [r3]
ARM GAS  /tmp/ccsaDW2b.s 			page 36


 1363 01d8 32E7     		b	.L63
 1364              	.LVL113:
 1365              	.L74:
 184:src/prt.c     **** 
 1366              		.loc 1 184 3 view .LVU388
 1367 01da 862E     		cmp	r6, #134
 1368 01dc 31D1     		bne	.L77
 196:src/prt.c     **** 			for (n = 0; n < 4; n++) {
 1369              		.loc 1 196 4 is_stmt 1 view .LVU389
 196:src/prt.c     **** 			for (n = 0; n < 4; n++) {
 1370              		.loc 1 196 8 is_stmt 0 view .LVU390
 1371 01de 3849     		ldr	r1, .L162+36
 1372 01e0 2846     		mov	r0, r5
 1373 01e2 FFF7FEFF 		bl	scopy
 1374              	.LVL114:
 197:src/prt.c     **** 				*p++ = REGNAMES[arg & 3];
 1375              		.loc 1 197 4 is_stmt 1 view .LVU391
 197:src/prt.c     **** 				*p++ = REGNAMES[arg & 3];
 1376              		.loc 1 197 16 view .LVU392
 1377 01e6 3749     		ldr	r1, .L162+40
 1378 01e8 021D     		adds	r2, r0, #4
 1379              	.L79:
 198:src/prt.c     **** 				arg >>= 2;
 1380              		.loc 1 198 5 view .LVU393
 1381              	.LVL115:
 198:src/prt.c     **** 				arg >>= 2;
 1382              		.loc 1 198 25 is_stmt 0 view .LVU394
 1383 01ea 08F00303 		and	r3, r8, #3
 199:src/prt.c     **** 			}
 1384              		.loc 1 199 9 view .LVU395
 1385 01ee 4FEA9808 		lsr	r8, r8, #2
 1386              	.LVL116:
 198:src/prt.c     **** 				arg >>= 2;
 1387              		.loc 1 198 10 view .LVU396
 1388 01f2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1389 01f4 00F8013B 		strb	r3, [r0], #1
 1390              	.LVL117:
 199:src/prt.c     **** 			}
 1391              		.loc 1 199 5 is_stmt 1 view .LVU397
 197:src/prt.c     **** 				*p++ = REGNAMES[arg & 3];
 1392              		.loc 1 197 23 view .LVU398
 197:src/prt.c     **** 				*p++ = REGNAMES[arg & 3];
 1393              		.loc 1 197 16 view .LVU399
 197:src/prt.c     **** 				*p++ = REGNAMES[arg & 3];
 1394              		.loc 1 197 4 is_stmt 0 view .LVU400
 1395 01f8 9042     		cmp	r0, r2
 1396 01fa F6D1     		bne	.L79
 1397              	.LBE83:
 1398              	.LBE118:
 1399              	.LBB119:
 1400              	.LBB95:
 1401              	.LBB93:
 1402              	.LBB91:
  46:src/prt.c     **** }
 1403              		.loc 1 46 2 is_stmt 1 view .LVU401
 1404              	.LBE91:
 1405              	.LBE93:
ARM GAS  /tmp/ccsaDW2b.s 			page 37


  57:src/prt.c     **** 	return "???";
 1406              		.loc 1 57 10 is_stmt 0 view .LVU402
 1407 01fc 2846     		mov	r0, r5
 1408              	.LVL118:
  57:src/prt.c     **** 	return "???";
 1409              		.loc 1 57 10 view .LVU403
 1410 01fe 1FE7     		b	.L63
 1411              	.LVL119:
 1412              	.L160:
  57:src/prt.c     **** 	return "???";
 1413              		.loc 1 57 10 view .LVU404
 1414              	.LBE95:
 1415              	.LBE119:
 1416              	.LBB120:
 1417              	.LBB99:
  85:src/prt.c     **** 		return instr;
 1418              		.loc 1 85 3 is_stmt 1 view .LVU405
  85:src/prt.c     **** 		return instr;
 1419              		.loc 1 85 18 is_stmt 0 view .LVU406
 1420 0200 314A     		ldr	r2, .L162+44
  85:src/prt.c     **** 		return instr;
 1421              		.loc 1 85 10 view .LVU407
 1422 0202 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1423 0204 2B70     		strb	r3, [r5]
  86:src/prt.c     **** 	}
 1424              		.loc 1 86 3 is_stmt 1 view .LVU408
  86:src/prt.c     **** 	}
 1425              		.loc 1 86 10 is_stmt 0 view .LVU409
 1426 0206 2846     		mov	r0, r5
 1427 0208 1AE7     		b	.L63
 1428              	.LVL120:
 1429              	.L107:
  86:src/prt.c     **** 	}
 1430              		.loc 1 86 10 view .LVU410
 1431              	.LBE99:
 1432              	.LBE120:
 1433              	.LBB121:
 1434              	.LBB84:
 184:src/prt.c     **** 
 1435              		.loc 1 184 3 view .LVU411
 1436 020a 2846     		mov	r0, r5
 1437 020c 9BE7     		b	.L75
 1438              	.LVL121:
 1439              	.L80:
 214:src/prt.c     **** 				goto print_reg;
 1440              		.loc 1 214 5 is_stmt 1 view .LVU412
 1441              	.LBB77:
 1442              	.LBI77:
 140:src/prt.c     **** 	int lim = argcmds[cmd].lim;
 1443              		.loc 1 140 5 view .LVU413
 1444              	.LBB78:
 141:src/prt.c     **** 	if (lim < 10)
 1445              		.loc 1 141 2 view .LVU414
 141:src/prt.c     **** 	if (lim < 10)
 1446              		.loc 1 141 24 is_stmt 0 view .LVU415
 1447 020e 07EB0903 		add	r3, r7, r9
 141:src/prt.c     **** 	if (lim < 10)
ARM GAS  /tmp/ccsaDW2b.s 			page 38


 1448              		.loc 1 141 6 view .LVU416
 1449 0212 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1450              	.LVL122:
 142:src/prt.c     **** 		return 1;
 1451              		.loc 1 142 2 is_stmt 1 view .LVU417
 142:src/prt.c     **** 		return 1;
 1452              		.loc 1 142 5 is_stmt 0 view .LVU418
 1453 0214 092B     		cmp	r3, #9
 1454 0216 35DD     		ble	.L108
 144:src/prt.c     **** 		return 2;
 1455              		.loc 1 144 2 is_stmt 1 view .LVU419
 144:src/prt.c     **** 		return 2;
 1456              		.loc 1 144 5 is_stmt 0 view .LVU420
 1457 0218 632B     		cmp	r3, #99
 1458 021a 35DD     		ble	.L109
 1459 021c 3046     		mov	r0, r6
 1460 021e FFF7FEFF 		bl	num_arg_digits.part.0
 1461              	.LVL123:
 144:src/prt.c     **** 		return 2;
 1462              		.loc 1 144 5 view .LVU421
 1463 0222 0246     		mov	r2, r0
 1464              	.L81:
 144:src/prt.c     **** 		return 2;
 1465              		.loc 1 144 5 view .LVU422
 1466              	.LBE78:
 1467              	.LBE77:
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1468              		.loc 1 226 23 view .LVU423
 1469 0224 A8F16403 		sub	r3, r8, #100
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1470              		.loc 1 226 6 view .LVU424
 1471 0228 0B2B     		cmp	r3, #11
 208:src/prt.c     **** #endif
 1472              		.loc 1 208 6 view .LVU425
 1473 022a 04F10100 		add	r0, r4, #1
 1474              	.LVL124:
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1475              		.loc 1 226 3 is_stmt 1 view .LVU426
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1476              		.loc 1 226 6 is_stmt 0 view .LVU427
 1477 022e 2DD8     		bhi	.L161
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1478              		.loc 1 226 65 view .LVU428
 1479 0230 4F44     		add	r7, r7, r9
 1480 0232 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 226:src/prt.c     **** #ifdef SHOW_COMPLEX_REGS
 1481              		.loc 1 226 50 view .LVU429
 1482 0234 4907     		lsls	r1, r1, #29
 1483 0236 B6D5     		bpl	.L84
 1484              	.LVL125:
 1485              	.L82:
 236:src/prt.c     **** #endif
 1486              		.loc 1 236 4 is_stmt 1 view .LVU430
 236:src/prt.c     **** #endif
 1487              		.loc 1 236 17 is_stmt 0 view .LVU431
 1488 0238 224A     		ldr	r2, .L162+40
 236:src/prt.c     **** #endif
ARM GAS  /tmp/ccsaDW2b.s 			page 39


 1489              		.loc 1 236 7 view .LVU432
 1490 023a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1491 023c 0370     		strb	r3, [r0]
 1492 023e 2846     		mov	r0, r5
 1493 0240 FEE6     		b	.L63
 1494              	.LVL126:
 1495              	.L77:
 207:src/prt.c     **** 			*p++ = '\006';
 1496              		.loc 1 207 4 is_stmt 1 view .LVU433
 207:src/prt.c     **** 			*p++ = '\006';
 1497              		.loc 1 207 39 is_stmt 0 view .LVU434
 1498 0242 4FF0060A 		mov	r10, #6
 1499 0246 0AEB0611 		add	r1, r10, r6, lsl #4
 207:src/prt.c     **** 			*p++ = '\006';
 1500              		.loc 1 207 8 view .LVU435
 1501 024a 5346     		mov	r3, r10
 1502 024c 3944     		add	r1, r1, r7
 1503 024e 5246     		mov	r2, r10
 1504 0250 2846     		mov	r0, r5
 1505 0252 FFF7FEFF 		bl	sncopy_char
 1506              	.LVL127:
 210:src/prt.c     **** 				*p = arg - 100 + 'A';
 1507              		.loc 1 210 20 view .LVU436
 1508 0256 07EB0903 		add	r3, r7, r9
 207:src/prt.c     **** 			*p++ = '\006';
 1509              		.loc 1 207 8 view .LVU437
 1510 025a 0446     		mov	r4, r0
 1511              	.LVL128:
 208:src/prt.c     **** #endif
 1512              		.loc 1 208 4 is_stmt 1 view .LVU438
 210:src/prt.c     **** 				*p = arg - 100 + 'A';
 1513              		.loc 1 210 20 is_stmt 0 view .LVU439
 1514 025c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 208:src/prt.c     **** #endif
 1515              		.loc 1 208 9 view .LVU440
 1516 025e 80F800A0 		strb	r10, [r0]
 210:src/prt.c     **** 				*p = arg - 100 + 'A';
 1517              		.loc 1 210 4 is_stmt 1 view .LVU441
 210:src/prt.c     **** 				*p = arg - 100 + 'A';
 1518              		.loc 1 210 7 is_stmt 0 view .LVU442
 1519 0262 9806     		lsls	r0, r3, #26
 1520              	.LVL129:
 210:src/prt.c     **** 				*p = arg - 100 + 'A';
 1521              		.loc 1 210 7 view .LVU443
 1522 0264 D3D5     		bpl	.L80
 210:src/prt.c     **** 				*p = arg - 100 + 'A';
 1523              		.loc 1 210 27 view .LVU444
 1524 0266 B8F1630F 		cmp	r8, #99
 1525 026a D0D9     		bls	.L80
 211:src/prt.c     **** 			}
 1526              		.loc 1 211 5 is_stmt 1 view .LVU445
 211:src/prt.c     **** 			}
 1527              		.loc 1 211 20 is_stmt 0 view .LVU446
 1528 026c A8F12308 		sub	r8, r8, #35
 1529              	.LVL130:
 211:src/prt.c     **** 			}
 1530              		.loc 1 211 8 view .LVU447
ARM GAS  /tmp/ccsaDW2b.s 			page 40


 1531 0270 84F80180 		strb	r8, [r4, #1]
 1532 0274 2846     		mov	r0, r5
 1533 0276 E3E6     		b	.L63
 1534              	.LVL131:
 1535              	.L73:
 193:src/prt.c     **** 
 1536              		.loc 1 193 4 is_stmt 1 view .LVU448
 193:src/prt.c     **** 
 1537              		.loc 1 193 11 is_stmt 0 view .LVU449
 1538 0278 2946     		mov	r1, r5
 1539 027a 4046     		mov	r0, r8
 1540              	.LBE84:
 1541              	.LBE121:
 1542              		.loc 1 286 1 view .LVU450
 1543 027c BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1544              		.cfi_remember_state
 1545              		.cfi_restore 14
 1546              		.cfi_restore 10
 1547              		.cfi_restore 9
 1548              		.cfi_restore 8
 1549              		.cfi_restore 7
 1550              		.cfi_restore 6
 1551              		.cfi_restore 5
 1552              		.cfi_restore 4
 1553              		.cfi_def_cfa_offset 0
 1554              	.LVL132:
 1555              	.LBB122:
 1556              	.LBB85:
 193:src/prt.c     **** 
 1557              		.loc 1 193 11 view .LVU451
 1558 0280 FFF7FEBF 		b	prt_conv
 1559              	.LVL133:
 1560              	.L108:
 1561              		.cfi_restore_state
 1562              	.LBB80:
 1563              	.LBB79:
 143:src/prt.c     **** 	if (lim < 100)
 1564              		.loc 1 143 10 view .LVU452
 1565 0284 0122     		movs	r2, #1
 1566 0286 CDE7     		b	.L81
 1567              	.L109:
 145:src/prt.c     **** #ifdef COMPILE_CATALOGUES
 1568              		.loc 1 145 10 view .LVU453
 1569 0288 0222     		movs	r2, #2
 1570 028a CBE7     		b	.L81
 1571              	.LVL134:
 1572              	.L161:
 145:src/prt.c     **** #ifdef COMPILE_CATALOGUES
 1573              		.loc 1 145 10 view .LVU454
 1574              	.LBE79:
 1575              	.LBE80:
 239:src/prt.c     **** 				arg -= LOCAL_REG_BASE;
 1576              		.loc 1 239 4 is_stmt 1 view .LVU455
 239:src/prt.c     **** 				arg -= LOCAL_REG_BASE;
 1577              		.loc 1 239 7 is_stmt 0 view .LVU456
 1578 028c B8F16F0F 		cmp	r8, #111
 1579 0290 89D9     		bls	.L84
ARM GAS  /tmp/ccsaDW2b.s 			page 41


 239:src/prt.c     **** 				arg -= LOCAL_REG_BASE;
 1580              		.loc 1 239 53 view .LVU457
 1581 0292 4F44     		add	r7, r7, r9
 1582 0294 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 239:src/prt.c     **** 				arg -= LOCAL_REG_BASE;
 1583              		.loc 1 239 38 view .LVU458
 1584 0296 1B07     		lsls	r3, r3, #28
 1585 0298 85D5     		bpl	.L84
 1586 029a 7FE7     		b	.L86
 1587              	.L163:
 1588              		.align	2
 1589              	.L162:
 1590 029c 00000000 		.word	.LC0
 1591 02a0 00000000 		.word	dyfuncs
 1592 02a4 00000000 		.word	monfuncs
 1593 02a8 00000000 		.word	trifuncs
 1594 02ac 00000000 		.word	argcmds
 1595 02b0 04000000 		.word	.LC10
 1596 02b4 01000000 		.word	cnsts+1
 1597 02b8 05000000 		.word	niladics+5
 1598 02bc 00000000 		.word	.LC9
 1599 02c0 08000000 		.word	.LC11
 1600 02c4 0C000000 		.word	.LC12
 1601 02c8 00000000 		.word	.LANCHOR0
 1602              	.LBE85:
 1603              	.LBE122:
 1604              		.cfi_endproc
 1605              	.LFE13:
 1607              		.section	.text.catcmd,"ax",%progbits
 1608              		.align	1
 1609              		.p2align 2,,3
 1610              		.global	catcmd
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1614              		.fpu fpv4-sp-d16
 1616              	catcmd:
 1617              	.LVL135:
 1618              	.LFB14:
 287:src/prt.c     **** 
 288:src/prt.c     **** const char *catcmd(opcode op, char instr[16]) {
 1619              		.loc 1 288 47 is_stmt 1 view -0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 0
 1622              		@ frame_needed = 0, uses_anonymous_args = 0
 289:src/prt.c     **** 	unsigned int f;
 1623              		.loc 1 289 2 view .LVU460
 290:src/prt.c     **** 	const char *name;
 1624              		.loc 1 290 2 view .LVU461
 291:src/prt.c     **** 
 292:src/prt.c     **** 	xset(instr, '\0', 16);
 1625              		.loc 1 292 2 view .LVU462
 288:src/prt.c     **** 	unsigned int f;
 1626              		.loc 1 288 47 is_stmt 0 view .LVU463
 1627 0000 38B5     		push	{r3, r4, r5, lr}
 1628              		.cfi_def_cfa_offset 16
 1629              		.cfi_offset 3, -16
ARM GAS  /tmp/ccsaDW2b.s 			page 42


 1630              		.cfi_offset 4, -12
 1631              		.cfi_offset 5, -8
 1632              		.cfi_offset 14, -4
 1633              		.loc 1 292 2 view .LVU464
 1634 0002 1022     		movs	r2, #16
 288:src/prt.c     **** 	unsigned int f;
 1635              		.loc 1 288 47 view .LVU465
 1636 0004 0446     		mov	r4, r0
 1637 0006 0D46     		mov	r5, r1
 1638              		.loc 1 292 2 view .LVU466
 1639 0008 0846     		mov	r0, r1
 1640              	.LVL136:
 1641              		.loc 1 292 2 view .LVU467
 1642 000a 0021     		movs	r1, #0
 1643              	.LVL137:
 1644              		.loc 1 292 2 view .LVU468
 1645 000c FFF7FEFF 		bl	xset
 1646              	.LVL138:
 293:src/prt.c     **** 	if (isDBL(op)) {
 1647              		.loc 1 293 2 is_stmt 1 view .LVU469
 1648              		.loc 1 293 6 is_stmt 0 view .LVU470
 1649 0010 04F47043 		and	r3, r4, #61440
 1650              		.loc 1 293 5 view .LVU471
 1651 0014 B3F5704F 		cmp	r3, #61440
 1652 0018 4AD0     		beq	.L187
 294:src/prt.c     **** 		return prt_multi(op, instr);
 295:src/prt.c     **** 	} else if (isRARG(op)) {
 1653              		.loc 1 295 9 is_stmt 1 view .LVU472
 1654              		.loc 1 295 12 is_stmt 0 view .LVU473
 1655 001a 6BB1     		cbz	r3, .L166
 296:src/prt.c     **** 		f = RARG_CMD(op);
 1656              		.loc 1 296 3 is_stmt 1 view .LVU474
 1657              		.loc 1 296 7 is_stmt 0 view .LVU475
 1658 001c 230A     		lsrs	r3, r4, #8
 1659 001e 203B     		subs	r3, r3, #32
 1660 0020 DBB2     		uxtb	r3, r3
 1661              	.LVL139:
 297:src/prt.c     **** 		if (f < NUM_RARG) {
 1662              		.loc 1 297 3 is_stmt 1 view .LVU476
 1663              		.loc 1 297 6 is_stmt 0 view .LVU477
 1664 0022 8C2B     		cmp	r3, #140
 1665 0024 17D8     		bhi	.L185
 298:src/prt.c     **** 			if (f == RARG_CONV) {
 1666              		.loc 1 298 4 is_stmt 1 view .LVU478
 1667              		.loc 1 298 7 is_stmt 0 view .LVU479
 1668 0026 6C2B     		cmp	r3, #108
 1669 0028 52D0     		beq	.L188
 299:src/prt.c     **** 				return prt_conv(op & RARG_MASK, instr);
 300:src/prt.c     **** 			}
 301:src/prt.c     **** #if defined(INCLUDE_USER_CATALOGUE) && !defined(COMPILE_CATALOGUES)
 302:src/prt.c     **** 			else if (f == RARG_CONST || f == RARG_CONST_CMPLX || f == RARG_ALPHA) {
 303:src/prt.c     **** 				return prt(op, instr);
 304:src/prt.c     **** 			}
 305:src/prt.c     **** #else
 306:src/prt.c     **** 			else if (f == RARG_CONST || f == RARG_CONST_CMPLX) {
 1670              		.loc 1 306 9 is_stmt 1 view .LVU480
 1671              		.loc 1 306 12 is_stmt 0 view .LVU481
ARM GAS  /tmp/ccsaDW2b.s 			page 43


 1672 002a 012B     		cmp	r3, #1
 1673 002c 0FD9     		bls	.L189
 307:src/prt.c     **** 				const unsigned int arg = op & RARG_MASK;
 308:src/prt.c     **** 				if (arg < NUM_CONSTS)
 309:src/prt.c     **** 					return sncopy(instr, cnsts[arg].cname, CONST_NAMELEN);
 310:src/prt.c     **** 			}
 311:src/prt.c     **** 			else if (f == RARG_ALPHA) {
 1674              		.loc 1 311 9 is_stmt 1 view .LVU482
 1675              		.loc 1 311 12 is_stmt 0 view .LVU483
 1676 002e 242B     		cmp	r3, #36
 1677 0030 44D1     		bne	.L170
 312:src/prt.c     **** 				*instr = op & 0xff;
 1678              		.loc 1 312 5 is_stmt 1 view .LVU484
 1679              		.loc 1 312 12 is_stmt 0 view .LVU485
 1680 0032 2C70     		strb	r4, [r5]
 313:src/prt.c     **** 				return instr;
 1681              		.loc 1 313 5 is_stmt 1 view .LVU486
 1682              		.loc 1 313 12 is_stmt 0 view .LVU487
 1683 0034 2846     		mov	r0, r5
 314:src/prt.c     **** 			}
 315:src/prt.c     **** #endif
 316:src/prt.c     **** 			else {
 317:src/prt.c     **** 				return sncopy(instr, argcmds[f].cmd, NAME_LEN);
 318:src/prt.c     **** 			}
 319:src/prt.c     **** 		}
 320:src/prt.c     **** 	} else {
 321:src/prt.c     **** 		f = argKIND(op);
 322:src/prt.c     **** 		switch (opKIND(op)) {
 323:src/prt.c     **** 		default:
 324:src/prt.c     **** 			break;
 325:src/prt.c     **** 		case KIND_SPEC:
 326:src/prt.c     **** 			return prt_specials(f, instr);
 327:src/prt.c     **** 
 328:src/prt.c     **** 		case KIND_NIL:
 329:src/prt.c     **** 			if (f >= NUM_NILADIC) break;
 330:src/prt.c     **** 			name = niladics[f].nname;
 331:src/prt.c     **** 			goto copy;
 332:src/prt.c     **** 
 333:src/prt.c     **** 		case KIND_MON:
 334:src/prt.c     **** 		case KIND_CMON:
 335:src/prt.c     **** 			if (f >= NUM_MONADIC) break;
 336:src/prt.c     **** 			name = monfuncs[f].fname;
 337:src/prt.c     **** 			goto copy;
 338:src/prt.c     **** 
 339:src/prt.c     **** 		case KIND_DYA:
 340:src/prt.c     **** 		case KIND_CDYA:
 341:src/prt.c     **** 			if (f >= NUM_DYADIC) break;
 342:src/prt.c     **** 			name = dyfuncs[f].fname;
 343:src/prt.c     **** 			goto copy;
 344:src/prt.c     **** 
 345:src/prt.c     **** 		case KIND_TRI:
 346:src/prt.c     **** 			if (f >= NUM_TRIADIC) break;
 347:src/prt.c     **** 			name = trifuncs[f].fname;
 348:src/prt.c     **** 		copy:
 349:src/prt.c     **** 			return sncopy(instr, name, NAME_LEN);
 350:src/prt.c     **** 		}
 351:src/prt.c     **** 	}
ARM GAS  /tmp/ccsaDW2b.s 			page 44


 352:src/prt.c     **** 	return "???";
 353:src/prt.c     **** }
 1684              		.loc 1 353 1 view .LVU488
 1685 0036 38BD     		pop	{r3, r4, r5, pc}
 1686              	.LVL140:
 1687              	.L166:
 321:src/prt.c     **** 		switch (opKIND(op)) {
 1688              		.loc 1 321 3 is_stmt 1 view .LVU489
 1689 0038 C4F30723 		ubfx	r3, r4, #8, #8
 321:src/prt.c     **** 		switch (opKIND(op)) {
 1690              		.loc 1 321 5 is_stmt 0 view .LVU490
 1691 003c E0B2     		uxtb	r0, r4
 1692              	.LVL141:
 322:src/prt.c     **** 		default:
 1693              		.loc 1 322 3 is_stmt 1 view .LVU491
 1694 003e 062B     		cmp	r3, #6
 1695 0040 09D8     		bhi	.L185
 1696 0042 DFE803F0 		tbb	[pc, r3]
 1697              	.L172:
 1698 0046 20       		.byte	(.L176-.L172)/2
 1699 0047 1A       		.byte	(.L175-.L172)/2
 1700 0048 12       		.byte	(.L173-.L172)/2
 1701 0049 0A       		.byte	(.L171-.L172)/2
 1702 004a 28       		.byte	(.L174-.L172)/2
 1703 004b 12       		.byte	(.L173-.L172)/2
 1704 004c 0A       		.byte	(.L171-.L172)/2
 1705              	.LVL142:
 1706 004d 00       		.p2align 1
 1707              	.L189:
 1708              	.LBB123:
 307:src/prt.c     **** 				if (arg < NUM_CONSTS)
 1709              		.loc 1 307 5 view .LVU492
 307:src/prt.c     **** 				if (arg < NUM_CONSTS)
 1710              		.loc 1 307 24 is_stmt 0 view .LVU493
 1711 004e 04F07F04 		and	r4, r4, #127
 1712              	.LVL143:
 308:src/prt.c     **** 					return sncopy(instr, cnsts[arg].cname, CONST_NAMELEN);
 1713              		.loc 1 308 5 is_stmt 1 view .LVU494
 308:src/prt.c     **** 					return sncopy(instr, cnsts[arg].cname, CONST_NAMELEN);
 1714              		.loc 1 308 8 is_stmt 0 view .LVU495
 1715 0052 582C     		cmp	r4, #88
 1716 0054 48D9     		bls	.L190
 1717              	.LVL144:
 1718              	.L185:
 308:src/prt.c     **** 					return sncopy(instr, cnsts[arg].cname, CONST_NAMELEN);
 1719              		.loc 1 308 8 view .LVU496
 1720              	.LBE123:
 352:src/prt.c     **** }
 1721              		.loc 1 352 9 view .LVU497
 1722 0056 2A48     		ldr	r0, .L192
 1723              		.loc 1 353 1 view .LVU498
 1724 0058 38BD     		pop	{r3, r4, r5, pc}
 1725              	.LVL145:
 1726              	.L171:
 341:src/prt.c     **** 			name = dyfuncs[f].fname;
 1727              		.loc 1 341 4 is_stmt 1 view .LVU499
 341:src/prt.c     **** 			name = dyfuncs[f].fname;
ARM GAS  /tmp/ccsaDW2b.s 			page 45


 1728              		.loc 1 341 7 is_stmt 0 view .LVU500
 1729 005a 2E28     		cmp	r0, #46
 1730 005c FBD8     		bhi	.L185
 342:src/prt.c     **** 			goto copy;
 1731              		.loc 1 342 4 is_stmt 1 view .LVU501
 342:src/prt.c     **** 			goto copy;
 1732              		.loc 1 342 9 is_stmt 0 view .LVU502
 1733 005e 2949     		ldr	r1, .L192+4
 1734 0060 00EB4004 		add	r4, r0, r0, lsl #1
 1735              	.LVL146:
 342:src/prt.c     **** 			goto copy;
 1736              		.loc 1 342 9 view .LVU503
 1737 0064 01EBC401 		add	r1, r1, r4, lsl #3
 1738              	.LVL147:
 343:src/prt.c     **** 
 1739              		.loc 1 343 4 is_stmt 1 view .LVU504
 1740 0068 1CE0     		b	.L178
 1741              	.LVL148:
 1742              	.L173:
 335:src/prt.c     **** 			name = monfuncs[f].fname;
 1743              		.loc 1 335 4 view .LVU505
 335:src/prt.c     **** 			name = monfuncs[f].fname;
 1744              		.loc 1 335 7 is_stmt 0 view .LVU506
 1745 006a 9828     		cmp	r0, #152
 1746 006c F3D8     		bhi	.L185
 336:src/prt.c     **** 			goto copy;
 1747              		.loc 1 336 4 is_stmt 1 view .LVU507
 336:src/prt.c     **** 			goto copy;
 1748              		.loc 1 336 9 is_stmt 0 view .LVU508
 1749 006e 2649     		ldr	r1, .L192+8
 1750 0070 00EB4004 		add	r4, r0, r0, lsl #1
 1751              	.LVL149:
 336:src/prt.c     **** 			goto copy;
 1752              		.loc 1 336 9 view .LVU509
 1753 0074 01EBC401 		add	r1, r1, r4, lsl #3
 1754              	.LVL150:
 337:src/prt.c     **** 
 1755              		.loc 1 337 4 is_stmt 1 view .LVU510
 1756 0078 14E0     		b	.L178
 1757              	.LVL151:
 1758              	.L175:
 329:src/prt.c     **** 			name = niladics[f].nname;
 1759              		.loc 1 329 4 view .LVU511
 329:src/prt.c     **** 			name = niladics[f].nname;
 1760              		.loc 1 329 7 is_stmt 0 view .LVU512
 1761 007a BF28     		cmp	r0, #191
 1762 007c EBD8     		bhi	.L185
 330:src/prt.c     **** 			goto copy;
 1763              		.loc 1 330 4 is_stmt 1 view .LVU513
 330:src/prt.c     **** 			goto copy;
 1764              		.loc 1 330 9 is_stmt 0 view .LVU514
 1765 007e 2349     		ldr	r1, .L192+12
 1766 0080 01EB0011 		add	r1, r1, r0, lsl #4
 1767              	.LVL152:
 331:src/prt.c     **** 
 1768              		.loc 1 331 4 is_stmt 1 view .LVU515
 1769 0084 0EE0     		b	.L178
ARM GAS  /tmp/ccsaDW2b.s 			page 46


 1770              	.LVL153:
 1771              	.L176:
 326:src/prt.c     **** 
 1772              		.loc 1 326 4 view .LVU516
 1773              	.LBB124:
 1774              	.LBI124:
  80:src/prt.c     **** 	static const char digits[16] = "0123456789ABCDEF";
 1775              		.loc 1 80 20 view .LVU517
 1776              	.LBB125:
  81:src/prt.c     **** 	char cmp = '0';
 1777              		.loc 1 81 2 view .LVU518
  82:src/prt.c     **** 
 1778              		.loc 1 82 2 view .LVU519
  84:src/prt.c     **** 		*instr = digits[opm - OP_0];
 1779              		.loc 1 84 2 view .LVU520
  84:src/prt.c     **** 		*instr = digits[opm - OP_0];
 1780              		.loc 1 84 18 is_stmt 0 view .LVU521
 1781 0086 431F     		subs	r3, r0, #5
  84:src/prt.c     **** 		*instr = digits[opm - OP_0];
 1782              		.loc 1 84 5 view .LVU522
 1783 0088 0F2B     		cmp	r3, #15
 1784 008a 28D9     		bls	.L191
 1785 008c 2946     		mov	r1, r5
 1786              	.LBE125:
 1787              	.LBE124:
 1788              		.loc 1 353 1 view .LVU523
 1789 008e BDE83840 		pop	{r3, r4, r5, lr}
 1790              		.cfi_remember_state
 1791              		.cfi_restore 14
 1792              		.cfi_restore 5
 1793              		.cfi_restore 4
 1794              		.cfi_restore 3
 1795              		.cfi_def_cfa_offset 0
 1796              	.LVL154:
 1797              	.LBB128:
 1798              	.LBB126:
 1799              		.loc 1 353 1 view .LVU524
 1800 0092 FFF7FEBF 		b	prt_specials.part.0
 1801              	.LVL155:
 1802              	.L174:
 1803              		.cfi_restore_state
 1804              		.loc 1 353 1 view .LVU525
 1805              	.LBE126:
 1806              	.LBE128:
 346:src/prt.c     **** 			name = trifuncs[f].fname;
 1807              		.loc 1 346 4 is_stmt 1 view .LVU526
 346:src/prt.c     **** 			name = trifuncs[f].fname;
 1808              		.loc 1 346 7 is_stmt 0 view .LVU527
 1809 0096 0B28     		cmp	r0, #11
 1810 0098 DDD8     		bhi	.L185
 347:src/prt.c     **** 		copy:
 1811              		.loc 1 347 4 is_stmt 1 view .LVU528
 347:src/prt.c     **** 		copy:
 1812              		.loc 1 347 9 is_stmt 0 view .LVU529
 1813 009a 1D49     		ldr	r1, .L192+16
 1814 009c 00EB8004 		add	r4, r0, r0, lsl #2
 1815              	.LVL156:
ARM GAS  /tmp/ccsaDW2b.s 			page 47


 347:src/prt.c     **** 		copy:
 1816              		.loc 1 347 9 view .LVU530
 1817 00a0 01EB8401 		add	r1, r1, r4, lsl #2
 1818              	.LVL157:
 1819              	.L178:
 349:src/prt.c     **** 		}
 1820              		.loc 1 349 4 is_stmt 1 view .LVU531
 349:src/prt.c     **** 		}
 1821              		.loc 1 349 11 is_stmt 0 view .LVU532
 1822 00a4 2846     		mov	r0, r5
 1823              	.LVL158:
 349:src/prt.c     **** 		}
 1824              		.loc 1 349 11 view .LVU533
 1825 00a6 0622     		movs	r2, #6
 1826              		.loc 1 353 1 view .LVU534
 1827 00a8 BDE83840 		pop	{r3, r4, r5, lr}
 1828              		.cfi_remember_state
 1829              		.cfi_restore 14
 1830              		.cfi_restore 5
 1831              		.cfi_restore 4
 1832              		.cfi_restore 3
 1833              		.cfi_def_cfa_offset 0
 1834              	.LVL159:
 349:src/prt.c     **** 		}
 1835              		.loc 1 349 11 view .LVU535
 1836 00ac FFF7FEBF 		b	sncopy
 1837              	.LVL160:
 1838              	.L187:
 1839              		.cfi_restore_state
 294:src/prt.c     **** 	} else if (isRARG(op)) {
 1840              		.loc 1 294 3 is_stmt 1 view .LVU536
 294:src/prt.c     **** 	} else if (isRARG(op)) {
 1841              		.loc 1 294 10 is_stmt 0 view .LVU537
 1842 00b0 2946     		mov	r1, r5
 1843 00b2 2046     		mov	r0, r4
 1844              		.loc 1 353 1 view .LVU538
 1845 00b4 BDE83840 		pop	{r3, r4, r5, lr}
 1846              		.cfi_remember_state
 1847              		.cfi_restore 14
 1848              		.cfi_restore 5
 1849              		.cfi_restore 4
 1850              		.cfi_restore 3
 1851              		.cfi_def_cfa_offset 0
 1852              	.LVL161:
 294:src/prt.c     **** 	} else if (isRARG(op)) {
 1853              		.loc 1 294 10 view .LVU539
 1854 00b8 FFF7FEBF 		b	prt_multi
 1855              	.LVL162:
 1856              	.L170:
 1857              		.cfi_restore_state
 317:src/prt.c     **** 			}
 1858              		.loc 1 317 5 is_stmt 1 view .LVU540
 317:src/prt.c     **** 			}
 1859              		.loc 1 317 36 is_stmt 0 view .LVU541
 1860 00bc 1549     		ldr	r1, .L192+20
 1861 00be 0622     		movs	r2, #6
 1862 00c0 02EB0313 		add	r3, r2, r3, lsl #4
ARM GAS  /tmp/ccsaDW2b.s 			page 48


 1863              	.LVL163:
 317:src/prt.c     **** 			}
 1864              		.loc 1 317 12 view .LVU542
 1865 00c4 2846     		mov	r0, r5
 1866 00c6 1944     		add	r1, r1, r3
 1867              		.loc 1 353 1 view .LVU543
 1868 00c8 BDE83840 		pop	{r3, r4, r5, lr}
 1869              		.cfi_remember_state
 1870              		.cfi_restore 14
 1871              		.cfi_restore 5
 1872              		.cfi_restore 4
 1873              		.cfi_restore 3
 1874              		.cfi_def_cfa_offset 0
 1875              	.LVL164:
 317:src/prt.c     **** 			}
 1876              		.loc 1 317 12 view .LVU544
 1877 00cc FFF7FEBF 		b	sncopy
 1878              	.LVL165:
 1879              	.L188:
 1880              		.cfi_restore_state
 299:src/prt.c     **** 			}
 1881              		.loc 1 299 5 is_stmt 1 view .LVU545
 299:src/prt.c     **** 			}
 1882              		.loc 1 299 12 is_stmt 0 view .LVU546
 1883 00d0 2946     		mov	r1, r5
 1884 00d2 04F07F00 		and	r0, r4, #127
 1885              		.loc 1 353 1 view .LVU547
 1886 00d6 BDE83840 		pop	{r3, r4, r5, lr}
 1887              		.cfi_remember_state
 1888              		.cfi_restore 14
 1889              		.cfi_restore 5
 1890              		.cfi_restore 4
 1891              		.cfi_restore 3
 1892              		.cfi_def_cfa_offset 0
 1893              	.LVL166:
 299:src/prt.c     **** 			}
 1894              		.loc 1 299 12 view .LVU548
 1895 00da FFF7FEBF 		b	prt_conv
 1896              	.LVL167:
 1897              	.L191:
 1898              		.cfi_restore_state
 1899              	.LBB129:
 1900              	.LBB127:
  85:src/prt.c     **** 		return instr;
 1901              		.loc 1 85 3 is_stmt 1 view .LVU549
  85:src/prt.c     **** 		return instr;
 1902              		.loc 1 85 18 is_stmt 0 view .LVU550
 1903 00de 0E4A     		ldr	r2, .L192+24
  85:src/prt.c     **** 		return instr;
 1904              		.loc 1 85 10 view .LVU551
 1905 00e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1906 00e2 2B70     		strb	r3, [r5]
  86:src/prt.c     **** 	}
 1907              		.loc 1 86 3 is_stmt 1 view .LVU552
  86:src/prt.c     **** 	}
 1908              		.loc 1 86 10 is_stmt 0 view .LVU553
 1909 00e4 2846     		mov	r0, r5
ARM GAS  /tmp/ccsaDW2b.s 			page 49


 1910              	.LVL168:
  86:src/prt.c     **** 	}
 1911              		.loc 1 86 10 view .LVU554
 1912              	.LBE127:
 1913              	.LBE129:
 1914              		.loc 1 353 1 view .LVU555
 1915 00e6 38BD     		pop	{r3, r4, r5, pc}
 1916              	.LVL169:
 1917              	.L190:
 1918              	.LBB130:
 309:src/prt.c     **** 			}
 1919              		.loc 1 309 6 is_stmt 1 view .LVU556
 309:src/prt.c     **** 			}
 1920              		.loc 1 309 37 is_stmt 0 view .LVU557
 1921 00e8 0C49     		ldr	r1, .L192+28
 1922 00ea 04EB4404 		add	r4, r4, r4, lsl #1
 1923              	.LVL170:
 309:src/prt.c     **** 			}
 1924              		.loc 1 309 13 view .LVU558
 1925 00ee 2846     		mov	r0, r5
 1926 00f0 01EB8401 		add	r1, r1, r4, lsl #2
 1927 00f4 0422     		movs	r2, #4
 1928              	.LBE130:
 1929              		.loc 1 353 1 view .LVU559
 1930 00f6 BDE83840 		pop	{r3, r4, r5, lr}
 1931              		.cfi_restore 14
 1932              		.cfi_restore 5
 1933              		.cfi_restore 4
 1934              		.cfi_restore 3
 1935              		.cfi_def_cfa_offset 0
 1936              	.LVL171:
 1937              	.LBB131:
 309:src/prt.c     **** 			}
 1938              		.loc 1 309 13 view .LVU560
 1939 00fa FFF7FEBF 		b	sncopy
 1940              	.LVL172:
 1941              	.L193:
 309:src/prt.c     **** 			}
 1942              		.loc 1 309 13 view .LVU561
 1943 00fe 00BF     		.align	2
 1944              	.L192:
 1945 0100 00000000 		.word	.LC0
 1946 0104 0C000000 		.word	dyfuncs+12
 1947 0108 0C000000 		.word	monfuncs+12
 1948 010c 05000000 		.word	niladics+5
 1949 0110 08000000 		.word	trifuncs+8
 1950 0114 00000000 		.word	argcmds
 1951 0118 00000000 		.word	.LANCHOR0
 1952 011c 01000000 		.word	cnsts+1
 1953              	.LBE131:
 1954              		.cfi_endproc
 1955              	.LFE14:
 1957              		.section	.rodata.digits.8194,"a"
 1958              		.align	2
 1959              		.set	.LANCHOR0,. + 0
 1962              	digits.8194:
 1963 0000 30313233 		.ascii	"0123456789ABCDEF"
ARM GAS  /tmp/ccsaDW2b.s 			page 50


 1963      34353637 
 1963      38394142 
 1963      43444546 
 1964              		.text
 1965              	.Letext0:
 1966              		.file 2 "src/decNumber/decContext.h"
 1967              		.file 3 "src/decNumber/decNumber.h"
 1968              		.file 4 "src/decNumber/decimal64.h"
 1969              		.file 5 "src/decNumber/decimal128.h"
 1970              		.file 6 "src/xeq.h"
 1971              		.file 7 "src/data.h"
 1972              		.file 8 "src/storage.h"
 1973              		.file 9 "src/display.h"
 1974              		.file 10 "src/consts.h"
ARM GAS  /tmp/ccsaDW2b.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 prt.c
     /tmp/ccsaDW2b.s:18     .rodata.prt_multi.str1.4:0000000000000000 $d
     /tmp/ccsaDW2b.s:22     .text.prt_multi:0000000000000000 $t
     /tmp/ccsaDW2b.s:30     .text.prt_multi:0000000000000000 prt_multi
     /tmp/ccsaDW2b.s:139    .text.prt_multi:0000000000000050 $d
     /tmp/ccsaDW2b.s:145    .text.prt_conv:0000000000000000 $t
     /tmp/ccsaDW2b.s:152    .text.prt_conv:0000000000000000 prt_conv
     /tmp/ccsaDW2b.s:248    .text.prt_conv:000000000000005c $d
     /tmp/ccsaDW2b.s:254    .rodata.prt_specials.part.0.str1.4:0000000000000000 $d
     /tmp/ccsaDW2b.s:279    .text.prt_specials.part.0:0000000000000000 $t
     /tmp/ccsaDW2b.s:286    .text.prt_specials.part.0:0000000000000000 prt_specials.part.0
     /tmp/ccsaDW2b.s:365    .text.prt_specials.part.0:0000000000000032 $d
     /tmp/ccsaDW2b.s:622    .text.prt_specials.part.0:00000000000000e4 $d
     /tmp/ccsaDW2b.s:636    .text.num_arg_digits.part.0:0000000000000000 $t
     /tmp/ccsaDW2b.s:643    .text.num_arg_digits.part.0:0000000000000000 num_arg_digits.part.0
     /tmp/ccsaDW2b.s:685    .text.num_arg_digits.part.0:000000000000002c $d
     /tmp/ccsaDW2b.s:691    .text.num_arg_digits:0000000000000000 $t
     /tmp/ccsaDW2b.s:699    .text.num_arg_digits:0000000000000000 num_arg_digits
     /tmp/ccsaDW2b.s:740    .text.num_arg_digits:000000000000001c $d
     /tmp/ccsaDW2b.s:745    .rodata.prt.str1.4:0000000000000000 $d
     /tmp/ccsaDW2b.s:758    .text.prt:0000000000000000 $t
     /tmp/ccsaDW2b.s:766    .text.prt:0000000000000000 prt
     /tmp/ccsaDW2b.s:820    .text.prt:0000000000000030 $d
     /tmp/ccsaDW2b.s:1590   .text.prt:000000000000029c $d
     /tmp/ccsaDW2b.s:1608   .text.catcmd:0000000000000000 $t
     /tmp/ccsaDW2b.s:1616   .text.catcmd:0000000000000000 catcmd
     /tmp/ccsaDW2b.s:1698   .text.catcmd:0000000000000046 $d
     /tmp/ccsaDW2b.s:1945   .text.catcmd:0000000000000100 $d
     /tmp/ccsaDW2b.s:1958   .rodata.digits.8194:0000000000000000 $d
     /tmp/ccsaDW2b.s:1962   .rodata.digits.8194:0000000000000000 digits.8194
     /tmp/ccsaDW2b.s:408    .text.prt_specials.part.0:000000000000005d $d
     /tmp/ccsaDW2b.s:408    .text.prt_specials.part.0:000000000000005e $t
     /tmp/ccsaDW2b.s:827    .text.prt:0000000000000037 $d
     /tmp/ccsaDW2b.s:827    .text.prt:0000000000000038 $t
     /tmp/ccsaDW2b.s:1706   .text.catcmd:000000000000004d $d
     /tmp/ccsaDW2b.s:1706   .text.catcmd:000000000000004e $t

UNDEFINED SYMBOLS
sncopy_char
multicmds
sncopy
cnsts_conv
main_ram
StateWhileOn
argcmds
xset
scopy
num_arg_0
dyfuncs
monfuncs
trifuncs
cnsts
niladics

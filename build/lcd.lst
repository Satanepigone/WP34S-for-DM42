ARM GAS  /tmp/ccZMYPCV.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lcd.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.set_dot,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	set_dot
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	set_dot:
  28              	.LVL0:
  29              	.LFB0:
  30              		.file 1 "src/lcd.c"
   1:src/lcd.c     **** /* This file is part of 34S.
   2:src/lcd.c     ****  * 
   3:src/lcd.c     ****  * 34S is free software: you can redistribute it and/or modify
   4:src/lcd.c     ****  * it under the terms of the GNU General Public License as published by
   5:src/lcd.c     ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/lcd.c     ****  * (at your option) any later version.
   7:src/lcd.c     ****  * 
   8:src/lcd.c     ****  * 34S is distributed in the hope that it will be useful,
   9:src/lcd.c     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/lcd.c     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/lcd.c     ****  * GNU General Public License for more details.
  12:src/lcd.c     ****  * 
  13:src/lcd.c     ****  * You should have received a copy of the GNU General Public License
  14:src/lcd.c     ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/lcd.c     ****  */
  16:src/lcd.c     **** 
  17:src/lcd.c     **** #ifdef DM42
  18:src/lcd.c     **** #include "dmcp.h"
  19:src/lcd.c     **** #endif
  20:src/lcd.c     **** 
  21:src/lcd.c     **** #define DM42SAFE
  22:src/lcd.c     **** #include "lcd.h"
  23:src/lcd.c     **** #include "display.h"
  24:src/lcd.c     **** #include "xeq.h"
  25:src/lcd.c     **** 
  26:src/lcd.c     **** #if defined(INCLUDE_C_LOCK) || defined(INFRARED)
  27:src/lcd.c     **** #include "data.h"
  28:src/lcd.c     **** #include "storage.h"
ARM GAS  /tmp/ccZMYPCV.s 			page 2


  29:src/lcd.c     **** #endif
  30:src/lcd.c     **** 
  31:src/lcd.c     **** #undef DM42SAFE
  32:src/lcd.c     **** 
  33:src/lcd.c     **** #include "pretty.h"
  34:src/lcd.c     **** 
  35:src/lcd.c     **** 
  36:src/lcd.c     **** #if defined(USECURSES) || defined(DM42) // want this in DM42
  37:src/lcd.c     **** static unsigned char dots[TOP_DOTS];
  38:src/lcd.c     **** #endif
  39:src/lcd.c     **** 
  40:src/lcd.c     **** #if defined(USECURSES) || defined(DM42) // want this in DM42
  41:src/lcd.c     **** /* Some wrapper routines to set segments of the display */
  42:src/lcd.c     **** void set_dot(int n) {
  31              		.loc 1 42 21 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  43:src/lcd.c     ****         dots[n] = 1;
  36              		.loc 1 43 9 view .LVU1
  37              		.loc 1 43 17 is_stmt 0 view .LVU2
  38 0000 014B     		ldr	r3, .L3
  39 0002 0122     		movs	r2, #1
  40 0004 1A54     		strb	r2, [r3, r0]
  44:src/lcd.c     **** }
  41              		.loc 1 44 1 view .LVU3
  42 0006 7047     		bx	lr
  43              	.L4:
  44              		.align	2
  45              	.L3:
  46 0008 00000000 		.word	.LANCHOR0
  47              		.cfi_endproc
  48              	.LFE0:
  50              		.section	.text.clr_dot,"ax",%progbits
  51              		.align	1
  52              		.p2align 2,,3
  53              		.global	clr_dot
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	clr_dot:
  60              	.LVL1:
  61              	.LFB1:
  45:src/lcd.c     **** void clr_dot(int n) {
  62              		.loc 1 45 21 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  46:src/lcd.c     ****         dots[n] = 0;
  67              		.loc 1 46 9 view .LVU5
  68              		.loc 1 46 17 is_stmt 0 view .LVU6
  69 0000 014B     		ldr	r3, .L6
  70 0002 0022     		movs	r2, #0
  71 0004 1A54     		strb	r2, [r3, r0]
ARM GAS  /tmp/ccZMYPCV.s 			page 3


  47:src/lcd.c     **** }
  72              		.loc 1 47 1 view .LVU7
  73 0006 7047     		bx	lr
  74              	.L7:
  75              		.align	2
  76              	.L6:
  77 0008 00000000 		.word	.LANCHOR0
  78              		.cfi_endproc
  79              	.LFE1:
  81              		.section	.text.is_dot,"ax",%progbits
  82              		.align	1
  83              		.p2align 2,,3
  84              		.global	is_dot
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv4-sp-d16
  90              	is_dot:
  91              	.LVL2:
  92              	.LFB2:
  48:src/lcd.c     **** int is_dot(int n) {
  93              		.loc 1 48 19 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  49:src/lcd.c     **** 	return dots[n];
  98              		.loc 1 49 2 view .LVU9
  99              		.loc 1 49 13 is_stmt 0 view .LVU10
 100 0000 014B     		ldr	r3, .L9
  50:src/lcd.c     **** }
 101              		.loc 1 50 1 view .LVU11
 102 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 103              	.LVL3:
 104              		.loc 1 50 1 view .LVU12
 105 0004 7047     		bx	lr
 106              	.L10:
 107 0006 00BF     		.align	2
 108              	.L9:
 109 0008 00000000 		.word	.LANCHOR0
 110              		.cfi_endproc
 111              	.LFE2:
 113              		.section	.text.reset_disp,"ax",%progbits
 114              		.align	1
 115              		.p2align 2,,3
 116              		.global	reset_disp
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv4-sp-d16
 122              	reset_disp:
 123              	.LFB3:
  51:src/lcd.c     **** #endif
  52:src/lcd.c     **** 
  53:src/lcd.c     **** 
  54:src/lcd.c     **** void reset_disp(void) {
 124              		.loc 1 54 23 is_stmt 1 view -0
ARM GAS  /tmp/ccZMYPCV.s 			page 4


 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
  55:src/lcd.c     **** 	int rcl = is_dot(RCL_annun);
 128              		.loc 1 55 2 view .LVU14
 129              	.LVL4:
 130              	.LBB37:
 131              	.LBI37:
  48:src/lcd.c     **** 	return dots[n];
 132              		.loc 1 48 5 view .LVU15
 133              	.LBB38:
  49:src/lcd.c     **** }
 134              		.loc 1 49 2 view .LVU16
 135              	.LBE38:
 136              	.LBE37:
  54:src/lcd.c     **** 	int rcl = is_dot(RCL_annun);
 137              		.loc 1 54 23 is_stmt 0 view .LVU17
 138 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 139              		.cfi_def_cfa_offset 32
 140              		.cfi_offset 4, -32
 141              		.cfi_offset 5, -28
 142              		.cfi_offset 6, -24
 143              		.cfi_offset 7, -20
 144              		.cfi_offset 8, -16
 145              		.cfi_offset 9, -12
 146              		.cfi_offset 10, -8
 147              		.cfi_offset 14, -4
 148              	.LBB41:
 149              	.LBB39:
  49:src/lcd.c     **** }
 150              		.loc 1 49 13 view .LVU18
 151 0004 1848     		ldr	r0, .L19
 152              	.LBE39:
 153              	.LBE41:
 154              	.LBB42:
 155              	.LBB43:
 156 0006 6FF08303 		mvn	r3, #131
 157              	.LBE43:
 158              	.LBE42:
 159              	.LBB45:
 160              	.LBB40:
 161 000a 90F88A10 		ldrb	r1, [r0, #138]	@ zero_extendqisi2
 162              	.LVL5:
  49:src/lcd.c     **** }
 163              		.loc 1 49 13 view .LVU19
 164              	.LBE40:
 165              	.LBE45:
  56:src/lcd.c     **** 	int bat = is_dot(BATTERY);
 166              		.loc 1 56 2 is_stmt 1 view .LVU20
 167              	.LBB46:
 168              	.LBI46:
  48:src/lcd.c     **** 	return dots[n];
 169              		.loc 1 48 5 view .LVU21
 170              	.LBB47:
  49:src/lcd.c     **** }
 171              		.loc 1 49 2 view .LVU22
  49:src/lcd.c     **** }
ARM GAS  /tmp/ccZMYPCV.s 			page 5


 172              		.loc 1 49 13 is_stmt 0 view .LVU23
 173 000e 90F887A0 		ldrb	r10, [r0, #135]	@ zero_extendqisi2
 174              	.LVL6:
  49:src/lcd.c     **** }
 175              		.loc 1 49 13 view .LVU24
 176              	.LBE47:
 177              	.LBE46:
  57:src/lcd.c     **** 	int leq = is_dot(LIT_EQ);
 178              		.loc 1 57 2 is_stmt 1 view .LVU25
 179              	.LBB48:
 180              	.LBI48:
  48:src/lcd.c     **** 	return dots[n];
 181              		.loc 1 48 5 view .LVU26
 182              	.LBB49:
  49:src/lcd.c     **** }
 183              		.loc 1 49 2 view .LVU27
  49:src/lcd.c     **** }
 184              		.loc 1 49 13 is_stmt 0 view .LVU28
 185 0012 90F88490 		ldrb	r9, [r0, #132]	@ zero_extendqisi2
 186              	.LVL7:
  49:src/lcd.c     **** }
 187              		.loc 1 49 13 view .LVU29
 188              	.LBE49:
 189              	.LBE48:
  58:src/lcd.c     **** 	int rpn = is_dot(RPN);
 190              		.loc 1 58 2 is_stmt 1 view .LVU30
 191              	.LBB50:
 192              	.LBI42:
  48:src/lcd.c     **** 	return dots[n];
 193              		.loc 1 48 5 view .LVU31
 194              	.LBB44:
  49:src/lcd.c     **** }
 195              		.loc 1 49 2 view .LVU32
  49:src/lcd.c     **** }
 196              		.loc 1 49 13 is_stmt 0 view .LVU33
 197 0016 90F88D80 		ldrb	r8, [r0, #141]	@ zero_extendqisi2
 198              	.LVL8:
  49:src/lcd.c     **** }
 199              		.loc 1 49 13 view .LVU34
 200              	.LBE44:
 201              	.LBE50:
  59:src/lcd.c     **** 	int i;
 202              		.loc 1 59 2 is_stmt 1 view .LVU35
  60:src/lcd.c     ****         for (i=0; i<TOP_DOTS; i++)
 203              		.loc 1 60 9 view .LVU36
 204              		.loc 1 60 19 view .LVU37
  61:src/lcd.c     **** 		if (i != RCL_annun && i != BATTERY && i != LIT_EQ )
 205              		.loc 1 61 38 is_stmt 0 view .LVU38
 206 001a 4925     		movs	r5, #73
 207              	.LBB51:
 208              	.LBB52:
  46:src/lcd.c     **** }
 209              		.loc 1 46 17 view .LVU39
 210 001c 0026     		movs	r6, #0
 211              	.LBE52:
 212              	.LBE51:
  60:src/lcd.c     ****         for (i=0; i<TOP_DOTS; i++)
ARM GAS  /tmp/ccZMYPCV.s 			page 6


 213              		.loc 1 60 9 view .LVU40
 214 001e 40F20B17 		movw	r7, #267
 215 0022 06E0     		b	.L16
 216              	.LVL9:
 217              	.L12:
  62:src/lcd.c     **** 			clr_dot(i);
 218              		.loc 1 62 4 is_stmt 1 discriminator 2 view .LVU41
 219              	.LBB59:
 220              	.LBI51:
  45:src/lcd.c     ****         dots[n] = 0;
 221              		.loc 1 45 6 discriminator 2 view .LVU42
 222              	.LBB53:
  46:src/lcd.c     **** }
 223              		.loc 1 46 9 discriminator 2 view .LVU43
 224              	.LBE53:
 225              	.LBE59:
  61:src/lcd.c     **** 			clr_dot(i);
 226              		.loc 1 61 38 is_stmt 0 discriminator 2 view .LVU44
 227 0024 E407     		lsls	r4, r4, #31
 228              	.LBB60:
 229              	.LBB54:
  46:src/lcd.c     **** }
 230              		.loc 1 46 17 discriminator 2 view .LVU45
 231 0026 00EB0302 		add	r2, r0, r3
 232              	.LBE54:
 233              	.LBE60:
  61:src/lcd.c     **** 			clr_dot(i);
 234              		.loc 1 61 38 discriminator 2 view .LVU46
 235 002a 01D4     		bmi	.L13
 236              	.LBB61:
 237              	.LBB55:
  46:src/lcd.c     **** }
 238              		.loc 1 46 17 view .LVU47
 239 002c 82F88460 		strb	r6, [r2, #132]
 240              	.LVL10:
  46:src/lcd.c     **** }
 241              		.loc 1 46 17 view .LVU48
 242              	.LBE55:
 243              	.LBE61:
  60:src/lcd.c     **** 		if (i != RCL_annun && i != BATTERY && i != LIT_EQ )
 244              		.loc 1 60 31 is_stmt 1 view .LVU49
  60:src/lcd.c     **** 		if (i != RCL_annun && i != BATTERY && i != LIT_EQ )
 245              		.loc 1 60 19 view .LVU50
 246              	.L13:
  60:src/lcd.c     **** 		if (i != RCL_annun && i != BATTERY && i != LIT_EQ )
 247              		.loc 1 60 19 is_stmt 0 view .LVU51
 248 0030 0133     		adds	r3, r3, #1
 249              	.L16:
 250              	.LVL11:
  61:src/lcd.c     **** 			clr_dot(i);
 251              		.loc 1 61 3 is_stmt 1 view .LVU52
 252              		.loc 1 62 4 view .LVU53
 253              	.LBB62:
  45:src/lcd.c     ****         dots[n] = 0;
 254              		.loc 1 45 6 view .LVU54
 255              	.LBB56:
  46:src/lcd.c     **** }
ARM GAS  /tmp/ccZMYPCV.s 			page 7


 256              		.loc 1 46 9 view .LVU55
 257              	.LBE56:
 258              	.LBE62:
  61:src/lcd.c     **** 			clr_dot(i);
 259              		.loc 1 61 38 is_stmt 0 view .LVU56
 260 0032 062B     		cmp	r3, #6
 261              	.LBB63:
 262              	.LBB57:
  46:src/lcd.c     **** }
 263              		.loc 1 46 17 view .LVU57
 264 0034 00EB0302 		add	r2, r0, r3
 265              	.LBE57:
 266              	.LBE63:
  61:src/lcd.c     **** 			clr_dot(i);
 267              		.loc 1 61 38 view .LVU58
 268 0038 25FA03F4 		lsr	r4, r5, r3
 269 003c F2D9     		bls	.L12
  60:src/lcd.c     **** 		if (i != RCL_annun && i != BATTERY && i != LIT_EQ )
 270              		.loc 1 60 9 view .LVU59
 271 003e BB42     		cmp	r3, r7
 272              	.LBB64:
 273              	.LBB58:
  46:src/lcd.c     **** }
 274              		.loc 1 46 17 view .LVU60
 275 0040 82F88460 		strb	r6, [r2, #132]
 276              	.LVL12:
  46:src/lcd.c     **** }
 277              		.loc 1 46 17 view .LVU61
 278              	.LBE58:
 279              	.LBE64:
  60:src/lcd.c     **** 		if (i != RCL_annun && i != BATTERY && i != LIT_EQ )
 280              		.loc 1 60 31 is_stmt 1 view .LVU62
  60:src/lcd.c     **** 		if (i != RCL_annun && i != BATTERY && i != LIT_EQ )
 281              		.loc 1 60 19 view .LVU63
  60:src/lcd.c     **** 		if (i != RCL_annun && i != BATTERY && i != LIT_EQ )
 282              		.loc 1 60 9 is_stmt 0 view .LVU64
 283 0044 F4D1     		bne	.L13
  63:src/lcd.c     **** 	dot(RCL_annun, rcl);
 284              		.loc 1 63 2 is_stmt 1 view .LVU65
 285 0046 8A20     		movs	r0, #138
 286 0048 FFF7FEFF 		bl	dot
 287              	.LVL13:
  64:src/lcd.c     **** 	dot(BATTERY, bat);
 288              		.loc 1 64 2 view .LVU66
 289 004c 5146     		mov	r1, r10
 290 004e 8720     		movs	r0, #135
 291 0050 FFF7FEFF 		bl	dot
 292              	.LVL14:
  65:src/lcd.c     **** 	dot(LIT_EQ, leq);
 293              		.loc 1 65 2 view .LVU67
 294 0054 4946     		mov	r1, r9
 295 0056 8420     		movs	r0, #132
 296 0058 FFF7FEFF 		bl	dot
 297              	.LVL15:
  66:src/lcd.c     **** 	dot(RPN, rpn);
 298              		.loc 1 66 2 view .LVU68
 299 005c 4146     		mov	r1, r8
ARM GAS  /tmp/ccZMYPCV.s 			page 8


 300 005e 8D20     		movs	r0, #141
  67:src/lcd.c     **** }
 301              		.loc 1 67 1 is_stmt 0 view .LVU69
 302 0060 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 303              		.cfi_restore 14
 304              		.cfi_restore 10
 305              		.cfi_restore 9
 306              		.cfi_restore 8
 307              		.cfi_restore 7
 308              		.cfi_restore 6
 309              		.cfi_restore 5
 310              		.cfi_restore 4
 311              		.cfi_def_cfa_offset 0
 312              	.LVL16:
  66:src/lcd.c     **** 	dot(RPN, rpn);
 313              		.loc 1 66 2 view .LVU70
 314 0064 FFF7FEBF 		b	dot
 315              	.LVL17:
 316              	.L20:
  66:src/lcd.c     **** 	dot(RPN, rpn);
 317              		.loc 1 66 2 view .LVU71
 318              		.align	2
 319              	.L19:
 320 0068 00000000 		.word	.LANCHOR0
 321              		.cfi_endproc
 322              	.LFE3:
 324              		.section	.text.left_side,"ax",%progbits
 325              		.align	1
 326              		.p2align 2,,3
 327              		.global	left_side
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv4-sp-d16
 333              	left_side:
 334              	.LVL18:
 335              	.LFB4:
  68:src/lcd.c     **** 
  69:src/lcd.c     **** #if defined(DM42)
  70:src/lcd.c     ****   #define setBlackPixel(x, y)                bitblt24(x, 1, y, 1, BLT_OR,   BLT_NONE)
  71:src/lcd.c     ****   #define setWhitePixel(x, y)                bitblt24(x, 1, y, 1, BLT_ANDN, BLT_NONE)
  72:src/lcd.c     **** 
  73:src/lcd.c     **** void left_side (int i, int j) { //i - xleft reference; j - ytop reference
 336              		.loc 1 73 31 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
  74:src/lcd.c     ****   lcd_fill_rect (i+2, j+11, 1, 9, 0xff);
 340              		.loc 1 74 3 view .LVU73
  73:src/lcd.c     ****   lcd_fill_rect (i+2, j+11, 1, 9, 0xff);
 341              		.loc 1 73 31 is_stmt 0 view .LVU74
 342 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 343              		.cfi_def_cfa_offset 24
 344              		.cfi_offset 4, -24
 345              		.cfi_offset 5, -20
 346              		.cfi_offset 6, -16
 347              		.cfi_offset 7, -12
ARM GAS  /tmp/ccZMYPCV.s 			page 9


 348              		.cfi_offset 8, -8
 349              		.cfi_offset 14, -4
 350 0004 82B0     		sub	sp, sp, #8
 351              		.cfi_def_cfa_offset 32
 352              		.loc 1 74 3 view .LVU75
 353 0006 FF27     		movs	r7, #255
  73:src/lcd.c     ****   lcd_fill_rect (i+2, j+11, 1, 9, 0xff);
 354              		.loc 1 73 31 view .LVU76
 355 0008 0D46     		mov	r5, r1
 356              		.loc 1 74 3 view .LVU77
 357 000a 124E     		ldr	r6, .L23
 358 000c 0097     		str	r7, [sp]
  73:src/lcd.c     ****   lcd_fill_rect (i+2, j+11, 1, 9, 0xff);
 359              		.loc 1 73 31 view .LVU78
 360 000e 0446     		mov	r4, r0
  75:src/lcd.c     ****   lcd_fill_rect (i+3, j+2, 1, 18, 0xff);
 361              		.loc 1 75 24 view .LVU79
 362 0010 05F10208 		add	r8, r5, #2
  74:src/lcd.c     ****   lcd_fill_rect (i+2, j+11, 1, 9, 0xff);
 363              		.loc 1 74 3 view .LVU80
 364 0014 0B31     		adds	r1, r1, #11
 365              	.LVL19:
  74:src/lcd.c     ****   lcd_fill_rect (i+2, j+11, 1, 9, 0xff);
 366              		.loc 1 74 3 view .LVU81
 367 0016 0230     		adds	r0, r0, #2
 368              	.LVL20:
  74:src/lcd.c     ****   lcd_fill_rect (i+2, j+11, 1, 9, 0xff);
 369              		.loc 1 74 3 view .LVU82
 370 0018 0923     		movs	r3, #9
 371 001a 0122     		movs	r2, #1
 372 001c B047     		blx	r6
 373              	.LVL21:
 374              		.loc 1 75 3 is_stmt 1 view .LVU83
 375 001e 4146     		mov	r1, r8
 376 0020 E01C     		adds	r0, r4, #3
 377 0022 0097     		str	r7, [sp]
 378 0024 1223     		movs	r3, #18
 379 0026 0122     		movs	r2, #1
 380 0028 B047     		blx	r6
 381              	.LVL22:
  76:src/lcd.c     ****   lcd_fill_rect (i+4, j+2, 1, 17, 0xff);
 382              		.loc 1 76 3 view .LVU84
 383 002a 4146     		mov	r1, r8
 384 002c 201D     		adds	r0, r4, #4
 385 002e 0097     		str	r7, [sp]
 386 0030 1123     		movs	r3, #17
 387 0032 0122     		movs	r2, #1
 388 0034 B047     		blx	r6
 389              	.LVL23:
  77:src/lcd.c     ****   lcd_fill_rect (i+5, j+3, 1, 15, 0xff);
 390              		.loc 1 77 3 view .LVU85
 391 0036 E91C     		adds	r1, r5, #3
 392 0038 601D     		adds	r0, r4, #5
 393 003a 0097     		str	r7, [sp]
 394 003c 0F23     		movs	r3, #15
 395 003e 0122     		movs	r2, #1
 396 0040 B047     		blx	r6
ARM GAS  /tmp/ccZMYPCV.s 			page 10


 397              	.LVL24:
  78:src/lcd.c     ****   lcd_fill_rect (i+6, j+4, 1, 7, 0xff);
 398              		.loc 1 78 3 view .LVU86
 399 0042 291D     		adds	r1, r5, #4
 400 0044 A01D     		adds	r0, r4, #6
 401 0046 0097     		str	r7, [sp]
 402 0048 0723     		movs	r3, #7
 403 004a 0122     		movs	r2, #1
 404 004c B047     		blx	r6
 405              	.LVL25:
  79:src/lcd.c     **** }
 406              		.loc 1 79 1 is_stmt 0 view .LVU87
 407 004e 02B0     		add	sp, sp, #8
 408              		.cfi_def_cfa_offset 24
 409              		@ sp needed
 410 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 411              	.LVL26:
 412              	.L24:
 413              		.loc 1 79 1 view .LVU88
 414              		.align	2
 415              	.L23:
 416 0054 3D020008 		.word	134218301
 417              		.cfi_endproc
 418              	.LFE4:
 420              		.section	.text.left_side_top,"ax",%progbits
 421              		.align	1
 422              		.p2align 2,,3
 423              		.global	left_side_top
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu fpv4-sp-d16
 429              	left_side_top:
 430              	.LVL27:
 431              	.LFB5:
  80:src/lcd.c     **** void left_side_top (int i, int j) {
 432              		.loc 1 80 35 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
  81:src/lcd.c     ****   left_side(i, j);
 437              		.loc 1 81 3 view .LVU90
 438 0000 FFF7FEBF 		b	left_side
 439              	.LVL28:
 440              		.loc 1 81 3 is_stmt 0 view .LVU91
 441              		.cfi_endproc
 442              	.LFE5:
 444              		.section	.text.left_side_bottom,"ax",%progbits
 445              		.align	1
 446              		.p2align 2,,3
 447              		.global	left_side_bottom
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu fpv4-sp-d16
 453              	left_side_bottom:
ARM GAS  /tmp/ccZMYPCV.s 			page 11


 454              	.LVL29:
 455              	.LFB6:
  82:src/lcd.c     **** }
  83:src/lcd.c     **** void left_side_bottom (int i, int j) {
 456              		.loc 1 83 38 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
  84:src/lcd.c     ****   left_side(i-2, j+19);
 461              		.loc 1 84 3 view .LVU93
 462 0000 0238     		subs	r0, r0, #2
 463              	.LVL30:
 464              		.loc 1 84 3 is_stmt 0 view .LVU94
 465 0002 1331     		adds	r1, r1, #19
 466              	.LVL31:
 467              		.loc 1 84 3 view .LVU95
 468 0004 FFF7FEBF 		b	left_side
 469              	.LVL32:
 470              		.loc 1 84 3 view .LVU96
 471              		.cfi_endproc
 472              	.LFE6:
 474              		.section	.text.right_side,"ax",%progbits
 475              		.align	1
 476              		.p2align 2,,3
 477              		.global	right_side
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu fpv4-sp-d16
 483              	right_side:
 484              	.LVL33:
 485              	.LFB7:
  85:src/lcd.c     **** }
  86:src/lcd.c     **** void right_side (int i, int j) {
 486              		.loc 1 86 32 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
  87:src/lcd.c     ****   lcd_fill_rect (i+16, j+11, 1, 7, 0xff);
 490              		.loc 1 87 3 view .LVU98
  86:src/lcd.c     ****   lcd_fill_rect (i+16, j+11, 1, 7, 0xff);
 491              		.loc 1 86 32 is_stmt 0 view .LVU99
 492 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 493              		.cfi_def_cfa_offset 24
 494              		.cfi_offset 4, -24
 495              		.cfi_offset 5, -20
 496              		.cfi_offset 6, -16
 497              		.cfi_offset 7, -12
 498              		.cfi_offset 8, -8
 499              		.cfi_offset 14, -4
 500 0004 82B0     		sub	sp, sp, #8
 501              		.cfi_def_cfa_offset 32
 502              		.loc 1 87 3 view .LVU100
 503 0006 FF27     		movs	r7, #255
 504 0008 144E     		ldr	r6, .L29
 505 000a 0097     		str	r7, [sp]
ARM GAS  /tmp/ccZMYPCV.s 			page 12


  86:src/lcd.c     ****   lcd_fill_rect (i+16, j+11, 1, 7, 0xff);
 506              		.loc 1 86 32 view .LVU101
 507 000c 0446     		mov	r4, r0
 508 000e 0D46     		mov	r5, r1
 509              		.loc 1 87 3 view .LVU102
 510 0010 1030     		adds	r0, r0, #16
 511              	.LVL34:
 512              		.loc 1 87 3 view .LVU103
 513 0012 0B31     		adds	r1, r1, #11
 514              	.LVL35:
 515              		.loc 1 87 3 view .LVU104
 516 0014 0723     		movs	r3, #7
 517 0016 0122     		movs	r2, #1
 518 0018 B047     		blx	r6
 519              	.LVL36:
  88:src/lcd.c     ****   lcd_fill_rect (i+17, j+4, 1, 15, 0xff);
 520              		.loc 1 88 3 is_stmt 1 view .LVU105
 521 001a 291D     		adds	r1, r5, #4
 522 001c 04F11100 		add	r0, r4, #17
 523 0020 0097     		str	r7, [sp]
 524 0022 0F23     		movs	r3, #15
 525 0024 0122     		movs	r2, #1
 526 0026 B047     		blx	r6
 527              	.LVL37:
  89:src/lcd.c     ****   lcd_fill_rect (i+18, j+3, 1, 17, 0xff);
 528              		.loc 1 89 3 view .LVU106
  90:src/lcd.c     ****   lcd_fill_rect (i+19, j+2, 1, 18, 0xff);
 529              		.loc 1 90 25 is_stmt 0 view .LVU107
 530 0028 05F10208 		add	r8, r5, #2
  89:src/lcd.c     ****   lcd_fill_rect (i+18, j+3, 1, 17, 0xff);
 531              		.loc 1 89 3 view .LVU108
 532 002c E91C     		adds	r1, r5, #3
 533 002e 04F11200 		add	r0, r4, #18
 534 0032 0097     		str	r7, [sp]
 535 0034 1123     		movs	r3, #17
 536 0036 0122     		movs	r2, #1
 537 0038 B047     		blx	r6
 538              	.LVL38:
 539              		.loc 1 90 3 is_stmt 1 view .LVU109
 540 003a 4146     		mov	r1, r8
 541 003c 04F11300 		add	r0, r4, #19
 542 0040 0097     		str	r7, [sp]
 543 0042 1223     		movs	r3, #18
 544 0044 0122     		movs	r2, #1
 545 0046 B047     		blx	r6
 546              	.LVL39:
  91:src/lcd.c     ****   lcd_fill_rect (i+20, j+2, 1, 9, 0xff);
 547              		.loc 1 91 3 view .LVU110
 548 0048 4146     		mov	r1, r8
 549 004a 04F11400 		add	r0, r4, #20
 550 004e 0097     		str	r7, [sp]
 551 0050 0923     		movs	r3, #9
 552 0052 0122     		movs	r2, #1
 553 0054 B047     		blx	r6
 554              	.LVL40:
  92:src/lcd.c     **** }
 555              		.loc 1 92 1 is_stmt 0 view .LVU111
ARM GAS  /tmp/ccZMYPCV.s 			page 13


 556 0056 02B0     		add	sp, sp, #8
 557              		.cfi_def_cfa_offset 24
 558              		@ sp needed
 559 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 560              	.LVL41:
 561              	.L30:
 562              		.loc 1 92 1 view .LVU112
 563              		.align	2
 564              	.L29:
 565 005c 3D020008 		.word	134218301
 566              		.cfi_endproc
 567              	.LFE7:
 569              		.section	.text.right_side_top,"ax",%progbits
 570              		.align	1
 571              		.p2align 2,,3
 572              		.global	right_side_top
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	right_side_top:
 579              	.LVL42:
 580              	.LFB8:
  93:src/lcd.c     **** void right_side_top (int i, int j) {
 581              		.loc 1 93 36 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
  94:src/lcd.c     ****   right_side(i, j);
 586              		.loc 1 94 3 view .LVU114
 587 0000 FFF7FEBF 		b	right_side
 588              	.LVL43:
 589              		.loc 1 94 3 is_stmt 0 view .LVU115
 590              		.cfi_endproc
 591              	.LFE8:
 593              		.section	.text.right_side_bottom,"ax",%progbits
 594              		.align	1
 595              		.p2align 2,,3
 596              		.global	right_side_bottom
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu fpv4-sp-d16
 602              	right_side_bottom:
 603              	.LVL44:
 604              	.LFB9:
  95:src/lcd.c     **** }
  96:src/lcd.c     **** void right_side_bottom (int i, int j) {
 605              		.loc 1 96 39 is_stmt 1 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
  97:src/lcd.c     ****   right_side(i-2, j+19);
 610              		.loc 1 97 3 view .LVU117
 611 0000 0238     		subs	r0, r0, #2
ARM GAS  /tmp/ccZMYPCV.s 			page 14


 612              	.LVL45:
 613              		.loc 1 97 3 is_stmt 0 view .LVU118
 614 0002 1331     		adds	r1, r1, #19
 615              	.LVL46:
 616              		.loc 1 97 3 view .LVU119
 617 0004 FFF7FEBF 		b	right_side
 618              	.LVL47:
 619              		.loc 1 97 3 view .LVU120
 620              		.cfi_endproc
 621              	.LFE9:
 623              		.section	.text.top,"ax",%progbits
 624              		.align	1
 625              		.p2align 2,,3
 626              		.global	top
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 630              		.fpu fpv4-sp-d16
 632              	top:
 633              	.LVL48:
 634              	.LFB10:
  98:src/lcd.c     **** }
  99:src/lcd.c     **** void top (int i, int j) {
 635              		.loc 1 99 25 is_stmt 1 view -0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 100:src/lcd.c     ****   lcd_fill_rect ( i+5, j, 14, 1, 0xff );
 639              		.loc 1 100 3 view .LVU122
  99:src/lcd.c     ****   lcd_fill_rect ( i+5, j, 14, 1, 0xff );
 640              		.loc 1 99 25 is_stmt 0 view .LVU123
 641 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 642              		.cfi_def_cfa_offset 20
 643              		.cfi_offset 4, -20
 644              		.cfi_offset 5, -16
 645              		.cfi_offset 6, -12
 646              		.cfi_offset 7, -8
 647              		.cfi_offset 14, -4
 648 0002 83B0     		sub	sp, sp, #12
 649              		.cfi_def_cfa_offset 32
 650              		.loc 1 100 3 view .LVU124
 651 0004 FF27     		movs	r7, #255
 652 0006 0E4E     		ldr	r6, .L35
 653 0008 0097     		str	r7, [sp]
  99:src/lcd.c     ****   lcd_fill_rect ( i+5, j, 14, 1, 0xff );
 654              		.loc 1 99 25 view .LVU125
 655 000a 0446     		mov	r4, r0
 656 000c 0D46     		mov	r5, r1
 657              		.loc 1 100 3 view .LVU126
 658 000e 0530     		adds	r0, r0, #5
 659              	.LVL49:
 660              		.loc 1 100 3 view .LVU127
 661 0010 0123     		movs	r3, #1
 662 0012 0E22     		movs	r2, #14
 663 0014 B047     		blx	r6
 664              	.LVL50:
 101:src/lcd.c     ****   lcd_fill_rect ( i+4, j+1, 16, 1, 0xff );
ARM GAS  /tmp/ccZMYPCV.s 			page 15


 665              		.loc 1 101 3 is_stmt 1 view .LVU128
 666 0016 691C     		adds	r1, r5, #1
 667 0018 201D     		adds	r0, r4, #4
 668 001a 0097     		str	r7, [sp]
 669 001c 0123     		movs	r3, #1
 670 001e 1022     		movs	r2, #16
 671 0020 B047     		blx	r6
 672              	.LVL51:
 102:src/lcd.c     ****   lcd_fill_rect ( i+6, j+2, 12, 1, 0xff );
 673              		.loc 1 102 3 view .LVU129
 674 0022 A91C     		adds	r1, r5, #2
 675 0024 A01D     		adds	r0, r4, #6
 676 0026 0097     		str	r7, [sp]
 677 0028 0123     		movs	r3, #1
 678 002a 0C22     		movs	r2, #12
 679 002c B047     		blx	r6
 680              	.LVL52:
 103:src/lcd.c     ****   lcd_fill_rect ( i+7, j+3, 10, 1, 0xff );
 681              		.loc 1 103 3 view .LVU130
 682 002e E91C     		adds	r1, r5, #3
 683 0030 E01D     		adds	r0, r4, #7
 684 0032 0097     		str	r7, [sp]
 685 0034 0123     		movs	r3, #1
 686 0036 0A22     		movs	r2, #10
 687 0038 B047     		blx	r6
 688              	.LVL53:
 104:src/lcd.c     **** }
 689              		.loc 1 104 1 is_stmt 0 view .LVU131
 690 003a 03B0     		add	sp, sp, #12
 691              		.cfi_def_cfa_offset 20
 692              		@ sp needed
 693 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 694              	.LVL54:
 695              	.L36:
 696              		.loc 1 104 1 view .LVU132
 697 003e 00BF     		.align	2
 698              	.L35:
 699 0040 3D020008 		.word	134218301
 700              		.cfi_endproc
 701              	.LFE10:
 703              		.section	.text.middle,"ax",%progbits
 704              		.align	1
 705              		.p2align 2,,3
 706              		.global	middle
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu fpv4-sp-d16
 712              	middle:
 713              	.LVL55:
 714              	.LFB11:
 105:src/lcd.c     **** void middle (int i, int j) {
 715              		.loc 1 105 28 is_stmt 1 view -0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 106:src/lcd.c     ****   lcd_fill_rect ( i+5, j+19, 11, 3, 0xff );
ARM GAS  /tmp/ccZMYPCV.s 			page 16


 719              		.loc 1 106 3 view .LVU134
 105:src/lcd.c     **** void middle (int i, int j) {
 720              		.loc 1 105 28 is_stmt 0 view .LVU135
 721 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 722              		.cfi_def_cfa_offset 20
 723              		.cfi_offset 4, -20
 724              		.cfi_offset 5, -16
 725              		.cfi_offset 6, -12
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 83B0     		sub	sp, sp, #12
 729              		.cfi_def_cfa_offset 32
 730              		.loc 1 106 3 view .LVU136
 731 0004 FF23     		movs	r3, #255
 105:src/lcd.c     **** void middle (int i, int j) {
 732              		.loc 1 105 28 view .LVU137
 733 0006 0546     		mov	r5, r0
 734              		.loc 1 106 3 view .LVU138
 735 0008 0093     		str	r3, [sp]
 736 000a 0D4E     		ldr	r6, .L39
 107:src/lcd.c     ****   setBlackPixel ( i+4, j+20 );
 737              		.loc 1 107 3 view .LVU139
 738 000c 0D4F     		ldr	r7, .L39+4
 105:src/lcd.c     **** void middle (int i, int j) {
 739              		.loc 1 105 28 view .LVU140
 740 000e 0C46     		mov	r4, r1
 106:src/lcd.c     ****   lcd_fill_rect ( i+5, j+19, 11, 3, 0xff );
 741              		.loc 1 106 3 view .LVU141
 742 0010 0530     		adds	r0, r0, #5
 743              	.LVL56:
 106:src/lcd.c     ****   lcd_fill_rect ( i+5, j+19, 11, 3, 0xff );
 744              		.loc 1 106 3 view .LVU142
 745 0012 1331     		adds	r1, r1, #19
 746              	.LVL57:
 106:src/lcd.c     ****   lcd_fill_rect ( i+5, j+19, 11, 3, 0xff );
 747              		.loc 1 106 3 view .LVU143
 748 0014 0323     		movs	r3, #3
 749 0016 0B22     		movs	r2, #11
 750 0018 B047     		blx	r6
 751              	.LVL58:
 752              		.loc 1 107 3 is_stmt 1 view .LVU144
 753 001a 1434     		adds	r4, r4, #20
 754              	.LVL59:
 755              		.loc 1 107 3 is_stmt 0 view .LVU145
 756 001c 0026     		movs	r6, #0
 757 001e 0123     		movs	r3, #1
 758 0020 2246     		mov	r2, r4
 759 0022 281D     		adds	r0, r5, #4
 760 0024 1946     		mov	r1, r3
 761 0026 CDE90066 		strd	r6, r6, [sp]
 762 002a B847     		blx	r7
 763              	.LVL60:
 108:src/lcd.c     ****   setBlackPixel ( i+16, j+20 );
 764              		.loc 1 108 3 is_stmt 1 view .LVU146
 765 002c 0123     		movs	r3, #1
 766 002e CDE90066 		strd	r6, r6, [sp]
 767 0032 2246     		mov	r2, r4
ARM GAS  /tmp/ccZMYPCV.s 			page 17


 768 0034 05F11000 		add	r0, r5, #16
 769 0038 1946     		mov	r1, r3
 770 003a B847     		blx	r7
 771              	.LVL61:
 109:src/lcd.c     **** }
 772              		.loc 1 109 1 is_stmt 0 view .LVU147
 773 003c 03B0     		add	sp, sp, #12
 774              		.cfi_def_cfa_offset 20
 775              		@ sp needed
 776 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 777              	.LVL62:
 778              	.L40:
 779              		.loc 1 109 1 view .LVU148
 780              		.align	2
 781              	.L39:
 782 0040 3D020008 		.word	134218301
 783 0044 25020008 		.word	134218277
 784              		.cfi_endproc
 785              	.LFE11:
 787              		.section	.text.bottom,"ax",%progbits
 788              		.align	1
 789              		.p2align 2,,3
 790              		.global	bottom
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv4-sp-d16
 796              	bottom:
 797              	.LVL63:
 798              	.LFB12:
 110:src/lcd.c     **** void bottom (int i, int j) {
 799              		.loc 1 110 28 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 111:src/lcd.c     ****   lcd_fill_rect ( i+2, j+40, 14, 1, 0xff );
 803              		.loc 1 111 3 view .LVU150
 110:src/lcd.c     **** void bottom (int i, int j) {
 804              		.loc 1 110 28 is_stmt 0 view .LVU151
 805 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 806              		.cfi_def_cfa_offset 20
 807              		.cfi_offset 4, -20
 808              		.cfi_offset 5, -16
 809              		.cfi_offset 6, -12
 810              		.cfi_offset 7, -8
 811              		.cfi_offset 14, -4
 812 0002 83B0     		sub	sp, sp, #12
 813              		.cfi_def_cfa_offset 32
 814              		.loc 1 111 3 view .LVU152
 815 0004 FF27     		movs	r7, #255
 816 0006 104E     		ldr	r6, .L43
 817 0008 0097     		str	r7, [sp]
 110:src/lcd.c     **** void bottom (int i, int j) {
 818              		.loc 1 110 28 view .LVU153
 819 000a 0446     		mov	r4, r0
 820 000c 0D46     		mov	r5, r1
 821              		.loc 1 111 3 view .LVU154
ARM GAS  /tmp/ccZMYPCV.s 			page 18


 822 000e 0230     		adds	r0, r0, #2
 823              	.LVL64:
 824              		.loc 1 111 3 view .LVU155
 825 0010 2831     		adds	r1, r1, #40
 826              	.LVL65:
 827              		.loc 1 111 3 view .LVU156
 828 0012 0123     		movs	r3, #1
 829 0014 0E22     		movs	r2, #14
 830 0016 B047     		blx	r6
 831              	.LVL66:
 112:src/lcd.c     ****   lcd_fill_rect ( i+1, j+39, 16, 1, 0xff );
 832              		.loc 1 112 3 is_stmt 1 view .LVU157
 833 0018 05F12701 		add	r1, r5, #39
 834 001c 601C     		adds	r0, r4, #1
 835 001e 0097     		str	r7, [sp]
 836 0020 0123     		movs	r3, #1
 837 0022 1022     		movs	r2, #16
 838 0024 B047     		blx	r6
 839              	.LVL67:
 113:src/lcd.c     ****   lcd_fill_rect ( i+3, j+38, 12, 1, 0xff );
 840              		.loc 1 113 3 view .LVU158
 841 0026 05F12601 		add	r1, r5, #38
 842 002a E01C     		adds	r0, r4, #3
 843 002c 0097     		str	r7, [sp]
 844 002e 0123     		movs	r3, #1
 845 0030 0C22     		movs	r2, #12
 846 0032 B047     		blx	r6
 847              	.LVL68:
 114:src/lcd.c     ****   lcd_fill_rect ( i+4, j+37, 10, 1, 0xff );
 848              		.loc 1 114 3 view .LVU159
 849 0034 05F12501 		add	r1, r5, #37
 850 0038 201D     		adds	r0, r4, #4
 851 003a 0097     		str	r7, [sp]
 852 003c 0123     		movs	r3, #1
 853 003e 0A22     		movs	r2, #10
 854 0040 B047     		blx	r6
 855              	.LVL69:
 115:src/lcd.c     **** }
 856              		.loc 1 115 1 is_stmt 0 view .LVU160
 857 0042 03B0     		add	sp, sp, #12
 858              		.cfi_def_cfa_offset 20
 859              		@ sp needed
 860 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 861              	.LVL70:
 862              	.L44:
 863              		.loc 1 115 1 view .LVU161
 864 0046 00BF     		.align	2
 865              	.L43:
 866 0048 3D020008 		.word	134218301
 867              		.cfi_endproc
 868              	.LFE12:
 870              		.section	.text.decimal,"ax",%progbits
 871              		.align	1
 872              		.p2align 2,,3
 873              		.global	decimal
 874              		.syntax unified
 875              		.thumb
ARM GAS  /tmp/ccZMYPCV.s 			page 19


 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	decimal:
 880              	.LVL71:
 881              	.LFB13:
 116:src/lcd.c     **** void decimal (int i, int j) {
 882              		.loc 1 116 29 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 117:src/lcd.c     ****   lcd_fill_rect (i+19, j+40, 5, 5, 0xff);
 886              		.loc 1 117 3 view .LVU163
 116:src/lcd.c     **** void decimal (int i, int j) {
 887              		.loc 1 116 29 is_stmt 0 view .LVU164
 888 0000 10B5     		push	{r4, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 4, -8
 891              		.cfi_offset 14, -4
 892 0002 82B0     		sub	sp, sp, #8
 893              		.cfi_def_cfa_offset 16
 894              		.loc 1 117 3 view .LVU165
 895 0004 0523     		movs	r3, #5
 896 0006 FF22     		movs	r2, #255
 897 0008 0092     		str	r2, [sp]
 898 000a 034C     		ldr	r4, .L47
 899 000c 1330     		adds	r0, r0, #19
 900              	.LVL72:
 901              		.loc 1 117 3 view .LVU166
 902 000e 2831     		adds	r1, r1, #40
 903              	.LVL73:
 904              		.loc 1 117 3 view .LVU167
 905 0010 1A46     		mov	r2, r3
 906 0012 A047     		blx	r4
 907              	.LVL74:
 118:src/lcd.c     **** }
 908              		.loc 1 118 1 view .LVU168
 909 0014 02B0     		add	sp, sp, #8
 910              		.cfi_def_cfa_offset 8
 911              		@ sp needed
 912 0016 10BD     		pop	{r4, pc}
 913              	.L48:
 914              		.align	2
 915              	.L47:
 916 0018 3D020008 		.word	134218301
 917              		.cfi_endproc
 918              	.LFE13:
 920              		.section	.text.comma,"ax",%progbits
 921              		.align	1
 922              		.p2align 2,,3
 923              		.global	comma
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu fpv4-sp-d16
 929              	comma:
 930              	.LVL75:
 931              	.LFB14:
ARM GAS  /tmp/ccZMYPCV.s 			page 20


 119:src/lcd.c     **** void comma (int i, int j) {
 932              		.loc 1 119 27 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 120:src/lcd.c     ****   lcd_fill_rect (i+21, j+45, 3, 3, 0xff);
 936              		.loc 1 120 3 view .LVU170
 119:src/lcd.c     **** void comma (int i, int j) {
 937              		.loc 1 119 27 is_stmt 0 view .LVU171
 938 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 939              		.cfi_def_cfa_offset 20
 940              		.cfi_offset 4, -20
 941              		.cfi_offset 5, -16
 942              		.cfi_offset 6, -12
 943              		.cfi_offset 7, -8
 944              		.cfi_offset 14, -4
 945 0002 83B0     		sub	sp, sp, #12
 946              		.cfi_def_cfa_offset 32
 947              		.loc 1 120 3 view .LVU172
 948 0004 FF27     		movs	r7, #255
 949 0006 0323     		movs	r3, #3
 950 0008 084E     		ldr	r6, .L51
 951 000a 0097     		str	r7, [sp]
 119:src/lcd.c     **** void comma (int i, int j) {
 952              		.loc 1 119 27 view .LVU173
 953 000c 0446     		mov	r4, r0
 954 000e 0D46     		mov	r5, r1
 955              		.loc 1 120 3 view .LVU174
 956 0010 1A46     		mov	r2, r3
 957 0012 2D31     		adds	r1, r1, #45
 958              	.LVL76:
 959              		.loc 1 120 3 view .LVU175
 960 0014 1530     		adds	r0, r0, #21
 961              	.LVL77:
 962              		.loc 1 120 3 view .LVU176
 963 0016 B047     		blx	r6
 964              	.LVL78:
 121:src/lcd.c     ****   lcd_fill_rect (i+19, j+48, 3, 3, 0xff);
 965              		.loc 1 121 3 is_stmt 1 view .LVU177
 966 0018 0323     		movs	r3, #3
 967 001a 05F13001 		add	r1, r5, #48
 968 001e 04F11300 		add	r0, r4, #19
 969 0022 0097     		str	r7, [sp]
 970 0024 1A46     		mov	r2, r3
 971 0026 B047     		blx	r6
 972              	.LVL79:
 122:src/lcd.c     **** }
 973              		.loc 1 122 1 is_stmt 0 view .LVU178
 974 0028 03B0     		add	sp, sp, #12
 975              		.cfi_def_cfa_offset 20
 976              		@ sp needed
 977 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 978              	.LVL80:
 979              	.L52:
 980              		.loc 1 122 1 view .LVU179
 981              		.align	2
 982              	.L51:
ARM GAS  /tmp/ccZMYPCV.s 			page 21


 983 002c 3D020008 		.word	134218301
 984              		.cfi_endproc
 985              	.LFE14:
 987              		.section	.text.exp_left_side,"ax",%progbits
 988              		.align	1
 989              		.p2align 2,,3
 990              		.global	exp_left_side
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 994              		.fpu fpv4-sp-d16
 996              	exp_left_side:
 997              	.LVL81:
 998              	.LFB15:
 123:src/lcd.c     **** 
 124:src/lcd.c     **** void exp_left_side (int i, int j) {
 999              		.loc 1 124 35 is_stmt 1 view -0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 125:src/lcd.c     ****   lcd_fill_rect (i, j+6, 1, 6, 0xff );
 1003              		.loc 1 125 3 view .LVU181
 124:src/lcd.c     ****   lcd_fill_rect (i, j+6, 1, 6, 0xff );
 1004              		.loc 1 124 35 is_stmt 0 view .LVU182
 1005 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1006              		.cfi_def_cfa_offset 20
 1007              		.cfi_offset 4, -20
 1008              		.cfi_offset 5, -16
 1009              		.cfi_offset 6, -12
 1010              		.cfi_offset 7, -8
 1011              		.cfi_offset 14, -4
 1012 0002 83B0     		sub	sp, sp, #12
 1013              		.cfi_def_cfa_offset 32
 1014              		.loc 1 125 3 view .LVU183
 1015 0004 FF27     		movs	r7, #255
 1016 0006 0E4E     		ldr	r6, .L55
 1017 0008 0097     		str	r7, [sp]
 124:src/lcd.c     ****   lcd_fill_rect (i, j+6, 1, 6, 0xff );
 1018              		.loc 1 124 35 view .LVU184
 1019 000a 0C46     		mov	r4, r1
 1020 000c 0546     		mov	r5, r0
 1021              		.loc 1 125 3 view .LVU185
 1022 000e 0631     		adds	r1, r1, #6
 1023              	.LVL82:
 1024              		.loc 1 125 3 view .LVU186
 1025 0010 0623     		movs	r3, #6
 1026 0012 0122     		movs	r2, #1
 1027 0014 B047     		blx	r6
 1028              	.LVL83:
 126:src/lcd.c     ****   lcd_fill_rect (i+1, j, 1, 11, 0xff );
 1029              		.loc 1 126 3 is_stmt 1 view .LVU187
 1030 0016 2146     		mov	r1, r4
 1031 0018 681C     		adds	r0, r5, #1
 1032 001a 0097     		str	r7, [sp]
 1033 001c 0B23     		movs	r3, #11
 1034 001e 0122     		movs	r2, #1
 1035 0020 B047     		blx	r6
ARM GAS  /tmp/ccZMYPCV.s 			page 22


 1036              	.LVL84:
 127:src/lcd.c     ****   lcd_fill_rect (i+2, j+1, 1, 9, 0xff );
 1037              		.loc 1 127 3 view .LVU188
 1038 0022 611C     		adds	r1, r4, #1
 1039 0024 A81C     		adds	r0, r5, #2
 1040 0026 0097     		str	r7, [sp]
 1041 0028 0923     		movs	r3, #9
 1042 002a 0122     		movs	r2, #1
 1043 002c B047     		blx	r6
 1044              	.LVL85:
 128:src/lcd.c     ****   lcd_fill_rect (i+3, j+2, 1, 4, 0xff );
 1045              		.loc 1 128 3 view .LVU189
 1046 002e A11C     		adds	r1, r4, #2
 1047 0030 E81C     		adds	r0, r5, #3
 1048 0032 0097     		str	r7, [sp]
 1049 0034 0423     		movs	r3, #4
 1050 0036 0122     		movs	r2, #1
 1051 0038 B047     		blx	r6
 1052              	.LVL86:
 129:src/lcd.c     **** }
 1053              		.loc 1 129 1 is_stmt 0 view .LVU190
 1054 003a 03B0     		add	sp, sp, #12
 1055              		.cfi_def_cfa_offset 20
 1056              		@ sp needed
 1057 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 1058              	.LVL87:
 1059              	.L56:
 1060              		.loc 1 129 1 view .LVU191
 1061 003e 00BF     		.align	2
 1062              	.L55:
 1063 0040 3D020008 		.word	134218301
 1064              		.cfi_endproc
 1065              	.LFE15:
 1067              		.section	.text.exp_left_side_top,"ax",%progbits
 1068              		.align	1
 1069              		.p2align 2,,3
 1070              		.global	exp_left_side_top
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu fpv4-sp-d16
 1076              	exp_left_side_top:
 1077              	.LVL88:
 1078              	.LFB16:
 130:src/lcd.c     **** void exp_left_side_top (int i, int j) {
 1079              		.loc 1 130 39 is_stmt 1 view -0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 131:src/lcd.c     ****   exp_left_side(i+1, j);
 1084              		.loc 1 131 3 view .LVU193
 1085 0000 0130     		adds	r0, r0, #1
 1086              	.LVL89:
 1087              		.loc 1 131 3 is_stmt 0 view .LVU194
 1088 0002 FFF7FEBF 		b	exp_left_side
 1089              	.LVL90:
ARM GAS  /tmp/ccZMYPCV.s 			page 23


 1090              		.loc 1 131 3 view .LVU195
 1091              		.cfi_endproc
 1092              	.LFE16:
 1094 0006 00BF     		.section	.text.exp_left_side_bottom,"ax",%progbits
 1095              		.align	1
 1096              		.p2align 2,,3
 1097              		.global	exp_left_side_bottom
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu fpv4-sp-d16
 1103              	exp_left_side_bottom:
 1104              	.LVL91:
 1105              	.LFB17:
 132:src/lcd.c     **** }
 133:src/lcd.c     **** void exp_left_side_bottom (int i, int j) {
 1106              		.loc 1 133 42 is_stmt 1 view -0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              		@ link register save eliminated.
 134:src/lcd.c     ****   exp_left_side(i, j+11);
 1111              		.loc 1 134 3 view .LVU197
 1112 0000 0B31     		adds	r1, r1, #11
 1113              	.LVL92:
 1114              		.loc 1 134 3 is_stmt 0 view .LVU198
 1115 0002 FFF7FEBF 		b	exp_left_side
 1116              	.LVL93:
 1117              		.loc 1 134 3 view .LVU199
 1118              		.cfi_endproc
 1119              	.LFE17:
 1121 0006 00BF     		.section	.text.exp_right_side,"ax",%progbits
 1122              		.align	1
 1123              		.p2align 2,,3
 1124              		.global	exp_right_side
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv4-sp-d16
 1130              	exp_right_side:
 1131              	.LVL94:
 1132              	.LFB18:
 135:src/lcd.c     **** }
 136:src/lcd.c     **** void exp_right_side (int i, int j) {
 1133              		.loc 1 136 36 is_stmt 1 view -0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 137:src/lcd.c     ****   lcd_fill_rect (i+12, j, 1, 6, 0xff );
 1137              		.loc 1 137 3 view .LVU201
 136:src/lcd.c     ****   lcd_fill_rect (i+12, j, 1, 6, 0xff );
 1138              		.loc 1 136 36 is_stmt 0 view .LVU202
 1139 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1140              		.cfi_def_cfa_offset 20
 1141              		.cfi_offset 4, -20
 1142              		.cfi_offset 5, -16
 1143              		.cfi_offset 6, -12
ARM GAS  /tmp/ccZMYPCV.s 			page 24


 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 83B0     		sub	sp, sp, #12
 1147              		.cfi_def_cfa_offset 32
 1148              		.loc 1 137 3 view .LVU203
 1149 0004 FF27     		movs	r7, #255
 1150 0006 0F4E     		ldr	r6, .L61
 1151 0008 0097     		str	r7, [sp]
 136:src/lcd.c     ****   lcd_fill_rect (i+12, j, 1, 6, 0xff );
 1152              		.loc 1 136 36 view .LVU204
 1153 000a 0446     		mov	r4, r0
 1154 000c 0D46     		mov	r5, r1
 1155              		.loc 1 137 3 view .LVU205
 1156 000e 0C30     		adds	r0, r0, #12
 1157              	.LVL95:
 1158              		.loc 1 137 3 view .LVU206
 1159 0010 0623     		movs	r3, #6
 1160 0012 0122     		movs	r2, #1
 1161 0014 B047     		blx	r6
 1162              	.LVL96:
 138:src/lcd.c     ****   lcd_fill_rect (i+11, j+1, 1, 11, 0xff );
 1163              		.loc 1 138 3 is_stmt 1 view .LVU207
 1164 0016 691C     		adds	r1, r5, #1
 1165 0018 04F10B00 		add	r0, r4, #11
 1166 001c 0097     		str	r7, [sp]
 1167 001e 0B23     		movs	r3, #11
 1168 0020 0122     		movs	r2, #1
 1169 0022 B047     		blx	r6
 1170              	.LVL97:
 139:src/lcd.c     ****   lcd_fill_rect (i+10, j+2, 1, 9, 0xff );
 1171              		.loc 1 139 3 view .LVU208
 1172 0024 A91C     		adds	r1, r5, #2
 1173 0026 04F10A00 		add	r0, r4, #10
 1174 002a 0097     		str	r7, [sp]
 1175 002c 0923     		movs	r3, #9
 1176 002e 0122     		movs	r2, #1
 1177 0030 B047     		blx	r6
 1178              	.LVL98:
 140:src/lcd.c     ****   lcd_fill_rect (i+9, j+6, 1, 4, 0xff );
 1179              		.loc 1 140 3 view .LVU209
 1180 0032 A91D     		adds	r1, r5, #6
 1181 0034 04F10900 		add	r0, r4, #9
 1182 0038 0097     		str	r7, [sp]
 1183 003a 0423     		movs	r3, #4
 1184 003c 0122     		movs	r2, #1
 1185 003e B047     		blx	r6
 1186              	.LVL99:
 141:src/lcd.c     **** }
 1187              		.loc 1 141 1 is_stmt 0 view .LVU210
 1188 0040 03B0     		add	sp, sp, #12
 1189              		.cfi_def_cfa_offset 20
 1190              		@ sp needed
 1191 0042 F0BD     		pop	{r4, r5, r6, r7, pc}
 1192              	.LVL100:
 1193              	.L62:
 1194              		.loc 1 141 1 view .LVU211
 1195              		.align	2
ARM GAS  /tmp/ccZMYPCV.s 			page 25


 1196              	.L61:
 1197 0044 3D020008 		.word	134218301
 1198              		.cfi_endproc
 1199              	.LFE18:
 1201              		.section	.text.exp_right_side_top,"ax",%progbits
 1202              		.align	1
 1203              		.p2align 2,,3
 1204              		.global	exp_right_side_top
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv4-sp-d16
 1210              	exp_right_side_top:
 1211              	.LVL101:
 1212              	.LFB19:
 142:src/lcd.c     **** void exp_right_side_top (int i, int j) {
 1213              		.loc 1 142 40 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 143:src/lcd.c     ****   exp_right_side(i, j);
 1218              		.loc 1 143 3 view .LVU213
 1219 0000 FFF7FEBF 		b	exp_right_side
 1220              	.LVL102:
 1221              		.loc 1 143 3 is_stmt 0 view .LVU214
 1222              		.cfi_endproc
 1223              	.LFE19:
 1225              		.section	.text.exp_right_side_bottom,"ax",%progbits
 1226              		.align	1
 1227              		.p2align 2,,3
 1228              		.global	exp_right_side_bottom
 1229              		.syntax unified
 1230              		.thumb
 1231              		.thumb_func
 1232              		.fpu fpv4-sp-d16
 1234              	exp_right_side_bottom:
 1235              	.LVL103:
 1236              	.LFB20:
 144:src/lcd.c     **** }
 145:src/lcd.c     **** void exp_right_side_bottom (int i, int j) {
 1237              		.loc 1 145 43 is_stmt 1 view -0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 146:src/lcd.c     ****   exp_right_side(i-1, j+11);
 1242              		.loc 1 146 3 view .LVU216
 1243 0000 0138     		subs	r0, r0, #1
 1244              	.LVL104:
 1245              		.loc 1 146 3 is_stmt 0 view .LVU217
 1246 0002 0B31     		adds	r1, r1, #11
 1247              	.LVL105:
 1248              		.loc 1 146 3 view .LVU218
 1249 0004 FFF7FEBF 		b	exp_right_side
 1250              	.LVL106:
 1251              		.loc 1 146 3 view .LVU219
ARM GAS  /tmp/ccZMYPCV.s 			page 26


 1252              		.cfi_endproc
 1253              	.LFE20:
 1255              		.section	.text.exp_top,"ax",%progbits
 1256              		.align	1
 1257              		.p2align 2,,3
 1258              		.global	exp_top
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1262              		.fpu fpv4-sp-d16
 1264              	exp_top:
 1265              	.LVL107:
 1266              	.LFB21:
 147:src/lcd.c     **** }
 148:src/lcd.c     **** void exp_top (int i, int j) {
 1267              		.loc 1 148 29 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 149:src/lcd.c     ****   lcd_fill_rect (i+4, j, 7, 1, 0xff );
 1271              		.loc 1 149 3 view .LVU221
 148:src/lcd.c     ****   lcd_fill_rect (i+4, j, 7, 1, 0xff );
 1272              		.loc 1 148 29 is_stmt 0 view .LVU222
 1273 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1274              		.cfi_def_cfa_offset 20
 1275              		.cfi_offset 4, -20
 1276              		.cfi_offset 5, -16
 1277              		.cfi_offset 6, -12
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 83B0     		sub	sp, sp, #12
 1281              		.cfi_def_cfa_offset 32
 1282              		.loc 1 149 3 view .LVU223
 1283 0004 FF27     		movs	r7, #255
 1284 0006 0B4E     		ldr	r6, .L67
 1285 0008 0097     		str	r7, [sp]
 148:src/lcd.c     ****   lcd_fill_rect (i+4, j, 7, 1, 0xff );
 1286              		.loc 1 148 29 view .LVU224
 1287 000a 0446     		mov	r4, r0
 1288 000c 0D46     		mov	r5, r1
 1289              		.loc 1 149 3 view .LVU225
 1290 000e 0430     		adds	r0, r0, #4
 1291              	.LVL108:
 1292              		.loc 1 149 3 view .LVU226
 1293 0010 0123     		movs	r3, #1
 1294 0012 0722     		movs	r2, #7
 1295 0014 B047     		blx	r6
 1296              	.LVL109:
 150:src/lcd.c     ****   lcd_fill_rect (i+5, j+1, 5, 1, 0xff );
 1297              		.loc 1 150 3 is_stmt 1 view .LVU227
 1298 0016 691C     		adds	r1, r5, #1
 1299 0018 601D     		adds	r0, r4, #5
 1300 001a 0097     		str	r7, [sp]
 1301 001c 0123     		movs	r3, #1
 1302 001e 0522     		movs	r2, #5
 1303 0020 B047     		blx	r6
 1304              	.LVL110:
ARM GAS  /tmp/ccZMYPCV.s 			page 27


 151:src/lcd.c     ****   lcd_fill_rect (i+6, j+2, 3, 1, 0xff );
 1305              		.loc 1 151 3 view .LVU228
 1306 0022 A91C     		adds	r1, r5, #2
 1307 0024 A01D     		adds	r0, r4, #6
 1308 0026 0097     		str	r7, [sp]
 1309 0028 0123     		movs	r3, #1
 1310 002a 0322     		movs	r2, #3
 1311 002c B047     		blx	r6
 1312              	.LVL111:
 152:src/lcd.c     **** }
 1313              		.loc 1 152 1 is_stmt 0 view .LVU229
 1314 002e 03B0     		add	sp, sp, #12
 1315              		.cfi_def_cfa_offset 20
 1316              		@ sp needed
 1317 0030 F0BD     		pop	{r4, r5, r6, r7, pc}
 1318              	.LVL112:
 1319              	.L68:
 1320              		.loc 1 152 1 view .LVU230
 1321 0032 00BF     		.align	2
 1322              	.L67:
 1323 0034 3D020008 		.word	134218301
 1324              		.cfi_endproc
 1325              	.LFE21:
 1327              		.section	.text.exp_bottom,"ax",%progbits
 1328              		.align	1
 1329              		.p2align 2,,3
 1330              		.global	exp_bottom
 1331              		.syntax unified
 1332              		.thumb
 1333              		.thumb_func
 1334              		.fpu fpv4-sp-d16
 1336              	exp_bottom:
 1337              	.LVL113:
 1338              	.LFB22:
 153:src/lcd.c     **** void exp_bottom (int i, int j) {
 1339              		.loc 1 153 32 is_stmt 1 view -0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 0
 1342              		@ frame_needed = 0, uses_anonymous_args = 0
 154:src/lcd.c     ****   lcd_fill_rect (i+2, j+22, 7, 1, 0xff );
 1343              		.loc 1 154 3 view .LVU232
 153:src/lcd.c     **** void exp_bottom (int i, int j) {
 1344              		.loc 1 153 32 is_stmt 0 view .LVU233
 1345 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1346              		.cfi_def_cfa_offset 20
 1347              		.cfi_offset 4, -20
 1348              		.cfi_offset 5, -16
 1349              		.cfi_offset 6, -12
 1350              		.cfi_offset 7, -8
 1351              		.cfi_offset 14, -4
 1352 0002 83B0     		sub	sp, sp, #12
 1353              		.cfi_def_cfa_offset 32
 1354              		.loc 1 154 3 view .LVU234
 1355 0004 FF27     		movs	r7, #255
 1356 0006 0C4E     		ldr	r6, .L71
 1357 0008 0097     		str	r7, [sp]
 153:src/lcd.c     **** void exp_bottom (int i, int j) {
ARM GAS  /tmp/ccZMYPCV.s 			page 28


 1358              		.loc 1 153 32 view .LVU235
 1359 000a 0446     		mov	r4, r0
 1360 000c 0D46     		mov	r5, r1
 1361              		.loc 1 154 3 view .LVU236
 1362 000e 0230     		adds	r0, r0, #2
 1363              	.LVL114:
 1364              		.loc 1 154 3 view .LVU237
 1365 0010 1631     		adds	r1, r1, #22
 1366              	.LVL115:
 1367              		.loc 1 154 3 view .LVU238
 1368 0012 0123     		movs	r3, #1
 1369 0014 0722     		movs	r2, #7
 1370 0016 B047     		blx	r6
 1371              	.LVL116:
 155:src/lcd.c     ****   lcd_fill_rect (i+3, j+21, 5, 1, 0xff );
 1372              		.loc 1 155 3 is_stmt 1 view .LVU239
 1373 0018 05F11501 		add	r1, r5, #21
 1374 001c E01C     		adds	r0, r4, #3
 1375 001e 0097     		str	r7, [sp]
 1376 0020 0123     		movs	r3, #1
 1377 0022 0522     		movs	r2, #5
 1378 0024 B047     		blx	r6
 1379              	.LVL117:
 156:src/lcd.c     ****   lcd_fill_rect (i+4, j+20, 3, 1, 0xff );
 1380              		.loc 1 156 3 view .LVU240
 1381 0026 05F11401 		add	r1, r5, #20
 1382 002a 201D     		adds	r0, r4, #4
 1383 002c 0097     		str	r7, [sp]
 1384 002e 0123     		movs	r3, #1
 1385 0030 0322     		movs	r2, #3
 1386 0032 B047     		blx	r6
 1387              	.LVL118:
 157:src/lcd.c     **** }
 1388              		.loc 1 157 1 is_stmt 0 view .LVU241
 1389 0034 03B0     		add	sp, sp, #12
 1390              		.cfi_def_cfa_offset 20
 1391              		@ sp needed
 1392 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 1393              	.LVL119:
 1394              	.L72:
 1395              		.loc 1 157 1 view .LVU242
 1396              		.align	2
 1397              	.L71:
 1398 0038 3D020008 		.word	134218301
 1399              		.cfi_endproc
 1400              	.LFE22:
 1402              		.section	.text.exp_middle,"ax",%progbits
 1403              		.align	1
 1404              		.p2align 2,,3
 1405              		.global	exp_middle
 1406              		.syntax unified
 1407              		.thumb
 1408              		.thumb_func
 1409              		.fpu fpv4-sp-d16
 1411              	exp_middle:
 1412              	.LVL120:
 1413              	.LFB23:
ARM GAS  /tmp/ccZMYPCV.s 			page 29


 158:src/lcd.c     **** void exp_middle (int i, int j) {
 1414              		.loc 1 158 32 is_stmt 1 view -0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 0
 1417              		@ frame_needed = 0, uses_anonymous_args = 0
 159:src/lcd.c     ****   lcd_fill_rect (i+4, j+10, 5, 1, 0xff );
 1418              		.loc 1 159 3 view .LVU244
 158:src/lcd.c     **** void exp_middle (int i, int j) {
 1419              		.loc 1 158 32 is_stmt 0 view .LVU245
 1420 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1421              		.cfi_def_cfa_offset 24
 1422              		.cfi_offset 4, -24
 1423              		.cfi_offset 5, -20
 1424              		.cfi_offset 6, -16
 1425              		.cfi_offset 7, -12
 1426              		.cfi_offset 8, -8
 1427              		.cfi_offset 14, -4
 1428 0004 82B0     		sub	sp, sp, #8
 1429              		.cfi_def_cfa_offset 32
 1430              		.loc 1 159 3 view .LVU246
 1431 0006 FF27     		movs	r7, #255
 1432              		.loc 1 159 19 view .LVU247
 1433 0008 00F10408 		add	r8, r0, #4
 1434              		.loc 1 159 3 view .LVU248
 1435 000c 0C4E     		ldr	r6, .L75
 1436 000e 0097     		str	r7, [sp]
 158:src/lcd.c     **** void exp_middle (int i, int j) {
 1437              		.loc 1 158 32 view .LVU249
 1438 0010 0C46     		mov	r4, r1
 1439 0012 0546     		mov	r5, r0
 1440              		.loc 1 159 3 view .LVU250
 1441 0014 0A31     		adds	r1, r1, #10
 1442              	.LVL121:
 1443              		.loc 1 159 3 view .LVU251
 1444 0016 4046     		mov	r0, r8
 1445              	.LVL122:
 1446              		.loc 1 159 3 view .LVU252
 1447 0018 0123     		movs	r3, #1
 1448 001a 0522     		movs	r2, #5
 1449 001c B047     		blx	r6
 1450              	.LVL123:
 160:src/lcd.c     ****   lcd_fill_rect (i+3, j+11, 7, 1, 0xff );
 1451              		.loc 1 160 3 is_stmt 1 view .LVU253
 1452 001e E81C     		adds	r0, r5, #3
 1453 0020 04F10B01 		add	r1, r4, #11
 1454 0024 0097     		str	r7, [sp]
 1455 0026 0123     		movs	r3, #1
 1456 0028 0722     		movs	r2, #7
 1457 002a B047     		blx	r6
 1458              	.LVL124:
 161:src/lcd.c     ****   lcd_fill_rect (i+4, j+12, 5, 1, 0xff );
 1459              		.loc 1 161 3 view .LVU254
 1460 002c 4046     		mov	r0, r8
 1461 002e 04F10C01 		add	r1, r4, #12
 1462 0032 0097     		str	r7, [sp]
 1463 0034 0123     		movs	r3, #1
 1464 0036 0522     		movs	r2, #5
ARM GAS  /tmp/ccZMYPCV.s 			page 30


 1465 0038 B047     		blx	r6
 1466              	.LVL125:
 162:src/lcd.c     **** }
 1467              		.loc 1 162 1 is_stmt 0 view .LVU255
 1468 003a 02B0     		add	sp, sp, #8
 1469              		.cfi_def_cfa_offset 24
 1470              		@ sp needed
 1471 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1472              	.LVL126:
 1473              	.L76:
 1474              		.loc 1 162 1 view .LVU256
 1475              		.align	2
 1476              	.L75:
 1477 0040 3D020008 		.word	134218301
 1478              		.cfi_endproc
 1479              	.LFE23:
 1481              		.section	.rodata.draw_RPN_RCL.str1.4,"aMS",%progbits,1
 1482              		.align	2
 1483              	.LC0:
 1484 0000 6552504E 		.ascii	"eRPN\000"
 1484      00
 1485 0005 000000   		.align	2
 1486              	.LC1:
 1487 0008 52504E00 		.ascii	"RPN\000"
 1488              		.align	2
 1489              	.LC2:
 1490 000c 52554E00 		.ascii	"RUN\000"
 1491              		.section	.text.draw_RPN_RCL,"ax",%progbits
 1492              		.align	1
 1493              		.p2align 2,,3
 1494              		.global	draw_RPN_RCL
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1498              		.fpu fpv4-sp-d16
 1500              	draw_RPN_RCL:
 1501              	.LFB26:
 163:src/lcd.c     ****   
 164:src/lcd.c     **** void show_disp(void) { // This function re-draws everything.
 165:src/lcd.c     ****   // It may be fast enough. It does mean that clearing everything first is needed,
 166:src/lcd.c     ****   // or we keep track of changes.
 167:src/lcd.c     ****   // Try clearing everything first first.
 168:src/lcd.c     ****         int i, j, p;
 169:src/lcd.c     **** 	uint32_t x;
 170:src/lcd.c     **** 	const uint32_t xleft = 26;
 171:src/lcd.c     **** 	const uint32_t ytop = 130; // was 170
 172:src/lcd.c     **** 	const uint32_t dwidth = 25;
 173:src/lcd.c     **** 	const uint32_t xleft_exp = 344;
 174:src/lcd.c     **** 	const uint32_t ytop_exp = 130; // was 170
 175:src/lcd.c     **** 	const uint32_t dwidth_exp = 18;
 176:src/lcd.c     **** 	const uint32_t y_ann = Y_ANNUNC;
 177:src/lcd.c     ****         /* Segments 0 - 107 are the main digits */
 178:src/lcd.c     ****         for (i=0; i<DISPLAY_DIGITS; i++) { // 0 -> 11 inclusive
 179:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 180:src/lcd.c     ****                 x = xleft + dwidth*i;
 181:src/lcd.c     ****                 if (dots[p]) { // top
 182:src/lcd.c     **** 		  top (x, ytop);
ARM GAS  /tmp/ccZMYPCV.s 			page 31


 183:src/lcd.c     ****                 }
 184:src/lcd.c     ****                 if (dots[p+1]) { // top left
 185:src/lcd.c     **** 		  left_side_top (x, ytop);
 186:src/lcd.c     ****                 }
 187:src/lcd.c     ****                 if (dots[p+3]) { // top right
 188:src/lcd.c     **** 		  right_side_top (x, ytop);
 189:src/lcd.c     ****                 }
 190:src/lcd.c     ****                 if (dots[p+2]) { // centre line
 191:src/lcd.c     **** 		  middle (x, ytop);
 192:src/lcd.c     ****                 }
 193:src/lcd.c     ****                 if (dots[p+4]) { // lower left
 194:src/lcd.c     **** 		  left_side_bottom (x, ytop);
 195:src/lcd.c     ****                 }
 196:src/lcd.c     ****                 if (dots[p+6]) { // lower right
 197:src/lcd.c     **** 		  right_side_bottom (x, ytop);
 198:src/lcd.c     ****                 }
 199:src/lcd.c     ****                 if (dots[p+5]) { // bottom
 200:src/lcd.c     **** 		  bottom (x, ytop);
 201:src/lcd.c     ****                 }
 202:src/lcd.c     ****                 if (dots[p+7]) { // point
 203:src/lcd.c     **** 		  decimal (x, ytop);
 204:src/lcd.c     ****                 }
 205:src/lcd.c     ****                 if (dots[p+8]) { // comma
 206:src/lcd.c     **** 		  comma (x, ytop);
 207:src/lcd.c     ****                 }
 208:src/lcd.c     ****         }
 209:src/lcd.c     ****         /* Segments 108 - 128 are the exponent digits */
 210:src/lcd.c     ****         for (i=0; i<3; i++) {
 211:src/lcd.c     ****                 p = i*7+108;
 212:src/lcd.c     ****                 x = xleft_exp + dwidth_exp*i;
 213:src/lcd.c     ****                 if (dots[p]) { // top
 214:src/lcd.c     **** 		  exp_top (x, ytop_exp);
 215:src/lcd.c     ****                 }
 216:src/lcd.c     ****                 if (dots[p+1]) { // top left
 217:src/lcd.c     **** 		  exp_left_side_top (x, ytop_exp);
 218:src/lcd.c     ****                 }
 219:src/lcd.c     ****                 if (dots[p+3]) { // top right
 220:src/lcd.c     **** 		  exp_right_side_top (x, ytop_exp);
 221:src/lcd.c     ****                 }
 222:src/lcd.c     ****                 if (dots[p+2]) { // centre line
 223:src/lcd.c     **** 		  exp_middle (x, ytop_exp);
 224:src/lcd.c     ****                 }
 225:src/lcd.c     ****                 if (dots[p+4]) { // lower left
 226:src/lcd.c     **** 		  exp_left_side_bottom (x, ytop_exp);
 227:src/lcd.c     ****                 }
 228:src/lcd.c     ****                 if (dots[p+6]) { // lower right
 229:src/lcd.c     **** 		  exp_right_side_bottom (x, ytop_exp);
 230:src/lcd.c     ****                 }
 231:src/lcd.c     ****                 if (dots[p+5]) { // bottom
 232:src/lcd.c     **** 		  exp_bottom (x, ytop_exp);
 233:src/lcd.c     ****                 }
 234:src/lcd.c     ****         }
 235:src/lcd.c     ****         /* Segments 129 & 130 are the signs */
 236:src/lcd.c     ****         if (dots[MANT_SIGN]) {
 237:src/lcd.c     **** 	  middle (xleft - dwidth, ytop);
 238:src/lcd.c     ****         }
 239:src/lcd.c     ****         if (dots[EXP_SIGN]) {
ARM GAS  /tmp/ccZMYPCV.s 			page 32


 240:src/lcd.c     **** 	  exp_middle (xleft_exp-dwidth_exp, ytop);
 241:src/lcd.c     ****         }
 242:src/lcd.c     **** 
 243:src/lcd.c     **** 	if (dots[BIG_EQ]) {
 244:src/lcd.c     **** 	  lcd_fill_rect (250, y_ann-34, 15, 4, 0xff);
 245:src/lcd.c     **** 	  lcd_fill_rect (250, y_ann-24, 15, 4, 0xff);
 246:src/lcd.c     ****         }
 247:src/lcd.c     **** 	t20->inv = 0;
 248:src/lcd.c     **** 	
 249:src/lcd.c     **** 	draw_PRT();
 250:src/lcd.c     **** 	
 251:src/lcd.c     **** 	/* if (UState.print_on) { */
 252:src/lcd.c     **** 	/*   lcd_setXY(t20, 250, y_ann-70); */
 253:src/lcd.c     **** 	/*   lcd_writeText(t20,"PRT"); */
 254:src/lcd.c     ****         /* } */
 255:src/lcd.c     **** 
 256:src/lcd.c     ****         if (dots[DOWN_ARR]) {
 257:src/lcd.c     **** 	  lcd_fill_rect(287,y_ann-67,5,12,0xff);
 258:src/lcd.c     **** 	  lcd_fill_rect(285,y_ann-55,9,1,0xff);
 259:src/lcd.c     **** 	  lcd_fill_rect(286,y_ann-54,7,1,0xff);
 260:src/lcd.c     **** 	  lcd_fill_rect(287,y_ann-53,5,1,0xff);
 261:src/lcd.c     **** 	  lcd_fill_rect(288,y_ann-52,3,1,0xff);
 262:src/lcd.c     **** 	  lcd_fill_rect(289,y_ann-51,1,1,0xff);
 263:src/lcd.c     ****         }
 264:src/lcd.c     **** 
 265:src/lcd.c     **** 	if (dots[INPUT]) {
 266:src/lcd.c     **** 	  lcd_setXY(t20, 305, y_ann-70);
 267:src/lcd.c     **** 	  lcd_writeText(t20,"ALPHA");
 268:src/lcd.c     ****         }
 269:src/lcd.c     **** 
 270:src/lcd.c     **** 	/* if (dots[LIT_EQ]) { */
 271:src/lcd.c     **** 	/*   lcd_setXY (t20, 360, y_ann-70); */
 272:src/lcd.c     **** 	/*   if (C_LOCKED) { */
 273:src/lcd.c     **** 	/*     lcd_writeText(t20, "C_LK"); */
 274:src/lcd.c     **** 	/*   } */
 275:src/lcd.c     **** 	/*   else { */
 276:src/lcd.c     **** 	/*     lcd_writeText(t20, "="); */
 277:src/lcd.c     **** 	/*   } */
 278:src/lcd.c     ****         /* } */
 279:src/lcd.c     **** 
 280:src/lcd.c     **** 	draw_LEQ();
 281:src/lcd.c     **** 	
 282:src/lcd.c     **** 	if (dots[BATTERY]) {
 283:src/lcd.c     **** 	  //    MOVE(70, 10);   PRINTF("####-");
 284:src/lcd.c     ****         }
 285:src/lcd.c     **** #ifdef MODIFY_BEG_SSIZE8
 286:src/lcd.c     **** 	if (dots[BEG]) {
 287:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-50);
 288:src/lcd.c     **** 	  lcd_writeText(t20, "S:8");
 289:src/lcd.c     ****         }
 290:src/lcd.c     **** 	else {
 291:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-50);
 292:src/lcd.c     **** 	  lcd_writeText(t20, "S:4");
 293:src/lcd.c     **** 	}	  
 294:src/lcd.c     **** #else
 295:src/lcd.c     **** 	if (dots[BEG]) {
 296:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-50);
ARM GAS  /tmp/ccZMYPCV.s 			page 33


 297:src/lcd.c     **** 	  lcd_writeText(t20, "BEG");
 298:src/lcd.c     ****         }
 299:src/lcd.c     **** #endif
 300:src/lcd.c     **** 	if (dots[STO_annun]) {
 301:src/lcd.c     **** 	  lcd_setXY (t20, 325, y_ann-50);
 302:src/lcd.c     **** 	  lcd_writeText(t20, "PGM");
 303:src/lcd.c     ****         }
 304:src/lcd.c     **** 
 305:src/lcd.c     **** 	/* if (dots[RCL_annun]) { */
 306:src/lcd.c     **** 	/*   lcd_setXY (t20, 365, y_ann-50); */
 307:src/lcd.c     **** 	/*   lcd_writeText(t20, "RUN"); */
 308:src/lcd.c     ****         /* } */
 309:src/lcd.c     **** 
 310:src/lcd.c     **** 	if (dots[RAD]) {
 311:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-30);
 312:src/lcd.c     **** 	  lcd_writeText(t20, "RAD");
 313:src/lcd.c     **** 	}
 314:src/lcd.c     **** 
 315:src/lcd.c     **** 	if (dots[DEG]) {
 316:src/lcd.c     **** 	  lcd_setXY (t20, 325, y_ann-30);
 317:src/lcd.c     **** 	  lcd_writeText(t20, "DEG");
 318:src/lcd.c     ****         }
 319:src/lcd.c     ****         /* if (dots[RPN]) { */
 320:src/lcd.c     **** 	/*   lcd_setXY (t20, 365, y_ann-30); */
 321:src/lcd.c     **** 	/*   if (ENTRY_RPN_ENABLED) { */
 322:src/lcd.c     **** 	/*     lcd_writeText(t20, "eRPN"); */
 323:src/lcd.c     **** 	/*   } */
 324:src/lcd.c     **** 	/*   else { */
 325:src/lcd.c     **** 	/*     lcd_writeText(t20, "RPN"); */
 326:src/lcd.c     **** 	/*   } */
 327:src/lcd.c     ****         /* } */
 328:src/lcd.c     **** 	draw_RPN_RCL();
 329:src/lcd.c     **** 	
 330:src/lcd.c     **** 	/* The graphical bit last */
 331:src/lcd.c     ****         for (i=0; i<BITMAP_WIDTH; i++) {
 332:src/lcd.c     **** 	  for (j=0; j<6; j++) {
 333:src/lcd.c     **** 	    if (dots[i*6+j+MATRIX_BASE]) {
 334:src/lcd.c     **** 	      lcd_fill_rect( xleft-dwidth+5*i+15, ytop-(10+6*6)+j*6, 4, 5, 0xff);
 335:src/lcd.c     **** 	    }
 336:src/lcd.c     **** 	  }
 337:src/lcd.c     **** 	}
 338:src/lcd.c     **** #ifdef TOP_ROW
 339:src/lcd.c     ****         for (i=0; i<BW_TOP; i++) {
 340:src/lcd.c     **** 	  for (j=0; j<6; j++) {
 341:src/lcd.c     **** 	    if (dots[i*6+j+MB_TOP]) {
 342:src/lcd.c     **** 	      lcd_fill_rect( xleft-dwidth+5*i+15, 70-(10+6*5)+j*5, 4, 4, 0xff);
 343:src/lcd.c     **** 	    }
 344:src/lcd.c     **** 	  }
 345:src/lcd.c     **** 	}
 346:src/lcd.c     **** #endif
 347:src/lcd.c     **** }
 348:src/lcd.c     **** #endif
 349:src/lcd.c     **** 
 350:src/lcd.c     **** #if defined(DM42) 
 351:src/lcd.c     **** void finish_display(void) {
 352:src/lcd.c     ****   //  lcd_clear_buf();
 353:src/lcd.c     ****   lcd_fill_rect (0, 0, 400, 188, 0); //leave bottom 52 rows for menu 
ARM GAS  /tmp/ccZMYPCV.s 			page 34


 354:src/lcd.c     ****   show_disp();
 355:src/lcd.c     ****   lcd_refresh();
 356:src/lcd.c     **** }
 357:src/lcd.c     **** 
 358:src/lcd.c     **** void draw_RPN_RCL(void) {
 1502              		.loc 1 358 25 is_stmt 1 view -0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 359:src/lcd.c     ****   t20->inv = !dots[RPN];
 1506              		.loc 1 359 3 view .LVU258
 358:src/lcd.c     ****   t20->inv = !dots[RPN];
 1507              		.loc 1 358 25 is_stmt 0 view .LVU259
 1508 0000 38B5     		push	{r3, r4, r5, lr}
 1509              		.cfi_def_cfa_offset 16
 1510              		.cfi_offset 3, -16
 1511              		.cfi_offset 4, -12
 1512              		.cfi_offset 5, -8
 1513              		.cfi_offset 14, -4
 1514              		.loc 1 359 19 view .LVU260
 1515 0002 1B4C     		ldr	r4, .L81
 1516              		.loc 1 359 3 view .LVU261
 1517 0004 1B4D     		ldr	r5, .L81+4
 1518              		.loc 1 359 14 view .LVU262
 1519 0006 94F88D30 		ldrb	r3, [r4, #141]	@ zero_extendqisi2
 360:src/lcd.c     ****   if (ENTRY_RPN_ENABLED) {
 1520              		.loc 1 360 7 view .LVU263
 1521 000a 1B4A     		ldr	r2, .L81+8
 359:src/lcd.c     ****   t20->inv = !dots[RPN];
 1522              		.loc 1 359 3 view .LVU264
 1523 000c 286B     		ldr	r0, [r5, #48]
 1524              		.loc 1 360 7 view .LVU265
 1525 000e 1268     		ldr	r2, [r2]
 359:src/lcd.c     ****   t20->inv = !dots[RPN];
 1526              		.loc 1 359 14 view .LVU266
 1527 0010 B3FA83F3 		clz	r3, r3
 1528 0014 5B09     		lsrs	r3, r3, #5
 1529 0016 4374     		strb	r3, [r0, #17]
 1530              		.loc 1 360 3 is_stmt 1 view .LVU267
 1531              		.loc 1 360 7 is_stmt 0 view .LVU268
 1532 0018 92F8AD37 		ldrb	r3, [r2, #1965]	@ zero_extendqisi2
 1533              		.loc 1 360 6 view .LVU269
 1534 001c 13F0020F 		tst	r3, #2
 361:src/lcd.c     ****     lcd_setXY (t20, 355, Y_ANNUNC-30); // 70 is y_ann
 1535              		.loc 1 361 5 view .LVU270
 1536 0020 4FF06402 		mov	r2, #100
 1537 0024 154B     		ldr	r3, .L81+12
 360:src/lcd.c     ****   if (ENTRY_RPN_ENABLED) {
 1538              		.loc 1 360 6 view .LVU271
 1539 0026 1BD0     		beq	.L78
 1540              		.loc 1 361 5 is_stmt 1 view .LVU272
 1541 0028 40F26311 		movw	r1, #355
 1542 002c 9847     		blx	r3
 1543              	.LVL127:
 362:src/lcd.c     ****     lcd_writeText(t20, "eRPN");
 1544              		.loc 1 362 5 view .LVU273
 1545 002e 286B     		ldr	r0, [r5, #48]
ARM GAS  /tmp/ccZMYPCV.s 			page 35


 1546 0030 134B     		ldr	r3, .L81+16
 1547 0032 1449     		ldr	r1, .L81+20
 1548 0034 9847     		blx	r3
 1549              	.LVL128:
 1550              	.L79:
 363:src/lcd.c     ****   }
 364:src/lcd.c     ****   else {
 365:src/lcd.c     ****     lcd_setXY (t20, 365, Y_ANNUNC-30); // 70 is y_ann
 366:src/lcd.c     ****     lcd_writeText(t20, "RPN");
 367:src/lcd.c     ****   }
 368:src/lcd.c     ****   t20->inv = !dots[RCL_annun];
 1551              		.loc 1 368 3 view .LVU274
 1552              		.loc 1 368 14 is_stmt 0 view .LVU275
 1553 0036 94F88A30 		ldrb	r3, [r4, #138]	@ zero_extendqisi2
 1554              		.loc 1 368 3 view .LVU276
 1555 003a 0E4C     		ldr	r4, .L81+4
 369:src/lcd.c     ****   lcd_setXY (t20, 365, Y_ANNUNC-50); // 70 is y_ann
 1556              		.loc 1 369 3 view .LVU277
 1557 003c 0F4D     		ldr	r5, .L81+12
 368:src/lcd.c     ****   lcd_setXY (t20, 365, Y_ANNUNC-50); // 70 is y_ann
 1558              		.loc 1 368 3 view .LVU278
 1559 003e 206B     		ldr	r0, [r4, #48]
 368:src/lcd.c     ****   lcd_setXY (t20, 365, Y_ANNUNC-50); // 70 is y_ann
 1560              		.loc 1 368 14 view .LVU279
 1561 0040 B3FA83F3 		clz	r3, r3
 1562 0044 5B09     		lsrs	r3, r3, #5
 1563 0046 4374     		strb	r3, [r0, #17]
 1564              		.loc 1 369 3 is_stmt 1 view .LVU280
 1565 0048 5022     		movs	r2, #80
 1566 004a 40F26D11 		movw	r1, #365
 1567 004e A847     		blx	r5
 1568              	.LVL129:
 370:src/lcd.c     ****   lcd_writeText(t20, "RUN");
 1569              		.loc 1 370 3 view .LVU281
 1570 0050 0B4B     		ldr	r3, .L81+16
 1571 0052 206B     		ldr	r0, [r4, #48]
 1572 0054 0C49     		ldr	r1, .L81+24
 1573 0056 9847     		blx	r3
 1574              	.LVL130:
 371:src/lcd.c     ****   t20->inv = 0;
 1575              		.loc 1 371 3 view .LVU282
 1576              		.loc 1 371 12 is_stmt 0 view .LVU283
 1577 0058 236B     		ldr	r3, [r4, #48]
 1578 005a 0022     		movs	r2, #0
 1579 005c 5A74     		strb	r2, [r3, #17]
 372:src/lcd.c     **** }
 1580              		.loc 1 372 1 view .LVU284
 1581 005e 38BD     		pop	{r3, r4, r5, pc}
 1582              	.L78:
 365:src/lcd.c     ****     lcd_writeText(t20, "RPN");
 1583              		.loc 1 365 5 is_stmt 1 view .LVU285
 1584 0060 40F26D11 		movw	r1, #365
 1585 0064 9847     		blx	r3
 1586              	.LVL131:
 366:src/lcd.c     ****   }
 1587              		.loc 1 366 5 view .LVU286
 1588 0066 286B     		ldr	r0, [r5, #48]
ARM GAS  /tmp/ccZMYPCV.s 			page 36


 1589 0068 054B     		ldr	r3, .L81+16
 1590 006a 0849     		ldr	r1, .L81+28
 1591 006c 9847     		blx	r3
 1592              	.LVL132:
 1593 006e E2E7     		b	.L79
 1594              	.L82:
 1595              		.align	2
 1596              	.L81:
 1597 0070 00000000 		.word	.LANCHOR0
 1598 0074 00200010 		.word	268443648
 1599 0078 00000000 		.word	main_ram
 1600 007c 6D020008 		.word	134218349
 1601 0080 7D020008 		.word	134218365
 1602 0084 00000000 		.word	.LC0
 1603 0088 0C000000 		.word	.LC2
 1604 008c 08000000 		.word	.LC1
 1605              		.cfi_endproc
 1606              	.LFE26:
 1608              		.section	.rodata.draw_LEQ.str1.4,"aMS",%progbits,1
 1609              		.align	2
 1610              	.LC3:
 1611 0000 435F4C4B 		.ascii	"C_LK\000"
 1611      00
 1612 0005 000000   		.align	2
 1613              	.LC4:
 1614 0008 3D00     		.ascii	"=\000"
 1615              		.section	.text.draw_LEQ,"ax",%progbits
 1616              		.align	1
 1617              		.p2align 2,,3
 1618              		.global	draw_LEQ
 1619              		.syntax unified
 1620              		.thumb
 1621              		.thumb_func
 1622              		.fpu fpv4-sp-d16
 1624              	draw_LEQ:
 1625              	.LFB27:
 373:src/lcd.c     **** 
 374:src/lcd.c     **** void draw_LEQ(void) { // little equals
 1626              		.loc 1 374 21 view -0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 375:src/lcd.c     ****   t20->inv = !dots[LIT_EQ];
 1630              		.loc 1 375 3 view .LVU288
 374:src/lcd.c     ****   t20->inv = !dots[LIT_EQ];
 1631              		.loc 1 374 21 is_stmt 0 view .LVU289
 1632 0000 38B5     		push	{r3, r4, r5, lr}
 1633              		.cfi_def_cfa_offset 16
 1634              		.cfi_offset 3, -16
 1635              		.cfi_offset 4, -12
 1636              		.cfi_offset 5, -8
 1637              		.cfi_offset 14, -4
 1638              		.loc 1 375 19 view .LVU290
 1639 0002 104B     		ldr	r3, .L87
 1640              		.loc 1 375 3 view .LVU291
 1641 0004 104C     		ldr	r4, .L87+4
 1642              		.loc 1 375 14 view .LVU292
ARM GAS  /tmp/ccZMYPCV.s 			page 37


 1643 0006 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 1644              		.loc 1 375 3 view .LVU293
 1645 000a 206B     		ldr	r0, [r4, #48]
 376:src/lcd.c     ****   lcd_setXY (t20, 360, Y_ANNUNC-70);
 1646              		.loc 1 376 3 view .LVU294
 1647 000c 0F4D     		ldr	r5, .L87+8
 375:src/lcd.c     ****   t20->inv = !dots[LIT_EQ];
 1648              		.loc 1 375 14 view .LVU295
 1649 000e B3FA83F3 		clz	r3, r3
 1650 0012 5B09     		lsrs	r3, r3, #5
 1651              		.loc 1 376 3 view .LVU296
 1652 0014 4FF4B471 		mov	r1, #360
 375:src/lcd.c     ****   t20->inv = !dots[LIT_EQ];
 1653              		.loc 1 375 14 view .LVU297
 1654 0018 4374     		strb	r3, [r0, #17]
 1655              		.loc 1 376 3 is_stmt 1 view .LVU298
 1656 001a 3C22     		movs	r2, #60
 1657 001c A847     		blx	r5
 1658              	.LVL133:
 377:src/lcd.c     **** #ifdef INCLUDE_C_LOCK
 378:src/lcd.c     ****   if (C_LOCKED) {
 1659              		.loc 1 378 3 view .LVU299
 379:src/lcd.c     ****     lcd_writeText(t20, "C_LK");
 1660              		.loc 1 379 5 view .LVU300
 380:src/lcd.c     ****   }
 381:src/lcd.c     ****   else {
 382:src/lcd.c     ****     lcd_writeText(t20, "=");
 1661              		.loc 1 382 5 view .LVU301
 378:src/lcd.c     ****     lcd_writeText(t20, "C_LK");
 1662              		.loc 1 378 7 is_stmt 0 view .LVU302
 1663 001e 0C4B     		ldr	r3, .L87+12
 379:src/lcd.c     ****     lcd_writeText(t20, "C_LK");
 1664              		.loc 1 379 5 view .LVU303
 1665 0020 206B     		ldr	r0, [r4, #48]
 378:src/lcd.c     ****     lcd_writeText(t20, "C_LK");
 1666              		.loc 1 378 7 view .LVU304
 1667 0022 1B68     		ldr	r3, [r3]
 1668 0024 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 378:src/lcd.c     ****     lcd_writeText(t20, "C_LK");
 1669              		.loc 1 378 6 view .LVU305
 1670 0028 03F04103 		and	r3, r3, #65
 1671 002c 412B     		cmp	r3, #65
 379:src/lcd.c     ****     lcd_writeText(t20, "C_LK");
 1672              		.loc 1 379 5 view .LVU306
 1673 002e 08BF     		it	eq
 1674 0030 0849     		ldreq	r1, .L87+16
 1675 0032 094B     		ldr	r3, .L87+20
 1676              		.loc 1 382 5 view .LVU307
 1677 0034 18BF     		it	ne
 1678 0036 0949     		ldrne	r1, .L87+24
 1679 0038 9847     		blx	r3
 1680              	.LVL134:
 383:src/lcd.c     ****   }
 384:src/lcd.c     **** #else
 385:src/lcd.c     ****   lcd_writeText(t20, "=");
 386:src/lcd.c     **** #endif
 387:src/lcd.c     ****   t20->inv = 0;
ARM GAS  /tmp/ccZMYPCV.s 			page 38


 1681              		.loc 1 387 3 is_stmt 1 view .LVU308
 1682 003a 034B     		ldr	r3, .L87+4
 1683              		.loc 1 387 12 is_stmt 0 view .LVU309
 1684 003c 1B6B     		ldr	r3, [r3, #48]
 1685 003e 0022     		movs	r2, #0
 1686 0040 5A74     		strb	r2, [r3, #17]
 388:src/lcd.c     **** }
 1687              		.loc 1 388 1 view .LVU310
 1688 0042 38BD     		pop	{r3, r4, r5, pc}
 1689              	.L88:
 1690              		.align	2
 1691              	.L87:
 1692 0044 00000000 		.word	.LANCHOR0
 1693 0048 00200010 		.word	268443648
 1694 004c 6D020008 		.word	134218349
 1695 0050 00000000 		.word	main_ram
 1696 0054 00000000 		.word	.LC3
 1697 0058 7D020008 		.word	134218365
 1698 005c 08000000 		.word	.LC4
 1699              		.cfi_endproc
 1700              	.LFE27:
 1702              		.section	.rodata.draw_PRT.str1.4,"aMS",%progbits,1
 1703              		.align	2
 1704              	.LC5:
 1705 0000 50525400 		.ascii	"PRT\000"
 1706              		.section	.text.draw_PRT,"ax",%progbits
 1707              		.align	1
 1708              		.p2align 2,,3
 1709              		.global	draw_PRT
 1710              		.syntax unified
 1711              		.thumb
 1712              		.thumb_func
 1713              		.fpu fpv4-sp-d16
 1715              	draw_PRT:
 1716              	.LFB28:
 389:src/lcd.c     **** 
 390:src/lcd.c     **** void draw_PRT (void) {
 1717              		.loc 1 390 22 is_stmt 1 view -0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 391:src/lcd.c     ****   t20->inv = !UState.print_on;
 1721              		.loc 1 391 3 view .LVU312
 1722              		.loc 1 391 14 is_stmt 0 view .LVU313
 1723 0000 0A4B     		ldr	r3, .L91
 1724 0002 1B68     		ldr	r3, [r3]
 390:src/lcd.c     ****   t20->inv = !UState.print_on;
 1725              		.loc 1 390 22 view .LVU314
 1726 0004 70B5     		push	{r4, r5, r6, lr}
 1727              		.cfi_def_cfa_offset 16
 1728              		.cfi_offset 4, -16
 1729              		.cfi_offset 5, -12
 1730              		.cfi_offset 6, -8
 1731              		.cfi_offset 14, -4
 1732              		.loc 1 391 12 view .LVU315
 1733 0006 93F8E437 		ldrb	r3, [r3, #2020]	@ zero_extendqisi2
 1734              		.loc 1 391 3 view .LVU316
ARM GAS  /tmp/ccZMYPCV.s 			page 39


 1735 000a 094C     		ldr	r4, .L91+4
 392:src/lcd.c     ****   lcd_setXY(t20, 250, Y_ANNUNC-70);
 1736              		.loc 1 392 3 view .LVU317
 1737 000c 094D     		ldr	r5, .L91+8
 391:src/lcd.c     ****   t20->inv = !UState.print_on;
 1738              		.loc 1 391 3 view .LVU318
 1739 000e 206B     		ldr	r0, [r4, #48]
 391:src/lcd.c     ****   t20->inv = !UState.print_on;
 1740              		.loc 1 391 12 view .LVU319
 1741 0010 DB43     		mvns	r3, r3
 1742 0012 03F00103 		and	r3, r3, #1
 1743 0016 4374     		strb	r3, [r0, #17]
 1744              		.loc 1 392 3 is_stmt 1 view .LVU320
 1745 0018 FA21     		movs	r1, #250
 1746 001a 3C22     		movs	r2, #60
 1747 001c A847     		blx	r5
 1748              	.LVL135:
 393:src/lcd.c     ****   lcd_writeText(t20,"PRT");
 1749              		.loc 1 393 3 view .LVU321
 1750 001e 206B     		ldr	r0, [r4, #48]
 1751 0020 054B     		ldr	r3, .L91+12
 1752 0022 0649     		ldr	r1, .L91+16
 394:src/lcd.c     **** }
 1753              		.loc 1 394 1 is_stmt 0 view .LVU322
 1754 0024 BDE87040 		pop	{r4, r5, r6, lr}
 1755              		.cfi_restore 14
 1756              		.cfi_restore 6
 1757              		.cfi_restore 5
 1758              		.cfi_restore 4
 1759              		.cfi_def_cfa_offset 0
 393:src/lcd.c     ****   lcd_writeText(t20,"PRT");
 1760              		.loc 1 393 3 view .LVU323
 1761 0028 1847     		bx	r3	@ indirect register sibling call
 1762              	.LVL136:
 1763              	.L92:
 1764 002a 00BF     		.align	2
 1765              	.L91:
 1766 002c 00000000 		.word	main_ram
 1767 0030 00200010 		.word	268443648
 1768 0034 6D020008 		.word	134218349
 1769 0038 7D020008 		.word	134218365
 1770 003c 00000000 		.word	.LC5
 1771              		.cfi_endproc
 1772              	.LFE28:
 1774              		.section	.rodata.show_disp.str1.4,"aMS",%progbits,1
 1775              		.align	2
 1776              	.LC6:
 1777 0000 414C5048 		.ascii	"ALPHA\000"
 1777      4100
 1778 0006 0000     		.align	2
 1779              	.LC7:
 1780 0008 533A3800 		.ascii	"S:8\000"
 1781              		.align	2
 1782              	.LC8:
 1783 000c 533A3400 		.ascii	"S:4\000"
 1784              		.align	2
 1785              	.LC9:
ARM GAS  /tmp/ccZMYPCV.s 			page 40


 1786 0010 50474D00 		.ascii	"PGM\000"
 1787              		.align	2
 1788              	.LC10:
 1789 0014 52414400 		.ascii	"RAD\000"
 1790              		.align	2
 1791              	.LC11:
 1792 0018 44454700 		.ascii	"DEG\000"
 1793              		.section	.text.show_disp,"ax",%progbits
 1794              		.align	1
 1795              		.p2align 2,,3
 1796              		.global	show_disp
 1797              		.syntax unified
 1798              		.thumb
 1799              		.thumb_func
 1800              		.fpu fpv4-sp-d16
 1802              	show_disp:
 1803              	.LFB24:
 164:src/lcd.c     ****   // It may be fast enough. It does mean that clearing everything first is needed,
 1804              		.loc 1 164 22 is_stmt 1 view -0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 0
 1807              		@ frame_needed = 0, uses_anonymous_args = 0
 168:src/lcd.c     **** 	uint32_t x;
 1808              		.loc 1 168 9 view .LVU325
 169:src/lcd.c     **** 	const uint32_t xleft = 26;
 1809              		.loc 1 169 2 view .LVU326
 170:src/lcd.c     **** 	const uint32_t ytop = 130; // was 170
 1810              		.loc 1 170 2 view .LVU327
 1811              	.LVL137:
 171:src/lcd.c     **** 	const uint32_t dwidth = 25;
 1812              		.loc 1 171 2 view .LVU328
 172:src/lcd.c     **** 	const uint32_t xleft_exp = 344;
 1813              		.loc 1 172 2 view .LVU329
 173:src/lcd.c     **** 	const uint32_t ytop_exp = 130; // was 170
 1814              		.loc 1 173 2 view .LVU330
 174:src/lcd.c     **** 	const uint32_t dwidth_exp = 18;
 1815              		.loc 1 174 2 view .LVU331
 175:src/lcd.c     **** 	const uint32_t y_ann = Y_ANNUNC;
 1816              		.loc 1 175 2 view .LVU332
 176:src/lcd.c     ****         /* Segments 0 - 107 are the main digits */
 1817              		.loc 1 176 2 view .LVU333
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 1818              		.loc 1 178 9 view .LVU334
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 1819              		.loc 1 178 19 view .LVU335
 164:src/lcd.c     ****   // It may be fast enough. It does mean that clearing everything first is needed,
 1820              		.loc 1 164 22 is_stmt 0 view .LVU336
 1821 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1822              		.cfi_def_cfa_offset 36
 1823              		.cfi_offset 4, -36
 1824              		.cfi_offset 5, -32
 1825              		.cfi_offset 6, -28
 1826              		.cfi_offset 7, -24
 1827              		.cfi_offset 8, -20
 1828              		.cfi_offset 9, -16
 1829              		.cfi_offset 10, -12
 1830              		.cfi_offset 11, -8
ARM GAS  /tmp/ccZMYPCV.s 			page 41


 1831              		.cfi_offset 14, -4
 1832 0004 AE4E     		ldr	r6, .L222
 1833              	.LBB65:
 1834              	.LBB66:
 117:src/lcd.c     **** }
 1835              		.loc 1 117 3 view .LVU337
 1836 0006 DFF8BC82 		ldr	r8, .L222+4
 1837              	.LBE66:
 1838              	.LBE65:
 164:src/lcd.c     ****   // It may be fast enough. It does mean that clearing everything first is needed,
 1839              		.loc 1 164 22 view .LVU338
 1840 000a 83B0     		sub	sp, sp, #12
 1841              		.cfi_def_cfa_offset 48
 164:src/lcd.c     ****   // It may be fast enough. It does mean that clearing everything first is needed,
 1842              		.loc 1 164 22 view .LVU339
 1843 000c 3746     		mov	r7, r6
 1844 000e 3446     		mov	r4, r6
 1845 0010 1A25     		movs	r5, #26
 1846 0012 24E0     		b	.L103
 1847              	.LVL138:
 1848              	.L94:
 184:src/lcd.c     **** 		  left_side_top (x, ytop);
 1849              		.loc 1 184 17 is_stmt 1 view .LVU340
 184:src/lcd.c     **** 		  left_side_top (x, ytop);
 1850              		.loc 1 184 20 is_stmt 0 view .LVU341
 1851 0014 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1852 0016 002B     		cmp	r3, #0
 1853 0018 2BD1     		bne	.L205
 1854              	.L95:
 187:src/lcd.c     **** 		  right_side_top (x, ytop);
 1855              		.loc 1 187 17 is_stmt 1 view .LVU342
 187:src/lcd.c     **** 		  right_side_top (x, ytop);
 1856              		.loc 1 187 20 is_stmt 0 view .LVU343
 1857 001a E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 1858 001c 002B     		cmp	r3, #0
 1859 001e 2FD1     		bne	.L206
 1860              	.L96:
 190:src/lcd.c     **** 		  middle (x, ytop);
 1861              		.loc 1 190 17 is_stmt 1 view .LVU344
 190:src/lcd.c     **** 		  middle (x, ytop);
 1862              		.loc 1 190 20 is_stmt 0 view .LVU345
 1863 0020 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1864 0022 002B     		cmp	r3, #0
 1865 0024 33D1     		bne	.L207
 1866              	.L97:
 193:src/lcd.c     **** 		  left_side_bottom (x, ytop);
 1867              		.loc 1 193 17 is_stmt 1 view .LVU346
 193:src/lcd.c     **** 		  left_side_bottom (x, ytop);
 1868              		.loc 1 193 20 is_stmt 0 view .LVU347
 1869 0026 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1870 0028 002B     		cmp	r3, #0
 1871 002a 37D1     		bne	.L208
 1872              	.L98:
 196:src/lcd.c     **** 		  right_side_bottom (x, ytop);
 1873              		.loc 1 196 17 is_stmt 1 view .LVU348
 196:src/lcd.c     **** 		  right_side_bottom (x, ytop);
 1874              		.loc 1 196 20 is_stmt 0 view .LVU349
ARM GAS  /tmp/ccZMYPCV.s 			page 42


 1875 002c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1876 002e 002B     		cmp	r3, #0
 1877 0030 3BD1     		bne	.L209
 1878              	.L99:
 199:src/lcd.c     **** 		  bottom (x, ytop);
 1879              		.loc 1 199 17 is_stmt 1 view .LVU350
 199:src/lcd.c     **** 		  bottom (x, ytop);
 1880              		.loc 1 199 20 is_stmt 0 view .LVU351
 1881 0032 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 1882 0034 002B     		cmp	r3, #0
 1883 0036 3FD1     		bne	.L210
 1884              	.L100:
 202:src/lcd.c     **** 		  decimal (x, ytop);
 1885              		.loc 1 202 17 is_stmt 1 view .LVU352
 202:src/lcd.c     **** 		  decimal (x, ytop);
 1886              		.loc 1 202 20 is_stmt 0 view .LVU353
 1887 0038 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 1888 003a 3BB1     		cbz	r3, .L101
 203:src/lcd.c     ****                 }
 1889              		.loc 1 203 5 is_stmt 1 view .LVU354
 1890              	.LVL139:
 1891              	.LBB68:
 1892              	.LBI65:
 116:src/lcd.c     ****   lcd_fill_rect (i+19, j+40, 5, 5, 0xff);
 1893              		.loc 1 116 6 view .LVU355
 1894              	.LBB67:
 117:src/lcd.c     **** }
 1895              		.loc 1 117 3 view .LVU356
 1896 003c FF22     		movs	r2, #255
 1897 003e 0523     		movs	r3, #5
 1898 0040 0092     		str	r2, [sp]
 1899 0042 AA21     		movs	r1, #170
 1900 0044 1A46     		mov	r2, r3
 1901 0046 05F11300 		add	r0, r5, #19
 1902 004a C047     		blx	r8
 1903              	.LVL140:
 1904              	.L101:
 117:src/lcd.c     **** }
 1905              		.loc 1 117 3 is_stmt 0 view .LVU357
 1906              	.LBE67:
 1907              	.LBE68:
 205:src/lcd.c     **** 		  comma (x, ytop);
 1908              		.loc 1 205 17 is_stmt 1 view .LVU358
 205:src/lcd.c     **** 		  comma (x, ytop);
 1909              		.loc 1 205 20 is_stmt 0 view .LVU359
 1910 004c 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 1911 004e 002B     		cmp	r3, #0
 1912 0050 37D1     		bne	.L211
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 1913              		.loc 1 178 37 is_stmt 1 discriminator 2 view .LVU360
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 1914              		.loc 1 178 19 discriminator 2 view .LVU361
 1915 0052 1935     		adds	r5, r5, #25
 1916              	.LVL141:
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 1917              		.loc 1 178 9 is_stmt 0 discriminator 2 view .LVU362
 1918 0054 B5F5A37F 		cmp	r5, #326
ARM GAS  /tmp/ccZMYPCV.s 			page 43


 1919 0058 04F10904 		add	r4, r4, #9
 1920              	.LVL142:
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 1921              		.loc 1 178 9 discriminator 2 view .LVU363
 1922 005c 3BD0     		beq	.L212
 1923              	.LVL143:
 1924              	.L103:
 179:src/lcd.c     ****                 x = xleft + dwidth*i;
 1925              		.loc 1 179 17 is_stmt 1 view .LVU364
 180:src/lcd.c     ****                 if (dots[p]) { // top
 1926              		.loc 1 180 17 view .LVU365
 181:src/lcd.c     **** 		  top (x, ytop);
 1927              		.loc 1 181 17 view .LVU366
 181:src/lcd.c     **** 		  top (x, ytop);
 1928              		.loc 1 181 20 is_stmt 0 view .LVU367
 1929 005e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1930 0060 002B     		cmp	r3, #0
 1931 0062 D7D0     		beq	.L94
 182:src/lcd.c     ****                 }
 1932              		.loc 1 182 5 is_stmt 1 view .LVU368
 1933 0064 8221     		movs	r1, #130
 1934 0066 2846     		mov	r0, r5
 1935 0068 FFF7FEFF 		bl	top
 1936              	.LVL144:
 184:src/lcd.c     **** 		  left_side_top (x, ytop);
 1937              		.loc 1 184 17 view .LVU369
 184:src/lcd.c     **** 		  left_side_top (x, ytop);
 1938              		.loc 1 184 20 is_stmt 0 view .LVU370
 1939 006c 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1940 006e 002B     		cmp	r3, #0
 1941 0070 D3D0     		beq	.L95
 1942              	.L205:
 185:src/lcd.c     ****                 }
 1943              		.loc 1 185 5 is_stmt 1 view .LVU371
 1944              	.LVL145:
 1945              	.LBB69:
 1946              	.LBI69:
  80:src/lcd.c     ****   left_side(i, j);
 1947              		.loc 1 80 6 view .LVU372
 1948              	.LBB70:
  81:src/lcd.c     **** }
 1949              		.loc 1 81 3 view .LVU373
 1950 0072 8221     		movs	r1, #130
 1951 0074 2846     		mov	r0, r5
 1952 0076 FFF7FEFF 		bl	left_side
 1953              	.LVL146:
  81:src/lcd.c     **** }
 1954              		.loc 1 81 3 is_stmt 0 view .LVU374
 1955              	.LBE70:
 1956              	.LBE69:
 187:src/lcd.c     **** 		  right_side_top (x, ytop);
 1957              		.loc 1 187 17 is_stmt 1 view .LVU375
 187:src/lcd.c     **** 		  right_side_top (x, ytop);
 1958              		.loc 1 187 20 is_stmt 0 view .LVU376
 1959 007a E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 1960 007c 002B     		cmp	r3, #0
 1961 007e CFD0     		beq	.L96
ARM GAS  /tmp/ccZMYPCV.s 			page 44


 1962              	.L206:
 188:src/lcd.c     ****                 }
 1963              		.loc 1 188 5 is_stmt 1 view .LVU377
 1964              	.LVL147:
 1965              	.LBB71:
 1966              	.LBI71:
  93:src/lcd.c     ****   right_side(i, j);
 1967              		.loc 1 93 6 view .LVU378
 1968              	.LBB72:
  94:src/lcd.c     **** }
 1969              		.loc 1 94 3 view .LVU379
 1970 0080 8221     		movs	r1, #130
 1971 0082 2846     		mov	r0, r5
 1972 0084 FFF7FEFF 		bl	right_side
 1973              	.LVL148:
  94:src/lcd.c     **** }
 1974              		.loc 1 94 3 is_stmt 0 view .LVU380
 1975              	.LBE72:
 1976              	.LBE71:
 190:src/lcd.c     **** 		  middle (x, ytop);
 1977              		.loc 1 190 17 is_stmt 1 view .LVU381
 190:src/lcd.c     **** 		  middle (x, ytop);
 1978              		.loc 1 190 20 is_stmt 0 view .LVU382
 1979 0088 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1980 008a 002B     		cmp	r3, #0
 1981 008c CBD0     		beq	.L97
 1982              	.L207:
 191:src/lcd.c     ****                 }
 1983              		.loc 1 191 5 is_stmt 1 view .LVU383
 1984 008e 8221     		movs	r1, #130
 1985 0090 2846     		mov	r0, r5
 1986 0092 FFF7FEFF 		bl	middle
 1987              	.LVL149:
 193:src/lcd.c     **** 		  left_side_bottom (x, ytop);
 1988              		.loc 1 193 17 view .LVU384
 193:src/lcd.c     **** 		  left_side_bottom (x, ytop);
 1989              		.loc 1 193 20 is_stmt 0 view .LVU385
 1990 0096 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1991 0098 002B     		cmp	r3, #0
 1992 009a C7D0     		beq	.L98
 1993              	.L208:
 194:src/lcd.c     ****                 }
 1994              		.loc 1 194 5 is_stmt 1 view .LVU386
 1995              	.LVL150:
 1996              	.LBB73:
 1997              	.LBI73:
  83:src/lcd.c     ****   left_side(i-2, j+19);
 1998              		.loc 1 83 6 view .LVU387
 1999              	.LBB74:
  84:src/lcd.c     **** }
 2000              		.loc 1 84 3 view .LVU388
 2001 009c 9521     		movs	r1, #149
 2002 009e A81E     		subs	r0, r5, #2
 2003 00a0 FFF7FEFF 		bl	left_side
 2004              	.LVL151:
  84:src/lcd.c     **** }
 2005              		.loc 1 84 3 is_stmt 0 view .LVU389
ARM GAS  /tmp/ccZMYPCV.s 			page 45


 2006              	.LBE74:
 2007              	.LBE73:
 196:src/lcd.c     **** 		  right_side_bottom (x, ytop);
 2008              		.loc 1 196 17 is_stmt 1 view .LVU390
 196:src/lcd.c     **** 		  right_side_bottom (x, ytop);
 2009              		.loc 1 196 20 is_stmt 0 view .LVU391
 2010 00a4 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2011 00a6 002B     		cmp	r3, #0
 2012 00a8 C3D0     		beq	.L99
 2013              	.L209:
 197:src/lcd.c     ****                 }
 2014              		.loc 1 197 5 is_stmt 1 view .LVU392
 2015              	.LVL152:
 2016              	.LBB75:
 2017              	.LBI75:
  96:src/lcd.c     ****   right_side(i-2, j+19);
 2018              		.loc 1 96 6 view .LVU393
 2019              	.LBB76:
  97:src/lcd.c     **** }
 2020              		.loc 1 97 3 view .LVU394
 2021 00aa 9521     		movs	r1, #149
 2022 00ac A81E     		subs	r0, r5, #2
 2023 00ae FFF7FEFF 		bl	right_side
 2024              	.LVL153:
  97:src/lcd.c     **** }
 2025              		.loc 1 97 3 is_stmt 0 view .LVU395
 2026              	.LBE76:
 2027              	.LBE75:
 199:src/lcd.c     **** 		  bottom (x, ytop);
 2028              		.loc 1 199 17 is_stmt 1 view .LVU396
 199:src/lcd.c     **** 		  bottom (x, ytop);
 2029              		.loc 1 199 20 is_stmt 0 view .LVU397
 2030 00b2 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 2031 00b4 002B     		cmp	r3, #0
 2032 00b6 BFD0     		beq	.L100
 2033              	.L210:
 200:src/lcd.c     ****                 }
 2034              		.loc 1 200 5 is_stmt 1 view .LVU398
 2035 00b8 8221     		movs	r1, #130
 2036 00ba 2846     		mov	r0, r5
 2037 00bc FFF7FEFF 		bl	bottom
 2038              	.LVL154:
 2039 00c0 BAE7     		b	.L100
 2040              	.L211:
 206:src/lcd.c     ****                 }
 2041              		.loc 1 206 5 view .LVU399
 2042 00c2 2846     		mov	r0, r5
 2043 00c4 8221     		movs	r1, #130
 2044 00c6 1935     		adds	r5, r5, #25
 2045              	.LVL155:
 206:src/lcd.c     ****                 }
 2046              		.loc 1 206 5 is_stmt 0 view .LVU400
 2047 00c8 FFF7FEFF 		bl	comma
 2048              	.LVL156:
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 2049              		.loc 1 178 37 is_stmt 1 view .LVU401
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
ARM GAS  /tmp/ccZMYPCV.s 			page 46


 2050              		.loc 1 178 19 view .LVU402
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 2051              		.loc 1 178 9 is_stmt 0 view .LVU403
 2052 00cc B5F5A37F 		cmp	r5, #326
 2053 00d0 04F10904 		add	r4, r4, #9
 2054              	.LVL157:
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 2055              		.loc 1 178 9 view .LVU404
 2056 00d4 C3D1     		bne	.L103
 2057              	.LVL158:
 2058              	.L212:
 178:src/lcd.c     ****                 p = i*SEGS_PER_DIGIT;
 2059              		.loc 1 178 9 view .LVU405
 2060 00d6 7A4C     		ldr	r4, .L222
 2061 00d8 4FF4AC75 		mov	r5, #344
 2062              	.L111:
 211:src/lcd.c     ****                 x = xleft_exp + dwidth_exp*i;
 2063              		.loc 1 211 17 is_stmt 1 view .LVU406
 2064              	.LVL159:
 212:src/lcd.c     ****                 if (dots[p]) { // top
 2065              		.loc 1 212 17 view .LVU407
 213:src/lcd.c     **** 		  exp_top (x, ytop_exp);
 2066              		.loc 1 213 17 view .LVU408
 213:src/lcd.c     **** 		  exp_top (x, ytop_exp);
 2067              		.loc 1 213 20 is_stmt 0 view .LVU409
 2068 00dc 94F86C30 		ldrb	r3, [r4, #108]	@ zero_extendqisi2
 2069 00e0 002B     		cmp	r3, #0
 2070 00e2 40F01581 		bne	.L213
 2071              	.L104:
 216:src/lcd.c     **** 		  exp_left_side_top (x, ytop_exp);
 2072              		.loc 1 216 17 is_stmt 1 view .LVU410
 216:src/lcd.c     **** 		  exp_left_side_top (x, ytop_exp);
 2073              		.loc 1 216 20 is_stmt 0 view .LVU411
 2074 00e6 94F86D30 		ldrb	r3, [r4, #109]	@ zero_extendqisi2
 2075 00ea 002B     		cmp	r3, #0
 2076 00ec 40F00B81 		bne	.L214
 2077              	.L105:
 219:src/lcd.c     **** 		  exp_right_side_top (x, ytop_exp);
 2078              		.loc 1 219 17 is_stmt 1 view .LVU412
 219:src/lcd.c     **** 		  exp_right_side_top (x, ytop_exp);
 2079              		.loc 1 219 20 is_stmt 0 view .LVU413
 2080 00f0 94F86F30 		ldrb	r3, [r4, #111]	@ zero_extendqisi2
 2081 00f4 002B     		cmp	r3, #0
 2082 00f6 40F00181 		bne	.L215
 2083              	.L106:
 222:src/lcd.c     **** 		  exp_middle (x, ytop_exp);
 2084              		.loc 1 222 17 is_stmt 1 view .LVU414
 222:src/lcd.c     **** 		  exp_middle (x, ytop_exp);
 2085              		.loc 1 222 20 is_stmt 0 view .LVU415
 2086 00fa 94F86E30 		ldrb	r3, [r4, #110]	@ zero_extendqisi2
 2087 00fe 002B     		cmp	r3, #0
 2088 0100 40F0F780 		bne	.L216
 2089              	.L107:
 225:src/lcd.c     **** 		  exp_left_side_bottom (x, ytop_exp);
 2090              		.loc 1 225 17 is_stmt 1 view .LVU416
 225:src/lcd.c     **** 		  exp_left_side_bottom (x, ytop_exp);
 2091              		.loc 1 225 20 is_stmt 0 view .LVU417
ARM GAS  /tmp/ccZMYPCV.s 			page 47


 2092 0104 94F87030 		ldrb	r3, [r4, #112]	@ zero_extendqisi2
 2093 0108 002B     		cmp	r3, #0
 2094 010a 40F0ED80 		bne	.L217
 2095              	.L108:
 228:src/lcd.c     **** 		  exp_right_side_bottom (x, ytop_exp);
 2096              		.loc 1 228 17 is_stmt 1 view .LVU418
 228:src/lcd.c     **** 		  exp_right_side_bottom (x, ytop_exp);
 2097              		.loc 1 228 20 is_stmt 0 view .LVU419
 2098 010e 94F87230 		ldrb	r3, [r4, #114]	@ zero_extendqisi2
 2099 0112 002B     		cmp	r3, #0
 2100 0114 40F0CF80 		bne	.L218
 2101              	.L109:
 231:src/lcd.c     **** 		  exp_bottom (x, ytop_exp);
 2102              		.loc 1 231 17 is_stmt 1 view .LVU420
 231:src/lcd.c     **** 		  exp_bottom (x, ytop_exp);
 2103              		.loc 1 231 20 is_stmt 0 view .LVU421
 2104 0118 94F87130 		ldrb	r3, [r4, #113]	@ zero_extendqisi2
 2105 011c 002B     		cmp	r3, #0
 2106 011e 40F0C580 		bne	.L219
 2107              	.L110:
 210:src/lcd.c     ****                 p = i*7+108;
 2108              		.loc 1 210 24 is_stmt 1 discriminator 2 view .LVU422
 210:src/lcd.c     ****                 p = i*7+108;
 2109              		.loc 1 210 19 discriminator 2 view .LVU423
 2110 0122 1235     		adds	r5, r5, #18
 2111              	.LVL160:
 210:src/lcd.c     ****                 p = i*7+108;
 2112              		.loc 1 210 9 is_stmt 0 discriminator 2 view .LVU424
 2113 0124 B5F5C77F 		cmp	r5, #398
 2114 0128 04F10704 		add	r4, r4, #7
 2115              	.LVL161:
 210:src/lcd.c     ****                 p = i*7+108;
 2116              		.loc 1 210 9 discriminator 2 view .LVU425
 2117 012c D6D1     		bne	.L111
 236:src/lcd.c     **** 	  middle (xleft - dwidth, ytop);
 2118              		.loc 1 236 9 is_stmt 1 view .LVU426
 236:src/lcd.c     **** 	  middle (xleft - dwidth, ytop);
 2119              		.loc 1 236 12 is_stmt 0 view .LVU427
 2120 012e 97F88130 		ldrb	r3, [r7, #129]	@ zero_extendqisi2
 2121 0132 002B     		cmp	r3, #0
 2122 0134 40F00281 		bne	.L220
 2123              	.L112:
 239:src/lcd.c     **** 	  exp_middle (xleft_exp-dwidth_exp, ytop);
 2124              		.loc 1 239 9 is_stmt 1 view .LVU428
 239:src/lcd.c     **** 	  exp_middle (xleft_exp-dwidth_exp, ytop);
 2125              		.loc 1 239 12 is_stmt 0 view .LVU429
 2126 0138 97F88230 		ldrb	r3, [r7, #130]	@ zero_extendqisi2
 2127 013c 002B     		cmp	r3, #0
 2128 013e 40F0F780 		bne	.L221
 2129              	.L113:
 243:src/lcd.c     **** 	  lcd_fill_rect (250, y_ann-34, 15, 4, 0xff);
 2130              		.loc 1 243 2 is_stmt 1 view .LVU430
 243:src/lcd.c     **** 	  lcd_fill_rect (250, y_ann-34, 15, 4, 0xff);
 2131              		.loc 1 243 5 is_stmt 0 view .LVU431
 2132 0142 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 2133 0146 6BB1     		cbz	r3, .L114
 244:src/lcd.c     **** 	  lcd_fill_rect (250, y_ann-24, 15, 4, 0xff);
ARM GAS  /tmp/ccZMYPCV.s 			page 48


 2134              		.loc 1 244 4 is_stmt 1 view .LVU432
 2135 0148 FF25     		movs	r5, #255
 2136              	.LVL162:
 244:src/lcd.c     **** 	  lcd_fill_rect (250, y_ann-24, 15, 4, 0xff);
 2137              		.loc 1 244 4 is_stmt 0 view .LVU433
 2138 014a 0423     		movs	r3, #4
 2139 014c 0F22     		movs	r2, #15
 2140 014e 6021     		movs	r1, #96
 2141 0150 FA20     		movs	r0, #250
 2142 0152 5C4C     		ldr	r4, .L222+4
 2143              	.LVL163:
 244:src/lcd.c     **** 	  lcd_fill_rect (250, y_ann-24, 15, 4, 0xff);
 2144              		.loc 1 244 4 view .LVU434
 2145 0154 0095     		str	r5, [sp]
 2146 0156 A047     		blx	r4
 2147              	.LVL164:
 245:src/lcd.c     ****         }
 2148              		.loc 1 245 4 is_stmt 1 view .LVU435
 2149 0158 0095     		str	r5, [sp]
 2150 015a 0423     		movs	r3, #4
 2151 015c 0F22     		movs	r2, #15
 2152 015e 6A21     		movs	r1, #106
 2153 0160 FA20     		movs	r0, #250
 2154 0162 A047     		blx	r4
 2155              	.LVL165:
 2156              	.L114:
 247:src/lcd.c     **** 	
 2157              		.loc 1 247 2 view .LVU436
 2158 0164 584B     		ldr	r3, .L222+8
 247:src/lcd.c     **** 	
 2159              		.loc 1 247 11 is_stmt 0 view .LVU437
 2160 0166 1B6B     		ldr	r3, [r3, #48]
 2161 0168 0022     		movs	r2, #0
 2162 016a 5A74     		strb	r2, [r3, #17]
 249:src/lcd.c     **** 	
 2163              		.loc 1 249 2 is_stmt 1 view .LVU438
 2164 016c FFF7FEFF 		bl	draw_PRT
 2165              	.LVL166:
 256:src/lcd.c     **** 	  lcd_fill_rect(287,y_ann-67,5,12,0xff);
 2166              		.loc 1 256 9 view .LVU439
 256:src/lcd.c     **** 	  lcd_fill_rect(287,y_ann-67,5,12,0xff);
 2167              		.loc 1 256 12 is_stmt 0 view .LVU440
 2168 0170 97F88530 		ldrb	r3, [r7, #133]	@ zero_extendqisi2
 2169 0174 5BB3     		cbz	r3, .L115
 257:src/lcd.c     **** 	  lcd_fill_rect(285,y_ann-55,9,1,0xff);
 2170              		.loc 1 257 4 is_stmt 1 view .LVU441
 2171 0176 FF25     		movs	r5, #255
 2172 0178 524C     		ldr	r4, .L222+4
 2173 017a 0095     		str	r5, [sp]
 2174 017c 0C23     		movs	r3, #12
 2175 017e 0522     		movs	r2, #5
 2176 0180 3F21     		movs	r1, #63
 2177 0182 40F21F10 		movw	r0, #287
 2178 0186 A047     		blx	r4
 2179              	.LVL167:
 258:src/lcd.c     **** 	  lcd_fill_rect(286,y_ann-54,7,1,0xff);
 2180              		.loc 1 258 4 view .LVU442
ARM GAS  /tmp/ccZMYPCV.s 			page 49


 2181 0188 0123     		movs	r3, #1
 2182 018a 0922     		movs	r2, #9
 2183 018c 4B21     		movs	r1, #75
 2184 018e 40F21D10 		movw	r0, #285
 2185 0192 0095     		str	r5, [sp]
 2186 0194 A047     		blx	r4
 2187              	.LVL168:
 259:src/lcd.c     **** 	  lcd_fill_rect(287,y_ann-53,5,1,0xff);
 2188              		.loc 1 259 4 view .LVU443
 2189 0196 0123     		movs	r3, #1
 2190 0198 0722     		movs	r2, #7
 2191 019a 4C21     		movs	r1, #76
 2192 019c 4FF48F70 		mov	r0, #286
 2193 01a0 0095     		str	r5, [sp]
 2194 01a2 A047     		blx	r4
 2195              	.LVL169:
 260:src/lcd.c     **** 	  lcd_fill_rect(288,y_ann-52,3,1,0xff);
 2196              		.loc 1 260 4 view .LVU444
 2197 01a4 0123     		movs	r3, #1
 2198 01a6 0522     		movs	r2, #5
 2199 01a8 4D21     		movs	r1, #77
 2200 01aa 40F21F10 		movw	r0, #287
 2201 01ae 0095     		str	r5, [sp]
 2202 01b0 A047     		blx	r4
 2203              	.LVL170:
 261:src/lcd.c     **** 	  lcd_fill_rect(289,y_ann-51,1,1,0xff);
 2204              		.loc 1 261 4 view .LVU445
 2205 01b2 0123     		movs	r3, #1
 2206 01b4 0322     		movs	r2, #3
 2207 01b6 4E21     		movs	r1, #78
 2208 01b8 4FF49070 		mov	r0, #288
 2209 01bc 0095     		str	r5, [sp]
 2210 01be A047     		blx	r4
 2211              	.LVL171:
 262:src/lcd.c     ****         }
 2212              		.loc 1 262 4 view .LVU446
 2213 01c0 0123     		movs	r3, #1
 2214 01c2 0095     		str	r5, [sp]
 2215 01c4 1A46     		mov	r2, r3
 2216 01c6 4F21     		movs	r1, #79
 2217 01c8 40F22110 		movw	r0, #289
 2218 01cc A047     		blx	r4
 2219              	.LVL172:
 2220              	.L115:
 265:src/lcd.c     **** 	  lcd_setXY(t20, 305, y_ann-70);
 2221              		.loc 1 265 2 view .LVU447
 265:src/lcd.c     **** 	  lcd_setXY(t20, 305, y_ann-70);
 2222              		.loc 1 265 5 is_stmt 0 view .LVU448
 2223 01ce 97F88630 		ldrb	r3, [r7, #134]	@ zero_extendqisi2
 2224 01d2 53B1     		cbz	r3, .L116
 266:src/lcd.c     **** 	  lcd_writeText(t20,"ALPHA");
 2225              		.loc 1 266 4 is_stmt 1 view .LVU449
 2226 01d4 3C4C     		ldr	r4, .L222+8
 2227 01d6 3D4B     		ldr	r3, .L222+12
 2228 01d8 206B     		ldr	r0, [r4, #48]
 2229 01da 40F23111 		movw	r1, #305
 2230 01de 3C22     		movs	r2, #60
ARM GAS  /tmp/ccZMYPCV.s 			page 50


 2231 01e0 9847     		blx	r3
 2232              	.LVL173:
 267:src/lcd.c     ****         }
 2233              		.loc 1 267 4 view .LVU450
 2234 01e2 206B     		ldr	r0, [r4, #48]
 2235 01e4 3A4B     		ldr	r3, .L222+16
 2236 01e6 3B49     		ldr	r1, .L222+20
 2237 01e8 9847     		blx	r3
 2238              	.LVL174:
 2239              	.L116:
 280:src/lcd.c     **** 	
 2240              		.loc 1 280 2 view .LVU451
 2241 01ea FFF7FEFF 		bl	draw_LEQ
 2242              	.LVL175:
 282:src/lcd.c     **** 	  //    MOVE(70, 10);   PRINTF("####-");
 2243              		.loc 1 282 2 view .LVU452
 284:src/lcd.c     **** #ifdef MODIFY_BEG_SSIZE8
 2244              		.loc 1 284 9 view .LVU453
 286:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-50);
 2245              		.loc 1 286 2 view .LVU454
 286:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-50);
 2246              		.loc 1 286 5 is_stmt 0 view .LVU455
 2247 01ee 97F88830 		ldrb	r3, [r7, #136]	@ zero_extendqisi2
 287:src/lcd.c     **** 	  lcd_writeText(t20, "S:8");
 2248              		.loc 1 287 4 view .LVU456
 2249 01f2 354C     		ldr	r4, .L222+8
 286:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-50);
 2250              		.loc 1 286 5 view .LVU457
 2251 01f4 002B     		cmp	r3, #0
 2252 01f6 00F09080 		beq	.L117
 287:src/lcd.c     **** 	  lcd_writeText(t20, "S:8");
 2253              		.loc 1 287 4 is_stmt 1 view .LVU458
 2254 01fa 344B     		ldr	r3, .L222+12
 2255 01fc 206B     		ldr	r0, [r4, #48]
 2256 01fe 40F21D11 		movw	r1, #285
 2257 0202 5022     		movs	r2, #80
 2258 0204 9847     		blx	r3
 2259              	.LVL176:
 288:src/lcd.c     ****         }
 2260              		.loc 1 288 4 view .LVU459
 2261 0206 206B     		ldr	r0, [r4, #48]
 2262 0208 314B     		ldr	r3, .L222+16
 2263 020a 3349     		ldr	r1, .L222+24
 2264 020c 9847     		blx	r3
 2265              	.LVL177:
 2266              	.L118:
 300:src/lcd.c     **** 	  lcd_setXY (t20, 325, y_ann-50);
 2267              		.loc 1 300 2 view .LVU460
 300:src/lcd.c     **** 	  lcd_setXY (t20, 325, y_ann-50);
 2268              		.loc 1 300 5 is_stmt 0 view .LVU461
 2269 020e 97F88930 		ldrb	r3, [r7, #137]	@ zero_extendqisi2
 2270 0212 53B1     		cbz	r3, .L119
 301:src/lcd.c     **** 	  lcd_writeText(t20, "PGM");
 2271              		.loc 1 301 4 is_stmt 1 view .LVU462
 2272 0214 2C4C     		ldr	r4, .L222+8
 2273 0216 2D4B     		ldr	r3, .L222+12
 2274 0218 206B     		ldr	r0, [r4, #48]
ARM GAS  /tmp/ccZMYPCV.s 			page 51


 2275 021a 40F24511 		movw	r1, #325
 2276 021e 5022     		movs	r2, #80
 2277 0220 9847     		blx	r3
 2278              	.LVL178:
 302:src/lcd.c     ****         }
 2279              		.loc 1 302 4 view .LVU463
 2280 0222 206B     		ldr	r0, [r4, #48]
 2281 0224 2A4B     		ldr	r3, .L222+16
 2282 0226 2D49     		ldr	r1, .L222+28
 2283 0228 9847     		blx	r3
 2284              	.LVL179:
 2285              	.L119:
 310:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-30);
 2286              		.loc 1 310 2 view .LVU464
 310:src/lcd.c     **** 	  lcd_setXY (t20, 285, y_ann-30);
 2287              		.loc 1 310 5 is_stmt 0 view .LVU465
 2288 022a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 2289 022e 53B1     		cbz	r3, .L120
 311:src/lcd.c     **** 	  lcd_writeText(t20, "RAD");
 2290              		.loc 1 311 4 is_stmt 1 view .LVU466
 2291 0230 254C     		ldr	r4, .L222+8
 2292 0232 264B     		ldr	r3, .L222+12
 2293 0234 206B     		ldr	r0, [r4, #48]
 2294 0236 40F21D11 		movw	r1, #285
 2295 023a 6422     		movs	r2, #100
 2296 023c 9847     		blx	r3
 2297              	.LVL180:
 312:src/lcd.c     **** 	}
 2298              		.loc 1 312 4 view .LVU467
 2299 023e 206B     		ldr	r0, [r4, #48]
 2300 0240 234B     		ldr	r3, .L222+16
 2301 0242 2749     		ldr	r1, .L222+32
 2302 0244 9847     		blx	r3
 2303              	.LVL181:
 2304              	.L120:
 315:src/lcd.c     **** 	  lcd_setXY (t20, 325, y_ann-30);
 2305              		.loc 1 315 2 view .LVU468
 315:src/lcd.c     **** 	  lcd_setXY (t20, 325, y_ann-30);
 2306              		.loc 1 315 5 is_stmt 0 view .LVU469
 2307 0246 97F88C30 		ldrb	r3, [r7, #140]	@ zero_extendqisi2
 2308 024a 53B1     		cbz	r3, .L121
 316:src/lcd.c     **** 	  lcd_writeText(t20, "DEG");
 2309              		.loc 1 316 4 is_stmt 1 view .LVU470
 2310 024c 1E4C     		ldr	r4, .L222+8
 2311 024e 1F4B     		ldr	r3, .L222+12
 2312 0250 206B     		ldr	r0, [r4, #48]
 2313 0252 40F24511 		movw	r1, #325
 2314 0256 6422     		movs	r2, #100
 2315 0258 9847     		blx	r3
 2316              	.LVL182:
 317:src/lcd.c     ****         }
 2317              		.loc 1 317 4 view .LVU471
 2318 025a 206B     		ldr	r0, [r4, #48]
 2319 025c 1C4B     		ldr	r3, .L222+16
 2320 025e 2149     		ldr	r1, .L222+36
 2321 0260 9847     		blx	r3
 2322              	.LVL183:
ARM GAS  /tmp/ccZMYPCV.s 			page 52


 2323              	.L121:
 328:src/lcd.c     **** 	
 2324              		.loc 1 328 2 view .LVU472
 2325 0262 FFF7FEFF 		bl	draw_RPN_RCL
 2326              	.LVL184:
 331:src/lcd.c     **** 	  for (j=0; j<6; j++) {
 2327              		.loc 1 331 9 view .LVU473
 331:src/lcd.c     **** 	  for (j=0; j<6; j++) {
 2328              		.loc 1 331 19 view .LVU474
 334:src/lcd.c     **** 	    }
 2329              		.loc 1 334 8 is_stmt 0 view .LVU475
 2330 0266 DFF85C90 		ldr	r9, .L222+4
 2331 026a 06F18E0B 		add	fp, r6, #142
 328:src/lcd.c     **** 	
 2332              		.loc 1 328 2 view .LVU476
 2333 026e 4FF00008 		mov	r8, #0
 2334 0272 1027     		movs	r7, #16
 334:src/lcd.c     **** 	    }
 2335              		.loc 1 334 8 view .LVU477
 2336 0274 4FF0FF0A 		mov	r10, #255
 2337              	.LVL185:
 2338              	.L122:
 332:src/lcd.c     **** 	    if (dots[i*6+j+MATRIX_BASE]) {
 2339              		.loc 1 332 14 is_stmt 1 view .LVU478
 2340 0278 0BEB0805 		add	r5, fp, r8
 2341 027c 5424     		movs	r4, #84
 2342              	.LVL186:
 2343              	.L124:
 333:src/lcd.c     **** 	      lcd_fill_rect( xleft-dwidth+5*i+15, ytop-(10+6*6)+j*6, 4, 5, 0xff);
 2344              		.loc 1 333 6 view .LVU479
 334:src/lcd.c     **** 	    }
 2345              		.loc 1 334 8 view .LVU480
 333:src/lcd.c     **** 	      lcd_fill_rect( xleft-dwidth+5*i+15, ytop-(10+6*6)+j*6, 4, 5, 0xff);
 2346              		.loc 1 333 14 is_stmt 0 view .LVU481
 2347 027e 15F8016B 		ldrb	r6, [r5], #1	@ zero_extendqisi2
 2348              	.LVL187:
 334:src/lcd.c     **** 	    }
 2349              		.loc 1 334 8 view .LVU482
 2350 0282 2146     		mov	r1, r4
 2351 0284 0523     		movs	r3, #5
 2352 0286 0634     		adds	r4, r4, #6
 2353 0288 0422     		movs	r2, #4
 2354 028a 3846     		mov	r0, r7
 333:src/lcd.c     **** 	      lcd_fill_rect( xleft-dwidth+5*i+15, ytop-(10+6*6)+j*6, 4, 5, 0xff);
 2355              		.loc 1 333 9 view .LVU483
 2356 028c 16B1     		cbz	r6, .L123
 334:src/lcd.c     **** 	    }
 2357              		.loc 1 334 8 view .LVU484
 2358 028e CDF800A0 		str	r10, [sp]
 2359 0292 C847     		blx	r9
 2360              	.LVL188:
 2361              	.L123:
 332:src/lcd.c     **** 	    if (dots[i*6+j+MATRIX_BASE]) {
 2362              		.loc 1 332 19 is_stmt 1 discriminator 2 view .LVU485
 332:src/lcd.c     **** 	    if (dots[i*6+j+MATRIX_BASE]) {
 2363              		.loc 1 332 14 discriminator 2 view .LVU486
 332:src/lcd.c     **** 	    if (dots[i*6+j+MATRIX_BASE]) {
ARM GAS  /tmp/ccZMYPCV.s 			page 53


 2364              		.loc 1 332 4 is_stmt 0 discriminator 2 view .LVU487
 2365 0294 782C     		cmp	r4, #120
 2366 0296 F2D1     		bne	.L124
 331:src/lcd.c     **** 	  for (j=0; j<6; j++) {
 2367              		.loc 1 331 35 is_stmt 1 discriminator 2 view .LVU488
 331:src/lcd.c     **** 	  for (j=0; j<6; j++) {
 2368              		.loc 1 331 19 discriminator 2 view .LVU489
 2369 0298 08F10608 		add	r8, r8, #6
 2370              	.LVL189:
 331:src/lcd.c     **** 	  for (j=0; j<6; j++) {
 2371              		.loc 1 331 9 is_stmt 0 discriminator 2 view .LVU490
 2372 029c B8F5817F 		cmp	r8, #258
 2373 02a0 07F10507 		add	r7, r7, #5
 2374 02a4 E8D1     		bne	.L122
 347:src/lcd.c     **** #endif
 2375              		.loc 1 347 1 view .LVU491
 2376 02a6 03B0     		add	sp, sp, #12
 2377              		.cfi_remember_state
 2378              		.cfi_def_cfa_offset 36
 2379              		@ sp needed
 2380 02a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2381              	.LVL190:
 2382              	.L219:
 2383              		.cfi_restore_state
 232:src/lcd.c     ****                 }
 2384              		.loc 1 232 5 is_stmt 1 view .LVU492
 2385 02ac 8221     		movs	r1, #130
 2386 02ae 2846     		mov	r0, r5
 2387 02b0 FFF7FEFF 		bl	exp_bottom
 2388              	.LVL191:
 2389 02b4 35E7     		b	.L110
 2390              	.L218:
 229:src/lcd.c     ****                 }
 2391              		.loc 1 229 5 view .LVU493
 2392              	.LVL192:
 2393              	.LBB77:
 2394              	.LBI77:
 145:src/lcd.c     ****   exp_right_side(i-1, j+11);
 2395              		.loc 1 145 6 view .LVU494
 2396              	.LBB78:
 146:src/lcd.c     **** }
 2397              		.loc 1 146 3 view .LVU495
 2398 02b6 8D21     		movs	r1, #141
 2399 02b8 681E     		subs	r0, r5, #1
 2400 02ba FFF7FEFF 		bl	exp_right_side
 2401              	.LVL193:
 147:src/lcd.c     **** void exp_top (int i, int j) {
 2402              		.loc 1 147 1 is_stmt 0 view .LVU496
 2403 02be 2BE7     		b	.L109
 2404              	.L223:
 2405              		.align	2
 2406              	.L222:
 2407 02c0 00000000 		.word	.LANCHOR0
 2408 02c4 3D020008 		.word	134218301
 2409 02c8 00200010 		.word	268443648
 2410 02cc 6D020008 		.word	134218349
 2411 02d0 7D020008 		.word	134218365
ARM GAS  /tmp/ccZMYPCV.s 			page 54


 2412 02d4 00000000 		.word	.LC6
 2413 02d8 08000000 		.word	.LC7
 2414 02dc 10000000 		.word	.LC9
 2415 02e0 14000000 		.word	.LC10
 2416 02e4 18000000 		.word	.LC11
 2417              	.LVL194:
 2418              	.L217:
 147:src/lcd.c     **** void exp_top (int i, int j) {
 2419              		.loc 1 147 1 view .LVU497
 2420              	.LBE78:
 2421              	.LBE77:
 226:src/lcd.c     ****                 }
 2422              		.loc 1 226 5 is_stmt 1 view .LVU498
 2423              	.LBB79:
 2424              	.LBI79:
 133:src/lcd.c     ****   exp_left_side(i, j+11);
 2425              		.loc 1 133 6 view .LVU499
 2426              	.LBB80:
 134:src/lcd.c     **** }
 2427              		.loc 1 134 3 view .LVU500
 2428 02e8 8D21     		movs	r1, #141
 2429 02ea 2846     		mov	r0, r5
 2430 02ec FFF7FEFF 		bl	exp_left_side
 2431              	.LVL195:
 135:src/lcd.c     **** void exp_right_side (int i, int j) {
 2432              		.loc 1 135 1 is_stmt 0 view .LVU501
 2433 02f0 0DE7     		b	.L108
 2434              	.LVL196:
 2435              	.L216:
 135:src/lcd.c     **** void exp_right_side (int i, int j) {
 2436              		.loc 1 135 1 view .LVU502
 2437              	.LBE80:
 2438              	.LBE79:
 223:src/lcd.c     ****                 }
 2439              		.loc 1 223 5 is_stmt 1 view .LVU503
 2440 02f2 8221     		movs	r1, #130
 2441 02f4 2846     		mov	r0, r5
 2442 02f6 FFF7FEFF 		bl	exp_middle
 2443              	.LVL197:
 2444 02fa 03E7     		b	.L107
 2445              	.L215:
 220:src/lcd.c     ****                 }
 2446              		.loc 1 220 5 view .LVU504
 2447              	.LVL198:
 2448              	.LBB81:
 2449              	.LBI81:
 142:src/lcd.c     ****   exp_right_side(i, j);
 2450              		.loc 1 142 6 view .LVU505
 2451              	.LBB82:
 143:src/lcd.c     **** }
 2452              		.loc 1 143 3 view .LVU506
 2453 02fc 8221     		movs	r1, #130
 2454 02fe 2846     		mov	r0, r5
 2455 0300 FFF7FEFF 		bl	exp_right_side
 2456              	.LVL199:
 144:src/lcd.c     **** void exp_right_side_bottom (int i, int j) {
 2457              		.loc 1 144 1 is_stmt 0 view .LVU507
ARM GAS  /tmp/ccZMYPCV.s 			page 55


 2458 0304 F9E6     		b	.L106
 2459              	.LVL200:
 2460              	.L214:
 144:src/lcd.c     **** void exp_right_side_bottom (int i, int j) {
 2461              		.loc 1 144 1 view .LVU508
 2462              	.LBE82:
 2463              	.LBE81:
 217:src/lcd.c     ****                 }
 2464              		.loc 1 217 5 is_stmt 1 view .LVU509
 2465              	.LBB83:
 2466              	.LBI83:
 130:src/lcd.c     ****   exp_left_side(i+1, j);
 2467              		.loc 1 130 6 view .LVU510
 2468              	.LBB84:
 131:src/lcd.c     **** }
 2469              		.loc 1 131 3 view .LVU511
 2470 0306 8221     		movs	r1, #130
 2471 0308 681C     		adds	r0, r5, #1
 2472 030a FFF7FEFF 		bl	exp_left_side
 2473              	.LVL201:
 132:src/lcd.c     **** void exp_left_side_bottom (int i, int j) {
 2474              		.loc 1 132 1 is_stmt 0 view .LVU512
 2475 030e EFE6     		b	.L105
 2476              	.LVL202:
 2477              	.L213:
 132:src/lcd.c     **** void exp_left_side_bottom (int i, int j) {
 2478              		.loc 1 132 1 view .LVU513
 2479              	.LBE84:
 2480              	.LBE83:
 214:src/lcd.c     ****                 }
 2481              		.loc 1 214 5 is_stmt 1 view .LVU514
 2482 0310 8221     		movs	r1, #130
 2483 0312 2846     		mov	r0, r5
 2484 0314 FFF7FEFF 		bl	exp_top
 2485              	.LVL203:
 2486 0318 E5E6     		b	.L104
 2487              	.LVL204:
 2488              	.L117:
 291:src/lcd.c     **** 	  lcd_writeText(t20, "S:4");
 2489              		.loc 1 291 4 view .LVU515
 2490 031a 206B     		ldr	r0, [r4, #48]
 2491 031c 0A4B     		ldr	r3, .L224
 2492 031e 5022     		movs	r2, #80
 2493 0320 40F21D11 		movw	r1, #285
 2494 0324 9847     		blx	r3
 2495              	.LVL205:
 292:src/lcd.c     **** 	}	  
 2496              		.loc 1 292 4 view .LVU516
 2497 0326 206B     		ldr	r0, [r4, #48]
 2498 0328 084B     		ldr	r3, .L224+4
 2499 032a 0949     		ldr	r1, .L224+8
 2500 032c 9847     		blx	r3
 2501              	.LVL206:
 2502 032e 6EE7     		b	.L118
 2503              	.LVL207:
 2504              	.L221:
 240:src/lcd.c     ****         }
ARM GAS  /tmp/ccZMYPCV.s 			page 56


 2505              		.loc 1 240 4 view .LVU517
 2506 0330 8221     		movs	r1, #130
 2507 0332 4FF4A370 		mov	r0, #326
 2508 0336 FFF7FEFF 		bl	exp_middle
 2509              	.LVL208:
 2510 033a 02E7     		b	.L113
 2511              	.L220:
 237:src/lcd.c     ****         }
 2512              		.loc 1 237 4 view .LVU518
 2513 033c 8221     		movs	r1, #130
 2514 033e 0120     		movs	r0, #1
 2515 0340 FFF7FEFF 		bl	middle
 2516              	.LVL209:
 2517 0344 F8E6     		b	.L112
 2518              	.L225:
 2519 0346 00BF     		.align	2
 2520              	.L224:
 2521 0348 6D020008 		.word	134218349
 2522 034c 7D020008 		.word	134218365
 2523 0350 0C000000 		.word	.LC8
 2524              		.cfi_endproc
 2525              	.LFE24:
 2527              		.section	.text.finish_display,"ax",%progbits
 2528              		.align	1
 2529              		.p2align 2,,3
 2530              		.global	finish_display
 2531              		.syntax unified
 2532              		.thumb
 2533              		.thumb_func
 2534              		.fpu fpv4-sp-d16
 2536              	finish_display:
 2537              	.LFB25:
 351:src/lcd.c     ****   //  lcd_clear_buf();
 2538              		.loc 1 351 27 view -0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 0
 2541              		@ frame_needed = 0, uses_anonymous_args = 0
 353:src/lcd.c     ****   show_disp();
 2542              		.loc 1 353 3 view .LVU520
 351:src/lcd.c     ****   //  lcd_clear_buf();
 2543              		.loc 1 351 27 is_stmt 0 view .LVU521
 2544 0000 10B5     		push	{r4, lr}
 2545              		.cfi_def_cfa_offset 8
 2546              		.cfi_offset 4, -8
 2547              		.cfi_offset 14, -4
 2548 0002 82B0     		sub	sp, sp, #8
 2549              		.cfi_def_cfa_offset 16
 353:src/lcd.c     ****   show_disp();
 2550              		.loc 1 353 3 view .LVU522
 2551 0004 0021     		movs	r1, #0
 2552 0006 0091     		str	r1, [sp]
 2553 0008 0846     		mov	r0, r1
 2554 000a BC23     		movs	r3, #188
 2555 000c 4FF4C872 		mov	r2, #400
 2556 0010 044C     		ldr	r4, .L228
 2557 0012 A047     		blx	r4
 2558              	.LVL210:
ARM GAS  /tmp/ccZMYPCV.s 			page 57


 354:src/lcd.c     ****   lcd_refresh();
 2559              		.loc 1 354 3 is_stmt 1 view .LVU523
 2560 0014 FFF7FEFF 		bl	show_disp
 2561              	.LVL211:
 355:src/lcd.c     **** }
 2562              		.loc 1 355 3 view .LVU524
 2563 0018 034B     		ldr	r3, .L228+4
 356:src/lcd.c     **** 
 2564              		.loc 1 356 1 is_stmt 0 view .LVU525
 2565 001a 02B0     		add	sp, sp, #8
 2566              		.cfi_def_cfa_offset 8
 2567              		@ sp needed
 2568 001c BDE81040 		pop	{r4, lr}
 2569              		.cfi_restore 14
 2570              		.cfi_restore 4
 2571              		.cfi_def_cfa_offset 0
 355:src/lcd.c     **** }
 2572              		.loc 1 355 3 view .LVU526
 2573 0020 1847     		bx	r3	@ indirect register sibling call
 2574              	.LVL212:
 2575              	.L229:
 2576 0022 00BF     		.align	2
 2577              	.L228:
 2578 0024 3D020008 		.word	134218301
 2579 0028 31020008 		.word	134218289
 2580              		.cfi_endproc
 2581              	.LFE25:
 2583              		.section	.text.finish_PRT,"ax",%progbits
 2584              		.align	1
 2585              		.p2align 2,,3
 2586              		.global	finish_PRT
 2587              		.syntax unified
 2588              		.thumb
 2589              		.thumb_func
 2590              		.fpu fpv4-sp-d16
 2592              	finish_PRT:
 2593              	.LFB29:
 395:src/lcd.c     **** 
 396:src/lcd.c     **** void finish_PRT (void) {
 2594              		.loc 1 396 24 is_stmt 1 view -0
 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 0
 2597              		@ frame_needed = 0, uses_anonymous_args = 0
 397:src/lcd.c     ****   draw_PRT();
 2598              		.loc 1 397 3 view .LVU528
 396:src/lcd.c     ****   draw_PRT();
 2599              		.loc 1 396 24 is_stmt 0 view .LVU529
 2600 0000 10B5     		push	{r4, lr}
 2601              		.cfi_def_cfa_offset 8
 2602              		.cfi_offset 4, -8
 2603              		.cfi_offset 14, -4
 2604              		.loc 1 397 3 view .LVU530
 2605 0002 FFF7FEFF 		bl	draw_PRT
 2606              	.LVL213:
 398:src/lcd.c     ****   lcd_refresh();
 2607              		.loc 1 398 3 is_stmt 1 view .LVU531
 399:src/lcd.c     **** }
ARM GAS  /tmp/ccZMYPCV.s 			page 58


 2608              		.loc 1 399 1 is_stmt 0 view .LVU532
 2609 0006 BDE81040 		pop	{r4, lr}
 2610              		.cfi_restore 14
 2611              		.cfi_restore 4
 2612              		.cfi_def_cfa_offset 0
 398:src/lcd.c     ****   lcd_refresh();
 2613              		.loc 1 398 3 view .LVU533
 2614 000a 014B     		ldr	r3, .L232
 2615 000c 1847     		bx	r3	@ indirect register sibling call
 2616              	.LVL214:
 2617              	.L233:
 2618 000e 00BF     		.align	2
 2619              	.L232:
 2620 0010 31020008 		.word	134218289
 2621              		.cfi_endproc
 2622              	.LFE29:
 2624              		.section	.text.finish_LEQ,"ax",%progbits
 2625              		.align	1
 2626              		.p2align 2,,3
 2627              		.global	finish_LEQ
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2631              		.fpu fpv4-sp-d16
 2633              	finish_LEQ:
 2634              	.LFB30:
 400:src/lcd.c     **** 
 401:src/lcd.c     **** void finish_LEQ(void) { // refreshes the LEQ flag only
 2635              		.loc 1 401 23 is_stmt 1 view -0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 0
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
 402:src/lcd.c     ****   draw_LEQ();  
 2639              		.loc 1 402 3 view .LVU535
 401:src/lcd.c     ****   draw_LEQ();  
 2640              		.loc 1 401 23 is_stmt 0 view .LVU536
 2641 0000 10B5     		push	{r4, lr}
 2642              		.cfi_def_cfa_offset 8
 2643              		.cfi_offset 4, -8
 2644              		.cfi_offset 14, -4
 2645              		.loc 1 402 3 view .LVU537
 2646 0002 FFF7FEFF 		bl	draw_LEQ
 2647              	.LVL215:
 403:src/lcd.c     ****   lcd_refresh();
 2648              		.loc 1 403 3 is_stmt 1 view .LVU538
 404:src/lcd.c     **** }
 2649              		.loc 1 404 1 is_stmt 0 view .LVU539
 2650 0006 BDE81040 		pop	{r4, lr}
 2651              		.cfi_restore 14
 2652              		.cfi_restore 4
 2653              		.cfi_def_cfa_offset 0
 403:src/lcd.c     ****   lcd_refresh();
 2654              		.loc 1 403 3 view .LVU540
 2655 000a 014B     		ldr	r3, .L236
 2656 000c 1847     		bx	r3	@ indirect register sibling call
 2657              	.LVL216:
 2658              	.L237:
ARM GAS  /tmp/ccZMYPCV.s 			page 59


 2659 000e 00BF     		.align	2
 2660              	.L236:
 2661 0010 31020008 		.word	134218289
 2662              		.cfi_endproc
 2663              	.LFE30:
 2665              		.section	.text.finish_RPN,"ax",%progbits
 2666              		.align	1
 2667              		.p2align 2,,3
 2668              		.global	finish_RPN
 2669              		.syntax unified
 2670              		.thumb
 2671              		.thumb_func
 2672              		.fpu fpv4-sp-d16
 2674              	finish_RPN:
 2675              	.LFB31:
 405:src/lcd.c     ****   
 406:src/lcd.c     **** void finish_RPN(void) { // refreshes the RPN and RUN flags only
 2676              		.loc 1 406 23 is_stmt 1 view -0
 2677              		.cfi_startproc
 2678              		@ args = 0, pretend = 0, frame = 0
 2679              		@ frame_needed = 0, uses_anonymous_args = 0
 407:src/lcd.c     ****   draw_RPN_RCL();  
 2680              		.loc 1 407 3 view .LVU542
 406:src/lcd.c     ****   draw_RPN_RCL();  
 2681              		.loc 1 406 23 is_stmt 0 view .LVU543
 2682 0000 10B5     		push	{r4, lr}
 2683              		.cfi_def_cfa_offset 8
 2684              		.cfi_offset 4, -8
 2685              		.cfi_offset 14, -4
 2686              		.loc 1 407 3 view .LVU544
 2687 0002 FFF7FEFF 		bl	draw_RPN_RCL
 2688              	.LVL217:
 408:src/lcd.c     ****   lcd_refresh();
 2689              		.loc 1 408 3 is_stmt 1 view .LVU545
 409:src/lcd.c     **** }
 2690              		.loc 1 409 1 is_stmt 0 view .LVU546
 2691 0006 BDE81040 		pop	{r4, lr}
 2692              		.cfi_restore 14
 2693              		.cfi_restore 4
 2694              		.cfi_def_cfa_offset 0
 408:src/lcd.c     ****   lcd_refresh();
 2695              		.loc 1 408 3 view .LVU547
 2696 000a 014B     		ldr	r3, .L240
 2697 000c 1847     		bx	r3	@ indirect register sibling call
 2698              	.LVL218:
 2699              	.L241:
 2700 000e 00BF     		.align	2
 2701              	.L240:
 2702 0010 31020008 		.word	134218289
 2703              		.cfi_endproc
 2704              	.LFE31:
 2706              		.section	.text.do_all_dots,"ax",%progbits
 2707              		.align	1
 2708              		.p2align 2,,3
 2709              		.global	do_all_dots
 2710              		.syntax unified
 2711              		.thumb
ARM GAS  /tmp/ccZMYPCV.s 			page 60


 2712              		.thumb_func
 2713              		.fpu fpv4-sp-d16
 2715              	do_all_dots:
 2716              	.LFB32:
 410:src/lcd.c     **** 
 411:src/lcd.c     **** extern void all_menu_dots (void);
 412:src/lcd.c     **** 
 413:src/lcd.c     **** void do_all_dots(void) {
 2717              		.loc 1 413 24 is_stmt 1 view -0
 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 0
 2720              		@ frame_needed = 0, uses_anonymous_args = 0
 414:src/lcd.c     ****   for (int i=0; i<TOP_DOTS; i++) {
 2721              		.loc 1 414 3 view .LVU549
 2722              	.LBB85:
 2723              		.loc 1 414 8 view .LVU550
 2724              	.LVL219:
 2725              		.loc 1 414 17 view .LVU551
 2726              	.LBE85:
 413:src/lcd.c     ****   for (int i=0; i<TOP_DOTS; i++) {
 2727              		.loc 1 413 24 is_stmt 0 view .LVU552
 2728 0000 08B5     		push	{r3, lr}
 2729              		.cfi_def_cfa_offset 8
 2730              		.cfi_offset 3, -8
 2731              		.cfi_offset 14, -4
 2732 0002 094B     		ldr	r3, .L246
 2733              	.LBB90:
 2734              	.LBB86:
 2735              	.LBB87:
  43:src/lcd.c     **** }
 2736              		.loc 1 43 17 view .LVU553
 2737 0004 0121     		movs	r1, #1
 2738 0006 03F5C872 		add	r2, r3, #400
 2739              	.LVL220:
 2740              	.L243:
  43:src/lcd.c     **** }
 2741              		.loc 1 43 17 view .LVU554
 2742              	.LBE87:
 2743              	.LBE86:
 415:src/lcd.c     ****     set_dot(i);
 2744              		.loc 1 415 5 is_stmt 1 view .LVU555
 2745              	.LBB89:
 2746              	.LBI86:
  42:src/lcd.c     ****         dots[n] = 1;
 2747              		.loc 1 42 6 view .LVU556
 2748              	.LBB88:
  43:src/lcd.c     **** }
 2749              		.loc 1 43 9 view .LVU557
  43:src/lcd.c     **** }
 2750              		.loc 1 43 17 is_stmt 0 view .LVU558
 2751 000a 03F8011F 		strb	r1, [r3, #1]!
 2752              	.LVL221:
  43:src/lcd.c     **** }
 2753              		.loc 1 43 17 view .LVU559
 2754              	.LBE88:
 2755              	.LBE89:
 414:src/lcd.c     ****     set_dot(i);
ARM GAS  /tmp/ccZMYPCV.s 			page 61


 2756              		.loc 1 414 29 is_stmt 1 view .LVU560
 414:src/lcd.c     ****     set_dot(i);
 2757              		.loc 1 414 17 view .LVU561
 414:src/lcd.c     ****     set_dot(i);
 2758              		.loc 1 414 3 is_stmt 0 view .LVU562
 2759 000e 9342     		cmp	r3, r2
 2760 0010 FBD1     		bne	.L243
 2761              	.LBE90:
 416:src/lcd.c     ****   }
 417:src/lcd.c     ****   all_menu_dots();
 2762              		.loc 1 417 3 is_stmt 1 view .LVU563
 2763 0012 FFF7FEFF 		bl	all_menu_dots
 2764              	.LVL222:
 418:src/lcd.c     ****   finish_display();
 2765              		.loc 1 418 3 view .LVU564
 2766 0016 FFF7FEFF 		bl	finish_display
 2767              	.LVL223:
 419:src/lcd.c     ****   clr_dot(RCL_annun);
 2768              		.loc 1 419 3 view .LVU565
 2769              	.LBB91:
 2770              	.LBI91:
  45:src/lcd.c     ****         dots[n] = 0;
 2771              		.loc 1 45 6 view .LVU566
 2772              	.LBB92:
  46:src/lcd.c     **** }
 2773              		.loc 1 46 9 view .LVU567
  46:src/lcd.c     **** }
 2774              		.loc 1 46 17 is_stmt 0 view .LVU568
 2775 001a 044B     		ldr	r3, .L246+4
 2776 001c 0022     		movs	r2, #0
 2777 001e 83F88A20 		strb	r2, [r3, #138]
 2778              	.LVL224:
  46:src/lcd.c     **** }
 2779              		.loc 1 46 17 view .LVU569
 2780              	.LBE92:
 2781              	.LBE91:
 420:src/lcd.c     ****   clr_dot(LIT_EQ);
 2782              		.loc 1 420 3 is_stmt 1 view .LVU570
 2783              	.LBB93:
 2784              	.LBI93:
  45:src/lcd.c     ****         dots[n] = 0;
 2785              		.loc 1 45 6 view .LVU571
 2786              	.LBB94:
  46:src/lcd.c     **** }
 2787              		.loc 1 46 9 view .LVU572
  46:src/lcd.c     **** }
 2788              		.loc 1 46 17 is_stmt 0 view .LVU573
 2789 0022 83F88420 		strb	r2, [r3, #132]
 2790              	.LVL225:
  46:src/lcd.c     **** }
 2791              		.loc 1 46 17 view .LVU574
 2792              	.LBE94:
 2793              	.LBE93:
 421:src/lcd.c     **** }
 2794              		.loc 1 421 1 view .LVU575
 2795 0026 08BD     		pop	{r3, pc}
 2796              	.L247:
ARM GAS  /tmp/ccZMYPCV.s 			page 62


 2797              		.align	2
 2798              	.L246:
 2799 0028 FFFFFFFF 		.word	.LANCHOR0-1
 2800 002c 00000000 		.word	.LANCHOR0
 2801              		.cfi_endproc
 2802              	.LFE32:
 2804              		.section	.text.show_progtrace,"ax",%progbits
 2805              		.align	1
 2806              		.p2align 2,,3
 2807              		.global	show_progtrace
 2808              		.syntax unified
 2809              		.thumb
 2810              		.thumb_func
 2811              		.fpu fpv4-sp-d16
 2813              	show_progtrace:
 2814              	.LVL226:
 2815              	.LFB33:
 422:src/lcd.c     **** #endif
 423:src/lcd.c     **** 
 424:src/lcd.c     **** void show_progtrace(char *buf) {
 2816              		.loc 1 424 32 is_stmt 1 view -0
 2817              		.cfi_startproc
 2818              		@ args = 0, pretend = 0, frame = 0
 2819              		@ frame_needed = 0, uses_anonymous_args = 0
 2820              		@ link register save eliminated.
 425:src/lcd.c     **** }
 2821              		.loc 1 425 1 view .LVU577
 2822 0000 7047     		bx	lr
 2823              		.cfi_endproc
 2824              	.LFE33:
 2826 0002 00BF     		.section	.text.show_stack,"ax",%progbits
 2827              		.align	1
 2828              		.p2align 2,,3
 2829              		.global	show_stack
 2830              		.syntax unified
 2831              		.thumb
 2832              		.thumb_func
 2833              		.fpu fpv4-sp-d16
 2835              	show_stack:
 2836              	.LFB40:
 2837              		.cfi_startproc
 2838              		@ args = 0, pretend = 0, frame = 0
 2839              		@ frame_needed = 0, uses_anonymous_args = 0
 2840              		@ link register save eliminated.
 2841 0000 7047     		bx	lr
 2842              		.cfi_endproc
 2843              	.LFE40:
 2845 0002 00BF     		.section	.text.show_flags,"ax",%progbits
 2846              		.align	1
 2847              		.p2align 2,,3
 2848              		.global	show_flags
 2849              		.syntax unified
 2850              		.thumb
 2851              		.thumb_func
 2852              		.fpu fpv4-sp-d16
 2854              	show_flags:
 2855              	.LFB38:
ARM GAS  /tmp/ccZMYPCV.s 			page 63


 2856              		.cfi_startproc
 2857              		@ args = 0, pretend = 0, frame = 0
 2858              		@ frame_needed = 0, uses_anonymous_args = 0
 2859              		@ link register save eliminated.
 2860 0000 7047     		bx	lr
 2861              		.cfi_endproc
 2862              	.LFE38:
 2864 0002 00BF     		.section	.text.wait_for_display,"ax",%progbits
 2865              		.align	1
 2866              		.p2align 2,,3
 2867              		.global	wait_for_display
 2868              		.syntax unified
 2869              		.thumb
 2870              		.thumb_func
 2871              		.fpu fpv4-sp-d16
 2873              	wait_for_display:
 2874              	.LFB36:
 426:src/lcd.c     **** 
 427:src/lcd.c     **** void show_stack(void) {
 428:src/lcd.c     **** }
 429:src/lcd.c     **** 
 430:src/lcd.c     **** void show_flags(void) {
 431:src/lcd.c     **** }
 432:src/lcd.c     **** 
 433:src/lcd.c     **** void wait_for_display(void)
 434:src/lcd.c     **** {
 2875              		.loc 1 434 1 view -0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 0
 2878              		@ frame_needed = 0, uses_anonymous_args = 0
 2879              		@ link register save eliminated.
 435:src/lcd.c     **** }
 2880              		.loc 1 435 1 view .LVU579
 2881 0000 7047     		bx	lr
 2882              		.cfi_endproc
 2883              	.LFE36:
 2885 0002 00BF     		.section	.bss.dots,"aw",%nobits
 2886              		.align	2
 2887              		.set	.LANCHOR0,. + 0
 2890              	dots:
 2891 0000 00000000 		.space	400
 2891      00000000 
 2891      00000000 
 2891      00000000 
 2891      00000000 
 2892              		.text
 2893              	.Letext0:
 2894              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2895              		.file 3 "dmcp/ff_ifc.h"
 2896              		.file 4 "dmcp/dmcp.h"
 2897              		.file 5 "src/decNumber/decContext.h"
 2898              		.file 6 "src/decNumber/decNumber.h"
 2899              		.file 7 "src/decNumber/decimal64.h"
 2900              		.file 8 "src/decNumber/decimal128.h"
 2901              		.file 9 "src/xeq.h"
 2902              		.file 10 "src/data.h"
 2903              		.file 11 "src/display.h"
ARM GAS  /tmp/ccZMYPCV.s 			page 64


 2904              		.file 12 "src/storage.h"
 2905              		.file 13 "src/pretty.h"
ARM GAS  /tmp/ccZMYPCV.s 			page 65


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lcd.c
     /tmp/ccZMYPCV.s:18     .text.set_dot:0000000000000000 $t
     /tmp/ccZMYPCV.s:27     .text.set_dot:0000000000000000 set_dot
     /tmp/ccZMYPCV.s:46     .text.set_dot:0000000000000008 $d
     /tmp/ccZMYPCV.s:51     .text.clr_dot:0000000000000000 $t
     /tmp/ccZMYPCV.s:59     .text.clr_dot:0000000000000000 clr_dot
     /tmp/ccZMYPCV.s:77     .text.clr_dot:0000000000000008 $d
     /tmp/ccZMYPCV.s:82     .text.is_dot:0000000000000000 $t
     /tmp/ccZMYPCV.s:90     .text.is_dot:0000000000000000 is_dot
     /tmp/ccZMYPCV.s:109    .text.is_dot:0000000000000008 $d
     /tmp/ccZMYPCV.s:114    .text.reset_disp:0000000000000000 $t
     /tmp/ccZMYPCV.s:122    .text.reset_disp:0000000000000000 reset_disp
     /tmp/ccZMYPCV.s:320    .text.reset_disp:0000000000000068 $d
     /tmp/ccZMYPCV.s:325    .text.left_side:0000000000000000 $t
     /tmp/ccZMYPCV.s:333    .text.left_side:0000000000000000 left_side
     /tmp/ccZMYPCV.s:416    .text.left_side:0000000000000054 $d
     /tmp/ccZMYPCV.s:421    .text.left_side_top:0000000000000000 $t
     /tmp/ccZMYPCV.s:429    .text.left_side_top:0000000000000000 left_side_top
     /tmp/ccZMYPCV.s:445    .text.left_side_bottom:0000000000000000 $t
     /tmp/ccZMYPCV.s:453    .text.left_side_bottom:0000000000000000 left_side_bottom
     /tmp/ccZMYPCV.s:475    .text.right_side:0000000000000000 $t
     /tmp/ccZMYPCV.s:483    .text.right_side:0000000000000000 right_side
     /tmp/ccZMYPCV.s:565    .text.right_side:000000000000005c $d
     /tmp/ccZMYPCV.s:570    .text.right_side_top:0000000000000000 $t
     /tmp/ccZMYPCV.s:578    .text.right_side_top:0000000000000000 right_side_top
     /tmp/ccZMYPCV.s:594    .text.right_side_bottom:0000000000000000 $t
     /tmp/ccZMYPCV.s:602    .text.right_side_bottom:0000000000000000 right_side_bottom
     /tmp/ccZMYPCV.s:624    .text.top:0000000000000000 $t
     /tmp/ccZMYPCV.s:632    .text.top:0000000000000000 top
     /tmp/ccZMYPCV.s:699    .text.top:0000000000000040 $d
     /tmp/ccZMYPCV.s:704    .text.middle:0000000000000000 $t
     /tmp/ccZMYPCV.s:712    .text.middle:0000000000000000 middle
     /tmp/ccZMYPCV.s:782    .text.middle:0000000000000040 $d
     /tmp/ccZMYPCV.s:788    .text.bottom:0000000000000000 $t
     /tmp/ccZMYPCV.s:796    .text.bottom:0000000000000000 bottom
     /tmp/ccZMYPCV.s:866    .text.bottom:0000000000000048 $d
     /tmp/ccZMYPCV.s:871    .text.decimal:0000000000000000 $t
     /tmp/ccZMYPCV.s:879    .text.decimal:0000000000000000 decimal
     /tmp/ccZMYPCV.s:916    .text.decimal:0000000000000018 $d
     /tmp/ccZMYPCV.s:921    .text.comma:0000000000000000 $t
     /tmp/ccZMYPCV.s:929    .text.comma:0000000000000000 comma
     /tmp/ccZMYPCV.s:983    .text.comma:000000000000002c $d
     /tmp/ccZMYPCV.s:988    .text.exp_left_side:0000000000000000 $t
     /tmp/ccZMYPCV.s:996    .text.exp_left_side:0000000000000000 exp_left_side
     /tmp/ccZMYPCV.s:1063   .text.exp_left_side:0000000000000040 $d
     /tmp/ccZMYPCV.s:1068   .text.exp_left_side_top:0000000000000000 $t
     /tmp/ccZMYPCV.s:1076   .text.exp_left_side_top:0000000000000000 exp_left_side_top
     /tmp/ccZMYPCV.s:1095   .text.exp_left_side_bottom:0000000000000000 $t
     /tmp/ccZMYPCV.s:1103   .text.exp_left_side_bottom:0000000000000000 exp_left_side_bottom
     /tmp/ccZMYPCV.s:1122   .text.exp_right_side:0000000000000000 $t
     /tmp/ccZMYPCV.s:1130   .text.exp_right_side:0000000000000000 exp_right_side
     /tmp/ccZMYPCV.s:1197   .text.exp_right_side:0000000000000044 $d
     /tmp/ccZMYPCV.s:1202   .text.exp_right_side_top:0000000000000000 $t
     /tmp/ccZMYPCV.s:1210   .text.exp_right_side_top:0000000000000000 exp_right_side_top
     /tmp/ccZMYPCV.s:1226   .text.exp_right_side_bottom:0000000000000000 $t
     /tmp/ccZMYPCV.s:1234   .text.exp_right_side_bottom:0000000000000000 exp_right_side_bottom
ARM GAS  /tmp/ccZMYPCV.s 			page 66


     /tmp/ccZMYPCV.s:1256   .text.exp_top:0000000000000000 $t
     /tmp/ccZMYPCV.s:1264   .text.exp_top:0000000000000000 exp_top
     /tmp/ccZMYPCV.s:1323   .text.exp_top:0000000000000034 $d
     /tmp/ccZMYPCV.s:1328   .text.exp_bottom:0000000000000000 $t
     /tmp/ccZMYPCV.s:1336   .text.exp_bottom:0000000000000000 exp_bottom
     /tmp/ccZMYPCV.s:1398   .text.exp_bottom:0000000000000038 $d
     /tmp/ccZMYPCV.s:1403   .text.exp_middle:0000000000000000 $t
     /tmp/ccZMYPCV.s:1411   .text.exp_middle:0000000000000000 exp_middle
     /tmp/ccZMYPCV.s:1477   .text.exp_middle:0000000000000040 $d
     /tmp/ccZMYPCV.s:1482   .rodata.draw_RPN_RCL.str1.4:0000000000000000 $d
     /tmp/ccZMYPCV.s:1492   .text.draw_RPN_RCL:0000000000000000 $t
     /tmp/ccZMYPCV.s:1500   .text.draw_RPN_RCL:0000000000000000 draw_RPN_RCL
     /tmp/ccZMYPCV.s:1597   .text.draw_RPN_RCL:0000000000000070 $d
     /tmp/ccZMYPCV.s:1609   .rodata.draw_LEQ.str1.4:0000000000000000 $d
     /tmp/ccZMYPCV.s:1616   .text.draw_LEQ:0000000000000000 $t
     /tmp/ccZMYPCV.s:1624   .text.draw_LEQ:0000000000000000 draw_LEQ
     /tmp/ccZMYPCV.s:1692   .text.draw_LEQ:0000000000000044 $d
     /tmp/ccZMYPCV.s:1703   .rodata.draw_PRT.str1.4:0000000000000000 $d
     /tmp/ccZMYPCV.s:1707   .text.draw_PRT:0000000000000000 $t
     /tmp/ccZMYPCV.s:1715   .text.draw_PRT:0000000000000000 draw_PRT
     /tmp/ccZMYPCV.s:1766   .text.draw_PRT:000000000000002c $d
     /tmp/ccZMYPCV.s:1775   .rodata.show_disp.str1.4:0000000000000000 $d
     /tmp/ccZMYPCV.s:1794   .text.show_disp:0000000000000000 $t
     /tmp/ccZMYPCV.s:1802   .text.show_disp:0000000000000000 show_disp
     /tmp/ccZMYPCV.s:2407   .text.show_disp:00000000000002c0 $d
     /tmp/ccZMYPCV.s:2428   .text.show_disp:00000000000002e8 $t
     /tmp/ccZMYPCV.s:2521   .text.show_disp:0000000000000348 $d
     /tmp/ccZMYPCV.s:2528   .text.finish_display:0000000000000000 $t
     /tmp/ccZMYPCV.s:2536   .text.finish_display:0000000000000000 finish_display
     /tmp/ccZMYPCV.s:2578   .text.finish_display:0000000000000024 $d
     /tmp/ccZMYPCV.s:2584   .text.finish_PRT:0000000000000000 $t
     /tmp/ccZMYPCV.s:2592   .text.finish_PRT:0000000000000000 finish_PRT
     /tmp/ccZMYPCV.s:2620   .text.finish_PRT:0000000000000010 $d
     /tmp/ccZMYPCV.s:2625   .text.finish_LEQ:0000000000000000 $t
     /tmp/ccZMYPCV.s:2633   .text.finish_LEQ:0000000000000000 finish_LEQ
     /tmp/ccZMYPCV.s:2661   .text.finish_LEQ:0000000000000010 $d
     /tmp/ccZMYPCV.s:2666   .text.finish_RPN:0000000000000000 $t
     /tmp/ccZMYPCV.s:2674   .text.finish_RPN:0000000000000000 finish_RPN
     /tmp/ccZMYPCV.s:2702   .text.finish_RPN:0000000000000010 $d
     /tmp/ccZMYPCV.s:2707   .text.do_all_dots:0000000000000000 $t
     /tmp/ccZMYPCV.s:2715   .text.do_all_dots:0000000000000000 do_all_dots
     /tmp/ccZMYPCV.s:2799   .text.do_all_dots:0000000000000028 $d
     /tmp/ccZMYPCV.s:2805   .text.show_progtrace:0000000000000000 $t
     /tmp/ccZMYPCV.s:2813   .text.show_progtrace:0000000000000000 show_progtrace
     /tmp/ccZMYPCV.s:2827   .text.show_stack:0000000000000000 $t
     /tmp/ccZMYPCV.s:2835   .text.show_stack:0000000000000000 show_stack
     /tmp/ccZMYPCV.s:2846   .text.show_flags:0000000000000000 $t
     /tmp/ccZMYPCV.s:2854   .text.show_flags:0000000000000000 show_flags
     /tmp/ccZMYPCV.s:2865   .text.wait_for_display:0000000000000000 $t
     /tmp/ccZMYPCV.s:2873   .text.wait_for_display:0000000000000000 wait_for_display
     /tmp/ccZMYPCV.s:2886   .bss.dots:0000000000000000 $d
     /tmp/ccZMYPCV.s:2890   .bss.dots:0000000000000000 dots

UNDEFINED SYMBOLS
dot
main_ram
all_menu_dots
ARM GAS  /tmp/ccZMYPCV.s 			page 67



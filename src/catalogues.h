/* This file is part of 34S.
 * 
 * 34S is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * 34S is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * 
 * This file is automatically generated.
 * Changes will not be preserved.
 */

#ifndef CATALOGUES_H_INCLUDED
#define CATALOGUES_H_INCLUDED

static const unsigned char opcode_breaks[KIND_MAX] = {
	52, 197, 153, 47, 12, 153, 47, 
};

#define SIZE_catalogue 104
static const unsigned char catalogue[] = {
	0x44, 0x5a, 0x96, 0x74, 0xc1, 0x60,
	0x98, 0x33, 0xec, 0xa2, 0x3a, 0x58,
	0x66, 0xd0, 0x7d, 0x45, 0xb1, 0x51,
	0x09, 0x79, 0x4c, 0xd3, 0x46, 0x21,
	0x0b, 0x44, 0x8f, 0xa6, 0xb1, 0x26,
	0x49, 0xd1, 0x86, 0xe9, 0xbb, 0x6a,
	0x9a, 0xb6, 0x5f, 0x13, 0x70, 0x57,
	0xa6, 0xb5, 0xb9, 0x42, 0x9c, 0x56,
	0x7d, 0x2a, 0x61, 0xd9, 0xc6, 0x6d,
	0x99, 0x61, 0x5b, 0x17, 0x00, 0xc3,
	0x6c, 0x9b, 0x64, 0x5f, 0x0b, 0x3f,
	0x30, 0xac, 0x1b, 0x07, 0x40, 0x11,
	0xf3, 0x0b, 0x14, 0x28, 0xdb, 0x76,
	0x25, 0xb8, 0x0d, 0x57, 0x83, 0x29,
	0x0d, 0x43, 0x10, 0xe4, 0x41, 0xb3,
	0x2b, 0x1b, 0xc6, 0x10, 0xa0, 0x27,
	0xab, 0xd2, 0xa8, 0x9f, 0xaf, 0x2b,
	0xaa, 0xfa, 0xbf, 0xb0, 0x2c, 0x1a,
	0xec, 0xa1, 0x2a, 0xd9, 0xe4, 0xa5,
	0xa2, 0x68, 0xda, 0x06, 0x85, 0xb5,
	0x60, 0x50, 0x57, 0x29, 0xa7, 0x71,
	0x17, 0x25, 0xbd, 0xa6,
};

#define SIZE_program_xfcn 126
static const unsigned char program_xfcn[] = {
	0x44, 0x5a, 0x96, 0x76, 0xf8, 0x30,
	0x58, 0x26, 0x0e, 0xfa, 0x3e, 0xca,
	0x23, 0xa5, 0x86, 0x6d, 0x1c, 0x32,
	0x59, 0xc2, 0x1f, 0x51, 0x6c, 0x54,
	0x42, 0x5e, 0x53, 0x34, 0xd1, 0x88,
	0x42, 0xef, 0xb4, 0x48, 0xfa, 0x6b,
	0x12, 0x64, 0x9d, 0x18, 0x6e, 0x9b,
	0xb6, 0xa9, 0xab, 0x65, 0xf1, 0x37,
	0x05, 0x7a, 0x6b, 0x49, 0x46, 0xe5,
	0x0a, 0x71, 0x59, 0xf4, 0xa9, 0x87,
	0xbf, 0xaf, 0xf6, 0x71, 0x9b, 0x5d,
	0xd9, 0x96, 0x15, 0xb1, 0x5d, 0x9c,
	0x03, 0x0d, 0xb2, 0x6d, 0x91, 0x7c,
	0x2c, 0x95, 0xbc, 0xaf, 0x43, 0xf2,
	0xf3, 0xbd, 0x70, 0xab, 0xe7, 0x06,
	0xc1, 0xc6, 0x84, 0x01, 0x1f, 0xbd,
	0x8c, 0x2b, 0xdf, 0x14, 0x28, 0xdb,
	0x76, 0x25, 0xb8, 0x0d, 0x57, 0x83,
	0x29, 0x0d, 0x43, 0x10, 0xe4, 0x41,
	0xb3, 0x2b, 0x1b, 0xc6, 0x10, 0xa0,
	0x27, 0xab, 0xd2, 0xa8, 0x9f, 0xaf,
	0x2b, 0xaa, 0xfa, 0xbf, 0xb0, 0x2c,
	0x1a, 0xec, 0xa1, 0x2a, 0xd9, 0xe4,
	0xa5, 0xa2, 0x68, 0xda, 0x06, 0x85,
	0xb5, 0x60, 0x50, 0x57, 0x2d, 0xca,
	0x69, 0xdc, 0x45, 0xc9, 0x6f, 0x69,
	0x9c, 0xc0,
};

#define SIZE_cplx_catalogue 25
static const unsigned char cplx_catalogue[] = {
	0x79, 0x67, 0xdc, 0x7e, 0x06, 0x3a,
	0xce, 0xa1, 0x0d, 0xdf, 0x79, 0x9f,
	0xa7, 0xee, 0x6b, 0x77, 0xa7, 0x37,
	0xf9, 0xd4, 0x7c, 0xde, 0x07, 0x89,
	0xe4, 0xa4, 0x2b, 0x59, 0xc9, 0xfd,
	0x76, 0x40,
};

#define SIZE_stats_catalogue 17
static const unsigned char stats_catalogue[] = {
	0x18, 0x05, 0xc1, 0xa0, 0x5d, 0x17,
	0xc9, 0x71, 0x58, 0x61, 0x16, 0x85,
	0x95, 0xb4, 0x54, 0x17, 0x85, 0x51,
	0x4c, 0x57, 0x5b, 0xc0,
};

#define SIZE_sums_catalogue 14
static const unsigned char sums_catalogue[] = {
	0x14, 0x44, 0xb1, 0x34, 0x4a, 0x13,
	0x84, 0xc1, 0x20, 0x45, 0x11, 0x04,
	0xf1, 0x1c, 0x49, 0x11, 0x85, 0x00,
};

#define SIZE_prob_catalogue 54
static const unsigned char prob_catalogue[] = {
	0x52, 0x14, 0x75, 0x95, 0x49, 0x57,
	0x55, 0xc5, 0xb1, 0x5e, 0x51, 0x54,
	0x45, 0x91, 0x46, 0x4f, 0x96, 0x24,
	0xfd, 0x40, 0x54, 0x55, 0x05, 0xa1,
	0x52, 0x55, 0xd5, 0x65, 0xa9, 0x58,
	0x56, 0x95, 0x95, 0xad, 0x5b, 0x55,
	0x15, 0x35, 0xa5, 0x55, 0x53, 0x94,
	0xd5, 0x9d, 0x4f, 0x52, 0xd4, 0xa5,
	0x99, 0x4c, 0x4e, 0xd6, 0x14, 0xf1,
	0x3d, 0x50, 0x94, 0x15, 0x8d, 0x43,
	0x57, 0xd3, 0x54, 0xe5, 0x3a, 0x4e,
	0x16, 0x00,
};

#define SIZE_int_catalogue 60
static const unsigned char int_catalogue[] = {
	0x44, 0x6f, 0x83, 0x06, 0xfa, 0x3e,
	0xdc, 0x32, 0x59, 0xc2, 0x10, 0xaf,
	0xb4, 0x48, 0xfa, 0x6b, 0x19, 0x76,
	0xb4, 0x94, 0xbf, 0xaf, 0xf6, 0x71,
	0x9b, 0x5d, 0xd9, 0x96, 0xc5, 0x76,
	0x70, 0x0c, 0x36, 0xc8, 0x95, 0xbc,
	0xaf, 0x43, 0xf2, 0xf3, 0xbd, 0x6f,
	0x91, 0xa1, 0x00, 0xbd, 0xaf, 0x7c,
	0x51, 0x89, 0x0d, 0x4c, 0xa4, 0x41,
	0xb3, 0x2b, 0x1b, 0xca, 0xf4, 0xaa,
	0xaf, 0x2b, 0xaa, 0xfa, 0xbf, 0xb0,
	0x2c, 0x1a, 0xec, 0xab, 0x4a, 0x50,
	0x57, 0x2d, 0xcc,
};

#define SIZE_test_catalogue 38
static const unsigned char test_catalogue[] = {
	0xbf, 0x6f, 0xcc, 0x68, 0xe7, 0x2f,
	0xcb, 0xdb, 0xaa, 0xee, 0xbc, 0x2e,
	0xf2, 0xf2, 0xe9, 0xba, 0xee, 0xdb,
	0xb3, 0x2c, 0x34, 0xcb, 0xbc, 0x0e,
	0xd8, 0x27, 0x4d, 0xa2, 0xe0, 0xbe,
	0x2e, 0x8d, 0x42, 0xe4, 0xd0, 0x3d,
	0x6c, 0x5b, 0x18, 0xd5, 0x35, 0xac,
	0x4b, 0x22, 0xc7, 0x2d, 0xcf, 0x60,
};

#define SIZE_prog_catalogue 84
static const unsigned char prog_catalogue[] = {
	0xb3, 0x0d, 0x1c, 0xbc, 0x79, 0x1d,
	0x47, 0x81, 0xc8, 0x74, 0x2a, 0x31,
	0xeb, 0x54, 0x42, 0xb4, 0x6d, 0x31,
	0xba, 0x97, 0xba, 0x0e, 0x0b, 0x7a,
	0xdf, 0xca, 0xb2, 0x7c, 0xa3, 0x2b,
	0xcb, 0x72, 0x93, 0x32, 0xd6, 0xb4,
	0xad, 0x4c, 0x3c, 0xe2, 0xc4, 0x4d,
	0xe3, 0x77, 0x10, 0x0d, 0x0d, 0xc3,
	0x8c, 0x70, 0x39, 0x30, 0xea, 0xe0,
	0xdf, 0x1d, 0x8c, 0xd1, 0xb4, 0xb1,
	0x2b, 0xcb, 0x22, 0xc0, 0xe1, 0xb2,
	0xcd, 0x20, 0xde, 0xb7, 0x30, 0x2a,
	0x92, 0xa7, 0x08, 0x0e, 0x8c, 0xba,
	0x9e, 0xa8, 0xc1, 0x4a, 0xe2, 0xb7,
	0x04, 0xc6, 0xcf, 0x3c, 0x8b, 0x26,
	0xcb, 0x8e, 0xcc, 0x80, 0xed, 0x3b,
	0xb2, 0x33, 0xd0, 0xf0, 0x3c, 0x4e,
	0xf3, 0xcb, 0x21,
};

#define SIZE_mode_catalogue 54
static const unsigned char mode_catalogue[] = {
	0x29, 0x48, 0xc2, 0x90, 0x8b, 0xc0,
	0x06, 0x63, 0x98, 0xe5, 0x1f, 0x88,
	0x01, 0xfc, 0x7c, 0xb9, 0x49, 0x81,
	0x8c, 0xcf, 0x24, 0x49, 0xc2, 0x6c,
	0x62, 0x19, 0x49, 0x32, 0x48, 0x9a,
	0x19, 0x30, 0xd2, 0x10, 0x83, 0xc4,
	0xb0, 0x92, 0x20, 0x87, 0x32, 0x0a,
	0x63, 0x10, 0xc7, 0x32, 0x4a, 0x73,
	0x14, 0xc6, 0x23, 0x8c, 0xe0, 0xe0,
	0x39, 0xc3, 0x08, 0x62, 0x14, 0x8d,
	0xbc, 0x4f, 0x83, 0xdc, 0x99, 0xc9,
	0x72, 0x40,
};

#define SIZE_alpha_catalogue 14
static const unsigned char alpha_catalogue[] = {
	0x0d, 0x4a, 0xc2, 0x80, 0x9e, 0xaf,
	0x4a, 0xa2, 0x7e, 0xba, 0xaf, 0xab,
	0xfb, 0x02, 0xc1, 0x28, 0x4a, 0xb0,
};

#define SIZE_conv_catalogue 88
static const unsigned char conv_catalogue[] = {
	0xda, 0xdb, 0x8c, 0x8a, 0x2b, 0x2d,
	0xdd, 0x37, 0x27, 0x39, 0x31, 0x33,
	0x11, 0x16, 0x05, 0xdc, 0xde, 0x19,
	0x1d, 0x1b, 0x13, 0x15, 0x0d, 0x0f,
	0x8d, 0x08, 0x8f, 0x0a, 0x2a, 0x2c,
	0x47, 0x43, 0x45, 0x17, 0x3f, 0x30,
	0x32, 0x34, 0x04, 0x00, 0x02, 0x06,
	0x26, 0x22, 0x20, 0x28, 0x24, 0x35,
	0x2f, 0x01, 0x23, 0x10, 0x0c, 0x0e,
	0x21, 0x12, 0x14, 0x3b, 0x18, 0x1a,
	0x1c, 0x1e, 0x29, 0x2e, 0x09, 0x36,
	0x38, 0x3e, 0x3a, 0x3c, 0x40, 0x25,
	0xdf, 0x3d, 0x8b, 0x8e, 0x03, 0x07,
	0x4b, 0x49, 0x41, 0x0b, 0x4a, 0x48,
	0x46, 0x42, 0x44, 0x1f,
};

#define SIZE_matrix_catalogue 19
static const unsigned char matrix_catalogue[] = {
	0x64, 0x1c, 0x93, 0x64, 0xd8, 0x35,
	0xdc, 0x73, 0x6d, 0x8a, 0x6f, 0x98,
	0xb6, 0xf5, 0xc6, 0x6f, 0xd8, 0xf6,
	0x45, 0xc8, 0x63, 0x98, 0xd6, 0x30,
};

#define SIZE_alpha_symbols 19
static const char alpha_symbols[] = {
	0054, 0072, 0073, 0047, 0042, 0052, 0100, 0137,
	0176, 0045, 0044, 0014, 0036, 0037, 0216, 0256,
	0222, 0140, 0043,
};

#define SIZE_alpha_compares 10
static const char alpha_compares[] = {
	0074, 0011, 0075, 0035, 0012, 0076, 0133, 0135,
	0173, 0175,
};

#define SIZE_alpha_arrows 9
static const char alpha_arrows[] = {
	0015, 0016, 0020, 0017, 0003, 0004, 0237, 0136,
	0177,
};

#define SIZE_alpha_superscripts 11
static const char alpha_superscripts[] = {
	0005, 0232, 0200, 0024, 0234, 0001, 0031, 0002,
	0032, 0235, 0220,
};

#define SIZE_alpha_subscripts 26
static const char alpha_subscripts[] = {
	0270, 0005, 0271, 0272, 0232, 0200, 0327, 0230,
	0273, 0024, 0206, 0274, 0367, 0033, 0275, 0276,
	0223, 0277, 0201, 0213, 0234, 0214, 0231, 0235,
	0220, 0233,
};

#define SIZE_alpha_letters 40
static const char alpha_letters[] = {
	0300, 0301, 0302, 0303, 0210, 0304, 0305, 0306,
	0307, 0204, 0310, 0311, 0312, 0313, 0236, 0314,
	0315, 0316, 0317, 0320, 0321, 0322, 0323, 0324,
	0025, 0325, 0326, 0030, 0330, 0331, 0332, 0333,
	0334, 0001, 0031, 0002, 0335, 0032, 0336, 0337,
};

#define SIZE_alpha_letters_lower 40
static const char alpha_letters_lower[] = {
	0340, 0341, 0342, 0343, 0211, 0344, 0345, 0346,
	0347, 0205, 0350, 0351, 0352, 0353, 0236, 0354,
	0355, 0356, 0357, 0360, 0361, 0362, 0363, 0364,
	0026, 0365, 0366, 0030, 0370, 0371, 0372, 0373,
	0374, 0001, 0031, 0002, 0375, 0032, 0376, 0377,
};

/* Total number of catalogue entries 609
 * Total number of conversion entries 88
 * Total number of alpha entries 155
 */
#endif
